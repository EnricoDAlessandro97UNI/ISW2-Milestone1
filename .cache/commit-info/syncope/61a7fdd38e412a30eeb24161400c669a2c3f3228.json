{"sha":"61a7fdd38e412a30eeb24161400c669a2c3f3228","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYxYTdmZGQzOGU0MTJhMzBlZWIyNDE2MTQwMGM2NjlhMmMzZjMyMjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-11T13:45:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-11T13:45:35Z"},"message":"[SYNCOPE-771] Rename completed","tree":{"sha":"e08c585374c29a96856095aaa4d823e266d362eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e08c585374c29a96856095aaa4d823e266d362eb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/61a7fdd38e412a30eeb24161400c669a2c3f3228","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/61a7fdd38e412a30eeb24161400c669a2c3f3228","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/61a7fdd38e412a30eeb24161400c669a2c3f3228","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/61a7fdd38e412a30eeb24161400c669a2c3f3228/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"40288e97c695b2a65636009330ecd6a17d7e1f44","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/40288e97c695b2a65636009330ecd6a17d7e1f44","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/40288e97c695b2a65636009330ecd6a17d7e1f44"}],"stats":{"total":2393,"additions":1200,"deletions":1193},"files":[{"sha":"81d50140c72e5318342b010abfd378812b61524c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -183,18 +183,18 @@ public void reportlets() {\n         }\n     }\n \n-    public void syncActions() {\n+    public void pullActions() {\n         try {\n-            infoResultManager.printSyncActions(platformInfo.getSyncActions());\n+            infoResultManager.printPullActions(platformInfo.getPullActions());\n         } catch (final Exception ex) {\n             LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n-    public void syncCorrelationRules() {\n+    public void pullCorrelationRules() {\n         try {\n-            infoResultManager.printCorrelationRules(platformInfo.getSyncCorrelationRules());\n+            infoResultManager.printCorrelationRules(platformInfo.getPullCorrelationRules());\n         } catch (final Exception ex) {\n             LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());"},{"sha":"60ed46aa36f071b6b091c335e2c8c35d576075cd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoCommand.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -86,10 +86,10 @@ public void execute(final Input input) {\n                 info.reportlets();\n                 break;\n             case SYNC_ACTIONS:\n-                info.syncActions();\n+                info.pullActions();\n                 break;\n             case SYNC_CORRELATION_RULES:\n-                info.syncCorrelationRules();\n+                info.pullCorrelationRules();\n                 break;\n             case TASK_JOBS:\n                 info.taskJobs();"},{"sha":"964469e42010d5600d49eebc01498cd349274848","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -111,7 +111,7 @@ public void printPushActions(final Collection<String> actions) {\n         }\n     }\n \n-    public void printSyncActions(final Collection<String> actions) {\n+    public void printPullActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Sync action: \" + action);\n         }"},{"sha":"faa8270bec92b3f238bdac194632e2baaade0985","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDetails.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -43,15 +43,15 @@ public void details() {\n                 final Map<String, String> details = new LinkedMap<>();\n                 final int accountPolicySize = policySyncopeOperations.list(PolicyType.ACCOUNT.name()).size();\n                 final int passwordPolicySize = policySyncopeOperations.list(PolicyType.PASSWORD.name()).size();\n-                final int syncPolicySize = policySyncopeOperations.list(PolicyType.SYNC.name()).size();\n+                final int pullPolicySize = policySyncopeOperations.list(PolicyType.PULL.name()).size();\n                 final int pushPolicySize = policySyncopeOperations.list(PolicyType.PUSH.name()).size();\n                 details.put(\"total number\", String.valueOf(accountPolicySize\n                         + passwordPolicySize\n-                        + syncPolicySize\n+                        + pullPolicySize\n                         + pushPolicySize));\n                 details.put(\"account policies\", String.valueOf(accountPolicySize));\n                 details.put(\"password policies\", String.valueOf(passwordPolicySize));\n-                details.put(\"sync policies\", String.valueOf(syncPolicySize));\n+                details.put(\"pull policies\", String.valueOf(pullPolicySize));\n                 details.put(\"push policies\", String.valueOf(pushPolicySize));\n                 policyResultManager.printDetails(details);\n             } catch (final Exception ex) {"},{"sha":"d0432f318248401ccc091735c23cf15eb449786f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n public class PolicyResultManager extends CommonsResultManager {\n@@ -44,8 +44,8 @@ public void printPolicies(final LinkedList<AbstractPolicyTO> policyTOs) {\n                     case PUSH:\n                         System.out.println(policyTO);\n                         break;\n-                    case SYNC:\n-                        printSyncPolicy((SyncPolicyTO) policyTO);\n+                    case PULL:\n+                        printPullPolicy((PullPolicyTO) policyTO);\n                         break;\n                     default:\n                         break;\n@@ -74,9 +74,9 @@ public void printPoliciesByType(final String policyTypeString, final LinkedList<\n                     System.out.println(policyTO);\n                 }\n                 break;\n-            case SYNC:\n+            case PULL:\n                 for (final AbstractPolicyTO policyTO : policyTOs) {\n-                    printSyncPolicy((SyncPolicyTO) policyTO);\n+                    printPullPolicy((PullPolicyTO) policyTO);\n                 }\n                 break;\n             default:\n@@ -110,7 +110,7 @@ public void printPasswordPolicy(final PasswordPolicyTO policyTO) {\n         System.out.println(\"\");\n     }\n \n-    public void printSyncPolicy(final SyncPolicyTO policyTO) {\n+    public void printPullPolicy(final PullPolicyTO policyTO) {\n         System.out.println(\" > KEY: \" + policyTO.getKey());\n         System.out.println(\"    type: \" + policyTO.getType().name());\n         System.out.println(\"    description: \" + policyTO.getDescription());"},{"sha":"18ab0aa13521eb3b9d9116523b71a1c33b4c6ed0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -42,7 +42,7 @@ private void printResource(final ResourceTO resourceTO) {\n         System.out.println(\"    connector id: \" + resourceTO.getConnector());\n         System.out.println(\"    account policy id: \" + resourceTO.getAccountPolicy());\n         System.out.println(\"    password policy id: \" + resourceTO.getPasswordPolicy());\n-        System.out.println(\"    sync policy id: \" + resourceTO.getSyncPolicy());\n+        System.out.println(\"    pull policy id: \" + resourceTO.getPullPolicy());\n         System.out.println(\"    creator: \" + resourceTO.getCreator());\n         System.out.println(\"    creation date: \" + resourceTO.getCreationDate());\n         System.out.println(\"    last modifier: \" + resourceTO.getLastModifier());\n@@ -54,7 +54,7 @@ private void printResource(final ResourceTO resourceTO) {\n         System.out.println(\"    create trace level: \" + resourceTO.getCreateTraceLevel());\n         System.out.println(\"    delete trace level: \" + resourceTO.getDeleteTraceLevel());\n         System.out.println(\"    update trace level: \" + resourceTO.getUpdateTraceLevel());\n-        System.out.println(\"    sync trace level: \" + resourceTO.getSyncTraceLevel());\n+        System.out.println(\"    pull trace level: \" + resourceTO.getPullTraceLevel());\n         System.out.println(\"    enforce mandatory condition: \" + resourceTO.isEnforceMandatoryCondition());\n         System.out.println(\"    override capabilities: \" + resourceTO.isOverrideCapabilities());\n         System.out.println(\"    random password if not provided: \" + resourceTO.isRandomPwdIfNotProvided());"},{"sha":"bb0025542c517f41cc07883e2eaed7407eaa9368","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -30,8 +30,8 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -57,34 +57,32 @@ public void details() {\n                 final List<AbstractTaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION.name());\n                 final List<AbstractTaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH.name());\n                 final List<AbstractTaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED.name());\n-                final List<AbstractTaskTO> syncTaskTOs = taskSyncopeOperations.list(TaskType.SYNCHRONIZATION.name());\n+                final List<AbstractTaskTO> pullTaskTOs = taskSyncopeOperations.list(TaskType.PULL.name());\n                 final List<JobTO> jobTOs = taskSyncopeOperations.listJobs();\n                 final int notificationTaskSize = notificationTaskTOs.size();\n-                int notificationNotExecuted = 0;\n                 final int propagationTaskSize = propagationTaskTOs.size();\n-                int propagationNotExecuted = 0;\n                 final int pushTaskSize = pushTaskTOs.size();\n-                int pushNotExecuted = 0;\n                 final int scheduledTaskSize = scheduledTaskTOs.size();\n                 int scheduledNotExecuted = 0;\n-                final int syncTaskSize = syncTaskTOs.size();\n-                int syncNotExecuted = 0;\n-                int syncFull = 0;\n+                final int pullTaskSize = pullTaskTOs.size();\n                 final int jobsSize = jobTOs.size();\n \n+                int notificationNotExecuted = 0;\n                 for (final AbstractTaskTO notificationTaskTO : notificationTaskTOs) {\n                     if (!((NotificationTaskTO) notificationTaskTO).isExecuted()) {\n                         notificationNotExecuted++;\n                     }\n                 }\n \n+                int propagationNotExecuted = 0;\n                 for (final AbstractTaskTO propagationTaskTO : propagationTaskTOs) {\n                     if (((PropagationTaskTO) propagationTaskTO).getExecutions() == null\n                             || ((PropagationTaskTO) propagationTaskTO).getExecutions().isEmpty()) {\n                         propagationNotExecuted++;\n                     }\n                 }\n \n+                int pushNotExecuted = 0;\n                 for (final AbstractTaskTO pushTaskTO : pushTaskTOs) {\n                     if (((PushTaskTO) pushTaskTO).getExecutions() == null\n                             || ((PushTaskTO) pushTaskTO).getExecutions().isEmpty()) {\n@@ -99,21 +97,23 @@ public void details() {\n                     }\n                 }\n \n-                for (final AbstractTaskTO syncTaskTO : syncTaskTOs) {\n-                    if (((SyncTaskTO) syncTaskTO).getExecutions() == null\n-                            || ((SyncTaskTO) syncTaskTO).getExecutions().isEmpty()) {\n-                        syncNotExecuted++;\n+                int pullNotExecuted = 0;\n+                int pullFull = 0;\n+                for (final AbstractTaskTO pullTaskTO : pullTaskTOs) {\n+                    if (((PullTaskTO) pullTaskTO).getExecutions() == null\n+                            || ((PullTaskTO) pullTaskTO).getExecutions().isEmpty()) {\n+                        pullNotExecuted++;\n                     }\n-                    if (((SyncTaskTO) syncTaskTO).getSyncMode() == SyncMode.FULL_RECONCILIATION) {\n-                        syncFull++;\n+                    if (((PullTaskTO) pullTaskTO).getPullMode() == PullMode.FULL_RECONCILIATION) {\n+                        pullFull++;\n                     }\n                 }\n \n                 details.put(\"total number\", String.valueOf(notificationTaskSize\n                         + propagationTaskSize\n                         + pushTaskSize\n                         + scheduledTaskSize\n-                        + syncTaskSize));\n+                        + pullTaskSize));\n                 details.put(\"notification tasks\", String.valueOf(notificationTaskSize));\n                 details.put(\"notification tasks not executed\", String.valueOf(notificationNotExecuted));\n                 details.put(\"propagation tasks\", String.valueOf(propagationTaskSize));\n@@ -122,9 +122,9 @@ public void details() {\n                 details.put(\"push tasks not executed\", String.valueOf(pushNotExecuted));\n                 details.put(\"scheduled tasks\", String.valueOf(scheduledTaskSize));\n                 details.put(\"scheduled tasks not executed\", String.valueOf(scheduledNotExecuted));\n-                details.put(\"synchronization tasks\", String.valueOf(syncTaskSize));\n-                details.put(\"synchronization tasks not executed\", String.valueOf(syncNotExecuted));\n-                details.put(\"synchronization tasks with full reconciliation\", String.valueOf(syncFull));\n+                details.put(\"pull tasks\", String.valueOf(pullTaskSize));\n+                details.put(\"pull tasks not executed\", String.valueOf(pullNotExecuted));\n+                details.put(\"pull tasks with full reconciliation\", String.valueOf(pullFull));\n                 details.put(\"jobs\", String.valueOf(jobsSize));\n                 taskResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {"},{"sha":"90b9cf8e57838edc398986f70b932196c2320067","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -32,7 +32,7 @@ public class TaskList extends AbstractTaskCommand {\n     private static final Logger LOG = LoggerFactory.getLogger(TaskList.class);\n \n     private static final String LIST_HELP_MESSAGE = \"task --list {TASK-TYPE}\\n\"\n-            + \"   Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\";\n+            + \"   Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\";\n \n     private final Input input;\n "},{"sha":"df7d0815bd871de37c87dea0232eb0b4d65d583a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskResultManager.java","status":"modified","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.TaskType;\n \n@@ -46,8 +46,8 @@ public void printTasks(final LinkedList<AbstractTaskTO> taskTOs) {\n                 printPushTask((PushTaskTO) taskTO);\n             } else if (taskTO instanceof SchedTaskTO) {\n                 printScheduledTask((SchedTaskTO) taskTO);\n-            } else if (taskTO instanceof SyncTaskTO) {\n-                printSyncTask((SyncTaskTO) taskTO);\n+            } else if (taskTO instanceof PullTaskTO) {\n+                printPullTask((PullTaskTO) taskTO);\n             }\n         }\n     }\n@@ -75,9 +75,9 @@ public void printTasksType(final String taskTypeString, final LinkedList<Abstrac\n                     printScheduledTask((SchedTaskTO) taskTO);\n                 }\n                 break;\n-            case SYNCHRONIZATION:\n+            case PULL:\n                 for (final AbstractTaskTO taskTO : taskTOs) {\n-                    printSyncTask((SyncTaskTO) taskTO);\n+                    printPullTask((PullTaskTO) taskTO);\n                 }\n                 break;\n             default:\n@@ -127,7 +127,7 @@ private void printPushTask(final PushTaskTO pushTaskTO) {\n         System.out.println(\"     is perform create: \" + pushTaskTO.isPerformCreate());\n         System.out.println(\"     is perform delete: \" + pushTaskTO.isPerformDelete());\n         System.out.println(\"     is perform update: \" + pushTaskTO.isPerformUpdate());\n-        System.out.println(\"     is sync status: \" + pushTaskTO.isSyncStatus());\n+        System.out.println(\"     is pull status: \" + pushTaskTO.isPullStatus());\n         System.out.println(\"     start date: \" + pushTaskTO.getStart());\n         System.out.println(\"     end date: \" + pushTaskTO.getEnd());\n         System.out.println(\"     last execution: \" + pushTaskTO.getLastExec());\n@@ -157,30 +157,30 @@ private void printScheduledTask(final SchedTaskTO schedTaskTO) {\n         System.out.println(\"\");\n     }\n \n-    private void printSyncTask(final SyncTaskTO syncTaskTO) {\n-        System.out.println(\" - Sync task key: \" + syncTaskTO.getKey());\n-        System.out.println(\"     name: \" + syncTaskTO.getName());\n-        System.out.println(\"     resource: \" + syncTaskTO.getResource());\n-        System.out.println(\"     realm destination: \" + syncTaskTO.getDestinationRealm());\n-        System.out.println(\"     cron expression: \" + syncTaskTO.getCronExpression());\n-        System.out.println(\"     description: \" + syncTaskTO.getDescription());\n-        System.out.println(\"     sync mode: \" + syncTaskTO.getSyncMode());\n-        System.out.println(\"     perform create: \" + syncTaskTO.isPerformCreate());\n-        System.out.println(\"     perform delete: \" + syncTaskTO.isPerformDelete());\n-        System.out.println(\"     perform update: \" + syncTaskTO.isPerformUpdate());\n-        System.out.println(\"     sync status: \" + syncTaskTO.isSyncStatus());\n+    private void printPullTask(final PullTaskTO pullTaskTO) {\n+        System.out.println(\" - Pull task key: \" + pullTaskTO.getKey());\n+        System.out.println(\"     name: \" + pullTaskTO.getName());\n+        System.out.println(\"     resource: \" + pullTaskTO.getResource());\n+        System.out.println(\"     realm destination: \" + pullTaskTO.getDestinationRealm());\n+        System.out.println(\"     cron expression: \" + pullTaskTO.getCronExpression());\n+        System.out.println(\"     description: \" + pullTaskTO.getDescription());\n+        System.out.println(\"     pull mode: \" + pullTaskTO.getPullMode());\n+        System.out.println(\"     perform create: \" + pullTaskTO.isPerformCreate());\n+        System.out.println(\"     perform delete: \" + pullTaskTO.isPerformDelete());\n+        System.out.println(\"     perform update: \" + pullTaskTO.isPerformUpdate());\n+        System.out.println(\"     pull status: \" + pullTaskTO.isPullStatus());\n         System.out.println(\"     TEMPLATES:\");\n-        printTemplates(syncTaskTO.getTemplates());\n-        System.out.println(\"     start date: \" + syncTaskTO.getStart());\n-        System.out.println(\"     end date: \" + syncTaskTO.getEnd());\n-        System.out.println(\"     next execution: \" + syncTaskTO.getNextExec());\n-        System.out.println(\"     last execution: \" + syncTaskTO.getLastExec());\n-        System.out.println(\"     latest execution status: \" + syncTaskTO.getLatestExecStatus());\n-        System.out.println(\"     job delegate class: \" + syncTaskTO.getJobDelegateClassName());\n-        System.out.println(\"     action class name: \" + syncTaskTO.getActionsClassNames());\n-        System.out.println(\"     matching rule: \" + syncTaskTO.getMatchingRule());\n-        System.out.println(\"     unmatching rule: \" + syncTaskTO.getUnmatchingRule());\n-        printTaskExecTOs(syncTaskTO.getExecutions());\n+        printTemplates(pullTaskTO.getTemplates());\n+        System.out.println(\"     start date: \" + pullTaskTO.getStart());\n+        System.out.println(\"     end date: \" + pullTaskTO.getEnd());\n+        System.out.println(\"     next execution: \" + pullTaskTO.getNextExec());\n+        System.out.println(\"     last execution: \" + pullTaskTO.getLastExec());\n+        System.out.println(\"     latest execution status: \" + pullTaskTO.getLatestExecStatus());\n+        System.out.println(\"     job delegate class: \" + pullTaskTO.getJobDelegateClassName());\n+        System.out.println(\"     action class name: \" + pullTaskTO.getActionsClassNames());\n+        System.out.println(\"     matching rule: \" + pullTaskTO.getMatchingRule());\n+        System.out.println(\"     unmatching rule: \" + pullTaskTO.getUnmatchingRule());\n+        printTaskExecTOs(pullTaskTO.getExecutions());\n         System.out.println(\"\");\n     }\n "},{"sha":"8b5daf2c66767f3c87918b19bc12184a8ba12344","filename":"client/cli/src/main/resources/messages.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -22,13 +22,13 @@ entitlement.help.message=\\nUsage: entitlement [options]\\n  Options:\\n    --help\n group.help.message=\\nUsage: group [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {GROUP-ID} {GROUP-ID} [...]\\n    --read-attr-by-schema-type {GROUP-ID} {SCHEMA-TYPE}\\n       Schema type: PLAIN / DERIVED / VIRTUAL\\n    --read-attr-by-schema {GROUP-ID} {SCHEMA-TYPE} {SCHEMA-NAME}\\n       Schema type: PLAIN / DERIVED / VIRTUAL\\n    --delete \\n       Syntax: --delete {GROUP-ID} {GROUP-ID} [...]\\n\n logger.help.message=\\nUsage: logger [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {LOG-NAME} {LOG-NAME} [...]\\n    --update \\n       Syntax: --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\\n    --update-all \\n       Syntax: --update-all {LOG-LEVEL} \\n    --create \\n       Syntax: --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\\n    --delete \\n       Syntax: --delete {LOG-NAME} {LOG-NAME} [...]\\n\n notification.help.message=\\nUsage: notification [options]\\n  Options:\\n    --help \\n    --list \\n    --read \\n       Syntax: --read {NOTIFICATION-ID} \\n    --delete \\n       Syntax: --delete {NOTIFICATION-ID}\\n\n-policy.help.message=\\nUsage: policy [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n       Syntax: --list-policy {POLICY-TYPE} \\n          Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\\n    --read \\n       Syntax: --read {POLICY-ID} {POLICY-ID} [...]\\n    --delete \\n       Syntax: --delete {POLICY-ID} {POLICY-ID} [...]\\n\n+policy.help.message=\\nUsage: policy [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n       Syntax: --list-policy {POLICY-TYPE} \\n          Policy type: ACCOUNT / PASSWORD / PULL / PUSH\\n    --read \\n       Syntax: --read {POLICY-ID} {POLICY-ID} [...]\\n    --delete \\n       Syntax: --delete {POLICY-ID} {POLICY-ID} [...]\\n\n question.help.message=\\nUsage: question [options]\\n  Options:\\n    --help \\n    --list \\n    --read \\n       Syntax: --read {QUESTION-ID} {QUESTION-ID} [...]\\n    --delete \\n       Syntax: --delete {QUESTION-ID} {QUESTION-ID} [...]\\n\n realm.help.message=\\nUsage: realm [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n\n report.help.message=\\nUsage: report [options]\\n  Options:\\n    --help \\n    --details\\n    --list \\n    --list-jobs \\n    --read \\n       Syntax: --read {REPORT-ID} {REPORT-ID} [...] \\n    --delete \\n       Syntax: --delete {REPORT-ID} {REPORT-ID} [...]\\n    --execute \\n       Syntax: --execute {REPORT-ID} \\n    --delete-execution \\n       Syntax: --delete-execution {EXECUTION-ID} {EXECUTION-ID} [...]\\n    --export-execution-result \\n       Syntax: --export-execution-result {EXECUTION-ID} {EXECUTION-ID} [...] {FORMAT}\\n          Format: CSV / HTML / PDF / XML / RTF\\n\n resource.help.message=\\nUsage: resource [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {RESOURCE-NAME} {RESOURCE-NAME} [...]\\n    --delete \\n       Syntax: --delete {RESOURCE-NAME} {RESOURCE-NAME} [...]\\n\n role.help.message=\\nUsage: role [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {ROLE-ID} {ROLE-ID} [...]\\n    --delete \\n       Syntax: --delete {ROLE-ID} {ROLE-ID} [...]\\n\n schema.help.message=\\nUsage: schema [options]\\n  Options:\\n    --help \\n    --details \\n    --list-all\\n    --list-plain\\n    --list-derived\\n    --list-virtual\\n    --read {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n    --delete {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n\n-task.help.message=\\nUsage: task [options]\\n  Options:\\n    --help \\n    --details\\n    --list\\n       Syntax: --list {TASK-TYPE} \\n          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\\n    --list-running-jobs \\n    --list-scheduled-jobs \\n    --read \\n       Syntax: --read {TASK-ID} {TASK-ID} [...]\\n    --delete \\n       Syntax: --delete {TASK-ID} {TASK-ID} [...]\\n    --delete-all-prop\\n    --delete-execution \\n       Syntax: --delete-execution {TASK-EXEC-ID} {TASK-EXEC-ID} [...]\\n    --execute \\n       Syntax: --execute {TASK-ID} {DRY-RUN}\\n          Dry run: true / false\\n\n+task.help.message=\\nUsage: task [options]\\n  Options:\\n    --help \\n    --details\\n    --list\\n       Syntax: --list {TASK-TYPE} \\n          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\\n    --list-running-jobs \\n    --list-scheduled-jobs \\n    --read \\n       Syntax: --read {TASK-ID} {TASK-ID} [...]\\n    --delete \\n       Syntax: --delete {TASK-ID} {TASK-ID} [...]\\n    --delete-all-prop\\n    --delete-execution \\n       Syntax: --delete-execution {TASK-EXEC-ID} {TASK-EXEC-ID} [...]\\n    --execute \\n       Syntax: --execute {TASK-ID} {DRY-RUN}\\n          Dry run: true / false\\n\n user.help.message=\\nUsage: user [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --get-user-key\\n       Syntax: --get-user-key {USERNAME}\\n    --get-username\\n       Syntax: --get-username {USER-ID}\\n    --read-by-userid \\n       Syntax: --read-by-userid {USER-ID} {USER-ID} [...]\\n    --read-by-username\\n       Syntax: --read-by-username {USERNAME} {USERNAME} [...]\\n    --search-by-attribute \\n       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n    --search-by-role \\n       Syntax: --search-by-role {REALM} {ROLE-NAME}\\n    --search-by-resource \\n       Syntax: --search-by-resource {REALM} {RESOURCE-NAME}\\n    --delete \\n       Syntax: --delete {USER-ID} {USER-ID} [...]\\n    --delete-all \\n       Syntax: --delete-all {REALM}\\n    --delete-by-attribute \\n       Syntax: --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n\n workflow.help.message=\\nUsage: workflow [options]\\n  Options:\\n    --help \\n    --export-diagram {ANY-TYPE-KIND}\\n        Any type kind: ANY_OBJECT / USER / GROUP\\n    --export-definition {ANY-TYPE-KIND}\\n        Any type kind: ANY_OBJECT / USER / GROUP\\n"},{"sha":"3e0d4a4ace7bece0e131ddc4a949a70572a27780","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -102,7 +102,7 @@ public final class Constants {\n \n     public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS = \"schedtasks.paginator.rows\";\n \n-    public static final String PREF_SYNC_TASKS_PAGINATOR_ROWS = \"synctasks.paginator.rows\";\n+    public static final String PREF_PULL_TASKS_PAGINATOR_ROWS = \"pulltasks.paginator.rows\";\n \n     public static final String PREF_PUSH_TASKS_PAGINATOR_ROWS = \"pushtasks.paginator.rows\";\n "},{"sha":"24fda22f423c4cf780e325f4501ebba56a62bff4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -178,13 +178,13 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                 } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n                     compared = 1;\n                 } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n-                        && (right.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                        && (right.getPurpose() == MappingPurpose.PULL\n                         || right.getPurpose() == MappingPurpose.NONE)) {\n                     compared = -1;\n-                } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                } else if (left.getPurpose() == MappingPurpose.PULL\n                         && right.getPurpose() == MappingPurpose.PROPAGATION) {\n                     compared = 1;\n-                } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                } else if (left.getPurpose() == MappingPurpose.PULL\n                         && right.getPurpose() == MappingPurpose.NONE) {\n                     compared = -1;\n                 } else if (left.getPurpose() == MappingPurpose.NONE"},{"sha":"ad56e9e3f33d3655fb791df23ecfb100f5048a33","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceSecurityPanel.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -45,7 +45,7 @@ public class ResourceSecurityPanel extends Panel {\n \n     private IModel<Map<Long, String>> accountPolicies = null;\n \n-    private IModel<Map<Long, String>> syncPolicies = null;\n+    private IModel<Map<Long, String>> pullPolicies = null;\n \n     public ResourceSecurityPanel(final String id, final IModel<ResourceTO> model) {\n \n@@ -86,14 +86,14 @@ protected Map<Long, String> load() {\n             }\n         };\n \n-        syncPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+        pullPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n \n             private static final long serialVersionUID = -2012833443695917883L;\n \n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<>();\n-                for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.SYNC)) {\n+                for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PULL)) {\n                     res.put(policyTO.getKey(), policyTO.getDescription());\n                 }\n                 return res;\n@@ -131,18 +131,18 @@ protected Map<Long, String> load() {\n         // -------------------------------\n \n         // -------------------------------\n-        // Sync policy specification\n+        // Pull policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> syncPolicy = new AjaxDropDownChoicePanel<Long>(\n-                \"syncPolicy\",\n-                new ResourceModel(\"syncPolicy\", \"syncPolicy\").getObject(),\n-                new PropertyModel<Long>(model, \"syncPolicy\"),\n+        AjaxDropDownChoicePanel<Long> pullPolicy = new AjaxDropDownChoicePanel<>(\n+                \"pullPolicy\",\n+                new ResourceModel(\"pullPolicy\", \"pullPolicy\").getObject(),\n+                new PropertyModel<Long>(model, \"pullPolicy\"),\n                 false);\n \n-        syncPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.SYNC));\n-        syncPolicy.setChoices(new ArrayList<Long>(syncPolicies.getObject().keySet()));\n-        ((DropDownChoice<?>) syncPolicy.getField()).setNullValid(true);\n-        container.add(syncPolicy);\n+        pullPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PULL));\n+        pullPolicy.setChoices(new ArrayList<Long>(pullPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) pullPolicy.getField()).setNullValid(true);\n+        container.add(pullPolicy);\n         // -------------------------------\n     }\n \n@@ -164,8 +164,8 @@ public Object getDisplayValue(final Long object) {\n                     return accountPolicies.getObject().get(object);\n                 case PASSWORD:\n                     return passwordPolicies.getObject().get(object);\n-                case SYNC:\n-                    return syncPolicies.getObject().get(object);\n+                case PULL:\n+                    return pullPolicies.getObject().get(object);\n                 default:\n                     return \"\";\n             }"},{"sha":"0d80b455d8f0256dfb57dd64bab65a0b669bc729","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -72,7 +72,7 @@ public Set<String> getCorrelationRuleClasses() {\n         Set<String> rules = null;\n \n         try {\n-            rules = SyncopeConsoleSession.get().getPlatformInfo().getSyncCorrelationRules();\n+            rules = SyncopeConsoleSession.get().getPlatformInfo().getPullCorrelationRules();\n         } catch (Exception e) {\n             LOG.error(\"While getting all correlation rule classes\", e);\n         }"},{"sha":"54bc352ce2602c5a427d6c237ec78b143070e2f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n@@ -49,8 +49,8 @@ public Set<String> getJobClasses() {\n         return SyncopeConsoleSession.get().getPlatformInfo().getTaskJobs();\n     }\n \n-    public Set<String> getSyncActionsClasses() {\n-        return SyncopeConsoleSession.get().getPlatformInfo().getSyncActions();\n+    public Set<String> getPullActionsClasses() {\n+        return SyncopeConsoleSession.get().getPlatformInfo().getPullActions();\n     }\n \n     public Set<String> getPushActionsClasses() {\n@@ -126,8 +126,8 @@ private TaskType getTaskType(final Class<?> reference) {\n             result = TaskType.NOTIFICATION;\n         } else if (SchedTaskTO.class.equals(reference)) {\n             result = TaskType.SCHEDULED;\n-        } else if (SyncTaskTO.class.equals(reference)) {\n-            result = TaskType.SYNCHRONIZATION;\n+        } else if (PullTaskTO.class.equals(reference)) {\n+            result = TaskType.PULL;\n         } else if (PushTaskTO.class.equals(reference)) {\n             result = TaskType.PUSH;\n         }"},{"sha":"c0c85e25ec376457d61e7fcaa39144b2e31ba476","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -78,7 +78,7 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"description\", this, null), \"description\", \"description\"));\n \n-        if (reference == SyncTaskTO.class) {\n+        if (reference == PullTaskTO.class) {\n             columns.add(new PropertyColumn<T, String>(\n                     new StringResourceModel(\"destinationRealm\", this, null), \"destinationRealm\", \"destinationRealm\"));\n         }"},{"sha":"dd01779ae5303b073d092e3afcd02afd1dfe52a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PullTaskSearchResultPanel.java","status":"renamed","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskSearchResultPanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,23 +21,20 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n \n-/**\n- * Sync Tasks page.\n- */\n-public abstract class SyncTaskSearchResultPanel extends ProvisioningTaskSearchResultPanel<SyncTaskTO> {\n+public abstract class PullTaskSearchResultPanel extends ProvisioningTaskSearchResultPanel<PullTaskTO> {\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected SyncTaskSearchResultPanel(\n+    protected PullTaskSearchResultPanel(\n             final BaseModal<?> baseModal,\n             final MultilevelPanel multiLevelPanelRef,\n             final String resource,\n             final PageReference pageRef) {\n-        super(baseModal, multiLevelPanelRef, SyncTaskTO.class, resource, pageRef);\n+        super(baseModal, multiLevelPanelRef, PullTaskTO.class, resource, pageRef);\n     }\n \n     @Override\n@@ -46,7 +43,7 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    protected ProvisioningTasksProvider<SyncTaskTO> dataProvider() {\n-        return new ProvisioningTasksProvider<>(reference, TaskType.SYNCHRONIZATION, rows);\n+    protected ProvisioningTasksProvider<PullTaskTO> dataProvider() {\n+        return new ProvisioningTasksProvider<>(reference, TaskType.PULL, rows);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTaskSearchResultPanel.java"},{"sha":"559469bb8d39f6f6a0f65b55cc17d81bee4621ee","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PullTasks.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTasks.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,29 +21,29 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class SyncTasks extends AbstractTasks {\n+public class PullTasks extends AbstractTasks {\n \n     private static final long serialVersionUID = -4013796607157549641L;\n \n-    public <T extends AnyTO> SyncTasks(\n+    public <T extends AnyTO> PullTasks(\n             final BaseModal<?> baseModal, final PageReference pageReference, final String resource) {\n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new SyncTaskSearchResultPanel(baseModal, mlp, resource, pageReference) {\n+        mlp.setFirstLevel(new PullTaskSearchResultPanel(baseModal, mlp, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n-            protected void viewTask(final SyncTaskTO taskTO, final AjaxRequestTarget target) {\n+            protected void viewTask(final PullTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n                         new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTasks.java"},{"sha":"6fc3fdda6a1aaa9a67f34326fd750303604cb201","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -31,9 +31,9 @@\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.MatchingRule;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -107,42 +107,42 @@ public Profile(final SchedTaskTO taskTO) {\n                     new PropertyModel<Boolean>(taskTO, \"active\"), false);\n             add(active);\n \n-            final WebMarkupContainer syncTaskSpecifics = new WebMarkupContainer(\"syncTaskSpecifics\");\n-            add(syncTaskSpecifics.setRenderBodyOnly(true));\n+            final WebMarkupContainer pullTaskSpecifics = new WebMarkupContainer(\"pullTaskSpecifics\");\n+            add(pullTaskSpecifics.setRenderBodyOnly(true));\n \n             boolean isFiltered = false;\n \n-            if (taskTO instanceof SyncTaskTO) {\n-                isFiltered = SyncTaskTO.class.cast(taskTO).getSyncMode() == SyncMode.FILTERED_RECONCILIATION;\n+            if (taskTO instanceof PullTaskTO) {\n+                isFiltered = PullTaskTO.class.cast(taskTO).getPullMode() == PullMode.FILTERED_RECONCILIATION;\n             } else {\n-                syncTaskSpecifics.setEnabled(false).setVisible(false);\n+                pullTaskSpecifics.setEnabled(false).setVisible(false);\n             }\n \n-            final AjaxDropDownChoicePanel<SyncMode> syncMode = new AjaxDropDownChoicePanel<>(\"syncMode\", \"syncMode\",\n-                    new PropertyModel<SyncMode>(taskTO, \"syncMode\"), false);\n-            syncTaskSpecifics.add(syncMode);\n-            syncMode.setChoices(Arrays.asList(SyncMode.values()));\n+            final AjaxDropDownChoicePanel<PullMode> pullMode = new AjaxDropDownChoicePanel<>(\"pullMode\", \"pullMode\",\n+                    new PropertyModel<PullMode>(taskTO, \"pullMode\"), false);\n+            pullTaskSpecifics.add(pullMode);\n+            pullMode.setChoices(Arrays.asList(PullMode.values()));\n \n             final AjaxTextFieldPanel filter = new AjaxTextFieldPanel(\n                     \"reconciliationFilterBuilderClassName\", \"reconciliationFilterBuilderClassName\",\n                     new PropertyModel<String>(taskTO, \"reconciliationFilterBuilderClassName\"), false);\n-            syncTaskSpecifics.add(filter);\n+            pullTaskSpecifics.add(filter);\n             filter.setEnabled(isFiltered);\n \n-            syncMode.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+            pullMode.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n-                    filter.setEnabled(syncMode.getModelObject() == SyncMode.FILTERED_RECONCILIATION);\n+                    filter.setEnabled(pullMode.getModelObject() == PullMode.FILTERED_RECONCILIATION);\n                     target.add(filter);\n                 }\n             });\n \n             final AjaxTextFieldPanel destinationRealm = new AjaxTextFieldPanel(\"destinationRealm\", \"destinationRealm\",\n                     new PropertyModel<String>(taskTO, \"destinationRealm\"), false);\n-            syncTaskSpecifics.add(destinationRealm);\n+            pullTaskSpecifics.add(destinationRealm);\n \n             final AjaxDropDownChoicePanel<String> className = new AjaxDropDownChoicePanel<>(\n                     \"jobDelegateClassName\",\n@@ -181,9 +181,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     \"performDelete\", \"performDelete\", new PropertyModel<Boolean>(taskTO, \"performDelete\"), false);\n             provisioningTaskSpecifics.add(performDelete);\n \n-            final AjaxCheckBoxPanel syncStatus = new AjaxCheckBoxPanel(\n-                    \"syncStatus\", \"syncStatus\", new PropertyModel<Boolean>(taskTO, \"syncStatus\"), false);\n-            provisioningTaskSpecifics.add(syncStatus);\n+            final AjaxCheckBoxPanel pullStatus = new AjaxCheckBoxPanel(\n+                    \"pullStatus\", \"pullStatus\", new PropertyModel<Boolean>(taskTO, \"pullStatus\"), false);\n+            provisioningTaskSpecifics.add(pullStatus);\n \n             if (taskTO instanceof AbstractProvisioningTaskTO) {\n                 className.setEnabled(false).setVisible(false);"},{"sha":"fd495c54641fb096e094669554cfcdad71f958ac","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.client.console.tasks.PropagationTasks;\n import org.apache.syncope.client.console.tasks.PushTasks;\n import org.apache.syncope.client.console.tasks.SchedTasks;\n-import org.apache.syncope.client.console.tasks.SyncTasks;\n+import org.apache.syncope.client.console.tasks.PullTasks;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -318,19 +318,19 @@ public void onClick(final AjaxRequestTarget target) {\n         fragment.add(propagation);\n         MetaDataRoleAuthorizationStrategy.authorize(propagation, ENABLE, StandardEntitlement.TASK_LIST);\n \n-        final AjaxLink<String> synchronization = new IndicatingAjaxLink<String>(\"synchronization\") {\n+        final AjaxLink<String> pull = new IndicatingAjaxLink<String>(\"pull\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new SyncTasks(taskModal, pageRef, node.getKey().toString())));\n-                taskModal.header(new ResourceModel(\"task.synchronization.list\", \"Synchronization tasks\"));\n+                target.add(taskModal.setContent(new PullTasks(taskModal, pageRef, node.getKey().toString())));\n+                taskModal.header(new ResourceModel(\"task.pull.list\"));\n                 taskModal.show(true);\n             }\n         };\n-        fragment.add(synchronization);\n-        MetaDataRoleAuthorizationStrategy.authorize(synchronization, ENABLE, StandardEntitlement.TASK_LIST);\n+        fragment.add(pull);\n+        MetaDataRoleAuthorizationStrategy.authorize(pull, ENABLE, StandardEntitlement.TASK_LIST);\n \n         final AjaxLink<String> push = new IndicatingAjaxLink<String>(\"push\") {\n "},{"sha":"f5d43a633c4953d95d6ada3e7e2763a857c8d73a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MappingPurposePanel.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@ public class MappingPurposePanel extends Panel {\n \n     private final AjaxLink<Void> propagation;\n \n-    private final AjaxLink<Void> synchronization;\n+    private final AjaxLink<Void> pull;\n \n     private final AjaxLink<Void> both;\n \n@@ -56,14 +56,14 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        synchronization = new AjaxLink<Void>(\"synchronizationPurposeLink\") {\n+        pull = new AjaxLink<Void>(\"pullPurposeLink\") {\n \n             private static final long serialVersionUID = -6957616042924610305L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                model.setObject(MappingPurpose.SYNCHRONIZATION);\n-                setOpacity(MappingPurpose.SYNCHRONIZATION);\n+                model.setObject(MappingPurpose.PULL);\n+                setOpacity(MappingPurpose.PULL);\n                 target.add(container);\n             }\n         };\n@@ -93,7 +93,7 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n \n         add(propagation);\n-        add(synchronization);\n+        add(pull);\n         add(both);\n         add(none);\n \n@@ -104,28 +104,32 @@ private void setOpacity(final MappingPurpose mappingPurpose) {\n         switch (mappingPurpose) {\n             case PROPAGATION:\n                 propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 break;\n-            case SYNCHRONIZATION:\n-                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+\n+            case PULL:\n+                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n                 propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 break;\n+\n             case BOTH:\n                 both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n                 propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 break;\n+\n             case NONE:\n                 none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n                 break;\n+\n             default:\n             // do nothing\n         }"},{"sha":"fd3fdcebce462510092317284105e496cdca0d75","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -49,7 +49,7 @@ enable=Enable\n createTraceLevel=Create trace level\n updateTraceLevel=Update trace level\n deleteTraceLevel=Delete trace level\n-syncTraceLevel=Synchronization trace level\n+pullTraceLevel=Pull trace level\n propagationPriority=Propagation priority\n \n success_connection=Successful connection"},{"sha":"6c219f32f836ba17ae9c57b97de2cc632858e172","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -48,7 +48,7 @@ enable=Abilita\n createTraceLevel=Livello di tracciamento delle creazioni\n updateTraceLevel=Livello di tracciamento degli aggiornamenti\n deleteTraceLevel=Livello di tracciamento delle cancellazioni\n-syncTraceLevel=Livello di tracciamento delle sincronizzazioni\n+pullTraceLevel=Livello di tracciamento delle pull\n propagationPriority=Priorit\\u00e0 in propagazione\n \n success_connection=Connessione avvenuta con successo"},{"sha":"4b2f0a0eec27bb3b17c986db3dc520f37f8e966b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -48,7 +48,7 @@ enable=Habilitado\n createTraceLevel=Criar n\\u00edvel de trace\n updateTraceLevel=Atualizar n\\u00edvel de trace\n deleteTraceLevel=Excluir n\\u00edvel de trace\n-syncTraceLevel=N\\u00edvel de trace de sincroniza\\u00e7\\u00e3o\n+pullTraceLevel=N\\u00edvel de trace de pull\n propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n \n success_connection=Conex\\u00e3o com sucesso"},{"sha":"f39d19e501839beb5967d47af1f8442733db751b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -25,7 +25,7 @@\n       <span wicket:id=\"accountPolicy\">\n         [panel for dynamic input type markup]\n       </span>\n-      <span wicket:id=\"syncPolicy\">\n+      <span wicket:id=\"pullPolicy\">\n         [panel for dynamic input type markup]\n       </span>\n     </div>"},{"sha":"279e499861a5f1bb6657a0805541e55ed3175705","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,4 +16,4 @@\n # under the License.\n passwordPolicy = Password Policy\n accountPolicy = Account Policy\n-syncPolicy = Sync Policy\n+pullPolicy=Pull Policy"},{"sha":"279e499861a5f1bb6657a0805541e55ed3175705","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,4 +16,4 @@\n # under the License.\n passwordPolicy = Password Policy\n accountPolicy = Account Policy\n-syncPolicy = Sync Policy\n+pullPolicy=Pull Policy"},{"sha":"4c774d5d8c8e723e160109c046c1b5e6fe05f50d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,4 +16,4 @@\n # under the License.\n passwordPolicy = Pol\\u00edtica de Senha\n accountPolicy = Pol\\u00edtica de Conta\n-syncPolicy = Pol\\u00edtica de Sincroniza\\u00e7\\u00e3o\n+pullPolicy=Pol\\u00edtica de Pull"},{"sha":"a50f801b878d4420cc08393b03c9bd478eb0ae65","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -23,9 +23,9 @@\n       <div class=\"form-group\"><span wicket:id=\"name\">[id]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"description\">[anyKey]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"active\">[active]</span></div>\n-      <span wicket:id=\"syncTaskSpecifics\">\n+      <span wicket:id=\"pullTaskSpecifics\">\n         <div class=\"form-group\"><span wicket:id=\"destinationRealm\">[destinationRealm]</span></div>\n-        <div class=\"form-group\"><span wicket:id=\"syncMode\">[syncMode]</span></div>\n+        <div class=\"form-group\"><span wicket:id=\"pullMode\">[pullMode]</span></div>\n         <div class=\"form-group\"><span wicket:id=\"reconciliationFilterBuilderClassName\">[filter]</span></div>\n       </span>\n       <div class=\"form-group\"><span wicket:id=\"jobDelegateClassName\">[jobDelegateClassName]</span></div>\n@@ -36,7 +36,7 @@\n         <div class=\"form-group\"><span wicket:id=\"performCreate\">[performCreate]</span></div>\n         <div class=\"form-group\"><span wicket:id=\"performUpdate\">[performUpdate]</span></div>\n         <div class=\"form-group\"><span wicket:id=\"performDelete\">[performDelete]</span></div>\n-        <div class=\"form-group\"><span wicket:id=\"syncStatus\">[syncStatus]</span></div>\n+        <div class=\"form-group\"><span wicket:id=\"pullStatus\">[pullStatus]</span></div>\n       </span>\n \n       <div class=\"form-group\"><span wicket:id=\"lastExec\">[lastExec]</span></div>"},{"sha":"91d6e0330dc1cf16bfde431220f37fba58342651","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -19,10 +19,10 @@ description=Description\n jobDelegateClassName=Class\n matchingRule=Matching rule\n unmatchingRule=Unmatching rule\n-performCreate=Synchronize created objects\n-performUpdate=Synchronize updated objects\n-performDelete=Synchronize deleted objects\n-syncStatus=Synchronize status\n+performCreate=Create pulled objects\n+performUpdate=Update pulled objects\n+performDelete=Delete pulled objects\n+pullStatus=Pull status\n lastExec=Last Execution\n nextExec=Next Execution\n detail=Detail"},{"sha":"a0f3cd4425151c7d6c44917c1f80d8bcfc96facf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_it.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -19,10 +19,10 @@ description=Description\n jobDelegateClassName=Class\n matchingRule=Regola di matching\n unmatchingRule=Regola di unmatching\n-performCreate=Sincronizza oggetti creati\n-performUpdate=Sincronizza oggetti modificati\n-performDelete=Sincronizza oggetti rimossi\n-syncStatus=Sincronizza stato\n+performCreate=Crea oggetti da pull\n+performUpdate=Aggiorna oggetti da pull\n+performDelete=Rimuovi oggetti da pull\n+pullStatus=Recupera stato\n lastExec=Last Execution\n nextExec=Next Execution\n detail=Detail"},{"sha":"91d6e0330dc1cf16bfde431220f37fba58342651","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_pt_BR.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,13 +16,13 @@\n # under the License.\n name=Name\n description=Description\n-jobDelegateClassName=ClassmatchingRule=Matching rule\n+jobDelegateClassName=Class\n matchingRule=Matching rule\n unmatchingRule=Unmatching rule\n-performCreate=Synchronize created objects\n-performUpdate=Synchronize updated objects\n-performDelete=Synchronize deleted objects\n-syncStatus=Synchronize status\n+performCreate=Create pulled objects\n+performUpdate=Update pulled objects\n+performDelete=Delete pulled objects\n+pullStatus=Pull status\n lastExec=Last Execution\n nextExec=Next Execution\n detail=Detail"},{"sha":"20f7260877d893a97a40aa3f7c6358220422bbbf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -37,7 +37,7 @@\n           <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"resource.menu.remove\"/></a></li>\n           <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"resource.menu.edit\"/></a></li>\n           <li><i class=\"fa fa-arrow-right\"></i><a href=\"#\" wicket:id=\"propagation\"><wicket:message key=\"task.propagation.list\"/></a></li>\n-          <li><i class=\"fa fa-chevron-circle-left\"></i><a href=\"#\" wicket:id=\"synchronization\"><wicket:message key=\"task.synchronization.list\"/></a></li>\n+          <li><i class=\"fa fa-chevron-circle-left\"></i><a href=\"#\" wicket:id=\"pull\"><wicket:message key=\"task.pull.list\"/></a></li>\n           <li><i class=\"fa fa-chevron-circle-right\"></i><a href=\"#\" wicket:id=\"push\"><wicket:message key=\"task.push.list\"/></a></li>\n         </ul>\n       </wicket:fragment>"},{"sha":"2db9d85d7b2a6566a91f0262dda87b8b25f453ae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -28,5 +28,5 @@ resource.menu.edit=Edit resource\n \n task.generic.list=Generic tasks\n task.propagation.list=Propagation tasks\n-task.synchronization.list=Synchronization tasks\n+task.pull.list=Pull tasks\n task.push.list=Push tasks"},{"sha":"82f95e8f1dd6bcec7b5eade1b9d96851c975ff47","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -28,5 +28,5 @@ resource.menu.edit=Modifica risorsa\n \n task.generic.list=Task generici\n task.propagation.list=Task di propagazione\n-task.synchronization.list=Task di sincronizzazione\n+task.pull.list=Pull task\n task.push.list=Push task"},{"sha":"2c987e5fe834bcf26f76aa618a3966c02b9c2aad","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -28,5 +28,5 @@ resource.menu.edit=Alterar recurso\n \n task.generic.list=Generic tasks\n task.propagation.list=Propagation tasks\n-task.synchronization.list=Synchronization tasks\n+task.pull.list=Pull tasks\n task.push.list=Push tasks"},{"sha":"46be9d41d6cf4e1802ab57a1e64af9e8281abd82","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MappingPurposePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,7 +21,7 @@\n \n     <a href=\"#\" wicket:id=\"propagationPurposeLink\"><i class=\"fa fa-arrow-circle-o-right\"></i></a>\n \n-    <a href=\"#\" wicket:id=\"synchronizationPurposeLink\"><i class=\"fa fa-arrow-circle-o-left\"></i></a>\n+    <a href=\"#\" wicket:id=\"pullPurposeLink\"><i class=\"fa fa-arrow-circle-o-left\"></i></a>\n \n     <a href=\"#\" wicket:id=\"bothPurposeLink\"><i class=\"fa fa-exchange\"></i></a>\n "},{"sha":"f2ceabce6fb9957b6e4ddd604293a85129e5c70a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -27,7 +27,7 @@ <h3 class=\"box-title\"><wicket:message key=\"configurationStatus\"/></h3>\n               <i class=\"fa fa-wrench\"></i>\n             </button>\n             <ul class=\"dropdown-menu\" role=\"menu\">\n-              <li><a href=\"#\" wicket:id=\"topology\"><wicket:message key=\"createResourceOrSyncTask\"/></a></li>\n+              <li><a href=\"#\" wicket:id=\"topology\"><wicket:message key=\"createResourceOrPullTask\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"policies\"><wicket:message key=\"createPolicy\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"notifications\"><wicket:message key=\"createNotification\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"types\"><wicket:message key=\"createVirSchemaOrAnyType\"/></a></li>"},{"sha":"1693f61407623f61670fb7c39589c2560b39875c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n configurationStatus=Configuration Status\n-createResourceOrSyncTask=Create Resource or SyncTask\n+createResourceOrPullTask=Create Resource or PullTask\n createPolicy=Create Policy\n createVirSchemaOrAnyType=Create Virtual Schema or AnyType\n createSecurityQuestion=Create Security Question"},{"sha":"37252bfc74715ed5433a74ee3f856354cc8fc60d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_it.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n configurationStatus=Stato Configurazione\n-createResourceOrSyncTask=Crea Risorsa o SyncTask\n+createResourceOrPullTask=Crea Risorsa o PullTask\n createPolicy=Crea Politica\n createVirSchemaOrAnyType=Crea Virtual Schema o AnyType\n createSecurityQuestion=Crea Domanda di Sicurezza"},{"sha":"774a9d954893ed12be333efa302437f9f043487a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget_pt_BR.properties?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n configurationStatus=Estado de configura\\u00e7\\u00e3o\n-createResourceOrSyncTask=Criar recursos ou SyncTask\n+createResourceOrPullTask=Criar recursos ou PullTask\n createPolicy=Criar Politica\n createVirSchemaOrAnyType=Criar Virtual Schema ou AnyType\n createSecurityQuestion=Criar Perguntas de Seguran\\u00e7a "},{"sha":"ec8d20faca9fbde39bb1d4f8c03e11d2475d4be9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/PlatformInfo.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -77,11 +77,11 @@ public class PlatformInfo extends AbstractBaseBean {\n \n     private final Set<String> propagationActions = new HashSet<>();\n \n-    private final Set<String> syncActions = new HashSet<>();\n+    private final Set<String> pullActions = new HashSet<>();\n \n     private final Set<String> pushActions = new HashSet<>();\n \n-    private final Set<String> syncCorrelationRules = new HashSet<>();\n+    private final Set<String> pullCorrelationRules = new HashSet<>();\n \n     private final Set<String> pushCorrelationRules = new HashSet<>();\n \n@@ -211,11 +211,11 @@ public Set<String> getPropagationActions() {\n         return propagationActions;\n     }\n \n-    @XmlElementWrapper(name = \"syncActions\")\n-    @XmlElement(name = \"syncAction\")\n-    @JsonProperty(\"syncActions\")\n-    public Set<String> getSyncActions() {\n-        return syncActions;\n+    @XmlElementWrapper(name = \"pullActions\")\n+    @XmlElement(name = \"pullAction\")\n+    @JsonProperty(\"pullActions\")\n+    public Set<String> getPullActions() {\n+        return pullActions;\n     }\n \n     @XmlElementWrapper(name = \"pushActions\")\n@@ -225,11 +225,11 @@ public Set<String> getPushActions() {\n         return pushActions;\n     }\n \n-    @XmlElementWrapper(name = \"syncCorrelationRules\")\n-    @XmlElement(name = \"syncCorrelationRule\")\n-    @JsonProperty(\"syncCorrelationRules\")\n-    public Set<String> getSyncCorrelationRules() {\n-        return syncCorrelationRules;\n+    @XmlElementWrapper(name = \"pullCorrelationRules\")\n+    @XmlElement(name = \"pullCorrelationRule\")\n+    @JsonProperty(\"pullCorrelationRules\")\n+    public Set<String> getPullCorrelationRules() {\n+        return pullCorrelationRules;\n     }\n \n     @XmlElementWrapper(name = \"pushCorrelationRules\")"},{"sha":"34f824f2032499db019b04103f26096b2197bac1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractPolicyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@\n \n @XmlRootElement(name = \"abstractPolicy\")\n @XmlType\n-@XmlSeeAlso({ AccountPolicyTO.class, PasswordPolicyTO.class, SyncPolicyTO.class })\n+@XmlSeeAlso({ AccountPolicyTO.class, PasswordPolicyTO.class, PullPolicyTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n public abstract class AbstractPolicyTO extends AbstractBaseBean {\n "},{"sha":"ea429c2990fcab799eb348a38be67649968725c9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyType.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -32,9 +32,9 @@ public enum PolicyType {\n      */\n     PASSWORD,\n     /**\n-     * For handling conflicts resolution during synchronization.\n+     * For handling conflicts resolution during pull.\n      */\n-    SYNC,\n+    PULL,\n     /**\n      * For handling conflicts resolution during push.\n      */"},{"sha":"a6b533803b5f43bd57240e521183876ea01df173","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PullPolicySpec.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicySpec.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n \n @XmlType\n-public class SyncPolicySpec extends AbstractBaseBean {\n+public class PullPolicySpec extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -3144027171719498127L;\n \n@@ -38,9 +38,9 @@ public class SyncPolicySpec extends AbstractBaseBean {\n     /**\n      * Associates anyTypeKey to either:\n      * <ol>\n-     * <li>Java class name, implementing {@code SyncCorrelationRule}</li>\n+     * <li>Java class name, implementing {@code PullCorrelationRule}</li>\n      * <li>JSON array containing plain schema names - this will be used to feed\n-     * {@code PlainAttrsSyncCorrelationRule}</li>\n+     * {@code PlainAttrsPullCorrelationRule}</li>\n      * </ol>\n      */\n     @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/SyncPolicySpec.java"},{"sha":"91c8e8bde7599a1bc1da04687dca3aa51b3897b0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PullPolicyTO.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -22,23 +22,23 @@\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n-@XmlRootElement(name = \"syncPolicy\")\n+@XmlRootElement(name = \"pullPolicy\")\n @XmlType\n-public class SyncPolicyTO extends AbstractPolicyTO {\n+public class PullPolicyTO extends AbstractPolicyTO {\n \n     private static final long serialVersionUID = 993024634238024242L;\n \n-    private SyncPolicySpec specification;\n+    private PullPolicySpec specification;\n \n-    public SyncPolicyTO() {\n-        super(PolicyType.SYNC);\n+    public PullPolicyTO() {\n+        super(PolicyType.PULL);\n     }\n \n-    public SyncPolicySpec getSpecification() {\n+    public PullPolicySpec getSpecification() {\n         return specification;\n     }\n \n-    public void setSpecification(final SyncPolicySpec specification) {\n+    public void setSpecification(final PullPolicySpec specification) {\n         this.specification = specification;\n     }\n ","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/SyncPolicyTO.java"},{"sha":"ae6094b29135965cbf73753bf62d75a7afb395ec","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractProvisioningTaskTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -31,7 +31,7 @@\n \n @XmlRootElement(name = \"abstractProvisioningTask\")\n @XmlType\n-@XmlSeeAlso({ PushTaskTO.class, SyncTaskTO.class })\n+@XmlSeeAlso({ PushTaskTO.class, PullTaskTO.class })\n public class AbstractProvisioningTaskTO extends SchedTaskTO {\n \n     private static final long serialVersionUID = -2143537546915809016L;\n@@ -84,11 +84,11 @@ public void setPerformDelete(final boolean performDelete) {\n         this.performDelete = performDelete;\n     }\n \n-    public boolean isSyncStatus() {\n+    public boolean isPullStatus() {\n         return syncStatus;\n     }\n \n-    public void setSyncStatus(final boolean syncStatus) {\n+    public void setPullStatus(final boolean syncStatus) {\n         this.syncStatus = syncStatus;\n     }\n "},{"sha":"6063c4d1433f8b629f0a3b6907a7d85a7eb8c911","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PullTaskTO.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -28,16 +28,16 @@\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n \n-@XmlRootElement(name = \"syncTask\")\n+@XmlRootElement(name = \"pullTask\")\n @XmlType\n @XmlAccessorType(XmlAccessType.FIELD)\n-public class SyncTaskTO extends AbstractProvisioningTaskTO {\n+public class PullTaskTO extends AbstractProvisioningTaskTO {\n \n     private static final long serialVersionUID = -2143537546915809017L;\n \n-    private SyncMode syncMode;\n+    private PullMode pullMode;\n \n     private String reconciliationFilterBuilderClassName;\n \n@@ -47,12 +47,12 @@ public class SyncTaskTO extends AbstractProvisioningTaskTO {\n     @JsonIgnore\n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n-    public SyncMode getSyncMode() {\n-        return syncMode;\n+    public PullMode getPullMode() {\n+        return pullMode;\n     }\n \n-    public void setSyncMode(final SyncMode syncMode) {\n-        this.syncMode = syncMode;\n+    public void setPullMode(final PullMode pullMode) {\n+        this.pullMode = pullMode;\n     }\n \n     public String getReconciliationFilterBuilderClassName() {","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncTaskTO.java"},{"sha":"0f176c44d179966973d7fa9d3599a5ef1fba1092","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -68,13 +68,13 @@ public class ResourceTO extends AbstractAnnotatedBean implements EntityTO<String\n \n     private TraceLevel deleteTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel syncTraceLevel = TraceLevel.ALL;\n+    private TraceLevel pullTraceLevel = TraceLevel.ALL;\n \n     private Long passwordPolicy;\n \n     private Long accountPolicy;\n \n-    private Long syncPolicy;\n+    private Long pullPolicy;\n \n     private final Set<ConnConfProperty> confOverride = new HashSet<>();\n \n@@ -175,12 +175,12 @@ public void setAccountPolicy(final Long accountPolicy) {\n         this.accountPolicy = accountPolicy;\n     }\n \n-    public Long getSyncPolicy() {\n-        return syncPolicy;\n+    public Long getPullPolicy() {\n+        return pullPolicy;\n     }\n \n-    public void setSyncPolicy(final Long syncPolicy) {\n-        this.syncPolicy = syncPolicy;\n+    public void setPullPolicy(final Long pullPolicy) {\n+        this.pullPolicy = pullPolicy;\n     }\n \n     @JsonIgnore\n@@ -223,12 +223,12 @@ public Set<ConnectorCapability> getCapabilitiesOverride() {\n         return capabilitiesOverride;\n     }\n \n-    public TraceLevel getSyncTraceLevel() {\n-        return syncTraceLevel;\n+    public TraceLevel getPullTraceLevel() {\n+        return pullTraceLevel;\n     }\n \n-    public void setSyncTraceLevel(final TraceLevel syncTraceLevel) {\n-        this.syncTraceLevel = syncTraceLevel;\n+    public void setPullTraceLevel(final TraceLevel pullTraceLevel) {\n+        this.pullTraceLevel = pullTraceLevel;\n     }\n \n     @XmlElementWrapper(name = \"propagationActionsClassNames\")"},{"sha":"bf45a426abd7c7d39153fd2b88b41269121d48ee","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditElements.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -36,7 +36,7 @@ public enum EventCategoryType {\n         REST(StringUtils.EMPTY),\n         TASK(StringUtils.EMPTY),\n         PROPAGATION(\"PropagationTask\"),\n-        SYNCHRONIZATION(\"SyncTask\"),\n+        PULL(\"PullTask\"),\n         PUSH(\"PushTask\"),\n         CUSTOM(StringUtils.EMPTY);\n "},{"sha":"5e89dcf503c7ec564a7ccedfc92680ffd2ad0435","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -127,8 +127,8 @@ public static Pair<EventCategoryTO, Result> parseEventCategory(final String even\n \n                 if (EventCategoryType.PROPAGATION.toString().equals(elements[0])) {\n                     type = EventCategoryType.PROPAGATION;\n-                } else if (EventCategoryType.SYNCHRONIZATION.toString().equals(elements[0])) {\n-                    type = EventCategoryType.SYNCHRONIZATION;\n+                } else if (EventCategoryType.PULL.toString().equals(elements[0])) {\n+                    type = EventCategoryType.PULL;\n                 } else if (EventCategoryType.PUSH.toString().equals(elements[0])) {\n                     type = EventCategoryType.PUSH;\n                 } else {"},{"sha":"bceff27b4f943115723ec5b3679f47f8926440dc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -61,7 +61,7 @@ public enum ClientExceptionType {\n     InvalidNotification(Response.Status.BAD_REQUEST),\n     InvalidPropagationTask(Response.Status.BAD_REQUEST),\n     InvalidSchedTask(Response.Status.BAD_REQUEST),\n-    InvalidSyncTask(Response.Status.BAD_REQUEST),\n+    InvalidPullTask(Response.Status.BAD_REQUEST),\n     InvalidValues(Response.Status.BAD_REQUEST),\n     NotFound(Response.Status.NOT_FOUND),\n     RejectedUserCreate(Response.Status.BAD_REQUEST),"},{"sha":"7532730799e82a60b1a16a3106cfa4e1890230ca","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/EntityViolationType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -42,7 +42,7 @@ public enum EntityViolationType {\n     InvalidSchemaEnum(\"org.apache.syncope.core.persistence.validation.schema.enum\"),\n     InvalidSchemaMultivalueUnique(\"org.apache.syncope.core.persistence.validation.schema.multivalueUnique\"),\n     InvalidSchedTask(\"org.apache.syncope.core.persistence.validation.schedtask\"),\n-    InvalidProvisioningTask(\"org.apache.syncope.core.persistence.validation.synctask\"),\n+    InvalidProvisioningTask(\"org.apache.syncope.core.persistence.validation.provisioningtask\"),\n     InvalidPlainSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.plainSchema\"),\n     InvalidDerSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.derSchema\"),\n     InvalidVirSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.virSchema\"),"},{"sha":"59ee9b3bc5d12e111564984be42df006b983e5c7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/MappingPurpose.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMappingPurpose.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,7 +21,7 @@\n public enum MappingPurpose {\n \n     BOTH,\n-    SYNCHRONIZATION,\n+    PULL,\n     PROPAGATION,\n     NONE\n "},{"sha":"522c30d0e85778e234b82f9bc5965d23c0c2dd91","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PullMode.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPullMode.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,7 +21,7 @@\n import javax.xml.bind.annotation.XmlEnum;\n \n @XmlEnum\n-public enum SyncMode {\n+public enum PullMode {\n     FULL_RECONCILIATION,\n     FILTERED_RECONCILIATION,\n     INCREMENTAL;","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/SyncMode.java"},{"sha":"fcebb1c54323ac830076fb889e6fd1bc6a9a2497","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/TaskType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FTaskType.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -26,7 +26,7 @@ public enum TaskType {\n     PROPAGATION,\n     NOTIFICATION,\n     SCHEDULED,\n-    SYNCHRONIZATION,\n+    PULL,\n     PUSH;\n \n }"},{"sha":"4ecd0a1c69ebb6c3876e99e83d9f8d19e51897bb","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LoggerLogic.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -57,8 +57,8 @@\n import org.apache.syncope.core.persistence.api.entity.Logger;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.spring.BeanUtils;\n-import org.apache.syncope.core.provisioning.java.syncpull.PushJobDelegate;\n-import org.apache.syncope.core.provisioning.java.syncpull.SyncJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.Resource;\n import org.springframework.core.io.support.PathMatchingResourcePatternResolver;\n@@ -294,13 +294,13 @@ public List<EventCategoryTO> listAuditEvents() {\n             events.add(authenticationControllerEvents);\n \n             events.add(new EventCategoryTO(EventCategoryType.PROPAGATION));\n-            events.add(new EventCategoryTO(EventCategoryType.SYNCHRONIZATION));\n+            events.add(new EventCategoryTO(EventCategoryType.PULL));\n             events.add(new EventCategoryTO(EventCategoryType.PUSH));\n \n             for (AnyTypeKind anyTypeKind : AnyTypeKind.values()) {\n                 for (ExternalResource resource : resourceDAO.findAll()) {\n                     EventCategoryTO propEventCategoryTO = new EventCategoryTO(EventCategoryType.PROPAGATION);\n-                    EventCategoryTO syncEventCategoryTO = new EventCategoryTO(EventCategoryType.SYNCHRONIZATION);\n+                    EventCategoryTO syncEventCategoryTO = new EventCategoryTO(EventCategoryType.PULL);\n                     EventCategoryTO pushEventCategoryTO = new EventCategoryTO(EventCategoryType.PUSH);\n \n                     propEventCategoryTO.setCategory(anyTypeKind.name().toLowerCase());\n@@ -342,7 +342,7 @@ public List<EventCategoryTO> listAuditEvents() {\n             }\n \n             EventCategoryTO eventCategoryTO = new EventCategoryTO(EventCategoryType.TASK);\n-            eventCategoryTO.setCategory(SyncJobDelegate.class.getSimpleName());\n+            eventCategoryTO.setCategory(PullJobDelegate.class.getSimpleName());\n             events.add(eventCategoryTO);\n \n             eventCategoryTO = new EventCategoryTO(EventCategoryType.TASK);"},{"sha":"76c0d6667ab6ae90eda42b1cc140169f5c01325d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/PolicyLogic.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -27,19 +27,19 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.apache.syncope.core.provisioning.api.data.PolicyDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Component\n public class PolicyLogic extends AbstractTransactionalLogic<AbstractPolicyTO> {\n@@ -82,10 +82,10 @@ public AccountPolicyTO update(final AccountPolicyTO policyTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.POLICY_UPDATE + \"')\")\n-    public SyncPolicyTO update(final SyncPolicyTO policyTO) {\n+    public PullPolicyTO update(final PullPolicyTO policyTO) {\n         Policy policy = policyDAO.find(policyTO.getKey());\n-        if (!(policy instanceof SyncPolicy)) {\n-            throw new NotFoundException(\"SyncPolicy with key \" + policyTO.getKey());\n+        if (!(policy instanceof PullPolicy)) {\n+            throw new NotFoundException(PullPolicy.class.getSimpleName() + \" with key \" + policyTO.getKey());\n         }\n \n         return update(policyTO, policy);"},{"sha":"af8d1e1b6524d6cc345655523d8dc4b3e177d4d3","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -185,9 +185,9 @@ public PlatformInfo platform() {\n                         addAll(implLookup.getClassNames(Type.RECONCILIATION_FILTER_BUILDER));\n                 PLATFORM_INFO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n                 PLATFORM_INFO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n-                PLATFORM_INFO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n+                PLATFORM_INFO.getPullActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n                 PLATFORM_INFO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n-                PLATFORM_INFO.getSyncCorrelationRules().addAll(implLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n+                PLATFORM_INFO.getPullCorrelationRules().addAll(implLookup.getClassNames(Type.PULL_CORRELATION_RULE));\n                 PLATFORM_INFO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));\n                 PLATFORM_INFO.getNotificationRecipientsProviders().\n                         addAll(implLookup.getClassNames(Type.NOTIFICATION_RECIPIENTS_PROVIDER));\n@@ -285,7 +285,7 @@ public NumbersInfo numbers() {\n         numbersInfo.getConfCompleteness().put(\n                 NumbersInfo.ConfItem.NOTIFICATION, !notificationDAO.findAll().isEmpty());\n         numbersInfo.getConfCompleteness().put(\n-                NumbersInfo.ConfItem.SYNC_TASK, !taskDAO.findAll(TaskType.SYNCHRONIZATION).isEmpty());\n+                NumbersInfo.ConfItem.SYNC_TASK, !taskDAO.findAll(TaskType.PULL).isEmpty());\n         numbersInfo.getConfCompleteness().put(\n                 NumbersInfo.ConfItem.VIR_SCHEMA, !virSchemaDAO.findAll().isEmpty());\n         numbersInfo.getConfCompleteness().put("},{"sha":"a9ec0a530d9b44cbff870f364c2af77d5efe527b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -197,7 +197,7 @@ public ExecTO execute(final Long taskKey, final Date startAt, final boolean dryR\n                 break;\n \n             case SCHEDULED:\n-            case SYNCHRONIZATION:\n+            case PULL:\n             case PUSH:\n                 if (!((SchedTask) task).isActive()) {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n@@ -252,7 +252,7 @@ public <T extends AbstractTaskTO> T delete(final Long taskKey) {\n         T taskToDelete = binder.getTaskTO(task, taskUtils, true);\n \n         if (TaskType.SCHEDULED == taskUtils.getType()\n-                || TaskType.SYNCHRONIZATION == taskUtils.getType()\n+                || TaskType.PULL == taskUtils.getType()\n                 || TaskType.PUSH == taskUtils.getType()) {\n \n             jobManager.unregister(task);"},{"sha":"7dbf5162d3f56058e96b9aad612f850b94922ff1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -42,19 +42,19 @@\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationRecipientsProvider;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncCorrelationRule;\n-import org.apache.syncope.core.provisioning.java.syncpull.PushJobDelegate;\n-import org.apache.syncope.core.provisioning.java.syncpull.SyncJobDelegate;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n /**\n  * Cache class names for all implementations of Syncope interfaces found in classpath, for later usage.\n@@ -98,9 +98,9 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(ReconciliationFilterBuilder.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(LogicActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PropagationActions.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(SyncActions.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PullActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PushActions.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(SyncCorrelationRule.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(Validator.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(NotificationRecipientsProvider.class));\n \n@@ -140,7 +140,7 @@ public void load() {\n                 }\n \n                 if (SchedTaskJobDelegate.class.isAssignableFrom(clazz) && !isAbsractClazz\n-                        && !SyncJobDelegate.class.isAssignableFrom(clazz)\n+                        && !PullJobDelegate.class.isAssignableFrom(clazz)\n                         && !PushJobDelegate.class.isAssignableFrom(clazz)) {\n \n                     classNames.get(Type.TASKJOBDELEGATE).add(bd.getBeanClassName());\n@@ -158,16 +158,16 @@ public void load() {\n                     classNames.get(Type.PROPAGATION_ACTIONS).add(bd.getBeanClassName());\n                 }\n \n-                if (SyncActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                if (PullActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                     classNames.get(Type.SYNC_ACTIONS).add(bd.getBeanClassName());\n                 }\n \n                 if (PushActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                     classNames.get(Type.PUSH_ACTIONS).add(bd.getBeanClassName());\n                 }\n \n-                if (SyncCorrelationRule.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                    classNames.get(Type.SYNC_CORRELATION_RULE).add(bd.getBeanClassName());\n+                if (PullCorrelationRule.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    classNames.get(Type.PULL_CORRELATION_RULE).add(bd.getBeanClassName());\n                 }\n \n                 if (Validator.class.isAssignableFrom(clazz) && !isAbsractClazz) {"},{"sha":"dec65f5ee71c358c846302bffa1cd1ed1caa6645","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/JobManagerImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -42,7 +42,6 @@\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n import org.apache.syncope.core.logic.notification.NotificationJob;\n@@ -52,8 +51,8 @@\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n-import org.apache.syncope.core.provisioning.java.syncpull.PushJobDelegate;\n-import org.apache.syncope.core.provisioning.java.syncpull.SyncJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.quartz.CronScheduleBuilder;\n import org.quartz.Job;\n import org.quartz.JobBuilder;\n@@ -76,6 +75,7 @@\n import org.identityconnectors.common.IOUtil;\n import org.quartz.impl.jdbcjobstore.Constants;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n @Component\n public class JobManagerImpl implements JobManager, SyncopeLoader {\n@@ -229,8 +229,8 @@ public Map<String, Object> register(final SchedTask task, final Date startAt, fi\n         TaskJob job = createSpringBean(TaskJob.class);\n         job.setTaskKey(task.getKey());\n \n-        String jobDelegateClassName = task instanceof SyncTask\n-                ? SyncJobDelegate.class.getName()\n+        String jobDelegateClassName = task instanceof PullTask\n+                ? PullJobDelegate.class.getName()\n                 : task instanceof PushTask\n                         ? PushJobDelegate.class.getName()\n                         : task.getJobDelegateClassName();\n@@ -321,7 +321,7 @@ public Pair<String, Long> exec() {\n                 public Void exec() {\n                     // 1. jobs for SchedTasks\n                     Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n-                    tasks.addAll(taskDAO.<SyncTask>findAll(TaskType.SYNCHRONIZATION));\n+                    tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));\n                     tasks.addAll(taskDAO.<PushTask>findAll(TaskType.PUSH));\n                     for (SchedTask task : tasks) {\n                         try {"},{"sha":"6a88085a30ad44671ccba01c1a436c1336a465b2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -40,7 +40,7 @@ enum Type {\n         PROPAGATION_ACTIONS,\n         SYNC_ACTIONS,\n         PUSH_ACTIONS,\n-        SYNC_CORRELATION_RULE,\n+        PULL_CORRELATION_RULE,\n         VALIDATOR,\n         NOTIFICATION_RECIPIENTS_PROVIDER;\n "},{"sha":"781b77a335f0a90adcceaa39dacd1137bd1c127a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/LinkingMappingItem.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -105,7 +105,7 @@ public void setMandatoryCondition(final String condition) {\n \n     @Override\n     public MappingPurpose getPurpose() {\n-        return virSchema.isReadonly() ? MappingPurpose.SYNCHRONIZATION : MappingPurpose.BOTH;\n+        return virSchema.isReadonly() ? MappingPurpose.PULL : MappingPurpose.BOTH;\n     }\n \n     @Override"},{"sha":"da82cb714e9c0d60fc54a99961a04d71e0105cf2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/policy/PullPolicy.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FPullPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FPullPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FPullPolicy.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.policy;\n \n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n \n-public interface SyncPolicy extends Policy {\n+public interface PullPolicy extends Policy {\n \n-    SyncPolicySpec getSpecification();\n+    PullPolicySpec getSpecification();\n \n-    void setSpecification(SyncPolicySpec spec);\n+    void setSpecification(PullPolicySpec spec);\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/policy/SyncPolicy.java"},{"sha":"7b5147e5c8c95f24e03c80ad67812c36b46760b2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n \n public interface ExternalResource extends AnnotatedEntity<String> {\n@@ -57,9 +57,9 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     void setPasswordPolicy(PasswordPolicy passwordPolicy);\n \n-    SyncPolicy getSyncPolicy();\n+    PullPolicy getPullPolicy();\n \n-    void setSyncPolicy(SyncPolicy syncPolicy);\n+    void setPullPolicy(PullPolicy pullPolicy);\n \n     TraceLevel getCreateTraceLevel();\n \n@@ -73,9 +73,9 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     void setDeleteTraceLevel(TraceLevel deleteTraceLevel);\n \n-    TraceLevel getSyncTraceLevel();\n+    TraceLevel getPullTraceLevel();\n \n-    void setSyncTraceLevel(TraceLevel syncTraceLevel);\n+    void setPullTraceLevel(TraceLevel pullTraceLevel);\n \n     List<String> getPropagationActionsClassNames();\n "},{"sha":"10eafe5ebcfbe19ad66b30a75d7f5568f2efe5c3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/AnyTemplatePullTask.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FAnyTemplatePullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FAnyTemplatePullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FAnyTemplatePullTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -20,9 +20,9 @@\n \n import org.apache.syncope.core.persistence.api.entity.AnyTemplate;\n \n-public interface AnyTemplateSyncTask extends AnyTemplate {\n+public interface AnyTemplatePullTask extends AnyTemplate {\n \n-    SyncTask getSyncTask();\n+    PullTask getPullTask();\n \n-    void setSyncTask(SyncTask syncTask);\n+    void setPullTask(PullTask pullTask);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/AnyTemplateSyncTask.java"},{"sha":"ac2d2f707afa358e02d3cf550e732f190c167570","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/ProvisioningTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -51,8 +51,8 @@ public interface ProvisioningTask extends SchedTask {\n \n     void setPerformUpdate(boolean performUpdate);\n \n-    boolean isSyncStatus();\n+    boolean isPullStatus();\n \n-    void setSyncStatus(boolean syncStatus);\n+    void setPullStatus(boolean pullStatus);\n \n }"},{"sha":"52c5b93c645ca15da61c4de29dd37fe9e3f29921","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PullTask.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -19,15 +19,15 @@\n package org.apache.syncope.core.persistence.api.entity.task;\n \n import java.util.List;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n-public interface SyncTask extends ProvisioningTask {\n+public interface PullTask extends ProvisioningTask {\n \n-    SyncMode getSyncMode();\n+    PullMode getPullMode();\n \n-    void setSyncMode(SyncMode syncMode);\n+    void setPullMode(PullMode pullMode);\n \n     String getReconciliationFilterBuilderClassName();\n \n@@ -37,9 +37,9 @@ public interface SyncTask extends ProvisioningTask {\n \n     void setDestinationRealm(Realm destinationRealm);\n \n-    boolean add(AnyTemplateSyncTask template);\n+    boolean add(AnyTemplatePullTask template);\n \n-    AnyTemplateSyncTask getTemplate(AnyType anyType);\n+    AnyTemplatePullTask getTemplate(AnyType anyType);\n \n-    List<? extends AnyTemplateSyncTask> getTemplates();\n+    List<? extends AnyTemplatePullTask> getTemplates();\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/SyncTask.java"},{"sha":"44c6e0861239100e3eb6525203c7947f41237dff","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAExternalResourceDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -106,8 +106,8 @@ private StringBuilder getByPolicyQuery(final PolicyType type) {\n                 query.append(\"passwordPolicy\");\n                 break;\n \n-            case SYNC:\n-                query.append(\"syncPolicy\");\n+            case PULL:\n+                query.append(\"pullPolicy\");\n                 break;\n \n             default:\n@@ -198,7 +198,7 @@ public void delete(final String name) {\n         }\n \n         taskDAO.deleteAll(resource, TaskType.PROPAGATION);\n-        taskDAO.deleteAll(resource, TaskType.SYNCHRONIZATION);\n+        taskDAO.deleteAll(resource, TaskType.PULL);\n         taskDAO.deleteAll(resource, TaskType.PUSH);\n \n         for (AnyObject anyObject : anyObjectDAO.findByResource(resource)) {"},{"sha":"5100de8e53d28505c2814e0cb3ccec66e75de0ce","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARealmDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -117,7 +117,7 @@ private <T extends Policy> List<Realm> findSamePolicyChildren(final Realm realm,\n \n     @Override\n     public <T extends Policy> List<Realm> findByPolicy(final T policy) {\n-        if (policy.getType() == PolicyType.SYNC) {\n+        if (policy.getType() == PolicyType.PULL) {\n             return Collections.<Realm>emptyList();\n         }\n "},{"sha":"c9ef66a4794ea5d2b6f0e2461041de1bea2509a6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPASyncTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.AbstractTask;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n@@ -63,8 +63,8 @@ public Class<? extends Task> getEntityReference(final TaskType type) {\n                 result = JPASchedTask.class;\n                 break;\n \n-            case SYNCHRONIZATION:\n-                result = JPASyncTask.class;\n+            case PULL:\n+                result = JPAPullTask.class;\n                 break;\n \n             default:\n@@ -116,7 +116,7 @@ private StringBuilder buildFindAllQuery(\n             final Long anyTypeKey) {\n \n         if (resource != null\n-                && type != TaskType.PROPAGATION && type != TaskType.PUSH && type != TaskType.SYNCHRONIZATION) {\n+                && type != TaskType.PROPAGATION && type != TaskType.PUSH && type != TaskType.PULL) {\n \n             throw new IllegalArgumentException(type + \" is not related to \" + ExternalResource.class.getSimpleName());\n         }"},{"sha":"881f509afe3930c42c5b9eafabff00e757c52f3c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.persistence.jpa.entity;\n \n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPasswordPolicy;\n-import org.apache.syncope.core.persistence.jpa.entity.policy.JPASyncPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccountPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership;\n@@ -49,7 +49,6 @@\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n import org.apache.syncope.core.persistence.api.entity.ReportTemplate;\n import org.apache.syncope.core.persistence.api.entity.Role;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ADynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n@@ -70,13 +69,11 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n import org.apache.syncope.core.persistence.api.entity.user.UDynGroupMembership;\n@@ -106,12 +103,12 @@\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAMappingItem;\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAProvision;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplateSyncTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPASyncTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership;\n@@ -121,6 +118,9 @@\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Component\n public class JPAEntityFactory implements EntityFactory {\n@@ -142,8 +142,8 @@ public <KEY, T extends Entity<KEY>> T newEntity(final Class<T> reference) {\n             result = (T) new JPAPasswordPolicy();\n         } else if (reference.equals(PushPolicy.class)) {\n             result = (T) new JPAPushPolicy();\n-        } else if (reference.equals(SyncPolicy.class)) {\n-            result = (T) new JPASyncPolicy();\n+        } else if (reference.equals(PullPolicy.class)) {\n+            result = (T) new JPAPullPolicy();\n         } else if (reference.equals(AnyTypeClass.class)) {\n             result = (T) new JPAAnyTypeClass();\n         } else if (reference.equals(AnyType.class)) {\n@@ -228,16 +228,16 @@ public <KEY, T extends Entity<KEY>> T newEntity(final Class<T> reference) {\n             result = (T) new JPAPropagationTask();\n         } else if (reference.equals(PushTask.class)) {\n             result = (T) new JPAPushTask();\n-        } else if (reference.equals(SyncTask.class)) {\n-            result = (T) new JPASyncTask();\n+        } else if (reference.equals(PullTask.class)) {\n+            result = (T) new JPAPullTask();\n         } else if (reference.equals(SchedTask.class)) {\n             result = (T) new JPASchedTask();\n         } else if (reference.equals(TaskExec.class)) {\n             result = (T) new JPATaskExec();\n         } else if (reference.equals(PushTaskAnyFilter.class)) {\n             result = (T) new JPAPushTaskAnyFilter();\n-        } else if (reference.equals(AnyTemplateSyncTask.class)) {\n-            result = (T) new JPAAnyTemplateSyncTask();\n+        } else if (reference.equals(AnyTemplatePullTask.class)) {\n+            result = (T) new JPAAnyTemplatePullTask();\n         } else if (reference.equals(SecurityQuestion.class)) {\n             result = (T) new JPASecurityQuestion();\n         } else if (reference.equals(Logger.class)) {"},{"sha":"c408b4328e85af83eb1cf67ef3737b4ccbe74d4b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAPullPolicy.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPullPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPullPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPullPolicy.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -21,34 +21,34 @@\n import javax.persistence.Entity;\n import javax.persistence.Lob;\n import javax.persistence.Table;\n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Entity\n-@Table(name = JPASyncPolicy.TABLE)\n-public class JPASyncPolicy extends AbstractPolicy implements SyncPolicy {\n+@Table(name = JPAPullPolicy.TABLE)\n+public class JPAPullPolicy extends AbstractPolicy implements PullPolicy {\n \n     private static final long serialVersionUID = -6090413855809521279L;\n \n-    public static final String TABLE = \"SyncPolicy\";\n+    public static final String TABLE = \"PullPolicy\";\n \n     @Lob\n     private String specification;\n \n-    public JPASyncPolicy() {\n+    public JPAPullPolicy() {\n         super();\n-        this.type = PolicyType.SYNC;\n+        this.type = PolicyType.PULL;\n     }\n \n     @Override\n-    public SyncPolicySpec getSpecification() {\n-        return POJOHelper.deserialize(specification, SyncPolicySpec.class);\n+    public PullPolicySpec getSpecification() {\n+        return POJOHelper.deserialize(specification, PullPolicySpec.class);\n     }\n \n     @Override\n-    public void setSpecification(final SyncPolicySpec policy) {\n+    public void setSpecification(final PullPolicySpec policy) {\n         this.specification = POJOHelper.serialize(policy);\n     }\n }","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPASyncPolicy.java"},{"sha":"e4158eaf63d2f81becc66b482fbeebe4e9c1ac32","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -50,7 +50,6 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.apache.syncope.core.persistence.jpa.validation.entity.ExternalResourceCheck;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n@@ -60,11 +59,12 @@\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccountPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.JPAConnInstance;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPasswordPolicy;\n-import org.apache.syncope.core.persistence.jpa.entity.policy.JPASyncPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullPolicy;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n /**\n- * Resource for propagation and synchronization.\n+ * Resource for propagation and pull.\n  */\n @Entity\n @Table(name = JPAExternalResource.TABLE)\n@@ -128,7 +128,7 @@ public class JPAExternalResource extends AbstractAnnotatedEntity<String> impleme\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private TraceLevel syncTraceLevel;\n+    private TraceLevel pullTraceLevel;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAPasswordPolicy passwordPolicy;\n@@ -137,7 +137,7 @@ public class JPAExternalResource extends AbstractAnnotatedEntity<String> impleme\n     private JPAAccountPolicy accountPolicy;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n-    private JPASyncPolicy syncPolicy;\n+    private JPAPullPolicy pullPolicy;\n \n     /**\n      * Configuration properties that are overridden from the connector instance.\n@@ -180,7 +180,7 @@ public JPAExternalResource() {\n         createTraceLevel = TraceLevel.FAILURES;\n         updateTraceLevel = TraceLevel.FAILURES;\n         deleteTraceLevel = TraceLevel.FAILURES;\n-        syncTraceLevel = TraceLevel.FAILURES;\n+        pullTraceLevel = TraceLevel.FAILURES;\n     }\n \n     @Override\n@@ -301,13 +301,13 @@ public void setUpdateTraceLevel(final TraceLevel updateTraceLevel) {\n     }\n \n     @Override\n-    public TraceLevel getSyncTraceLevel() {\n-        return syncTraceLevel;\n+    public TraceLevel getPullTraceLevel() {\n+        return pullTraceLevel;\n     }\n \n     @Override\n-    public void setSyncTraceLevel(final TraceLevel syncTraceLevel) {\n-        this.syncTraceLevel = syncTraceLevel;\n+    public void setPullTraceLevel(final TraceLevel pullTraceLevel) {\n+        this.pullTraceLevel = pullTraceLevel;\n     }\n \n     @Override\n@@ -333,14 +333,14 @@ public void setPasswordPolicy(final PasswordPolicy passwordPolicy) {\n     }\n \n     @Override\n-    public SyncPolicy getSyncPolicy() {\n-        return syncPolicy;\n+    public PullPolicy getPullPolicy() {\n+        return pullPolicy;\n     }\n \n     @Override\n-    public void setSyncPolicy(final SyncPolicy syncPolicy) {\n-        checkType(syncPolicy, JPASyncPolicy.class);\n-        this.syncPolicy = (JPASyncPolicy) syncPolicy;\n+    public void setPullPolicy(final PullPolicy pullPolicy) {\n+        checkType(pullPolicy, JPAPullPolicy.class);\n+        this.pullPolicy = (JPAPullPolicy) pullPolicy;\n     }\n \n     @Override"},{"sha":"b2e2b619dc471315118efb3bac2a8b5ee6d0a95d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -41,7 +41,7 @@ public abstract class AbstractProvisioningTask extends JPASchedTask implements P\n     private static final long serialVersionUID = -4141057723006682562L;\n \n     /**\n-     * ExternalResource to which the sync happens.\n+     * ExternalResource to which pull happens.\n      */\n     @ManyToOne\n     private JPAExternalResource resource;\n@@ -64,7 +64,7 @@ public abstract class AbstractProvisioningTask extends JPASchedTask implements P\n     @Basic\n     @Min(0)\n     @Max(1)\n-    private Integer syncStatus;\n+    private Integer pullStatus;\n \n     /**\n      * @see UnmatchingRule\n@@ -89,7 +89,7 @@ public AbstractProvisioningTask(final TaskType type, final String jobDelegateCla\n \n     @Override\n     public void setJobDelegateClassName(final String jobClassName) {\n-        // fixed to SyncJob, cannot be changed\n+        // fixed to PullJob, cannot be changed\n     }\n \n     @Override\n@@ -137,13 +137,13 @@ public void setPerformDelete(final boolean performDelete) {\n     }\n \n     @Override\n-    public boolean isSyncStatus() {\n-        return isBooleanAsInteger(syncStatus);\n+    public boolean isPullStatus() {\n+        return isBooleanAsInteger(pullStatus);\n     }\n \n     @Override\n-    public void setSyncStatus(final boolean syncStatus) {\n-        this.syncStatus = getBooleanAsInteger(syncStatus);\n+    public void setPullStatus(final boolean pullStatus) {\n+        this.pullStatus = getBooleanAsInteger(pullStatus);\n     }\n \n     @Override"},{"sha":"66e37ff19168f51bc6d6a789bba1238981228903","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAAnyTemplatePullTask.java","status":"renamed","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAAnyTemplatePullTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -23,39 +23,39 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.jpa.entity.resource.AbstractAnyTemplate;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n \n @Entity\n-@Table(name = JPAAnyTemplateSyncTask.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"syncTask_id\", \"anyType_name\" }))\n-public class JPAAnyTemplateSyncTask extends AbstractAnyTemplate implements AnyTemplateSyncTask {\n+@Table(name = JPAAnyTemplatePullTask.TABLE, uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"pullTask_id\", \"anyType_name\" }))\n+public class JPAAnyTemplatePullTask extends AbstractAnyTemplate implements AnyTemplatePullTask {\n \n     private static final long serialVersionUID = 3517381731849788407L;\n \n-    public static final String TABLE = \"AnyTemplateSyncTask\";\n+    public static final String TABLE = \"AnyTemplatePullTask\";\n \n     @Id\n     private Long id;\n \n     @ManyToOne\n-    private JPASyncTask syncTask;\n+    private JPAPullTask pullTask;\n \n     @Override\n     public Long getKey() {\n         return id;\n     }\n \n     @Override\n-    public SyncTask getSyncTask() {\n-        return syncTask;\n+    public PullTask getPullTask() {\n+        return pullTask;\n     }\n \n     @Override\n-    public void setSyncTask(final SyncTask syncTask) {\n-        checkType(syncTask, JPASyncTask.class);\n-        this.syncTask = (JPASyncTask) syncTask;\n+    public void setPullTask(final PullTask pullTask) {\n+        checkType(pullTask, JPAPullTask.class);\n+        this.pullTask = (JPAPullTask) pullTask;\n     }\n \n }","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAAnyTemplateSyncTask.java"},{"sha":"e97b3c6b13198729bf5200d855f54e2ee997d887","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTask.java","status":"renamed","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -37,24 +37,24 @@\n import javax.validation.constraints.NotNull;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.AnyTemplate;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n \n @Entity\n-@DiscriminatorValue(\"SyncTask\")\n-public class JPASyncTask extends AbstractProvisioningTask implements SyncTask {\n+@DiscriminatorValue(\"PullTask\")\n+public class JPAPullTask extends AbstractProvisioningTask implements PullTask {\n \n     private static final long serialVersionUID = -4141057723006682563L;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private SyncMode syncMode;\n+    private PullMode pullMode;\n \n     private String reconciliationFilterBuilderClassName;\n \n@@ -63,29 +63,29 @@ public class JPASyncTask extends AbstractProvisioningTask implements SyncTask {\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"actionClassName\")\n-    @CollectionTable(name = \"SyncTask_actionsClassNames\",\n+    @CollectionTable(name = \"PullTask_actionsClassNames\",\n             joinColumns =\n-            @JoinColumn(name = \"syncTask_id\", referencedColumnName = \"id\"))\n+            @JoinColumn(name = \"pullTask_id\", referencedColumnName = \"id\"))\n     private Set<String> actionsClassNames = new HashSet<>();\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"syncTask\")\n-    private List<JPAAnyTemplateSyncTask> templates = new ArrayList<>();\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pullTask\")\n+    private List<JPAAnyTemplatePullTask> templates = new ArrayList<>();\n \n     /**\n      * Default constructor.\n      */\n-    public JPASyncTask() {\n-        super(TaskType.SYNCHRONIZATION, null);\n+    public JPAPullTask() {\n+        super(TaskType.PULL, null);\n     }\n \n     @Override\n-    public SyncMode getSyncMode() {\n-        return syncMode;\n+    public PullMode getPullMode() {\n+        return pullMode;\n     }\n \n     @Override\n-    public void setSyncMode(final SyncMode syncMode) {\n-        this.syncMode = syncMode;\n+    public void setPullMode(final PullMode pullMode) {\n+        this.pullMode = pullMode;\n     }\n \n     @Override\n@@ -115,13 +115,13 @@ public Set<String> getActionsClassNames() {\n     }\n \n     @Override\n-    public boolean add(final AnyTemplateSyncTask template) {\n-        checkType(template, JPAAnyTemplateSyncTask.class);\n-        return this.templates.add((JPAAnyTemplateSyncTask) template);\n+    public boolean add(final AnyTemplatePullTask template) {\n+        checkType(template, JPAAnyTemplatePullTask.class);\n+        return this.templates.add((JPAAnyTemplatePullTask) template);\n     }\n \n     @Override\n-    public AnyTemplateSyncTask getTemplate(final AnyType anyType) {\n+    public AnyTemplatePullTask getTemplate(final AnyType anyType) {\n         return IterableUtils.find(templates, new Predicate<AnyTemplate>() {\n \n             @Override\n@@ -132,7 +132,7 @@ public boolean evaluate(final AnyTemplate template) {\n     }\n \n     @Override\n-    public List<? extends AnyTemplateSyncTask> getTemplates() {\n+    public List<? extends AnyTemplatePullTask> getTemplates() {\n         return templates;\n     }\n ","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASyncTask.java"},{"sha":"6051f1e2cac7f5e6197113e4f9505dc6dd527d3b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTaskAnyFilter.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -62,9 +62,9 @@ public PushTask getPushTask() {\n     }\n \n     @Override\n-    public void setPushTask(final PushTask syncTask) {\n-        checkType(syncTask, JPAPushTask.class);\n-        this.pushTask = (JPAPushTask) syncTask;\n+    public void setPushTask(final PushTask pushTask) {\n+        checkType(pushTask, JPAPushTask.class);\n+        this.pushTask = (JPAPushTask) pushTask;\n     }\n \n     @Override"},{"sha":"09055335cc583dad8304808fa57db18ddd913bfb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskUtils.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -23,15 +23,15 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskUtils;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n @SuppressWarnings(\"unchecked\")\n public final class JPATaskUtils implements TaskUtils {\n@@ -60,8 +60,8 @@ public <T extends Task> Class<T> taskClass() {\n                 result = (Class<T>) SchedTask.class;\n                 break;\n \n-            case SYNCHRONIZATION:\n-                result = (Class<T>) SyncTask.class;\n+            case PULL:\n+                result = (Class<T>) PullTask.class;\n                 break;\n \n             case PUSH:\n@@ -91,8 +91,8 @@ public <T extends Task> T newTask() {\n                 result = (T) new JPASchedTask();\n                 break;\n \n-            case SYNCHRONIZATION:\n-                result = (T) new JPASyncTask();\n+            case PULL:\n+                result = (T) new JPAPullTask();\n                 break;\n \n             case PUSH:\n@@ -122,8 +122,8 @@ public <T extends AbstractTaskTO> Class<T> taskTOClass() {\n                 result = (Class<T>) SchedTaskTO.class;\n                 break;\n \n-            case SYNCHRONIZATION:\n-                result = (Class<T>) SyncTaskTO.class;\n+            case PULL:\n+                result = (Class<T>) PullTaskTO.class;\n                 break;\n \n             case PUSH:"},{"sha":"a26debde6384c64e87b3817227a97e26d0c98c46","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskUtilsFactory.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -23,17 +23,17 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskUtils;\n import org.apache.syncope.core.persistence.api.entity.task.TaskUtilsFactory;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n @Component\n public class JPATaskUtilsFactory implements TaskUtilsFactory {\n@@ -46,8 +46,8 @@ public TaskUtils getInstance(final TaskType type) {\n     @Override\n     public TaskUtils getInstance(final Task task) {\n         TaskType type;\n-        if (task instanceof SyncTask) {\n-            type = TaskType.SYNCHRONIZATION;\n+        if (task instanceof PullTask) {\n+            type = TaskType.PULL;\n         } else if (task instanceof PushTask) {\n             type = TaskType.PUSH;\n         } else if (task instanceof SchedTask) {\n@@ -72,8 +72,8 @@ public TaskUtils getInstance(final Class<? extends AbstractTaskTO> taskClass) {\n             type = TaskType.NOTIFICATION;\n         } else if (taskClass == SchedTaskTO.class) {\n             type = TaskType.SCHEDULED;\n-        } else if (taskClass == SyncTaskTO.class) {\n-            type = TaskType.SYNCHRONIZATION;\n+        } else if (taskClass == PullTaskTO.class) {\n+            type = TaskType.PULL;\n         } else if (taskClass == PushTaskTO.class) {\n             type = TaskType.PUSH;\n         } else {"},{"sha":"e5c053c9a29bb1a30d06ae7802bed67fc4b8e255","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ProvisioningTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskCheck.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@\n @Documented\n public @interface ProvisioningTaskCheck {\n \n-    String message() default \"{org.apache.syncope.core.persistence.validation.abstractsynctask}\";\n+    String message() default \"{org.apache.syncope.core.persistence.validation.provisioningtask}\";\n \n     Class<?>[] groups() default {};\n "},{"sha":"ef20acef291e22b12ddf5903fec1c29c081fac8f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ProvisioningTaskValidator.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -20,14 +20,14 @@\n \n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPASyncTask;\n-import org.apache.syncope.core.provisioning.api.syncpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n public class ProvisioningTaskValidator extends AbstractValidator<ProvisioningTaskCheck, ProvisioningTask> {\n \n@@ -60,14 +60,14 @@ public boolean isValid(final ProvisioningTask task, final ConstraintValidatorCon\n                     boolean isAssignable = false;\n                     try {\n                         actionsClass = Class.forName(className);\n-                        isAssignable = task instanceof JPASyncTask\n-                                ? SyncActions.class.isAssignableFrom(actionsClass)\n+                        isAssignable = task instanceof JPAPullTask\n+                                ? PullActions.class.isAssignableFrom(actionsClass)\n                                 : task instanceof JPAPushTask\n                                         ? PushActions.class.isAssignableFrom(actionsClass)\n                                         : false;\n                     } catch (Exception e) {\n                         LOG.error(\"Invalid {} / {} specified\",\n-                                PushActions.class.getName(), SyncActions.class.getName(), e);\n+                                PushActions.class.getName(), PullActions.class.getName(), e);\n                         isValid = false;\n                     }\n \n@@ -82,17 +82,17 @@ public boolean isValid(final ProvisioningTask task, final ConstraintValidatorCon\n                 }\n             }\n \n-            if (isValid && task instanceof SyncTask\n-                    && ((SyncTask) task).getSyncMode() == SyncMode.FILTERED_RECONCILIATION) {\n+            if (isValid && task instanceof PullTask\n+                    && ((PullTask) task).getPullMode() == PullMode.FILTERED_RECONCILIATION) {\n \n                 Class<?> filterBuilderClass = null;\n                 boolean isAssignable = false;\n                 try {\n-                    filterBuilderClass = Class.forName(((SyncTask) task).getReconciliationFilterBuilderClassName());\n+                    filterBuilderClass = Class.forName(((PullTask) task).getReconciliationFilterBuilderClassName());\n                     isAssignable = ReconciliationFilterBuilder.class.isAssignableFrom(filterBuilderClass);\n                 } catch (Exception e) {\n                     LOG.error(\"Invalid {} specified\",\n-                            ReconciliationFilterBuilder.class.getName(), SyncActions.class.getName(), e);\n+                            ReconciliationFilterBuilder.class.getName(), PullActions.class.getName(), e);\n                     isValid = false;\n                 }\n "},{"sha":"42cb1160e9a788314257830ae90629ca8eedfb6d","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-oracle.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -320,11 +320,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplateSyncTask\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyTemplateSyncTask\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyTemplateSyncTask\" pk-column-value=\"SEQ_AnyTemplateSyncTask\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_AnyTemplatePullTask\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyTemplatePullTask\" pk-column-value=\"SEQ_AnyTemplatePullTask\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"42cb1160e9a788314257830ae90629ca8eedfb6d","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-sqlserver.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -320,11 +320,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplateSyncTask\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyTemplateSyncTask\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyTemplateSyncTask\" pk-column-value=\"SEQ_AnyTemplateSyncTask\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_AnyTemplatePullTask\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyTemplatePullTask\" pk-column-value=\"SEQ_AnyTemplatePullTask\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"721916ca37fb8af9a301ee4da392f1326b4f56f7","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -368,11 +368,11 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplateSyncTask\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_AnyTemplateSyncTask\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_AnyTemplateSyncTask\" pk-column-value=\"SEQ_AnyTemplateSyncTask\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_AnyTemplatePullTask\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyTemplatePullTask\" pk-column-value=\"SEQ_AnyTemplatePullTask\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"426a3de95b29f7f39f2f0f748b609a6e360d0435","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,17 +29,17 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Transactional(\"Master\")\n public class PolicyTest extends AbstractTest {\n@@ -59,10 +59,10 @@ public void findAll() {\n \n     @Test\n     public void findByKey() {\n-        SyncPolicy policy = policyDAO.find(3L);\n+        PullPolicy policy = policyDAO.find(3L);\n         assertNotNull(\"findById did not work\", policy);\n \n-        SyncPolicySpec spec = policy.getSpecification();\n+        PullPolicySpec spec = policy.getSpecification();\n         assertNotNull(spec);\n \n         String rule = spec.getCorrelationRules().get(AnyTypeKind.USER.name());\n@@ -76,33 +76,33 @@ public void findByKey() {\n \n     @Test\n     public void findByType() {\n-        List<? extends Policy> policies = policyDAO.find(PolicyType.SYNC);\n+        List<? extends Policy> policies = policyDAO.find(PolicyType.PULL);\n         assertNotNull(\"findById did not work\", policies);\n         assertFalse(policies.isEmpty());\n     }\n \n     @Test\n     public void create() {\n-        SyncPolicy policy = entityFactory.newEntity(SyncPolicy.class);\n+        PullPolicy policy = entityFactory.newEntity(PullPolicy.class);\n \n-        final String syncURuleName = \"net.tirasa.sync.correlation.TirasaURule\";\n-        final String syncGRuleName = \"net.tirasa.sync.correlation.TirasaGRule\";\n+        final String pullURuleName = \"net.tirasa.pull.correlation.TirasaURule\";\n+        final String pullGRuleName = \"net.tirasa.pull.correlation.TirasaGRule\";\n \n-        SyncPolicySpec syncPolicySpec = new SyncPolicySpec();\n+        PullPolicySpec pullPolicySpec = new PullPolicySpec();\n \n-        syncPolicySpec.getCorrelationRules().put(anyTypeDAO.findUser().getKey(), syncURuleName);\n-        syncPolicySpec.getCorrelationRules().put(anyTypeDAO.findGroup().getKey(), syncGRuleName);\n+        pullPolicySpec.getCorrelationRules().put(anyTypeDAO.findUser().getKey(), pullURuleName);\n+        pullPolicySpec.getCorrelationRules().put(anyTypeDAO.findGroup().getKey(), pullGRuleName);\n \n-        policy.setSpecification(syncPolicySpec);\n-        policy.setDescription(\"Sync policy\");\n+        policy.setSpecification(pullPolicySpec);\n+        policy.setDescription(\"Pull policy\");\n \n         policy = policyDAO.save(policy);\n \n         assertNotNull(policy);\n-        assertEquals(PolicyType.SYNC, policy.getType());\n-        assertEquals(syncURuleName,\n+        assertEquals(PolicyType.PULL, policy.getType());\n+        assertEquals(pullURuleName,\n                 policy.getSpecification().getCorrelationRules().get(anyTypeDAO.findUser().getKey()));\n-        assertEquals(syncGRuleName,\n+        assertEquals(pullGRuleName,\n                 policy.getSpecification().getCorrelationRules().get(anyTypeDAO.findGroup().getKey()));\n     }\n "},{"sha":"038030e6eb17b0968944baa0968bb6450adb16df","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -98,7 +98,7 @@ public void findAll() {\n         assertEquals(5, taskDAO.findAll(TaskType.PROPAGATION).size());\n         assertEquals(1, taskDAO.findAll(TaskType.NOTIFICATION).size());\n         assertEquals(1, taskDAO.findAll(TaskType.SCHEDULED).size());\n-        assertEquals(10, taskDAO.findAll(TaskType.SYNCHRONIZATION).size());\n+        assertEquals(10, taskDAO.findAll(TaskType.PULL).size());\n         assertEquals(11, taskDAO.findAll(TaskType.PUSH).size());\n     }\n "},{"sha":"a484ac7d16c6d79683ea79dd74acf0988867e1b5","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -156,15 +156,15 @@ public void deleteSurname() {\n \n     @Test\n     public void deleteALong() {\n-        assertEquals(6, resourceDAO.find(\"resource-db-sync\").\n+        assertEquals(6, resourceDAO.find(\"resource-db-pull\").\n                 getProvision(anyTypeDAO.findUser()).getMapping().getItems().size());\n \n         plainSchemaDAO.delete(\"aLong\");\n         assertNull(plainSchemaDAO.find(\"aLong\"));\n \n         plainSchemaDAO.flush();\n \n-        assertEquals(5, resourceDAO.find(\"resource-db-sync\").\n+        assertEquals(5, resourceDAO.find(\"resource-db-pull\").\n                 getProvision(anyTypeDAO.findUser()).getMapping().getItems().size());\n     }\n }"},{"sha":"3df840b67c89aafd133126d32d3e55679f65c1d7","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -134,7 +134,7 @@ public void save() {\n             item.setIntAttrName(\"nonexistent\" + i);\n             item.setIntMappingType(IntMappingType.UserPlainSchema);\n             item.setMandatoryCondition(\"false\");\n-            item.setPurpose(MappingPurpose.SYNCHRONIZATION);\n+            item.setPurpose(MappingPurpose.PULL);\n             mapping.add(item);\n             item.setMapping(mapping);\n         }"},{"sha":"4edc498a7b624fce4cb9bc02fc327e93391cf4cc","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n@@ -45,17 +45,17 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n @Transactional(\"Master\")\n public class TaskTest extends AbstractTest {\n@@ -139,8 +139,8 @@ public void addPropagationTaskExecution() {\n     }\n \n     @Test\n-    public void addSyncTaskExecution() {\n-        SyncTask task = taskDAO.find(4L);\n+    public void addPullTaskExecution() {\n+        PullTask task = taskDAO.find(4L);\n         assertNotNull(task);\n \n         int executionNumber = task.getExecs().size();\n@@ -210,18 +210,18 @@ public void deleteTaskExecution() {\n     }\n \n     @Test\n-    public void saveSyncTask() {\n+    public void savePullTask() {\n         ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n-        AnyTemplateSyncTask template = entityFactory.newEntity(AnyTemplateSyncTask.class);\n+        AnyTemplatePullTask template = entityFactory.newEntity(AnyTemplatePullTask.class);\n         template.set(new UserTO());\n \n-        SyncTask task = entityFactory.newEntity(SyncTask.class);\n-        task.setName(\"saveSyncTask\");\n-        task.setDescription(\"SyncTask description\");\n+        PullTask task = entityFactory.newEntity(PullTask.class);\n+        task.setName(\"savePullTask\");\n+        task.setDescription(\"PullTask description\");\n         task.setActive(true);\n-        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n         task.add(template);\n         task.setCronExpression(\"BLA BLA\");\n         task.setMatchingRule(MatchingRule.UPDATE);\n@@ -237,7 +237,7 @@ public void saveSyncTask() {\n         assertNotNull(exception);\n \n         task.setCronExpression(null);\n-        // this save() fails because a SyncTask requires a target resource\n+        // this save() fails because a PullTask requires a target resource\n         exception = null;\n         try {\n             taskDAO.save(task);\n@@ -260,12 +260,12 @@ public void saveSyncTask() {\n         assertNotNull(exception);\n \n         task.getActionsClassNames().clear();\n-        task.getActionsClassNames().add(SyncActions.class.getName());\n+        task.getActionsClassNames().add(PullActions.class.getName());\n         // this save() finally works\n         task = taskDAO.save(task);\n         assertNotNull(task);\n \n-        SyncTask actual = taskDAO.find(task.getKey());\n+        PullTask actual = taskDAO.find(task.getKey());\n         assertEquals(task, actual);\n     }\n \n@@ -274,21 +274,21 @@ public void issueSYNCOPE144() {\n         ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n-        SyncTask task = entityFactory.newEntity(SyncTask.class);\n+        PullTask task = entityFactory.newEntity(PullTask.class);\n \n         task.setResource(resource);\n         task.setName(\"issueSYNCOPE144\");\n         task.setDescription(\"issueSYNCOPE144 Description\");\n         task.setActive(true);\n-        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n-        task.getActionsClassNames().add(SyncActions.class.getName());\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n+        task.getActionsClassNames().add(PullActions.class.getName());\n         task.setMatchingRule(MatchingRule.UPDATE);\n         task.setUnmatchingRule(UnmatchingRule.PROVISION);\n \n         task = taskDAO.save(task);\n         assertNotNull(task);\n \n-        SyncTask actual = taskDAO.find(task.getKey());\n+        PullTask actual = taskDAO.find(task.getKey());\n         assertEquals(task, actual);\n         assertEquals(\"issueSYNCOPE144\", actual.getName());\n         assertEquals(\"issueSYNCOPE144 Description\", actual.getDescription());"},{"sha":"805bc4c2bac62d6e8154329572c0afad3890b7c4","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":77,"deletions":77,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -106,13 +106,13 @@ under the License.\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   \n   <!-- sample policies -->\n-  <SyncPolicy id=\"1\" description=\"a sync policy\" type=\"SYNC\" \n+  <PullPolicy id=\"1\" description=\"a pull policy\" type=\"PULL\" \n               specification='{\"conflictResolutionAction\":\"IGNORE\"'/>\n   <PasswordPolicy id=\"2\" description=\"a password policy\" type=\"PASSWORD\" \n                   historyLength=\"1\" allowNullPassword=\"1\"/> \n   <PasswordRuleConfInstance id=\"2\" passwordPolicy_id=\"2\"\n                             serializedInstance='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":8,\"nonAlphanumericRequired\":false,\"alphanumericRequired\":false,\"digitRequired\":false,\"lowercaseRequired\":false,\"uppercaseRequired\":false,\"mustStartWithDigit\":false,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":false,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n-  <SyncPolicy id=\"3\" description=\"sync policy 2\" type=\"SYNC\" \n+  <PullPolicy id=\"3\" description=\"pull policy 2\" type=\"PULL\" \n               specification='{\"conflictResolutionAction\":\"ALL\",\"correlationRules\":{\"USER\":\"[\\\"username\\\",\\\"firstname\\\"]\"}}'/>\n   <PasswordPolicy id=\"4\" description=\"sample password policy\" type=\"PASSWORD\"\n                   historyLength=\"0\"  allowNullPassword=\"1\"/> \n@@ -126,13 +126,13 @@ under the License.\n                  propagateSuspension=\"0\" maxAuthenticationAttempts=\"3\"/>\n   <AccountRuleConfInstance id=\"6\" accountPolicy_id=\"6\"\n                            serializedInstance='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultAccountRuleConf\",\"maxLength\":0,\"minLength\":4,\"pattern\":null,\"allUpperCase\":false,\"allLowerCase\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n-  <SyncPolicy id=\"7\" description=\"sync policy 1\" type=\"SYNC\" \n+  <PullPolicy id=\"7\" description=\"pull policy 1\" type=\"PULL\" \n               specification='{\"conflictResolutionAction\":\"IGNORE\"}'/>\n   <PasswordPolicy id=\"8\" description=\"sample password policy\" type=\"PASSWORD\"\n                   historyLength=\"0\" allowNullPassword=\"0\"/> \n   <PasswordRuleConfInstance id=\"8\" passwordPolicy_id=\"8\"\n                             serializedInstance='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf\",\"maxLength\":0,\"minLength\":10,\"nonAlphanumericRequired\":true,\"alphanumericRequired\":false,\"digitRequired\":true,\"lowercaseRequired\":true,\"uppercaseRequired\":true,\"mustStartWithDigit\":true,\"mustntStartWithDigit\":false,\"mustEndWithDigit\":true,\"mustntEndWithDigit\":false,\"mustStartWithNonAlpha\":false,\"mustStartWithAlpha\":false,\"mustntStartWithNonAlpha\":false,\"mustntStartWithAlpha\":false,\"mustEndWithNonAlpha\":false,\"mustEndWithAlpha\":false,\"mustntEndWithNonAlpha\":false,\"mustntEndWithAlpha\":false,\"wordsNotPermitted\":[],\"schemasNotPermitted\":[],\"prefixesNotPermitted\":[\"notpermitted1\",\"notpermitted2\"],\"suffixesNotPermitted\":[]}'/>\n-  <SyncPolicy id=\"9\" description=\"sync policy for java rule\" type=\"SYNC\" \n+  <PullPolicy id=\"9\" description=\"pull policy for java rule\" type=\"PULL\" \n               specification='{\"conflictResolutionAction\":\"IGNORE\"}'/>\n \n   <RelationshipType name=\"inclusion\" description=\"Models the act that an object is included in another\"/>\n@@ -565,8 +565,8 @@ under the License.\n   <ConnInstance id=\"107\" bundleName=\"net.tirasa.connid.bundles.db.table\" \n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\" \n-                displayName=\"H2-testsync\" version=\"${connid.database.version}\"\n-                jsonConf='[{\"schema\":{\"name\":\"changeLogColumn\",\"displayName\":\"Change Log Column (Sync)\",\"helpMessage\":\"=&lt;b&gt;Change Log Column&lt;/b&gt;&lt;br&gt;The change log column store the latest change time. Providing this value the Sync capabilities are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"nativeTimestamps\",\"displayName\":\"Native Timestamps \",\"helpMessage\":\"&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":\"Password cipher algorithm (defaults to CLEARTEXT)\",\"helpMessage\":\"Cipher algorithm used to encode password before to store it onto the database table.\\nSpecify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":\"Enabled Status Value\",\"helpMessage\":\"&lt;b&gt;Enabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for enabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":\"Retrieve password\",\"helpMessage\":\"Specify if password must be retrieved by default.\",\"type\":\"boolean\",\"required\":true,\"order\":27,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"datasource\",\"displayName\":\"Datasource Path\",\"helpMessage\":\"&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"allNative\",\"displayName\":\"All native\",\"helpMessage\":\"&lt;b&gt;All native&lt;/b&gt;&lt;br&gt;Select to retrieve all data type of the columns in a native format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":\"User\",\"helpMessage\":\"&lt;b&gt;User&lt;/b&gt;&lt;br&gt;Enter the name of the mandatory Database user with permission to account table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"pwdEncodeToLowerCase\",\"displayName\":\"Force password encoding to lower case\",\"helpMessage\":\"Force password encoding to lower case.\",\"type\":\"boolean\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":\"JDBC Connection URL\",\"helpMessage\":\"&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver Connection URL.&lt;br&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":\"Key Column\",\"helpMessage\":\"&lt;b&gt;Key Column&lt;/b&gt;&lt;br&gt;This mandatory column value will be used as the unique identifier for rows in the table.&lt;br&gt;\",\"type\":\"java.lang.String\",\"required\":true,\"order\":8,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"validConnectionQuery\",\"displayName\":\"Validate Connection Query\",\"helpMessage\":\"&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"rethrowAllSQLExceptions\",\"displayName\":\"Rethrow all SQLExceptions\",\"helpMessage\":\"If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":\"Password Column\",\"helpMessage\":\"&lt;b&gt;Password Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jndiProperties\",\"displayName\":\"Initial JNDI Properties\",\"helpMessage\":\"&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"password\",\"displayName\":\"User Password\",\"helpMessage\":\"&lt;b&gt;User Password&lt;/b&gt;&lt;br&gt;Enter a user account that has permission to access accounts table.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":5,\"confidential\":true,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"&lt;b&gt;Host&lt;/b&gt;&lt;br&gt;Enter the name of the host where the database is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"port\",\"displayName\":\"Port\",\"helpMessage\":\"&lt;b&gt;TCP Port&lt;/b&gt;&lt;br&gt;Enter the port number the database server is listening on.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"Status Column\",\"helpMessage\":\"&lt;b&gt;Status Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"pwdEncodeToUpperCase\",\"displayName\":\"Force password encoding to upper case\",\"helpMessage\":\"Force password encoding to upper case.\",\"type\":\"boolean\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"enableEmptyString\",\"displayName\":\"Enable writing empty string\",\"helpMessage\":\"&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"database\",\"displayName\":\"Database\",\"helpMessage\":\"&lt;b&gt;Database&lt;/b&gt;&lt;br&gt;Enter the name of the database on the database server that contains the table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":6,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":\"Default Status Value\",\"helpMessage\":\"&lt;b&gt;Default Status Value&lt;/b&gt;&lt;br&gt;Enter the value for status in case of status not specified.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"table\",\"displayName\":\"Table\",\"helpMessage\":\"&lt;b&gt;Table&lt;/b&gt;&lt;br&gt;Enter the name of the table in the database that contains the accounts.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"testsync\"]},{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":\"Disabled Status Value\",\"helpMessage\":\"&lt;b&gt;Disabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for disabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":\"JDBC Driver\",\"helpMessage\":\"&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"quoting\",\"displayName\":\"Name Quoting\",\"helpMessage\":\"&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":1,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"cipherKey\",\"displayName\":\"Password cipher key\",\"helpMessage\":\"Specify key in case of reversible algorithm.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]}]'/>\n+                displayName=\"H2-testpull\" version=\"${connid.database.version}\"\n+                jsonConf='[{\"schema\":{\"name\":\"changeLogColumn\",\"displayName\":\"Change Log Column (Sync)\",\"helpMessage\":\"=&lt;b&gt;Change Log Column&lt;/b&gt;&lt;br&gt;The change log column store the latest change time. Providing this value the Pull capabilities are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"nativeTimestamps\",\"displayName\":\"Native Timestamps \",\"helpMessage\":\"&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":\"Password cipher algorithm (defaults to CLEARTEXT)\",\"helpMessage\":\"Cipher algorithm used to encode password before to store it onto the database table.\\nSpecify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":\"Enabled Status Value\",\"helpMessage\":\"&lt;b&gt;Enabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for enabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":\"Retrieve password\",\"helpMessage\":\"Specify if password must be retrieved by default.\",\"type\":\"boolean\",\"required\":true,\"order\":27,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"datasource\",\"displayName\":\"Datasource Path\",\"helpMessage\":\"&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"allNative\",\"displayName\":\"All native\",\"helpMessage\":\"&lt;b&gt;All native&lt;/b&gt;&lt;br&gt;Select to retrieve all data type of the columns in a native format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":\"User\",\"helpMessage\":\"&lt;b&gt;User&lt;/b&gt;&lt;br&gt;Enter the name of the mandatory Database user with permission to account table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"pwdEncodeToLowerCase\",\"displayName\":\"Force password encoding to lower case\",\"helpMessage\":\"Force password encoding to lower case.\",\"type\":\"boolean\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":\"JDBC Connection URL\",\"helpMessage\":\"&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver Connection URL.&lt;br&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":\"Key Column\",\"helpMessage\":\"&lt;b&gt;Key Column&lt;/b&gt;&lt;br&gt;This mandatory column value will be used as the unique identifier for rows in the table.&lt;br&gt;\",\"type\":\"java.lang.String\",\"required\":true,\"order\":8,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"validConnectionQuery\",\"displayName\":\"Validate Connection Query\",\"helpMessage\":\"&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"rethrowAllSQLExceptions\",\"displayName\":\"Rethrow all SQLExceptions\",\"helpMessage\":\"If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":\"Password Column\",\"helpMessage\":\"&lt;b&gt;Password Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jndiProperties\",\"displayName\":\"Initial JNDI Properties\",\"helpMessage\":\"&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"password\",\"displayName\":\"User Password\",\"helpMessage\":\"&lt;b&gt;User Password&lt;/b&gt;&lt;br&gt;Enter a user account that has permission to access accounts table.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":5,\"confidential\":true,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"&lt;b&gt;Host&lt;/b&gt;&lt;br&gt;Enter the name of the host where the database is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"port\",\"displayName\":\"Port\",\"helpMessage\":\"&lt;b&gt;TCP Port&lt;/b&gt;&lt;br&gt;Enter the port number the database server is listening on.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"Status Column\",\"helpMessage\":\"&lt;b&gt;Status Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"pwdEncodeToUpperCase\",\"displayName\":\"Force password encoding to upper case\",\"helpMessage\":\"Force password encoding to upper case.\",\"type\":\"boolean\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"enableEmptyString\",\"displayName\":\"Enable writing empty string\",\"helpMessage\":\"&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"database\",\"displayName\":\"Database\",\"helpMessage\":\"&lt;b&gt;Database&lt;/b&gt;&lt;br&gt;Enter the name of the database on the database server that contains the table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":6,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":\"Default Status Value\",\"helpMessage\":\"&lt;b&gt;Default Status Value&lt;/b&gt;&lt;br&gt;Enter the value for status in case of status not specified.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"table\",\"displayName\":\"Table\",\"helpMessage\":\"&lt;b&gt;Table&lt;/b&gt;&lt;br&gt;Enter the name of the table in the database that contains the accounts.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"testpull\"]},{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":\"Disabled Status Value\",\"helpMessage\":\"&lt;b&gt;Disabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for disabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":\"JDBC Driver\",\"helpMessage\":\"&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"quoting\",\"displayName\":\"Name Quoting\",\"helpMessage\":\"&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":1,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"cipherKey\",\"displayName\":\"Password cipher key\",\"helpMessage\":\"Specify key in case of reversible algorithm.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"DELETE\"/>\n@@ -585,117 +585,117 @@ under the License.\n   \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" overrideCapabilities=\"0\"\n-                    propagationPriority=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    propagationPriority=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\"\n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n-                    syncPolicy_id=\"9\"\n+                    createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n+                    pullPolicy_id=\"9\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-timeout\" connector_id=\"102\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    propagationPriority=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    propagationPriority=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     jsonConf='[{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"http://localhost:${cargo.servlet.port}/syncope-fit-build-tools/services/provisioning\"]}]'\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" overrideCapabilities=\"0\"\n-                    propagationPriority=\"2\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    propagationPriority=\"2\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb\" connector_id=\"101\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb2\" connector_id=\"106\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-csv\" connector_id=\"104\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" overrideCapabilities=\"0\"\n-                    syncPolicy_id=\"3\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    pullPolicy_id=\"3\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource_PropActions resource_name=\"resource-ldap\"\n                                 actionClassName=\"org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" \n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\" \n                     passwordPolicy_id=\"4\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n-  <!-- The following three resources have been added to verify the issue SYNCOPE-68 -->\n+  <!-- The following three resources have been added to verify the issue PULLOPE-68 -->\n   <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" \n                     enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" \n                     enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" \n                     enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" pullTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n                     \n-  <!-- External resource for issue SYNCOPE-230 -->\n-  <ExternalResource name=\"resource-db-sync\" connector_id=\"107\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n+  <!-- External resource for issue PULLOPE-230 -->\n+  <ExternalResource name=\"resource-db-pull\" connector_id=\"107\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" pullTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n                     overrideCapabilities=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n                     \n-  <!-- External resource for issue SYNCOPE-267 -->\n+  <!-- External resource for issue PULLOPE-267 -->\n   <ExternalResource name=\"resource-db-virattr\" connector_id=\"107\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" pullTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n                     overrideCapabilities=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n   <ExternalResource name=\"resource-db-scripted\" connector_id=\"108\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" pullTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\"\n                     overrideCapabilities=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n-  <!-- Use resource-testdb for passthrough authentication (SYNCOPE-164) -->\n+  <!-- Use resource-testdb for passthrough authentication (PULLOPE-164) -->\n   <AccountPolicy_ExternalResource accountPolicy_id=\"5\" resource_name=\"resource-testdb\"/>\n     \n   <SyncopeUser_ExternalResource user_id=\"1\" resource_name=\"resource-testdb2\"/>\n@@ -844,10 +844,10 @@ under the License.\n                connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"205\" extAttrName=\"email\" mapping_id=\"9\"\n                intAttrName=\"userId\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n-               connObjectKey=\"0\" password=\"0\" purpose=\"SYNCHRONIZATION\"/>\n+               connObjectKey=\"0\" password=\"0\" purpose=\"PULL\"/>\n   <MappingItem id=\"206\" extAttrName=\"email\" mapping_id=\"9\"\n                intAttrName=\"email\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n-               connObjectKey=\"0\" password=\"0\" purpose=\"SYNCHRONIZATION\"/>\n+               connObjectKey=\"0\" password=\"0\" purpose=\"PULL\"/>\n   <MappingItem id=\"207\" extAttrName=\"__NAME__\" mapping_id=\"9\"\n                intAttrName=\"csvuserid\" intMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n@@ -920,7 +920,7 @@ under the License.\n   \n   <VirSchema name=\"rvirtualdata\" anyTypeClass_name=\"minimal group\" provision_id=\"20\" extAttrName=\"businessCategory\"/>\n \n-  <Provision id=\"16\" resource_name=\"resource-db-sync\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision id=\"16\" resource_name=\"resource-db-pull\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"16\" provision_id=\"16\"/>\n   <MappingItem id=\"322\" connObjectKey=\"0\" mapping_id=\"16\"\n                extAttrName=\"EMAIL\" intAttrName=\"email\" intMappingType=\"UserPlainSchema\" \n@@ -980,118 +980,118 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"3\" operation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n-        syncMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <AnyTemplateSyncTask id=\"41\" syncTask_id=\"4\" anyType_name=\"USER\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"\n+        pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"/>\n+  <AnyTemplatePullTask id=\"41\" pullTask_id=\"4\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"leftType\":null,\"leftKey\":0,\"rightType\":\"GROUP\",\"rightKey\":8,\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n-  <AnyTemplateSyncTask id=\"42\" syncTask_id=\"4\" anyType_name=\"GROUP\"\n+  <AnyTemplatePullTask id=\"42\" pullTask_id=\"4\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SchedTask\" type=\"SCHEDULED\" id=\"5\" name=\"SampleJob Task\"  active=\"1\"\n         jobDelegateClassName=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" operation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" anyKey=\"1\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"6\" task_id=\"6\" start=\"2015-12-17 09:40:00.506\" end=\"2015-12-17 09:42:00.506\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" syncMode=\"FULL_RECONCILIATION\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" pullStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <AnyTemplateSyncTask id=\"71\" syncTask_id=\"7\" anyType_name=\"USER\"\n+  <AnyTemplatePullTask id=\"71\" pullTask_id=\"7\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n-  <AnyTemplateSyncTask id=\"72\" syncTask_id=\"7\" anyType_name=\"GROUP\"\n+  <AnyTemplatePullTask id=\"72\" pullTask_id=\"7\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"NotificationTask\" type=\"NOTIFICATION\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n+  <Task DTYPE=\"NotificationTask\" type=\"NOTIFICATION\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for PULLOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" syncMode=\"FULL_RECONCILIATION\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" pullStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"10\" name=\"TestDB Sync Task\" resource_name=\"resource-db-sync\"\n-        destinationRealm_id=\"1\" syncMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"10\" name=\"TestDB Pull Task\" resource_name=\"resource-db-pull\"\n+        destinationRealm_id=\"1\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" pullStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n-        destinationRealm_id=\"1\" syncMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"11\" name=\"LDAP Pull Task\" resource_name=\"resource-ldap\"\n+        destinationRealm_id=\"1\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" pullStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <AnyTemplateSyncTask id=\"1\" syncTask_id=\"11\" anyType_name=\"USER\"\n+  <AnyTemplatePullTask id=\"1\" pullTask_id=\"11\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"readonly\":true,\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[]}'/>\n-  <AnyTemplateSyncTask id=\"2\" syncTask_id=\"11\" anyType_name=\"GROUP\"\n+  <AnyTemplatePullTask id=\"2\" pullTask_id=\"11\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"true\"]}]}'/>\n-  <SyncTask_actionsClassNames SyncTask_id=\"11\" actionClassName=\"org.apache.syncope.core.provisioning.java.syncpull.LDAPMembershipSyncActions\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" syncMode=\"FULL_RECONCILIATION\"\n+  <PullTask_actionsClassNames PullTask_id=\"11\" actionClassName=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n+        destinationRealm_id=\"1\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" pullStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"13\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"         \n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\"/>  \n   <PushTaskAnyFilter id=\"131\" anyType_name=\"USER\" pushTask_id=\"13\" fiql=\"surname==Vivaldi\"/>\n   <PushTaskAnyFilter id=\"132\" anyType_name=\"GROUP\" pushTask_id=\"13\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"14\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"         \n         unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"141\" anyType_name=\"USER\" pushTask_id=\"14\" fiql=\"surname==Bellini\"/>\n   <PushTaskAnyFilter id=\"142\" anyType_name=\"GROUP\" pushTask_id=\"14\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"15\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"151\" anyType_name=\"USER\" pushTask_id=\"15\" fiql=\"surname==Puccini\"/>\n   <PushTaskAnyFilter id=\"152\" anyType_name=\"GROUP\" pushTask_id=\"15\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"16\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"         \n         unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"161\" anyType_name=\"USER\" pushTask_id=\"16\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"162\" anyType_name=\"GROUP\" pushTask_id=\"16\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"17\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"171\" anyType_name=\"USER\" pushTask_id=\"17\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"172\" anyType_name=\"GROUP\" pushTask_id=\"17\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"18\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"181\" anyType_name=\"USER\" pushTask_id=\"18\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"182\" anyType_name=\"GROUP\" pushTask_id=\"18\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"19\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"191\" anyType_name=\"USER\" pushTask_id=\"19\" fiql=\"surname==Rossini\"/>\n   <PushTaskAnyFilter id=\"192\" anyType_name=\"GROUP\" pushTask_id=\"19\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"20\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"201\" anyType_name=\"USER\" pushTask_id=\"20\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"202\" anyType_name=\"GROUP\" pushTask_id=\"20\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"21\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"211\" anyType_name=\"USER\" pushTask_id=\"21\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"212\" anyType_name=\"GROUP\" pushTask_id=\"21\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"22\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\"/>\n   <PushTaskAnyFilter id=\"221\" anyType_name=\"USER\" pushTask_id=\"22\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"222\" anyType_name=\"GROUP\" pushTask_id=\"22\" fiql=\"name==_NO_ONE_\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"23\" name=\"Export on resource-ldap\" resource_name=\"resource-ldap\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\"        \n         unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\"/>\n   <PushTaskAnyFilter id=\"231\" anyType_name=\"USER\" pushTask_id=\"23\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"232\" anyType_name=\"GROUP\" pushTask_id=\"23\" fiql=\"name==citizen\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"24\" name=\"CSV Task (update matching; provision unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"24\" name=\"CSV Task (update matching; provision unmatching)\" resource_name=\"resource-csv\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n-  <AnyTemplateSyncTask id=\"3\" syncTask_id=\"24\" anyType_name=\"USER\"\n+  <AnyTemplatePullTask id=\"3\" pullTask_id=\"24\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"readonly\":false,\"values\":[\"\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]}]}'/>\n-  <AnyTemplateSyncTask id=\"4\" syncTask_id=\"24\" anyType_name=\"GROUP\"\n+  <AnyTemplatePullTask id=\"4\" pullTask_id=\"24\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"25\" name=\"CSV (unlink matching; ignore unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"25\" name=\"CSV (unlink matching; ignore unmatching)\" resource_name=\"resource-csv\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\"/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\"/>\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"0\" syncMode=\"INCREMENTAL\"\n+  <Task DTYPE=\"PullTask\" type=\"PULL\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"0\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n \n   <MailTemplate name=\"requestPasswordReset\""},{"sha":"c54cf718180a4c0eb1f8262804f0f837c8a2b310","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -34,7 +34,7 @@\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.identityconnectors.framework.common.objects.filter.Filter;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n \n /**\n  * Entry point for making requests on underlying connector bundles."},{"sha":"37db5108ebc322fd4b74fb0ed6f70e0199214e17","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/UserProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n \n public interface UserProvisioningManager extends ProvisioningManager<UserTO, UserPatch> {\n "},{"sha":"18d998bc8a369447cb1f062006a6a8f7658899e0","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/MappingItemTransformer.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n /**\n- * Transforms values to be propagated to (or synchronizing from) external resources right before they leave (or enter)\n+ * Transforms values to be propagated to (or pulling from) external resources right before they leave (or enter)\n  * the Syncope internal storage.\n  *\n  * These transformations are not applied to virtual attribute values.\n@@ -38,10 +38,10 @@ public interface MappingItemTransformer {\n     List<PlainAttrValue> beforePropagation(List<PlainAttrValue> values);\n \n     /**\n-     * Invoked while reading attribute values from external resource during synchronization.\n+     * Invoked while reading attribute values from external resource during pull.\n      *\n      * @param values original values\n      * @return transformed values\n      */\n-    List<Object> beforeSync(List<Object> values);\n+    List<Object> beforePull(List<Object> values);\n }"},{"sha":"db7eb81394a81cbd56820614608e102ceb108a62","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/AnyObjectPullResultHandler.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,8 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n-public interface AnyObjectSyncResultHandler extends SyncopeSyncResultHandler {\n+public interface AnyObjectPullResultHandler extends SyncopePullResultHandler {\n \n }","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/AnyObjectSyncResultHandler.java"},{"sha":"8775e7eb5ff7b6f3c5693ee02450202b39f8baf3","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/AnyObjectPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface AnyObjectPushResultHandler extends SyncopePushResultHandler {\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/AnyObjectPushResultHandler.java"},{"sha":"247c583b683dceb84277ff1ef82988cf0a7ff47f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/GroupPullResultHandler.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPullResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,11 +16,11 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import java.util.Map;\n \n-public interface GroupSyncResultHandler extends SyncopeSyncResultHandler {\n+public interface GroupPullResultHandler extends SyncopePullResultHandler {\n \n     Map<Long, String> getGroupOwnerMap();\n }","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/GroupSyncResultHandler.java"},{"sha":"a0800221d93d87599fbcbd86d724f2c7c936bab1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/GroupPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface GroupPushResultHandler extends SyncopePushResultHandler {\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/GroupPushResultHandler.java"},{"sha":"bf56246364bde15dc30ac5eea72a42d5d4cd3288","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/IgnoreProvisionException.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FIgnoreProvisionException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FIgnoreProvisionException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FIgnoreProvisionException.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,11 +16,11 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n /**\n- * Raised by {@link SyncActions} or {@link PushActions} methods when the given any object is to be ignored for\n- * synchronization / push.\n+ * Raised by {@link PullActions} or {@link PushActions} methods when the given any object is to be ignored for\n+ * pull / push.\n  */\n public class IgnoreProvisionException extends RuntimeException {\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/IgnoreProvisionException.java"},{"sha":"1470ac16485521b9e7d0a5737e6a911edd34aec2","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningActions.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,24 +16,24 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.quartz.JobExecutionException;\n \n public interface ProvisioningActions {\n \n     /**\n-     * Action to be executed before to start the synchronization task execution.\n+     * Action to be executed before to start the provisioning (push / pull) task execution.\n      *\n-     * @param profile sync profile\n+     * @param profile provisioning profile\n      * @throws JobExecutionException in case of generic failure\n      */\n     void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException;\n \n     /**\n-     * Action to be executed after the synchronization task completion.\n+     * Action to be executed after the provisioning (push / pull) task completion.\n      *\n-     * @param profile sync profile\n+     * @param profile provisioning profile\n      * @throws JobExecutionException in case of generic failure\n      */\n     void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException;","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/ProvisioningActions.java"},{"sha":"517908d5a06069279799d4bf94a660052b73ee69","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import java.util.ArrayList;\n import java.util.Collection;","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/ProvisioningProfile.java"},{"sha":"7fa0366120e6d372e885ca94c877eae781e71cb6","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningReport.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import java.util.Collection;\n \n@@ -118,15 +118,15 @@ public String getReportString(final TraceLevel level) {\n             // All\n             return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, key, name,\n                     StringUtils.isBlank(message)\n-                            ? \"\"\n-                            : \"with message: \" + message);\n+                    ? \"\"\n+                    : \"with message: \" + message);\n         }\n     }\n \n     /**\n-     * Helper method to invoke logging per synchronization result for the given trace level.\n+     * Helper method to invoke logging per provisioning result, for the given trace level.\n      *\n-     * @param results synchronization result\n+     * @param results provisioning results\n      * @param level trace level\n      * @return report as string\n      */","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/ProvisioningReport.java"},{"sha":"c042ec72425aa7f9e604feaefcc6fae7ecc084e1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullActions.java","status":"renamed","additions":50,"deletions":50,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,30 +16,30 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n \n /**\n- * Interface for actions to be performed during synchronization.\n- * All methods can throw {@link IgnoreProvisionException} to make the current any object ignored by the synchronization\n+ * Interface for actions to be performed during pull.\n+ * All methods can throw {@link IgnoreProvisionException} to make the current any object ignored by the pull\n  * process.\n  */\n-public interface SyncActions extends ProvisioningActions {\n+public interface PullActions extends ProvisioningActions {\n \n     /**\n-     * Action to be executed before to create a synchronized user / group locally.\n-     * User/group is created locally upon synchronization in case of the un-matching rule\n+     * Action to be executed before to create a pulled user / group locally.\n+     * User/group is created locally upon pull in case of the un-matching rule\n      * {@link org.apache.syncope.common.lib.types.UnmatchingRule#PROVISION} (default un-matching rule) is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeProvision(\n@@ -48,15 +48,15 @@ <A extends AnyTO> SyncDelta beforeProvision(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed before creating (and linking to the resource) a synchronized user / group locally.\n-     * User/group is created locally and linked to the synchronized resource upon synchronization in case of the\n+     * Action to be executed before creating (and linking to the resource) a pulled user / group locally.\n+     * User/group is created locally and linked to the pulled resource upon pull in case of the\n      * un-matching rule {@link org.apache.syncope.common.lib.types.UnmatchingRule#ASSIGN} is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeAssign(\n@@ -65,15 +65,15 @@ <A extends AnyTO> SyncDelta beforeAssign(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed before unlinking resource from the synchronized user / group and de-provisioning.\n-     * User/group is unlinked and de-provisioned from the synchronized resource upon synchronization in case of the\n+     * Action to be executed before unlinking resource from the pulled user / group and de-provisioning.\n+     * User/group is unlinked and de-provisioned from the pulled resource upon pull in case of the\n      * matching rule {@link org.apache.syncope.common.lib.types.MatchingRule#UNASSIGN} is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeUnassign(\n@@ -83,14 +83,14 @@ <A extends AnyTO> SyncDelta beforeUnassign(\n \n     /**\n      * Action to be executed before de-provisioning action only.\n-     * User/group is de-provisioned (without unlinking) from the synchronized resource upon synchronization in case of\n+     * User/group is de-provisioned (without unlinking) from the pulled resource upon pull in case of\n      * the matching rule {@link org.apache.syncope.common.lib.types.MatchingRule#DEPROVISION} is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeDeprovision(\n@@ -99,15 +99,15 @@ <A extends AnyTO> SyncDelta beforeDeprovision(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed before unlinking resource from the synchronized user / group.\n-     * User/group is unlinked (without de-provisioning) from the synchronized resource upon synchronization in case of\n+     * Action to be executed before unlinking resource from the pulled user / group.\n+     * User/group is unlinked (without de-provisioning) from the pulled resource upon pull in case of\n      * the matching rule {@link org.apache.syncope.common.lib.types.MatchingRule#UNLINK} is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeUnlink(\n@@ -116,15 +116,15 @@ <A extends AnyTO> SyncDelta beforeUnlink(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed before linking resource to the synchronized user / group.\n-     * User/group is linked (without updating) to the synchronized resource upon synchronization in case of\n+     * Action to be executed before linking resource to the pulled user / group.\n+     * User/group is linked (without updating) to the pulled resource upon pull in case of\n      * the matching rule {@link org.apache.syncope.common.lib.types.MatchingRule#LINK} is applied.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n-     * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n+     * @return pull information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeLink(\n@@ -133,17 +133,17 @@ <A extends AnyTO> SyncDelta beforeLink(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed before to update a synchronized user / group locally.\n-     * User/group is updated upon synchronization in case of the matching rule\n+     * Action to be executed before to update a pulled user / group locally.\n+     * User/group is updated upon pull in case of the matching rule\n      * {@link org.apache.syncope.common.lib.types.MatchingRule#UPDATE} (default matching rule) is applied.\n      *\n      * @param <M> concrete any object\n      * @param <P> any object modifications\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object\n      * @param anyPatch modification\n-     * @return synchronization information used for logging and to be passed to the 'after' method.\n+     * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure.\n      */\n     <M extends AnyTO, P extends AnyPatch> SyncDelta beforeUpdate(\n@@ -154,13 +154,13 @@ <M extends AnyTO, P extends AnyPatch> SyncDelta beforeUpdate(\n             throws JobExecutionException;\n \n     /**\n-     * Action to be executed before to delete a synchronized user / group locally.\n+     * Action to be executed before to delete a pulled user / group locally.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information\n      * @param any any object to be deleted\n-     * @return synchronization information used for logging and to be passed to the 'after' method.\n+     * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> SyncDelta beforeDelete(\n@@ -169,12 +169,12 @@ <A extends AnyTO> SyncDelta beforeDelete(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed when user / group synchronization goes on error.\n+     * Action to be executed when user / group pull goes on error.\n      *\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information (may be modified by\n      * 'beforeProvision/beforeUpdate/beforeDelete')\n-     * @param result global synchronization results at the current synchronization step\n+     * @param result global pull results at the current pull step\n      * @param error error being reported\n      * @throws JobExecutionException in case of generic failure\n      */\n@@ -185,14 +185,14 @@ void onError(\n             Exception error) throws JobExecutionException;\n \n     /**\n-     * Action to be executed after each local user / group synchronization.\n+     * Action to be executed after each local user / group pull.\n      *\n      * @param <A> concrete any object\n-     * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by beforeProvision / beforeUpdate /\n+     * @param profile profile of the pull being executed.\n+     * @param delta retrieved pull information (may be modified by beforeProvision / beforeUpdate /\n      * beforeDelete)\n      * @param any any object\n-     * @param result global synchronization results at the current synchronization step\n+     * @param result global pull results at the current pull step\n      * @throws JobExecutionException in case of generic failure\n      */\n     <A extends AnyTO> void after(","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/SyncActions.java"},{"sha":"5d6d9224a12c7d9554cd9d6c132c3316bc18641f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullCorrelationRule.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullCorrelationRule.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,15 +16,15 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n /**\n- * Interface for correlation rule to be evaluated during SyncJob execution.\n+ * Interface for correlation rule to be evaluated during PullJob execution.\n  */\n-public interface SyncCorrelationRule {\n+public interface PullCorrelationRule {\n \n     /**\n      * Return a search condition.","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/SyncCorrelationRule.java"},{"sha":"93180d4383ec5d63b0a240de170d73d41cdbea97","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PushActions.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.quartz.JobExecutionException;","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/PushActions.java"},{"sha":"579e5caeef9955ba21871264c7c698da89290f6a","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ReconciliationFilterBuilder.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,13 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.identityconnectors.framework.common.objects.filter.Filter;\n \n /**\n  * Interface to be implemented for performing filtered reconciliation of a\n- * {@link org.apache.syncope.core.persistence.api.entity.task.SyncTask}.\n+ * {@link org.apache.syncope.core.persistence.api.entity.task.PullTask}.\n  */\n public interface ReconciliationFilterBuilder {\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/ReconciliationFilterBuilder.java"},{"sha":"aa9946824aab77de6f7a96383036da204302970c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePullResultHandler.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,13 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n-public interface SyncopeSyncResultHandler extends SyncopeResultHandler<SyncTask, SyncActions>, SyncResultsHandler {\n+public interface SyncopePullResultHandler extends SyncopeResultHandler<PullTask, PullActions>, SyncResultsHandler {\n \n     @Override\n     boolean handle(SyncDelta delta);","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/SyncopeSyncResultHandler.java"},{"sha":"8a32c53a4003c58590e5244e78aca2a96a99d11b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/SyncopePushResultHandler.java"},{"sha":"16d958f55fc3018dad75df74f5a70df5fa9b4a9b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopeResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/SyncopeResultHandler.java"},{"sha":"c86420a395dc1a77c17c42ac1e5ce66868547202","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/UserPullResultHandler.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,8 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n-public interface UserSyncResultHandler extends SyncopeSyncResultHandler {\n+public interface UserPullResultHandler extends SyncopePullResultHandler {\n \n }","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/UserSyncResultHandler.java"},{"sha":"f96c0ef1873e2d51c06f611dbc1279d7123b3476","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/UserPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPushResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.syncpull;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface UserPushResultHandler extends SyncopePushResultHandler {\n ","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/syncpull/UserPushResultHandler.java"},{"sha":"438d97fc720721da0e599140c7974916461bd242","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.api.APIConfiguration;"},{"sha":"8abf12372af0afa6774df05d3b465f84f39ded23","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -49,7 +49,7 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -150,11 +150,11 @@ public Pair<Long, List<PropagationStatus>> update(\n         try {\n             updated = uwfAdapter.update(userPatch);\n         } catch (Exception e) {\n-            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\",\n+            LOG.error(\"Update of user {} failed, trying to pull its status anyway (if configured)\",\n                     userPatch.getKey(), e);\n \n             result.setStatus(ProvisioningReport.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + e.getMessage());\n+            result.setMessage(\"Update failed, trying to pull status anyway (if configured)\\n\" + e.getMessage());\n \n             updated = new WorkflowResult<Pair<UserPatch, Boolean>>(\n                     new ImmutablePair<>(userPatch, false), new PropagationByResource(),"},{"sha":"a5cd9d6ed2f90d81d277d27ae7cf01c669e27d11","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -151,7 +151,7 @@ private static List<MappingItem> getMappingItems(final Provision provision, fina\n         List<MappingItem> result = new ArrayList<>();\n \n         switch (purpose) {\n-            case SYNCHRONIZATION:\n+            case PULL:\n                 for (MappingItem item : items) {\n                     if (MappingPurpose.PROPAGATION != item.getPurpose()\n                             && MappingPurpose.NONE != item.getPurpose()) {\n@@ -163,7 +163,7 @@ private static List<MappingItem> getMappingItems(final Provision provision, fina\n \n             case PROPAGATION:\n                 for (MappingItem item : items) {\n-                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose()\n+                    if (MappingPurpose.PULL != item.getPurpose()\n                             && MappingPurpose.NONE != item.getPurpose()) {\n \n                         result.add(item);\n@@ -201,8 +201,8 @@ public static List<MappingItem> getPropagationMappingItems(final Provision provi\n         return getMappingItems(provision, MappingPurpose.PROPAGATION);\n     }\n \n-    public static List<MappingItem> getSyncMappingItems(final Provision provision) {\n-        return getMappingItems(provision, MappingPurpose.SYNCHRONIZATION);\n+    public static List<MappingItem> getPullMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.PULL);\n     }\n \n     /**\n@@ -728,7 +728,7 @@ public <T extends AnyTO> void setIntValues(\n         if (attr != null) {\n             values = attr.getValue();\n             for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItem)) {\n-                values = transformer.beforeSync(values);\n+                values = transformer.beforePull(values);\n             }\n         }\n         values = ListUtils.emptyIfNull(values);"},{"sha":"70cd1d0abfc1e24008b465e9962419f6cfd3fecd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DefaultMappingItemTransformer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -33,7 +33,7 @@ public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values)\n     }\n \n     @Override\n-    public List<Object> beforeSync(final List<Object> values) {\n+    public List<Object> beforePull(final List<Object> values) {\n         return values;\n     }\n "},{"sha":"92149c3f57661fe4b5b26b4a2d766e8821b15120","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n@@ -37,11 +37,11 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Component\n public class PolicyDataBinderImpl implements PolicyDataBinder {\n@@ -92,10 +92,10 @@ public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n                 accountPolicyTO.getResources().addAll(accountPolicy.getResourceNames());\n                 break;\n \n-            case SYNC:\n+            case PULL:\n             default:\n-                policyTO = (T) new SyncPolicyTO();\n-                ((SyncPolicyTO) policyTO).setSpecification(((SyncPolicy) policy).getSpecification());\n+                policyTO = (T) new PullPolicyTO();\n+                ((PullPolicyTO) policyTO).setSpecification(((PullPolicy) policy).getSpecification());\n         }\n \n         policyTO.setKey(policy.getKey());\n@@ -172,16 +172,16 @@ public <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO pol\n                 }\n                 break;\n \n-            case SYNC:\n+            case PULL:\n             default:\n-                if (!(policyTO instanceof SyncPolicyTO)) {\n-                    throw new ClassCastException(\"Expected \" + SyncPolicyTO.class.getName()\n+                if (!(policyTO instanceof PullPolicyTO)) {\n+                    throw new ClassCastException(\"Expected \" + PullPolicyTO.class.getName()\n                             + \", found \" + policyTO.getClass().getName());\n                 }\n                 if (result == null) {\n-                    result = (T) entityFactory.newEntity(SyncPolicy.class);\n+                    result = (T) entityFactory.newEntity(PullPolicy.class);\n                 }\n-                ((SyncPolicy) result).setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n+                ((PullPolicy) result).setSpecification(((PullPolicyTO) policyTO).getSpecification());\n         }\n \n         result.setDescription(policyTO.getDescription());"},{"sha":"7771f06aef660d769c91a759608584563cb93c40","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -65,7 +65,7 @@ public class RealmDataBinderImpl implements RealmDataBinder {\n \n     private void setTemplates(final RealmTO realmTO, final Realm realm) {\n         // validate JEXL expressions from templates and proceed if fine\n-        templateUtils.check(realmTO.getTemplates(), ClientExceptionType.InvalidSyncTask);\n+        templateUtils.check(realmTO.getTemplates(), ClientExceptionType.InvalidPullTask);\n         for (Map.Entry<String, AnyTO> entry : realmTO.getTemplates().entrySet()) {\n             AnyType type = anyTypeDAO.find(entry.getKey());\n             if (type == null) {"},{"sha":"b4aa8b21d6e7a5809bfc08213b8b7b85be486296","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -41,7 +41,6 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n-import org.apache.syncope.core.persistence.api.entity.policy.SyncPolicy;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -54,6 +53,7 @@\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n \n @Component\n public class ResourceDataBinderImpl implements ResourceDataBinder {\n@@ -178,16 +178,16 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n         resource.setCreateTraceLevel(resourceTO.getCreateTraceLevel());\n         resource.setUpdateTraceLevel(resourceTO.getUpdateTraceLevel());\n         resource.setDeleteTraceLevel(resourceTO.getDeleteTraceLevel());\n-        resource.setSyncTraceLevel(resourceTO.getSyncTraceLevel());\n+        resource.setPullTraceLevel(resourceTO.getPullTraceLevel());\n \n         resource.setPasswordPolicy(resourceTO.getPasswordPolicy() == null\n                 ? null : (PasswordPolicy) policyDAO.find(resourceTO.getPasswordPolicy()));\n \n         resource.setAccountPolicy(resourceTO.getAccountPolicy() == null\n                 ? null : (AccountPolicy) policyDAO.find(resourceTO.getAccountPolicy()));\n \n-        resource.setSyncPolicy(resourceTO.getSyncPolicy() == null\n-                ? null : (SyncPolicy) policyDAO.find(resourceTO.getSyncPolicy()));\n+        resource.setPullPolicy(resourceTO.getPullPolicy() == null\n+                ? null : (PullPolicy) policyDAO.find(resourceTO.getPullPolicy()));\n \n         resource.setConfOverride(new HashSet<>(resourceTO.getConfOverride()));\n \n@@ -340,16 +340,16 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setCreateTraceLevel(resource.getCreateTraceLevel());\n         resourceTO.setUpdateTraceLevel(resource.getUpdateTraceLevel());\n         resourceTO.setDeleteTraceLevel(resource.getDeleteTraceLevel());\n-        resourceTO.setSyncTraceLevel(resource.getSyncTraceLevel());\n+        resourceTO.setPullTraceLevel(resource.getPullTraceLevel());\n \n         resourceTO.setPasswordPolicy(resource.getPasswordPolicy() == null\n                 ? null : resource.getPasswordPolicy().getKey());\n \n         resourceTO.setAccountPolicy(resource.getAccountPolicy() == null\n                 ? null : resource.getAccountPolicy().getKey());\n \n-        resourceTO.setSyncPolicy(resource.getSyncPolicy() == null\n-                ? null : resource.getSyncPolicy().getKey());\n+        resourceTO.setPullPolicy(resource.getPullPolicy() == null\n+                ? null : resource.getPullPolicy().getKey());\n \n         resourceTO.getConfOverride().addAll(resource.getConfOverride());\n "},{"sha":"7679ce000fd806a3be6e3001da6e0997c5330b6e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":37,"deletions":37,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.JobType;\n@@ -46,7 +46,6 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.task.TaskUtils;\n@@ -58,9 +57,10 @@\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.AnyTemplate;\n-import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n-import org.apache.syncope.core.provisioning.java.syncpull.PushJobDelegate;\n-import org.apache.syncope.core.provisioning.java.syncpull.SyncJobDelegate;\n+import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n import org.quartz.Trigger;\n@@ -142,46 +142,46 @@ public boolean evaluate(final PushTaskAnyFilter anyFilter) {\n                     return pushTaskTO.getFilters().containsKey(anyFilter.getAnyType().getKey());\n                 }\n             });\n-        } else if (task instanceof SyncTask && taskTO instanceof SyncTaskTO) {\n-            SyncTask syncTask = (SyncTask) task;\n-            final SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n+        } else if (task instanceof PullTask && taskTO instanceof PullTaskTO) {\n+            PullTask pullTask = (PullTask) task;\n+            final PullTaskTO pullTaskTO = (PullTaskTO) taskTO;\n \n-            syncTask.setSyncMode(syncTaskTO.getSyncMode());\n-            syncTask.setReconciliationFilterBuilderClassName(syncTaskTO.getReconciliationFilterBuilderClassName());\n+            pullTask.setPullMode(pullTaskTO.getPullMode());\n+            pullTask.setReconciliationFilterBuilderClassName(pullTaskTO.getReconciliationFilterBuilderClassName());\n \n-            syncTask.setDestinationRealm(realmDAO.find(syncTaskTO.getDestinationRealm()));\n+            pullTask.setDestinationRealm(realmDAO.find(pullTaskTO.getDestinationRealm()));\n \n-            syncTask.setJobDelegateClassName(SyncJobDelegate.class.getName());\n+            pullTask.setJobDelegateClassName(PullJobDelegate.class.getName());\n \n-            syncTask.setMatchingRule(syncTaskTO.getMatchingRule() == null\n-                    ? MatchingRule.UPDATE : syncTaskTO.getMatchingRule());\n-            syncTask.setUnmatchingRule(syncTaskTO.getUnmatchingRule() == null\n-                    ? UnmatchingRule.PROVISION : syncTaskTO.getUnmatchingRule());\n+            pullTask.setMatchingRule(pullTaskTO.getMatchingRule() == null\n+                    ? MatchingRule.UPDATE : pullTaskTO.getMatchingRule());\n+            pullTask.setUnmatchingRule(pullTaskTO.getUnmatchingRule() == null\n+                    ? UnmatchingRule.PROVISION : pullTaskTO.getUnmatchingRule());\n \n             // validate JEXL expressions from templates and proceed if fine\n-            templateUtils.check(syncTaskTO.getTemplates(), ClientExceptionType.InvalidSyncTask);\n-            for (Map.Entry<String, AnyTO> entry : syncTaskTO.getTemplates().entrySet()) {\n+            templateUtils.check(pullTaskTO.getTemplates(), ClientExceptionType.InvalidPullTask);\n+            for (Map.Entry<String, AnyTO> entry : pullTaskTO.getTemplates().entrySet()) {\n                 AnyType type = anyTypeDAO.find(entry.getKey());\n                 if (type == null) {\n                     LOG.debug(\"Invalid AnyType {} specified, ignoring...\", entry.getKey());\n                 } else {\n-                    AnyTemplateSyncTask anyTemplate = syncTask.getTemplate(type);\n+                    AnyTemplatePullTask anyTemplate = pullTask.getTemplate(type);\n                     if (anyTemplate == null) {\n-                        anyTemplate = entityFactory.newEntity(AnyTemplateSyncTask.class);\n+                        anyTemplate = entityFactory.newEntity(AnyTemplatePullTask.class);\n                         anyTemplate.setAnyType(type);\n-                        anyTemplate.setSyncTask(syncTask);\n+                        anyTemplate.setPullTask(pullTask);\n \n-                        syncTask.add(anyTemplate);\n+                        pullTask.add(anyTemplate);\n                     }\n                     anyTemplate.set(entry.getValue());\n                 }\n             }\n             // remove all templates not contained in the TO\n-            CollectionUtils.filter(syncTask.getTemplates(), new Predicate<AnyTemplate>() {\n+            CollectionUtils.filter(pullTask.getTemplates(), new Predicate<AnyTemplate>() {\n \n                 @Override\n                 public boolean evaluate(final AnyTemplate anyTemplate) {\n-                    return syncTaskTO.getTemplates().containsKey(anyTemplate.getAnyType().getKey());\n+                    return pullTaskTO.getTemplates().containsKey(anyTemplate.getAnyType().getKey());\n                 }\n             });\n         }\n@@ -190,7 +190,7 @@ public boolean evaluate(final AnyTemplate anyTemplate) {\n         task.setPerformCreate(taskTO.isPerformCreate());\n         task.setPerformUpdate(taskTO.isPerformUpdate());\n         task.setPerformDelete(taskTO.isPerformDelete());\n-        task.setSyncStatus(taskTO.isSyncStatus());\n+        task.setPullStatus(taskTO.isPullStatus());\n         task.getActionsClassNames().clear();\n         task.getActionsClassNames().addAll(taskTO.getActionsClassNames());\n     }\n@@ -334,21 +334,21 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n                 setExecTime((SchedTaskTO) taskTO, task);\n                 break;\n \n-            case SYNCHRONIZATION:\n-                if (!(task instanceof SyncTask)) {\n-                    throw new IllegalArgumentException(\"taskUtils is type Sync but task is not SyncTask: \"\n+            case PULL:\n+                if (!(task instanceof PullTask)) {\n+                    throw new IllegalArgumentException(\"taskUtils is type Pull but task is not PullTask: \"\n                             + task.getClass().getName());\n                 }\n                 setExecTime((SchedTaskTO) taskTO, task);\n-                ((SyncTaskTO) taskTO).setDestinationRealm(((SyncTask) task).getDestinatioRealm().getFullPath());\n-                ((SyncTaskTO) taskTO).setResource(((SyncTask) task).getResource().getKey());\n-                ((SyncTaskTO) taskTO).setMatchingRule(((SyncTask) task).getMatchingRule() == null\n-                        ? MatchingRule.UPDATE : ((SyncTask) task).getMatchingRule());\n-                ((SyncTaskTO) taskTO).setUnmatchingRule(((SyncTask) task).getUnmatchingRule() == null\n-                        ? UnmatchingRule.PROVISION : ((SyncTask) task).getUnmatchingRule());\n-\n-                for (AnyTemplate template : ((SyncTask) task).getTemplates()) {\n-                    ((SyncTaskTO) taskTO).getTemplates().put(template.getAnyType().getKey(), template.get());\n+                ((PullTaskTO) taskTO).setDestinationRealm(((PullTask) task).getDestinatioRealm().getFullPath());\n+                ((PullTaskTO) taskTO).setResource(((PullTask) task).getResource().getKey());\n+                ((PullTaskTO) taskTO).setMatchingRule(((PullTask) task).getMatchingRule() == null\n+                        ? MatchingRule.UPDATE : ((PullTask) task).getMatchingRule());\n+                ((PullTaskTO) taskTO).setUnmatchingRule(((PullTask) task).getUnmatchingRule() == null\n+                        ? UnmatchingRule.PROVISION : ((PullTask) task).getUnmatchingRule());\n+\n+                for (AnyTemplate template : ((PullTask) task).getTemplates()) {\n+                    ((PullTaskTO) taskTO).getTemplates().put(template.getAnyType().getKey(), template.get());\n                 }\n                 break;\n "},{"sha":"4c6455b2ba501a47acb50fb7cacf0f4f3940678d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -46,7 +46,7 @@\n  * Simple action for propagating group memberships to LDAP groups, when the same resource is configured for both users\n  * and groups.\n  *\n- * @see org.apache.syncope.core.provisioning.java.sync.LDAPMembershipSyncActions\n+ * @see org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\n  */\n public class LDAPMembershipPropagationActions extends DefaultPropagationActions {\n "},{"sha":"d10d27f9b2d08c092d97c821f334d1764cdc9893","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"renamed","additions":35,"deletions":35,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.lang.reflect.ParameterizedType;\n import java.util.ArrayList;\n@@ -34,7 +34,7 @@\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.java.job.AbstractSchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n import org.quartz.JobExecutionException;\n@@ -68,17 +68,17 @@\n     protected PolicyDAO policyDAO;\n \n     /**\n-     * Create a textual report of the synchronization, based on the trace level.\n+     * Create a textual report of the provisionig operation, based on the trace level.\n      *\n-     * @param provResults Sync results\n-     * @param syncTraceLevel Sync trace level\n+     * @param provResults Provisioning results\n+     * @param traceLevel Provisioning trace level\n      * @param dryRun dry run?\n      * @return report as string\n      */\n-    protected String createReport(final Collection<ProvisioningReport> provResults, final TraceLevel syncTraceLevel,\n+    protected String createReport(final Collection<ProvisioningReport> provResults, final TraceLevel traceLevel,\n             final boolean dryRun) {\n \n-        if (syncTraceLevel == TraceLevel.NONE) {\n+        if (traceLevel == TraceLevel.NONE) {\n             return null;\n         }\n \n@@ -290,79 +290,79 @@ protected String createReport(final Collection<ProvisioningReport> provResults,\n                 append(\"[no operation/ignored]: \").append(aSuccNone.size()).append('/').append(aIgnore.size());\n \n         // Failures\n-        if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n+        if (traceLevel == TraceLevel.FAILURES || traceLevel == TraceLevel.ALL) {\n             if (!uFailCreate.isEmpty()) {\n                 report.append(\"\\n\\nUsers failed to create: \");\n-                report.append(ProvisioningReport.produceReport(uFailCreate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(uFailCreate, traceLevel));\n             }\n             if (!uFailUpdate.isEmpty()) {\n                 report.append(\"\\nUsers failed to update: \");\n-                report.append(ProvisioningReport.produceReport(uFailUpdate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(uFailUpdate, traceLevel));\n             }\n             if (!uFailDelete.isEmpty()) {\n                 report.append(\"\\nUsers failed to delete: \");\n-                report.append(ProvisioningReport.produceReport(uFailDelete, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(uFailDelete, traceLevel));\n             }\n \n             if (!gFailCreate.isEmpty()) {\n                 report.append(\"\\n\\nGroups failed to create: \");\n-                report.append(ProvisioningReport.produceReport(gFailCreate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(gFailCreate, traceLevel));\n             }\n             if (!gFailUpdate.isEmpty()) {\n                 report.append(\"\\nGroups failed to update: \");\n-                report.append(ProvisioningReport.produceReport(gFailUpdate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(gFailUpdate, traceLevel));\n             }\n             if (!gFailDelete.isEmpty()) {\n                 report.append(\"\\nGroups failed to delete: \");\n-                report.append(ProvisioningReport.produceReport(gFailDelete, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(gFailDelete, traceLevel));\n             }\n \n             if (!aFailCreate.isEmpty()) {\n                 report.append(\"\\nAny objects failed to create: \");\n-                report.append(ProvisioningReport.produceReport(aFailCreate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(aFailCreate, traceLevel));\n             }\n             if (!aFailUpdate.isEmpty()) {\n                 report.append(\"\\nAny objects failed to update: \");\n-                report.append(ProvisioningReport.produceReport(aFailUpdate, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(aFailUpdate, traceLevel));\n             }\n             if (!aFailDelete.isEmpty()) {\n                 report.append(\"\\nAny objects failed to delete: \");\n-                report.append(ProvisioningReport.produceReport(aFailDelete, syncTraceLevel));\n+                report.append(ProvisioningReport.produceReport(aFailDelete, traceLevel));\n             }\n         }\n \n         // Succeeded, only if on 'ALL' level\n-        if (syncTraceLevel == TraceLevel.ALL) {\n+        if (traceLevel == TraceLevel.ALL) {\n             report.append(\"\\n\\nUsers created:\\n\").\n-                    append(ProvisioningReport.produceReport(uSuccCreate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(uSuccCreate, traceLevel)).\n                     append(\"\\nUsers updated:\\n\").\n-                    append(ProvisioningReport.produceReport(uSuccUpdate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(uSuccUpdate, traceLevel)).\n                     append(\"\\nUsers deleted:\\n\").\n-                    append(ProvisioningReport.produceReport(uSuccDelete, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(uSuccDelete, traceLevel)).\n                     append(\"\\nUsers no operation:\\n\").\n-                    append(ProvisioningReport.produceReport(uSuccNone, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(uSuccNone, traceLevel)).\n                     append(\"\\nUsers ignored:\\n\").\n-                    append(ProvisioningReport.produceReport(uIgnore, syncTraceLevel));\n+                    append(ProvisioningReport.produceReport(uIgnore, traceLevel));\n             report.append(\"\\n\\nGroups created:\\n\").\n-                    append(ProvisioningReport.produceReport(gSuccCreate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(gSuccCreate, traceLevel)).\n                     append(\"\\nGroups updated:\\n\").\n-                    append(ProvisioningReport.produceReport(gSuccUpdate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(gSuccUpdate, traceLevel)).\n                     append(\"\\nGroups deleted:\\n\").\n-                    append(ProvisioningReport.produceReport(gSuccDelete, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(gSuccDelete, traceLevel)).\n                     append(\"\\nGroups no operation:\\n\").\n-                    append(ProvisioningReport.produceReport(gSuccNone, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(gSuccNone, traceLevel)).\n                     append(\"\\nGroups ignored:\\n\").\n-                    append(ProvisioningReport.produceReport(gSuccNone, syncTraceLevel));\n+                    append(ProvisioningReport.produceReport(gSuccNone, traceLevel));\n             report.append(\"\\n\\nAny objects created:\\n\").\n-                    append(ProvisioningReport.produceReport(aSuccCreate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(aSuccCreate, traceLevel)).\n                     append(\"\\nAny objects updated:\\n\").\n-                    append(ProvisioningReport.produceReport(aSuccUpdate, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(aSuccUpdate, traceLevel)).\n                     append(\"\\nAny objects deleted:\\n\").\n-                    append(ProvisioningReport.produceReport(aSuccDelete, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(aSuccDelete, traceLevel)).\n                     append(\"\\nAny objects no operation:\\n\").\n-                    append(ProvisioningReport.produceReport(aSuccNone, syncTraceLevel)).\n+                    append(ProvisioningReport.produceReport(aSuccNone, traceLevel)).\n                     append(\"\\nAny objects ignored:\\n\").\n-                    append(ProvisioningReport.produceReport(aSuccNone, syncTraceLevel));\n+                    append(ProvisioningReport.produceReport(aSuccNone, traceLevel));\n         }\n \n         return report.toString();\n@@ -423,8 +423,8 @@ protected boolean hasToBeRegistered(final TaskExec execution) {\n \n         // True if either failed and failures have to be registered, or if ALL has to be registered.\n         return (TaskJob.Status.valueOf(execution.getStatus()) == TaskJob.Status.FAILURE\n-                && provTask.getResource().getSyncTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal())\n-                || provTask.getResource().getSyncTraceLevel().ordinal() >= TraceLevel.SUMMARY.ordinal();\n+                && provTask.getResource().getPullTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal())\n+                || provTask.getResource().getPullTraceLevel().ordinal() >= TraceLevel.SUMMARY.ordinal();\n     }\n \n     @SuppressWarnings(\"unchecked\")","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AbstractProvisioningJobDelegate.java"},{"sha":"bde6ee7f8f666dfa9423470a2feb864dd59b79f0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"renamed","additions":48,"deletions":48,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.Collections;\n@@ -34,9 +34,7 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -45,22 +43,24 @@\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n-import org.apache.syncope.core.provisioning.api.syncpull.IgnoreProvisionException;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncopeSyncResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n @Transactional(rollbackFor = Throwable.class)\n-public abstract class AbstractSyncResultHandler extends AbstractSyncopeResultHandler<SyncTask, SyncActions>\n-        implements SyncopeSyncResultHandler {\n+public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHandler<PullTask, PullActions>\n+        implements SyncopePullResultHandler {\n \n     @Autowired\n-    protected SyncUtils syncUtilities;\n+    protected PullUtils pullUtils;\n \n     @Autowired\n     protected VirSchemaDAO virSchemaDAO;\n@@ -113,7 +113,7 @@ protected void doDelete(final AnyTypeKind kind, final Long key) {\n                     propByRes,\n                     null));\n         } catch (Exception e) {\n-            // A propagation failure doesn't imply a synchronization failure.\n+            // A propagation failure doesn't imply a pull failure.\n             // The propagation exception status will be reported into the propagation task execution.\n             LOG.error(\"Could not propagate anyObject \" + key, e);\n         }\n@@ -143,10 +143,10 @@ public boolean handle(final SyncDelta delta) {\n             result.setName(delta.getObject().getName().getNameValue());\n             profile.getResults().add(result);\n \n-            LOG.warn(\"Ignoring during synchronization\", e);\n+            LOG.warn(\"Ignoring during pull\", e);\n             return true;\n         } catch (JobExecutionException e) {\n-            LOG.error(\"Synchronization failed\", e);\n+            LOG.error(\"Pull failed\", e);\n             return false;\n         }\n     }\n@@ -156,7 +156,7 @@ protected List<ProvisioningReport> assign(\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformCreate()) {\n-            LOG.debug(\"SyncTask not configured for create\");\n+            LOG.debug(\"PullTask not configured for create\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -174,7 +174,7 @@ protected List<ProvisioningReport> assign(\n             result.setKey(0L);\n         } else {\n             SyncDelta actionedDelta = delta;\n-            for (SyncActions action : profile.getActions()) {\n+            for (PullActions action : profile.getActions()) {\n                 actionedDelta = action.beforeAssign(this.getProfile(), actionedDelta, anyTO);\n             }\n \n@@ -189,7 +189,7 @@ protected List<ProvisioningReport> provision(\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformCreate()) {\n-            LOG.debug(\"SyncTask not configured for create\");\n+            LOG.debug(\"PullTask not configured for create\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -205,7 +205,7 @@ protected List<ProvisioningReport> provision(\n             result.setKey(0L);\n         } else {\n             SyncDelta actionedDelta = delta;\n-            for (SyncActions action : profile.getActions()) {\n+            for (PullActions action : profile.getActions()) {\n                 actionedDelta = action.beforeProvision(this.getProfile(), actionedDelta, anyTO);\n             }\n \n@@ -231,19 +231,19 @@ private void create(\n             output = actual;\n             resultStatus = Result.SUCCESS;\n \n-            for (SyncActions action : profile.getActions()) {\n+            for (PullActions action : profile.getActions()) {\n                 action.after(this.getProfile(), delta, actual, result);\n             }\n         } catch (IgnoreProvisionException e) {\n             throw e;\n         } catch (PropagationException e) {\n-            // A propagation failure doesn't imply a synchronization failure.\n+            // A propagation failure doesn't imply a pull failure.\n             // The propagation exception status will be reported into the propagation task execution.\n             LOG.error(\"Could not propagate {} {}\", anyTO.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n \n-            for (SyncActions action : profile.getActions()) {\n+            for (PullActions action : profile.getActions()) {\n                 action.onError(this.getProfile(), delta, result, e);\n             }\n         } catch (Exception e) {\n@@ -253,7 +253,7 @@ private void create(\n             output = e;\n             resultStatus = Result.FAILURE;\n \n-            for (SyncActions action : profile.getActions()) {\n+            for (PullActions action : profile.getActions()) {\n                 action.onError(this.getProfile(), delta, result, e);\n             }\n         }\n@@ -265,7 +265,7 @@ protected List<ProvisioningReport> update(final SyncDelta delta, final List<Long\n             final Provision provision) throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n-            LOG.debug(\"SyncTask not configured for update\");\n+            LOG.debug(\"PullTask not configured for update\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -307,13 +307,13 @@ protected List<ProvisioningReport> update(final SyncDelta delta, final List<Long\n                                 provision,\n                                 getAnyUtils());\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             workingDelta = action.beforeUpdate(this.getProfile(), workingDelta, before, anyPatch);\n                         }\n \n                         AnyTO updated = doUpdate(before, anyPatch, workingDelta, result);\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.after(this.getProfile(), workingDelta, updated, result);\n                         }\n \n@@ -324,14 +324,14 @@ protected List<ProvisioningReport> update(final SyncDelta delta, final List<Long\n                     } catch (IgnoreProvisionException e) {\n                         throw e;\n                     } catch (PropagationException e) {\n-                        // A propagation failure doesn't imply a synchronization failure.\n+                        // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), workingDelta, result, e);\n                         }\n                     } catch (Exception e) {\n@@ -342,7 +342,7 @@ protected List<ProvisioningReport> update(final SyncDelta delta, final List<Long\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), workingDelta, result, e);\n                         }\n                     }\n@@ -362,7 +362,7 @@ protected List<ProvisioningReport> deprovision(\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n-            LOG.debug(\"SyncTask not configured for update\");\n+            LOG.debug(\"PullTask not configured for update\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -398,19 +398,19 @@ protected List<ProvisioningReport> deprovision(\n \n                     try {\n                         if (unlink) {\n-                            for (SyncActions action : profile.getActions()) {\n+                            for (PullActions action : profile.getActions()) {\n                                 action.beforeUnassign(this.getProfile(), delta, before);\n                             }\n                         } else {\n-                            for (SyncActions action : profile.getActions()) {\n+                            for (PullActions action : profile.getActions()) {\n                                 action.beforeDeprovision(this.getProfile(), delta, before);\n                             }\n                         }\n \n                         doDeprovision(provision.getAnyType().getKind(), key, unlink);\n                         output = getAnyTO(key);\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, AnyTO.class.cast(output), result);\n                         }\n \n@@ -419,14 +419,14 @@ protected List<ProvisioningReport> deprovision(\n                     } catch (IgnoreProvisionException e) {\n                         throw e;\n                     } catch (PropagationException e) {\n-                        // A propagation failure doesn't imply a synchronization failure.\n+                        // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), delta, result, e);\n                         }\n                     } catch (Exception e) {\n@@ -437,7 +437,7 @@ protected List<ProvisioningReport> deprovision(\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), delta, result, e);\n                         }\n                     }\n@@ -460,7 +460,7 @@ protected List<ProvisioningReport> link(\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n-            LOG.debug(\"SyncTask not configured for update\");\n+            LOG.debug(\"PullTask not configured for update\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -496,18 +496,18 @@ protected List<ProvisioningReport> link(\n \n                     try {\n                         if (unlink) {\n-                            for (SyncActions action : profile.getActions()) {\n+                            for (PullActions action : profile.getActions()) {\n                                 action.beforeUnlink(this.getProfile(), delta, before);\n                             }\n                         } else {\n-                            for (SyncActions action : profile.getActions()) {\n+                            for (PullActions action : profile.getActions()) {\n                                 action.beforeLink(this.getProfile(), delta, before);\n                             }\n                         }\n \n                         output = doLink(before, unlink);\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, AnyTO.class.cast(output), result);\n                         }\n \n@@ -516,14 +516,14 @@ protected List<ProvisioningReport> link(\n                     } catch (IgnoreProvisionException e) {\n                         throw e;\n                     } catch (PropagationException e) {\n-                        // A propagation failure doesn't imply a synchronization failure.\n+                        // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), delta, result, e);\n                         }\n                     } catch (Exception e) {\n@@ -534,7 +534,7 @@ protected List<ProvisioningReport> link(\n                         output = e;\n                         resultStatus = Result.FAILURE;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), delta, result, e);\n                         }\n                     }\n@@ -555,7 +555,7 @@ protected List<ProvisioningReport> delete(\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformDelete()) {\n-            LOG.debug(\"SyncTask not configured for delete\");\n+            LOG.debug(\"PullTask not configured for delete\");\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n@@ -580,7 +580,7 @@ protected List<ProvisioningReport> delete(\n                 result.setStatus(ProvisioningReport.Status.SUCCESS);\n \n                 if (!profile.isDryRun()) {\n-                    for (SyncActions action : profile.getActions()) {\n+                    for (PullActions action : profile.getActions()) {\n                         workingDelta = action.beforeDelete(this.getProfile(), workingDelta, before);\n                     }\n \n@@ -589,7 +589,7 @@ protected List<ProvisioningReport> delete(\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.after(this.getProfile(), workingDelta, before, result);\n                         }\n                     } catch (IgnoreProvisionException e) {\n@@ -600,7 +600,7 @@ protected List<ProvisioningReport> delete(\n                         LOG.error(\"Could not delete {} {}\", provision.getAnyType().getKey(), key, e);\n                         output = e;\n \n-                        for (SyncActions action : profile.getActions()) {\n+                        for (PullActions action : profile.getActions()) {\n                             action.onError(this.getProfile(), workingDelta, result, e);\n                         }\n                     }\n@@ -653,7 +653,7 @@ private List<ProvisioningReport> ignore(\n      *\n      * @param delta returned by the underlying profile.getConnector()\n      * @param provision provisioning info\n-     * @throws JobExecutionException in case of synchronization failure.\n+     * @throws JobExecutionException in case of pull failure.\n      */\n     protected void doHandle(final SyncDelta delta, final Provision provision) throws JobExecutionException {\n         AnyUtils anyUtils = getAnyUtils();\n@@ -666,7 +666,7 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                 : delta.getPreviousUid().getUidValue();\n \n         try {\n-            List<Long> anyKeys = syncUtilities.findExisting(uid, delta.getObject(), provision, anyUtils);\n+            List<Long> anyKeys = pullUtils.findExisting(uid, delta.getObject(), provision, anyUtils);\n             LOG.debug(\"Match(es) found for {} as {}: {}\",\n                     delta.getUid().getUidValue(), delta.getObject().getObjectClass(), anyKeys);\n \n@@ -776,7 +776,7 @@ private void audit(\n             final Object output,\n             final Object... input) {\n \n-        notificationManager.createTasks(AuditElements.EventCategoryType.SYNCHRONIZATION,\n+        notificationManager.createTasks(AuditElements.EventCategoryType.PULL,\n                 getAnyUtils().getAnyTypeKind().name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,\n@@ -785,7 +785,7 @@ private void audit(\n                 output,\n                 input);\n \n-        auditManager.audit(AuditElements.EventCategoryType.SYNCHRONIZATION,\n+        auditManager.audit(AuditElements.EventCategoryType.PULL,\n                 getAnyUtils().getAnyTypeKind().name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AbstractSyncResultHandler.java"},{"sha":"e2570eb997b008fce59bdb377ed8a09e627c4431","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -35,8 +35,8 @@\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.api.syncpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -46,8 +46,8 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n-import org.apache.syncope.core.provisioning.api.syncpull.IgnoreProvisionException;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncopePushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -179,7 +179,7 @@ protected final void doHandle(final Any<?> any) throws JobExecutionException {\n         result.setAnyType(any.getType().getKey());\n         result.setName(getName(any));\n \n-        Boolean enabled = any instanceof User && profile.getTask().isSyncStatus()\n+        Boolean enabled = any instanceof User && profile.getTask().isPullStatus()\n                 ? ((User) any).isSuspended() ? Boolean.FALSE : Boolean.TRUE\n                 : null;\n \n@@ -196,7 +196,7 @@ protected final void doHandle(final Any<?> any) throws JobExecutionException {\n \n         ConnectorObject beforeObj = getRemoteObject(connObjecKey, provision.getObjectClass());\n \n-        Boolean status = profile.getTask().isSyncStatus() ? enabled : null;\n+        Boolean status = profile.getTask().isPullStatus() ? enabled : null;\n \n         if (profile.isDryRun()) {\n             if (beforeObj == null) {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AbstractPushResultHandler.java"},{"sha":"37f67ff531a35b9f702a03ef275d17b975f14b34","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -29,8 +29,8 @@\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncopeResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopeResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n@@ -41,7 +41,7 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AbstractSyncopeResultHandler.java"},{"sha":"67c57318f77a0ea9c2cfd19493074913c67a0fe3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPullResultHandlerImpl.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Collections;\n import java.util.List;\n@@ -32,11 +32,11 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.api.syncpull.AnyObjectSyncResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n \n-public class AnyObjectSyncResultHandlerImpl extends AbstractSyncResultHandler implements AnyObjectSyncResultHandler {\n+public class AnyObjectPullResultHandlerImpl extends AbstractPullResultHandler implements AnyObjectPullResultHandler {\n \n     @Override\n     protected AnyUtils getAnyUtils() {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AnyObjectSyncResultHandlerImpl.java"},{"sha":"ce5aebb19d4fba5fca74b7ea77aba0cadfd2972a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPushResultHandlerImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPushResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n@@ -26,7 +26,7 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.AnyObjectPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPushResultHandler;\n \n public class AnyObjectPushResultHandlerImpl extends AbstractPushResultHandler implements AnyObjectPushResultHandler {\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/AnyObjectPushResultHandlerImpl.java"},{"sha":"2df5ace84f0b189530baedac327112ba52af1794","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -31,8 +31,8 @@\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -41,13 +41,13 @@\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n- * A SyncActions implementation which allows the ability to import passwords from a Database\n- * backend, where the passwords are hashed according to the password cipher algorithm property\n- * of the (DB) Connector and HEX-encoded.\n+ * A {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions} implementation which allows the ability to\n+ * import passwords from a Database backend, where the passwords are hashed according to the password cipher algorithm\n+ * property of the (DB) Connector and HEX-encoded.\n  */\n-public class DBPasswordSyncActions extends DefaultSyncActions {\n+public class DBPasswordPullActions extends DefaultPullActions {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(DBPasswordSyncActions.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(DBPasswordPullActions.class);\n \n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n@@ -113,7 +113,7 @@ private String getCipherAlgorithm(final ConnInstance connInstance) {\n                     @Override\n                     public boolean evaluate(final ConnConfProperty property) {\n                         return \"cipherAlgorithm\".equals(property.getSchema().getName())\n-                        && property.getValues() != null && !property.getValues().isEmpty();\n+                                && property.getValues() != null && !property.getValues().isEmpty();\n                     }\n                 });\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/DBPasswordSyncActions.java"},{"sha":"7a4cbe0ed8b6f0e0c3389772bdd7fe92de085750","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultPullActions.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,20 +16,20 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n /**\n- * Default (empty) implementation of {@link SyncActions}.\n+ * Default (empty) implementation of {@link PullActions}.\n  */\n-public abstract class DefaultSyncActions implements SyncActions {\n+public abstract class DefaultPullActions implements PullActions {\n \n     @Override\n     public void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/DefaultSyncActions.java"},{"sha":"2e75870c65783cbea899a65c601934b3991f4286","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultPushActions.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,12 +16,12 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.provisioning.api.syncpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.quartz.JobExecutionException;\n \n /**","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/DefaultPushActions.java"},{"sha":"c46c0fb0b63da21dc15796fe8e0e44beaaba1e48","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultReconciliationFilterBuilder.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,12 +16,12 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import static org.identityconnectors.framework.impl.api.local.operations.FilteredResultsHandler.PassThroughFilter;\n \n import org.identityconnectors.framework.common.objects.filter.Filter;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n \n /**\n  * Default (pass-through) implementation of {@link ReconciliationFilterBuilder}.","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/DefaultReconciliationFilterBuilder.java"},{"sha":"b880b5731753e207636df403f03b2c8b09571594","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPullResultHandlerImpl.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Collections;\n import java.util.HashMap;\n@@ -34,11 +34,11 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.api.syncpull.GroupSyncResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n \n-public class GroupSyncResultHandlerImpl extends AbstractSyncResultHandler implements GroupSyncResultHandler {\n+public class GroupPullResultHandlerImpl extends AbstractPullResultHandler implements GroupPullResultHandler {\n \n     protected final Map<Long, String> groupOwnerMap = new HashMap<>();\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/GroupSyncResultHandlerImpl.java"},{"sha":"c572177c15384c55ddda0c73f7f96461cbbb3efd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPushResultHandlerImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPushResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n@@ -26,7 +26,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.GroupPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.GroupPushResultHandler;\n \n public class GroupPushResultHandlerImpl extends AbstractPushResultHandler implements GroupPushResultHandler {\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/GroupPushResultHandlerImpl.java"},{"sha":"7f7971c9c0167f2a98b7e2e923ddc83982ae5462","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPMembershipPullActions.java","status":"renamed","additions":21,"deletions":23,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Collections;\n import java.util.HashMap;\n@@ -39,14 +39,13 @@\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -63,16 +62,17 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n /**\n- * Simple action for synchronizing LDAP groups memberships to Syncope group memberships, when the same resource is\n+ * Simple action for pulling LDAP groups memberships to Syncope group memberships, when the same resource is\n  * configured for both users and groups.\n  *\n  * @see org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\n  */\n-public class LDAPMembershipSyncActions extends DefaultSyncActions {\n+public class LDAPMembershipPullActions extends DefaultPullActions {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(LDAPMembershipSyncActions.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(LDAPMembershipPullActions.class);\n \n     @Autowired\n     protected AnyTypeDAO anyTypeDAO;\n@@ -99,7 +99,7 @@ public class LDAPMembershipSyncActions extends DefaultSyncActions {\n     private AuditManager auditManager;\n \n     @Autowired\n-    private SyncUtils syncUtils;\n+    private PullUtils pullUtils;\n \n     protected Map<Long, Long> membersBeforeGroupUpdate = Collections.<Long, Long>emptyMap();\n \n@@ -127,7 +127,7 @@ public boolean evaluate(final ConnConfProperty property) {\n \n     /**\n      * Keep track of members of the group being updated <b>before</b> actual update takes place. This is not needed on\n-     * <ul> <li>beforeProvision() - because the synchronizing group does not exist yet on Syncope</li>\n+     * <ul> <li>beforeProvision() - because the pulling group does not exist yet on Syncope</li>\n      * <li>beforeDelete() - because group delete cascades as membership removal for all users involved</li> </ul>\n      *\n      * {@inheritDoc}\n@@ -182,7 +182,7 @@ protected UserPatch getUserPatch(final Long userKey, final GroupTO groupTO) {\n      * Read values of attribute returned by getGroupMembershipAttrName(); if not present in the given delta, perform an\n      * additional read on the underlying connector.\n      *\n-     * @param delta representing the synchronizing group\n+     * @param delta representing the pulling group\n      * @param connector associated to the current resource\n      * @return value of attribute returned by\n      * {@link #getGroupMembershipAttrName}\n@@ -191,7 +191,7 @@ protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector\n         List<Object> result = Collections.<Object>emptyList();\n         String groupMemberName = getGroupMembershipAttrName(connector);\n \n-        // first, try to read the configured attribute from delta, returned by the ongoing synchronization\n+        // first, try to read the configured attribute from delta, returned by the ongoing pull\n         Attribute membAttr = delta.getObject().getAttributeByName(groupMemberName);\n         // if not found, perform an additional read on the underlying connector for the same connector object\n         if (membAttr == null) {\n@@ -242,8 +242,7 @@ protected void userUpdate(final UserPatch userPatch, final String resourceName)\n             LOG.error(\"Could not perform update {}\", userPatch, e);\n         }\n \n-        notificationManager.createTasks(\n-                AuditElements.EventCategoryType.SYNCHRONIZATION,\n+        notificationManager.createTasks(AuditElements.EventCategoryType.PULL,\n                 this.getClass().getSimpleName(),\n                 null,\n                 \"update\",\n@@ -253,8 +252,7 @@ protected void userUpdate(final UserPatch userPatch, final String resourceName)\n                 userPatch,\n                 resourceName);\n \n-        auditManager.audit(\n-                AuditElements.EventCategoryType.SYNCHRONIZATION,\n+        auditManager.audit(AuditElements.EventCategoryType.PULL,\n                 this.getClass().getSimpleName(),\n                 null,\n                 \"update\",\n@@ -266,14 +264,14 @@ protected void userUpdate(final UserPatch userPatch, final String resourceName)\n     }\n \n     /**\n-     * Synchronize Syncope memberships with the situation read on the external resource's group.\n+     * Pull Syncope memberships with the situation read on the external resource's group.\n      *\n-     * @param profile sync profile\n-     * @param delta representing the synchronizing group\n+     * @param profile pull profile\n+     * @param delta representing the pullong group\n      * @param groupTO group after modification performed by the handler\n      * @throws JobExecutionException if anything goes wrong\n      */\n-    protected void synchronizeMemberships(\n+    protected void pullMemberships(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final GroupTO groupTO)\n             throws JobExecutionException {\n \n@@ -282,7 +280,7 @@ protected void synchronizeMemberships(\n         Connector connector = profile.getConnector();\n \n         for (Object membValue : getMembAttrValues(delta, connector)) {\n-            Long userKey = syncUtils.findMatchingAnyKey(\n+            Long userKey = pullUtils.findMatchingAnyKey(\n                     anyTypeDAO.findUser(),\n                     membValue.toString(),\n                     profile.getTask().getResource(),\n@@ -309,7 +307,7 @@ protected void synchronizeMemberships(\n     }\n \n     /**\n-     * Synchronize membership at group synchronization time (because SyncJob first synchronize users then groups).\n+     * Pull membership at group pull time (because PullJob first pulls users then groups).\n      * {@inheritDoc}\n      */\n     @Override\n@@ -319,7 +317,7 @@ public <A extends AnyTO> void after(\n             final A any,\n             final ProvisioningReport result) throws JobExecutionException {\n \n-        if (!(profile.getTask() instanceof SyncTask)) {\n+        if (!(profile.getTask() instanceof PullTask)) {\n             return;\n         }\n \n@@ -329,7 +327,7 @@ public <A extends AnyTO> void after(\n \n             super.after(profile, delta, any, result);\n         } else {\n-            synchronizeMemberships(profile, delta, (GroupTO) any);\n+            pullMemberships(profile, delta, (GroupTO) any);\n         }\n     }\n }","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/LDAPMembershipSyncActions.java"},{"sha":"2d613963651b75a43e4e8aa7e95880733b1f5cbd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPPasswordPullActions.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n@@ -26,8 +26,8 @@\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -38,12 +38,12 @@\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n- * A SyncActions implementation which allows the ability to import passwords from an LDAP backend\n- * that are hashed.\n+ * A {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions} implementation which allows the ability to \n+ * import passwords from an LDAP backend that are hashed.\n  */\n-public class LDAPPasswordSyncActions extends DefaultSyncActions {\n+public class LDAPPasswordPullActions extends DefaultPullActions {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(LDAPPasswordSyncActions.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(LDAPPasswordPullActions.class);\n \n     @Autowired\n     private UserDAO userDAO;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/LDAPPasswordSyncActions.java"},{"sha":"d752cd534ade22bde4e5a7a7f7a2345c21b298ae","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Arrays;\n import java.util.HashMap;\n@@ -29,25 +29,25 @@\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncCorrelationRule;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n \n-public class PlainAttrsSyncCorrelationRule implements SyncCorrelationRule {\n+public class PlainAttrsPullCorrelationRule implements PullCorrelationRule {\n \n     private final List<String> plainSchemaNames;\n \n     private final Provision provision;\n \n-    public PlainAttrsSyncCorrelationRule(final String[] plainSchemaNames, final Provision provision) {\n+    public PlainAttrsPullCorrelationRule(final String[] plainSchemaNames, final Provision provision) {\n         this.plainSchemaNames = Arrays.asList(plainSchemaNames);\n         this.provision = provision;\n     }\n \n     @Override\n     public SearchCond getSearchCond(final ConnectorObject connObj) {\n         Map<String, MappingItem> mappingItems = new HashMap<>();\n-        for (MappingItem item : MappingManagerImpl.getSyncMappingItems(provision)) {\n+        for (MappingItem item : MappingManagerImpl.getPullMappingItems(provision)) {\n             mappingItems.put(item.getIntAttrName(), item);\n         }\n \n@@ -67,7 +67,7 @@ public SearchCond getSearchCond(final ConnectorObject connObj) {\n             for (MappingItemTransformer transformer\n                     : MappingManagerImpl.getMappingItemTransformers(mappingItems.get(schema))) {\n \n-                values = transformer.beforeSync(values);\n+                values = transformer.beforePull(values);\n             }\n \n             AttributeCond.Type type;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/PlainAttrsSyncCorrelationRule.java"},{"sha":"ed1a702c8e7ce1879d008069f94546b4c0c86272","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"renamed","additions":43,"deletions":43,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.HashSet;\n@@ -26,7 +26,7 @@\n import java.util.Set;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n@@ -38,21 +38,21 @@\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n-import org.apache.syncope.core.provisioning.api.syncpull.AnyObjectSyncResultHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.GroupSyncResultHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.UserSyncResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n-import org.apache.syncope.core.provisioning.api.syncpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n \n-public class SyncJobDelegate extends AbstractProvisioningJobDelegate<SyncTask> {\n+public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> {\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -64,9 +64,9 @@ public class SyncJobDelegate extends AbstractProvisioningJobDelegate<SyncTask> {\n     private VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    protected SyncUtils syncUtils;\n+    protected PullUtils pullUtils;\n \n-    protected void setGroupOwners(final GroupSyncResultHandler ghandler) {\n+    protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n         for (Map.Entry<Long, String> entry : ghandler.getGroupOwnerMap().entrySet()) {\n             Group group = groupDAO.find(entry.getKey());\n             if (group == null) {\n@@ -77,14 +77,14 @@ protected void setGroupOwners(final GroupSyncResultHandler ghandler) {\n                 group.setGroupOwner(null);\n                 group.setUserOwner(null);\n             } else {\n-                Long userKey = syncUtils.findMatchingAnyKey(\n+                Long userKey = pullUtils.findMatchingAnyKey(\n                         anyTypeDAO.findUser(),\n                         entry.getValue(),\n                         ghandler.getProfile().getTask().getResource(),\n                         ghandler.getProfile().getConnector());\n \n                 if (userKey == null) {\n-                    Long groupKey = syncUtils.findMatchingAnyKey(\n+                    Long groupKey = pullUtils.findMatchingAnyKey(\n                             anyTypeDAO.findGroup(),\n                             entry.getValue(),\n                             ghandler.getProfile().getTask().getResource(),\n@@ -104,52 +104,52 @@ protected void setGroupOwners(final GroupSyncResultHandler ghandler) {\n \n     @Override\n     protected String doExecuteProvisioning(\n-            final SyncTask syncTask,\n+            final PullTask pullTask,\n             final Connector connector,\n             final boolean dryRun) throws JobExecutionException {\n \n-        LOG.debug(\"Executing sync on {}\", syncTask.getResource());\n+        LOG.debug(\"Executing pull on {}\", pullTask.getResource());\n \n-        List<SyncActions> actions = new ArrayList<>();\n-        for (String className : syncTask.getActionsClassNames()) {\n+        List<PullActions> actions = new ArrayList<>();\n+        for (String className : pullTask.getActionsClassNames()) {\n             try {\n                 Class<?> actionsClass = Class.forName(className);\n-                SyncActions syncActions = (SyncActions) ApplicationContextProvider.getBeanFactory().\n+                PullActions pullActions = (PullActions) ApplicationContextProvider.getBeanFactory().\n                         createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n \n-                actions.add(syncActions);\n+                actions.add(pullActions);\n             } catch (Exception e) {\n                 LOG.warn(\"Class '{}' not found\", className, e);\n             }\n         }\n \n-        ProvisioningProfile<SyncTask, SyncActions> profile = new ProvisioningProfile<>(connector, syncTask);\n+        ProvisioningProfile<PullTask, PullActions> profile = new ProvisioningProfile<>(connector, pullTask);\n         profile.getActions().addAll(actions);\n         profile.setDryRun(dryRun);\n-        profile.setResAct(getSyncPolicySpec(syncTask).getConflictResolutionAction());\n+        profile.setResAct(getPullPolicySpec(pullTask).getConflictResolutionAction());\n \n         // Prepare handler for SyncDelta objects (any objects)\n-        AnyObjectSyncResultHandler ahandler = (AnyObjectSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(AnyObjectSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        AnyObjectPullResultHandler ahandler = (AnyObjectPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(AnyObjectPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ahandler.setProfile(profile);\n \n         // Prepare handler for SyncDelta objects (users)\n-        UserSyncResultHandler uhandler = (UserSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(UserSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        UserPullResultHandler uhandler = (UserPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(UserPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         uhandler.setProfile(profile);\n \n         // Prepare handler for SyncDelta objects (groups)\n-        GroupSyncResultHandler ghandler = (GroupSyncResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(GroupSyncResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        GroupPullResultHandler ghandler = (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(GroupPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ghandler.setProfile(profile);\n \n         if (!profile.isDryRun()) {\n-            for (SyncActions action : actions) {\n+            for (PullActions action : actions) {\n                 action.beforeAll(profile);\n             }\n         }\n \n-        for (Provision provision : syncTask.getResource().getProvisions()) {\n+        for (Provision provision : pullTask.getResource().getProvisions()) {\n             if (provision.getMapping() != null) {\n                 SyncResultsHandler handler;\n                 switch (provision.getAnyType().getKind()) {\n@@ -175,7 +175,7 @@ protected String doExecuteProvisioning(\n                             provision.getMapping().getItems().iterator(),\n                             linkinMappingItems.iterator());\n \n-                    switch (syncTask.getSyncMode()) {\n+                    switch (pullTask.getPullMode()) {\n                         case INCREMENTAL:\n                             SyncToken latestSyncToken = connector.getLatestSyncToken(provision.getObjectClass());\n                             connector.sync(provision.getObjectClass(),\n@@ -191,7 +191,7 @@ protected String doExecuteProvisioning(\n                         case FILTERED_RECONCILIATION:\n                             ReconciliationFilterBuilder filterBuilder =\n                                     (ReconciliationFilterBuilder) ApplicationContextProvider.getBeanFactory().\n-                                    createBean(Class.forName(syncTask.getReconciliationFilterBuilderClassName()),\n+                                    createBean(Class.forName(pullTask.getReconciliationFilterBuilderClassName()),\n                                             AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n                             connector.filteredReconciliation(provision.getObjectClass(),\n                                     filterBuilder,\n@@ -207,7 +207,7 @@ protected String doExecuteProvisioning(\n                             break;\n                     }\n                 } catch (Throwable t) {\n-                    throw new JobExecutionException(\"While syncing from connector\", t);\n+                    throw new JobExecutionException(\"While pulling from connector\", t);\n                 }\n             }\n         }\n@@ -219,30 +219,30 @@ protected String doExecuteProvisioning(\n         }\n \n         if (!profile.isDryRun()) {\n-            for (SyncActions action : actions) {\n+            for (PullActions action : actions) {\n                 action.afterAll(profile);\n             }\n         }\n \n-        String result = createReport(profile.getResults(), syncTask.getResource().getSyncTraceLevel(), dryRun);\n+        String result = createReport(profile.getResults(), pullTask.getResource().getPullTraceLevel(), dryRun);\n \n-        LOG.debug(\"Sync result: {}\", result);\n+        LOG.debug(\"Pull result: {}\", result);\n \n         return result;\n     }\n \n-    private SyncPolicySpec getSyncPolicySpec(final ProvisioningTask task) {\n-        SyncPolicySpec syncPolicySpec;\n+    private PullPolicySpec getPullPolicySpec(final ProvisioningTask task) {\n+        PullPolicySpec pullPolicySpec;\n \n-        if (task instanceof SyncTask) {\n-            syncPolicySpec = task.getResource().getSyncPolicy() == null\n+        if (task instanceof PullTask) {\n+            pullPolicySpec = task.getResource().getPullPolicy() == null\n                     ? null\n-                    : task.getResource().getSyncPolicy().getSpecification();\n+                    : task.getResource().getPullPolicy().getSpecification();\n         } else {\n-            syncPolicySpec = null;\n+            pullPolicySpec = null;\n         }\n \n         // step required because the call <policy>.getSpecification() could return a null value\n-        return syncPolicySpec == null ? new SyncPolicySpec() : syncPolicySpec;\n+        return pullPolicySpec == null ? new PullPolicySpec() : pullPolicySpec;\n     }\n }","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/SyncJobDelegate.java"},{"sha":"a0f558c7d897a7ac47c7eedc5b39b69827699791","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"renamed","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,14 +16,14 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n@@ -47,7 +47,6 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncCorrelationRule;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -60,12 +59,13 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n \n @Transactional(readOnly = true)\n @Component\n-public class SyncUtils {\n+public class PullUtils {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SyncUtils.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(PullUtils.class);\n \n     /**\n      * Schema DAO.\n@@ -125,7 +125,7 @@ public boolean handle(final ConnectorObject obj) {\n                 return found.add(obj);\n             }\n         },\n-                MappingManagerImpl.buildOperationOptions(MappingManagerImpl.getSyncMappingItems(provision).iterator()));\n+                MappingManagerImpl.buildOperationOptions(MappingManagerImpl.getPullMappingItems(provision).iterator()));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", provision.getObjectClass(), resource, name);\n@@ -172,7 +172,7 @@ private List<Long> findByConnObjectKeyItem(\n \n         String transfUid = uid;\n         for (MappingItemTransformer transformer : MappingManagerImpl.getMappingItemTransformers(connObjectKeyItem)) {\n-            List<Object> output = transformer.beforeSync(Collections.<Object>singletonList(transfUid));\n+            List<Object> output = transformer.beforePull(Collections.<Object>singletonList(transfUid));\n             if (output != null && !output.isEmpty()) {\n                 transfUid = output.get(0).toString();\n             }\n@@ -243,7 +243,7 @@ private List<Long> findByConnObjectKeyItem(\n     }\n \n     private List<Long> findByCorrelationRule(\n-            final ConnectorObject connObj, final SyncCorrelationRule rule, final AnyTypeKind type) {\n+            final ConnectorObject connObj, final PullCorrelationRule rule, final AnyTypeKind type) {\n \n         List<Long> result = new ArrayList<>();\n         for (Any<?> any : searchDAO.search(rule.getSearchCond(connObj), type)) {\n@@ -253,19 +253,19 @@ private List<Long> findByCorrelationRule(\n         return result;\n     }\n \n-    private SyncCorrelationRule getCorrelationRule(final Provision provision, final SyncPolicySpec policySpec) {\n-        SyncCorrelationRule result = null;\n+    private PullCorrelationRule getCorrelationRule(final Provision provision, final PullPolicySpec policySpec) {\n+        PullCorrelationRule result = null;\n \n-        String syncCorrelationRule = policySpec.getCorrelationRules().get(provision.getAnyType().getKey());\n-        if (StringUtils.isNotBlank(syncCorrelationRule)) {\n-            if (syncCorrelationRule.charAt(0) == '[') {\n-                result = new PlainAttrsSyncCorrelationRule(\n-                        POJOHelper.deserialize(syncCorrelationRule, String[].class), provision);\n+        String pullCorrelationRule = policySpec.getCorrelationRules().get(provision.getAnyType().getKey());\n+        if (StringUtils.isNotBlank(pullCorrelationRule)) {\n+            if (pullCorrelationRule.charAt(0) == '[') {\n+                result = new PlainAttrsPullCorrelationRule(\n+                        POJOHelper.deserialize(pullCorrelationRule, String[].class), provision);\n             } else {\n                 try {\n-                    result = (SyncCorrelationRule) Class.forName(syncCorrelationRule).newInstance();\n+                    result = (PullCorrelationRule) Class.forName(pullCorrelationRule).newInstance();\n                 } catch (Exception e) {\n-                    LOG.error(\"Failure instantiating correlation rule class '{}'\", syncCorrelationRule, e);\n+                    LOG.error(\"Failure instantiating correlation rule class '{}'\", pullCorrelationRule, e);\n                 }\n             }\n         }\n@@ -288,24 +288,24 @@ public List<Long> findExisting(\n             final Provision provision,\n             final AnyUtils anyUtils) {\n \n-        SyncPolicySpec syncPolicySpec = null;\n-        if (provision.getResource().getSyncPolicy() != null) {\n-            syncPolicySpec = provision.getResource().getSyncPolicy().getSpecification();\n+        PullPolicySpec pullPolicySpec = null;\n+        if (provision.getResource().getPullPolicy() != null) {\n+            pullPolicySpec = provision.getResource().getPullPolicy().getSpecification();\n         }\n \n-        SyncCorrelationRule syncRule = null;\n-        if (syncPolicySpec != null) {\n-            syncRule = getCorrelationRule(provision, syncPolicySpec);\n+        PullCorrelationRule pullRule = null;\n+        if (pullPolicySpec != null) {\n+            pullRule = getCorrelationRule(provision, pullPolicySpec);\n         }\n \n-        return syncRule == null\n+        return pullRule == null\n                 ? findByConnObjectKeyItem(uid, provision, anyUtils)\n-                : findByCorrelationRule(connObj, syncRule, anyUtils.getAnyTypeKind());\n+                : findByCorrelationRule(connObj, pullRule, anyUtils.getAnyTypeKind());\n     }\n \n     public Boolean readEnabled(final ConnectorObject connectorObject, final ProvisioningTask task) {\n         Boolean enabled = null;\n-        if (task.isSyncStatus()) {\n+        if (task.isPullStatus()) {\n             Attribute status = AttributeUtil.find(OperationalAttributes.ENABLE_NAME, connectorObject.getAttributes());\n             if (status != null && status.getValue() != null && !status.getValue().isEmpty()) {\n                 enabled = (Boolean) status.getValue().get(0);","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/SyncUtils.java"},{"sha":"563c64acbd503b200c2b9136240fbde5279040e7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.Collections;\n@@ -37,12 +37,12 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n-import org.apache.syncope.core.provisioning.api.syncpull.AnyObjectPushResultHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.GroupPushResultHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.syncpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncopePushResultHandler;\n-import org.apache.syncope.core.provisioning.api.syncpull.UserPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.GroupPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n@@ -120,9 +120,9 @@ protected String doExecuteProvisioning(\n             try {\n                 Class<?> actionsClass = Class.forName(className);\n \n-                PushActions syncActions = (PushActions) ApplicationContextProvider.getBeanFactory().\n+                PushActions pushActions = (PushActions) ApplicationContextProvider.getBeanFactory().\n                         createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-                actions.add(syncActions);\n+                actions.add(pushActions);\n             } catch (Exception e) {\n                 LOG.info(\"Class '{}' not found\", className, e);\n             }\n@@ -199,7 +199,7 @@ protected String doExecuteProvisioning(\n             }\n         }\n \n-        String result = createReport(profile.getResults(), pushTask.getResource().getSyncTraceLevel(), dryRun);\n+        String result = createReport(profile.getResults(), pushTask.getResource().getPullTraceLevel(), dryRun);\n         LOG.debug(\"Sync result: {}\", result);\n         return result;\n     }","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/PushJobDelegate.java"},{"sha":"ddc01fbd2c4e17dc38c3e671da3a951721cf7dca","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPullResultHandlerImpl.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.Collections;\n import java.util.List;\n@@ -32,11 +32,11 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n-import org.apache.syncope.core.provisioning.api.syncpull.UserSyncResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n \n-public class UserSyncResultHandlerImpl extends AbstractSyncResultHandler implements UserSyncResultHandler {\n+public class UserPullResultHandlerImpl extends AbstractPullResultHandler implements UserPullResultHandler {\n \n     @Override\n     protected AnyUtils getAnyUtils() {\n@@ -86,7 +86,7 @@ protected WorkflowResult<Long> update(final AnyPatch patch) {\n     protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final ProvisioningReport result) {\n         UserTO userTO = UserTO.class.cast(anyTO);\n \n-        Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n+        Boolean enabled = pullUtils.readEnabled(delta.getObject(), profile.getTask());\n         Map.Entry<Long, List<PropagationStatus>> created =\n                 userProvisioningManager.create(userTO, true, true, enabled,\n                         Collections.singleton(profile.getTask().getResource().getKey()), true);\n@@ -105,7 +105,7 @@ protected AnyTO doUpdate(\n             final ProvisioningReport result) {\n \n         UserPatch userPatch = UserPatch.class.cast(anyPatch);\n-        Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n+        Boolean enabled = pullUtils.readEnabled(delta.getObject(), profile.getTask());\n \n         Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.update(\n                 userPatch,\n@@ -123,7 +123,7 @@ protected void doDelete(final AnyTypeKind kind, final Long key) {\n             userProvisioningManager.delete(\n                     key, Collections.<String>singleton(profile.getTask().getResource().getKey()), true);\n         } catch (Exception e) {\n-            // A propagation failure doesn't imply a synchronization failure.\n+            // A propagation failure doesn't imply a pull failure.\n             // The propagation exception status will be reported into the propagation task execution.\n             LOG.error(\"Could not propagate user \" + key, e);\n         }","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/UserSyncResultHandlerImpl.java"},{"sha":"bc6384501dd0213e45a12e1eab29799453218b56","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPushResultHandlerImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPushResultHandlerImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.syncpull;\n+package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -31,7 +31,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.UserPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n \n public class UserPushResultHandlerImpl extends AbstractPushResultHandler implements UserPushResultHandler {\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/syncpull/UserPushResultHandlerImpl.java"},{"sha":"e5ae6502f37565adeed52d84cebe7b919cdd9a45","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -36,14 +36,14 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.utils.policy.InvalidPasswordRuleConf;\n import org.identityconnectors.common.Base64;\n@@ -120,17 +120,17 @@ public void access(final byte[] clearBytes) {\n      * Build a UserTO / GroupTO / AnyObjectTO out of connector object attributes and schema mapping.\n      *\n      * @param obj connector object\n-     * @param syncTask synchronization task\n+     * @param pullTask pull task\n      * @param provision provision information\n      * @param anyUtils utils\n      * @param <T> any object\n      * @return UserTO for the user to be created\n      */\n     @Transactional(readOnly = true)\n     public <T extends AnyTO> T getAnyTO(\n-            final ConnectorObject obj, final SyncTask syncTask, final Provision provision, final AnyUtils anyUtils) {\n+            final ConnectorObject obj, final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n \n-        T anyTO = getAnyTOFromConnObject(obj, syncTask, provision, anyUtils);\n+        T anyTO = getAnyTOFromConnObject(obj, pullTask, provision, anyUtils);\n \n         // (for users) if password was not set above, generate\n         if (anyTO instanceof UserTO && StringUtils.isBlank(((UserTO) anyTO).getPassword())) {\n@@ -174,7 +174,7 @@ public <T extends AnyTO> T getAnyTO(\n      * @param key any object to be updated\n      * @param obj connector object\n      * @param original any object to get diff from\n-     * @param syncTask synchronization task\n+     * @param pullTask pull task\n      * @param provision provision information\n      * @param anyUtils utils\n      * @param <T> any object\n@@ -183,9 +183,9 @@ public <T extends AnyTO> T getAnyTO(\n     @SuppressWarnings(\"unchecked\")\n     @Transactional(readOnly = true)\n     public <T extends AnyPatch> T getAnyPatch(final Long key, final ConnectorObject obj,\n-            final AnyTO original, final SyncTask syncTask, final Provision provision, final AnyUtils anyUtils) {\n+            final AnyTO original, final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n \n-        AnyTO updated = getAnyTOFromConnObject(obj, syncTask, provision, anyUtils);\n+        AnyTO updated = getAnyTOFromConnObject(obj, pullTask, provision, anyUtils);\n         updated.setKey(key);\n \n         if (null != anyUtils.getAnyTypeKind()) {\n@@ -215,19 +215,19 @@ public <T extends AnyPatch> T getAnyPatch(final Long key, final ConnectorObject\n     }\n \n     private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n-            final SyncTask syncTask, final Provision provision, final AnyUtils anyUtils) {\n+            final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n \n         T anyTO = anyUtils.newAnyTO();\n         anyTO.setType(provision.getAnyType().getKey());\n \n         // 1. fill with data from connector object\n-        anyTO.setRealm(syncTask.getDestinatioRealm().getFullPath());\n-        for (MappingItem item : MappingManagerImpl.getSyncMappingItems(provision)) {\n+        anyTO.setRealm(pullTask.getDestinatioRealm().getFullPath());\n+        for (MappingItem item : MappingManagerImpl.getPullMappingItems(provision)) {\n             mappingManager.setIntValues(item, obj.getAttributeByName(item.getExtAttrName()), anyTO, anyUtils);\n         }\n \n         // 2. add data from defined template (if any)\n-        templateUtils.apply(anyTO, syncTask.getTemplate(provision.getAnyType()));\n+        templateUtils.apply(anyTO, pullTask.getTemplate(provision.getAnyType()));\n \n         return anyTO;\n     }"},{"sha":"2e7be27cb94355728e402bbd4759fa8f8b6911cc","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n@@ -73,8 +73,8 @@ public void update(final AbstractPolicyTO policyTO) {\n                 logic.update((PasswordPolicyTO) policyTO);\n                 break;\n \n-            case SYNC:\n-                logic.update((SyncPolicyTO) policyTO);\n+            case PULL:\n+                logic.update((PullPolicyTO) policyTO);\n                 break;\n \n             default:"},{"sha":"b6a1cdfdff2af7ac9e3a8c0e5c134ce177fe4dbf","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -51,7 +51,7 @@ public class TaskServiceImpl extends AbstractServiceImpl implements TaskService\n     @Override\n     public Response create(final SchedTaskTO taskTO) {\n         SchedTaskTO createdTask;\n-        if (taskTO instanceof SyncTaskTO || taskTO instanceof PushTaskTO || taskTO instanceof SchedTaskTO) {\n+        if (taskTO instanceof PullTaskTO || taskTO instanceof PushTaskTO || taskTO instanceof SchedTaskTO) {\n             createdTask = logic.createSchedTask(taskTO);\n         } else {\n             throw new BadRequestException();"},{"sha":"0217f172203bdd691731dfbc9bfcc6a491de5cf7","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -70,14 +70,14 @@ public Pair<Long, List<PropagationStatus>> create(\n             final Set<String> excludedResources,\n             final boolean nullPriorityAsync) {\n \n-        PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupInSyncPort\");\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupInPullPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"groupOwnerMap\", groupOwnerMap);\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n \n-        sendMessage(\"direct:createGroupInSync\", groupTO, props);\n+        sendMessage(\"direct:createGroupInPull\", groupTO, props);\n \n         Exchange exchange = pollingConsumer.receive();\n "},{"sha":"9a9b1b029bacee1c2b22008e4d4604924237670f","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -326,7 +326,7 @@ public Pair<Long, List<PropagationStatus>> update(\n             final Set<String> excludedResources,\n             final boolean nullPriorityAsync) {\n \n-        PollingConsumer pollingConsumer = getConsumer(\"direct:updateInSyncPort\");\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:updateInPullPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"key\", userPatch.getKey());\n@@ -335,22 +335,22 @@ public Pair<Long, List<PropagationStatus>> update(\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n \n-        sendMessage(\"direct:updateUserInSync\", userPatch, props);\n+        sendMessage(\"direct:updateUserInPull\", userPatch, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n         Exception ex = (Exception) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n         if (ex != null) {\n-            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\",\n+            LOG.error(\"Update of user {} failed, trying to pull its status anyway (if configured)\",\n                     nullPriorityAsync, ex);\n \n             result.setStatus(ProvisioningReport.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + ex.getMessage());\n+            result.setMessage(\"Update failed, trying to pull status anyway (if configured)\\n\" + ex.getMessage());\n \n             WorkflowResult<Pair<UserPatch, Boolean>> updated = new WorkflowResult<Pair<UserPatch, Boolean>>(\n                     new ImmutablePair<>(userPatch, false), new PropagationByResource(),\n                     new HashSet<String>());\n-            sendMessage(\"direct:userInSync\", updated, props);\n+            sendMessage(\"direct:userInPull\", updated, props);\n             exchange = pollingConsumer.receive();\n         }\n "},{"sha":"791b4b3edac30426f07895e5277bd8afebd59b3d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateInPullProcessor.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -38,7 +38,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class GroupCreateInSyncProcessor implements Processor {\n+public class GroupCreateInPullProcessor implements Processor {\n \n     @Autowired\n     protected PropagationManager propagationManager;","previous_filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateInSyncProcessor.java"},{"sha":"2790c574cb3924fa9cb9fc91f37a193f7b87e088","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserSetStatusInPullProcessor.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserSetStatusInPullProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserSetStatusInPullProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserSetStatusInPullProcessor.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -30,7 +30,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class UserSetStatusInSyncProcessor implements Processor {\n+public class UserSetStatusInPullProcessor implements Processor {\n \n     @Autowired\n     protected UserDAO userDAO;","previous_filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserSetStatusInSyncProcessor.java"},{"sha":"f24db223c415ddedb4cd65893923955dade5a5de","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateInPullProcessor.java","status":"renamed","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -31,15 +31,11 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class UserUpdateInSyncProcessor implements Processor {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserUpdateInSyncProcessor.class);\n+public class UserUpdateInPullProcessor implements Processor {\n \n     @Autowired\n     protected PropagationManager propagationManager;","previous_filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateInSyncProcessor.java"},{"sha":"d7875dc0ed62b9f4eda5c83d028f9aebde17f5f5","filename":"ext/camel/provisioning-camel/src/main/resources/groupRoutes.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -38,21 +38,21 @@ under the License.\n     </doTry>\n   </route> \n                \n-  <route id=\"createGroupSync\">\n-    <from uri=\"direct:createGroupInSync\"/>\n+  <route id=\"createGroupPull\">\n+    <from uri=\"direct:createGroupInPull\"/>\n     <setProperty propertyName=\"any\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n       <bean ref=\"gwfAdapter\" method=\"create(${body})\"/>\n-      <process ref=\"groupCreateInSyncProcessor\"/>\n-      <to uri=\"direct:createGroupInSyncPort\"/>\n+      <process ref=\"groupCreateInPullProcessor\"/>\n+      <to uri=\"direct:createGroupInPullPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n         <handled>\n           <constant>false</constant>\n         </handled>\n-        <to uri=\"direct:createGroupInSyncPort\"/>\n+        <to uri=\"direct:createGroupInPullPort\"/>\n       </doCatch>\n     </doTry>\n   </route> "},{"sha":"e218b68ca858dda08288d9092a30dac7d870635d","filename":"ext/camel/provisioning-camel/src/main/resources/userRoutes.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -58,26 +58,26 @@ under the License.\n     </doTry>\n   </route>\n                 \n-  <route id=\"updateUserInSync\">\n-    <from uri=\"direct:updateUserInSync\"/>            \n+  <route id=\"updateUserInPull\">\n+    <from uri=\"direct:updateUserInPull\"/>            \n     <doTry>\n       <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-      <to uri=\"direct:userInSync\"/>\n+      <to uri=\"direct:userInPull\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n         <handled>\n           <constant>false</constant>\n         </handled>\n-        <to uri=\"direct:updateInSyncPort\"/>\n+        <to uri=\"direct:updateInPullPort\"/>\n       </doCatch>\n     </doTry>\n   </route>\n         \n-  <route id=\"userInSync\">\n-    <from uri=\"direct:userInSync\"/>\n-    <process ref=\"userSetStatusInSyncProcessor\"/>\n-    <process ref=\"userUpdateInSyncProcessor\"/>\n-    <to uri=\"direct:updateInSyncPort\"/>\n+  <route id=\"userInPull\">\n+    <from uri=\"direct:userInPull\"/>\n+    <process ref=\"userSetStatusInPullProcessor\"/>\n+    <process ref=\"userUpdateInPullProcessor\"/>\n+    <to uri=\"direct:updateInPullPort\"/>\n   </route>\n   \n   <route id=\"deleteUser\">"},{"sha":"982728beb8e2fca2ccd797c8b4df59ee1f1090af","filename":"fit/build-tools/src/main/resources/content.ldif","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,21 +29,21 @@ objectClass: groupOfUniqueNames\n objectClass: top\n cn: testLDAPGroup\n uniqueMember: uid=admin,ou=system\n-uniqueMember: uid=syncFromLDAP,ou=People,o=isp\n-owner: uid=syncFromLDAP,ou=People,o=isp\n+uniqueMember: uid=pullFromLDAP,ou=People,o=isp\n+owner: uid=pullFromLDAP,ou=People,o=isp\n \n-DN: uid=syncFromLDAP,ou=People,o=isp\n+DN: uid=pullFromLDAP,ou=People,o=isp\n objectClass: organizationalPerson\n objectClass: person\n objectClass: inetOrgPerson\n objectClass: top\n-cn: syncFromLDAP\n+cn: pullFromLDAP\n description: Active\n-mail: syncFromLDAP@syncope.apache.org\n+mail: pullFromLDAP@syncope.apache.org\n sn: Surname\n-uid: syncFromLDAP\n+uid: pullFromLDAP\n userpassword:: cGFzc3dvcmQxMjM=\n-givenname: syncFromLDAP\n+givenname: pullFromLDAP\n registeredAddress:  5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8\n jpegPhoto:: /9j/4AAQSkZJRgABAQEBKwErAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoH\n  BwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQk"},{"sha":"0bbab3ebce66c86a22dc48c87a65214243b47366","filename":"fit/build-tools/src/main/resources/testdb.sql","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -36,14 +36,14 @@ INSERT INTO test2 VALUES ('rossini', 'password321', 'true');\n INSERT INTO test2 VALUES ('verdi', 'password321', 'true');\n \n -- this table is for issueSYNCOPE230\n-DROP TABLE testsync IF EXISTS;\n-CREATE TABLE testsync (\n+DROP TABLE testpull IF EXISTS;\n+CREATE TABLE testpull (\n id NUMBER(10) PRIMARY KEY,\n username VARCHAR(80),\n surname VARCHAR(80),\n email VARCHAR(80));\n \n-INSERT INTO testsync VALUES (965, 'issuesyncope230', 'Surname', 'syncope230@syncope.apache.org');\n+INSERT INTO testpull VALUES (965, 'issuesyncope230', 'Surname', 'syncope230@syncope.apache.org');\n \n DROP TABLE testPRINTER IF EXISTS;\n CREATE TABLE testPRINTER ("},{"sha":"3d79fda19922bd3b64e487b97bf418e6bf830c66","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/PrefixMappingItemTransformer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -41,9 +41,9 @@ public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values)\n     }\n \n     @Override\n-    public List<Object> beforeSync(final List<Object> values) {\n+    public List<Object> beforePull(final List<Object> values) {\n         if (values == null || values.isEmpty() || values.get(0) == null) {\n-            return super.beforeSync(values);\n+            return super.beforePull(values);\n         } else {\n             List<Object> newValues = new ArrayList<>(values);\n             newValues.set(0, StringUtils.substringAfter(values.get(0).toString(), PREFIX));"},{"sha":"81624f1fcccc8cd5ae2f9880ea8149dcfeac6da2","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestPullActions.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -25,16 +25,16 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.PatchOperation;\n-import org.apache.syncope.core.provisioning.api.syncpull.IgnoreProvisionException;\n-import org.apache.syncope.core.provisioning.api.syncpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.java.syncpull.DefaultSyncActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.java.pushpull.DefaultPullActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n \n /**\n- * Test synchronization action.\n+ * Test pull action.\n  */\n-public class TestSyncActions extends DefaultSyncActions {\n+public class TestPullActions extends DefaultPullActions {\n \n     private int counter = 0;\n ","previous_filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSyncActions.java"},{"sha":"71d36a7a7df1887e71fe1a8237b956d2c8e3191e","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestPullRule.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullRule.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -20,13 +20,13 @@\n \n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n-import org.apache.syncope.core.provisioning.api.syncpull.SyncCorrelationRule;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n \n /**\n- * Test synchronization rule relying on <tt>email</tt> attribute value.\n+ * Test pull rule relying on <tt>email</tt> attribute value.\n  */\n-public class TestSyncRule implements SyncCorrelationRule {\n+public class TestPullRule implements PullCorrelationRule {\n \n     @Override\n     public SearchCond getSearchCond(final ConnectorObject connObj) {","previous_filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSyncRule.java"},{"sha":"05beee2fe01e045b268e1f86a240db7b51b14691","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestReconciliationFilterBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.fit.core.reference;\n \n-import org.apache.syncope.core.provisioning.java.syncpull.DefaultReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.java.pushpull.DefaultReconciliationFilterBuilder;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.filter.Filter;\n import org.identityconnectors.framework.common.objects.filter.FilterBuilder;"},{"sha":"f71d3b9b0fbc4bee957309b546c7b3beb9bc4c60","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -89,6 +89,8 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n+import static org.junit.Assert.assertNotNull;\n+\n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = { \"classpath:testJDBCContext.xml\" })\n public abstract class AbstractITCase {\n@@ -115,7 +117,7 @@ public abstract class AbstractITCase {\n \n     protected static final String RESOURCE_NAME_CSV = \"resource-csv\";\n \n-    protected static final String RESOURCE_NAME_DBSYNC = \"resource-db-sync\";\n+    protected static final String RESOURCE_NAME_DBPULL = \"resource-db-pull\";\n \n     protected static final String RESOURCE_NAME_DBVIRATTR = \"resource-db-virattr\";\n "},{"sha":"0a78dd3823248edb3f4e42f304735bc3521fb422","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -49,6 +49,10 @@\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n @FixMethodOrder(MethodSorters.JVM)\n public class CLIITCase extends AbstractITCase {\n "},{"sha":"28d43b95e1712a595b23b5b08533557509f6d161","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -258,7 +258,7 @@ public void printerResourceBulkAction() {\n     }\n \n     @Test\n-    public void executeSyncTask() {\n+    public void executePullTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n         wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:propagation\");"},{"sha":"f17f906cf3f2a349bf0f7b4fbe2440730f69f8cb","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -34,6 +34,8 @@\n import org.junit.Before;\n import org.junit.Test;\n \n+import static org.junit.Assert.assertNotNull;\n+\n public class LogsITCase extends AbstractConsoleITCase {\n \n     private final static String CONTAINER_PATH = \"body:content:tabbedPanel:panel:loggerContainer\";"},{"sha":"da1b6af1103d0ba61d02e81e2cab2f59e8970583","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -30,6 +30,8 @@\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n+import static org.junit.Assert.assertNotNull;\n+\n @FixMethodOrder(MethodSorters.JVM)\n public class ParametersITCase extends AbstractConsoleITCase {\n "},{"sha":"7c5e4979fb9700d651a2992c025a04c85c875ff0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,6 +29,8 @@\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n+import static org.junit.Assert.assertNull;\n+\n @FixMethodOrder(MethodSorters.JVM)\n public class RolesITCase extends AbstractConsoleITCase {\n "},{"sha":"62501be183d468d0cf0f06341e8d7e40240ae3f3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -31,6 +31,9 @@\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n @FixMethodOrder(MethodSorters.JVM)\n public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n "},{"sha":"c9f013b1ea47ad24e65723bbc5016ae55311f2e6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -48,7 +48,7 @@ public void showTopologyToggleMenu() {\n         wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:delete\", AjaxLink.class);\n         wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:edit\", AjaxLink.class);\n         wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:propagation\", AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:synchronization\",\n+        wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:pull\",\n                 AjaxLink.class);\n         wicketTester.assertComponent(\"body:toggle:togglePanelContainer:container:actions:push\", AjaxLink.class);\n         wicketTester.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n@@ -60,10 +60,10 @@ public void showTopologyToggleMenu() {\n     }\n \n     @Test\n-    public void executeSyncTask() {\n+    public void executePullTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n         wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:synchronization\");\n+        wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:pull\");\n         wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:10:cell:panelExecute:executeLink\");"},{"sha":"82ed255496230ad755c7ec1f83713f371478108b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -47,7 +47,7 @@\n \n public abstract class AbstractTaskITCase extends AbstractITCase {\n \n-    protected static final Long SYNC_TASK_ID = 4L;\n+    protected static final Long PULL_TASK_ID = 4L;\n \n     protected static final Long SCHED_TASK_ID = 5L;\n "},{"sha":"f04759300f5dc238fb781e81b3dfca8542b6b6a2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -174,7 +174,7 @@ public void listAuditEvents() {\n         for (EventCategoryTO eventCategoryTO : events) {\n             if (AnyTypeKind.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n                 if (RESOURCE_NAME_LDAP.equals(eventCategoryTO.getSubcategory())\n-                        && EventCategoryType.SYNCHRONIZATION == eventCategoryTO.getType()) {\n+                        && EventCategoryType.PULL == eventCategoryTO.getType()) {\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.CREATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.UPDATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.DELETE.name().toLowerCase()));\n@@ -210,7 +210,7 @@ public void listAuditEvents() {\n         found = false;\n         for (EventCategoryTO eventCategoryTO : events) {\n             if (EventCategoryType.TASK == eventCategoryTO.getType()\n-                    && \"SyncJobDelegate\".equals(eventCategoryTO.getCategory())) {\n+                    && \"PullJobDelegate\".equals(eventCategoryTO.getCategory())) {\n                 found = true;\n             }\n         }"},{"sha":"2a44c3d32d8ff159c5eb3984dcb7f62c622f017a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -40,7 +40,7 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -49,7 +49,7 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n@@ -133,7 +133,7 @@ public void createUser() {\n     }\n \n     @Test\n-    public void createResourceAndSync() {\n+    public void createResourceAndPull() {\n         // read connector\n         ConnInstanceTO conn = adminClient.getService(ConnectorService.class).read(100L, Locale.ENGLISH.getLanguage());\n         assertNotNull(conn);\n@@ -188,13 +188,13 @@ public void createResourceAndSync() {\n         resource = adminClient.getService(ResourceService.class).read(resource.getKey());\n         assertNotNull(resource);\n \n-        // create sync task\n-        SyncTaskTO task = new SyncTaskTO();\n-        task.setName(\"LDAP Sync Task\");\n+        // create pull task\n+        PullTaskTO task = new PullTaskTO();\n+        task.setName(\"LDAP Pull Task\");\n         task.setActive(true);\n         task.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n         task.setResource(resource.getKey());\n-        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n         task.setPerformCreate(true);\n \n         response = adminClient.getService(TaskService.class).create(task);\n@@ -203,7 +203,7 @@ public void createResourceAndSync() {\n                 Long.valueOf(StringUtils.substringAfterLast(response.getLocation().toASCIIString(), \"/\")), true);\n         assertNotNull(resource);\n \n-        // synchronize\n+        // pull\n         ExecTO execution = AbstractTaskITCase.execProvisioningTask(\n                 adminClient.getService(TaskService.class), task.getKey(), 50, false);\n \n@@ -212,10 +212,10 @@ public void createResourceAndSync() {\n         assertNotNull(status);\n         assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(status));\n \n-        // verify that synchronized user is found\n+        // verify that pulled user is found\n         PagedResult<UserTO> matchingUsers = adminClient.getService(UserService.class).search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"syncFromLDAP\").query()).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n                 build());\n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.getResult().size());"},{"sha":"10f0f56fe14bf7e9c62e1f925b1cdabb31e7a35c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -31,37 +31,37 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.policy.DefaultAccountRuleConf;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n+import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.apache.syncope.fit.core.reference.TestSyncRule;\n+import org.apache.syncope.fit.core.reference.TestPullRule;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class PolicyITCase extends AbstractITCase {\n \n-    private SyncPolicyTO buildSyncPolicyTO() {\n-        SyncPolicyTO policy = new SyncPolicyTO();\n+    private PullPolicyTO buildPullPolicyTO() {\n+        PullPolicyTO policy = new PullPolicyTO();\n \n-        SyncPolicySpec spec = new SyncPolicySpec();\n-        spec.getCorrelationRules().put(AnyTypeKind.USER.name(), TestSyncRule.class.getName());\n+        PullPolicySpec spec = new PullPolicySpec();\n+        spec.getCorrelationRules().put(AnyTypeKind.USER.name(), TestPullRule.class.getName());\n \n         policy.setSpecification(spec);\n-        policy.setDescription(\"Sync policy\");\n+        policy.setDescription(\"Pull policy\");\n \n         return policy;\n     }\n \n     @Test\n     public void listByType() {\n-        List<SyncPolicyTO> policyTOs = policyService.list(PolicyType.SYNC);\n+        List<PullPolicyTO> policyTOs = policyService.list(PolicyType.PULL);\n \n         assertNotNull(policyTOs);\n         assertFalse(policyTOs.isEmpty());\n@@ -86,17 +86,17 @@ public void getPasswordPolicy() {\n     }\n \n     @Test\n-    public void getSyncPolicy() {\n-        SyncPolicyTO policyTO = policyService.read(1L);\n+    public void getPullPolicy() {\n+        PullPolicyTO policyTO = policyService.read(1L);\n \n         assertNotNull(policyTO);\n         assertTrue(policyTO.getUsedByRealms().isEmpty());\n     }\n \n     @Test\n     public void createMissingDescription() {\n-        SyncPolicyTO policy = new SyncPolicyTO();\n-        policy.setSpecification(new SyncPolicySpec());\n+        PullPolicyTO policy = new PullPolicyTO();\n+        policy.setSpecification(new PullPolicySpec());\n \n         try {\n             createPolicy(policy);\n@@ -108,13 +108,13 @@ public void createMissingDescription() {\n \n     @Test\n     public void create() {\n-        SyncPolicyTO policy = buildSyncPolicyTO();\n+        PullPolicyTO policy = buildPullPolicyTO();\n \n-        SyncPolicyTO policyTO = createPolicy(policy);\n+        PullPolicyTO policyTO = createPolicy(policy);\n \n         assertNotNull(policyTO);\n-        assertEquals(PolicyType.SYNC, policyTO.getType());\n-        assertEquals(TestSyncRule.class.getName(),\n+        assertEquals(PolicyType.PULL, policyTO.getType());\n+        assertEquals(TestPullRule.class.getName(),\n                 policyTO.getSpecification().getCorrelationRules().get(AnyTypeKind.USER.name()));\n     }\n \n@@ -144,9 +144,9 @@ public void update() {\n \n     @Test\n     public void delete() {\n-        SyncPolicyTO policy = buildSyncPolicyTO();\n+        PullPolicyTO policy = buildPullPolicyTO();\n \n-        SyncPolicyTO policyTO = createPolicy(policy);\n+        PullPolicyTO policyTO = createPolicy(policy);\n         assertNotNull(policyTO);\n \n         policyService.delete(policyTO.getKey());\n@@ -161,7 +161,7 @@ public void delete() {\n \n     @Test\n     public void getCorrelationRules() {\n-        assertEquals(2, syncopeService.platform().getSyncCorrelationRules().size());\n+        assertEquals(2, syncopeService.platform().getPullCorrelationRules().size());\n     }\n \n     @Test"},{"sha":"dc3df1841e0635954857ac80dd07cee9eb32c300","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"renamed","additions":114,"deletions":115,"changes":229,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.fit.core;\n \n-import org.apache.syncope.fit.ActivitiDetector;\n-\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -52,10 +50,10 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -64,18 +62,19 @@\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n-import org.apache.syncope.common.lib.types.SyncMode;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.core.spring.security.Encryptor;\n-import org.apache.syncope.core.provisioning.java.syncpull.DBPasswordSyncActions;\n-import org.apache.syncope.core.provisioning.java.syncpull.LDAPPasswordSyncActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.LDAPPasswordPullActions;\n+import org.apache.syncope.fit.ActivitiDetector;\n import org.apache.syncope.fit.core.reference.PrefixMappingItemTransformer;\n import org.apache.syncope.fit.core.reference.TestReconciliationFilterBuilder;\n-import org.apache.syncope.fit.core.reference.TestSyncActions;\n-import org.apache.syncope.fit.core.reference.TestSyncRule;\n+import org.apache.syncope.fit.core.reference.TestPullActions;\n+import org.apache.syncope.fit.core.reference.TestPullRule;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.BeforeClass;\n import org.junit.FixMethodOrder;\n@@ -85,41 +84,41 @@\n import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n-public class SyncTaskITCase extends AbstractTaskITCase {\n+public class PullTaskITCase extends AbstractTaskITCase {\n \n     @BeforeClass\n-    public static void testSyncActionsSetup() {\n-        SyncTaskTO syncTask = taskService.read(SYNC_TASK_ID, true);\n-        syncTask.getActionsClassNames().add(TestSyncActions.class.getName());\n-        taskService.update(syncTask);\n+    public static void testPullctionsSetup() {\n+        PullTaskTO pullTask = taskService.read(PULL_TASK_ID, true);\n+        pullTask.getActionsClassNames().add(TestPullActions.class.getName());\n+        taskService.update(pullTask);\n     }\n \n     @Test\n-    public void getSyncActionsClasses() {\n-        Set<String> actions = syncopeService.platform().getSyncActions();\n+    public void getPullActionsClasses() {\n+        Set<String> actions = syncopeService.platform().getPullActions();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }\n \n     @Test\n     public void list() {\n-        PagedResult<SyncTaskTO> tasks = taskService.list(\n-                new TaskQuery.Builder().type(TaskType.SYNCHRONIZATION).build());\n+        PagedResult<PullTaskTO> tasks = taskService.list(\n+                new TaskQuery.Builder().type(TaskType.PULL).build());\n         assertFalse(tasks.getResult().isEmpty());\n         for (AbstractTaskTO task : tasks.getResult()) {\n-            if (!(task instanceof SyncTaskTO)) {\n+            if (!(task instanceof PullTaskTO)) {\n                 fail();\n             }\n         }\n     }\n \n     @Test\n     public void create() {\n-        SyncTaskTO task = new SyncTaskTO();\n-        task.setName(\"Test create Sync\");\n+        PullTaskTO task = new PullTaskTO();\n+        task.setName(\"Test create Pull\");\n         task.setDestinationRealm(\"/\");\n         task.setResource(RESOURCE_NAME_WS2);\n-        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n \n         UserTO userTemplate = new UserTO();\n         userTemplate.getResources().add(RESOURCE_NAME_WS2);\n@@ -132,7 +131,7 @@ public void create() {\n         task.getTemplates().put(AnyTypeKind.GROUP.name(), groupTemplate);\n \n         Response response = taskService.create(task);\n-        SyncTaskTO actual = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n+        PullTaskTO actual = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n         assertNotNull(actual);\n \n         task = taskService.read(actual.getKey(), true);\n@@ -144,11 +143,11 @@ public void create() {\n     }\n \n     @Test\n-    public void sync() throws Exception {\n+    public void pull() throws Exception {\n         removeTestUsers();\n \n         // -----------------------------\n-        // Create a new user ... it should be updated applying sync policy\n+        // Create a new user ... it should be updated applying pull policy\n         // -----------------------------\n         UserTO inUserTO = new UserTO();\n         inUserTO.setRealm(SyncopeConstants.ROOT_REALM);\n@@ -175,9 +174,9 @@ public void sync() throws Exception {\n                     page(1).size(1).build()).getTotalCount();\n             assertNotNull(usersPre);\n \n-            execProvisioningTask(taskService, SYNC_TASK_ID, 50, false);\n+            execProvisioningTask(taskService, PULL_TASK_ID, 50, false);\n \n-            // after execution of the sync task the user data should have been synced from CSV\n+            // after execution of the pull task the user data should have been pulled from CSV\n             // and processed by user template\n             UserTO userTO = userService.read(inUserTO.getKey());\n             assertNotNull(userTO);\n@@ -225,7 +224,7 @@ public boolean evaluate(final AttrTO attributeTO) {\n                 assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n             }\n \n-            // check for sync results\n+            // check for pull results\n             int usersPost = userService.list(\n                     new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                     page(1).size(1).build()).getTotalCount();\n@@ -234,7 +233,7 @@ public boolean evaluate(final AttrTO attributeTO) {\n \n             // Check for issue 215:\n             // * expected disabled user test1\n-            // * expected enabled user test2\n+            // * expected enabled user test3\n             userTO = readUser(\"test1\");\n             assertNotNull(userTO);\n             assertEquals(\"suspended\", userTO.getStatus());\n@@ -243,10 +242,10 @@ public boolean evaluate(final AttrTO attributeTO) {\n             assertNotNull(userTO);\n             assertEquals(\"active\", userTO.getStatus());\n \n-            Set<Long> otherSyncTaskKeys = new HashSet<>();\n-            otherSyncTaskKeys.add(25L);\n-            otherSyncTaskKeys.add(26L);\n-            execProvisioningTasks(taskService, otherSyncTaskKeys, 50, false);\n+            Set<Long> otherPullTaskKeys = new HashSet<>();\n+            otherPullTaskKeys.add(25L);\n+            otherPullTaskKeys.add(26L);\n+            execProvisioningTasks(taskService, otherPullTaskKeys, 50, false);\n \n             // Matching --> UNLINK\n             assertFalse(readUser(\"test9\").getResources().contains(RESOURCE_NAME_CSV));\n@@ -258,7 +257,7 @@ public boolean evaluate(final AttrTO attributeTO) {\n \n     @Test\n     public void dryRun() {\n-        ExecTO execution = execProvisioningTask(taskService, SYNC_TASK_ID, 50, true);\n+        ExecTO execution = execProvisioningTask(taskService, PULL_TASK_ID, 50, true);\n         assertEquals(\n                 \"Execution of \" + execution.getRefDesc() + \" failed with message \" + execution.getMessage(),\n                 \"SUCCESS\", execution.getStatus());\n@@ -281,7 +280,7 @@ public void reconcileFromDB() {\n             // enable user on external resource\n             jdbcTemplate.execute(\"UPDATE TEST SET status=TRUE WHERE id='testuser1'\");\n \n-            // re-execute the same SyncTask: now user must be active\n+            // re-execute the same PullTask: now user must be active\n             execution = execProvisioningTask(taskService, 7L, 50, false);\n             assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n@@ -317,7 +316,7 @@ private void ldapCleanup() {\n         }\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"syncFromLDAP\").query()).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n                 build());\n         if (matchingUsers.getSize() > 0) {\n             for (UserTO user : matchingUsers.getResult()) {\n@@ -336,30 +335,30 @@ public void reconcileFromLDAP() {\n         // First of all, clear any potential conflict with existing user / group\n         ldapCleanup();\n \n-        // 0. synchronize\n+        // 0. pull\n         ExecTO execution = execProvisioningTask(taskService, 11L, 50, false);\n \n         // 1. verify execution status\n         assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-        // 2. verify that synchronized group is found\n+        // 2. verify that pulled group is found\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(\"testLDAPGroup\").query()).\n                 build());\n         assertNotNull(matchingGroups);\n         assertEquals(1, matchingGroups.getResult().size());\n \n-        // 3. verify that synchronized user is found\n+        // 3. verify that pulled user is found\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"syncFromLDAP\").query()).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n                 build());\n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.getResult().size());\n \n         // Check for SYNCOPE-436\n-        assertEquals(\"syncFromLDAP\",\n+        assertEquals(\"pullFromLDAP\",\n                 matchingUsers.getResult().get(0).getVirAttrMap().get(\"virtualReadOnly\").getValues().get(0));\n         // Check for SYNCOPE-270\n         assertNotNull(matchingUsers.getResult().get(0).getPlainAttrMap().get(\"obscure\"));\n@@ -403,7 +402,7 @@ public boolean evaluate(final MappingItemTO object) {\n             resourceService.update(resource);\n \n             // 1. create printer on external resource\n-            AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"sync\");\n+            AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"pull\");\n             String originalLocation = anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0);\n             assertFalse(originalLocation.startsWith(PrefixMappingItemTransformer.PREFIX));\n \n@@ -423,7 +422,7 @@ public boolean evaluate(final MappingItemTO object) {\n             PagedResult<AnyObjectTO> matchingPrinters = anyObjectService.search(\n                     new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                     fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").\n-                            is(\"location\").equalTo(\"sync*\").query()).build());\n+                            is(\"location\").equalTo(\"pull*\").query()).build());\n             assertTrue(matchingPrinters.getSize() > 0);\n             for (AnyObjectTO printer : matchingPrinters.getResult()) {\n                 DeassociationPatch deassociationPatch = new DeassociationPatch();\n@@ -434,15 +433,15 @@ public boolean evaluate(final MappingItemTO object) {\n                 anyObjectService.delete(printer.getKey());\n             }\n \n-            // 4. synchronize\n+            // 4. pull\n             execProvisioningTask(taskService, 28L, 50, false);\n \n             // 5. verify that printer was re-created in Syncope (implies that location does not start with given prefix,\n-            // hence PrefixMappingItemTransformer was applied during sync)\n+            // hence PrefixMappingItemTransformer was applied during pull)\n             matchingPrinters = anyObjectService.search(\n                     new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                     fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").\n-                            is(\"location\").equalTo(\"sync*\").query()).build());\n+                            is(\"location\").equalTo(\"pull*\").query()).build());\n             assertTrue(matchingPrinters.getSize() > 0);\n \n             // 6. verify that synctoken was updated\n@@ -456,19 +455,19 @@ public boolean evaluate(final MappingItemTO object) {\n     @Test\n     public void filteredReconciliation() {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        SyncTaskTO task = null;\n+        PullTaskTO task = null;\n         UserTO userTO = null;\n         try {\n-            // 1. create 2 users on testsync\n-            jdbcTemplate.execute(\"INSERT INTO testsync VALUES (1001, 'user1', 'Doe', 'mail1@apache.org')\");\n-            jdbcTemplate.execute(\"INSERT INTO testsync VALUES (1002, 'user2', 'Rossi', 'mail2@apache.org')\");\n+            // 1. create 2 users on testpull\n+            jdbcTemplate.execute(\"INSERT INTO testpull VALUES (1001, 'user1', 'Doe', 'mail1@apache.org')\");\n+            jdbcTemplate.execute(\"INSERT INTO testpull VALUES (1002, 'user2', 'Rossi', 'mail2@apache.org')\");\n \n-            // 2. create new sync task for test-db, with reconciliation filter (surname 'Rossi') \n+            // 2. create new pull task for test-db, with reconciliation filter (surname 'Rossi') \n             task = taskService.read(10L, true);\n-            task.setSyncMode(SyncMode.FILTERED_RECONCILIATION);\n+            task.setPullMode(PullMode.FILTERED_RECONCILIATION);\n             task.setReconciliationFilterBuilderClassName(TestReconciliationFilterBuilder.class.getName());\n             Response response = taskService.create(task);\n-            task = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n+            task = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n             assertNotNull(task);\n             assertEquals(\n                     TestReconciliationFilterBuilder.class.getName(),\n@@ -479,7 +478,7 @@ public void filteredReconciliation() {\n             assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-            // 4. verify that only enabled user was synchronized\n+            // 4. verify that only enabled user was pulled\n             userTO = readUser(\"user2\");\n             assertNotNull(userTO);\n \n@@ -490,8 +489,8 @@ public void filteredReconciliation() {\n                 assertEquals(ClientExceptionType.NotFound, e.getType());\n             }\n         } finally {\n-            jdbcTemplate.execute(\"DELETE FROM testsync WHERE id = 1001\");\n-            jdbcTemplate.execute(\"DELETE FROM testsync WHERE id = 1002\");\n+            jdbcTemplate.execute(\"DELETE FROM testpull WHERE id = 1001\");\n+            jdbcTemplate.execute(\"DELETE FROM testpull WHERE id = 1002\");\n             if (task != null && task.getKey() != 7L) {\n                 taskService.delete(task.getKey());\n             }\n@@ -504,7 +503,7 @@ public void filteredReconciliation() {\n     @Test\n     public void issueSYNCOPE68() {\n         //-----------------------------\n-        // Create a new user ... it should be updated applying sync policy\n+        // Create a new user ... it should be updated applying pull policy\n         //-----------------------------\n         UserTO userTO = new UserTO();\n         userTO.setRealm(SyncopeConstants.ROOT_REALM);\n@@ -541,14 +540,14 @@ public void issueSYNCOPE68() {\n             template.getResources().add(RESOURCE_NAME_NOPROPAGATION4);\n             //-----------------------------\n \n-            // Update sync task\n-            SyncTaskTO task = taskService.read(9L, true);\n+            // Update pull task\n+            PullTaskTO task = taskService.read(9L, true);\n             assertNotNull(task);\n \n             task.getTemplates().put(AnyTypeKind.USER.name(), template);\n \n             taskService.update(task);\n-            SyncTaskTO actual = taskService.read(task.getKey(), true);\n+            PullTaskTO actual = taskService.read(task.getKey(), true);\n             assertNotNull(actual);\n             assertEquals(task.getKey(), actual.getKey());\n             assertFalse(actual.getTemplates().get(AnyTypeKind.USER.name()).getResources().isEmpty());\n@@ -570,20 +569,20 @@ public void issueSYNCOPE68() {\n \n     @Test\n     public void issueSYNCOPE230() {\n-        // 1. read SyncTask for resource-db-sync (table TESTSYNC on external H2)\n+        // 1. read PullTask for resource-db-pull (table TESTPULL on external H2)\n         execProvisioningTask(taskService, 10L, 50, false);\n \n-        // 3. read e-mail address for user created by the SyncTask first execution\n+        // 3. read e-mail address for user created by the PullTask first execution\n         UserTO userTO = readUser(\"issuesyncope230\");\n         assertNotNull(userTO);\n         String email = userTO.getPlainAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n \n-        // 4. update TESTSYNC on external H2 by changing e-mail address\n+        // 4. update TESTPULL on external H2 by changing e-mail address\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        jdbcTemplate.execute(\"UPDATE TESTSYNC SET email='updatedSYNCOPE230@syncope.apache.org'\");\n+        jdbcTemplate.execute(\"UPDATE TESTPULL SET email='updatedSYNCOPE230@syncope.apache.org'\");\n \n-        // 5. re-execute the SyncTask\n+        // 5. re-execute the PullTask\n         execProvisioningTask(taskService, 10L, 50, false);\n \n         // 6. verify that the e-mail was updated\n@@ -599,23 +598,23 @@ public void issueSYNCOPE258() {\n         // -----------------------------\n         // Add a custom correlation rule\n         // -----------------------------\n-        SyncPolicyTO policyTO = policyService.read(9L);\n-        policyTO.getSpecification().getCorrelationRules().put(AnyTypeKind.USER.name(), TestSyncRule.class.getName());\n+        PullPolicyTO policyTO = policyService.read(9L);\n+        policyTO.getSpecification().getCorrelationRules().put(AnyTypeKind.USER.name(), TestPullRule.class.getName());\n         policyService.update(policyTO);\n         // -----------------------------\n \n-        SyncTaskTO task = new SyncTaskTO();\n+        PullTaskTO task = new PullTaskTO();\n         task.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n-        task.setName(\"Test Sync Rule\");\n+        task.setName(\"Test Pull Rule\");\n         task.setActive(true);\n         task.setResource(RESOURCE_NAME_WS2);\n-        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n         task.setPerformCreate(true);\n         task.setPerformDelete(true);\n         task.setPerformUpdate(true);\n \n         Response response = taskService.create(task);\n-        task = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n+        task = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n \n         UserTO userTO = UserITCase.getUniqueSampleTO(\"s258_1@apache.org\");\n         userTO.getResources().clear();\n@@ -638,7 +637,7 @@ public void issueSYNCOPE258() {\n \n         execProvisioningTask(taskService, task.getKey(), 50, false);\n \n-        SyncTaskTO executed = taskService.read(task.getKey(), true);\n+        PullTaskTO executed = taskService.read(task.getKey(), true);\n         assertEquals(1, executed.getExecutions().size());\n \n         // asser for just one match\n@@ -695,8 +694,8 @@ public void issueSYNCOPE307() {\n         userTO = userService.read(userTO.getKey());\n         assertTrue(userTO.getVirAttrMap().isEmpty());\n \n-        // Update sync task\n-        SyncTaskTO task = taskService.read(12L, true);\n+        // Update pull task\n+        PullTaskTO task = taskService.read(12L, true);\n         assertNotNull(task);\n \n         UserTO template = new UserTO();\n@@ -720,7 +719,7 @@ public void issueSYNCOPE307() {\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n             String value = jdbcTemplate.queryForObject(\n-                    \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getKey());\n+                    \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n             assertEquals(\"virtualvalue\", value);\n         } catch (EmptyResultDataAccessException e) {\n             fail();\n@@ -748,35 +747,35 @@ public void issueSYNCOPE313DB() throws Exception {\n         String newPassword = Encryptor.getInstance().encode(newCleanPassword, CipherAlgorithm.SHA1);\n         jdbcTemplate.execute(\"UPDATE test set PASSWORD='\" + newPassword + \"' where ID='\" + user.getUsername() + \"'\");\n \n-        // 4. Sync the user from the resource\n-        SyncTaskTO syncTask = new SyncTaskTO();\n-        syncTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n-        syncTask.setName(\"DB Sync Task\");\n-        syncTask.setActive(true);\n-        syncTask.setPerformCreate(true);\n-        syncTask.setPerformUpdate(true);\n-        syncTask.setSyncMode(SyncMode.FULL_RECONCILIATION);\n-        syncTask.setResource(RESOURCE_NAME_TESTDB);\n-        syncTask.getActionsClassNames().add(DBPasswordSyncActions.class.getName());\n-        Response taskResponse = taskService.create(syncTask);\n-\n-        SyncTaskTO actual = getObject(taskResponse.getLocation(), TaskService.class, SyncTaskTO.class);\n+        // 4. Pull the user from the resource\n+        PullTaskTO pullTask = new PullTaskTO();\n+        pullTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n+        pullTask.setName(\"DB Pull Task\");\n+        pullTask.setActive(true);\n+        pullTask.setPerformCreate(true);\n+        pullTask.setPerformUpdate(true);\n+        pullTask.setPullMode(PullMode.FULL_RECONCILIATION);\n+        pullTask.setResource(RESOURCE_NAME_TESTDB);\n+        pullTask.getActionsClassNames().add(DBPasswordPullActions.class.getName());\n+        Response taskResponse = taskService.create(pullTask);\n+\n+        PullTaskTO actual = getObject(taskResponse.getLocation(), TaskService.class, PullTaskTO.class);\n         assertNotNull(actual);\n \n-        syncTask = taskService.read(actual.getKey(), true);\n-        assertNotNull(syncTask);\n-        assertEquals(actual.getKey(), syncTask.getKey());\n-        assertEquals(actual.getJobDelegateClassName(), syncTask.getJobDelegateClassName());\n+        pullTask = taskService.read(actual.getKey(), true);\n+        assertNotNull(pullTask);\n+        assertEquals(actual.getKey(), pullTask.getKey());\n+        assertEquals(actual.getJobDelegateClassName(), pullTask.getJobDelegateClassName());\n \n-        ExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n+        ExecTO execution = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n         assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-        // 5. Test the sync'd user\n+        // 5. Test the pulled user\n         Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(user.getUsername(), newCleanPassword).self();\n         assertNotNull(self);\n \n-        // 6. Delete SyncTask + user\n-        taskService.delete(syncTask.getKey());\n+        // 6. Delete PullTask + user\n+        taskService.delete(pullTask.getKey());\n         deleteUser(user.getKey());\n     }\n \n@@ -822,30 +821,30 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         property.getValues().add(Boolean.TRUE);\n         connectorService.update(resourceConnector);\n \n-        // 6. Sync the user from the resource\n-        SyncTaskTO syncTask = new SyncTaskTO();\n-        syncTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n-        syncTask.setName(\"LDAP Sync Task\");\n-        syncTask.setActive(true);\n-        syncTask.setPerformCreate(true);\n-        syncTask.setPerformUpdate(true);\n-        syncTask.setSyncMode(SyncMode.FULL_RECONCILIATION);\n-        syncTask.setResource(RESOURCE_NAME_LDAP);\n-        syncTask.getActionsClassNames().add(LDAPPasswordSyncActions.class.getName());\n-        Response taskResponse = taskService.create(syncTask);\n-\n-        syncTask = getObject(taskResponse.getLocation(), TaskService.class, SyncTaskTO.class);\n-        assertNotNull(syncTask);\n-\n-        ExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n+        // 6. Pull the user from the resource\n+        PullTaskTO pullTask = new PullTaskTO();\n+        pullTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n+        pullTask.setName(\"LDAP Pull Task\");\n+        pullTask.setActive(true);\n+        pullTask.setPerformCreate(true);\n+        pullTask.setPerformUpdate(true);\n+        pullTask.setPullMode(PullMode.FULL_RECONCILIATION);\n+        pullTask.setResource(RESOURCE_NAME_LDAP);\n+        pullTask.getActionsClassNames().add(LDAPPasswordPullActions.class.getName());\n+        Response taskResponse = taskService.create(pullTask);\n+\n+        pullTask = getObject(taskResponse.getLocation(), TaskService.class, PullTaskTO.class);\n+        assertNotNull(pullTask);\n+\n+        ExecTO execution = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n         assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-        // 7. Test the sync'd user\n+        // 7. Test the pulled user\n         self = clientFactory.create(user.getUsername(), oldCleanPassword).self();\n         assertNotNull(self);\n \n-        // 8. Delete SyncTask + user + reset the connector\n-        taskService.delete(syncTask.getKey());\n+        // 8. Delete PullTask + user + reset the connector\n+        taskService.delete(pullTask.getKey());\n         property.getValues().clear();\n         property.getValues().add(Boolean.FALSE);\n         connectorService.update(resourceConnector);","previous_filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SyncTaskITCase.java"},{"sha":"56d8ec306f1b9a8d9d31fbf57935d215bc48a893","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportTemplateITCase.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -39,12 +39,6 @@\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n-\n @FixMethodOrder(MethodSorters.JVM)\n public class ReportTemplateITCase extends AbstractITCase {\n "},{"sha":"b3010ff46121485072b8b48f355cfd0f068405f7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -214,7 +214,7 @@ public void createWithSingleMappingItem() {\n         item.setIntMappingType(IntMappingType.GroupKey);\n         item.setExtAttrName(\"groupId\");\n         item.setConnObjectKey(true);\n-        item.setPurpose(MappingPurpose.SYNCHRONIZATION);\n+        item.setPurpose(MappingPurpose.PULL);\n         mapping.setConnObjectKeyItem(item);\n \n         Response response = resourceService.create(resourceTO);\n@@ -225,7 +225,7 @@ public void createWithSingleMappingItem() {\n         assertNotNull(actual.getProvision(AnyTypeKind.USER.name()).getMapping().getItems());\n         assertNotNull(actual.getProvision(AnyTypeKind.GROUP.name()).getMapping());\n         assertNotNull(actual.getProvision(AnyTypeKind.GROUP.name()).getMapping().getItems());\n-        assertEquals(MappingPurpose.SYNCHRONIZATION,\n+        assertEquals(MappingPurpose.PULL,\n                 actual.getProvision(AnyTypeKind.GROUP.name()).getMapping().getConnObjectKeyItem().getPurpose());\n         assertEquals(MappingPurpose.PROPAGATION,\n                 actual.getProvision(AnyTypeKind.USER.name()).getMapping().getConnObjectKeyItem().getPurpose());"},{"sha":"1b0825d2257edb168ff8d45aafab731d1f2106a6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SchedTaskITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -37,7 +37,7 @@\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -66,7 +66,7 @@ public void list() {\n                 taskService.list(new TaskQuery.Builder().type(TaskType.SCHEDULED).build());\n         assertFalse(tasks.getResult().isEmpty());\n         for (AbstractTaskTO task : tasks.getResult()) {\n-            if (!(task instanceof SchedTaskTO) || task instanceof SyncTaskTO || task instanceof PushTaskTO) {\n+            if (!(task instanceof SchedTaskTO) || task instanceof PullTaskTO || task instanceof PushTaskTO) {\n                 fail();\n             }\n         }"},{"sha":"0e6a991f4170a9159f8466b07c2ad21d8bb7a6bd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -24,7 +24,6 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collection;\n-import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n@@ -223,7 +222,7 @@ public void paginatedSearch() {\n                 build());\n         assertNotNull(matchingUsers);\n         assertEquals(2, matchingUsers.getPage());\n-        assertEquals(2, matchingUsers.getResult().size());\n+        assertFalse(matchingUsers.getResult().isEmpty());\n     }\n \n     @Test\n@@ -414,18 +413,23 @@ public void orderBy() {\n \n     @Test\n     public void issueSYNCOPE768() {\n-        final List<UserTO> usersWithType = userService.search(\n+        int usersWithNullable = userService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"ctype\").notNullValue().query()).build()).\n-                getResult();\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"ctype\").nullValue().query()).build()).\n+                getTotalCount();\n+        assertTrue(usersWithNullable > 0);\n \n-        assertFalse(usersWithType.isEmpty());\n+        int nonOrdered = userService.search(\n+                new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").notNullValue().query()).build()).\n+                getTotalCount();\n+        assertTrue(nonOrdered > 0);\n \n-        final PagedResult<UserTO> matchedUsers = userService.search(\n+        int orderedByNullable = userService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").notNullValue().query()).\n-                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"ctype\").build()).build());\n-\n-        assertTrue(matchedUsers.getResult().size() > usersWithType.size());\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"ctype\").build()).build()).\n+                getTotalCount();\n+        assertEquals(nonOrdered, orderedByNullable);\n     }\n }"},{"sha":"60bb75bfcdde63babf296c7a2def32c694905678","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -230,13 +230,13 @@ public void virAttrCache() {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n         String value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getKey());\n+                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache\", value);\n \n-        jdbcTemplate.update(\"UPDATE testsync set USERNAME='virattrcache2' WHERE ID=?\", actual.getKey());\n+        jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", actual.getKey());\n \n         value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, actual.getKey());\n+                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache2\", value);\n \n         // 4. check for cached attribute value\n@@ -393,13 +393,13 @@ public void issueSYNCOPE442() {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n         String value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getKey());\n+                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache\", value);\n \n-        jdbcTemplate.update(\"UPDATE testsync set USERNAME='virattrcache2' WHERE ID=?\", userTO.getKey());\n+        jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", userTO.getKey());\n \n         value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getKey());\n+                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache2\", value);\n         // ----------------------------------------\n \n@@ -557,7 +557,7 @@ public void issueSYNCOPE453() {\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n             Map<String, Object> actuals = jdbcTemplate.queryForMap(\n-                    \"SELECT id, surname, email FROM testsync WHERE id=?\",\n+                    \"SELECT id, surname, email FROM testpull WHERE id=?\",\n                     new Object[] { Integer.parseInt(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0)) });\n \n             assertEquals(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());"},{"sha":"2e63820b4c7fe10e02d02e5d00a1b94141a00276","filename":"src/main/asciidoc/concepts/concepts.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fconcepts.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fconcepts.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fconcepts%2Fconcepts.adoc?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -42,7 +42,7 @@ include::provisioning/provisioning.adoc[]\n \n ==== Push\n \n-==== Synchronization\n+==== Pull\n \n === Workflow and Approval\n \n@@ -52,4 +52,4 @@ include::provisioning/provisioning.adoc[]\n \n === Audit\n \n-=== Delegated Administration\n\\ No newline at end of file\n+=== Delegated Administration"},{"sha":"8a623e1ae899b0ecb6a58dd3abb03722f0fe5ddf","filename":"src/main/asciidoc/concepts/provisioning/provisioning.adoc","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -22,8 +22,8 @@ User and role provisioning refers to the creation, maintenance, activation and d\n and their attributes. Provisioning operations can act on Apache Syncope only or be propagated towards external \n resources as well.\n The provisioning operation can be initiated by an authorized user (for instance, working on Apache Syncope \n-administration console) or by an internal task like a synchronization task.\n-A synchronization task can be used to perform a bulk provisioning operation involving either Syncope and one \n+administration console) or by an internal task like a pull task.\n+A push task can be used to perform a bulk provisioning operation involving either Syncope and one \n or more external resources.\n \n include::connectors.adoc[]\n@@ -34,4 +34,4 @@ include::propagation.adoc[]\n \n include::push.adoc[]\n \n-include::sync.adoc[]\n\\ No newline at end of file\n+include::pull.adoc[]\n\\ No newline at end of file"},{"sha":"bf2157ad471b8831c0f269b3d5edf59ccf8711fb","filename":"src/main/asciidoc/concepts/provisioning/pull.adoc","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fpull.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fpull.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fpull.adoc?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -16,15 +16,15 @@\n // specific language governing permissions and limitations\n // under the License.\n //\n-==== Synchronization\n-Basically, the synchronization is the mechanism used by Apache Syncope to acquire user/group data from external resources.\n-Synchronization can be \"full\" (full reconciliation) or \"incremental\".\n-In the former case, each sync task execution will take over just of changes from the previous execution \n-(if exists and connector permits incremental sync).\n-In the latter case, each sync task execution will take over of the entire set of data managed by the external resource.\n+==== Pull\n+Basically, pull is the mechanism used by Apache Syncope to acquire user, group and any objects data from external resources.\n+Pull can be \"full\" (full reconciliation) or \"incremental\".\n+In the former case, each pull task execution will take over just of changes from the previous execution \n+(if exists and connector permits incremental pull).\n+In the latter case, each pull task execution will take over of the entire set of data managed by the external resource.\n \n ===== From an external resource to Syncope\n-All the entity (user/group) data involved by a synchronization are retrieved from an external resource and processed \n+All the entity (user/group) data involved by a pull are retrieved from an external resource and processed \n internally by Syncope itself.\n A retrieved entity can be:\n ","previous_filename":"src/main/asciidoc/concepts/provisioning/sync.adoc"},{"sha":"03c78af8299c8d833dd21b7da985d1f5db2f6297","filename":"src/main/asciidoc/concepts/provisioning/resources.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fconcepts%2Fprovisioning%2Fresources.adoc?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -32,7 +32,7 @@ to that resource.\n Users and roles can be assigned to an external resource by defining a direct or indirect link between objects.\n By the way, Apache Syncope empowers the possibility to control the existence of users/roles on external resources \n giving the possibility to manage remote provisioning directly.\n-In fact, an authorized user (or an internal task - a sync task, for instance) can ask for \n+In fact, an authorized user (or an internal task - a pull task, for instance) can ask for \n \n * *link / unlink* users/roles to/from specific resources (soft link), \n * *assign / unassign* users/roles to/from specific resources (hard link),\n@@ -48,4 +48,4 @@ of reclaims.\n Assign/Unassign::\n Apache Syncope gives the possibility to create and remove a sort of hard linking between users/roles and resources.\n This kind of link implies propagation at link creation/deletion time: it is the composition between link/unlink and \n-provision/de-provision operations.\n\\ No newline at end of file\n+provision/de-provision operations."},{"sha":"9889956b0ca66898eee8028bfef693f24847cf7d","filename":"src/main/asciidoc/workingwithapachesyncope/cli/task.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61a7fdd38e412a30eeb24161400c669a2c3f3228/src%2Fmain%2Fasciidoc%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fworkingwithapachesyncope%2Fcli%2Ftask.adoc?ref=61a7fdd38e412a30eeb24161400c669a2c3f3228","patch":"@@ -29,7 +29,7 @@ Usage: task [options]\n     --details\n     --list\n        Syntax: --list {TASK-TYPE} \n-          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\n+          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / PULL\n     --list-running-jobs\n     --list-scheduled-jobs\n     --read "}]}