{"sha":"9e9bda9f03f2867c47ab68816d52c3fef7e325bc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllOWJkYTlmMDNmMjg2N2M0N2FiNjg4MTZkNTJjM2ZlZjdlMzI1YmM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-05T10:51:39Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-05T10:51:39Z"},"message":"[SYNCOPE-745] provides integration tests for report and provisions - still missing report download feature","tree":{"sha":"a92dab320961b6cc8d79e38ff8d17bfe5cdfcbe7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a92dab320961b6cc8d79e38ff8d17bfe5cdfcbe7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9e9bda9f03f2867c47ab68816d52c3fef7e325bc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e9bda9f03f2867c47ab68816d52c3fef7e325bc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e9bda9f03f2867c47ab68816d52c3fef7e325bc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"5472a323db374e96d1949c5c5ea86431faee7af9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5472a323db374e96d1949c5c5ea86431faee7af9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5472a323db374e96d1949c5c5ea86431faee7af9"}],"stats":{"total":672,"additions":659,"deletions":13},"files":[{"sha":"e5fa626c772b92093da812d1202e65458c1023a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -24,6 +24,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -123,7 +124,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n         addInnerObject(groupSelector.setOutputMarkupId(true)\n                 .setOutputMarkupPlaceholderTag(true)\n-                .setVisible(this.check.getObject() == CheckAvailability.AVAILABLE));\n+                .setVisible(this.check.getObject() == CheckAvailability.AVAILABLE)\n+                .setEnabled(this.check.getObject() == CheckAvailability.AVAILABLE));\n \n         final List<String> toBeIncluded;\n         if (includes == null || includes.isEmpty()) {\n@@ -220,7 +222,7 @@ public void setCheckAvailability(final CheckAvailability check) {\n \n         private static final long serialVersionUID = -3643771352897992172L;\n \n-        private IModel<? extends Collection<T>> model = new Model<>();\n+        private IModel<? extends Collection<T>> model = Model.of(Collections.<T>emptyList());\n \n         private final List<String> includes = new ArrayList<>();\n "},{"sha":"0e5f631c22244c59f27aa5ef7ea7f7bbb4103404","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ExportTogglePanel.java","status":"added","additions":113,"deletions":0,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.reports;\n+\n+import java.io.Serializable;\n+import java.util.Arrays;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.form.AbstractAjaxDownloadBehavior;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.resource.IResourceStream;\n+\n+public class ExportTogglePanel extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -3195479265440591519L;\n+\n+    private String execution;\n+\n+    private IModel<ReportExecExportFormat> model = Model.of(ReportExecExportFormat.CSV);\n+\n+    public ExportTogglePanel(final String id) {\n+        super(id);\n+\n+        final AjaxDropDownChoicePanel<ReportExecExportFormat> format = new AjaxDropDownChoicePanel<>(\n+                \"format\",\n+                \"format\",\n+                model,\n+                false);\n+\n+        format.setChoices(Arrays.asList(ReportExecExportFormat.values())).setOutputMarkupId(true);\n+\n+        final AjaxExportDownloadBehavior downloadBehavior = new AjaxExportDownloadBehavior();\n+        format.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                try {\n+                    LOG.info(\"Downloding report execution {} [{}]\", execution, format.getModelObject());\n+                    downloadBehavior.setExportFormat(format.getModelObject()).initiate(target);\n+                    toggle(target, false);\n+                } catch (Exception e) {\n+                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                }\n+            }\n+        }).add(downloadBehavior);\n+\n+        addInnerObject(format.hideLabel());\n+    }\n+\n+    public void setExecution(final String execution) {\n+        this.execution = execution;\n+    }\n+\n+    private class AjaxExportDownloadBehavior extends AbstractAjaxDownloadBehavior {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        private ReportExecExportFormat exportFormat;\n+\n+        private HttpResourceStream stream;\n+\n+        public AjaxExportDownloadBehavior setExportFormat(final ReportExecExportFormat exportFormat) {\n+            this.exportFormat = exportFormat;\n+            return this;\n+        }\n+\n+        private void createResourceStream() {\n+            if (stream == null) {\n+                stream = new HttpResourceStream(new ReportRestClient().exportExecutionResult(execution, exportFormat));\n+            }\n+        }\n+\n+        @Override\n+        protected String getFileName() {\n+            createResourceStream();\n+            return stream == null ? null : stream.getFilename();\n+        }\n+\n+        @Override\n+        protected IResourceStream getResourceStream() {\n+            createResourceStream();\n+            return stream;\n+        }\n+    }\n+\n+}"},{"sha":"8309a33b397883ef1812385f4a2cd5b966bd2bb6","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -37,7 +37,6 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -66,8 +65,6 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    private final BaseModal<ReportTO> reportletModal = new BaseModal<ReportTO>(\"outer\");\n-\n     private final ReportStartAtTogglePanel startAt;\n \n     protected ReportDirectoryPanel(final MultilevelPanel multiLevelPanelRef, final PageReference pageRef) {"},{"sha":"bc761a32ccbc70d13e6c300aa3b9306bc9291635","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -88,6 +88,9 @@ public class ReportletDirectoryPanel extends DirectoryPanel<\n     protected ReportletDirectoryPanel(\n             final BaseModal<ReportTO> baseModal, final String report, final PageReference pageRef) {\n         super(BaseModal.CONTENT_ID, pageRef, false);\n+\n+        disableCheckBoxes();\n+\n         this.baseModal = baseModal;\n         this.report = report;\n         this.restClient = new ReportRestClient();"},{"sha":"a0ccfec4b68ab0cf33fbcc51314f0aab68429fcd","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -18,13 +18,18 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n import java.io.InputStream;\n import java.util.Date;\n import java.util.List;\n+import javax.ws.rs.NotSupportedException;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.to.ReportTemplateTO;\n@@ -133,4 +138,26 @@ public void updateTemplateFormat(final String key, final String content, final R\n         getService(ReportTemplateService.class).setFormat(\n                 key, format, IOUtils.toInputStream(content, SyncopeConstants.DEFAULT_CHARSET));\n     }\n+\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        BulkActionResult result = new BulkActionResult();\n+\n+        switch (action.getType()) {\n+            case DELETE:\n+                for (String target : action.getTargets()) {\n+                    delete(target);\n+                    result.getResults().put(target, BulkActionResult.Status.SUCCESS);\n+                }\n+                break;\n+            case EXECUTE:\n+                for (String target : action.getTargets()) {\n+                    startExecution(target, new Date());\n+                    result.getResults().put(target, BulkActionResult.Status.SUCCESS);\n+                }\n+                break;\n+            default:\n+                throw new NotSupportedException(action.getType().name());\n+        }\n+        return result;\n+    }\n }"},{"sha":"872faf0c4cf8ecf32a3c00db1919d80218006191","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n+import org.apache.syncope.client.console.reports.ExportTogglePanel;\n import org.apache.syncope.client.console.rest.ExecutionRestClient;\n import org.apache.syncope.client.console.tasks.ExecutionsDirectoryPanel.ExecProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n@@ -57,6 +58,8 @@\n \n     private static final long serialVersionUID = 2039393934721149162L;\n \n+    private final ExportTogglePanel export;\n+\n     private final BaseModal<?> baseModal;\n \n     private final MultilevelPanel multiLevelPanelRef;\n@@ -78,6 +81,10 @@ public ExecutionsDirectoryPanel(\n             final ExecutionRestClient executionRestClient,\n             final PageReference pageRef) {\n         super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false);\n+\n+        this.export = new ExportTogglePanel(\"outer\");\n+        addOuterObject(this.export);\n+\n         this.baseModal = baseModal;\n         this.multiLevelPanelRef = multiLevelPanelRef;\n         restClient = executionRestClient;\n@@ -130,6 +137,16 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n+                                export.setExecution(model.getObject().getKey());\n+                                export.toggle(target, true);\n+                            }\n+                        }, ActionLink.ActionType.EXPORT, StandardEntitlement.REPORT_READ).\n+                        add(new ActionLink<ExecTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                                 try {"},{"sha":"b6db8804111911235ad04f2c0eb81f27d1e9e4f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AbstractAjaxDownloadBehavior.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.form;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.AbstractAjaxBehavior;\n+import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n+import org.apache.wicket.util.resource.IResourceStream;\n+\n+public abstract class AbstractAjaxDownloadBehavior extends AbstractAjaxBehavior {\n+\n+    private static final long serialVersionUID = 6833760760338614245L;\n+\n+    /**\n+     * Call this method to initiate the download.\n+     *\n+     * @param target request target.\n+     */\n+    public void initiate(final AjaxRequestTarget target) {\n+        CharSequence url = getCallbackUrl();\n+        target.appendJavaScript(\"window.location.href='\" + url + \"'\");\n+    }\n+\n+    @Override\n+    public void onRequest() {\n+        getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(\n+                new ResourceStreamRequestHandler(getResourceStream(), getFileName()));\n+    }\n+\n+    protected abstract String getFileName();\n+\n+    protected abstract IResourceStream getResourceStream();\n+}"},{"sha":"82e5354aa491cda218b96211bf0f3803038ab9d1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectChoiceRenderer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -48,7 +48,7 @@ public T getObject(final String id, final IModel<? extends List<? extends T>> ch\n \n             @Override\n             public boolean evaluate(final T object) {\n-                return id.equals(getIdValue(object, 0));\n+                return id != null && id.equals(getIdValue(object, 0));\n             }\n         });\n     }"},{"sha":"157fea7ac5f865cde487747ee266ed2d816de64a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardMgtButtonBar.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardMgtButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardMgtButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardMgtButtonBar.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -76,7 +76,6 @@ public boolean getDefaultProcessing() {\n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n                 target.add(findParent(Wizard.class));\n-\n                 button.onSubmit();\n             }\n "},{"sha":"68f8c925347f229992350c9457d73f1cc67b6888","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -238,7 +238,7 @@ public ProvisionWizardBuilder(final ResourceTO resurceTO, final PageReference pa\n     public void setEventSink(final IEventSink eventSink) {\n         this.eventSink = eventSink;\n     }\n-    \n+\n     @Override\n     protected WizardModel buildModelSteps(final ProvisionTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new ObjectType(modelObject));\n@@ -250,6 +250,9 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n \n     @Override\n     protected Serializable onApplyInternal(final ProvisionTO modelObject) {\n+        if (modelObject.getKey() == null) {\n+            this.resourceTO.getProvisions().add(modelObject);\n+        }\n         return modelObject;\n     }\n }"},{"sha":"1e37df30228b642b212f9f81a169d7abeb1a28d5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -651,6 +651,8 @@ private List<IntMappingType> getAttributeTypes(final AnyTypeKind kind) {\n             res.addAll(IntMappingType.getAttributeTypes(kind));\n         }\n \n+        Collections.sort(res);\n+\n         return res;\n     }\n }"},{"sha":"da3c7f82ae8aa46b2040cdc5fadde606e9ff84a4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ExportTogglePanel.html","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FExportTogglePanel.html?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style type=\"text/css\">\n+      div#startAt {\n+        background-color: rgba(98, 98, 98, 0.98) !important;\n+        color: #CCC;\n+        right: 5px !important;\n+        top: 100px !important;\n+        min-width: 300px;\n+        min-height: 130px !important;\n+        z-index: 6000 !important;\n+      }\n+\n+      div#startAtContainer {\n+        padding: 15px;\n+      }\n+\n+      div#startAtContainer input {\n+        background-color: rgba(200, 200, 200, 0.60) !important;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <div id=\"startAtContainer\" class=\"form-group\">\n+      <span wicket:id=\"format\"></span>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"c8d2e96391ce172e9c10e84f657259146fd31eb2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -181,7 +181,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentExport\">\n-      <a href=\"#\" wicket:id=\"exportLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/export.png\" alt=\"export icon\" title=\"Export\"/></a>\n+      <a href=\"#\" wicket:id=\"exportLink\" class=\"btn\"><i class=\"fa fa-floppy-o\" alt=\"export icon\" title=\"Export\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSuspend\">"},{"sha":"1a5407ccf841887244c0c2ea761120f4f16c09a3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"added","additions":257,"deletions":0,"changes":257,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -0,0 +1,257 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.pages.Reports;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class ReportsITCase extends AbstractConsoleITCase {\n+\n+    private void createReport(final String name) {\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n+\n+        wicketTester.assertComponent(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer\", Modal.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n+        formTester.setValue(\"content:form:view:name:textField\", name);\n+        formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"0\");\n+        formTester.submit(\"content:form:buttons:next\");\n+\n+        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n+                + \":0:outer:form:content:form:view:schedule:seconds:textField\", TextField.class);\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n+        formTester.submit(\"content:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        wicketTester.clickLink(\"body:reportsLI:reports\");\n+    }\n+\n+    private void delete(final String name) {\n+        wicketTester.clickLink(\"body:reportsLI:reports\");\n+\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n+\n+        assertNotNull(result);\n+\n+        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n+        wicketTester.clickLink(\n+                wicketTester.getComponentFromLastRenderedPage(\n+                        result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"));\n+\n+        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"), \"onclick\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        assertNull(findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteReport\"));\n+    }\n+\n+    private void deleteReportlet(final String report, final String reportlet) {\n+        wicketTester.clickLink(\"body:reportsLI:reports\");\n+\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n+\n+        assertNotNull(result);\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+\n+        result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable\", reportlet);\n+\n+        assertNotNull(result);\n+\n+        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n+        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        assertNull(findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable\", reportlet));\n+    }\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        wicketTester.clickLink(\"body:reportsLI:reports\");\n+        wicketTester.assertRenderedPage(Reports.class);\n+    }\n+\n+    @Test\n+    public void read() {\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"test\");\n+\n+        assertNotNull(result);\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+\n+        result = findComponentByProp(\"status\", \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", \"SUCCESS\");\n+\n+        assertNotNull(result);\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelExport:exportLink\");\n+        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n+                + \"firstLevelContainer:first:outerObjectsRepeater:3:outer:container:content:togglePanelContainer:close\",\n+                AjaxLink.class);\n+\n+        wicketTester.clickLink(\n+                \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:3:outer:container:content:togglePanelContainer:close\");\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelView:viewLink\");\n+        wicketTester.clickLink(\n+                \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:secondLevelContainer:back\");\n+\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n+\n+        assertNotNull(findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"reconciliation\"));\n+    }\n+\n+    @Test\n+    public void cloneReportlets() {\n+        final String report = \"test\";\n+        final String reportlet = \"myClone\";\n+\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n+\n+        assertNotNull(result);\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+\n+        result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable\", \"testUserReportlet\");\n+\n+        assertNotNull(result);\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelClone:cloneLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n+\n+        formTester.setValue(\"view:name:textField\", reportlet);\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        deleteReportlet(report, reportlet);\n+\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+                + \"outer:form:content:container:content:exit\");\n+\n+        wicketTester.assertRenderedPage(Reports.class);\n+    }\n+\n+    @Test\n+    public void createReportlets() {\n+        final String report = \"test\";\n+        final String reportlet = \"myNewReportlet\";\n+\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n+\n+        assertNotNull(result);\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+                + \"outer:form:content:container:content:add\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n+\n+        formTester.setValue(\"view:name:textField\", reportlet);\n+        formTester.setValue(\"view:configuration:dropDownChoiceField\", \"1\");\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        deleteReportlet(report, reportlet);\n+\n+        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+                + \"outer:form:content:container:content:exit\");\n+\n+        wicketTester.assertRenderedPage(Reports.class);\n+    }\n+\n+    @Test\n+    public void update() {\n+        createReport(\"updateReport\");\n+        Component result = findComponentByProp(\n+                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateReport\");\n+\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelEdit:editLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n+        formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"1\");\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n+        formTester.submit(\"content:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        delete(\"updateReport\");\n+    }\n+}"},{"sha":"05527bc3e488f9b195034a2a7e57a5484aab934a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":135,"deletions":4,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e9bda9f03f2867c47ab68816d52c3fef7e325bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=9e9bda9f03f2867c47ab68816d52c3fef7e325bc","patch":"@@ -19,7 +19,10 @@\n package org.apache.syncope.fit.console;\n \n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n \n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import java.util.UUID;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.NonI18nPalette;\n import org.apache.wicket.Component;\n@@ -89,19 +92,147 @@ public void editProvisioning() {\n \n         wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n-        \n+\n         wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n-                + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1:transformers:icon\", \n+                + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1:transformers:icon\",\n                 Constants.ON_CLICK);\n-        \n+\n         wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:view:mapping:mappingContainer:mappings:0:transformers:alertsLink\");\n-        \n+\n         wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:transformersTogglePanel:container:content:togglePanelContainer:\"\n                 + \"form:classes:paletteField\", NonI18nPalette.class);\n     }\n \n+    @Test\n+    public void createNewResurceAndProvisionRules() {\n+        final String res = UUID.randomUUID().toString();\n+        wicketTester.clickLink(\"body:topologyLI:topology\");\n+\n+        wicketTester.executeAjaxEvent(\n+                \"body:conns:0:conns:0:conn\", Constants.ON_CLICK);\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:create\", Constants.ON_CLICK);\n+\n+        FormTester formTester\n+                = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+\n+        formTester.setValue(\"view:container:key:textField\", res);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.submit(\"buttons:next\");\n+\n+        // click on finish to create the external resource \n+        wicketTester.cleanupFeedbackMessages();\n+        // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.cleanupFeedbackMessages();\n+        wicketTester.clickLink(\"body:topologyLI:topology\");\n+\n+        Component component = findComponentByProp(\"key\", \"body:resources\", res);\n+        assertNotNull(component);\n+        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:add\");\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+\n+        formTester.setValue(\"view:container:type:dropDownChoiceField\", \"0\");\n+        formTester.setValue(\"view:container:class\", \"__ACCOUNT__\");\n+        formTester.submit(\"buttons:next\");\n+        wicketTester.assertNoErrorMessage();\n+        wicketTester.assertNoInfoMessage();\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+        formTester.submit(\"buttons:next\");\n+        wicketTester.assertNoErrorMessage();\n+        wicketTester.assertNoInfoMessage();\n+\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+                + \"content:wizard:form:view:mapping:mappingContainer:addMappingBtn\", Constants.ON_CLICK);\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                + \":view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", Constants.ON_CHANGE);\n+\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", \"4\");\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                + \":view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", Constants.ON_CHANGE);\n+\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n+\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", \"4\");\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:extAttrName:textField\", \"ID\");\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n+\n+        formTester.submit(\"buttons:next\");\n+        wicketTester.assertNoErrorMessage();\n+        wicketTester.assertNoInfoMessage();\n+\n+        wicketTester.cleanupFeedbackMessages();\n+        // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+                + \"content:wizard:form:buttons:finish\", Constants.ON_CLICK);\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.assertComponent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n+\n+        wicketTester.cleanupFeedbackMessages();\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+                + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+        formTester.submit(\"buttons:next\");\n+\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n+                + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:0\", WebMarkupContainer.class);\n+\n+        wicketTester.executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:\"\n+                + \"wizard:form:buttons:cancel\", Constants.ON_CLICK);\n+\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\");\n+\n+        wicketTester.cleanupFeedbackMessages();\n+        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n+        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        component = findComponentByProp(\"key\", \"body:resources\", res);\n+        assertNull(component);\n+    }\n+\n     @Test\n     public void executePullTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");"}]}