{"sha":"a437a9f16a31f95954b9f300a44d0d5b17ce130d","node_id":"C_kwDOJfYA1toAKGE0MzdhOWYxNmEzMWY5NTk1NGI5ZjMwMGE0NGQwZDViMTdjZTEzMGQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-06-15T14:23:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-06-16T09:18:05Z"},"message":"Upgrading Elasticsearch","tree":{"sha":"6f71da46e2b7208c4aba67949e62ccd2eb34b5ed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6f71da46e2b7208c4aba67949e62ccd2eb34b5ed"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a437a9f16a31f95954b9f300a44d0d5b17ce130d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a437a9f16a31f95954b9f300a44d0d5b17ce130d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a437a9f16a31f95954b9f300a44d0d5b17ce130d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a437a9f16a31f95954b9f300a44d0d5b17ce130d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bc1f7c7c451285e8db80d42d5634d01afd611dd3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc1f7c7c451285e8db80d42d5634d01afd611dd3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc1f7c7c451285e8db80d42d5634d01afd611dd3"}],"stats":{"total":391,"additions":194,"deletions":197},"files":[{"sha":"079bf86a8256f202f056d78e9746da62aea15867","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":53,"deletions":54,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -84,7 +84,7 @@ public ActionsPanel<Serializable> getHeader(final String componentId) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                    displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n+                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n                 displayAttributeModal.addSubmitButton();\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);\n@@ -104,16 +104,16 @@ public ActionsPanel<AnyObjectTO> getActions(final IModel<AnyObjectTO> model) {\n \n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                          send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                              new AjaxWizard.EditItemActionEvent<>(\n-                                  new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n-                                  target));\n-                      }\n-                  }, ActionType.EDIT,\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n+                                target));\n+            }\n+        }, ActionType.EDIT,\n                 String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), AnyEntitlement.UPDATE.getFor(type))).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n@@ -134,7 +134,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                        utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n+                            utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n \n                     utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n                     utilityModal.show(true);\n@@ -148,8 +148,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     target.add(utilityModal.setContent(\n-                        new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n-                            pageRef)));\n+                            new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n                     utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n                     utilityModal.show(true);\n                     target.add(utilityModal);\n@@ -158,46 +157,46 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n         }\n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -2878723352517770644L;\n-\n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                          model.setObject(restClient.read(model.getObject().getKey()));\n-                          target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                              altDefaultModal,\n-                              AuditElements.EventCategoryType.LOGIC,\n-                              \"AnyObjectLogic\",\n-                              model.getObject(),\n-                              AnyEntitlement.UPDATE.getFor(type),\n-                              pageRef) {\n-\n-                              private static final long serialVersionUID = -7440902560249531201L;\n-\n-                              @Override\n-                              protected void restore(final String json, final AjaxRequestTarget target) {\n-                                  AnyObjectTO original = model.getObject();\n-                                  try {\n-                                      AnyObjectTO updated = MAPPER.readValue(json, AnyObjectTO.class);\n-                                      AnyObjectUR updateReq = AnyOperations.diff(updated, original, false);\n-                                      ProvisioningResult<AnyObjectTO> result =\n-                                          restClient.update(original.getETagValue(), updateReq);\n-                                      model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n-\n-                                      SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                                      target.add(container);\n-                                  } catch (Exception e) {\n-                                      LOG.error(\"While restoring any object {}\", model.getObject().getKey(), e);\n-                                      SyncopeConsoleSession.get().onException(e);\n-                                  }\n-                                  ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                              }\n-                          }));\n-\n-                          altDefaultModal.header(new StringResourceModel(\"auditHistory.title\", model));\n-\n-                          altDefaultModal.show(true);\n-                      }\n-                  }, ActionType.VIEW_AUDIT_HISTORY,\n+            private static final long serialVersionUID = -2878723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                model.setObject(restClient.read(model.getObject().getKey()));\n+                target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                        altDefaultModal,\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"AnyObjectLogic\",\n+                        model.getObject(),\n+                        AnyEntitlement.UPDATE.getFor(type),\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -7440902560249531201L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        AnyObjectTO original = model.getObject();\n+                        try {\n+                            AnyObjectTO updated = MAPPER.readValue(json, AnyObjectTO.class);\n+                            AnyObjectUR updateReq = AnyOperations.diff(updated, original, false);\n+                            ProvisioningResult<AnyObjectTO> result =\n+                                    restClient.update(original.getETagValue(), updateReq);\n+                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring any object {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().onException(e);\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n+\n+                altDefaultModal.header(new StringResourceModel(\"auditHistory.title\", model));\n+\n+                altDefaultModal.show(true);\n+            }\n+        }, ActionType.VIEW_AUDIT_HISTORY,\n                 String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), IdRepoEntitlement.AUDIT_LIST)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n@@ -210,7 +209,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                    new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n+                        new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n             }\n \n             @Override"},{"sha":"ed62d4d439ac294bac14030440a0eb828ae55d5c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":96,"deletions":96,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -195,7 +195,7 @@ public ActionsPanel<Serializable> getHeader(final String componentId) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new GroupDisplayAttributesModalPanel<>(\n-                    displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);\n             }\n@@ -209,15 +209,15 @@ public ActionsPanel<GroupTO> getActions(final IModel<GroupTO> model) {\n \n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                          send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                              new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n-                                  restClient.read(model.getObject().getKey())), target));\n-                      }\n-                  }, ActionType.EDIT,\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n+                                restClient.read(model.getObject().getKey())), target));\n+            }\n+        }, ActionType.EDIT,\n                 String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.GROUP_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n@@ -228,7 +228,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(typeExtensionsModal.setContent(new TypeExtensionDirectoryPanel(\n-                    typeExtensionsModal, model.getObject(), pageRef)));\n+                        typeExtensionsModal, model.getObject(), pageRef)));\n                 typeExtensionsModal.header(new StringResourceModel(\"typeExtensions\", model));\n                 typeExtensionsModal.show(true);\n             }\n@@ -237,58 +237,58 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n \n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -7978723352517770645L;\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                          templates.setTargetObject(model.getObject());\n-                          templates.toggle(target, true);\n-                      }\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                templates.setTargetObject(model.getObject());\n+                templates.toggle(target, true);\n+            }\n \n-                      @Override\n-                      public boolean isIndicatorEnabled() {\n-                          return false;\n-                      }\n-                  }, ActionType.MEMBERS,\n+            @Override\n+            public boolean isIndicatorEnabled() {\n+                return false;\n+            }\n+        }, ActionType.MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.GROUP_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -7978723352517770644L;\n-\n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                          try {\n-                              SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                              target.add(container);\n-                          } catch (SyncopeClientException e) {\n-                              LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                              SyncopeConsoleSession.get().onException(e);\n-                          }\n-                          ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                      }\n-                  }, ActionType.PROVISION_MEMBERS,\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                try {\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.PROVISION_MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.TASK_CREATE, IdRepoEntitlement.TASK_EXECUTE)).\n                 setRealm(realm);\n \n         panel.add(new ActionLink<>() {\n \n-                      private static final long serialVersionUID = -7978723352517770644L;\n-\n-                      @Override\n-                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                          try {\n-                              GroupRestClient.provisionMembers(model.getObject().getKey(), ProvisionAction.DEPROVISION);\n-                              SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                              target.add(container);\n-                          } catch (SyncopeClientException e) {\n-                              LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                              SyncopeConsoleSession.get().onException(e);\n-                          }\n-                          ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                      }\n-                  }, ActionType.DEPROVISION_MEMBERS,\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                try {\n+                    GroupRestClient.provisionMembers(model.getObject().getKey(), ProvisionAction.DEPROVISION);\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.DEPROVISION_MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.TASK_CREATE, IdRepoEntitlement.TASK_EXECUTE)).\n                 setRealm(realm);\n \n@@ -307,7 +307,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                    utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                        utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n                 utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n                 utilityModal.show(true);\n             }\n@@ -320,57 +320,57 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(utilityModal.setContent(\n-                    new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                        new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n                 utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n                 utilityModal.show(true);\n             }\n         }, ActionType.NOTIFICATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n         panel.add(new ActionLink<>() {\n \n-                  private static final long serialVersionUID = -2878723352517770644L;\n-\n-                  @Override\n-                  public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                      model.setObject(restClient.read(model.getObject().getKey()));\n-                      target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                          altDefaultModal,\n-                          AuditElements.EventCategoryType.LOGIC,\n-                          \"GroupLogic\",\n-                          model.getObject(),\n-                          IdRepoEntitlement.GROUP_UPDATE,\n-                          pageRef) {\n-\n-                          private static final long serialVersionUID = -5819724478921691835L;\n-\n-                          @Override\n-                          protected void restore(final String json, final AjaxRequestTarget target) {\n-                              GroupTO original = model.getObject();\n-                              try {\n-                                  GroupTO updated = MAPPER.readValue(json, GroupTO.class);\n-                                  GroupUR updateReq = AnyOperations.diff(updated, original, false);\n-                                  ProvisioningResult<GroupTO> result =\n-                                      restClient.update(original.getETagValue(), updateReq);\n-                                  model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n-\n-                                  SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                                  target.add(container);\n-                              } catch (Exception e) {\n-                                  LOG.error(\"While restoring group {}\", model.getObject().getKey(), e);\n-                                  SyncopeConsoleSession.get().onException(e);\n-                              }\n-                              ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                          }\n-                      }));\n-\n-                      altDefaultModal.header(new Model<>(\n-                          getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                      altDefaultModal.show(true);\n-                  }\n-              }, ActionType.VIEW_AUDIT_HISTORY,\n-            String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.AUDIT_LIST)).\n-            setRealms(realm, model.getObject().getDynRealms());\n+            private static final long serialVersionUID = -2878723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                model.setObject(restClient.read(model.getObject().getKey()));\n+                target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                        altDefaultModal,\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"GroupLogic\",\n+                        model.getObject(),\n+                        IdRepoEntitlement.GROUP_UPDATE,\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -5819724478921691835L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        GroupTO original = model.getObject();\n+                        try {\n+                            GroupTO updated = MAPPER.readValue(json, GroupTO.class);\n+                            GroupUR updateReq = AnyOperations.diff(updated, original, false);\n+                            ProvisioningResult<GroupTO> result =\n+                                    restClient.update(original.getETagValue(), updateReq);\n+                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring group {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().onException(e);\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n+\n+                altDefaultModal.header(new Model<>(\n+                        getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                altDefaultModal.show(true);\n+            }\n+        }, ActionType.VIEW_AUDIT_HISTORY,\n+                String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.AUDIT_LIST)).\n+                setRealms(realm, model.getObject().getDynRealms());\n \n         panel.add(new ActionLink<>() {\n \n@@ -381,7 +381,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 GroupTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                    new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n+                        new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n             }\n \n             @Override"},{"sha":"029bafbdf6271bfa60789fe98c5a47fccd3be793","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -172,10 +172,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             @Override\n             protected void populateItem(final ListItem<T> beanItem) {\n                 beanItem.add(new Check<>(\"check\", beanItem.getModel(), checkGroup).setOutputMarkupId(true).\n-                    setOutputMarkupPlaceholderTag(true).\n-                    setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n-                        || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED).\n-                    setEnabled(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE));\n+                        setOutputMarkupPlaceholderTag(true).\n+                        setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n+                                || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED).\n+                        setEnabled(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE));\n \n                 final T bean = beanItem.getModelObject();\n \n@@ -200,9 +200,9 @@ protected String findIndicatorId() {\n                                 @Override\n                                 protected void onEvent(final AjaxRequestTarget target) {\n                                     togglePanel.toggleWithContent(\n-                                        target,\n-                                        actions.cloneWithLabels(\"actions\", new Model<>(bean)),\n-                                        bean);\n+                                            target,\n+                                            actions.cloneWithLabels(\"actions\", new Model<>(bean)),\n+                                            bean);\n                                 }\n                             });\n                         }\n@@ -224,15 +224,15 @@ protected void onEvent(final AjaxRequestTarget target) {\n         checkGroup.add(beans);\n     }\n \n-    private static ListView<String> header(final List<String> labels) {\n+    protected ListView<String> header(final List<String> labels) {\n         return new ListView<>(\"names\", labels) {\n \n             private static final long serialVersionUID = -9112553137618363167L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 item.add(new Label(Constants.NAME_FIELD_NAME,\n-                    new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                        new ResourceModel(item.getModelObject(), item.getModelObject())));\n             }\n         };\n     }\n@@ -424,7 +424,7 @@ protected T getActualItem(final T item, final List<T> list) {\n         @Override\n         protected WizardMgtPanel<T> newInstance(final String id, final boolean wizardInModal) {\n             return new ListViewPanel<>(\n-                id, items, reference, includes, actions, check, reuseItem, wizardInModal, captionVisible, model) {\n+                    id, items, reference, includes, actions, check, reuseItem, wizardInModal, captionVisible, model) {\n \n                 private static final long serialVersionUID = -1715389337530657988L;\n "},{"sha":"18e856f941c5dff9635c6bce3f408063fa6b924e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -54,11 +54,11 @@ public class StatusPanel extends Panel {\n \n     private static final long serialVersionUID = -4013796607157549641L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n \n-    private Map<String, StatusBean> initialStatusBeanMap;\n+    protected Map<String, StatusBean> initialStatusBeanMap;\n \n-    private ListViewPanel<?> listViewPanel;\n+    protected ListViewPanel<?> listViewPanel;\n \n     public <T extends AnyTO> StatusPanel(\n             final String id,\n@@ -82,7 +82,7 @@ public <T extends AnyTO> StatusPanel(\n         init(any, model, connObjects, pageRef, true);\n     }\n \n-    private void init(\n+    protected void init(\n             final AnyTO any,\n             final IModel<List<StatusBean>> model,\n             final List<Triple<ConnObjectTO, ConnObjectWrapper, String>> connObjects,\n@@ -130,7 +130,7 @@ private void init(\n             }\n         });\n \n-        final MultilevelPanel mlp = new MultilevelPanel(\"resources\");\n+        MultilevelPanel mlp = new MultilevelPanel(\"resources\");\n         add(mlp);\n \n         ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<>(StatusBean.class, pageRef) {\n@@ -159,7 +159,7 @@ protected Component getValueComponent(final String key, final StatusBean bean) {\n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n                 Pair<ConnObjectTO, ConnObjectTO> pair =\n-                    getConnObjectTOs(bean.getKey(), bean.getResource(), connObjects);\n+                        getConnObjectTOs(bean.getKey(), bean.getResource(), connObjects);\n                 return pair != null && pair.getRight() != null;\n             }\n \n@@ -220,9 +220,9 @@ static class RemoteAnyPanel extends RemoteObjectPanel {\n \n         private static final long serialVersionUID = 4303365227411467563L;\n \n-        private final StatusBean bean;\n+        protected final StatusBean bean;\n \n-        private final List<Triple<ConnObjectTO, ConnObjectWrapper, String>> connObjects;\n+        protected final List<Triple<ConnObjectTO, ConnObjectWrapper, String>> connObjects;\n \n         RemoteAnyPanel(final StatusBean bean, final List<Triple<ConnObjectTO, ConnObjectWrapper, String>> connObjects) {\n             this.bean = bean;"},{"sha":"849c8ab42158291506e4658c7ab566fe50a26e5e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/ResourceCond.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -29,25 +29,25 @@ public class ResourceCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = 466054166309460002L;\n \n-    private String resourceKey;\n+    private String resource;\n \n-    public String getResourceKey() {\n-        return resourceKey;\n+    public String getResource() {\n+        return resource;\n     }\n \n-    public void setResourceKey(final String resourceKey) {\n-        this.resourceKey = resourceKey;\n+    public void setResource(final String resource) {\n+        this.resource = resource;\n     }\n \n     @Override\n     public final boolean isValid() {\n-        return resourceKey != null;\n+        return resource != null;\n     }\n \n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n-                append(resourceKey).\n+                append(resource).\n                 build();\n     }\n \n@@ -64,14 +64,14 @@ public boolean equals(final Object obj) {\n         }\n         final ResourceCond other = (ResourceCond) obj;\n         return new EqualsBuilder().\n-                append(resourceKey, other.resourceKey).\n+                append(resource, other.resource).\n                 build();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this).\n-                append(resourceKey).\n+                append(resource).\n                 build();\n     }\n }"},{"sha":"112e56f78c760b58335381da9839451af4a5a6a0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/SearchCond.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -81,8 +81,7 @@ public static SearchCond getAnd(final List<SearchCond> conditions) {\n         if (conditions.size() == 1) {\n             return conditions.get(0);\n         } else if (conditions.size() > 2) {\n-            SearchCond removed = conditions.remove(0);\n-            return getAnd(removed, getAnd(conditions));\n+            return getAnd(conditions.get(0), getAnd(conditions.subList(1, conditions.size())));\n         } else {\n             return getAnd(conditions.get(0), conditions.get(1));\n         }\n@@ -102,8 +101,7 @@ public static SearchCond getOr(final List<SearchCond> conditions) {\n         if (conditions.size() == 1) {\n             return conditions.get(0);\n         } else if (conditions.size() > 2) {\n-            SearchCond removed = conditions.remove(0);\n-            return getOr(removed, getOr(conditions));\n+            return getOr(conditions.get(0), getAnd(conditions.subList(1, conditions.size())));\n         } else {\n             return getOr(conditions.get(0), conditions.get(1));\n         }"},{"sha":"85ddbc17f37c81c2b6a72d57accfae82be10705a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/SearchCondVisitor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -160,7 +160,7 @@ protected SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n                             \n                         case RESOURCES:\n                             ResourceCond resourceCond = new ResourceCond();\n-                            resourceCond.setResourceKey(value);\n+                            resourceCond.setResource(value);\n                             leaf = SearchCond.getLeaf(resourceCond);\n                             break;\n "},{"sha":"5716642339a03f1168329db6efaffbf9f9866b8d","filename":"core/persistence-api/src/test/java/org/apache/syncope/core/persistence/api/search/SearchCondConverterTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -245,7 +245,7 @@ public void resources() {\n         assertEquals(SpecialAttr.RESOURCES + \"==resource-ldap\", fiql);\n \n         ResourceCond resCond = new ResourceCond();\n-        resCond.setResourceKey(\"resource-ldap\");\n+        resCond.setResource(\"resource-ldap\");\n         SearchCond leaf = SearchCond.getLeaf(resCond);\n \n         assertEquals(leaf, SearchCondConverter.convert(VISITOR, fiql));"},{"sha":"4c73c531a34a879b0fb09add3d42373aabfb5386","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -435,13 +435,13 @@ protected String getQuery(\n         query.append(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.resource().name).\n                 append(\" WHERE resource_id=?\").\n-                append(setParameter(parameters, cond.getResourceKey()));\n+                append(setParameter(parameters, cond.getResource()));\n \n         if (svs.anyTypeKind == AnyTypeKind.USER || svs.anyTypeKind == AnyTypeKind.ANY_OBJECT) {\n             query.append(\" UNION SELECT DISTINCT any_id FROM \").\n                     append(svs.groupResource().name).\n                     append(\" WHERE resource_id=?\").\n-                    append(setParameter(parameters, cond.getResourceKey()));\n+                    append(setParameter(parameters, cond.getResource()));\n         }\n \n         query.append(')');"},{"sha":"8c0cbb207cccc378c3e14d266d6e1c02ba739a28","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyMatchDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -279,7 +279,7 @@ protected boolean matches(final Group group, final MemberCond cond, final boolea\n \n     protected boolean matches(final Any<?> any, final ResourceCond cond, final boolean not) {\n         boolean found = anyUtilsFactory.getInstance(any).getAllResources(any).stream().\n-                anyMatch(resource -> resource.getKey().equals(cond.getResourceKey()));\n+                anyMatch(resource -> resource.getKey().equals(cond.getResource()));\n         return not ? !found : found;\n     }\n "},{"sha":"9475f39935daa9b92ddf9a0c5e81e8345ba37c5d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -867,13 +867,13 @@ protected String getQuery(\n         query.append(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.resource().name).\n                 append(\" WHERE resource_id=?\").\n-                append(setParameter(parameters, cond.getResourceKey()));\n+                append(setParameter(parameters, cond.getResource()));\n \n         if (svs.anyTypeKind == AnyTypeKind.USER || svs.anyTypeKind == AnyTypeKind.ANY_OBJECT) {\n             query.append(\" UNION SELECT DISTINCT any_id FROM \").\n                     append(svs.groupResource().name).\n                     append(\" WHERE resource_id=?\").\n-                    append(setParameter(parameters, cond.getResourceKey()));\n+                    append(setParameter(parameters, cond.getResource()));\n         }\n \n         query.append(')');"},{"sha":"dcdadf22349ce36ca24f6a9c02f02c404b584927","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnyMatchTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyMatchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyMatchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyMatchTest.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -63,10 +63,10 @@ public void byResourceCond() {\n         assertNotNull(user);\n \n         ResourceCond resourceCond = new ResourceCond();\n-        resourceCond.setResourceKey(\"resource-testdb2\");\n+        resourceCond.setResource(\"resource-testdb2\");\n         assertTrue(anyMatcher.matches(user, SearchCond.getLeaf(resourceCond)));\n \n-        resourceCond.setResourceKey(\"ws-target-resource-delete\");\n+        resourceCond.setResource(\"ws-target-resource-delete\");\n         assertFalse(anyMatcher.matches(user, SearchCond.getLeaf(resourceCond)));\n     }\n "},{"sha":"d29d8ed36fbce963e6d9f04fb5b55346fed508e3","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -375,10 +375,10 @@ public void searchByAuxClass() {\n     @Test\n     public void searchByResource() {\n         ResourceCond ws2 = new ResourceCond();\n-        ws2.setResourceKey(\"ws-target-resource-2\");\n+        ws2.setResource(\"ws-target-resource-2\");\n \n         ResourceCond ws1 = new ResourceCond();\n-        ws1.setResourceKey(\"ws-target-resource-list-mappings-2\");\n+        ws1.setResource(\"ws-target-resource-list-mappings-2\");\n \n         SearchCond searchCondition = SearchCond.getAnd(SearchCond.getNotLeaf(ws2), SearchCond.getLeaf(ws1));\n         assertTrue(searchCondition.isValid());\n@@ -712,10 +712,10 @@ public void asGroupOwner() {\n     @Test\n     public void issue202() {\n         ResourceCond ws2 = new ResourceCond();\n-        ws2.setResourceKey(\"ws-target-resource-2\");\n+        ws2.setResource(\"ws-target-resource-2\");\n \n         ResourceCond ws1 = new ResourceCond();\n-        ws1.setResourceKey(\"ws-target-resource-list-mappings-1\");\n+        ws1.setResource(\"ws-target-resource-list-mappings-1\");\n \n         SearchCond searchCondition =\n                 SearchCond.getAnd(SearchCond.getNotLeaf(ws2), SearchCond.getNotLeaf(ws1));"},{"sha":"d2034919808f86dd43158a0d9d046068caadced6","filename":"ext/elasticsearch/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/ElasticsearchAnySearchDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -518,7 +518,7 @@ protected Query getQuery(final AuxClassCond cond) {\n \n     protected Query getQuery(final ResourceCond cond) {\n         return new Query.Builder().term(QueryBuilders.term().\n-                field(\"resources\").value(FieldValue.of(cond.getResourceKey())).build()).\n+                field(\"resources\").value(FieldValue.of(cond.getResource())).build()).\n                 build();\n     }\n "},{"sha":"632684511ff1a12f3e7db78d217c057d33c826d4","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -430,7 +430,7 @@ under the License.\n \n     <slf4j.version>1.7.36</slf4j.version>\n \n-    <elasticsearch.version>8.2.2</elasticsearch.version>\n+    <elasticsearch.version>8.2.3</elasticsearch.version>\n \n     <apacheds.version>2.0.0.AM26</apacheds.version>\n     <apachedirapi.version>2.0.0</apachedirapi.version>"},{"sha":"498b30614a711f572624a87f812037ad93f4f8e0","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/pac4j/saml/BaseWASAML2ClientTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a437a9f16a31f95954b9f300a44d0d5b17ce130d/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FBaseWASAML2ClientTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a437a9f16a31f95954b9f300a44d0d5b17ce130d/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FBaseWASAML2ClientTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FBaseWASAML2ClientTest.java?ref=a437a9f16a31f95954b9f300a44d0d5b17ce130d","patch":"@@ -111,7 +111,7 @@ protected static KeyStore getKeystore() throws Exception {\n \n     protected static String getKeystoreAsString() throws Exception {\n         char[] pwdArray = \"password\".toCharArray();\n-        try ( ByteArrayOutputStream fos = new ByteArrayOutputStream()) {\n+        try (ByteArrayOutputStream fos = new ByteArrayOutputStream()) {\n             getKeystore().store(fos, pwdArray);\n             fos.flush();\n             return Base64.getEncoder().encodeToString(fos.toByteArray());"}]}