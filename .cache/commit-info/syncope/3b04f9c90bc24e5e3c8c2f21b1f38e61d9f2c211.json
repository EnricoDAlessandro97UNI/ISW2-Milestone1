{"sha":"3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNiMDRmOWM5MGJjMjRlNWUzYzhjMmYyMWIxZjM4ZTYxZDlmMmMyMTE=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-24T15:52:51Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-24T15:52:51Z"},"message":"[SYNCOPE-231]\n* Adding JAX-B Annotations for TOs and Types\n* Adding REST Header constant for IDs\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1438055 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ee0518d3cf744722b465fc23589420e37281952a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ee0518d3cf744722b465fc23589420e37281952a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/comments","author":null,"committer":null,"parents":[{"sha":"e2c897934fd4c8a5ca4bb7ad6f9fbeeb171c804e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e2c897934fd4c8a5ca4bb7ad6f9fbeeb171c804e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e2c897934fd4c8a5ca4bb7ad6f9fbeeb171c804e"}],"stats":{"total":504,"additions":452,"deletions":52},"files":[{"sha":"5a3d47c4ecb1758c8c5c18d1c835bb2ea1f41558","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -31,4 +31,11 @@ public class SyncopeConstants {\n \r\n     public static final String DEFAULT_DATE_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\r\n \r\n+    /**\r\n+     * This constant will be used to identify HTTP header key to look for object ID assigned\r\n+     * to an object after its creation. HTTP Response after PUT operation should contain this\r\n+     * key with resource id as its value.\r\n+     */\r\n+    public static final String REST_HEADER_ID = \"org.apache.syncope.id\";\r\n+\r\n }\r"},{"sha":"00744af938b8e11de0336097669c3369877c1c16","filename":"common/src/main/java/org/apache/syncope/common/mod/AbstractAttributableMod.java","status":"modified","additions":34,"deletions":13,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -21,13 +21,18 @@\n import java.util.HashSet;\r\n import java.util.Set;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n /**\r\n  * Abstract base class for objects that can have attributes removed, added or updated.\r\n- * \r\n+ *\r\n  * Attributes can be regular attributes, derived attributes, virtual attributes and resources.\r\n  */\r\n+@XmlType\r\n public abstract class AbstractAttributableMod extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = 3241118574016303198L;\r\n@@ -67,24 +72,26 @@ public void setId(long id) {\n \r\n     /**\r\n      * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\r\n-     * \r\n+     *\r\n      * @param name (schema) of attribute to be removed.\r\n-     * @return true on success. \r\n+     * @return true on success.\r\n      */\r\n     public boolean addAttributeToBeRemoved(String attribute) {\r\n         return attributesToBeRemoved.add(attribute);\r\n     }\r\n \r\n     /**\r\n      * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\r\n-     * \r\n+     *\r\n      * @param name (schema) of attribute to be removed.\r\n-     * @return true on success. \r\n+     * @return true on success.\r\n      */\r\n     public boolean removeAttributeToBeRemoved(String attribute) {\r\n         return attributesToBeRemoved.remove(attribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"attributesToBeRemoved\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public Set<String> getAttributesToBeRemoved() {\r\n         return attributesToBeRemoved;\r\n     }\r\n@@ -94,8 +101,8 @@ public void setAttributesToBeRemoved(Set<String> attributesToBeRemoved) {\n     }\r\n \r\n     /**\r\n-     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \r\n-     * \r\n+     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n+     *\r\n      * @param attribute modification object\r\n      * @see AttributeMod\r\n      * @return true on success\r\n@@ -105,8 +112,8 @@ public boolean addAttributeToBeUpdated(AttributeMod attribute) {\n     }\r\n \r\n     /**\r\n-     * Remove an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \r\n-     * \r\n+     * Remove an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n+     *\r\n      * @param attribute modification object\r\n      * @see AttributeMod\r\n      * @return true on success\r\n@@ -115,6 +122,8 @@ public boolean removeAttributeToBeUpdated(AttributeMod attribute) {\n         return attributesToBeUpdated.remove(attribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"attributesToBeUpdated\")\r\n+    @XmlElement(name = \"attributeMod\")\r\n     public Set<AttributeMod> getAttributesToBeUpdated() {\r\n         return attributesToBeUpdated;\r\n     }\r\n@@ -124,8 +133,8 @@ public void setAttributesToBeUpdated(Set<AttributeMod> attributesToBeUpdated) {\n     }\r\n \r\n     /**\r\n-     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \r\n-     * \r\n+     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified.\r\n+     *\r\n      * @param attribute modification object\r\n      * @see AttributeMod\r\n      * @return true on success\r\n@@ -135,15 +144,17 @@ public boolean addDerivedAttributeToBeAdded(String derivedAttribute) {\n     }\r\n \r\n     /**\r\n-     * Add a derivedattribute. Value is calculated by its definition. \r\n-     * \r\n+     * Add a derivedattribute. Value is calculated by its definition.\r\n+     *\r\n      * @param derivedAttribute\r\n      * @return true on success\r\n      */\r\n     public boolean removeDerivedAttributeToBeAdded(String derivedAttribute) {\r\n         return derivedAttributesToBeAdded.remove(derivedAttribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"derivedAttributesToBeAdded\")\r\n+    @XmlElement(name = \"attributeName\")\r\n     public Set<String> getDerivedAttributesToBeAdded() {\r\n         return derivedAttributesToBeAdded;\r\n     }\r\n@@ -161,6 +172,8 @@ public boolean removeDerivedAttributeToBeRemoved(String derivedAttribute) {\n         return derivedAttributesToBeRemoved.remove(derivedAttribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"derivedAttributesToBeRemoved\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public Set<String> getDerivedAttributesToBeRemoved() {\r\n         return derivedAttributesToBeRemoved;\r\n     }\r\n@@ -170,6 +183,8 @@ public void setDerivedAttributesToBeRemoved(Set<String> derivedAttributesToBeRem\n         this.derivedAttributesToBeRemoved = derivedAttributesToBeRemoved;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"virtualAttributesToBeRemoved\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public Set<String> getVirtualAttributesToBeRemoved() {\r\n         return virtualAttributesToBeRemoved;\r\n     }\r\n@@ -199,6 +214,8 @@ public boolean removeVirtualAttributeToBeUpdated(AttributeMod virtualAttributeTo\n         return virtualAttributesToBeUpdated.remove(virtualAttributeToBeUpdated);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"derivedAttributesToBeUpdated\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public Set<AttributeMod> getVirtualAttributesToBeUpdated() {\r\n         return virtualAttributesToBeUpdated;\r\n     }\r\n@@ -216,6 +233,8 @@ public boolean removeResourceToBeAdded(String resource) {\n         return resourcesToBeAdded.remove(resource);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n+    @XmlElement(name = \"resource\")\r\n     public Set<String> getResourcesToBeAdded() {\r\n         return resourcesToBeAdded;\r\n     }\r\n@@ -232,6 +251,8 @@ public boolean removeResourceToBeRemoved(String resource) {\n         return resourcesToBeRemoved.remove(resource);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"resourcesToBeRemoved\")\r\n+    @XmlElement(name = \"resource\")\r\n     public Set<String> getResourcesToBeRemoved() {\r\n         return resourcesToBeRemoved;\r\n     }\r"},{"sha":"f0c2cedab2bb8c7628ba350247da3e58dcc862e9","filename":"common/src/main/java/org/apache/syncope/common/mod/AttributeMod.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAttributeMod.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -20,9 +20,17 @@\n \r\n import java.util.ArrayList;\r\n import java.util.List;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n+@XmlRootElement\r\n+@XmlType\r\n public class AttributeMod extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = -913573979137431406L;\r\n@@ -56,6 +64,8 @@ public boolean removeValueToBeAdded(String value) {\n         return valuesToBeAdded.remove(value);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"valuesToBeAdded\")\r\n+    @XmlElement(name = \"value\")\r\n     public List<String> getValuesToBeAdded() {\r\n         return valuesToBeAdded;\r\n     }\r\n@@ -72,6 +82,8 @@ public boolean removeValueToBeRemoved(String value) {\n         return valuesToBeRemoved.remove(value);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"valuesToBeRemoved\")\r\n+    @XmlElement(name = \"value\")\r\n     public List<String> getValuesToBeRemoved() {\r\n         return valuesToBeRemoved;\r\n     }\r"},{"sha":"3c1e869c4cc659997013f0aabac271e27fd8a1a7","filename":"common/src/main/java/org/apache/syncope/common/mod/MembershipMod.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -20,8 +20,16 @@\n \r\n import java.util.Collections;\r\n import java.util.Set;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n+@XmlRootElement\r\n+@XmlType\r\n public class MembershipMod extends AbstractAttributableMod {\r\n \r\n     private static final long serialVersionUID = 2511869129977331525L;\r\n@@ -46,11 +54,15 @@ public boolean addResourceToBeRemoved(String resource) {\n         return false;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n+    @XmlElement(name = \"resource\")\r\n     @Override\r\n     public Set<String> getResourcesToBeAdded() {\r\n         return Collections.emptySet();\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"resourcesToBeRemoved\")\r\n+    @XmlElement(name = \"resource\")\r\n     @Override\r\n     public Set<String> getResourcesToBeRemoved() {\r\n         return Collections.emptySet();\r"},{"sha":"25665ab2e07e8af774cc8a37fd927b80237480c2","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -20,8 +20,16 @@\n \r\n import java.util.HashSet;\r\n import java.util.Set;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n+@XmlRootElement(name = \"userMod\")\r\n+@XmlType\r\n public class UserMod extends AbstractAttributableMod {\r\n \r\n     private static final long serialVersionUID = 3081848906558106204L;\r\n@@ -49,6 +57,8 @@ public boolean removeMembershipToBeAdded(MembershipMod membershipMod) {\n         return membershipsToBeAdded.remove(membershipMod);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"membershipsToBeAdded\")\r\n+    @XmlElement(name = \"membership\")\r\n     public Set<MembershipMod> getMembershipsToBeAdded() {\r\n         return membershipsToBeAdded;\r\n     }\r\n@@ -81,6 +91,8 @@ public boolean removeMembershipToBeRemoved(Long membershipToBeRemoved) {\n         return membershipsToBeRemoved.remove(membershipToBeRemoved);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"membershipsToBeRemoved\")\r\n+    @XmlElement(name = \"membership\")\r\n     public Set<Long> getMembershipsToBeRemoved() {\r\n         return membershipsToBeRemoved;\r\n     }\r"},{"sha":"1c5d62ec8c55ee57ea0c48f0fd7eb64f620025ac","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -25,8 +25,14 @@\n import java.util.List;\r\n import java.util.Map;\r\n import java.util.Set;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n+@XmlType\r\n public abstract class AbstractAttributableTO extends ConnObjectTO {\r\n \r\n     private static final long serialVersionUID = 4083884098736820255L;\r\n@@ -39,7 +45,7 @@ public abstract class AbstractAttributableTO extends ConnObjectTO {\n \r\n     private Set<String> resources;\r\n \r\n-    private List<PropagationStatusTO> propagationStatusTOs;\r\n+    private final List<PropagationStatusTO> propagationStatusTOs;\r\n \r\n     protected AbstractAttributableTO() {\r\n         super();\r\n@@ -100,6 +106,8 @@ public boolean removeDerivedAttribute(final AttributeTO derivedAttribute) {\n         return derivedAttributes.remove(derivedAttribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"derivedAttributes\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public List<AttributeTO> getDerivedAttributes() {\r\n         return derivedAttributes;\r\n     }\r\n@@ -117,6 +125,8 @@ public boolean removeVirtualAttribute(final AttributeTO virtualAttribute) {\n         return virtualAttributes.remove(virtualAttribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"virtualAttributes\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public List<AttributeTO> getVirtualAttributes() {\r\n         return virtualAttributes;\r\n     }\r\n@@ -133,6 +143,8 @@ public boolean removeResource(final String resource) {\n         return resources.remove(resource);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"resources\")\r\n+    @XmlElement(name = \"resource\")\r\n     public Set<String> getResources() {\r\n         return resources;\r\n     }\r\n@@ -160,6 +172,8 @@ public boolean removePropagationTO(final String resource) {\n         return false;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"propagationStatuses\")\r\n+    @XmlElement(name = \"propagationStatus\")\r\n     public List<PropagationStatusTO> getPropagationStatusTOs() {\r\n         return propagationStatusTOs;\r\n     }\r"},{"sha":"62daa7fad5ddd88acde12c9174cf45a0a74c62d7","filename":"common/src/main/java/org/apache/syncope/common/to/AttributeTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAttributeTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -21,8 +21,15 @@\n import java.util.ArrayList;\r\n import java.util.List;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n+@XmlRootElement(name = \"attribute\")\r\n+@XmlType\r\n public class AttributeTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = 4941691338796323623L;\r\n@@ -89,6 +96,8 @@ public boolean removeValue(final String value) {\n     /**\r\n      * @return attribute values as strings\r\n      */\r\n+    //@XmlElementWrapper(name = \"values\")\r\n+    @XmlElement(name = \"value\")\r\n     public List<String> getValues() {\r\n         return values;\r\n     }\r"},{"sha":"9a36a59c9e61eb708e9a3696d4e66ab222502379","filename":"common/src/main/java/org/apache/syncope/common/to/ConnObjectTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -24,9 +24,16 @@\n import java.util.List;\r\n import java.util.Map;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n+@XmlRootElement(name = \"connector\")\r\n+@XmlType\r\n public class ConnObjectTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = 5139554911265442497L;\r\n@@ -47,6 +54,8 @@ public boolean removeAttribute(final AttributeTO attribute) {\n         return attributes.remove(attribute);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"attributes\")\r\n+    @XmlElement(name = \"attribute\")\r\n     public List<AttributeTO> getAttributes() {\r\n         return attributes;\r\n     }\r"},{"sha":"fa523205b08defd20df97686c3b3ec72b865997f","filename":"common/src/main/java/org/apache/syncope/common/to/JobClassTO.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -0,0 +1,53 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.to;\r\n+\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+import org.apache.syncope.common.AbstractBaseBean;\r\n+\r\n+@XmlRootElement(name = \"jobClass\")\r\n+@XmlType\r\n+public class JobClassTO extends AbstractBaseBean {\r\n+\r\n+    private static final long serialVersionUID = -1953799905627918822L;\r\n+\r\n+    private String name;\r\n+\r\n+    public static JobClassTO instance(final String name) {\r\n+        JobClassTO instance = new JobClassTO();\r\n+        instance.setName(name);\r\n+        return instance;\r\n+    }\r\n+\r\n+    /**\r\n+     * @return the name\r\n+     */\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    /**\r\n+     * @param name the name to set\r\n+     */\r\n+    public void setName(final String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"3d50d006a1b23c7fbc6e2e624f9c233dd70bf0c3","filename":"common/src/main/java/org/apache/syncope/common/to/MembershipTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMembershipTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -22,6 +22,13 @@\n import java.util.List;\r\n import java.util.Set;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+@XmlRootElement(name = \"membership\")\r\n+@XmlType\r\n public class MembershipTO extends AbstractAttributableTO {\r\n \r\n     private static final long serialVersionUID = 5992828670273935861L;\r\n@@ -57,6 +64,8 @@ public boolean removeResource(String resource) {\n     }\r\n \r\n     @Override\r\n+    @XmlElementWrapper(name = \"resources\")\r\n+    @XmlElement(name = \"resource\")\r\n     public Set<String> getResources() {\r\n         return Collections.<String>emptySet();\r\n     }\r"},{"sha":"ecfa7d098571d9419ca77ac473b93d2f71c28399","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTO.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -21,14 +21,11 @@\n import java.util.ArrayList;\r\n import java.util.List;\r\n \r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.types.IntMappingType;\r\n import org.apache.syncope.common.types.TraceLevel;\r\n \r\n-@XmlRootElement\r\n public class NotificationTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = -6145117115632592612L;\r"},{"sha":"b34887d94a276dd9c77b6bf73d4350de5d7fcd9d","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTaskTO.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTaskTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -21,13 +21,20 @@\n import java.util.HashSet;\r\n import java.util.Set;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.types.TraceLevel;\r\n \r\n+@XmlRootElement(name = \"notificationTask\")\r\n+@XmlType\r\n public class NotificationTaskTO extends TaskTO {\r\n \r\n     private static final long serialVersionUID = 371671242591093846L;\r\n \r\n-    private Set<String> recipients;\r\n+    private final Set<String> recipients = new HashSet<String>();\r\n \r\n     private String sender;\r\n \r\n@@ -41,12 +48,8 @@ public class NotificationTaskTO extends TaskTO {\n \r\n     private TraceLevel traceLevel;\r\n \r\n-    public NotificationTaskTO() {\r\n-        super();\r\n-\r\n-        recipients = new HashSet<String>();\r\n-    }\r\n-\r\n+    @XmlElementWrapper(name = \"recipients\")\r\n+    @XmlElement(name = \"recipient\")\r\n     public Set<String> getRecipients() {\r\n         return recipients;\r\n     }\r"},{"sha":"8fb5547e911ffa7b103ac2f24e19e6c227573df8","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationStatusTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,12 +18,17 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\r\n \r\n /**\r\n  * Single propagation status.\r\n  */\r\n+@XmlRootElement(name = \"propagationStatus\")\r\n+@XmlType\r\n public class PropagationStatusTO extends AbstractBaseBean {\r\n \r\n     /**\r"},{"sha":"9e963c332aef86f174f2acd667db1c518674435d","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationTaskTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTaskTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,10 +18,15 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.PropagationMode;\r\n import org.apache.syncope.common.types.ResourceOperation;\r\n \r\n+@XmlRootElement(name = \"propagationTask\")\r\n+@XmlType\r\n public class PropagationTaskTO extends TaskTO {\r\n \r\n     private static final long serialVersionUID = 386450127003321197L;\r"},{"sha":"6db453ca9783292b9568394e936e69039a142e27","filename":"common/src/main/java/org/apache/syncope/common/to/RoleTO.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -20,8 +20,16 @@\n \r\n import java.util.ArrayList;\r\n import java.util.List;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.codehaus.jackson.annotate.JsonIgnoreProperties;\r\n \r\n+@XmlRootElement(name = \"role\")\r\n+@XmlType\r\n @JsonIgnoreProperties({\"displayName\"})\r\n public class RoleTO extends AbstractAttributableTO {\r\n \r\n@@ -47,7 +55,7 @@ public class RoleTO extends AbstractAttributableTO {\n \r\n     private boolean inheritAccountPolicy;\r\n \r\n-    private List<String> entitlements;\r\n+    private final List<String> entitlements;\r\n \r\n     private Long passwordPolicy;\r\n \r\n@@ -130,6 +138,8 @@ public boolean removeEntitlement(final String entitlement) {\n         return entitlements.remove(entitlement);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"entitlements\")\r\n+    @XmlElement(name = \"entitlement\")\r\n     public List<String> getEntitlements() {\r\n         return entitlements;\r\n     }\r"},{"sha":"ba0e576109aa81eb818be69a9ec0ada7d1861121","filename":"common/src/main/java/org/apache/syncope/common/to/SchedTaskTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSchedTaskTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -20,6 +20,11 @@\n \r\n import java.util.Date;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+@XmlRootElement(name = \"schedTask\")\r\n+@XmlType\r\n public class SchedTaskTO extends TaskTO {\r\n \r\n     private static final long serialVersionUID = -5722284116974636425L;\r"},{"sha":"cdc8a2cf07ba83df2d31ace57ce444767f7fb5d8","filename":"common/src/main/java/org/apache/syncope/common/to/SyncActionClassTO.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -0,0 +1,53 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.to;\r\n+\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+import org.apache.syncope.common.AbstractBaseBean;\r\n+\r\n+@XmlRootElement(name = \"syncActionClass\")\r\n+@XmlType\r\n+public class SyncActionClassTO extends AbstractBaseBean {\r\n+\r\n+    private static final long serialVersionUID = -3379629287646343560L;\r\n+\r\n+    private String name;\r\n+\r\n+    public static SyncActionClassTO instance(final String name) {\r\n+        SyncActionClassTO instance = new SyncActionClassTO();\r\n+        instance.setName(name);\r\n+        return instance;\r\n+    }\r\n+\r\n+    /**\r\n+     * @return the name\r\n+     */\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    /**\r\n+     * @param name the name to set\r\n+     */\r\n+    public void setName(final String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"b6872fea8229a437dc6e83643dbe586da45aa7dd","filename":"common/src/main/java/org/apache/syncope/common/to/SyncTaskTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncTaskTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,11 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+@XmlRootElement(name = \"syncTask\")\r\n+@XmlType\r\n public class SyncTaskTO extends SchedTaskTO {\r\n \r\n     private static final long serialVersionUID = -2143537546915809016L;\r"},{"sha":"16a6d53bbb9ebad75c632f5214e958cbf7094692","filename":"common/src/main/java/org/apache/syncope/common/to/TaskExecTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskExecTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,11 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+@XmlRootElement(name = \"taskExecution\")\r\n+@XmlType\r\n public class TaskExecTO extends AbstractExecTO {\r\n \r\n     private static final long serialVersionUID = -5401795154606268973L;\r"},{"sha":"c28a957da30ab55ec9e819a93b8920ef399d7a93","filename":"common/src/main/java/org/apache/syncope/common/to/TaskTO.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FTaskTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -22,27 +22,28 @@\n import java.util.Date;\r\n import java.util.List;\r\n \r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n-public class TaskTO extends AbstractBaseBean {\r\n+@XmlRootElement(name = \"task\")\r\n+@XmlType\r\n+public abstract class TaskTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = 386450127003321197L;\r\n \r\n     private long id;\r\n \r\n     private String latestExecStatus;\r\n \r\n-    private List<TaskExecTO> executions;\r\n-    \r\n-    private Date startDate;\r\n-    \r\n-    private Date endDate;\r\n+    private List<TaskExecTO> executions = new ArrayList<TaskExecTO>();\r\n \r\n-    public TaskTO() {\r\n-        super();\r\n+    private Date startDate;\r\n \r\n-        executions = new ArrayList<TaskExecTO>();\r\n-    }\r\n+    private Date endDate;\r\n \r\n     public long getId() {\r\n         return id;\r\n@@ -68,6 +69,8 @@ public boolean removeExecution(TaskExecTO execution) {\n         return executions.remove(execution);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"excecutions\")\r\n+    @XmlElement(name = \"excecution\")\r\n     public List<TaskExecTO> getExecutions() {\r\n         return executions;\r\n     }\r"},{"sha":"2957fc845f2592063ea23e94b8053076ad7430cb","filename":"common/src/main/java/org/apache/syncope/common/to/UserRequestTO.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,10 +18,15 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.apache.syncope.common.mod.UserMod;\r\n import org.apache.syncope.common.types.UserRequestType;\r\n \r\n+@XmlRootElement(name = \"userRequest\")\r\n+@XmlType\r\n public class UserRequestTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = 1228351243795629329L;\r"},{"sha":"14d424a6f8141c274a530b3ca6213b272e9ac3cd","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -25,10 +25,18 @@\n import java.util.HashMap;\r\n import java.util.List;\r\n import java.util.Map;\r\n+\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\r\n import org.apache.commons.lang.builder.ToStringStyle;\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n+@XmlRootElement(name = \"user\")\r\n+@XmlType\r\n public class UserTO extends AbstractAttributableTO {\r\n \r\n     private static final long serialVersionUID = 7791304495192615740L;\r\n@@ -75,6 +83,8 @@ public boolean removeMembership(MembershipTO membershipTO) {\n         return memberships.remove(membershipTO);\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"memberships\")\r\n+    @XmlElement(name = \"membership\")\r\n     public List<MembershipTO> getMemberships() {\r\n         return memberships;\r\n     }\r"},{"sha":"13b70fc721f62d237b606b901d93e104f47eb4f5","filename":"common/src/main/java/org/apache/syncope/common/types/LoggerType.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -0,0 +1,41 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.types;\r\n+\r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n+public enum LoggerType {\r\n+\r\n+    /**\r\n+     * This type describes a common logger used to handle system and application events.\r\n+     */\r\n+    NORMAL,\r\n+\r\n+    /**\r\n+     * Audit logger only focus on security related events, usually logging how did what and when.\r\n+     * In case of a security incident audit loggers should allow an administrator to recall all\r\n+     * actions a certain user has done.\r\n+     */\r\n+    AUDIT;\r\n+\r\n+    public static LoggerType fromString(String value) {\r\n+        return LoggerType.valueOf(value.toUpperCase());\r\n+    }\r\n+}\r"},{"sha":"b97017edb57823500ac94f39347655211050b5e4","filename":"common/src/main/java/org/apache/syncope/common/types/PropagationMode.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationMode.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n public enum PropagationMode {\r\n \r\n     ONE_PHASE,\r"},{"sha":"71749bcc64be2f964f56f8787d82f4606726b7fd","filename":"common/src/main/java/org/apache/syncope/common/types/PropagationTaskExecStatus.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,8 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n /**\r\n  * Status of a TaskExecution.\r\n  *\r\n@@ -28,6 +30,7 @@\n  *\r\n  * @see TaskExecution\r\n  */\r\n+@XmlEnum\r\n public enum PropagationTaskExecStatus {\r\n \r\n     CREATED,\r"},{"sha":"38cef2f5f1938339a837d5c73539d7e2807ce594","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceOperation.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n public enum ResourceOperation {\r\n \r\n     CREATE,\r"},{"sha":"fea02b79debbd4be6731f39aade8db14aaae361d","filename":"common/src/main/java/org/apache/syncope/common/types/TaskType.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n public enum TaskType {\r\n \r\n     PROPAGATION(\"propagation\"),\r\n@@ -38,12 +41,12 @@ public String toString() {\n \r\n     public static TaskType fromString(String name) {\r\n         if (name != null) {\r\n-          for (TaskType t : TaskType.values()) {\r\n-            if (t.name.equalsIgnoreCase(name)) {\r\n-              return t;\r\n+            for (TaskType t : TaskType.values()) {\r\n+                if (t.name.equalsIgnoreCase(name)) {\r\n+                    return t;\r\n+                }\r\n             }\r\n-          }\r\n         }\r\n         return null;\r\n-      }\r\n+    }\r\n }\r"},{"sha":"6e436c2444bf09320b8ebbdc9e919f6ee800eac6","filename":"common/src/main/java/org/apache/syncope/common/types/TraceLevel.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTraceLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTraceLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTraceLevel.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n public enum TraceLevel {\r\n \r\n     /**\r"},{"sha":"27c62b36414e5965b3bd80c114994aaa866f5142","filename":"common/src/main/java/org/apache/syncope/common/types/UserRequestType.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+@XmlEnum\r\n public enum UserRequestType {\r\n \r\n     CREATE,\r"},{"sha":"c299a03ae997609b8c80752d783eff91739adfc7","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -18,14 +18,20 @@\n  */\r\n package org.apache.syncope.common.util;\r\n \r\n+import java.text.ParseException;\r\n import java.util.ArrayList;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n \r\n import org.apache.syncope.common.to.EntitlementTO;\r\n+import org.apache.syncope.common.to.JobClassTO;\r\n+import org.apache.syncope.common.to.LoggerTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n+import org.apache.syncope.common.to.SyncActionClassTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n+import org.apache.syncope.common.types.AuditLoggerName;\r\n+import org.apache.syncope.common.types.SyncopeLoggerLevel;\r\n import org.springframework.web.servlet.ModelAndView;\r\n \r\n public final class CollectionWrapper {\r\n@@ -108,4 +114,59 @@ public static Set<ValidatorTO> wrapValidator(final Set<String> collection) {\n         }\r\n         return respons;\r\n     }\r\n+\r\n+    public static List<LoggerTO> unwrapLogger(List<AuditLoggerName> auditNames) {\r\n+        List<LoggerTO> respons = new ArrayList<LoggerTO>();\r\n+        for (AuditLoggerName l : auditNames) {\r\n+            LoggerTO loggerTO = new LoggerTO();\r\n+            loggerTO.setName(l.toLoggerName());\r\n+            loggerTO.setLevel(SyncopeLoggerLevel.DEBUG);\r\n+            respons.add(loggerTO);\r\n+        }\r\n+        return respons;\r\n+    }\r\n+\r\n+    public static Set<JobClassTO> wrapJobClasses(Set<String> classes) {\r\n+        Set<JobClassTO> respons = new HashSet<JobClassTO>();\r\n+        for (String cl : classes) {\r\n+            respons.add(JobClassTO.instance(cl));\r\n+        }\r\n+        return respons;\r\n+    }\r\n+\r\n+    public static Set<SyncActionClassTO> wrapSyncActionClasses(Set<String> classes) {\r\n+        Set<SyncActionClassTO> respons = new HashSet<SyncActionClassTO>();\r\n+        for (String cl : classes) {\r\n+            respons.add(SyncActionClassTO.instance(cl));\r\n+        }\r\n+        return respons;\r\n+    }\r\n+\r\n+    public static List<AuditLoggerName> wrapLogger(List<LoggerTO> logger) {\r\n+        List<AuditLoggerName> respons = new ArrayList<AuditLoggerName>();\r\n+        for (LoggerTO l : logger) {\r\n+            try {\r\n+                respons.add(AuditLoggerName.fromLoggerName(l.getName()));\r\n+            } catch (Exception e) {\r\n+                //TODO log event\r\n+            }\r\n+        }\r\n+        return respons;\r\n+    }\r\n+\r\n+    public static List<String> unwrapJobClasses(List<JobClassTO> jobClasses) {\r\n+        List<String> respons = new ArrayList<String>();\r\n+        for (JobClassTO e : jobClasses) {\r\n+            respons.add(e.getName());\r\n+        }\r\n+        return respons;\r\n+    }\r\n+\r\n+    public static List<String> unwrapSyncActionClasses(List<SyncActionClassTO> actions) {\r\n+        List<String> respons = new ArrayList<String>();\r\n+        for (SyncActionClassTO e : actions) {\r\n+            respons.add(e.getName());\r\n+        }\r\n+        return respons;\r\n+    }\r\n }\r"},{"sha":"843f5f7b1c3c39d691b794725adb19850eba826b","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":28,"deletions":12,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=3b04f9c90bc24e5e3c8c2f21b1f38e61d9f2c211","patch":"@@ -21,8 +21,10 @@\n import static org.junit.Assert.assertNotNull;\n \n import java.net.URI;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.List;\n import java.util.UUID;\n \n import javax.sql.DataSource;\n@@ -64,13 +66,16 @@\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.validation.SyncopeClientErrorHandler;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n import org.junit.runners.Parameterized.Parameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.converter.HttpMessageConverter;\n+import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.TestContextManager;\n import org.springframework.web.client.RestTemplate;\n@@ -91,14 +96,20 @@ public abstract class AbstractTest {\n     protected static final String ADMIN_PWD = \"password\";\n \n     protected boolean activatedCXF;\n-    \n+\n     @Autowired\n     private RestTemplate restTemplate;\n \n+    @Autowired\n+    private MappingJacksonHttpMessageConverter mappingJacksonHttpMessageConverter;\n+\n+    @Autowired\n+    private PreemptiveAuthHttpRequestFactory httpClientFactory;\n+\n     protected String contentType;\n-    \n+\n     private TestContextManager testContextManager;\n-    \n+\n     @Autowired\n     protected JAXRSClientFactoryBean restClientFactory;\n \n@@ -132,11 +143,11 @@ public abstract class AbstractTest {\n     protected UserRequestService userRequestService;\n \n     protected PolicyService policyService;\n-    \n+\n     public AbstractTest(final String contentType) {\n         this.contentType = contentType;\n     }\n-    \n+\n     private void setupContext() throws Exception {\n         this.testContextManager = new TestContextManager(getClass());\n         this.testContextManager.prepareTestInstance(this);\n@@ -145,17 +156,17 @@ private void setupContext() throws Exception {\n     protected void activateCXF() {\n         activatedCXF = true;\n     }\n-    \n+\n     @Before\n     public void setup() throws Exception {\n         setupContext();\n         if (!activatedCXF) {\n-            resetRestTemplate(); \n+            resetRestTemplate();\n         } else {\n             setupCXFServices();\n         }\n     }\n-    \n+\n     // BEGIN Spring MVC Initialization\n     protected void setupRestTemplate(final String uid, final String pwd) {\n         PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n@@ -166,7 +177,12 @@ protected void setupRestTemplate(final String uid, final String pwd) {\n     }\n \n     protected RestTemplate anonymousRestTemplate() {\n-        return new RestTemplate();\n+        RestTemplate template = new RestTemplate(httpClientFactory);\n+        List<HttpMessageConverter<?>> converters = new ArrayList<HttpMessageConverter<?>>();\n+        converters.add(mappingJacksonHttpMessageConverter);\n+        template.setMessageConverters(converters);\n+        template.setErrorHandler(new SyncopeClientErrorHandler());\n+        return template;\n     }\n \n     protected void resetRestTemplate() {\n@@ -189,7 +205,7 @@ protected void resetRestTemplate() {\n     // END Spring MVC Initialization\n \n     // BEGIN CXF Initialization\n-    public void setupCXFServices() throws Exception { \n+    public void setupCXFServices() throws Exception {\n         setupContext();\n         restClientFactory.setUsername(ADMIN_UID);\n         userService = createServiceInstance(UserService.class);\n@@ -215,7 +231,7 @@ public void setupConentType(Client restClient) {\n     protected <T> T createServiceInstance(Class<T> serviceClass) {\n         return createServiceInstance(serviceClass, ADMIN_UID);\n     }\n-    \n+\n     protected <T> T createServiceInstance(Class<T> serviceClass, String username) {\n         return createServiceInstance(serviceClass, username, null);\n     }\n@@ -249,7 +265,7 @@ public <T> T getObjectSpring(final URI location, final Class<T> type) {\n         assertNotNull(location);\n         return restTemplate.getForEntity(location, type).getBody();\n     }\n-    \n+\n     public static <T> T resolveObjectCXF(final URI location, final Class<T> type, final Object serviceProxy) {\n         WebClient webClient = WebClient.fromClient(WebClient.client(serviceProxy));\n         webClient.to(location.toString(), false);"}]}