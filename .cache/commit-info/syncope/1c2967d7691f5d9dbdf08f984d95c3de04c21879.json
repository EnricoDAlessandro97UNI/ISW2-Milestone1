{"sha":"1c2967d7691f5d9dbdf08f984d95c3de04c21879","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFjMjk2N2Q3NjkxZjVkOWRiZGYwOGY5ODRkOTVjM2RlMDRjMjE4Nzk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-19T12:04:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-19T12:04:40Z"},"message":"[SYNCOPE-1458] Keymaster client API + Zookeeper-based implementation + REST-based implementation (as self-keymaster extension)","tree":{"sha":"1f8a66576744c826890d307fb30e9cde4f6ac14e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1f8a66576744c826890d307fb30e9cde4f6ac14e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1c2967d7691f5d9dbdf08f984d95c3de04c21879","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c2967d7691f5d9dbdf08f984d95c3de04c21879","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c2967d7691f5d9dbdf08f984d95c3de04c21879","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c2967d7691f5d9dbdf08f984d95c3de04c21879/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3"}],"stats":{"total":13228,"additions":3576,"deletions":9652},"files":[{"sha":"0f33c099d9f05c5af7716079b95af5396e3d47e6","filename":"client/idm/console/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidm%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidm%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -49,11 +49,6 @@ under the License.\n       <artifactId>syncope-client-idrepo-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.client.idrepo</groupId>\n-      <artifactId>syncope-client-idrepo-ui-commons</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-lib</artifactId>"},{"sha":"d35ffd790de63f81f9fcac0bfa027b68a760e5fb","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":12,"deletions":20,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -31,11 +31,9 @@\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.Application;\n@@ -44,9 +42,9 @@\n import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n import org.apache.wicket.protocol.ws.api.WebSocketRequestHandler;\n import org.apache.wicket.protocol.ws.api.message.TextMessage;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.util.CollectionUtils;\n \n public class TopologyWebSocketBehavior extends WebSocketBehavior {\n \n@@ -56,6 +54,9 @@ public class TopologyWebSocketBehavior extends WebSocketBehavior {\n \n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n+    @SpringBean\n+    private ConfParamOps confParamOps;\n+\n     private final Map<String, String> resources = Collections.<String, String>synchronizedMap(new HashMap<>());\n \n     private static final String CONNECTOR_TEST_TIMEOUT_PARAMETER = \"connector.test.timeout\";\n@@ -79,22 +80,13 @@ public class TopologyWebSocketBehavior extends WebSocketBehavior {\n     public TopologyWebSocketBehavior() {\n         // Handling with timeout as per SYNCOPE-1379\n         try {\n-            // Loop just to avoid NotFound exception raising on the Core side\n-            for (Attr param : new ConfRestClient().list()) {\n-                if (!CollectionUtils.isEmpty(param.getValues())) {\n-                    try {\n-                        if (CONNECTOR_TEST_TIMEOUT_PARAMETER.equalsIgnoreCase(param.getSchema())) {\n-                            connectorTestTimeout = Integer.parseInt(param.getValues().get(0));\n-                        } else if (RESOURCE_TEST_TIMEOUT_PARAMETER.equalsIgnoreCase(param.getSchema())) {\n-                            resourceTestTimeout = Integer.parseInt(param.getValues().get(0));\n-                        }\n-                    } catch (NumberFormatException e) {\n-                        LOG.warn(\"Invalid timeout {}\", param);\n-                    }\n-                }\n-            }\n-        } catch (SyncopeClientException e) {\n-            // ignore exception\n+            connectorTestTimeout = confParamOps.get(SyncopeConsoleSession.get().getDomain(),\n+                    CONNECTOR_TEST_TIMEOUT_PARAMETER, null, Integer.class);\n+            resourceTestTimeout = confParamOps.get(SyncopeConsoleSession.get().getDomain(),\n+                    RESOURCE_TEST_TIMEOUT_PARAMETER, null, Integer.class);\n+        } catch (Exception e) {\n+            LOG.debug(\"No {} or {} conf parameters found\",\n+                    CONNECTOR_TEST_TIMEOUT_PARAMETER, RESOURCE_TEST_TIMEOUT_PARAMETER, e);\n         }\n     }\n "},{"sha":"ce6baac3d5c42da1c9de7945381c4b7a0e863626","filename":"client/idrepo/common-ui/pom.xml","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -25,10 +25,10 @@ under the License.\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n  \n-  <name>Apache Syncope Client IdRepo UI Commons</name>\n-  <description>Apache Syncope Client IdRepo UI Commons</description>\n+  <name>Apache Syncope Client IdRepo Common UI</name>\n+  <description>Apache Syncope Client IdRepo Common UI</description>\n   <groupId>org.apache.syncope.client.idrepo</groupId>\n-  <artifactId>syncope-client-idrepo-ui-commons</artifactId>\n+  <artifactId>syncope-client-idrepo-common-ui</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -125,4 +125,4 @@ under the License.\n     </plugins>\n   </build>\n   \n-</project>\n\\ No newline at end of file\n+</project>","previous_filename":"client/idrepo/ui/pom.xml"},{"sha":"2ca0a67acd15a2e95bb4f3fb364e4074f1d63751","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/AbstractMIMETypesLoader.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FAbstractMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FAbstractMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FAbstractMIMETypesLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/AbstractMIMETypesLoader.java"},{"sha":"0e54d03c9c483ba7845d301fce0784d652e0bfc5","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/BaseLogin.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/BaseLogin.java"},{"sha":"279445d2693406710b5fb91d8d11b19454c9a009","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ConnIdSpecialName.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConnIdSpecialName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConnIdSpecialName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConnIdSpecialName.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ConnIdSpecialName.java"},{"sha":"6128a015ef2172f8fb109ecbc32edb46427bb6f3","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/Constants.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FConstants.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/Constants.java"},{"sha":"4ae2396a54aef0db5c8faa8855e5ea9aa9bdfb67","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/HttpResourceStream.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/HttpResourceStream.java"},{"sha":"79d6dfe1f45a7260444964135cb31e271a797b7c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/SchemaUtils.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSchemaUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSchemaUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSchemaUtils.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/SchemaUtils.java"},{"sha":"b9686bb7a07f408c8e865dedeff5c21baaedee1a","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/StyledNotificationBehavior.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FStyledNotificationBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FStyledNotificationBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FStyledNotificationBehavior.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/StyledNotificationBehavior.java"},{"sha":"1415eb671eab636a16c25f004096582cd2e5db9b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/SyncopeUIRequestCycleListener.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSyncopeUIRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSyncopeUIRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSyncopeUIRequestCycleListener.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/SyncopeUIRequestCycleListener.java"},{"sha":"1344a3a02e1deeb2717391402bf31c82b5a06197","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAjaxFormChoiceComponentUpdatingBehavior.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAjaxFormChoiceComponentUpdatingBehavior.java"},{"sha":"93b58565d6ff826a23f85fca849fa6365a570867","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAjaxFormComponentUpdatingBehavior.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormComponentUpdatingBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormComponentUpdatingBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAjaxFormComponentUpdatingBehavior.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAjaxFormComponentUpdatingBehavior.java"},{"sha":"bb660dd291adc39da862da2d6bd42b9eedca4455","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAutoCompleteBehavior.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/form/IndicatorAutoCompleteBehavior.java"},{"sha":"15a1d1c9b6c12d270a3acdf26569e4ff71e64bf8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/markup/html/IndicatorAjaxSubmitLink.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxSubmitLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxSubmitLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxSubmitLink.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/markup/html/IndicatorAjaxSubmitLink.java"},{"sha":"a8856496d144d0bd8a33e6aaae8a7a8162f315eb","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/markup/html/LabelInfo.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fajax%2Fmarkup%2Fhtml%2FLabelInfo.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/ajax/markup/html/LabelInfo.java"},{"sha":"3778accc62ba483ad55397372837bbf0d51e759f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/annotations/BinaryPreview.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fannotations%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fannotations%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fannotations%2FBinaryPreview.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/annotations/BinaryPreview.java"},{"sha":"50313ffc87c621604dd163d7954a4403e1abd522","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/layout/AbstractAnyFormLayout.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormLayout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormLayout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FAbstractAnyFormLayout.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/layout/AbstractAnyFormLayout.java"},{"sha":"21a1d6e1dfeb7560c01f14eaa7bcb74c28373305","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/layout/UserForm.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FUserForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FUserForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Flayout%2FUserForm.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/layout/UserForm.java"},{"sha":"f9c28787d5f17ac7fd689a3fce1374f1171ac9f9","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractFieldPanel.java"},{"sha":"46e81cb57ee76a6ec01acac2d53bfe1138c85dd2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractMultiPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractMultiPanel.java"},{"sha":"596d9b8130886a5ec0fd3d11c5fe02c964bdd7bf","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java"},{"sha":"3650353e1cf7267f690658647ff3d3ac6dcaab85","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDropDownChoicePanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDropDownChoicePanel.java"},{"sha":"c9771d1bd92eb403ad3e0b69a1af9644c5253e7c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPaletteConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPaletteConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPaletteConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPaletteConf.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPaletteConf.java"},{"sha":"e02066174c97bd87c5b1f80c62021af9eaec1fb4","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.java"},{"sha":"91588fce1027db73e376df07e60c7f9c03516faf","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.java"},{"sha":"da80826ef2a1a60dfb07149b9520bee6cbdd6c1f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.java"},{"sha":"76b02c0f935fce705d1c2cefbb7b8eb41942bdc0","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxTextFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxTextFieldPanel.java"},{"sha":"91a035b1a217fde5fe91901e9e2018c755581317","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/BaseBinaryFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/BaseBinaryFieldPanel.java"},{"sha":"922080b720342ed987afc19062c01b2c3bfcd673","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/DateFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/DateFieldPanel.java"},{"sha":"3386780d0344cd3a879281b506ad132e246669f0","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel.java"},{"sha":"cb01437a59ae5eee11b2b92e779eeb62e4251c74","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/FieldPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/FieldPanel.java"},{"sha":"224ff512997be374368f47b7727b9d619b786ae8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/NonI18nPalette.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/NonI18nPalette.java"},{"sha":"be4528dff368fe2b464c01d43e28012786730495","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/SelectChoiceRenderer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/SelectChoiceRenderer.java"},{"sha":"c6a30d9a8242b20463fa669ee368c4facd9de8f2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/SelectOption.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FSelectOption.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/SelectOption.java"},{"sha":"f684fb6ca7c947a1225408db0957fa8a47f8da42","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/AbstractBinaryPreviewer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/AbstractBinaryPreviewer.java"},{"sha":"74a81c1d86e36cf811586f18557a2e21bbe24a1d","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/DefaultPreviewer.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/DefaultPreviewer.java"},{"sha":"13ae622a4ed272c1fe689252fcd9e764edcb6cd7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/pages/BaseWebPage.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpages%2FBaseWebPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpages%2FBaseWebPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpages%2FBaseWebPage.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/pages/BaseWebPage.java"},{"sha":"ca6d266aaf300c06759cc6960977b2218d12fc9c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/LabelPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/LabelPanel.java"},{"sha":"f419adcb2f6dcf17c03b1bb2212a468c9e1d3b42","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/ModalPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FModalPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/ModalPanel.java"},{"sha":"45caf93b60e5ce2f1939a362879898f1e7d27b5c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/NotificationPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/NotificationPanel.java"},{"sha":"be87aaf4e6f537c84578127513b70f0a00af5cbc","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/SSOLoginFormPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSSOLoginFormPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/SSOLoginFormPanel.java"},{"sha":"4e802f219409ead145af3042c91224913607024a","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/SubmitableModalPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSubmitableModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSubmitableModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FSubmitableModalPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/SubmitableModalPanel.java"},{"sha":"05ebea98b8bfbf3c1b8e9d8df6e87574d65f476a","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/WizardModalPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FWizardModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FWizardModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FWizardModalPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/panels/WizardModalPanel.java"},{"sha":"803d0ef3ec032447239ca9f16e9abc0b8c71bd5f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/rest/RestClient.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FRestClient.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/rest/RestClient.java"},{"sha":"9ee0cbac5e70bd37d98f40606845ef2a64a8f53e","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/ConnObjectWrapper.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FConnObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FConnObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FConnObjectWrapper.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/status/ConnObjectWrapper.java"},{"sha":"9fe6e91f86c81fbf128c0b2c3bd6b544574b3d66","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/Status.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatus.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/status/Status.java"},{"sha":"6a2b714838a0cc6b5df3083c79b4cfd054d9c7a1","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusBean.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusBean.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusBean.java"},{"sha":"949cf37bb59815dadf63f7fd8d23067f6cc10f6c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusUtils.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusUtils.java"},{"sha":"150d86803451c97605b5de14ab1e5bd09eae7bb8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wicket/markup/html/bootstrap/tabs/Accordion.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wicket/markup/html/bootstrap/tabs/Accordion.java"},{"sha":"48e2fdb8619d77c1a1573522a2fc91561f3ab1f3","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AbstractModalPanelBuilder.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractModalPanelBuilder.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AbstractModalPanelBuilder.java"},{"sha":"7ed5447020e4569bc62e5d7d1b591d1813f2d7a8","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AbstractWizardMgtPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AbstractWizardMgtPanel.java"},{"sha":"0de1010f2f3766584868cab405be13dddc07855a","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -210,7 +210,7 @@ public final void onFinish() {\n                 send(eventSink, Broadcast.EXACT, new NewItemFinishEvent<>(item, target).setResult(res));\n             }\n         } catch (TimeoutException te) {\n-            LOG.warn(\"Operation applying took to long\", te);\n+            LOG.warn(\"Operation took too long\", te);\n             if (eventSink == null) {\n                 send(this, Broadcast.BUBBLE, new NewItemCancelEvent<>(item, target));\n             } else {\n@@ -377,7 +377,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n         try {\n             onApply(target);\n         } catch (TimeoutException te) {\n-            LOG.warn(\"Operation applying took to long\", te);\n+            LOG.warn(\"Operation took too long\", te);\n             send(eventSink, Broadcast.EXACT, new NewItemCancelEvent<>(item, target));\n             sendWarning(getString(\"timeout\"));\n             ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java"},{"sha":"ba9f1e077f194b7895eed4a1e23486fba740231b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java"},{"sha":"ce68be91a6820cea6f3a533e39b3440fdb3177ac","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardMgtButtonBar.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardMgtButtonBar.java"},{"sha":"e44afe936666426918dc6abbcc20bf12d98526ea","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/ModalPanelBuilder.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FModalPanelBuilder.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/ModalPanelBuilder.java"},{"sha":"ca349eb5ae523846bd30da526bf183209307a2e4","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractAnyWizardBuilder.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAnyWizardBuilder.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractAnyWizardBuilder.java"},{"sha":"4df345008fc3cabe241c4422b4cd62f89986b38b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractAuxClasses.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractAuxClasses.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractAuxClasses.java"},{"sha":"4e3e8a201fd81a0c3d2aaaa39537ec27b3245df3","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractGroups.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroups.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractGroups.java"},{"sha":"66d799f4c7e8c536d771b01a9360aad972bf85d9","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractGroupsModel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroupsModel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroupsModel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractGroupsModel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractGroupsModel.java"},{"sha":"7cab34406e2592038d2ac5971b92239c954133e1","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractResources.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractResources.java"},{"sha":"f26c0233ff9115695f62da7f250028cde8b4eb49","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AnyForm.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyForm.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AnyForm.java"},{"sha":"482b4975e1266dd426939b31f604f05644d3cbc0","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AnyWrapper.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAnyWrapper.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AnyWrapper.java"},{"sha":"6cf3087a8b87ed8d52e9a9438795cfa480f00561","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/PasswordPanel.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/PasswordPanel.java"},{"sha":"95cd9658576b25677f98701c26efdde68c0bdf3b","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/UserWrapper.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FUserWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FUserWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FUserWrapper.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/UserWrapper.java"},{"sha":"1223723a5a8c5c7469a906f307599bac3f7ff3d6","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/exception/CaptchaNotMatchingException.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fexception%2FCaptchaNotMatchingException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fexception%2FCaptchaNotMatchingException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fexception%2FCaptchaNotMatchingException.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/exception/CaptchaNotMatchingException.java"},{"sha":"b9fc0c56780f2c317787eb0d4364321a372f12d6","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility.scss"},{"sha":"7f9d2f38620c7e4c0b4141c37d6fd97d697e6472","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility/accessibilityFont.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityFont.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityFont.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityFont.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility/accessibilityFont.scss"},{"sha":"ababa9337517a9d0eb9872a1ed06fc418d549b69","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility/accessibilityHC.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityHC.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityHC.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Faccessibility%2FaccessibilityHC.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/accessibility/accessibilityHC.scss"},{"sha":"924b11f2efb6c44f2935263db6c5619a8b845bb2","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/animations.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fanimations.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fanimations.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fanimations.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/animations.scss"},{"sha":"17823cbe9986a0f413fa2ca0999efee6ca3b1ae8","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/batch.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fbatch.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fbatch.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fbatch.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/batch.scss"},{"sha":"da7bdf8ab9778929077e784f01429fb47f840f9f","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts.scss"},{"sha":"2132b5e2ad21e14896ec168ddd99035b05d48bc7","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff"},{"sha":"943f826f11c84b30c0918d045cfca66ec64b52db","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2"},{"sha":"aa25cd32c3e63b6b57395ef96129f329f796a08f","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff"},{"sha":"441997fceeec2083aa8a9f8405a54ffab860871a","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2"},{"sha":"24d28240ab6f2599574ff57433eba3933112e67f","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff"},{"sha":"9ec7d257b194d4efd4c06cbd56ccffb37f048e92","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2"},{"sha":"ce5a1cccaeb3442525fdf948fbcf2108982046f4","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff"},{"sha":"7ed2f82eaad288f8bbb66f86b9906f13acdaedca","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2"},{"sha":"9fbfe68ce855d8cbb32eb392fc22f8707ab91759","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff"},{"sha":"096dcb150e9589c39c239199741c97a213097b9c","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2"},{"sha":"c1cf1ea7861a760db5b516c1c889d1d7a1f66d5a","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff"},{"sha":"ff006be7822524e04919e0e7233574f3d85e01b7","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2"},{"sha":"e8a1ac774e4c4e932070d0b23a112535c88810c5","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff"},{"sha":"1b0bc4683bddcb51584a6ea942372d634cfa9bbf","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2"},{"sha":"1b7a626c4f5702e99cd6a36039e79355df361237","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/login.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Flogin.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Flogin.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Flogin.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/login.scss"},{"sha":"9f622d16a5681c5a73f6d36804f4173f5743d502","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/search.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fsearch.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fsearch.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Fsearch.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/search.scss"},{"sha":"656965f6abbf270e052c645cc9609d84c191a1c8","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/syncopeUI.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/syncopeUI.scss"},{"sha":"92f8ad0ba42fa2018598a8ea5a91c2d5723a95f7","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/topology.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ftopology.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ftopology.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Ftopology.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/topology.scss"},{"sha":"37b06437c6121f37129b75a81ce0bb7326827b2b","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/utils.scss","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Futils.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Futils.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2Futils.scss?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/css/utils.scss"},{"sha":"aa2f3e261dc2196acb47533eb43eff8a4946b8a1","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/img/favicon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Ffavicon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Ffavicon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Ffavicon.png?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/img/favicon.png"},{"sha":"c57b86c0951e86c8fcc635c74d51bc9e5f4bfd47","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/img/logo-green.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-green.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-green.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-green.png?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/img/logo-green.png"},{"sha":"fccd3aeaa93f2c1a630f7f334755aabd6e143efb","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/img/logo-mini.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-mini.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-mini.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo-mini.png?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/img/logo-mini.png"},{"sha":"f05105e2cc3bf3989c803e326b86874832b13b54","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/img/logo.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fimg%2Flogo.png?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/img/logo.png"},{"sha":"790e2b4ab07fb875fbb2e07af4163895d2924881","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/js/accessibility.js","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fjs%2Faccessibility.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fjs%2Faccessibility.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fjs%2Faccessibility.js?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/ui/src/main/resources/META-INF/resources/ui-commons/js/accessibility.js"},{"sha":"150d4f67b20c8290de71579f613dac5a3214f78a","filename":"client/idrepo/console/pom.xml","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -86,6 +86,12 @@ under the License.\n       <artifactId>wicket-bootstrap-extensions</artifactId>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.client.idrepo</groupId>\n       <artifactId>syncope-client-idrepo-lib</artifactId>\n@@ -94,7 +100,7 @@ under the License.\n \n     <dependency>\n       <groupId>org.apache.syncope.client.idrepo</groupId>\n-      <artifactId>syncope-client-idrepo-ui-commons</artifactId>      \n+      <artifactId>syncope-client-idrepo-common-ui</artifactId>      \n       <version>${project.version}</version>\n     </dependency>\n "},{"sha":"b5bd15e776cd90016b6ae3bdbee54a449a84c53e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchContent.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -55,7 +55,6 @@\n import org.apache.syncope.common.lib.types.ExecStatus;\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.StatusRType;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n@@ -387,7 +386,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     }\n                     ((BasePage) getPage()).getNotificationPanel().refresh(target);\n                 }\n-            }, action, IdRepoEntitlement.CONFIGURATION_LIST).hideLabel();\n+            }, action, null).hideLabel();\n         }\n     }\n }"},{"sha":"0998167055202ce509034e8a873d99bbad49b2ae","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n+import org.apache.syncope.client.console.rest.SyncopeRestClient;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n@@ -119,7 +119,8 @@ public BasePage(final PageParameters parameters) {\n             @Override\n             public void onClick() {\n                 try {\n-                    HttpResourceStream stream = new HttpResourceStream(new ConfRestClient().dbExport());\n+                    HttpResourceStream stream =\n+                            new HttpResourceStream(new SyncopeRestClient().exportInternalStorageContent());\n \n                     ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n                     rsrh.setFileName(stream.getFilename() == null\n@@ -135,7 +136,7 @@ public void onClick() {\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(\n-                dbExportLink, WebPage.RENDER, IdRepoEntitlement.CONFIGURATION_EXPORT);\n+                dbExportLink, WebPage.RENDER, IdRepoEntitlement.INTERNAL_STORAGE_EXPORT);\n         body.add(dbExportLink);\n \n         // menu\n@@ -251,7 +252,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"parameters\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"parameters\", Parameters.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, IdRepoEntitlement.CONFIGURATION_LIST);\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, IdRepoEntitlement.INTERNAL_STORAGE_EXPORT);\n         liContainer.add(link);\n \n         body.add(new AjaxLink<Void>(\"collapse\") {"},{"sha":"eddbe4840a8a99597baedee7215f31f5f613205d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,14 +20,11 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.syncope.common.lib.Attr;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -78,7 +75,7 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n                 setAllowOrder(true).\n                 setAllowMoveAll(true).\n                 build(\"plainSchemas\",\n-                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"plainSchemas\"),\n+                        new PropertyModel<>(this.anyTypeClassTO, \"plainSchemas\"),\n                         new ListModel<>(availablePlainSchemas));\n         plainSchema.hideLabel();\n         plainSchema.setOutputMarkupId(true);\n@@ -88,7 +85,7 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n                 setAllowOrder(true).\n                 setAllowMoveAll(true).\n                 build(\"derSchemas\",\n-                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"derSchemas\"),\n+                        new PropertyModel<>(this.anyTypeClassTO, \"derSchemas\"),\n                         new ListModel<>(availableDerSchemas));\n         derSchema.hideLabel();\n         derSchema.setOutputMarkupId(true);\n@@ -98,18 +95,14 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n                 setAllowOrder(true).\n                 setAllowMoveAll(true).\n                 build(\"virSchemas\",\n-                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"virSchemas\"),\n+                        new PropertyModel<>(this.anyTypeClassTO, \"virSchemas\"),\n                         new ListModel<>(availableVirSchemas));\n         virSchema.hideLabel();\n         virSchema.setOutputMarkupId(true);\n         container.add(virSchema);\n     }\n \n     private void buildAvailableSchemas(final String key) {\n-\n-        List<String> configurationSchemas = new ConfRestClient().list().stream().\n-                map(Attr::getSchema).collect(Collectors.toList());\n-\n         new AnyTypeClassRestClient().list().stream().\n                 filter(item -> key == null || !item.getKey().equals(key)).\n                 forEach(item -> {\n@@ -118,7 +111,6 @@ private void buildAvailableSchemas(final String key) {\n                     availableVirSchemas.removeAll(item.getVirSchemas());\n                 });\n \n-        availablePlainSchemas.removeAll(configurationSchemas);\n         availablePlainSchemas.removeAll(LAYOUT_PARAMETERS);\n     }\n }"},{"sha":"83ecbc2bb07c978706ee4a954f73384d03804df4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ConfParam.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ConfParam implements Serializable {\n+\n+    private static final long serialVersionUID = -9162995157523535429L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConfParam.class);\n+\n+    private String schema;\n+\n+    private final List<Serializable> values = new ArrayList<>();\n+\n+    private boolean multivalue;\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    public void setSchema(final String schema) {\n+        this.schema = schema;\n+    }\n+\n+    public List<Serializable> getValues() {\n+        return values;\n+    }\n+\n+    public Object valueAsObject() {\n+        return multivalue\n+                ? values\n+                : values.isEmpty()\n+                ? null\n+                : values.get(0);\n+    }\n+\n+    public void setValues(final Object value) {\n+        this.values.clear();\n+        if (value instanceof Collection) {\n+            this.values.addAll(((Collection<?>) value).stream().\n+                    filter(Serializable.class::isInstance).\n+                    map(Serializable.class::cast).\n+                    collect(Collectors.toList()));\n+            this.multivalue = true;\n+        } else {\n+            this.values.add((Serializable) value);\n+            this.multivalue = false;\n+        }\n+    }\n+\n+    public void setMultivalue(final boolean multivalue) {\n+        this.multivalue = multivalue;\n+    }\n+\n+    public boolean isMultivalue() {\n+        return multivalue;\n+    }\n+\n+    public boolean isInstance(final Class<?> clazz) {\n+        return !values.isEmpty() && clazz.isInstance(values.get(0));\n+    }\n+}"},{"sha":"34cfa5759f4a4c7fbc8433bea3fdc4baf8003e3b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateModalPanel.java","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,46 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.wicket.PageReference;\n-\n-public class ParametersCreateModalPanel extends AbstractModalPanel<Attr> {\n-\n-    private static final long serialVersionUID = 4024126489500665435L;\n-\n-    private final Attr attrTO;\n-\n-    public ParametersCreateModalPanel(\n-            final BaseModal<Attr> modal,\n-            final Attr attrTO,\n-            final PageReference pageRef) {\n-        super(modal, pageRef);\n-        this.attrTO = attrTO;\n-        add(new ParametersCreateWizardPanel(new ParametersCreateWizardPanel.ParametersForm(), pageRef).\n-                build(\"parametersCreateWizardPanel\", AjaxWizard.Mode.CREATE));\n-    }\n-\n-    @Override\n-    public final Attr getItem() {\n-        return this.attrTO;\n-    }\n-}"},{"sha":"de7fa2df0e15f5a16e5f8062ff13877004e12561","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.java","status":"removed","additions":0,"deletions":389,"changes":389,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,389 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.PropertyList;\n-import org.apache.syncope.client.console.init.MIMETypesLoader;\n-import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.common.lib.types.CipherAlgorithm;\n-import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-\n-public class ParametersCreateWizardSchemaStep extends WizardStep {\n-\n-    private static final long serialVersionUID = -7843275202297616553L;\n-\n-    @SpringBean\n-    private MIMETypesLoader mimeTypesLoader;\n-\n-    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n-\n-    private final MultiFieldPanel<String> enumerationValues;\n-\n-    private final MultiFieldPanel<String> enumerationKeys;\n-\n-    private final AjaxDropDownChoicePanel<String> validator;\n-\n-    public ParametersCreateWizardSchemaStep(final ParametersCreateWizardPanel.ParametersForm modelObject) {\n-        modelObject.getPlainSchemaTO().setMandatoryCondition(\"false\");\n-\n-        final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n-        this.setOutputMarkupId(true);\n-        content.setOutputMarkupId(true);\n-        add(content);\n-\n-        final AjaxDropDownChoicePanel<AttrSchemaType> type = new AjaxDropDownChoicePanel<>(\n-                \"type\", getString(\"type\"), new PropertyModel<>(modelObject.getPlainSchemaTO(), \"type\"));\n-        type.setChoices(Arrays.asList(AttrSchemaType.values()));\n-        content.add(type);\n-\n-        // long, double, date\n-        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n-                getString(\"conversionPattern\"), new PropertyModel<String>(\n-                modelObject.getPlainSchemaTO(), \"conversionPattern\"));\n-        content.add(conversionPattern);\n-\n-        final WebMarkupContainer conversionParams = new WebMarkupContainer(\"conversionParams\");\n-        conversionParams.setOutputMarkupPlaceholderTag(true);\n-        conversionParams.add(conversionPattern);\n-        content.add(conversionParams);\n-\n-        final WebMarkupContainer typeParams = new WebMarkupContainer(\"typeParams\");\n-        typeParams.setOutputMarkupPlaceholderTag(true);\n-\n-        // enum\n-        final AjaxTextFieldPanel enumerationValuesPanel = new AjaxTextFieldPanel(\"panel\", \"enumerationValues\",\n-                new Model<>(null));\n-\n-        enumerationValues = new MultiFieldPanel.Builder<String>(\n-                new PropertyModel<List<String>>(modelObject.getPlainSchemaTO(), \"enumerationValues\") {\n-\n-            private static final long serialVersionUID = -4953564762272833993L;\n-\n-            @Override\n-            public PropertyList<PlainSchemaTO> getObject() {\n-                return new PropertyList<PlainSchemaTO>() {\n-\n-                    @Override\n-                    public String getValues() {\n-                        return modelObject.getPlainSchemaTO().getEnumerationValues();\n-                    }\n-\n-                    @Override\n-                    public void setValues(final List<String> list) {\n-                        modelObject.getPlainSchemaTO().setEnumerationValues(getEnumValuesAsString(list));\n-                    }\n-                };\n-            }\n-\n-            @Override\n-            public void setObject(final List<String> object) {\n-                modelObject.getPlainSchemaTO().setEnumerationValues(PropertyList.getEnumValuesAsString(object));\n-            }\n-        }) {\n-\n-            private static final long serialVersionUID = -8752965211744734798L;\n-\n-            @Override\n-            protected String newModelObject() {\n-                return StringUtils.EMPTY;\n-            }\n-\n-        }.build(\n-                \"enumerationValues\",\n-                \"enumerationValues\",\n-                enumerationValuesPanel);\n-\n-        enumerationKeys = new MultiFieldPanel.Builder<String>(\n-                new PropertyModel<List<String>>(modelObject.getPlainSchemaTO(), \"enumerationKeys\") {\n-\n-            private static final long serialVersionUID = -4953564762272833993L;\n-\n-            @Override\n-            public PropertyList<PlainSchemaTO> getObject() {\n-                return new PropertyList<PlainSchemaTO>() {\n-\n-                    @Override\n-                    public String getValues() {\n-                        return modelObject.getPlainSchemaTO().getEnumerationKeys();\n-                    }\n-\n-                    @Override\n-                    public void setValues(final List<String> list) {\n-                        modelObject.getPlainSchemaTO().setEnumerationKeys(PropertyList.getEnumValuesAsString(list));\n-                    }\n-                };\n-            }\n-\n-            @Override\n-            public void setObject(final List<String> object) {\n-                modelObject.getPlainSchemaTO().setEnumerationKeys(PropertyList.getEnumValuesAsString(object));\n-            }\n-        }) {\n-\n-            private static final long serialVersionUID = -8752965211744734798L;\n-\n-            @Override\n-            protected String newModelObject() {\n-                return StringUtils.EMPTY;\n-            }\n-\n-        }.build(\n-                \"enumerationKeys\",\n-                \"enumerationKeys\",\n-                new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>()));\n-\n-        final WebMarkupContainer enumParams = new WebMarkupContainer(\"enumParams\");\n-        enumParams.setOutputMarkupPlaceholderTag(true);\n-        enumParams.add(enumerationValues);\n-        enumParams.add(enumerationKeys);\n-        typeParams.add(enumParams);\n-\n-        // encrypted\n-        final AjaxTextFieldPanel secretKey = new AjaxTextFieldPanel(\"secretKey\",\n-                getString(\"secretKey\"), new PropertyModel<>(modelObject.getPlainSchemaTO(), \"secretKey\"));\n-\n-        final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm = new AjaxDropDownChoicePanel<>(\n-                \"cipherAlgorithm\", getString(\"cipherAlgorithm\"),\n-                new PropertyModel<>(modelObject.getPlainSchemaTO(), \"cipherAlgorithm\"));\n-\n-        cipherAlgorithm.setChoices(Arrays.asList(CipherAlgorithm.values()));\n-\n-        final WebMarkupContainer encryptedParams = new WebMarkupContainer(\"encryptedParams\");\n-        encryptedParams.setOutputMarkupPlaceholderTag(true);\n-        encryptedParams.add(secretKey);\n-        encryptedParams.add(cipherAlgorithm);\n-\n-        typeParams.add(encryptedParams);\n-\n-        // binary\n-        final AjaxTextFieldPanel mimeType = new AjaxTextFieldPanel(\"mimeType\",\n-                getString(\"mimeType\"), new PropertyModel<>(modelObject.getPlainSchemaTO(), \"mimeType\"));\n-\n-        final WebMarkupContainer binaryParams = new WebMarkupContainer(\"binaryParams\");\n-        binaryParams.setOutputMarkupPlaceholderTag(true);\n-        binaryParams.add(mimeType);\n-        typeParams.add(binaryParams);\n-        content.add(typeParams);\n-\n-        // show or hide\n-        showHide(modelObject.getPlainSchemaTO(), type,\n-                conversionParams, conversionPattern,\n-                enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n-                encryptedParams, secretKey, cipherAlgorithm,\n-                binaryParams, mimeType);\n-\n-        type.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                ParametersCreateWizardSchemaStep.this.showHide(modelObject.getPlainSchemaTO(), type,\n-                        conversionParams, conversionPattern,\n-                        enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n-                        encryptedParams, secretKey, cipherAlgorithm,\n-                        binaryParams, mimeType);\n-                target.add(conversionParams);\n-                target.add(typeParams);\n-                target.add(validator);\n-            }\n-        });\n-\n-        IModel<List<String>> validators = new LoadableDetachableModel<List<String>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<String> load() {\n-                return implRestClient.list(IdRepoImplementationType.VALIDATOR).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n-            }\n-        };\n-        validator = new AjaxDropDownChoicePanel<>(\"validator\",\n-                getString(\"validator\"), new PropertyModel<>(modelObject.getPlainSchemaTO(), \"validator\"));\n-        validator.setOutputMarkupId(true);\n-        ((DropDownChoice) validator.getField()).setNullValid(true);\n-        validator.setChoices(validators.getObject());\n-        content.add(validator);\n-\n-        content.add(new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n-                new PropertyModel<>(modelObject.getPlainSchemaTO(), \"multivalue\")));\n-    }\n-\n-    private void showHide(final PlainSchemaTO schema, final AjaxDropDownChoicePanel<AttrSchemaType> type,\n-            final WebMarkupContainer conversionParams, final AjaxTextFieldPanel conversionPattern,\n-            final WebMarkupContainer enumParams, final AjaxTextFieldPanel enumerationValuesPanel,\n-            final MultiFieldPanel<String> enumerationValues, final MultiFieldPanel<String> enumerationKeys,\n-            final WebMarkupContainer encryptedParams,\n-            final AjaxTextFieldPanel secretKey, final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm,\n-            final WebMarkupContainer binaryParams, final AjaxTextFieldPanel mimeType) {\n-\n-        final int typeOrdinal = Integer.parseInt(type.getField().getValue());\n-        if (AttrSchemaType.Long.ordinal() == typeOrdinal\n-                || AttrSchemaType.Double.ordinal() == typeOrdinal\n-                || AttrSchemaType.Date.ordinal() == typeOrdinal) {\n-\n-            conversionParams.setVisible(true);\n-\n-            enumParams.setVisible(false);\n-            if (enumerationValuesPanel.isRequired()) {\n-                enumerationValuesPanel.removeRequiredLabel();\n-            }\n-            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n-\n-            encryptedParams.setVisible(false);\n-            if (secretKey.isRequired()) {\n-                secretKey.removeRequiredLabel();\n-            }\n-            secretKey.setModelObject(null);\n-            if (cipherAlgorithm.isRequired()) {\n-                cipherAlgorithm.removeRequiredLabel();\n-            }\n-            cipherAlgorithm.setModelObject(null);\n-\n-            binaryParams.setVisible(false);\n-            mimeType.setModelObject(null);\n-            mimeType.setChoices(null);\n-\n-            schema.setValidator(null);\n-        } else if (AttrSchemaType.Enum.ordinal() == typeOrdinal) {\n-            conversionParams.setVisible(false);\n-            conversionPattern.setModelObject(null);\n-\n-            enumParams.setVisible(true);\n-            if (!enumerationValuesPanel.isRequired()) {\n-                enumerationValuesPanel.addRequiredLabel();\n-            }\n-            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(schema.getEnumerationValues()));\n-            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(schema.getEnumerationKeys()));\n-\n-            encryptedParams.setVisible(false);\n-            if (secretKey.isRequired()) {\n-                secretKey.removeRequiredLabel();\n-            }\n-            secretKey.setModelObject(null);\n-            if (cipherAlgorithm.isRequired()) {\n-                cipherAlgorithm.removeRequiredLabel();\n-            }\n-            cipherAlgorithm.setModelObject(null);\n-\n-            binaryParams.setVisible(false);\n-            mimeType.setModelObject(null);\n-            mimeType.setChoices(null);\n-\n-            schema.setValidator(null);\n-        } else if (AttrSchemaType.Encrypted.ordinal() == typeOrdinal) {\n-            conversionParams.setVisible(false);\n-            conversionPattern.setModelObject(null);\n-\n-            enumParams.setVisible(false);\n-            if (enumerationValuesPanel.isRequired()) {\n-                enumerationValuesPanel.removeRequiredLabel();\n-            }\n-            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n-\n-            encryptedParams.setVisible(true);\n-            if (!secretKey.isRequired()) {\n-                secretKey.addRequiredLabel();\n-            }\n-            if (cipherAlgorithm.isRequired()) {\n-                cipherAlgorithm.addRequiredLabel();\n-            }\n-\n-            binaryParams.setVisible(false);\n-            mimeType.setModelObject(null);\n-            mimeType.setChoices(null);\n-            schema.setValidator(null);\n-        } else if (AttrSchemaType.Binary.ordinal() == typeOrdinal) {\n-            conversionParams.setVisible(false);\n-            conversionPattern.setModelObject(null);\n-\n-            enumParams.setVisible(false);\n-            if (enumerationValuesPanel.isRequired()) {\n-                enumerationValuesPanel.removeRequiredLabel();\n-            }\n-            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n-\n-            encryptedParams.setVisible(false);\n-            if (secretKey.isRequired()) {\n-                secretKey.removeRequiredLabel();\n-            }\n-            secretKey.setModelObject(null);\n-            if (cipherAlgorithm.isRequired()) {\n-                cipherAlgorithm.removeRequiredLabel();\n-            }\n-            cipherAlgorithm.setModelObject(null);\n-\n-            binaryParams.setVisible(true);\n-            mimeType.setChoices(mimeTypesLoader.getMimeTypes());\n-\n-            schema.setValidator(\"BinaryValidator\");\n-        } else {\n-            conversionParams.setVisible(false);\n-            conversionPattern.setModelObject(null);\n-\n-            enumParams.setVisible(false);\n-            if (enumerationValuesPanel.isRequired()) {\n-                enumerationValuesPanel.removeRequiredLabel();\n-            }\n-            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n-\n-            encryptedParams.setVisible(false);\n-            if (secretKey.isRequired()) {\n-                secretKey.removeRequiredLabel();\n-            }\n-            secretKey.setModelObject(null);\n-            if (cipherAlgorithm.isRequired()) {\n-                cipherAlgorithm.removeRequiredLabel();\n-            }\n-            cipherAlgorithm.setModelObject(null);\n-\n-            binaryParams.setVisible(false);\n-            mimeType.setModelObject(null);\n-            mimeType.setChoices(null);\n-            schema.setValidator(null);\n-        }\n-    }\n-}"},{"sha":"d4bbd11d4f1cc6ae95eafa8cffb99bfb890d18c8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"removed","additions":0,"deletions":188,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,188 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.ui.commons.SchemaUtils;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class ParametersDetailsPanel extends Panel {\n-\n-    private static final long serialVersionUID = 7708288006191496557L;\n-\n-    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-    private final AjaxTextFieldPanel schema;\n-\n-    public ParametersDetailsPanel(final String id, final Attr attrTO) {\n-        super(id);\n-\n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-\n-        container.setOutputMarkupId(true);\n-        add(container);\n-\n-        final Form<Attr> form = new Form<>(\"parametersForm\");\n-        form.setMarkupId(\"parametersForm\");\n-        form.setOutputMarkupId(true);\n-\n-        form.setModel(new CompoundPropertyModel<>(attrTO));\n-        container.add(form);\n-\n-        schema = new AjaxTextFieldPanel(\n-                \"schema\", getString(\"schema\"), new PropertyModel<>(attrTO, \"schema\"));\n-        schema.setEnabled(false);\n-        form.add(schema);\n-\n-        form.add(getFieldPanel(\"panel\", attrTO));\n-    }\n-\n-    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-    private Panel getFieldPanel(final String id, final Attr attrTO) {\n-        final String valueHeaderName = getString(\"values\");\n-\n-        final PlainSchemaTO schemaTO = schemaRestClient.read(SchemaType.PLAIN, attrTO.getSchema());\n-\n-        final FieldPanel panel;\n-        switch (schemaTO.getType()) {\n-            case Date:\n-                final String datePattern = schemaTO.getConversionPattern() == null\n-                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n-                        : schemaTO.getConversionPattern();\n-\n-                if (StringUtils.containsIgnoreCase(datePattern, \"H\")) {\n-                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), datePattern);\n-                } else {\n-                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), datePattern);\n-                }\n-                break;\n-            case Boolean:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n-                ((AjaxDropDownChoicePanel<String>) panel).setChoices(Arrays.asList(\"true\", \"false\"));\n-\n-                if (!attrTO.getValues().isEmpty()) {\n-                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-                        private static final long serialVersionUID = -3724971416312135885L;\n-\n-                        @Override\n-                        public String getDisplayValue(final String value) {\n-                            return value;\n-                        }\n-\n-                        @Override\n-                        public String getIdValue(final String value, final int i) {\n-                            return value;\n-                        }\n-\n-                        @Override\n-                        public String getObject(\n-                                final String id, final IModel<? extends List<? extends String>> choices) {\n-                            return id;\n-                        }\n-                    });\n-                }\n-                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(false);\n-                break;\n-            case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n-                ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n-\n-                if (!attrTO.getValues().isEmpty()) {\n-                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-                        private static final long serialVersionUID = -3724971416312135885L;\n-\n-                        @Override\n-                        public String getDisplayValue(final String value) {\n-                            return value;\n-                        }\n-\n-                        @Override\n-                        public String getIdValue(final String value, final int i) {\n-                            return value;\n-                        }\n-\n-                        @Override\n-                        public String getObject(\n-                                final String id, final IModel<? extends List<? extends String>> choices) {\n-                            return id;\n-                        }\n-                    });\n-                }\n-                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(\n-                        \"false\".equalsIgnoreCase(schemaTO.getMandatoryCondition()));\n-                break;\n-\n-            case Long:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n-                        .build(id, valueHeaderName, Long.class, new Model<>());\n-                break;\n-\n-            case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>()\n-                        .build(id, valueHeaderName, Double.class, new Model<>());\n-                break;\n-\n-            case Binary:\n-                panel = new BinaryFieldPanel(id, valueHeaderName, new Model<>(), schemaTO.getMimeType(),\n-                        schema.getModelObject());\n-                break;\n-\n-            case Encrypted:\n-                panel = new EncryptedFieldPanel(id, valueHeaderName, new Model<>(), true);\n-                break;\n-\n-            default:\n-                panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<>(), false);\n-        }\n-        if (schemaTO.isMultivalue()) {\n-            return new MultiFieldPanel.Builder<>(\n-                    new PropertyModel<List<String>>(attrTO, \"values\")).build(id, valueHeaderName, panel);\n-        } else {\n-            panel.setNewModel(attrTO.getValues());\n-        }\n-\n-        panel.setRequired(\"true\".equalsIgnoreCase(schemaTO.getMandatoryCondition()));\n-        return panel;\n-    }\n-}"},{"sha":"32f23e0b0d4b675ee5793e5ae09f7b8a9794792c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":53,"deletions":80,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -24,31 +24,24 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.rest.SyncopeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -59,68 +52,46 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class ParametersDirectoryPanel\n-        extends DirectoryPanel<Attr, Attr, ParametersDirectoryPanel.ParametersProvider, ConfRestClient> {\n+        extends DirectoryPanel<ConfParam, ConfParam, ParametersDirectoryPanel.ParametersProvider, SyncopeRestClient> {\n \n     private static final long serialVersionUID = 2765863608539154422L;\n \n-    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-    private final BaseModal<Attr> modalDetails = new BaseModal<Attr>(\"modalDetails\") {\n-\n-        private static final long serialVersionUID = 389935548143327858L;\n-\n-        @Override\n-        protected void onConfigure() {\n-            super.onConfigure();\n-            setFooterVisible(true);\n-        }\n-    };\n+    @SpringBean\n+    private ConfParamOps confParamOps;\n \n     public ParametersDirectoryPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<Attr, Attr, ConfRestClient>(new ConfRestClient(), pageRef) {\n+        super(id, new Builder<ConfParam, ConfParam, SyncopeRestClient>(new SyncopeRestClient(), pageRef) {\n \n             private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n-            protected WizardMgtPanel<Attr> newInstance(final String id, final boolean wizardInModal) {\n+            protected WizardMgtPanel<ConfParam> newInstance(final String id, final boolean wizardInModal) {\n                 throw new UnsupportedOperationException();\n             }\n         });\n \n         itemKeyFieldName = \"schema\";\n         disableCheckBoxes();\n \n-        modalDetails.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modalDetails.show(false);\n-                target.add(container);\n-            }\n-        });\n-        modalDetails.size(Modal.Size.Medium);\n-        addInnerObject(modalDetails);\n-\n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<Attr>(new Attr(), pageRef) {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<ConfParam>(new ConfParam(), pageRef) {\n \n             private static final long serialVersionUID = 1995192603527154740L;\n \n             @Override\n-            public WizardModalPanel<Attr> build(final String id, final int index, final AjaxWizard.Mode mode) {\n-                return new ParametersCreateModalPanel(modal, newModelObject(), pageRef);\n+            public WizardModalPanel<ConfParam> build(\n+                    final String id, final int index, final AjaxWizard.Mode mode) {\n+\n+                return new ParametersModalPanel(modal, newModelObject(), confParamOps, mode, pageRef);\n             }\n         }, true);\n         modal.size(Modal.Size.Medium);\n         initResultTable();\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, IdRepoEntitlement.CONFIGURATION_SET);\n     }\n \n-    public ParametersDirectoryPanel(final String id, final Builder<Attr, Attr, ConfRestClient> builder) {\n+    public ParametersDirectoryPanel(final String id, final Builder<ConfParam, ConfParam, SyncopeRestClient> builder) {\n         super(id, builder);\n     }\n \n@@ -140,28 +111,21 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     }\n \n     @Override\n-    protected List<IColumn<Attr, String>> getColumns() {\n-        final List<IColumn<Attr, String>> columns = new ArrayList<>();\n+    protected List<IColumn<ConfParam, String>> getColumns() {\n+        final List<IColumn<ConfParam, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n-        columns.add(new PropertyColumn<Attr, String>(new ResourceModel(\"values\"), \"values\") {\n+        columns.add(new PropertyColumn<ConfParam, String>(new ResourceModel(\"values\"), \"values\") {\n \n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<Attr>> item,\n+                    final Item<ICellPopulator<ConfParam>> item,\n                     final String componentId,\n-                    final IModel<Attr> rowModel) {\n+                    final IModel<ConfParam> rowModel) {\n \n-                PlainSchemaTO schema = null;\n-                try {\n-                    schema = schemaRestClient.read(SchemaType.PLAIN, rowModel.getObject().getSchema());\n-                } catch (Exception e) {\n-                    LOG.error(\"Could not read conf schema {}\", rowModel.getObject().getSchema(), e);\n-                }\n-                AttrSchemaType type = schema == null ? null : schema.getType();\n-                if (type == AttrSchemaType.Binary || type == AttrSchemaType.Encrypted) {\n-                    item.add(new Label(componentId, type.name()).\n+                if (rowModel.getObject().getValues().toString().length() > 96) {\n+                    item.add(new Label(componentId, getString(\"tooLong\")).\n                             add(new AttributeModifier(\"style\", \"font-style:italic\")));\n                 } else {\n                     super.populateItem(item, componentId, rowModel);\n@@ -172,32 +136,33 @@ public void populateItem(\n     }\n \n     @Override\n-    public ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n-        final ActionsPanel<Attr> panel = super.getActions(model);\n+    public ActionsPanel<ConfParam> getActions(final IModel<ConfParam> model) {\n+        final ActionsPanel<ConfParam> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<ConfParam>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n-                target.add(modalDetails);\n-                modalDetails.addSubmitButton();\n-                modalDetails.header(new StringResourceModel(\"any.edit\"));\n-                modalDetails.setContent(new ParametersEditModalPanel(modalDetails, model.getObject(), pageRef));\n-                modalDetails.show(true);\n+            public void onClick(final AjaxRequestTarget target, final ConfParam ignore) {\n+                target.add(modal);\n+                // modal.addSubmitButton();\n+                modal.header(new StringResourceModel(\"any.edit\"));\n+                modal.setContent(new ParametersModalPanel(\n+                        modal, model.getObject(), confParamOps, AjaxWizard.Mode.EDIT, pageRef));\n+                modal.show(true);\n             }\n-        }, ActionLink.ActionType.EDIT, IdRepoEntitlement.CONFIGURATION_SET);\n+        }, ActionLink.ActionType.EDIT, null);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<ConfParam>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n+            public void onClick(final AjaxRequestTarget target, final ConfParam ignore) {\n                 try {\n-                    restClient.delete(model.getObject().getSchema());\n-                    schemaRestClient.deletePlainSchema(model.getObject().getSchema());\n+                    confParamOps.remove(SyncopeConsoleSession.get().getDomain(), model.getObject().getSchema());\n+\n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);\n                 } catch (Exception e) {\n@@ -207,16 +172,16 @@ public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        }, ActionLink.ActionType.DELETE, IdRepoEntitlement.CONFIGURATION_DELETE, true);\n+        }, ActionLink.ActionType.DELETE, null, true);\n \n         return panel;\n     }\n \n-    protected final class ParametersProvider extends DirectoryDataProvider<Attr> {\n+    protected final class ParametersProvider extends DirectoryDataProvider<ConfParam> {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n-        private final SortableDataProviderComparator<Attr> comparator;\n+        private final SortableDataProviderComparator<ConfParam> comparator;\n \n         private ParametersProvider(final int paginatorRows) {\n             super(paginatorRows);\n@@ -225,19 +190,27 @@ private ParametersProvider(final int paginatorRows) {\n         }\n \n         @Override\n-        public Iterator<Attr> iterator(final long first, final long count) {\n-            final List<Attr> list = restClient.list();\n+        public Iterator<ConfParam> iterator(final long first, final long count) {\n+            List<ConfParam> list = confParamOps.list(SyncopeConsoleSession.get().getDomain()).entrySet().stream().\n+                    skip(first).limit(count).\n+                    map(entry -> {\n+                        ConfParam param = new ConfParam();\n+                        param.setSchema(entry.getKey());\n+                        param.setValues(entry.getValue());\n+                        return param;\n+                    }).collect(Collectors.toList());\n+\n             Collections.sort(list, comparator);\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n+            return list.iterator();\n         }\n \n         @Override\n         public long size() {\n-            return restClient.list().size();\n+            return confParamOps.list(SyncopeConsoleSession.get().getDomain()).size();\n         }\n \n         @Override\n-        public IModel<Attr> model(final Attr object) {\n+        public IModel<ConfParam> model(final ConfParam object) {\n             return new CompoundPropertyModel<>(object);\n         }\n     }"},{"sha":"7aa0a75dba362123b29890ea06b1e32923e93ab0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersEditModalPanel.java","status":"removed","additions":0,"deletions":68,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,68 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-\n-public class ParametersEditModalPanel extends AbstractModalPanel<Attr> {\n-\n-    private static final long serialVersionUID = 4024126489500665435L;\n-\n-    private final Attr attr;\n-\n-    private final ConfRestClient restClient = new ConfRestClient();\n-\n-    public ParametersEditModalPanel(\n-            final BaseModal<Attr> modal,\n-            final Attr attr,\n-            final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        this.attr = attr;\n-        add(new ParametersDetailsPanel(\"parametersDetailsPanel\", getItem()));\n-    }\n-\n-    @Override\n-    public final Attr getItem() {\n-        return this.attr;\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target) {\n-        try {\n-            restClient.set(attr);\n-            modal.close(target);\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating conf prarameter\", e);\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                    ? e.getClass().getName()\n-                    : e.getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-}"},{"sha":"3d32ed150473ced1daa28e610ccccf24763be20f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersModalPanel.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.wicket.PageReference;\n+\n+public class ParametersModalPanel extends AbstractModalPanel<ConfParam> {\n+\n+    private static final long serialVersionUID = 4024126489500665435L;\n+\n+    private final ParametersWizardPanel.ParametersForm form;\n+\n+    public ParametersModalPanel(\n+            final BaseModal<ConfParam> modal,\n+            final ConfParam param,\n+            final ConfParamOps confParamOps,\n+            final AjaxWizard.Mode mode,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+\n+        PlainSchemaTO schema = new PlainSchemaTO();\n+        if (param.getSchema() != null) {\n+            if (param.isInstance(Boolean.class)) {\n+                schema.setType(AttrSchemaType.Boolean);\n+            } else if (param.isInstance(Integer.class) || param.isInstance(Long.class)) {\n+                schema.setType(AttrSchemaType.Long);\n+            } else if (param.isInstance(Float.class) || param.isInstance(Double.class)) {\n+                schema.setType(AttrSchemaType.Double);\n+            } else {\n+                schema.setType(AttrSchemaType.String);\n+            }\n+            schema.setMultivalue(param.isMultivalue());\n+            schema.setMimeType(MediaType.APPLICATION_OCTET_STREAM);\n+        }\n+        form = new ParametersWizardPanel.ParametersForm(schema, param);\n+\n+        add(new ParametersWizardPanel(form, confParamOps, pageRef).build(\"parametersCreateWizardPanel\", mode));\n+    }\n+\n+    @Override\n+    public final ConfParam getItem() {\n+        return this.form.getParam();\n+    }\n+}"},{"sha":"6d296c39cab8b09a9efa63f753aaea44e93598a9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardAttrStep.java","status":"renamed","additions":34,"deletions":79,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,18 +20,16 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.client.ui.commons.SchemaUtils;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.BooleanUtils;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -44,43 +42,42 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n-public class ParametersCreateWizardAttrStep extends WizardStep {\n+public class ParametersWizardAttrStep extends WizardStep {\n \n     private static final long serialVersionUID = -7843275202297616553L;\n \n     private final AjaxTextFieldPanel schema;\n \n-    public ParametersCreateWizardAttrStep(final ParametersCreateWizardPanel.ParametersForm modelObject) {\n+    public ParametersWizardAttrStep(final ParametersWizardPanel.ParametersForm modelObject) {\n         this.setOutputMarkupId(true);\n \n-        final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n         add(content);\n \n         schema = new AjaxTextFieldPanel(\n-                \"schema\", getString(\"schema\"), new PropertyModel<>(modelObject.getAttr(), \"schema\"));\n+                \"schema\", getString(\"schema\"), new PropertyModel<>(modelObject.getParam(), \"schema\"));\n         schema.setRequired(true);\n         content.add(schema);\n \n-        final LoadableDetachableModel<List<PlainSchemaTO>> loadableDetachableModel =\n+        LoadableDetachableModel<List<PlainSchemaTO>> loadableDetachableModel =\n                 new LoadableDetachableModel<List<PlainSchemaTO>>() {\n \n             private static final long serialVersionUID = 7172461137064525667L;\n \n             @Override\n             protected List<PlainSchemaTO> load() {\n-                return Arrays.asList(modelObject.getPlainSchemaTO());\n+                return Arrays.asList(modelObject.getSchema());\n             }\n-\n         };\n \n-        final ListView<PlainSchemaTO> listView = new ListView<PlainSchemaTO>(\"attrs\", loadableDetachableModel) {\n+        ListView<PlainSchemaTO> listView = new ListView<PlainSchemaTO>(\"attrs\", loadableDetachableModel) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<PlainSchemaTO> item) {\n-                final Panel panel = getFieldPanel(\"panel\", modelObject.getAttr(), item.getModelObject());\n+                final Panel panel = getFieldPanel(\"panel\", modelObject.getParam(), item.getModelObject());\n                 item.add(panel);\n             }\n         };\n@@ -89,111 +86,69 @@ protected void populateItem(final ListItem<PlainSchemaTO> item) {\n     }\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-    private Panel getFieldPanel(final String id, final Attr attrTO, final PlainSchemaTO plainSchemaTO) {\n+    private Panel getFieldPanel(final String id, final ConfParam param, final PlainSchemaTO plainSchemaTO) {\n         final String valueHeaderName = getString(\"values\");\n \n         final FieldPanel panel;\n         switch (plainSchemaTO.getType()) {\n             case Date:\n-                final String dataPattern = plainSchemaTO.getConversionPattern() == null\n-                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n-                        : plainSchemaTO.getConversionPattern();\n-\n-                if (dataPattern.contains(\"H\")) {\n-                    panel = new AjaxDateTimeFieldPanel(\n-                            id, valueHeaderName, new Model<>(), dataPattern);\n-                } else {\n-                    panel = new AjaxDateFieldPanel(\n-                            \"panel\", valueHeaderName, new Model<>(), dataPattern);\n-                }\n+                panel = new AjaxDateTimeFieldPanel(\n+                        id, valueHeaderName, new Model<>(), SyncopeConstants.DEFAULT_DATE_PATTERN);\n                 break;\n \n             case Boolean:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n-                ((AjaxDropDownChoicePanel<String>) panel).setChoices(Arrays.asList(\"true\", \"false\"));\n-\n-                if (!attrTO.getValues().isEmpty()) {\n-                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+                panel = new AjaxDropDownChoicePanel<Boolean>(id, valueHeaderName, new Model<>(), false);\n+                ((AjaxDropDownChoicePanel<Boolean>) panel).setChoices(Arrays.asList(true, false));\n \n-                        private static final long serialVersionUID = -3724971416312135885L;\n+                if (!param.getValues().isEmpty()) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<Boolean>() {\n \n-                        @Override\n-                        public String getDisplayValue(final String value) {\n-                            return value;\n-                        }\n+                        private static final long serialVersionUID = -8223314361351275865L;\n \n                         @Override\n-                        public String getIdValue(final String value, final int i) {\n-                            return value;\n+                        public Object getDisplayValue(final Boolean object) {\n+                            return BooleanUtils.toStringTrueFalse(object);\n                         }\n \n                         @Override\n-                        public String getObject(\n-                                final String id, final IModel<? extends List<? extends String>> choices) {\n-                            return id;\n-                        }\n-                    });\n-                }\n-                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(false);\n-                break;\n-\n-            case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n-                ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(plainSchemaTO));\n-\n-                if (!attrTO.getValues().isEmpty()) {\n-                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-                        private static final long serialVersionUID = -3724971416312135885L;\n-\n-                        @Override\n-                        public String getDisplayValue(final String value) {\n-                            return value;\n+                        public String getIdValue(final Boolean object, final int index) {\n+                            return BooleanUtils.toStringTrueFalse(object);\n                         }\n \n                         @Override\n-                        public String getIdValue(final String value, final int i) {\n-                            return value;\n-                        }\n+                        public Boolean getObject(\n+                                final String id, final IModel<? extends List<? extends Boolean>> choices) {\n \n-                        @Override\n-                        public String getObject(\n-                                final String id, final IModel<? extends List<? extends String>> choices) {\n-                            return id;\n+                            return BooleanUtils.toBoolean(id);\n                         }\n                     });\n                 }\n-                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(\n-                        \"true\".equalsIgnoreCase(plainSchemaTO.getMandatoryCondition()));\n+                ((AjaxDropDownChoicePanel<Boolean>) panel).setNullValid(false);\n                 break;\n \n             case Long:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n-                        .build(id, valueHeaderName, Long.class, new Model<>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>().\n+                        build(id, valueHeaderName, Long.class, new Model<>());\n                 break;\n \n             case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>()\n-                        .build(id, valueHeaderName, Double.class, new Model<>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().\n+                        build(id, valueHeaderName, Double.class, new Model<>());\n                 break;\n \n             case Binary:\n-                panel = new BinaryFieldPanel(id, valueHeaderName, new Model<>(), plainSchemaTO.getMimeType(),\n-                        schema.getModelObject());\n-                break;\n-\n-            case Encrypted:\n-                panel = new EncryptedFieldPanel(id, valueHeaderName, new Model<>(), true);\n+                panel = new BinaryFieldPanel(id, valueHeaderName, new Model<>(),\n+                        MediaType.APPLICATION_OCTET_STREAM, schema.getModelObject());\n                 break;\n \n             default:\n                 panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<>(), false);\n         }\n         if (plainSchemaTO.isMultivalue()) {\n             return new MultiFieldPanel.Builder<>(\n-                    new PropertyModel<>(attrTO, \"values\")).build(id, valueHeaderName, panel);\n+                    new PropertyModel<>(param, \"values\")).build(id, valueHeaderName, panel);\n         } else {\n-            panel.setNewModel(attrTO.getValues());\n+            panel.setNewModel(param.getValues());\n         }\n \n         panel.setRequired(\"true\".equalsIgnoreCase(plainSchemaTO.getMandatoryCondition()));","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java"},{"sha":"043ba145aaa883e9f1f77f8a83187642ef42d968","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardPanel.java","status":"renamed","additions":27,"deletions":26,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,32 +19,30 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n-import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n-public class ParametersCreateWizardPanel extends BaseAjaxWizardBuilder<ParametersCreateWizardPanel.ParametersForm> {\n+public class ParametersWizardPanel extends BaseAjaxWizardBuilder<ParametersWizardPanel.ParametersForm> {\n \n     private static final long serialVersionUID = -2868592590785581481L;\n \n-    private final ConfRestClient confRestClient = new ConfRestClient();\n+    private final ConfParamOps confParamOps;\n \n-    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+    public ParametersWizardPanel(\n+            final ParametersForm defaultItem, final ConfParamOps confParamOps, final PageReference pageRef) {\n \n-    public ParametersCreateWizardPanel(final ParametersForm defaultItem, final PageReference pageRef) {\n         super(defaultItem, pageRef);\n-\n+        this.confParamOps = confParamOps;\n     }\n \n     @Override\n     protected WizardModel buildModelSteps(final ParametersForm modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new ParametersCreateWizardSchemaStep(modelObject));\n-        wizardModel.add(new ParametersCreateWizardAttrStep(modelObject));\n+        wizardModel.add(new ParametersWizardSchemaStep(modelObject));\n+        wizardModel.add(new ParametersWizardAttrStep(modelObject));\n         return wizardModel;\n     }\n \n@@ -55,35 +53,38 @@ protected void onCancelInternal(final ParametersForm modelObject) {\n \n     @Override\n     protected Serializable onApplyInternal(final ParametersForm modelObject) {\n-        final PlainSchemaTO plainSchemaTO = modelObject.getPlainSchemaTO();\n-        plainSchemaTO.setKey(modelObject.getAttr().getSchema());\n-\n-        schemaRestClient.create(SchemaType.PLAIN, plainSchemaTO);\n+        modelObject.getParam().setMultivalue(modelObject.getSchema().isMultivalue());\n         try {\n-            confRestClient.set(modelObject.getAttr());\n+            confParamOps.set(\n+                    SyncopeConsoleSession.get().getDomain(),\n+                    modelObject.getParam().getSchema(),\n+                    modelObject.getParam().valueAsObject());\n         } catch (Exception e) {\n-            LOG.error(\"While setting {}, removing {}\", modelObject.getAttr(), plainSchemaTO, e);\n-            schemaRestClient.deletePlainSchema(plainSchemaTO.getKey());\n-\n+            LOG.error(\"While setting {}\", modelObject.getParam(), e);\n             throw e;\n         }\n-        return modelObject.getAttr();\n+        return modelObject.getParam();\n     }\n \n     public static class ParametersForm implements Serializable {\n \n         private static final long serialVersionUID = 412294016850871853L;\n \n-        private final PlainSchemaTO plainSchemaTO = new PlainSchemaTO();\n+        private final PlainSchemaTO schema;\n \n-        private final Attr attr = new Attr();\n+        private final ConfParam param;\n+\n+        public ParametersForm(final PlainSchemaTO schema, final ConfParam param) {\n+            this.schema = schema;\n+            this.param = param;\n+        }\n \n-        public PlainSchemaTO getPlainSchemaTO() {\n-            return plainSchemaTO;\n+        public PlainSchemaTO getSchema() {\n+            return schema;\n         }\n \n-        public Attr getAttr() {\n-            return attr;\n+        public ConfParam getParam() {\n+            return param;\n         }\n     }\n }","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java"},{"sha":"5973c4bf502d33d1f5172301e227a825dbf71eaf","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.Arrays;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class ParametersWizardSchemaStep extends WizardStep {\n+\n+    private static final long serialVersionUID = -7843275202297616553L;\n+\n+    public ParametersWizardSchemaStep(final ParametersWizardPanel.ParametersForm modelObject) {\n+        modelObject.getSchema().setMandatoryCondition(\"false\");\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        this.setOutputMarkupId(true);\n+        content.setOutputMarkupId(true);\n+        add(content);\n+\n+        AjaxDropDownChoicePanel<AttrSchemaType> type = new AjaxDropDownChoicePanel<>(\n+                \"type\", getString(\"type\"), new PropertyModel<>(modelObject.getSchema(), \"type\"));\n+        type.setChoices(Arrays.asList(\n+                AttrSchemaType.String, AttrSchemaType.Long, AttrSchemaType.Double,\n+                AttrSchemaType.Boolean, AttrSchemaType.Date, AttrSchemaType.Binary));\n+        content.add(type);\n+\n+        content.add(new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n+                new PropertyModel<>(modelObject.getSchema(), \"multivalue\")));\n+    }\n+}"},{"sha":"09627f4de00d1935e96fdc69bf8048420d887735","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":2,"deletions":20,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,23 +28,20 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SchemaTypePanel.SchemaProvider;\n-import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.PageReference;\n@@ -215,8 +212,6 @@ protected final class SchemaProvider extends DirectoryDataProvider<SchemaTO> {\n \n         private final SchemaType schemaType;\n \n-        private final ConfRestClient confRestClient = new ConfRestClient();\n-\n         private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n             super(paginatorRows);\n \n@@ -225,30 +220,17 @@ private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n-        private List<SchemaTO> getSchemas() {\n-            List<SchemaTO> schemas = restClient.getSchemas(this.schemaType, keyword);\n-\n-            if (SchemaType.PLAIN == this.schemaType) {\n-                List<String> configurations = confRestClient.list().stream().\n-                        map(Attr::getSchema).collect(Collectors.toList());\n-\n-                schemas.removeIf(schema -> configurations.contains(schema.getKey()));\n-            }\n-\n-            return schemas;\n-        }\n-\n         @Override\n         public Iterator<SchemaTO> iterator(final long first, final long count) {\n-            List<SchemaTO> schemas = getSchemas();\n+            List<SchemaTO> schemas = restClient.getSchemas(this.schemaType, keyword);\n             Collections.sort(schemas, comparator);\n \n             return schemas.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return getSchemas().size();\n+            return restClient.getSchemas(this.schemaType, keyword).size();\n         }\n \n         @Override"},{"sha":"c4c6dbbb76dc9d87a7a45d66e70d640039148a6a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -176,6 +176,8 @@ protected String getTargetKey(final Serializable modelObject) {\n             key = ((AnyObjectTO) ((AnyWrapper) modelObject).getInnerObject()).getKey();\n         } else if (modelObject instanceof Attr) {\n             key = ((Attr) modelObject).getSchema();\n+        } else if (modelObject instanceof ConfParam) {\n+            key = ((ConfParam) modelObject).getSchema();\n         } else if (modelObject instanceof StatusBean) {\n             key = StringUtils.isNotBlank(((StatusBean) modelObject).getResource())\n                     ? ((StatusBean) modelObject).getResource() : ((StatusBean) modelObject).getKey();"},{"sha":"364f09e01fffe8fc79a20085b784be680e52feab","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/ConfRestClient.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfRestClient.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.rest;\n-\n-import java.util.List;\n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-\n-public class ConfRestClient extends BaseRestClient {\n-\n-    private static final long serialVersionUID = 7692363064029538722L;\n-\n-    public Attr get(final String key) {\n-        return getService(ConfigurationService.class).get(key);\n-    }\n-    \n-    public List<Attr> list() {\n-        return getService(ConfigurationService.class).list();\n-    }\n-\n-    public void set(final Attr attrTO) {\n-        getService(ConfigurationService.class).set(attrTO);\n-    }\n-\n-    public void delete(final String key) {\n-        getService(ConfigurationService.class).delete(key);\n-    }\n-\n-    public Response dbExport() {\n-        return getService(ConfigurationService.class).export();\n-    }\n-}"},{"sha":"3e0dce2e38a7c2be132092de7656dad3390e5e2a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/SyncopeRestClient.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSyncopeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSyncopeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSyncopeRestClient.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.info.NumbersInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n@@ -34,4 +35,7 @@ public SystemInfo system() {\n         return getService(SyncopeService.class).system();\n     }\n \n+    public Response exportInternalStorageContent() {\n+        return getService(SyncopeService.class).exportInternalStorageContent();\n+    }\n }"},{"sha":"50ff5305255829e2e282bc1be1c4978a6072b209","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -22,6 +22,7 @@\n import java.io.Serializable;\n import java.util.UUID;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.ConfParam;\n import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.policies.PolicyRuleWrapper;\n@@ -90,6 +91,8 @@ public void updateHeader(final AjaxRequestTarget target, final Serializable mode\n             header = ((ReportTO) modelObject).getName();\n         } else if (modelObject instanceof Attr) {\n             header = ((Attr) modelObject).getSchema();\n+        } else if (modelObject instanceof ConfParam) {\n+            header = ((ConfParam) modelObject).getSchema();\n         } else if (modelObject instanceof PolicyTO) {\n             header = ((PolicyTO) modelObject).getDescription();\n         } else if (modelObject instanceof SecurityQuestionTO) {"},{"sha":"21d5a0e51868bde31ae48b0aa32f77c119b16e1d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,6 +28,7 @@\n import java.io.ByteArrayInputStream;\n import java.util.ArrayList;\n import java.util.Base64;\n+import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n@@ -156,7 +157,6 @@ public String build() {\n             protected HttpResourceStream getResourceStream() {\n                 return new HttpResourceStream(buildResponse());\n             }\n-\n         };\n \n         add(fileDownload);\n@@ -250,7 +250,9 @@ public String getAjaxIndicatorMarkupId() {\n \n     private Response buildResponse() {\n         return Response.ok(new ByteArrayInputStream(Base64.getMimeDecoder().decode(getModelObject()))).\n-                type(StringUtils.isBlank(mimeType) ? MediaType.APPLICATION_OCTET_STREAM : mimeType).build();\n+                type(StringUtils.isBlank(mimeType) ? MediaType.APPLICATION_OCTET_STREAM : mimeType).\n+                header(HttpHeaders.LOCATION, StringUtils.EMPTY).\n+                build();\n     }\n \n     private void changePreviewer(final Component panelPreview) {"},{"sha":"8e44a8524c32701e1c9196eb05431a84a6a0a1dd","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -70,7 +70,7 @@ intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to gr\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementations\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"9682b4b76797dcd692130c2c42e5c8f70860df0d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -70,7 +70,7 @@ intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to gr\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementa\\u00e7\\u00f5es\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"71708ba97ac8082507cc16d998cbc1ed66776200","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -69,7 +69,7 @@ intAttrNameInfo.help=\\u041f\\u043e\\u043c\\u0438\\u043c\\u043e \\u0430\\u0432\\u0442\\u04\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=\\u0420\\u0435\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"a18efd1502d68626729446837ad116acd2176cf4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.html","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,47 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div wicket:id=\"content\">\n-      <span wicket:id=\"type\">[type]</span>\n-\n-      <div wicket:id=\"conversionParams\">\n-        <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n-      </div>\n-\n-      <div wicket:id=\"typeParams\">\n-        <div wicket:id=\"enumParams\">\n-          <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n-          <span wicket:id=\"enumerationKeys\">[enumerationKeys]</span>\n-        </div>\n-        <div wicket:id=\"encryptedParams\">\n-          <span wicket:id=\"secretKey\">[secretKey]</span>\n-          <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n-        </div>\n-        <div wicket:id=\"binaryParams\">\n-          <span wicket:id=\"mimeType\">[mimeType]</span>\n-        </div>\n-      </div>\n-\n-      <span wicket:id=\"validator\">[validator]</span>\n-\n-      <span wicket:id=\"multivalue\">[multivalue]</span>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"daeefebbb58379e2c25360d417a1efb5c83cb160","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel.html","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.html?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,34 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span wicket:id=\"container\">\n-      <div class=\"form-group\">\n-        <form wicket:id=\"parametersForm\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"schema\">[schema]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"panel\">[panel]</span>\n-          </div>\n-        </form>\n-      </div>\n-    </span>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"3f835e1dc102678f8d90dbfdfdd5e94075f606a6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel_ru.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel_ru.properties?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-# key=Идентификатор\n-key=\\u0418\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\n-# content=Содержимое\n-content=\\u0421\\u043e\\u0434\\u0435\\u0440\\u0436\\u0438\\u043c\\u043e\\u0435\n-# values=Значения\n-values=\\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f"},{"sha":"b4dd675f7a863469113dabcac74517a48d870104","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,3 +19,4 @@ any.new=New Parameter\n values=Values\n readonly=Readonly\n any.edit=Edit parameter\n+tooLong=Value too long to be displayed"},{"sha":"2c0a04f2f69484f856d5497eb808e5ca45f20952","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,3 +19,4 @@ any.new=Nuovo parametro\n values=Valori\n readonly=Readonly\n any.edit=Aggiorna parametro\n+tooLong=Valore troppo lungo per essere mostrato"},{"sha":"f36f1ee43253458780ecef8773e7b5e0fd3a56fe","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ja.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,3 +19,4 @@ any.new=\\u65b0\\u3057\\u3044\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc\n values=\\u5024\n readonly=\\u8aad\\u307f\\u53d6\\u308a\\u5c02\\u7528\n any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc\\u3092\\u7de8\\u96c6\n+tooLong=Value too long to be displayed"},{"sha":"017cf2ac00618b59b7519759225e601fb055ce0f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,3 +19,4 @@ any.new=Novo par\\u00e2metro\n values=Valores\n readonly=Somente Leitura\n any.edit=Editar par\\u00e2metro\n+tooLong=Value too long to be displayed"},{"sha":"d5509959b10d81520981cc517bdba8249bcd547e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_ru.properties","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -15,13 +15,14 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# any.edit=Изменить параметр ${key}\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080 ${key}\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440 ${key}\n-# any.new=Создать параметр\n+# any.new=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\n-# values=Значения\n+# values=\\u00d0\\u0097\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n values=\\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f\n-# readonly=Только чтение\n+# readonly=\\u00d0\\u00a2\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00ba\\u00d0\\u00be \\u00d1\\u0087\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n readonly=\\u0422\\u043e\\u043b\\u044c\\u043a\\u043e \\u0447\\u0442\\u0435\\u043d\\u0438\\u0435\n-# any.edit=Изменить параметр\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\n+tooLong=Value too long to be displayed"},{"sha":"4ce1ac97759f9f3b9ad4ed3b893423d314f89793","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersModalPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersModalPanel.html?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateModalPanel.html"},{"sha":"457965612d4f19ce9c14d0658d8645855d0b7296","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizard.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizard.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizard.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizard.html?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizard.html"},{"sha":"dd7f053487f77fccf93d4d2c0394327c6049fce0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.html?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.html"},{"sha":"a5d6d02af54a67abf13ba105a48e3b12eaaef0da","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.properties"},{"sha":"0d21d01b6c5f0d49ef8cbc248e3d9c91dcefdccf","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_it.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep_it.properties"},{"sha":"b07ae500264a3afbd70768e55d511501cfd7c4b5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ja.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep_ja.properties"},{"sha":"71c959b7685b68378cee9a5a36872a070d3700ae","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_pt_BR.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep_pt_BR.properties"},{"sha":"7b19ed0204f620165a56e1147a9c389dbaac7d3f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardAttrStep_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep_ru.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep_ru.properties"},{"sha":"bbd7fbe9f8a4a43847c32f35cc69720e6a9ece8c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep.html","status":"renamed","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.html?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -17,7 +17,11 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <div wicket:id=\"modalDetails\"/>\n-  </wicket:extend>\n-</html>\n+  <wicket:panel>\n+    <div wicket:id=\"content\">\n+      <span wicket:id=\"type\">[type]</span>\n+\n+      <span wicket:id=\"multivalue\">[multivalue]</span>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.html"},{"sha":"c778ac4f3fa5329b98134d9ccd6dcfeff8ad83fc","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.properties"},{"sha":"b76d4608525541ead3611bdcd1717703df9bd2cb","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_it.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep_it.properties"},{"sha":"a7467ae7639979687f9da18ed2a835198508b995","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ja.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep_ja.properties"},{"sha":"cfd7c932858deedc61804d8471b074aaaf342113","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_pt_BR.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep_pt_BR.properties"},{"sha":"b48bb24184c599170a774601a7eb0254fed25aa8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersWizardSchemaStep_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardSchemaStep_ru.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep_ru.properties"},{"sha":"2621f856234319af1876747dd16b816c84fd1834","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -94,7 +94,7 @@ under the License.\n     \n     <dependency>\n       <groupId>org.apache.syncope.client.idrepo</groupId>\n-      <artifactId>syncope-client-idrepo-ui-commons</artifactId>      \n+      <artifactId>syncope-client-idrepo-common-ui</artifactId>      \n       <version>${project.version}</version>\n     </dependency>\n \n@@ -281,4 +281,4 @@ under the License.\n       </build>\n     </profile>\n   </profiles>\n-</project>\n\\ No newline at end of file\n+</project>"},{"sha":"eb79cb9a7823ce08faa36205de1c5d2e07a7e24e","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/SyncopeWebApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -71,7 +71,7 @@ intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to gr\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementations\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"2b60968fd12b3d01f20f334d045357a9cbcd4bcc","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/SyncopeWebApplication_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_pt_BR.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -70,7 +70,7 @@ intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to gr\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementa\\u00e7\\u00f5es\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"d374ab07b6a6ca3ed1876ecd798723f66034eb0b","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/SyncopeWebApplication_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication_ru.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -69,7 +69,7 @@ intAttrNameInfo.help=\\u041f\\u043e\\u043c\\u0438\\u043c\\u043e \\u0430\\u0432\\u0442\\u04\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=\\u0420\\u0435\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\n \n-timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+timeout=Operation is taking too long: it will be executed in background. Please check later for the result (errors won't be triggered).\n security=Security\n before=Before\n after=After"},{"sha":"2305c14c3b5306658416528d0d567c20106d936e","filename":"client/idrepo/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/client%2Fidrepo%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -41,6 +41,6 @@ under the License.\n     <module>lib</module>\n     <module>console</module>\n     <module>enduser</module>\n-    <module>ui</module>\n+    <module>common-ui</module>\n   </modules>\n </project>"},{"sha":"60a520498de5c8ce0f246a4fe8670a027d6fe1db","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/PlatformInfo.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -173,8 +173,6 @@ public class PersistenceInfo implements Serializable {\n \n         private String anyObjectDAO;\n \n-        private String confDAO;\n-\n         public String getEntityFactory() {\n             return entityFactory;\n         }\n@@ -238,20 +236,14 @@ public String getAnyObjectDAO() {\n         public void setAnyObjectDAO(final String anyObjectDAO) {\n             this.anyObjectDAO = anyObjectDAO;\n         }\n-\n-        public String getConfDAO() {\n-            return confDAO;\n-        }\n-\n-        public void setConfDAO(final String confDAO) {\n-            this.confDAO = confDAO;\n-        }\n     }\n \n     private String version;\n \n     private String buildNumber;\n \n+    private String keymasterConfParamOps;\n+\n     private final ProvisioningInfo provisioningInfo = new ProvisioningInfo();\n \n     private final WorkflowInfo workflowInfo = new WorkflowInfo();\n@@ -290,6 +282,10 @@ public String getBuildNumber() {\n         return buildNumber;\n     }\n \n+    public String getKeymasterConfParamOps() {\n+        return keymasterConfParamOps;\n+    }\n+\n     public ProvisioningInfo getProvisioningInfo() {\n         return provisioningInfo;\n     }\n@@ -391,6 +387,10 @@ public void setBuildNumber(final String buildNumber) {\n         this.buildNumber = buildNumber;\n     }\n \n+    public void setKeymasterConfParamOps(final String keymasterConfParamOps) {\n+        this.keymasterConfParamOps = keymasterConfParamOps;\n+    }\n+\n     public void setSelfRegAllowed(final boolean selfRegAllowed) {\n         this.selfRegAllowed = selfRegAllowed;\n     }"},{"sha":"56850cc7b290a390506581e201cfe8dafbfada1f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/IdRepoEntitlement.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -132,15 +132,7 @@ public final class IdRepoEntitlement {\n \n     public static final String GROUP_DELETE = \"GROUP_DELETE\";\n \n-    public static final String CONFIGURATION_EXPORT = \"CONFIGURATION_EXPORT\";\n-\n-    public static final String CONFIGURATION_LIST = \"CONFIGURATION_LIST\";\n-\n-    public static final String CONFIGURATION_GET = \"CONFIGURATION_GET\";\n-\n-    public static final String CONFIGURATION_SET = \"CONFIGURATION_SET\";\n-\n-    public static final String CONFIGURATION_DELETE = \"CONFIGURATION_DELETE\";\n+    public static final String INTERNAL_STORAGE_EXPORT = \"INTERNAL_STORAGE_EXPORT\";\n \n     public static final String TASK_LIST = \"TASK_LIST\";\n "},{"sha":"414f86dffa631bd746bff2b77f27d924413a6c6b","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"removed","additions":0,"deletions":108,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,108 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.rest.api.service;\n-\n-import io.swagger.v3.oas.annotations.Parameter;\n-import io.swagger.v3.oas.annotations.enums.ParameterIn;\n-import io.swagger.v3.oas.annotations.media.Schema;\n-import io.swagger.v3.oas.annotations.responses.ApiResponse;\n-import io.swagger.v3.oas.annotations.responses.ApiResponses;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n-import io.swagger.v3.oas.annotations.tags.Tag;\n-import java.util.List;\n-import javax.validation.constraints.NotNull;\n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.PUT;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-\n-/**\n- * REST operations for configuration.\n- */\n-@Tag(name = \"Configuration\")\n-@SecurityRequirements({\n-    @SecurityRequirement(name = \"BasicAuthentication\"),\n-    @SecurityRequirement(name = \"Bearer\") })\n-@Path(\"configurations\")\n-public interface ConfigurationService extends JAXRSService {\n-\n-    /**\n-     * Exports internal storage content as downloadable XML file.\n-     *\n-     * @return internal storage content as downloadable XML file\n-     */\n-    @GET\n-    @Path(\"stream\")\n-    Response export();\n-\n-    /**\n-     * Returns all configuration parameters.\n-     *\n-     * @return all configuration parameters\n-     */\n-    @GET\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<Attr> list();\n-\n-    /**\n-     * Returns configuration parameter with matching schema.\n-     *\n-     * @param schema identifier of configuration to be read\n-     * @return configuration parameter with matching schema\n-     */\n-    @GET\n-    @Path(\"{schema}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    Attr get(@NotNull @PathParam(\"schema\") String schema);\n-\n-    /**\n-     * Creates / updates the configuration parameter with the given schema.\n-     *\n-     * @param value parameter value\n-     */\n-    @Parameter(name = \"schema\", description = \"Configuration schema\", in = ParameterIn.PATH, schema =\n-            @Schema(type = \"string\"))\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @PUT\n-    @Path(\"{schema}\")\n-    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void set(@NotNull Attr value);\n-\n-    /**\n-     * Deletes the configuration parameter with matching schema.\n-     *\n-     * @param schema configuration parameter schema\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @DELETE\n-    @Path(\"{schema}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"schema\") String schema);\n-}"},{"sha":"695dc049e88fdf5325b083da960266268a0026b5","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -173,4 +173,13 @@ PagedResult<GroupTO> searchAssignableGroups(\n     @Path(\"/userTypeExtension/{groupName}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     TypeExtensionTO readUserTypeExtension(@NotNull @PathParam(\"groupName\") String groupName);\n+\n+    /**\n+     * Exports internal storage content as downloadable XML file.\n+     *\n+     * @return internal storage content as downloadable XML file\n+     */\n+    @GET\n+    @Path(\"internalStorage/stream\")\n+    Response exportInternalStorageContent();\n }"},{"sha":"284deec3a3aa924b800f88d2eda25d3fe81a54b9","filename":"common/keymaster/client-api/pom.xml","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.common</groupId>\n+    <artifactId>syncope-common-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Common Keymaster Client API</name>\n+  <description>Apache Syncope Common Keymaster Client API</description>\n+  <groupId>org.apache.syncope.common.keymaster</groupId>\n+  <artifactId>syncope-common-keymaster-client-api</artifactId>\n+  <packaging>jar</packaging>\n+\n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.idrepo</groupId>\n+      <artifactId>syncope-common-idrepo-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-beans</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"547e04c6815fdfd2906ef8190b6a283fdb3a833b","filename":"common/keymaster/client-api/src/main/java/org/apache/syncope/common/keymaster/client/api/ConfParamOps.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.api;\n+\n+import java.util.Map;\n+\n+/**\n+ * Operations available for configuration parameters, managed by the configured Keymaster(s).\n+ */\n+public interface ConfParamOps {\n+\n+    Map<String, Object> list(String domain);\n+\n+    <T> T get(String domain, String key, T defaultValue, Class<T> reference);\n+\n+    <T> void set(String domain, String key, T value);\n+\n+    void remove(String domain, String key);\n+}"},{"sha":"8c8bec4e8d7e310920fcf7df07a0dfaed0740307","filename":"common/keymaster/client-api/src/main/java/org/apache/syncope/common/keymaster/client/api/KeymasterException.java","status":"renamed","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterException.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -16,17 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.data;\n+package org.apache.syncope.common.keymaster.client.api;\n \n-import java.util.List;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n+public class KeymasterException extends RuntimeException {\n \n-public interface ConfigurationDataBinder {\n+    private static final long serialVersionUID = 3007656743901867906L;\n \n-    Attr getAttr(CPlainAttr attr);\n-\n-    List<Attr> getConf();\n-\n-    CPlainAttr getAttr(Attr attr);\n+    public KeymasterException(final Throwable cause) {\n+        super(cause);\n+    }\n }","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/ConfigurationDataBinder.java"},{"sha":"d3883e47c66bc4d918c67a0567d824c9288309ef","filename":"common/keymaster/client-zookeeper/pom.xml","status":"added","additions":146,"deletions":0,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,146 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.common</groupId>\n+    <artifactId>syncope-common-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Common Keymaster Client Zookeeper</name>\n+  <description>Apache Syncope Common Keymaster Client Zookeeper</description>\n+  <groupId>org.apache.syncope.common.keymaster</groupId>\n+  <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n+  <packaging>jar</packaging>\n+\n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.curator</groupId>\n+      <artifactId>curator-framework</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.zookeeper</groupId>\n+      <artifactId>zookeeper</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-autoconfigure</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-databind</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-test</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+      \n+      <plugin>\n+        <groupId>io.fabric8</groupId>\n+        <artifactId>docker-maven-plugin</artifactId>\n+        <configuration>\n+          <images>\n+            <image>\n+              <name>zookeeper:${zookeeper.version}</name>\n+              <run>\n+                <ports>\n+                  <port>2181:2181</port>\n+                </ports>\n+                <volumes>\n+                  <bind>\n+                    <volume>${project.build.outputDirectory}/zoo.cfg:/conf/zoo.cfg</volume>\n+                    <volume>${project.build.outputDirectory}/java.env:/conf/java.env</volume>\n+                    <volume>${project.build.outputDirectory}/server-jaas.conf:/conf/server-jaas.conf</volume>\n+                    <volume>${project.build.outputDirectory}/client-jaas.conf:/conf/client-jaas.conf</volume>\n+                  </bind>\n+                </volumes>\n+              </run>\n+            </image>\n+          </images>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>start-zookeeper</id>\n+            <phase>pre-integration-test</phase>\n+            <goals>\n+              <goal>start</goal>\n+            </goals>\n+          </execution>\n+          <execution>\n+            <id>stop-zookeeper</id>\n+            <phase>post-integration-test</phase>\n+            <goals>\n+              <goal>stop</goal>\n+              <goal>remove</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-failsafe-plugin</artifactId>\n+        <inherited>true</inherited>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"0fbcc27992f1aac4d8bf2f7122ad964356d3c82f","filename":"common/keymaster/client-zookeeper/src/main/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperConfParamOps.java","status":"added","additions":114,"deletions":0,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import org.apache.curator.framework.CuratorFramework;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n+import org.apache.zookeeper.KeeperException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * Implements {@link ConfParamOps} via Apache Curator / Zookeeper.\n+ */\n+public class ZookeeperConfParamOps implements ConfParamOps {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConfParamOps.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private static final String CONF_PATH = \"/conf\";\n+\n+    @Autowired\n+    private CuratorFramework client;\n+\n+    private String buildConfPath(final String... parts) {\n+        return CONF_PATH + \"/\" + String.join(\"/\", parts);\n+    }\n+\n+    @Override\n+    public Map<String, Object> list(final String domain) {\n+        try {\n+            if (client.checkExists().forPath(buildConfPath(domain)) == null) {\n+                client.create().creatingParentContainersIfNeeded().forPath(buildConfPath(domain));\n+            }\n+\n+            Map<String, Object> list = new TreeMap<>();\n+            for (String child : client.getChildren().forPath(buildConfPath(domain))) {\n+                JsonNode node = MAPPER.readTree(client.getData().forPath(buildConfPath(domain, child)));\n+                list.put(child, MAPPER.treeToValue(node, Object.class));\n+            }\n+\n+            return list;\n+        } catch (Exception e) {\n+            throw new KeymasterException(e);\n+        }\n+    }\n+\n+    @Override\n+    public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n+        T value = null;\n+        try {\n+            JsonNode node = MAPPER.readTree(client.getData().forPath(buildConfPath(domain, key)));\n+            value = MAPPER.treeToValue(node, reference);\n+        } catch (KeeperException.NoNodeException e) {\n+            LOG.debug(\"Node {} was not found\", buildConfPath(domain, key));\n+        } catch (Exception e) {\n+            LOG.error(\"While reading {}\", buildConfPath(domain, key), e);\n+            throw new KeymasterException(e);\n+        }\n+\n+        return value == null ? defaultValue : value;\n+    }\n+\n+    @Override\n+    public <T> void set(final String domain, final String key, final T value) {\n+        if (value == null) {\n+            remove(domain, key);\n+        } else {\n+            try {\n+                if (client.checkExists().forPath(buildConfPath(domain, key)) == null) {\n+                    client.create().creatingParentContainersIfNeeded().forPath(buildConfPath(domain, key));\n+                }\n+\n+                MAPPER.writeValueAsBytes(value);\n+\n+                client.setData().forPath(buildConfPath(domain, key), MAPPER.writeValueAsBytes(value));\n+            } catch (Exception e) {\n+                LOG.error(\"While writing {}\", buildConfPath(domain, key), e);\n+                throw new KeymasterException(e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void remove(final String domain, final String key) {\n+        try {\n+            client.delete().forPath(buildConfPath(domain, key));\n+        } catch (Exception e) {\n+            throw new KeymasterException(e);\n+        }\n+    }\n+}"},{"sha":"e42bc6dd53178ee7211691b842364071d763ce91","filename":"common/keymaster/client-zookeeper/src/main/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperKeymasterClientContext.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+import javax.security.auth.login.AppConfigurationEntry;\n+import org.apache.curator.framework.CuratorFramework;\n+import org.apache.curator.framework.CuratorFrameworkFactory;\n+import org.apache.curator.framework.api.ACLProvider;\n+import org.apache.curator.retry.ExponentialBackoffRetry;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.zookeeper.ZooDefs;\n+import org.apache.zookeeper.data.ACL;\n+import org.apache.zookeeper.server.auth.DigestLoginModule;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+\n+@PropertySource(\"classpath:keymaster.properties\")\n+@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n+@Configuration\n+public class ZookeeperKeymasterClientContext {\n+\n+    @Value(\"${keymaster.address}\")\n+    private String address;\n+\n+    @Value(\"${keymaster.username}\")\n+    private String username;\n+\n+    @Value(\"${keymaster.password}\")\n+    private String password;\n+\n+    @Value(\"${keymaster.baseSleepTimeMs:100}\")\n+    private Integer baseSleepTimeMs;\n+\n+    @Value(\"${keymaster.maxRetries:3}\")\n+    private Integer maxRetries;\n+\n+    private javax.security.auth.login.Configuration createJaasConfig() {\n+        return new javax.security.auth.login.Configuration() {\n+\n+            private final AppConfigurationEntry[] entries = {\n+                new AppConfigurationEntry(\n+                DigestLoginModule.class.getName(),\n+                AppConfigurationEntry.LoginModuleControlFlag.REQUIRED,\n+                Map.of(\n+                \"username\", username,\n+                \"password\", password\n+                ))\n+            };\n+\n+            @Override\n+            public AppConfigurationEntry[] getAppConfigurationEntry(final String name) {\n+                return entries;\n+            }\n+        };\n+    }\n+\n+    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^(?!http).+'}\")\n+    @Bean\n+    public CuratorFramework curatorFramework() throws InterruptedException {\n+        javax.security.auth.login.Configuration.setConfiguration(createJaasConfig());\n+\n+        CuratorFramework client = CuratorFrameworkFactory.builder().\n+                connectString(address).\n+                retryPolicy(new ExponentialBackoffRetry(baseSleepTimeMs, maxRetries)).\n+                authorization(\"digest\", (username).getBytes()).\n+                aclProvider(new ACLProvider() {\n+\n+                    @Override\n+                    public List<ACL> getDefaultAcl() {\n+                        return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                    }\n+\n+                    @Override\n+                    public List<ACL> getAclForPath(final String path) {\n+                        return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                    }\n+                }).build();\n+        client.start();\n+        client.blockUntilConnected(3, TimeUnit.SECONDS);\n+\n+        return client;\n+    }\n+\n+    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^(?!http).+'}\")\n+    @Bean\n+    public ConfParamOps selfConfParamOps() {\n+        return new ZookeeperConfParamOps();\n+    }\n+}"},{"sha":"2b97b750673459c90efa50d8d7521bde12aef5bf","filename":"common/keymaster/client-zookeeper/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.common.keymaster.client.zookeper.ZookeeperKeymasterClientContext"},{"sha":"c7e79c2f663afffd39d5d5b6ecce9e66890a8eba","filename":"common/keymaster/client-zookeeper/src/main/resources/client-jaas.conf","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fclient-jaas.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fclient-jaas.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fclient-jaas.conf?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+Client {\n+  org.apache.zookeeper.server.auth.DigestLoginModule required\n+  username=\"${anonymousUser}\"\n+  password=\"${anonymousKey}\";\n+};"},{"sha":"4dca1d34f68c81d44b110ef6a6969a49df453e70","filename":"common/keymaster/client-zookeeper/src/main/resources/java.env","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fjava.env","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fjava.env","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fjava.env?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+export CLIENT_JVMFLAGS=\"-Djava.security.auth.login.config=/conf/client-jaas.conf\"\n+export SERVER_JVMFLAGS=\"-Djava.security.auth.login.config=/conf/server-jaas.conf\"\n\\ No newline at end of file"},{"sha":"f374d8ca3a94d0370aa4ab93b5ad8897eb4e944b","filename":"common/keymaster/client-zookeeper/src/main/resources/keymaster.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Key\n-content=Content\n-values=Values\n+keymaster.address=127.0.0.1:2181\n+keymaster.username=${anonymousUser}\n+keymaster.password=${anonymousKey}","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel.properties"},{"sha":"f65c52aed59c1a958b2c4d2174b220de3d19fd42","filename":"common/keymaster/client-zookeeper/src/main/resources/server-jaas.conf","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fserver-jaas.conf","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fserver-jaas.conf","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fserver-jaas.conf?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+Server {\n+  org.apache.zookeeper.server.auth.DigestLoginModule required\n+  user_${anonymousUser}=\"${anonymousKey}\";\n+};"},{"sha":"2be7d4fc0a145f569d26b698d36ce55afd074b3a","filename":"common/keymaster/client-zookeeper/src/main/resources/zoo.cfg","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fzoo.cfg","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fzoo.cfg","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fresources%2Fzoo.cfg?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+clientPort=2181\n+dataDir=/data\n+dataLogDir=/datalog\n+tickTime=2000\n+initLimit=5\n+syncLimit=2\n+autopurge.snapRetainCount=3\n+autopurge.purgeInterval=0\n+maxClientCnxns=60\n+requireClientAuthScheme=sasl\n+authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider"},{"sha":"075debd6fe326a8cd11f93dc7765c72cd281f99f","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperConfParamOpsITCase.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperConfParamOpsITCase.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n+\n+@SpringJUnitConfig(classes = { ZookeeperKeymasterClientContext.class, ZookeeperTestContext.class })\n+public class ZookeeperConfParamOpsITCase {\n+\n+    public static final String DOMAIN = \"domain\";\n+\n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n+    @Test\n+    public void list() {\n+        Map<String, Object> confParams = confParamOps.list(DOMAIN);\n+        assertNotNull(confParams);\n+        assertFalse(confParams.isEmpty());\n+    }\n+\n+    @Test\n+    public void get() {\n+        String stringValue = confParamOps.get(DOMAIN, \"password.cipher.algorithm\", null, String.class);\n+        assertNotNull(stringValue);\n+        assertEquals(\"SSHA256\", stringValue);\n+\n+        Long longValue = confParamOps.get(DOMAIN, \"jwt.lifetime.minutes\", null, Long.class);\n+        assertNotNull(longValue);\n+        assertEquals(120L, longValue.longValue());\n+\n+        Double doubleValue = confParamOps.get(DOMAIN, \"double.value\", null, Double.class);\n+        assertNotNull(doubleValue);\n+        assertEquals(0.5, doubleValue.doubleValue());\n+\n+        Date dateValue = confParamOps.get(DOMAIN, \"date.value\", null, Date.class);\n+        assertNotNull(dateValue);\n+        assertEquals(new Date(1554982140000L), dateValue);\n+\n+        Boolean booleanValue = confParamOps.get(DOMAIN, \"return.password.value\", null, Boolean.class);\n+        assertNotNull(booleanValue);\n+        assertEquals(false, booleanValue);\n+\n+        List<String> stringValues =\n+                Arrays.asList(confParamOps.get(DOMAIN, \"authentication.attributes\", null, String[].class));\n+        assertNotNull(stringValues);\n+        ArrayList<String> actualStringValues = new ArrayList<>();\n+        actualStringValues.add(\"created\");\n+        actualStringValues.add(\"active\");\n+        assertEquals(actualStringValues, stringValues);\n+    }\n+\n+    @Test\n+    public void setGetRemove() {\n+        String key = UUID.randomUUID().toString();\n+\n+        String stringValue = \"stringValue\";\n+        confParamOps.set(DOMAIN, key, stringValue);\n+        String actualStringValue = confParamOps.get(DOMAIN, key, null, String.class);\n+        assertEquals(stringValue, actualStringValue);\n+\n+        Long longValue = 1L;\n+        confParamOps.set(DOMAIN, key, longValue);\n+        Long actualLongValue = confParamOps.get(DOMAIN, key, null, Long.class);\n+        assertEquals(longValue, actualLongValue);\n+\n+        Double doubleValue = 2.0;\n+        confParamOps.set(DOMAIN, key, doubleValue);\n+        Double actualDoubleValue = confParamOps.get(DOMAIN, key, null, Double.class);\n+        assertEquals(doubleValue, actualDoubleValue);\n+\n+        Date dateValue = new Date();\n+        confParamOps.set(DOMAIN, key, dateValue);\n+        Date actualDateValue = confParamOps.get(DOMAIN, key, null, Date.class);\n+        assertEquals(dateValue, actualDateValue);\n+\n+        Boolean booleanValue = true;\n+        confParamOps.set(DOMAIN, key, booleanValue);\n+        Boolean actualBooleanValue = confParamOps.get(DOMAIN, key, null, Boolean.class);\n+        assertEquals(booleanValue, actualBooleanValue);\n+\n+        ArrayList<String> stringValues = new ArrayList<>();\n+        stringValues.add(\"stringValue1\");\n+        stringValues.add(\"stringValue2\");\n+        confParamOps.set(DOMAIN, key, stringValues);\n+        List<String> actualStringValues = Arrays.asList(confParamOps.get(DOMAIN, key, null, String[].class));\n+        assertEquals(stringValues, actualStringValues);\n+\n+        confParamOps.remove(DOMAIN, key);\n+        assertNull(confParamOps.get(DOMAIN, key, null, String.class));\n+        assertEquals(\"defaultValue\", confParamOps.get(DOMAIN, key, \"defaultValue\", String.class));\n+    }\n+}"},{"sha":"b54fab75c9b0c023ec7f46bed0ac13321aa58718","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperTestContentLoader.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContentLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.Iterator;\n+import java.util.Map;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class ZookeeperTestContentLoader implements InitializingBean {\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        JsonNode content = MAPPER.readTree(getClass().getResourceAsStream(\"/keymasterContent.json\"));\n+        for (Iterator<Map.Entry<String, JsonNode>> itor = content.fields(); itor.hasNext();) {\n+            Map.Entry<String, JsonNode> param = itor.next();\n+            Object value = MAPPER.treeToValue(param.getValue(), Object.class);\n+            if (value != null) {\n+                confParamOps.set(ZookeeperConfParamOpsITCase.DOMAIN, param.getKey(), value);\n+            }\n+        }\n+    }\n+}"},{"sha":"31560d13e2f72e3aca6cd327699b516314b78f83","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperTestContext.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperTestContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.zookeper;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class ZookeeperTestContext {\n+\n+    @Bean\n+    public ZookeeperTestContentLoader zookeeperTestContentLoader() {\n+        return new ZookeeperTestContentLoader();\n+    }\n+}"},{"sha":"741e1ad9e528b04b389534db66a6f688bd1d9b6b","filename":"common/keymaster/client-zookeeper/src/test/resources/keymasterContent.json","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2FkeymasterContent.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2FkeymasterContent.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2FkeymasterContent.json?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,17 @@\n+{\n+  \"password.cipher.algorithm\": \"SSHA256\",\n+  \"notificationjob.cronExpression\": \"\",\n+  \"notification.maxRetries\": 3,\n+  \"token.length\": 256,\n+  \"token.expireTime\": 60,\n+  \"selfRegistration.allowed\": true,\n+  \"passwordReset.allowed\": true,\n+  \"authentication.attributes\": [\"created\", \"active\"],\n+  \"log.lastlogindate\": true,\n+  \"return.password.value\": false,\n+  \"jwt.lifetime.minutes\": 120,\n+  \"connector.conf.history.size\": 10,\n+  \"resource.conf.history.size\": 10,\n+  \"double.value\": 0.5,\n+  \"date.value\": 1554982140000\n+}\n\\ No newline at end of file"},{"sha":"d5e10219c6a1242a079d64067166a3dabe207df6","filename":"common/keymaster/pom.xml","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fkeymaster%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-common</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Common Keymaster</name>\n+  <description>Apache Syncope Common Keymaster</description>\n+  <groupId>org.apache.syncope.common</groupId>\n+  <artifactId>syncope-common-keymaster</artifactId>\n+  <packaging>pom</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n+  <modules>\n+    <module>client-api</module>\n+    <module>client-zookeeper</module>\n+  </modules>\n+</project>"},{"sha":"7cc99c9d0bb05f9c02cf0e85125051f969ddba0b","filename":"common/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -77,6 +77,7 @@ under the License.\n   </profiles>\n \n   <modules>\n+    <module>keymaster</module>\n     <module>idrepo</module>\n     <module>idm</module>\n     <module>am</module>"},{"sha":"82e0d6dda7550c92847c67629bd23f3331362174","filename":"core/am/logic/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fam%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fam%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -48,7 +48,7 @@ under the License.\n   <build>\n     <resources>\n       <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n+        <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n     </resources>"},{"sha":"78d8001b46b9b043afadc075b01989dc78cd9342","filename":"core/idm/logic/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidm%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidm%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -48,7 +48,7 @@ under the License.\n   <build>\n     <resources>\n       <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n+        <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n     </resources>"},{"sha":"67df68ecd234fd0fbfca8b29fa5a3a3890b31f64","filename":"core/idrepo/logic/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -94,7 +94,7 @@ under the License.\n   <build>\n     <resources>\n       <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n+        <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n     </resources>"},{"sha":"bbd0f20bd8957a4c7300c2f18e2ee778b21ca74d","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/ConfigurationLogic.java","status":"removed","additions":0,"deletions":134,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,134 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import java.io.OutputStream;\n-import java.lang.reflect.Method;\n-import java.util.List;\n-import java.util.Optional;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.apache.syncope.core.persistence.api.content.ContentExporter;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.provisioning.api.data.ConfigurationDataBinder;\n-import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Component\n-public class ConfigurationLogic extends AbstractTransactionalLogic<EntityTO> {\n-\n-    @Autowired\n-    private ConfDAO confDAO;\n-\n-    @Autowired\n-    private PlainSchemaDAO plainSchemaDAO;\n-\n-    @Autowired\n-    private ConfigurationDataBinder binder;\n-\n-    @Autowired\n-    private ContentExporter exporter;\n-\n-    @Autowired\n-    private UserWorkflowAdapter uwfAdapter;\n-\n-    @Autowired\n-    private GroupWorkflowAdapter gwfAdapter;\n-\n-    @Autowired\n-    private AnyObjectWorkflowAdapter awfAdapter;\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.CONFIGURATION_DELETE + \"')\")\n-    public void delete(final String schema) {\n-        Optional<? extends CPlainAttr> conf = confDAO.find(schema);\n-        if (!conf.isPresent()) {\n-            PlainSchema plainSchema = plainSchemaDAO.find(schema);\n-            if (plainSchema == null) {\n-                throw new NotFoundException(\"Configuration schema \" + schema);\n-            }\n-        }\n-\n-        confDAO.delete(schema);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.CONFIGURATION_LIST + \"')\")\n-    public List<Attr> list() {\n-        return binder.getConf();\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.CONFIGURATION_GET + \"')\")\n-    @Transactional(readOnly = true)\n-    public Attr get(final String schema) {\n-        Attr result;\n-\n-        Optional<? extends CPlainAttr> conf = confDAO.find(schema);\n-        if (conf.isPresent()) {\n-            result = binder.getAttr(conf.get());\n-        } else {\n-            PlainSchema plainSchema = plainSchemaDAO.find(schema);\n-            if (plainSchema == null) {\n-                throw new NotFoundException(\"Configuration schema \" + schema);\n-            }\n-\n-            result = new Attr();\n-            result.setSchema(schema);\n-        }\n-\n-        return result;\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.CONFIGURATION_SET + \"')\")\n-    public void set(final Attr value) {\n-        confDAO.save(binder.getAttr(value));\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.CONFIGURATION_EXPORT + \"')\")\n-    @Transactional(readOnly = true)\n-    public void export(final OutputStream os) {\n-        try {\n-            exporter.export(\n-                    AuthContextUtils.getDomain(),\n-                    os,\n-                    uwfAdapter.getPrefix(),\n-                    gwfAdapter.getPrefix(),\n-                    awfAdapter.getPrefix());\n-            LOG.debug(\"Database content successfully exported\");\n-        } catch (Exception e) {\n-            LOG.error(\"While exporting database content\", e);\n-        }\n-    }\n-\n-    @Override\n-    protected EntityTO resolveReference(final Method method, final Object... args)\n-            throws UnresolvedReferenceException {\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-}"},{"sha":"edb978839cdb1dc6ba5248aa1966009ce380f759","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -31,6 +31,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.GroupCR;\n@@ -49,7 +50,6 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n@@ -96,9 +96,6 @@ public class GroupLogic extends AbstractAnyLogic<GroupTO, GroupCR, GroupUR> {\n     @Autowired\n     protected TaskDAO taskDAO;\n \n-    @Autowired\n-    protected ConfDAO confDAO;\n-\n     @Autowired\n     protected GroupDataBinder binder;\n \n@@ -108,6 +105,9 @@ public class GroupLogic extends AbstractAnyLogic<GroupTO, GroupCR, GroupUR> {\n     @Autowired\n     protected TaskDataBinder taskDataBinder;\n \n+    @Autowired\n+    protected ConfParamOps confParamOps;\n+\n     @Autowired\n     protected JobManager jobManager;\n \n@@ -413,7 +413,7 @@ public ExecTO provisionMembers(final String key, final ProvisionAction action) {\n             Map<String, Object> jobDataMap = jobManager.register(\n                     task,\n                     null,\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n \n             jobDataMap.put(TaskJob.DRY_RUN_JOBDETAIL_KEY, false);\n             jobDataMap.put(GroupMemberProvisionTaskJobDelegate.GROUP_KEY_JOBDETAIL_KEY, key);"},{"sha":"2ef164a077cfed8b48b57b5af4c46f96809033d2","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -41,6 +41,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -56,7 +57,6 @@\n import org.apache.syncope.core.logic.cocoon.FopSerializer;\n import org.apache.syncope.core.logic.cocoon.TextSerializer;\n import org.apache.syncope.core.logic.cocoon.XSLTTransformer;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n import org.apache.syncope.core.persistence.api.dao.ReportExecDAO;\n@@ -67,6 +67,7 @@\n import org.apache.syncope.core.provisioning.api.data.ReportDataBinder;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.xmlgraphics.util.MimeConstants;\n import org.quartz.JobKey;\n import org.quartz.SchedulerException;\n@@ -78,15 +79,15 @@\n @Component\n public class ReportLogic extends AbstractExecutableLogic<ReportTO> {\n \n-    @Autowired\n-    private ConfDAO confDAO;\n-\n     @Autowired\n     private ReportDAO reportDAO;\n \n     @Autowired\n     private ReportExecDAO reportExecDAO;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Autowired\n     private ReportDataBinder binder;\n \n@@ -103,7 +104,7 @@ public ReportTO create(final ReportTO reportTO) {\n             jobManager.register(\n                     report,\n                     null,\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for report \" + report.getKey(), e);\n \n@@ -129,7 +130,7 @@ public ReportTO update(final ReportTO reportTO) {\n             jobManager.register(\n                     report,\n                     null,\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for report \" + report.getKey(), e);\n \n@@ -175,7 +176,7 @@ public ExecTO execute(final String key, final Date startAt, final boolean dryRun\n             jobManager.register(\n                     report,\n                     startAt,\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n \n             scheduler.getScheduler().triggerJob(JobNamer.getJobKey(report));\n         } catch (Exception e) {"},{"sha":"03a6060f0931b72a8a8d56cf59370e15e44486e5","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":31,"deletions":10,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import java.io.OutputStream;\n import java.lang.management.ManagementFactory;\n import java.lang.management.OperatingSystemMXBean;\n import java.lang.management.RuntimeMXBean;\n@@ -35,6 +36,7 @@\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.info.NumbersInfo;\n@@ -45,15 +47,16 @@\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.ImplementationTypesHolder;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n+import org.apache.syncope.core.persistence.api.content.ContentExporter;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -146,15 +149,15 @@ public class SyncopeLogic extends AbstractLogic<EntityTO> {\n     @Autowired\n     private SecurityQuestionDAO securityQuestionDAO;\n \n-    @Autowired\n-    private ConfDAO confDAO;\n-\n     @Autowired\n     private AnySearchDAO searchDAO;\n \n     @Autowired\n     private GroupDataBinder groupDataBinder;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Resource(name = \"version\")\n     private String version;\n \n@@ -170,6 +173,9 @@ public class SyncopeLogic extends AbstractLogic<EntityTO> {\n     @Autowired\n     private AnyObjectWorkflowAdapter awfAdapter;\n \n+    @Autowired\n+    private ContentExporter exporter;\n+\n     @Autowired\n     private UserWorkflowAdapter uwfAdapter;\n \n@@ -216,15 +222,15 @@ public class SyncopeLogic extends AbstractLogic<EntityTO> {\n     private ImplementationLookup implLookup;\n \n     public boolean isSelfRegAllowed() {\n-        return confDAO.find(\"selfRegistration.allowed\", false);\n+        return confParamOps.get(AuthContextUtils.getDomain(), \"selfRegistration.allowed\", false, Boolean.class);\n     }\n \n     public boolean isPwdResetAllowed() {\n-        return confDAO.find(\"passwordReset.allowed\", false);\n+        return confParamOps.get(AuthContextUtils.getDomain(), \"passwordReset.allowed\", false, Boolean.class);\n     }\n \n     public boolean isPwdResetRequiringSecurityQuestions() {\n-        return confDAO.find(\"passwordReset.securityQuestion\", true);\n+        return confParamOps.get(AuthContextUtils.getDomain(), \"passwordReset.securityQuestion\", true, Boolean.class);\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n@@ -234,6 +240,7 @@ public PlatformInfo platform() {\n                 PLATFORM_INFO = new PlatformInfo();\n                 PLATFORM_INFO.setVersion(version);\n                 PLATFORM_INFO.setBuildNumber(buildNumber);\n+                PLATFORM_INFO.setKeymasterConfParamOps(AopUtils.getTargetClass(confParamOps).getName());\n \n                 if (bundleManager.getLocations() != null) {\n                     PLATFORM_INFO.getConnIdLocations().addAll(bundleManager.getLocations().stream().\n@@ -280,8 +287,6 @@ public PlatformInfo platform() {\n                         setGroupDAO(AopUtils.getTargetClass(groupDAO).getName());\n                 PLATFORM_INFO.getPersistenceInfo().\n                         setAnyObjectDAO(AopUtils.getTargetClass(anyObjectDAO).getName());\n-                PLATFORM_INFO.getPersistenceInfo().\n-                        setConfDAO(AopUtils.getTargetClass(confDAO).getName());\n \n                 ImplementationTypesHolder.getInstance().getValues().forEach((typeName, typeInterface) -> {\n                     Set<String> classNames = implLookup.getClassNames(typeName);\n@@ -305,7 +310,7 @@ public PlatformInfo platform() {\n             PLATFORM_INFO.getImplementationTypes().clear();\n             PLATFORM_INFO.getImplementationTypes().addAll(ImplementationTypesHolder.getInstance().getValues().keySet());\n \n-            AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(), () -> {\n+            AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(), () -> {\n                 PLATFORM_INFO.getAnyTypes().clear();\n                 PLATFORM_INFO.getAnyTypes().addAll(anyTypeDAO.findAll().stream().\n                         map(Entity::getKey).collect(Collectors.toList()));\n@@ -483,6 +488,22 @@ public TypeExtensionTO readTypeExtension(final String groupName) {\n         return groupDataBinder.getTypeExtensionTO(typeExt.get());\n     }\n \n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.INTERNAL_STORAGE_EXPORT + \"')\")\n+    @Transactional(readOnly = true)\n+    public void exportInternalStorageContent(final OutputStream os) {\n+        try {\n+            exporter.export(\n+                    AuthContextUtils.getDomain(),\n+                    os,\n+                    uwfAdapter.getPrefix(),\n+                    gwfAdapter.getPrefix(),\n+                    awfAdapter.getPrefix());\n+            LOG.debug(\"Interal storage content successfully exported\");\n+        } catch (Exception e) {\n+            LOG.error(\"While exporting internal storage content\", e);\n+        }\n+    }\n+\n     @Override\n     protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {"},{"sha":"f5a80f376534aa805233a3f44e0e5d14a446fd77","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -29,6 +29,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.TaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n@@ -56,13 +57,13 @@\n import org.apache.syncope.core.provisioning.api.data.TaskDataBinder;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n import org.apache.syncope.core.provisioning.api.notification.NotificationJobDelegate;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskInfo;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.quartz.JobDataMap;\n import org.quartz.JobKey;\n import org.quartz.SchedulerException;\n@@ -81,15 +82,15 @@ public class TaskLogic extends AbstractExecutableLogic<TaskTO> {\n     @Autowired\n     private TaskExecDAO taskExecDAO;\n \n-    @Autowired\n-    private ConfDAO confDAO;\n-\n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n \n     @Autowired\n     private NotificationDAO notificationDAO;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Autowired\n     private TaskDataBinder binder;\n \n@@ -118,7 +119,7 @@ public <T extends SchedTaskTO> T createSchedTask(final TaskType type, final T ta\n             jobManager.register(\n                     task,\n                     task.getStartAt(),\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for task \" + task.getKey(), e);\n \n@@ -151,7 +152,7 @@ public <T extends SchedTaskTO> T updateSchedTask(final TaskType type, final Sche\n             jobManager.register(\n                     task,\n                     task.getStartAt(),\n-                    confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                    confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class));\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for task \" + task.getKey(), e);\n \n@@ -270,7 +271,8 @@ public ExecTO execute(final String key, final Date startAt, final boolean dryRun\n                     Map<String, Object> jobDataMap = jobManager.register(\n                             (SchedTask) task,\n                             startAt,\n-                            confDAO.find(\"tasks.interruptMaxRetries\", 1L));\n+                            confParamOps.get(AuthContextUtils.getDomain(),\n+                                    \"tasks.interruptMaxRetries\", 1L, Long.class));\n \n                     jobDataMap.put(TaskJob.DRY_RUN_JOBDETAIL_KEY, dryRun);\n "},{"sha":"63c4b7f6ae73155d70add42207ae2b57940381dc","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.logic;\n \n import java.lang.reflect.Method;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n@@ -28,6 +29,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n@@ -44,7 +46,6 @@\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n@@ -72,10 +73,10 @@ public class UserLogic extends AbstractAnyLogic<UserTO, UserCR, UserUR> {\n     protected AnySearchDAO searchDAO;\n \n     @Autowired\n-    protected ConfDAO confDAO;\n+    protected AccessTokenDAO accessTokenDAO;\n \n     @Autowired\n-    protected AccessTokenDAO accessTokenDAO;\n+    protected ConfParamOps confParamOps;\n \n     @Autowired\n     protected UserDataBinder binder;\n@@ -169,7 +170,9 @@ public ProvisioningResult<UserTO> selfUpdate(final UserUR userUR, final boolean\n \n         // Ensures that, if the self update above moves the user into a status from which no authentication\n         // is possible, the existing Access Token is clean up to avoid issues with future authentications\n-        if (!confDAO.getValuesAsStrings(\"authentication.statuses\").contains(updated.getEntity().getStatus())) {\n+        List<String> authStatuses = Arrays.asList(confParamOps.get(AuthContextUtils.getDomain(),\n+                \"authentication.statuses\", new String[] {}, String[].class));\n+        if (!authStatuses.contains(updated.getEntity().getStatus())) {\n             String accessToken = accessTokenDAO.findByOwner(updated.getEntity().getUsername()).getKey();\n             if (accessToken != null) {\n                 accessTokenDAO.delete(accessToken);"},{"sha":"ae1aa1a44d375334f12d63dc5715ada355e88731","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/IdRepoEntitlementLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FIdRepoEntitlementLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FIdRepoEntitlementLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FIdRepoEntitlementLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -44,7 +44,7 @@ public void load() {\n \n     @Override\n     public void load(final String domain, final DataSource datasource) {\n-        AuthContextUtils.execWithAuthContext(domain, () -> {\n+        AuthContextUtils.callAsAdmin(domain, () -> {\n             entitlementAccessor.addEntitlementsForAnyTypes();\n             return null;\n         });"},{"sha":"3a8ec5b26eea8bc83e307a0c7f0f793f869dd81b","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/LoggerLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -129,7 +129,7 @@ public void load(final String domain, final DataSource datasource) {\n                         });\n             });\n \n-            AuthContextUtils.execWithAuthContext(domain, () -> {\n+            AuthContextUtils.callAsAdmin(domain, () -> {\n                 loggerAccessor.synchronizeLog4J(ctx);\n                 return null;\n             });"},{"sha":"f9cc9d98d8010053fa4a09ab2ec44cd81357c173","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/CheckDomainFilter.java","status":"modified","additions":19,"deletions":24,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FCheckDomainFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FCheckDomainFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FCheckDomainFilter.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -48,33 +48,28 @@ public class CheckDomainFilter implements ContainerRequestFilter {\n     public void filter(final ContainerRequestContext reqContext) throws IOException {\n         final String domain = reqContext.getHeaderString(RESTHeaders.DOMAIN);\n         if (domain != null && !SyncopeConstants.MASTER_DOMAIN.equals(domain)) {\n-            AuthContextUtils.execWithAuthContext(\n-                    SyncopeConstants.MASTER_DOMAIN, new AuthContextUtils.Executable<Void>() {\n+            AuthContextUtils.callAsAdmin(SyncopeConstants.MASTER_DOMAIN, () -> {\n+                if (domainDAO.find(domain) == null) {\n+                    String message = \"Domain '\" + domain + \"' not available\";\n \n-                @Override\n-                public Void exec() {\n-                    if (domainDAO.find(domain) == null) {\n-                        String message = \"Domain '\" + domain + \"' not available\";\n+                    ErrorTO error = new ErrorTO();\n+                    error.setStatus(Response.Status.NOT_FOUND.getStatusCode());\n+                    error.setType(ClientExceptionType.NotFound);\n+                    error.getElements().add(message);\n \n-                        ErrorTO error = new ErrorTO();\n-                        error.setStatus(Response.Status.NOT_FOUND.getStatusCode());\n-                        error.setType(ClientExceptionType.NotFound);\n-                        error.getElements().add(message);\n-\n-                        reqContext.abortWith(Response.status(Response.Status.NOT_FOUND).\n-                                entity(error).\n-                                header(HttpHeaders.CONTENT_TYPE,\n-                                        reqContext.getAcceptableMediaTypes().isEmpty()\n-                                        ? MediaType.APPLICATION_JSON\n-                                        : reqContext.getAcceptableMediaTypes().get(0).toString()).\n-                                header(RESTHeaders.ERROR_CODE,\n-                                        ClientExceptionType.NotFound.name()).\n-                                header(RESTHeaders.ERROR_INFO,\n-                                        ClientExceptionType.NotFound.getInfoHeaderValue(message)).\n-                                build());\n-                    }\n-                    return null;\n+                    reqContext.abortWith(Response.status(Response.Status.NOT_FOUND).\n+                            entity(error).\n+                            header(HttpHeaders.CONTENT_TYPE,\n+                                    reqContext.getAcceptableMediaTypes().isEmpty()\n+                                    ? MediaType.APPLICATION_JSON\n+                                    : reqContext.getAcceptableMediaTypes().get(0).toString()).\n+                            header(RESTHeaders.ERROR_CODE,\n+                                    ClientExceptionType.NotFound.name()).\n+                            header(RESTHeaders.ERROR_INFO,\n+                                    ClientExceptionType.NotFound.getInfoHeaderValue(message)).\n+                            build());\n                 }\n+                return null;\n             });\n         }\n     }"},{"sha":"368a00ba1742b754d70ac043117407e4f37ff33a","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConfigurationServiceImpl.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf.service;\n-\n-import java.util.List;\n-import javax.ws.rs.core.HttpHeaders;\n-import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n-import javax.ws.rs.core.StreamingOutput;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-import org.apache.syncope.core.logic.ConfigurationLogic;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class ConfigurationServiceImpl extends AbstractServiceImpl implements ConfigurationService {\n-\n-    private static final String CONTENT_XML = \"Content.xml\";\n-\n-    @Autowired\n-    private ConfigurationLogic logic;\n-\n-    @Override\n-    public Response export() {\n-        StreamingOutput sout = (os) -> logic.export(os);\n-\n-        return Response.ok(sout).\n-                type(MediaType.TEXT_XML).\n-                header(HttpHeaders.CONTENT_DISPOSITION,\n-                        \"attachment; filename=\" + AuthContextUtils.getDomain() + CONTENT_XML).\n-                build();\n-    }\n-\n-    @Override\n-    public void delete(final String schema) {\n-        logic.delete(schema);\n-    }\n-\n-    @Override\n-    public List<Attr> list() {\n-        return logic.list();\n-    }\n-\n-    @Override\n-    public Attr get(final String schema) {\n-        return logic.get(schema);\n-    }\n-\n-    @Override\n-    public void set(final Attr value) {\n-        logic.set(value);\n-    }\n-}"},{"sha":"212fa7c6519742e8cfa4cd7dfe0a4259298fc27c","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SyncopeServiceImpl.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,6 +28,7 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.StreamingOutput;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.Bus;\n@@ -56,12 +57,15 @@\n import org.apache.syncope.core.persistence.api.entity.Batch;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n import org.springframework.security.core.context.SecurityContextHolder;\n \n @Service\n public class SyncopeServiceImpl extends AbstractServiceImpl implements SyncopeService {\n \n+    private static final String CONTENT_XML = \"Content.xml\";\n+\n     @Resource(name = \"batchExecutor\")\n     private ThreadPoolTaskExecutor batchExecutor;\n \n@@ -197,4 +201,15 @@ public Response batch() {\n \n         return response;\n     }\n+\n+    @Override\n+    public Response exportInternalStorageContent() {\n+        StreamingOutput sout = (os) -> logic.exportInternalStorageContent(os);\n+\n+        return Response.ok(sout).\n+                type(MediaType.TEXT_XML).\n+                header(HttpHeaders.CONTENT_DISPOSITION,\n+                        \"attachment; filename=\" + AuthContextUtils.getDomain() + CONTENT_XML).\n+                build();\n+    }\n }"},{"sha":"af6f8c41a119398ed2f08390cd0ac758ecc4ccf2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConfDAO.java","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,39 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.dao;\n-\n-import java.util.Optional;\n-import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-\n-public interface ConfDAO extends DAO<Conf> {\n-\n-    Optional<? extends CPlainAttr> find(String key);\n-\n-    List<String> getValuesAsStrings(String key);\n-\n-    <T> T find(String key, T defaultValue);\n-\n-    Conf get();\n-\n-    Conf save(CPlainAttr attr);\n-\n-    Conf delete(String key);\n-}"},{"sha":"a74c4900b4001283b330a144c6950ae66a3c8829","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/EntityFactory.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n@@ -36,7 +35,5 @@ public interface EntityFactory {\n \n     Class<? extends AnyObject> anyObjectClass();\n \n-    Class<? extends Conf> confClass();\n-\n     Class<? extends AnySearchDAO> anySearchDAOClass();\n }"},{"sha":"52ad5da82db10a50e2fc254c1416bbc5fcca9c20","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONConfDAO.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.dao;\n-\n-import org.apache.openjpa.enhance.PersistenceCapable;\n-import org.apache.openjpa.util.ImplHelper;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-\n-public class JPAJSONConfDAO extends JPAConfDAO {\n-\n-    /**\n-     * Marks the {@code plainAttrs} field as dirty, to force OpenJPA generating an update statement on the\n-     * SyncopeConf table - otherwise no update on the table itself would be generated when adding an attribute,\n-     * as the {@code plainAttrs} JSON field gets updated by the entity listener.\n-     */\n-    private void dirten() {\n-        PersistenceCapable pc = ImplHelper.toPersistenceCapable(get(), null);\n-        if (pc != null) {\n-            pc.pcGetStateManager().dirty(\"plainAttrs\");\n-        }\n-    }\n-\n-    @Override\n-    public Conf save(final CPlainAttr attr) {\n-        dirten();\n-        return super.save(attr);\n-    }\n-\n-    @Override\n-    public Conf delete(final String key) {\n-        dirten();\n-        return super.delete(key);\n-    }\n-}"},{"sha":"6e264f43a1a7d0560cd612c3f08bd0a5674e0581","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAJSONEntityFactory.java","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -24,10 +24,6 @@\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n@@ -40,10 +36,6 @@\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONConf;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttrValue;\n@@ -77,21 +69,12 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n         } else if (reference.equals(AnyObject.class)) {\n             result = (E) new JPAJSONAnyObject();\n             ((JPAJSONAnyObject) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n-        } else if (reference.equals(Conf.class)) {\n-            result = (E) new JPAJSONConf();\n-            ((JPAJSONConf) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n         } else if (reference.equals(APlainAttr.class)) {\n             result = (E) new JPAJSONAPlainAttr();\n         } else if (reference.equals(APlainAttrValue.class)) {\n             result = (E) new JPAJSONAPlainAttrValue();\n         } else if (reference.equals(APlainAttrUniqueValue.class)) {\n             result = (E) new JPAJSONAPlainAttrUniqueValue();\n-        } else if (reference.equals(CPlainAttr.class)) {\n-            result = (E) new JPAJSONCPlainAttr();\n-        } else if (reference.equals(CPlainAttrValue.class)) {\n-            result = (E) new JPAJSONCPlainAttrValue();\n-        } else if (reference.equals(CPlainAttrUniqueValue.class)) {\n-            result = (E) new JPAJSONCPlainAttrUniqueValue();\n         } else if (reference.equals(GPlainAttr.class)) {\n             result = (E) new JPAJSONGPlainAttr();\n         } else if (reference.equals(GPlainAttrValue.class)) {\n@@ -126,11 +109,6 @@ public Class<? extends AnyObject> anyObjectClass() {\n         return JPAJSONAnyObject.class;\n     }\n \n-    @Override\n-    public Class<? extends Conf> confClass() {\n-        return JPAJSONConf.class;\n-    }\n-\n     protected abstract Class<? extends JPAJSONAnyDAO> jpaJSONAnyDAOClass();\n \n     @Override"},{"sha":"4979d17334253994c48c203eabbaa8b779afccde","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttr.java","status":"removed","additions":0,"deletions":163,"changes":163,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,163 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonSetter;\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n-\n-@JsonIgnoreProperties(\"valuesAsStrings\")\n-@JsonInclude(JsonInclude.Include.NON_EMPTY)\n-public class JPAJSONCPlainAttr extends AbstractPlainAttr<Conf> implements CPlainAttr, JSONPlainAttr<Conf> {\n-\n-    private static final long serialVersionUID = 806271775349587902L;\n-\n-    /**\n-     * The owner of this attribute.\n-     */\n-    @JsonIgnore\n-    private JPAJSONConf owner;\n-\n-    @JsonProperty\n-    private String schema;\n-\n-    /**\n-     * Values of this attribute (if schema is not UNIQUE).\n-     */\n-    private final List<JPAJSONCPlainAttrValue> values = new ArrayList<>();\n-\n-    /**\n-     * Value of this attribute (if schema is UNIQUE).\n-     */\n-    @JsonProperty\n-    private JPAJSONCPlainAttrUniqueValue uniqueValue;\n-\n-    @Override\n-    public Conf getOwner() {\n-        return owner;\n-    }\n-\n-    @Override\n-    public void setOwner(final Conf owner) {\n-        checkType(owner, JPAJSONConf.class);\n-        this.owner = (JPAJSONConf) owner;\n-    }\n-\n-    @JsonIgnore\n-    @Override\n-    public String getSchemaKey() {\n-        return schema;\n-    }\n-\n-    @JsonIgnore\n-    @Override\n-    public JPAPlainSchema getSchema() {\n-        return (JPAPlainSchema) ApplicationContextProvider.getBeanFactory().getBean(PlainSchemaDAO.class).find(schema);\n-    }\n-\n-    @Override\n-    public void setSchema(final PlainSchema schema) {\n-        if (schema != null) {\n-            this.schema = schema.getKey();\n-        }\n-    }\n-\n-    @JsonSetter(\"schema\")\n-    public void setSchema(final String schema) {\n-        this.schema = schema;\n-    }\n-\n-    @Override\n-    protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, JPAJSONCPlainAttrValue.class);\n-        return values.add((JPAJSONCPlainAttrValue) attrValue);\n-    }\n-\n-    @Override\n-    public boolean add(final PlainAttrValue value) {\n-        return addForMultiValue(value);\n-    }\n-\n-    @Override\n-    public List<? extends CPlainAttrValue> getValues() {\n-        return values;\n-    }\n-\n-    @JsonIgnore\n-    public List<JPAJSONCPlainAttrValue> getPGValues() {\n-        return values;\n-    }\n-\n-    @Override\n-    public JPAJSONCPlainAttrUniqueValue getUniqueValue() {\n-        return uniqueValue;\n-    }\n-\n-    @JsonIgnore\n-    @Override\n-    public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, JPAJSONCPlainAttrUniqueValue.class);\n-        this.uniqueValue = (JPAJSONCPlainAttrUniqueValue) uniqueValue;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder().\n-                append(schema).\n-                append(values).\n-                append(uniqueValue).\n-                build();\n-    }\n-\n-    @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final JPAJSONCPlainAttr other = (JPAJSONCPlainAttr) obj;\n-        return new EqualsBuilder().\n-                append(schema, other.schema).\n-                append(values, other.values).\n-                append(uniqueValue, other.uniqueValue).\n-                build();\n-    }\n-}"},{"sha":"dc7bc50dd1891e11f9d723006e29a150a81b3564","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttrUniqueValue.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n-\n-@JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n-@JsonInclude(JsonInclude.Include.NON_NULL)\n-public class JPAJSONCPlainAttrUniqueValue extends AbstractPlainAttrValue implements CPlainAttrUniqueValue {\n-\n-    private static final long serialVersionUID = -4326417972859745823L;\n-\n-    @JsonIgnore\n-    private JPAJSONCPlainAttr attr;\n-\n-    @Override\n-    public CPlainAttr getAttr() {\n-        return attr;\n-    }\n-\n-    @Override\n-    public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, JPAJSONCPlainAttr.class);\n-        this.attr = (JPAJSONCPlainAttr) attr;\n-    }\n-\n-    @JsonIgnore\n-    @Override\n-    public PlainSchema getSchema() {\n-        return getAttr() == null ? null : getAttr().getSchema();\n-    }\n-\n-    @Override\n-    public void setSchema(final PlainSchema schema) {\n-        // nothing to do\n-    }\n-}"},{"sha":"9136621b41ac400e5c255dd92b75c1b0fbf0c31a","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttrValue.java","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,48 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n-\n-@JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n-@JsonInclude(JsonInclude.Include.NON_NULL)\n-public class JPAJSONCPlainAttrValue extends AbstractPlainAttrValue implements CPlainAttrValue {\n-\n-    private static final long serialVersionUID = 1832825176101443555L;\n-\n-    @JsonIgnore\n-    private JPAJSONCPlainAttr attr;\n-\n-    @Override\n-    public CPlainAttr getAttr() {\n-        return attr;\n-    }\n-\n-    @Override\n-    public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, JPAJSONCPlainAttr.class);\n-        this.attr = (JPAJSONCPlainAttr) attr;\n-    }\n-}"},{"sha":"e29c21074112f1ee7408181d678123e8532ed988","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONConf.java","status":"removed","additions":0,"deletions":85,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,85 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.EntityListeners;\n-import javax.persistence.Lob;\n-import javax.persistence.Table;\n-import javax.persistence.Transient;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.JSONAny;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.JPAJSONAnyCheck;\n-\n-@Entity\n-@Table(name = JPAConf.TABLE)\n-@EntityListeners({ JPAJSONConfListener.class })\n-@JPAJSONAnyCheck\n-public class JPAJSONConf extends JPAConf implements JSONAny<Conf>, Conf {\n-\n-    private static final long serialVersionUID = -8543654943709531885L;\n-\n-    @Lob\n-    @Column(columnDefinition = \"jsonb\")\n-    private String plainAttrs;\n-\n-    @Transient\n-    private final List<JPAJSONCPlainAttr> plainAttrList = new ArrayList<>();\n-\n-    @Override\n-    public String getPlainAttrsJSON() {\n-        return plainAttrs;\n-    }\n-\n-    @Override\n-    public void setPlainAttrsJSON(final String plainAttrs) {\n-        this.plainAttrs = plainAttrs;\n-    }\n-\n-    @Override\n-    public List<JPAJSONCPlainAttr> getPlainAttrList() {\n-        return plainAttrList;\n-    }\n-\n-    @Override\n-    public boolean add(final JSONPlainAttr<Conf> attr) {\n-        return add((CPlainAttr) attr);\n-    }\n-\n-    @Override\n-    public boolean add(final CPlainAttr attr) {\n-        checkType(attr, JPAJSONCPlainAttr.class);\n-        return plainAttrList.add((JPAJSONCPlainAttr) attr);\n-    }\n-\n-    @Override\n-    public boolean remove(final CPlainAttr attr) {\n-        return plainAttrList.removeIf(jsonAttr -> jsonAttr.getSchemaKey().equals(attr.getSchema().getKey()));\n-    }\n-\n-    @Override\n-    public List<? extends CPlainAttr> getPlainAttrs() {\n-        return plainAttrList;\n-    }\n-}"},{"sha":"7923c4729e279075276e0a35e0080edba22fcafe","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONConfListener.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import java.util.List;\n-import javax.persistence.PostLoad;\n-import javax.persistence.PostPersist;\n-import javax.persistence.PostUpdate;\n-import javax.persistence.PrePersist;\n-import javax.persistence.PreUpdate;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAJSONEntityListener;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n-\n-public class JPAJSONConfListener extends JPAJSONEntityListener<Conf> {\n-\n-    @Override\n-    protected List<? extends JSONPlainAttr<Conf>> getValues(final String plainAttrsJSON) {\n-        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<JPAJSONCPlainAttr>>() {\n-        });\n-    }\n-\n-    @PostLoad\n-    public void read(final JPAJSONConf conf) {\n-        super.json2list(conf, false);\n-    }\n-\n-    @PrePersist\n-    @PreUpdate\n-    public void save(final JPAJSONConf conf) {\n-        super.list2json(conf);\n-    }\n-\n-    @PostPersist\n-    @PostUpdate\n-    public void readAfterSave(final JPAJSONConf conf) {\n-        super.json2list(conf, true);\n-    }\n-}"},{"sha":"de52a1a240a12eba2b87f048c7b906788be70dd2","filename":"core/persistence-jpa-json/src/main/resources/META-INF/spring-orm-pgjsonb.xml","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -61,15 +61,6 @@ under the License.\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONConf\">\n-    <attributes>\n-      <basic name=\"plainAttrs\">\n-        <column column-definition=\"jsonb\"/>\n-        <lob/>\n-      </basic>\n-    </attributes>\n-  </entity>\n-\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n     <attributes>\n       <many-to-one name=\"userOwner\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser\"/>"},{"sha":"c630d467a3502c006359f3072ccd04192b582dcd","filename":"core/persistence-jpa-json/src/main/resources/domains/MasterContent.xml","status":"modified","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,75 +20,6 @@ under the License.\n <dataset>\n   <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>  \n \n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- notificationjob.cronExpression:\n-  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n-  + provided as empty string: NotificationJob disabled\n-  + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n-  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeSchema id=\"notification.maxRetries\"/>\n-  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.attributes\"/>\n-  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-    \n-  <!--  Connector and Resource configuration history -->                   \n-  <SyncopeSchema id=\"connector.conf.history.size\"/>\n-  <PlainSchema id=\"connector.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeSchema id=\"resource.conf.history.size\"/>\n-  <PlainSchema id=\"resource.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"\n-               plainAttrs=\"[{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;SSHA256&quot;}],&quot;schema&quot;:&quot;password.cipher.algorithm&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;&quot;}],&quot;schema&quot;:&quot;notificationjob.cronExpression&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:3}],&quot;schema&quot;:&quot;notification.maxRetries&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:256}],&quot;schema&quot;:&quot;token.length&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:60}],&quot;schema&quot;:&quot;token.expireTime&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;selfRegistration.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.securityQuestion&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;username&quot;},{&quot;stringValue&quot;:&quot;email&quot;}],&quot;schema&quot;:&quot;authentication.attributes&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;created&quot;},{&quot;stringValue&quot;:&quot;active&quot;}],&quot;schema&quot;:&quot;authentication.statuses&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;log.lastlogindate&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:false}],&quot;schema&quot;:&quot;return.password.value&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:120}],&quot;schema&quot;:&quot;jwt.lifetime.minutes&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}],&quot;schema&quot;:&quot;connector.conf.history.size&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}],&quot;schema&quot;:&quot;resource.conf.history.size&quot;}]\"/>\n-\n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>"},{"sha":"9264deb2807d729f50391d9ef73aa68f0e7d186f","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/indexes.xml","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -37,12 +37,6 @@ under the License.\n   <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n   <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n \n-  <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n-  <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n-  <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n-  <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n-  <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n-\n   <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n   <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n   <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n@@ -53,11 +47,5 @@ under the License.\n   <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n   <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n \n-  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n-  <entry key=\"CPAttrUniqueValue_attrIndex\">CREATE INDEX CPAttrUniqueValue_attrIndex on CPlainAttrUniqueValue(attribute_id)</entry>\n-\n-  <entry key=\"CPlainAttr_owner_Index\">CREATE INDEX CPlainAttr_owner_Index on CPlainAttr(owner_id)</entry>\n-  <entry key=\"CPlainAttr_schema_Index\">CREATE INDEX CPlainAttr_schema_Index on CPlainAttr(schema_id)</entry>\n-\n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n </properties>"},{"sha":"53172d9aefea349c00efbf26939c5d543f49103e","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/persistence.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -23,5 +23,4 @@ any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n openjpa.RemoteCommitProvider=sjvm"},{"sha":"32b4d3414f6008468846d08cd4384db90523d83f","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":3,"deletions":69,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,75 +18,6 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- notificationjob.cronExpression:\n-  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n-  + provided as empty string: NotificationJob disabled\n-  + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n-  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeSchema id=\"notification.maxRetries\"/>\n-  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.attributes\"/>\n-  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-    \n-  <!--  Connector and Resource configuration history -->                   \n-  <SyncopeSchema id=\"connector.conf.history.size\"/>\n-  <PlainSchema id=\"connector.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeSchema id=\"resource.conf.history.size\"/>\n-  <PlainSchema id=\"resource.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"\n-               plainAttrs=\"[{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;SHA1&quot;}],&quot;schema&quot;:&quot;password.cipher.algorithm&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;0/20 * * * * ?&quot;}],&quot;schema&quot;:&quot;notificationjob.cronExpression&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:3}],&quot;schema&quot;:&quot;notification.maxRetries&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:256}],&quot;schema&quot;:&quot;token.length&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:60}],&quot;schema&quot;:&quot;token.expireTime&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;selfRegistration.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.securityQuestion&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;username&quot;},{&quot;stringValue&quot;:&quot;userId&quot;}],&quot;schema&quot;:&quot;authentication.attributes&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;created&quot;},{&quot;stringValue&quot;:&quot;active&quot;}],&quot;schema&quot;:&quot;authentication.statuses&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;log.lastlogindate&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:false}],&quot;schema&quot;:&quot;return.password.value&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:120}],&quot;schema&quot;:&quot;jwt.lifetime.minutes&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}],&quot;schema&quot;:&quot;connector.conf.history.size&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}],&quot;schema&quot;:&quot;resource.conf.history.size&quot;}]\"/>\n-\n   <!-- sample policies -->\n   <PasswordPolicy id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" description=\"a password policy\"\n                   historyLength=\"1\" allowNullPassword=\"1\"/>\n@@ -2406,4 +2337,7 @@ $$ }&#10;\n   <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n   \n   <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>\n+  \n+    <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"\n+                predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n </dataset>"},{"sha":"98e6ad3eccfde6425d4c57c894bfa69b9ba75f77","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/DomainConfFactory.java","status":"modified","additions":20,"deletions":6,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -143,11 +143,25 @@ public void register(final DomainCR req) {\n \n         // domainContentXML\n         registerBeanDefinition(domainName + \"ContentXML\",\n-                BeanDefinitionBuilder.rootBeanDefinition(ResourceWithFallbackLoader.class)\n-                        .addPropertyValue(\n-                                \"primary\", \"file:\" + contentDirectory + \"/domains/\" + domainName + \"Content.xml\")\n-                        .addPropertyValue(\n-                                \"fallback\", \"classpath:domains/\" + domainName + \"Content.xml\")\n-                        .getBeanDefinition());\n+                BeanDefinitionBuilder.rootBeanDefinition(ResourceWithFallbackLoader.class).\n+                        addPropertyValue(\n+                                \"primary\",\n+                                \"file:\" + contentDirectory + \"/domains/\" + domainName + \"Content.xml\").\n+                        addPropertyValue(\n+                                \"fallback\",\n+                                \"classpath:domains/\" + domainName + \"Content.xml\").\n+                        getBeanDefinition());\n+\n+        // domainKeymasterContentJSON\n+        registerBeanDefinition(domainName + \"KeymasterContentJSON\",\n+                BeanDefinitionBuilder.rootBeanDefinition(ResourceWithFallbackLoader.class).\n+                        addPropertyValue(\n+                                \"primary\",\n+                                \"file:\" + contentDirectory + \"/domains/\" + domainName + \"KeymasterContent.json\").\n+                        addPropertyValue(\n+                                \"fallback\",\n+                                \"classpath:domains/\" + domainName + \"KeymasterContent.json\").\n+                        getBeanDefinition());\n+\n     }\n }"},{"sha":"d05e8b2c7769158bad007d57e95b82e9bb7f97dc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/MasterDomain.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -177,6 +177,14 @@ public ResourceWithFallbackLoader masterContentXML() {\n         return masterContentXML;\n     }\n \n+    @Bean(\"MasterKeymasterContentJSON\")\n+    public ResourceWithFallbackLoader masterKeymasterContentJSON() {\n+        ResourceWithFallbackLoader masterKeymasterContentJSON = new ResourceWithFallbackLoader();\n+        masterKeymasterContentJSON.setPrimary(\"file:\" + contentDirectory + \"/domains/MasterKeymasterContent.json\");\n+        masterKeymasterContentJSON.setFallback(\"classpath:domains/MasterKeymasterContent.json\");\n+        return masterKeymasterContentJSON;\n+    }\n+\n     @Bean(\"MasterDatabaseSchema\")\n     public String masterDatabaseSchema() {\n         return schema;"},{"sha":"a64fdabd8670b91fe8627ea2094033813280d7a0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -25,7 +25,6 @@\n import javax.validation.Validator;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n@@ -165,14 +164,6 @@ public AnyObjectDAO anyObjectDAO()\n         return (AnyObjectDAO) Class.forName(env.getProperty(\"anyObject.dao\")).getConstructor().newInstance();\n     }\n \n-    @Bean\n-    public ConfDAO confDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n-\n-        return (ConfDAO) Class.forName(env.getProperty(\"conf.dao\")).getConstructor().newInstance();\n-    }\n-\n     @Bean\n     public Validator localValidatorFactoryBean() {\n         return new LocalValidatorFactoryBean();"},{"sha":"afa7b256c9a9f6bd4f8c32469e00c69e74a12f42","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/KeymasterContentLoader.java","status":"added","additions":105,"deletions":0,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FKeymasterContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FKeymasterContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FKeymasterContentLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.content;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.Iterator;\n+import java.util.Map;\n+import javax.sql.DataSource;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Initialize Keymaster with default content if no data is present already.\n+ */\n+@Component\n+public class KeymasterContentLoader implements SyncopeCoreLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(KeymasterContentLoader.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n+    @Override\n+    public int getOrder() {\n+        return 450;\n+    }\n+\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        boolean existingData;\n+        try {\n+            existingData = !confParamOps.list(domain).isEmpty();\n+        } catch (Exception e) {\n+            LOG.error(\"[{}] Could not access Keymaster\", domain, e);\n+            existingData = true;\n+        }\n+\n+        if (existingData) {\n+            LOG.info(\"[{}] Data found in Keymaster, leaving untouched\", domain);\n+        } else {\n+            LOG.info(\"[{}] Empty Keymaster found, loading default content\", domain);\n+\n+            try {\n+                ResourceWithFallbackLoader contentJSON = ApplicationContextProvider.getBeanFactory().\n+                        getBean(domain + \"KeymasterContentJSON\", ResourceWithFallbackLoader.class);\n+                loadDefaultContent(domain, contentJSON);\n+            } catch (Exception e) {\n+                LOG.error(\"[{}] While loading default Keymaster content\", domain, e);\n+            }\n+        }\n+    }\n+\n+    private Serializable parse(final JsonNode valueNode) {\n+        Serializable value = null;\n+        if (valueNode.isTextual()) {\n+            value = valueNode.textValue();\n+        } else if (valueNode.isNumber()) {\n+            value = valueNode.numberValue();\n+        } else if (valueNode.isBoolean()) {\n+            value = valueNode.booleanValue();\n+        }\n+\n+        return value;\n+    }\n+\n+    private void loadDefaultContent(final String domain, final ResourceWithFallbackLoader contentJSON)\n+            throws IOException {\n+\n+        JsonNode content = MAPPER.readTree(contentJSON.getResource().getInputStream());\n+        for (Iterator<Map.Entry<String, JsonNode>> itor = content.fields(); itor.hasNext();) {\n+            Map.Entry<String, JsonNode> param = itor.next();\n+            Object value = MAPPER.treeToValue(param.getValue(), Object.class);\n+            if (value != null) {\n+                confParamOps.set(domain, param.getKey(), value);\n+            }\n+        }\n+    }\n+}"},{"sha":"445b4d06251216906e509fcfda9b6079e7ad0a44","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,7 +28,7 @@\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAConf;\n+import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.slf4j.Logger;\n@@ -70,9 +70,9 @@ public void load(final String domain, final DataSource datasource) {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(datasource);\n         boolean existingData;\n         try {\n-            existingData = jdbcTemplate.queryForObject(\"SELECT COUNT(0) FROM \" + JPAConf.TABLE, Integer.class) > 0;\n+            existingData = jdbcTemplate.queryForObject(\"SELECT COUNT(0) FROM \" + JPARealm.TABLE, Integer.class) > 0;\n         } catch (DataAccessException e) {\n-            LOG.error(\"[{}] Could not access to table \" + JPAConf.TABLE, domain, e);\n+            LOG.error(\"[{}] Could not access table \" + JPARealm.TABLE, domain, e);\n             existingData = true;\n         }\n "},{"sha":"2bdb045d2373ed64ee5f8f85d954445c6bea9d11","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfDAO.java","status":"removed","additions":0,"deletions":110,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,110 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.dao;\n-\n-import java.util.Optional;\n-import java.util.Collections;\n-import java.util.List;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-public class JPAConfDAO extends AbstractDAO<Conf> implements ConfDAO {\n-\n-    private static final String KEY = \"cd64d66f-6fff-4008-b966-a06b1cc1436d\";\n-\n-    @Autowired\n-    private EntityFactory entityFactory;\n-\n-    @Override\n-    public Conf get() {\n-        Conf instance = entityManager().find(entityFactory.confClass(), KEY);\n-        if (instance == null) {\n-            instance = entityFactory.newEntity(Conf.class);\n-            instance.setKey(KEY);\n-\n-            instance = entityManager().merge(instance);\n-        }\n-\n-        return instance;\n-    }\n-\n-    @Transactional(readOnly = true)\n-    @Override\n-    public Optional<? extends CPlainAttr> find(final String key) {\n-        return get().getPlainAttr(key);\n-    }\n-\n-    @Transactional(readOnly = true)\n-    @Override\n-    public List<String> getValuesAsStrings(final String key) {\n-        Optional<? extends CPlainAttr> attr = find(key);\n-        return attr.isPresent() ? attr.get().getValuesAsStrings() : Collections.<String>emptyList();\n-    }\n-\n-    @Transactional(readOnly = true)\n-    @Override\n-    public <T> T find(final String key, final T defaultValue) {\n-        Optional<? extends CPlainAttr> result = find(key);\n-        if (!result.isPresent()) {\n-            return defaultValue;\n-        }\n-\n-        return result.get().getUniqueValue() == null\n-                ? result.get().getValues().isEmpty()\n-                ? null\n-                : result.get().getValues().get(0).<T>getValue()\n-                : result.get().getUniqueValue().<T>getValue();\n-    }\n-\n-    @Override\n-    public Conf save(final CPlainAttr attr) {\n-        Conf instance = get();\n-\n-        Optional<? extends CPlainAttr> old = instance.getPlainAttr(attr.getSchema().getKey());\n-        if (old.isPresent() && (!attr.getSchema().isUniqueConstraint()\n-                || (!attr.getUniqueValue().getStringValue().equals(old.get().getUniqueValue().getStringValue())))) {\n-\n-            old.get().setOwner(null);\n-            instance.remove(old.get());\n-        }\n-\n-        instance.add(attr);\n-        attr.setOwner(instance);\n-\n-        return entityManager().merge(instance);\n-    }\n-\n-    @Override\n-    public Conf delete(final String key) {\n-        Conf instance = get();\n-        Optional<? extends CPlainAttr> attr = instance.getPlainAttr(key);\n-        if (attr.isPresent()) {\n-            attr.get().setOwner(null);\n-            instance.remove(attr.get());\n-\n-            instance = entityManager().merge(instance);\n-        }\n-\n-        return instance;\n-    }\n-}"},{"sha":"4b61c17a058ac78e36610d383df0aac036f5f8ad","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainAttrDAO.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -22,12 +22,10 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttr;\n \n@@ -36,9 +34,7 @@ public class JPAPlainAttrDAO extends AbstractDAO<PlainAttr<?>> implements PlainA\n     public static <T extends PlainAttr<?>> Class<? extends AbstractPlainAttr<?>> getEntityReference(\n             final Class<T> reference) {\n \n-        return CPlainAttr.class.isAssignableFrom(reference)\n-                ? JPACPlainAttr.class\n-                : GPlainAttr.class.isAssignableFrom(reference)\n+        return GPlainAttr.class.isAssignableFrom(reference)\n                 ? JPAGPlainAttr.class\n                 : APlainAttr.class.isAssignableFrom(reference)\n                 ? JPAAPlainAttr.class"},{"sha":"f537367ec62e3592b2bb1dc94d9cc81d837b8430","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainAttrValueDAO.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -26,17 +26,13 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrUniqueValue;\n@@ -50,10 +46,6 @@ public static <T extends PlainAttrValue> Class<? extends AbstractPlainAttrValue>\n \n         return AbstractPlainAttrValue.class.isAssignableFrom(reference)\n                 ? (Class<? extends AbstractPlainAttrValue>) reference\n-                : reference.equals(CPlainAttrValue.class)\n-                ? JPACPlainAttrValue.class\n-                : reference.equals(CPlainAttrUniqueValue.class)\n-                ? JPACPlainAttrUniqueValue.class\n                 : reference.equals(GPlainAttrValue.class)\n                 ? JPAGPlainAttrValue.class\n                 : reference.equals(GPlainAttrUniqueValue.class)"},{"sha":"d9d3fe718d847b3c6a35f7ea546dc63957920c8a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -63,10 +63,6 @@\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n@@ -96,10 +92,6 @@\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.JPAConf;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrValue;\n@@ -203,8 +195,6 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAAMembership();\n         } else if (reference.equals(UMembership.class)) {\n             result = (E) new JPAUMembership();\n-        } else if (reference.equals(Conf.class)) {\n-            result = (E) new JPAConf();\n         } else if (reference.equals(AnyAbout.class)) {\n             result = (E) new JPAAnyAbout();\n         } else if (reference.equals(MailTemplate.class)) {\n@@ -255,12 +245,6 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAGPlainAttrValue();\n         } else if (reference.equals(GPlainAttrUniqueValue.class)) {\n             result = (E) new JPAGPlainAttrUniqueValue();\n-        } else if (reference.equals(CPlainAttr.class)) {\n-            result = (E) new JPACPlainAttr();\n-        } else if (reference.equals(CPlainAttrValue.class)) {\n-            result = (E) new JPACPlainAttrValue();\n-        } else if (reference.equals(CPlainAttrUniqueValue.class)) {\n-            result = (E) new JPACPlainAttrUniqueValue();\n         } else if (reference.equals(Report.class)) {\n             result = (E) new JPAReport();\n         } else if (reference.equals(ReportTemplate.class)) {\n@@ -334,11 +318,6 @@ public Class<? extends AnyObject> anyObjectClass() {\n         return JPAAnyObject.class;\n     }\n \n-    @Override\n-    public Class<? extends Conf> confClass() {\n-        return JPAConf.class;\n-    }\n-\n     @Override\n     public Class<? extends AnySearchDAO> anySearchDAOClass() {\n         return JPAAnySearchDAO.class;"},{"sha":"40fa835275e2a30116451775fa3fc36058bd3741","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttr.java","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,116 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.persistence.CascadeType;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n-import javax.persistence.OneToOne;\n-import javax.persistence.Table;\n-import javax.validation.Valid;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-\n-/**\n- * Configuration attribute.\n- */\n-@Entity\n-@Table(name = JPACPlainAttr.TABLE)\n-public class JPACPlainAttr extends AbstractPlainAttr<Conf> implements CPlainAttr {\n-\n-    private static final long serialVersionUID = 8022331942314540648L;\n-\n-    public static final String TABLE = \"CPlainAttr\";\n-\n-    /**\n-     * The owner of this attribute.\n-     */\n-    @ManyToOne(fetch = FetchType.EAGER)\n-    private JPAConf owner;\n-\n-    /**\n-     * Values of this attribute (if schema is not UNIQUE).\n-     */\n-    @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, orphanRemoval = true, mappedBy = \"attribute\")\n-    @Valid\n-    private List<JPACPlainAttrValue> values = new ArrayList<>();\n-\n-    /**\n-     * Value of this attribute (if schema is UNIQUE).\n-     */\n-    @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"attribute\")\n-    @Valid\n-    private JPACPlainAttrUniqueValue uniqueValue;\n-\n-    @Override\n-    public Conf getOwner() {\n-        return owner;\n-    }\n-\n-    @Override\n-    public void setOwner(final Conf owner) {\n-        checkType(owner, JPAConf.class);\n-        this.owner = (JPAConf) owner;\n-    }\n-\n-    /**\n-     * Explicitly overrides default schema check (used for users, groups and any objects) since Conf does not own any\n-     * type reference.\n-     *\n-     * @param schema schema for this attribute\n-     */\n-    @Override\n-    public void setSchema(final PlainSchema schema) {\n-        checkType(schema, JPAPlainSchema.class);\n-        this.schema = (JPAPlainSchema) schema;\n-    }\n-\n-    @Override\n-    protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, JPACPlainAttrValue.class);\n-        return values.add((JPACPlainAttrValue) attrValue);\n-    }\n-\n-    @Override\n-    public List<? extends CPlainAttrValue> getValues() {\n-        return values;\n-    }\n-\n-    @Override\n-    public CPlainAttrUniqueValue getUniqueValue() {\n-        return uniqueValue;\n-    }\n-\n-    @Override\n-    public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, JPACPlainAttrUniqueValue.class);\n-        this.uniqueValue = (JPACPlainAttrUniqueValue) uniqueValue;\n-    }\n-}"},{"sha":"ef447bed156a88279fcbc51b2ebc73b99ec3aafb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttrUniqueValue.java","status":"removed","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrUniqueValue.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,69 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import javax.persistence.Entity;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToOne;\n-import javax.persistence.Table;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-\n-@Entity\n-@Table(name = JPACPlainAttrUniqueValue.TABLE)\n-public class JPACPlainAttrUniqueValue extends AbstractPlainAttrValue implements CPlainAttrUniqueValue {\n-\n-    private static final long serialVersionUID = -2072445894710677162L;\n-\n-    public static final String TABLE = \"CPlainAttrUniqueValue\";\n-\n-    @OneToOne(optional = false)\n-    private JPACPlainAttr attribute;\n-\n-    @ManyToOne(optional = false)\n-    @JoinColumn(name = \"schema_id\")\n-    private JPAPlainSchema schema;\n-\n-    @Override\n-    public CPlainAttr getAttr() {\n-        return attribute;\n-    }\n-\n-    @Override\n-    public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, JPACPlainAttr.class);\n-        this.attribute = (JPACPlainAttr) attr;\n-    }\n-\n-    @Override\n-    public PlainSchema getSchema() {\n-        return schema;\n-    }\n-\n-    @Override\n-    public void setSchema(final PlainSchema schema) {\n-        checkType(schema, JPAPlainSchema.class);\n-        this.schema = (JPAPlainSchema) schema;\n-    }\n-}"},{"sha":"f4cbbcae52aef1405dbf936d89ac9baa7db11cb3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttrValue.java","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttrValue.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,52 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import javax.persistence.Entity;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.Table;\n-import javax.validation.constraints.NotNull;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n-\n-@Entity\n-@Table(name = JPACPlainAttrValue.TABLE)\n-public class JPACPlainAttrValue extends AbstractPlainAttrValue implements CPlainAttrValue {\n-\n-    private static final long serialVersionUID = -4029895248193486171L;\n-\n-    public static final String TABLE = \"CPlainAttrValue\";\n-\n-    @ManyToOne\n-    @NotNull\n-    private JPACPlainAttr attribute;\n-\n-    @Override\n-    public CPlainAttr getAttr() {\n-        return attribute;\n-    }\n-\n-    @Override\n-    public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, JPACPlainAttr.class);\n-        this.attribute = (JPACPlainAttr) attr;\n-    }\n-}"},{"sha":"3911d28f466e39698e09064e977d7431b357d9fa","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAConf.java","status":"removed","additions":0,"deletions":166,"changes":166,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,166 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.conf;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.Optional;\n-import javax.persistence.Cacheable;\n-import javax.persistence.CascadeType;\n-import javax.persistence.Entity;\n-import javax.persistence.OneToMany;\n-import javax.persistence.Table;\n-import javax.validation.Valid;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n-import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractProvidedKeyEntity;\n-\n-@Entity\n-@Table(name = JPAConf.TABLE)\n-@Cacheable\n-public class JPAConf extends AbstractProvidedKeyEntity implements Conf {\n-\n-    private static final long serialVersionUID = 7671699609879382195L;\n-\n-    public static final String TABLE = \"SyncopeConf\";\n-\n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"owner\")\n-    @Valid\n-    private List<JPACPlainAttr> plainAttrs = new ArrayList<>();\n-\n-    @Override\n-    public boolean add(final CPlainAttr attr) {\n-        checkType(attr, JPACPlainAttr.class);\n-        return plainAttrs.add((JPACPlainAttr) attr);\n-    }\n-\n-    @Override\n-    public boolean remove(final CPlainAttr attr) {\n-        checkType(attr, JPACPlainAttr.class);\n-        return getPlainAttrs().remove((JPACPlainAttr) attr);\n-    }\n-\n-    @Override\n-    public Optional<? extends CPlainAttr> getPlainAttr(final String plainSchema) {\n-        return getPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null\n-                && plainSchema.equals(plainAttr.getSchema().getKey())).findFirst();\n-    }\n-\n-    @Override\n-    public List<? extends CPlainAttr> getPlainAttrs() {\n-        return plainAttrs;\n-    }\n-\n-    @Override\n-    public boolean add(final ExternalResource resource) {\n-        return false;\n-    }\n-\n-    @Override\n-    public List<? extends ExternalResource> getResources() {\n-        return Collections.emptyList();\n-    }\n-\n-    @Override\n-    public boolean add(final AnyTypeClass auxClass) {\n-        return false;\n-    }\n-\n-    @Override\n-    public List<? extends AnyTypeClass> getAuxClasses() {\n-        return Collections.emptyList();\n-    }\n-\n-    @Override\n-    public String getStatus() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setStatus(final String status) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-    public Realm getRealm() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setRealm(final Realm realm) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-    public AnyType getType() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setType(final AnyType type) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-    public Date getCreationDate() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setCreationDate(final Date creationDate) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-    public String getCreator() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setCreator(final String creator) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-\n-    public Date getLastChangeDate() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setLastChangeDate(final Date lastChangeDate) {\n-        // nothing to do\n-    }\n-\n-    @Override\n-    public String getLastModifier() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setLastModifier(final String lastModifier) {\n-    }\n-}"},{"sha":"9694850b0153bb30bd824d5974f7bcc780b100cc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/AnyValidator.java","status":"modified","additions":14,"deletions":17,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.core.persistence.api.entity.Membership;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n \n@@ -57,25 +56,23 @@ private boolean raiseNotAllowedViolation(\n     public boolean isValid(final Any any, final ConstraintValidatorContext context) {\n         context.disableDefaultConstraintViolation();\n \n-        if (!(any instanceof Conf)) {\n-            AllowedSchemas<PlainSchema> allowedPlainSchemas =\n-                    ApplicationContextProvider.getApplicationContext().getBean(AnyUtilsFactory.class).\n-                            getInstance(any.getType().getKind()).dao().findAllowedSchemas(any, PlainSchema.class);\n+        AllowedSchemas<PlainSchema> allowedPlainSchemas =\n+                ApplicationContextProvider.getApplicationContext().getBean(AnyUtilsFactory.class).\n+                        getInstance(any.getType().getKind()).dao().findAllowedSchemas(any, PlainSchema.class);\n \n-            for (PlainAttr<?> attr : ((Any<?>) any).getPlainAttrs()) {\n-                if (attr != null && !allowedPlainSchemas.forSelfContains(attr.getSchema().getKey())) {\n-                    return raiseNotAllowedViolation(context, attr.getSchema().getKey(), null);\n-                }\n+        for (PlainAttr<?> attr : ((Any<?>) any).getPlainAttrs()) {\n+            if (attr != null && !allowedPlainSchemas.forSelfContains(attr.getSchema().getKey())) {\n+                return raiseNotAllowedViolation(context, attr.getSchema().getKey(), null);\n             }\n-            if (any instanceof GroupableRelatable) {\n-                for (Membership<?> membership : ((GroupableRelatable<?, ?, ?, ?, ?>) any).getMemberships()) {\n-                    for (PlainAttr<?> attr : ((GroupableRelatable<?, ?, ?, ?, ?>) any).getPlainAttrs(membership)) {\n-                        if (attr != null && !allowedPlainSchemas.forMembershipsContains(\n-                                membership.getRightEnd(), attr.getSchema().getKey())) {\n+        }\n+        if (any instanceof GroupableRelatable) {\n+            for (Membership<?> membership : ((GroupableRelatable<?, ?, ?, ?, ?>) any).getMemberships()) {\n+                for (PlainAttr<?> attr : ((GroupableRelatable<?, ?, ?, ?, ?>) any).getPlainAttrs(membership)) {\n+                    if (attr != null && !allowedPlainSchemas.forMembershipsContains(\n+                            membership.getRightEnd(), attr.getSchema().getKey())) {\n \n-                            return raiseNotAllowedViolation(\n-                                    context, attr.getSchema().getKey(), membership.getRightEnd());\n-                        }\n+                        return raiseNotAllowedViolation(\n+                                context, attr.getSchema().getKey(), membership.getRightEnd());\n                     }\n                 }\n             }"},{"sha":"46827baa5fcda0162ef3ae6faf60db9190397b38","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-oracle.xml","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -135,16 +135,4 @@ under the License.\n       </unique-constraint>\n     </table>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n-    <table>\n-      <unique-constraint>\n-        <column-name>booleanValue</column-name>\n-        <column-name>dateValue</column-name>\n-        <column-name>stringValue</column-name>\n-        <column-name>doubleValue</column-name>\n-        <column-name>longValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-    </table>\n-  </entity>\n </entity-mappings>"},{"sha":"90714ae8b9ff3e7a14e88d18780dfc97a2162520","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-sqlserver.xml","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -135,16 +135,4 @@ under the License.\n       </unique-constraint>\n     </table>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n-    <table>\n-      <unique-constraint>\n-        <column-name>booleanValue</column-name>\n-        <column-name>dateValue</column-name>\n-        <column-name>stringValue</column-name>\n-        <column-name>doubleValue</column-name>\n-        <column-name>longValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-    </table>\n-  </entity>\n </entity-mappings>"},{"sha":"4963e4f71cfae9190c7fcc9622e4c97ce843c962","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm.xml","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -171,28 +171,4 @@ under the License.\n       </unique-constraint>\n     </table>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n-    <table>\n-      <unique-constraint>\n-        <column-name>booleanValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-      <unique-constraint>\n-        <column-name>dateValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-      <unique-constraint>\n-        <column-name>stringValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-      <unique-constraint>\n-        <column-name>doubleValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-      <unique-constraint>\n-        <column-name>longValue</column-name>\n-        <column-name>schema_id</column-name>\n-      </unique-constraint>\n-    </table>\n-  </entity>  \n </entity-mappings>"},{"sha":"fa5e0b229f7413218c30d9990770f16c087719d9","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":0,"deletions":132,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,138 +20,6 @@ under the License.\n <dataset>\n   <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n-\n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"password.cipher.algorithm\"/>\n-  <CPlainAttrValue id=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n-                   attribute_id=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SSHA256\"/>\n-\n-  <!-- notificationjob.cronExpression:\n-  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n-  + provided as empty string: NotificationJob disabled\n-  + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n-  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notificationjob.cronExpression\"/>\n-  <CPlainAttrValue id=\"4828ea70-d151-4c16-b344-2d07b1956bee\"\n-                   attribute_id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\" stringValue=\"\"/>\n-  \n-  <SyncopeSchema id=\"notification.maxRetries\"/>\n-  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notification.maxRetries\"/>\n-  <CPlainAttrValue id=\"010e2bdc-0094-4918-bac3-d0d5ea17b54a\"\n-                   attribute_id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\" longValue=\"3\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.length\"/>\n-  <CPlainAttrValue id=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n-                   attribute_id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.expireTime\"/>\n-  <CPlainAttrValue id=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n-                   attribute_id=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"selfRegistration.allowed\"/>\n-  <CPlainAttrValue id=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n-                   attribute_id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.allowed\"/>\n-  <CPlainAttrValue id=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n-                   attribute_id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.securityQuestion\"/>\n-  <CPlainAttrValue id=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n-                   attribute_id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"authentication.attributes\"/>\n-  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.attributes\"/>\n-  <CPlainAttrValue id=\"c13660b5-926c-47ea-946d-52db32dd492b\"\n-                   attribute_id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\" stringValue=\"username\"/>\n-  <CPlainAttrValue id=\"0f112dbd-00d4-441c-b732-331e7f348f8a\"\n-                   attribute_id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\" stringValue=\"email\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.statuses\"/>\n-  <CPlainAttrValue id=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n-  <CPlainAttrValue id=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"log.lastlogindate\"/>\n-  <CPlainAttrValue id=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n-                   attribute_id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n-\n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n-  <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n-                   attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n-\n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"cfec3140-562d-459c-ac6a-e3e10758661d\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"jwt.lifetime.minutes\"/>\n-  <CPlainAttrValue id=\"447e2456-3ff5-41bc-8ff1-cbb0567546cb\"\n-                   attribute_id=\"cfec3140-562d-459c-ac6a-e3e10758661d\" longValue=\"120\"/>\n-  \n-  <!--  Connector and Resource configuration history -->                   \n-  <SyncopeSchema id=\"connector.conf.history.size\"/>\n-  <PlainSchema id=\"connector.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"ae36c6ab-0f39-40d7-b6e6-3b8394547c9c\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"connector.conf.history.size\"/>\n-  <CPlainAttrValue id=\"4989ce5d-7b42-4a5c-b725-54286888df10\"\n-                   attribute_id=\"ae36c6ab-0f39-40d7-b6e6-3b8394547c9c\" longValue=\"10\"/>\n-  \n-  <SyncopeSchema id=\"resource.conf.history.size\"/>\n-  <PlainSchema id=\"resource.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"ae7ae53a-74cf-48b0-9a57-6d2c94928e60\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"resource.conf.history.size\"/>\n-  <CPlainAttrValue id=\"059ac3e1-687f-4dd9-a28b-a23f8b436f31\"\n-                   attribute_id=\"ae7ae53a-74cf-48b0-9a57-6d2c94928e60\" longValue=\"10\"/>\n-\n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>"},{"sha":"846244d67457f169abfe747aaa76cb2c1d008390","filename":"core/persistence-jpa/src/main/resources/domains/MasterKeymasterContent.json","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterKeymasterContent.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterKeymasterContent.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterKeymasterContent.json?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,18 @@\n+{\n+  \"password.cipher.algorithm\": \"SSHA256\",\n+  \"notificationjob.cronExpression\": \"\",\n+  \"notification.maxRetries\": 3,\n+  \"token.length\": 256,\n+  \"token.expireTime\": 60,\n+  \"selfRegistration.allowed\": true,\n+  \"passwordReset.allowed\": true,\n+  \"passwordReset.securityQuestion\": true,\n+  \"authentication.attributes\": [\"username\"],\n+  \"authentication.statuses\": [\"created\", \"active\"],\n+  \"log.lastlogindate\": true,\n+  \"return.password.value\": false,\n+  \"jwt.lifetime.minutes\": 120,\n+  \"connector.conf.history.size\": 10,\n+  \"resource.conf.history.size\": 10,\n+  \"tasks.interruptMaxRetries\": 1\n+}\n\\ No newline at end of file"},{"sha":"9981bdbfce7c2698e7b0135494976acbf78d4d02","filename":"core/persistence-jpa/src/main/resources/indexes.xml","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -50,12 +50,6 @@ under the License.\n   <entry key=\"GPlainAttrValue_doublevalueIndex\">CREATE INDEX GAttrValue_doublevalueIndex ON GPlainAttrValue(doublevalue)</entry>\n   <entry key=\"GPlainAttrValue_booleanvalueIndex\">CREATE INDEX GAttrValue_booleanvalueIndex ON GPlainAttrValue(booleanvalue)</entry>\n \n-  <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n-  <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n-  <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n-  <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n-  <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n-\n   <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n   <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n   <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n@@ -75,9 +69,6 @@ under the License.\n   <entry key=\"APlainAttrValue_attrIndex\">CREATE INDEX APlainAttrValue_attrIndex on APlainAttrValue(attribute_id)</entry>\n   <entry key=\"APAttrUniqueValue_attrIndex\">CREATE INDEX APAttrUniqueValue_attrIndex on APlainAttrUniqueValue(attribute_id)</entry>\n \n-  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n-  <entry key=\"CPAttrUniqueValue_attrIndex\">CREATE INDEX CPAttrUniqueValue_attrIndex on CPlainAttrUniqueValue(attribute_id)</entry>\n-\n   <entry key=\"UPlainAttr_owner_Index\">CREATE INDEX UPlainAttr_owner_Index on UPlainAttr(owner_id)</entry>\n   <entry key=\"UPlainAttr_schema_Index\">CREATE INDEX UPlainAttr_schema_Index on UPlainAttr(schema_id)</entry>\n   <entry key=\"UPlainAttr_membership_Index\">CREATE INDEX UPlainAttr_membership_Index on UPlainAttr(membership_id)</entry>\n@@ -89,8 +80,5 @@ under the License.\n   <entry key=\"APlainAttr_schema_Index\">CREATE INDEX APlainAttr_schema_Index on APlainAttr(schema_id)</entry>\n   <entry key=\"APlainAttr_membership_Index\">CREATE INDEX APlainAttr_membership_Index on APlainAttr(membership_id)</entry>\n \n-  <entry key=\"CPlainAttr_owner_Index\">CREATE INDEX CPlainAttr_owner_Index on CPlainAttr(owner_id)</entry>\n-  <entry key=\"CPlainAttr_schema_Index\">CREATE INDEX CPlainAttr_schema_Index on CPlainAttr(schema_id)</entry>\n-\n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n </properties>"},{"sha":"0841aa0de0864d9acf3a768a6c85a4920a4b8303","filename":"core/persistence-jpa/src/main/resources/persistence.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -23,5 +23,4 @@ any.search.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO\n user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAConfDAO\n openjpa.RemoteCommitProvider=sjvm"},{"sha":"f245b64ee683181e9f4303446bf73145fffdca05","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/DummyConfParamOps.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DummyConfParamOps implements ConfParamOps {\n+\n+    @Override\n+    public Map<String, Object> list(final String domain) {\n+        return Collections.emptyMap();\n+    }\n+\n+    @Override\n+    public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n+        return defaultValue;\n+    }\n+\n+    @Override\n+    public <T> void set(final String domain, final String key, final T value) {\n+    }\n+\n+    @Override\n+    public void remove(final String domain, final String key) {\n+    }\n+}"},{"sha":"69171e72dd9bb295359d5e1626bb3e014a3c6533","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/TestInitializer.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -65,6 +65,5 @@ public void afterPropertiesSet() throws Exception {\n                     \"Two\",\n                     domainsHolder.getDomains().get(\"Two\"));\n         }\n-\n     }\n }"},{"sha":"55f0b6b51128b0c707868754aeaf14b6c835b26a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConfTest.java","status":"removed","additions":0,"deletions":123,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,123 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.inner;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n-import java.util.Optional;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.common.lib.types.EntityViolationType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Transactional(\"Master\")\n-public class ConfTest extends AbstractTest {\n-\n-    @Autowired\n-    private ConfDAO confDAO;\n-\n-    @Autowired\n-    private PlainSchemaDAO plainSchemaDAO;\n-\n-    @Test\n-    public void read() {\n-        Optional<? extends CPlainAttr> conf = confDAO.find(\"selfRegistration.allowed\");\n-        assertTrue(conf.isPresent());\n-        assertTrue(conf.get().getValues().get(0).getBooleanValue());\n-\n-        conf = confDAO.find(\"authentication.statuses\");\n-        assertTrue(conf.isPresent());\n-        assertEquals(2, conf.get().getValues().size());\n-\n-        conf = confDAO.find(\"non.existing\");\n-        assertFalse(conf.isPresent());\n-    }\n-\n-    private void add(final CPlainAttr newAttr, final String value) {\n-        PlainAttrValue attrValue;\n-        if (newAttr.getSchema().isUniqueConstraint()) {\n-            attrValue = entityFactory.newEntity(CPlainAttrUniqueValue.class);\n-            ((PlainAttrUniqueValue) attrValue).setSchema(newAttr.getSchema());\n-        } else {\n-            attrValue = entityFactory.newEntity(CPlainAttrValue.class);\n-        }\n-        newAttr.add(value, attrValue);\n-    }\n-\n-    @Test\n-    public void setAndDelete() {\n-        // 1. create CSChema\n-        PlainSchema useless = entityFactory.newEntity(PlainSchema.class);\n-        useless.setKey(\"useless\");\n-        useless.setType(AttrSchemaType.Date);\n-        useless.setConversionPattern(\"yyyy-MM-dd\");\n-        useless = plainSchemaDAO.save(useless);\n-\n-        // 2. create conf\n-        CPlainAttr newConf = entityFactory.newEntity(CPlainAttr.class);\n-        newConf.setOwner(confDAO.get());\n-        newConf.setSchema(useless);\n-        add(newConf, \"2014-06-20\");\n-        confDAO.save(newConf);\n-\n-        Optional<? extends CPlainAttr> actual = confDAO.find(\"useless\");\n-        assertEquals(actual.get().getValuesAsStrings(), newConf.getValuesAsStrings());\n-\n-        // 3. update conf\n-        newConf.getValues().clear();\n-        add(newConf, \"2014-06-20\");\n-        confDAO.save(newConf);\n-\n-        actual = confDAO.find(\"useless\");\n-        assertEquals(actual.get().getValuesAsStrings(), newConf.getValuesAsStrings());\n-\n-        // 4. delete conf\n-        confDAO.delete(\"useless\");\n-        plainSchemaDAO.delete(\"useless\");\n-        assertFalse(confDAO.find(\"useless\").isPresent());\n-    }\n-\n-    @Test\n-    public void issueSYNCOPE418() {\n-        try {\n-            PlainSchema failing = entityFactory.newEntity(PlainSchema.class);\n-            failing.setKey(\"http://schemas.examples.org/security/authorization/organizationUnit\");\n-            failing.setType(AttrSchemaType.String);\n-            plainSchemaDAO.save(failing);\n-\n-            fail(\"This should not happen\");\n-        } catch (InvalidEntityException e) {\n-            assertTrue(e.hasViolation(EntityViolationType.InvalidKey));\n-        }\n-    }\n-}"},{"sha":"95df68f958ae1d070db81354dd100782dab270e7","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -78,7 +78,7 @@ public static void unsetAuthContext() {\n \n     @Test\n     public void readPlainSchemas() {\n-        assertEquals(12, plainSchemaDAO.findAll().size());\n+        assertEquals(1, plainSchemaDAO.findAll().size());\n     }\n \n     @Test"},{"sha":"a9e18959f90b8675da1727828a221f769f7a3b26","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -54,7 +54,7 @@ public class PlainSchemaTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<PlainSchema> schemas = plainSchemaDAO.findAll();\n-        assertEquals(41, schemas.size());\n+        assertEquals(26, schemas.size());\n     }\n \n     @Test"},{"sha":"fefa7ff4b54c046f2846c4703903514922aaaf6a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ConfTest.java","status":"removed","additions":0,"deletions":73,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConfTest.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,73 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.outer;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Transactional(\"Master\")\n-public class ConfTest extends AbstractTest {\n-\n-    @Autowired\n-    private ConfDAO confDAO;\n-\n-    @Autowired\n-    private PlainSchemaDAO plainSchemaDAO;\n-\n-    private void add(final CPlainAttr newAttr, final String value) {\n-        PlainAttrValue attrValue;\n-        if (newAttr.getSchema().isUniqueConstraint()) {\n-            attrValue = entityFactory.newEntity(CPlainAttrUniqueValue.class);\n-            ((PlainAttrUniqueValue) attrValue).setSchema(newAttr.getSchema());\n-        } else {\n-            attrValue = entityFactory.newEntity(CPlainAttrValue.class);\n-        }\n-        newAttr.add(value, attrValue);\n-    }\n-\n-    @Test\n-    public void update() {\n-        CPlainAttr expireTime = confDAO.find(\"token.expireTime\").get();\n-        assertNotNull(expireTime);\n-        long value = expireTime.getValues().get(0).getLongValue();\n-        value++;\n-\n-        CPlainAttr attr = entityFactory.newEntity(CPlainAttr.class);\n-        attr.setSchema(plainSchemaDAO.find(\"token.expireTime\"));\n-        add(attr, String.valueOf(value));\n-\n-        confDAO.save(expireTime);\n-        entityManager().flush();\n-\n-        CPlainAttr actual = confDAO.find(\"token.expireTime\").get();\n-        assertEquals(expireTime, actual);\n-    }\n-}"},{"sha":"9ee855ed9293822e108f843b1f15a9ded12487f6","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":133,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,139 +18,7 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <SyncopeDomain id=\"Two\" adminCipherAlgorithm=\"SHA\" adminPwd=\"2AA60A8FF7FCD473D321E0146AFD9E26DF395147\"/>  \n-  \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n-\n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"password.cipher.algorithm\"/>\n-  <CPlainAttrValue id=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n-                   attribute_id=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n-\n-  <!-- notificationjob.cronExpression:\n-  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n-  + provided as empty string: NotificationJob disabled\n-  + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n-  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notificationjob.cronExpression\"/>\n-  <CPlainAttrValue id=\"4828ea70-d151-4c16-b344-2d07b1956bee\"\n-                   attribute_id=\"abd5a2d2-25ee-48b7-b5ca-76813b54a6f2\" stringValue=\"0/20 * * * * ?\"/>\n-  \n-  <SyncopeSchema id=\"notification.maxRetries\"/>\n-  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"notification.maxRetries\"/>\n-  <CPlainAttrValue id=\"010e2bdc-0094-4918-bac3-d0d5ea17b54a\"\n-                   attribute_id=\"0523d7e6-af13-4e1e-9edb-e35971aacee7\" longValue=\"3\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.length\"/>\n-  <CPlainAttrValue id=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n-                   attribute_id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.expireTime\"/>\n-  <CPlainAttrValue id=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n-                   attribute_id=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"selfRegistration.allowed\"/>\n-  <CPlainAttrValue id=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n-                   attribute_id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.allowed\"/>\n-  <CPlainAttrValue id=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n-                   attribute_id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.securityQuestion\"/>\n-  <CPlainAttrValue id=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n-                   attribute_id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"authentication.attributes\"/>\n-  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.attributes\"/>\n-  <CPlainAttrValue id=\"c13660b5-926c-47ea-946d-52db32dd492b\"\n-                   attribute_id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\" stringValue=\"username\"/>\n-  <CPlainAttrValue id=\"0f112dbd-00d4-441c-b732-331e7f348f8a\"\n-                   attribute_id=\"577c6c4d-7149-43c2-9821-9ab4510effbd\" stringValue=\"userId\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.statuses\"/>\n-  <CPlainAttrValue id=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n-  <CPlainAttrValue id=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"log.lastlogindate\"/>\n-  <CPlainAttrValue id=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n-                   attribute_id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n-\n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n-  <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n-                   attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n-  \n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"cfec3140-562d-459c-ac6a-e3e10758661d\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"jwt.lifetime.minutes\"/>\n-  <CPlainAttrValue id=\"447e2456-3ff5-41bc-8ff1-cbb0567546cb\"\n-                   attribute_id=\"cfec3140-562d-459c-ac6a-e3e10758661d\" longValue=\"120\"/>\n-    \n-  <!--  Connector and Resource configuration history -->                   \n-  <SyncopeSchema id=\"connector.conf.history.size\"/>\n-  <PlainSchema id=\"connector.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"ae36c6ab-0f39-40d7-b6e6-3b8394547c9c\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"connector.conf.history.size\"/>\n-  <CPlainAttrValue id=\"4989ce5d-7b42-4a5c-b725-54286888df10\"\n-                   attribute_id=\"ae36c6ab-0f39-40d7-b6e6-3b8394547c9c\" longValue=\"10\"/>\n-  \n-  <SyncopeSchema id=\"resource.conf.history.size\"/>\n-  <PlainSchema id=\"resource.conf.history.size\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"ae7ae53a-74cf-48b0-9a57-6d2c94928e60\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"resource.conf.history.size\"/>\n-  <CPlainAttrValue id=\"059ac3e1-687f-4dd9-a28b-a23f8b436f31\"\n-                   attribute_id=\"ae7ae53a-74cf-48b0-9a57-6d2c94928e60\" longValue=\"10\"/>\n+  <SyncopeDomain id=\"Two\" adminCipherAlgorithm=\"SHA\" adminPwd=\"2AA60A8FF7FCD473D321E0146AFD9E26DF395147\"/>\n   \n   <!-- sample policies -->\n   <PasswordPolicy id=\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\" description=\"a password policy\""},{"sha":"9fa010a8d2d7cdadf3731cffcd68616990267d71","filename":"core/persistence-jpa/src/test/resources/domains/MasterKeymasterContent.json","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterKeymasterContent.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterKeymasterContent.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterKeymasterContent.json?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,18 @@\n+{\n+  \"password.cipher.algorithm\": \"SHA1\",\n+  \"notificationjob.cronExpression\": \"0/20 * * * * ?\",\n+  \"notification.maxRetries\": 3,\n+  \"token.length\": 256,\n+  \"token.expireTime\": 60,\n+  \"selfRegistration.allowed\": true,\n+  \"passwordReset.allowed\": true,\n+  \"passwordReset.securityQuestion\": true,\n+  \"authentication.attributes\": [\"username\", \"userId\"],\n+  \"authentication.statuses\": [\"created\", \"active\"],\n+  \"log.lastlogindate\": true,\n+  \"return.password.value\": false,\n+  \"jwt.lifetime.minutes\": 120,\n+  \"connector.conf.history.size\": 10,\n+  \"resource.conf.history.size\": 10,\n+  \"tasks.interruptMaxRetries\": 1\n+}\n\\ No newline at end of file"},{"sha":"4d4d46635e844163296339c5dc797bd708c4e42c","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":0,"deletions":94,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -20,100 +20,6 @@ under the License.\n <dataset>\n   <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"/>\n-\n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"56db89b9-119e-4923-a16e-f42823b90c66\" \n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"password.cipher.algorithm\"/>\n-  <CPlainAttrValue id=\"870323e8-8db6-4a64-b512-15f9fa094905\" \n-                   attribute_id=\"56db89b9-119e-4923-a16e-f42823b90c66\" stringValue=\"SHA1\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.length\"/>\n-  <CPlainAttrValue id=\"372e28e0-3af1-4774-b668-81aa84903b75\"\n-                   attribute_id=\"58977caa-dcf7-4ae3-8591-7e3d0a395200\" longValue=\"256\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"01f69abd-df85-4e1b-bb88-ad570594e045\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"token.expireTime\"/>\n-  <CPlainAttrValue id=\"963970cf-4af6-46bb-875b-a1b758ac8d05\"\n-                   attribute_id=\"01f69abd-df85-4e1b-bb88-ad570594e045\" longValue=\"60\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"selfRegistration.allowed\"/>\n-  <CPlainAttrValue id=\"c8b9a0f1-0168-4e2a-95b8-4819fc70e620\"\n-                   attribute_id=\"7b19cefa-d606-477c-8431-c9464f53fe8b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.allowed\"/>\n-  <CPlainAttrValue id=\"b1ecea41-ab7c-4dd3-9e3e-b6baf0f98046\"\n-                   attribute_id=\"dc35cc97-6ed9-4bb2-bb3b-509f4cd8f3d3\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"passwordReset.securityQuestion\"/>\n-  <CPlainAttrValue id=\"b5e8e79d-8039-4318-9698-fe5e181ebe98\"\n-                   attribute_id=\"e5a712ad-53fd-4102-ba55-fb45caed5f7b\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"authentication.statuses\"/>\n-  <CPlainAttrValue id=\"4b8e7d2b-f527-43a3-a2e2-5530dcab2f52\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"created\"/>\n-  <CPlainAttrValue id=\"f0c89f2c-ea87-4c95-a1cf-142bf6e6f523\"\n-                   attribute_id=\"888ae8e1-a295-4ee2-a15e-31dbf6dfc3f9\" stringValue=\"active\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"log.lastlogindate\"/>\n-  <CPlainAttrValue id=\"162dd874-0417-4bb9-9724-db1ff2952dd1\"\n-                   attribute_id=\"9891c0a7-27ee-4215-9eea-ca32e580b4e4\" booleanValue=\"1\"/>\n-\n-  <SyncopeSchema id=\"tasks.interruptMaxRetries\"/>\n-  <PlainSchema id=\"tasks.interruptMaxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"tasks.interruptMaxRetries\"/>\n-  <CPlainAttrValue id=\"5dc3f4e3-ff9f-4558-a9ac-15336b63a2ad\"\n-                   attribute_id=\"c2b9ca96-c6ef-433d-8287-0e0cfd0ad0db\" longValue=\"20\"/>\n-  \n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"return.password.value\"/>\n-  <CPlainAttrValue id=\"e5fa94db-b524-4309-908d-8198d0b3f779\"\n-                   attribute_id=\"bcfd7efc-0605-4b5e-b4bb-85c1d5f6493a\" booleanValue=\"0\"/>\n-  \n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CPlainAttr id=\"cfec3140-562d-459c-ac6a-e3e10758661d\"\n-              owner_id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\" schema_id=\"jwt.lifetime.minutes\"/>\n-  <CPlainAttrValue id=\"447e2456-3ff5-41bc-8ff1-cbb0567546cb\"\n-                   attribute_id=\"cfec3140-562d-459c-ac6a-e3e10758661d\" longValue=\"120\"/>\n-\n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>"},{"sha":"796f3a047249cbded71d40388e48af3b6b9e5a48","filename":"core/persistence-jpa/src/test/resources/domains/TwoKeymasterContent.json","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoKeymasterContent.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoKeymasterContent.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoKeymasterContent.json?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,15 @@\n+{\n+  \"password.cipher.algorithm\": \"SHA1\",\n+  \"token.length\": 256,\n+  \"token.expireTime\": 60,\n+  \"selfRegistration.allowed\": true,\n+  \"passwordReset.allowed\": true,\n+  \"passwordReset.securityQuestion\": true,\n+  \"authentication.attributes\": [\"username\"],\n+  \"authentication.statuses\": [\"created\", \"active\"],\n+  \"log.lastlogindate\": true,\n+  \"return.password.value\": false,\n+  \"jwt.lifetime.minutes\": 120,\n+  \"connector.conf.history.size\": 10,\n+  \"resource.conf.history.size\": 10\n+}\n\\ No newline at end of file"},{"sha":"d410761f49142dc72ccb9ade282838dddd9d6c5e","filename":"core/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -89,6 +89,5 @@ under the License.\n     <module>workflow-api</module>\n     <module>workflow-java</module>\n     <module>starter</module>\n-    <module>upgrade</module>\n   </modules>\n </project>"},{"sha":"a9610df6a79781873f3051accdd9ccbb1860a9c8","filename":"core/provisioning-java/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -173,13 +173,13 @@ under the License.\n     \n     <resources>\n       <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n+        <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n     </resources>\n     <testResources>\n       <testResource>\n-        <directory>${basedir}/src/test/resources</directory>\n+        <directory>src/test/resources</directory>\n         <filtering>true</filtering>\n       </testResource>\n       <testResource>"},{"sha":"0bfdb24e1438217648f253f9f56c1757a5fa80c0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -38,7 +38,7 @@ public int getOrder() {\n \n     @Override\n     public void load(final String domain, final DataSource datasource) {\n-        AuthContextUtils.execWithAuthContext(domain, () -> {\n+        AuthContextUtils.callAsAdmin(domain, () -> {\n             connectorFactory.load();\n             return null;\n         });"},{"sha":"8f42ae6b0a3802742999ae2e9bbe33dbc4cc53b8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AccessTokenDataBinderImpl.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,12 +28,13 @@\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactProducer;\n import org.apache.cxf.rs.security.jose.jwt.JwtClaims;\n import org.apache.cxf.rs.security.jose.jwt.JwtToken;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.provisioning.api.data.AccessTokenDataBinder;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DefaultCredentialChecker;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n import org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureProvider;\n@@ -56,7 +57,7 @@ public class AccessTokenDataBinderImpl implements AccessTokenDataBinder {\n     private AccessTokenDAO accessTokenDAO;\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ConfParamOps confParamOps;\n \n     @Autowired\n     private EntityFactory entityFactory;\n@@ -105,7 +106,7 @@ private AccessToken replace(\n         Pair<String, Date> generated = generateJWT(\n                 accessToken.getKey(),\n                 subject,\n-                confDAO.find(\"jwt.lifetime.minutes\", 120L),\n+                confParamOps.get(AuthContextUtils.getDomain(), \"jwt.lifetime.minutes\", 120L, Long.class),\n                 claims);\n \n         accessToken.setBody(generated.getLeft());\n@@ -147,7 +148,7 @@ public Pair<String, Date> update(final AccessToken accessToken, final byte[] aut\n \n         credentialChecker.checkIsDefaultJWSKeyInUse();\n \n-        long duration = confDAO.find(\"jwt.lifetime.minutes\", 120L);\n+        long duration = confParamOps.get(AuthContextUtils.getDomain(), \"jwt.lifetime.minutes\", 120L, Long.class);\n         long currentTime = new Date().getTime() / 1000L;\n         long expiry = currentTime + 60L * duration;\n         consumer.getJwtClaims().setExpiryTime(expiry);"},{"sha":"87b081e1ef8715e954cbc6a9cfaeb7dff64d024a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConfigurationDataBinderImpl.java","status":"removed","additions":0,"deletions":129,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,129 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.data;\n-\n-import org.apache.syncope.core.provisioning.api.data.ConfigurationDataBinder;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.commons.jexl3.JexlContext;\n-import org.apache.commons.jexl3.MapContext;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidPlainAttrValueException;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class ConfigurationDataBinderImpl extends AbstractAnyDataBinder implements ConfigurationDataBinder {\n-\n-    @Autowired\n-    private ConfDAO confDAO;\n-\n-    @Override\n-    public List<Attr> getConf() {\n-        return confDAO.get().getPlainAttrs().stream().map(attr -> getAttr(attr)).collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public Attr getAttr(final CPlainAttr attr) {\n-        return new Attr.Builder(attr.getSchema().getKey()).\n-                values(attr.getValuesAsStrings()).\n-                build();\n-    }\n-\n-    private void fillAttr(final List<String> values,\n-            final PlainSchema schema, final CPlainAttr attr, final SyncopeClientException invalidValues) {\n-\n-        // if schema is multivalue, all values are considered for addition;\n-        // otherwise only the fist one - if provided - is considered\n-        List<String> valuesProvided = schema.isMultivalue()\n-                ? values\n-                : (values.isEmpty()\n-                ? Collections.<String>emptyList()\n-                : Collections.singletonList(values.iterator().next()));\n-\n-        if (valuesProvided.isEmpty()) {\n-            JexlContext jexlContext = new MapContext();\n-            JexlUtils.addPlainAttrsToContext(confDAO.get().getPlainAttrs(), jexlContext);\n-\n-            if (!schema.isReadonly()\n-                    && Boolean.parseBoolean(JexlUtils.evaluate(schema.getMandatoryCondition(), jexlContext))) {\n-\n-                LOG.error(\"Mandatory schema \" + schema.getKey() + \" not provided with values\");\n-\n-                SyncopeClientException reqValMissing = SyncopeClientException.build(\n-                        ClientExceptionType.RequiredValuesMissing);\n-                reqValMissing.getElements().add(schema.getKey());\n-                throw reqValMissing;\n-            }\n-        }\n-\n-        valuesProvided.forEach(value -> {\n-            if (value == null || value.isEmpty()) {\n-                LOG.debug(\"Null value for {}, ignoring\", schema.getKey());\n-            } else {\n-                try {\n-                    PlainAttrValue attrValue;\n-                    if (schema.isUniqueConstraint()) {\n-                        attrValue = entityFactory.newEntity(CPlainAttrUniqueValue.class);\n-                        ((PlainAttrUniqueValue) attrValue).setSchema(schema);\n-                    } else {\n-                        attrValue = entityFactory.newEntity(CPlainAttrValue.class);\n-                    }\n-\n-                    attr.add(value, attrValue);\n-                } catch (InvalidPlainAttrValueException e) {\n-                    LOG.warn(\"Invalid value for attribute \" + schema.getKey() + \": \" + value, e);\n-\n-                    invalidValues.getElements().add(schema.getKey() + \": \" + value + \" - \" + e.getMessage());\n-                }\n-            }\n-        });\n-    }\n-\n-    @Override\n-    public CPlainAttr getAttr(final Attr attrTO) {\n-        PlainSchema schema = getPlainSchema(attrTO.getSchema());\n-        if (schema == null) {\n-            throw new NotFoundException(\"Conf schema \" + attrTO.getSchema());\n-        } else {\n-            SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n-\n-            CPlainAttr attr = entityFactory.newEntity(CPlainAttr.class);\n-            attr.setSchema(schema);\n-            fillAttr(attrTO.getValues(), schema, attr, invalidValues);\n-\n-            if (!invalidValues.isEmpty()) {\n-                throw invalidValues;\n-            }\n-            return attr;\n-        }\n-    }\n-}"},{"sha":"35fb4558c7a7e77586a7b5df99008e6997501973","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConnInstanceDataBinderImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -26,14 +26,14 @@\n import java.util.List;\n import java.util.Optional;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -69,7 +69,7 @@ public class ConnInstanceDataBinderImpl implements ConnInstanceDataBinder {\n     private RealmDAO realmDAO;\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ConfParamOps confParamOps;\n \n     @Autowired\n     private EntityFactory entityFactory;\n@@ -149,7 +149,8 @@ public ConnInstance update(final ConnInstanceTO connInstanceTO) {\n \n             // 2. ensure the maximum history size is not exceeded\n             List<ConnInstanceHistoryConf> history = connInstanceHistoryConfDAO.findByEntity(connInstance);\n-            long maxHistorySize = confDAO.find(\"connector.conf.history.size\", 10L);\n+            long maxHistorySize = confParamOps.get(\n+                    AuthContextUtils.getDomain(), \"connector.conf.history.size\", 10L, Long.class);\n             if (maxHistorySize < history.size()) {\n                 // always remove the last item since history was obtained  by a query with ORDER BY creation DESC\n                 for (int i = 0; i < history.size() - maxHistorySize; i++) {"},{"sha":"a46dbaf9b1816500a252b9f86b12a697fc037b27","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -26,6 +26,7 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.collections.IteratorChain;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -52,7 +53,6 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n@@ -104,7 +104,7 @@ public class ResourceDataBinderImpl implements ResourceDataBinder {\n     private ExternalResourceHistoryConfDAO resourceHistoryConfDAO;\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ConfParamOps confParamOps;\n \n     @Autowired\n     private ImplementationDAO implementationDAO;\n@@ -139,7 +139,8 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n \n                 // 2. ensure the maximum history size is not exceeded\n                 List<ExternalResourceHistoryConf> history = resourceHistoryConfDAO.findByEntity(resource);\n-                long maxHistorySize = confDAO.find(\"resource.conf.history.size\", 10L);\n+                long maxHistorySize = confParamOps.get(\n+                        AuthContextUtils.getDomain(), \"resource.conf.history.size\", 10L, Long.class);\n                 if (maxHistorySize < history.size()) {\n                     // always remove the last item since history was obtained  by a query with ORDER BY creation DESC\n                     for (int i = 0; i < history.size() - maxHistorySize; i++) {"},{"sha":"15d8d92ec4787f9678dfff9e1ac60780670a37f4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -32,6 +32,7 @@\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.AttrPatch;\n@@ -47,7 +48,6 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.SecurityQuestionDAO;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n@@ -82,9 +82,6 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Autowired\n     private RoleDAO roleDAO;\n \n-    @Autowired\n-    private ConfDAO confDAO;\n-\n     @Autowired\n     private SecurityQuestionDAO securityQuestionDAO;\n \n@@ -94,6 +91,9 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Autowired\n     private AccessTokenDAO accessTokenDAO;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -103,7 +103,7 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Transactional(readOnly = true)\n     @Override\n     public UserTO returnUserTO(final UserTO userTO) {\n-        if (!confDAO.find(\"return.password.value\", false)) {\n+        if (!confParamOps.get(AuthContextUtils.getDomain(), \"return.password.value\", false, Boolean.class)) {\n             userTO.setPassword(null);\n         }\n         return userTO;\n@@ -133,7 +133,8 @@ public UserTO getAuthenticatedUserTO() {\n \n     private void setPassword(final User user, final String password, final SyncopeClientCompositeException scce) {\n         try {\n-            String algorithm = confDAO.find(\"password.cipher.algorithm\", CipherAlgorithm.AES.name());\n+            String algorithm = confParamOps.get(AuthContextUtils.getDomain(),\n+                    \"password.cipher.algorithm\", CipherAlgorithm.AES.name(), String.class);\n             user.setPassword(password, CipherAlgorithm.valueOf(algorithm));\n         } catch (IllegalArgumentException e) {\n             SyncopeClientException invalidCiperAlgorithm = SyncopeClientException.build(ClientExceptionType.NotFound);"},{"sha":"499781598571d664ce19caadcc121e5b7fbefd49","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AfterHandlingJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -83,7 +83,7 @@ public static void schedule(final SchedulerFactoryBean scheduler, final Map<Stri\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n-            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n+            AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n                     () -> {\n                         notificationManager.createTasks(\n                                 (AfterHandlingEvent) context.getMergedJobDataMap().get(AfterHandlingEvent.JOBMAP_KEY));"},{"sha":"8d4ad8b0e2e8652c9d677176804c5c9cac2d5595","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,20 +28,18 @@\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n import javax.sql.DataSource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.entity.Report;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n@@ -96,10 +94,10 @@ public class JobManagerImpl implements JobManager, SyncopeCoreLoader {\n     private ReportDAO reportDAO;\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ImplementationDAO implementationDAO;\n \n     @Autowired\n-    private ImplementationDAO implementationDAO;\n+    private ConfParamOps confParamOps;\n \n     private boolean disableQuartzInstance;\n \n@@ -312,22 +310,24 @@ public void load(final String domain, final DataSource datasource) {\n             return;\n         }\n \n-        Pair<String, Long> conf = AuthContextUtils.execWithAuthContext(SyncopeConstants.MASTER_DOMAIN, () -> {\n+        Pair<String, Long> conf = AuthContextUtils.callAsAdmin(SyncopeConstants.MASTER_DOMAIN, () -> {\n             String notificationJobCronExpression = StringUtils.EMPTY;\n \n-            Optional<? extends CPlainAttr> notificationJobCronExp = confDAO.find(\"notificationjob.cronExpression\");\n-            if (!notificationJobCronExp.isPresent()) {\n+            String notificationJobCronExp = confParamOps.get(\n+                    SyncopeConstants.MASTER_DOMAIN, \"notificationjob.cronExpression\", null, String.class);\n+            if (notificationJobCronExp == null) {\n                 notificationJobCronExpression = NotificationJob.DEFAULT_CRON_EXP;\n-            } else if (!notificationJobCronExp.get().getValuesAsStrings().isEmpty()) {\n-                notificationJobCronExpression = notificationJobCronExp.get().getValuesAsStrings().get(0);\n+            } else if (!StringUtils.EMPTY.equals(notificationJobCronExp)) {\n+                notificationJobCronExpression = notificationJobCronExp;\n             }\n \n-            long interruptMaxRetries = confDAO.find(\"tasks.interruptMaxRetries\", 1L);\n+            long interruptMaxRetries = confParamOps.get(\n+                    SyncopeConstants.MASTER_DOMAIN, \"tasks.interruptMaxRetries\", 1L, Long.class);\n \n             return Pair.of(notificationJobCronExpression, interruptMaxRetries);\n         });\n \n-        AuthContextUtils.execWithAuthContext(domain, () -> {\n+        AuthContextUtils.callAsAdmin(domain, () -> {\n             // 1. jobs for SchedTasks\n             Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n             tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));"},{"sha":"cbe20bff7e6a16400e81f536d84c07844201d7df","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SetUMembershipsJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -52,7 +52,7 @@ public class SetUMembershipsJob extends AbstractInterruptableJob {\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n-            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n+            AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n \n                 @SuppressWarnings(\"unchecked\")\n                 Map<String, Set<String>> membershipsBefore ="},{"sha":"5cf13e545d28fd2dad418795575c6df6489edd58","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/TaskJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -73,7 +73,7 @@ public JobDelegate getDelegate() {\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n-            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n+            AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n                 try {\n                     ImplementationDAO implementationDAO =\n                             ApplicationContextProvider.getApplicationContext().getBean(ImplementationDAO.class);"},{"sha":"3e8a726c3d1729102c839c09723c9468fe9b5d3d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/NotificationJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -66,7 +66,7 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n \n         for (String domain : domainsHolder.getDomains().keySet()) {\n             try {\n-                AuthContextUtils.execWithAuthContext(domain, () -> {\n+                AuthContextUtils.callAsAdmin(domain, () -> {\n                     try {\n                         delegate.execute();\n                     } catch (Exception e) {"},{"sha":"6b2fbfa2fde255a39e9ad3fc625e533028f33be3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -61,7 +61,7 @@ public JobDelegate getDelegate() {\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n-            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n+            AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n                     () -> {\n                         try {\n                             delegate.execute(reportKey);"},{"sha":"5eeae043668dc3973be66d8494866c68eda1d4ab","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/DefaultNotificationManager.java","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -28,10 +28,11 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n-import java.util.stream.Collectors;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n@@ -43,7 +44,6 @@\n import org.apache.syncope.core.persistence.api.dao.AnyMatchDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n@@ -99,12 +99,6 @@ public class DefaultNotificationManager implements NotificationManager {\n     @Autowired\n     private NotificationDAO notificationDAO;\n \n-    /**\n-     * Configuration DAO.\n-     */\n-    @Autowired\n-    private ConfDAO confDAO;\n-\n     /**\n      * AnyObject DAO.\n      */\n@@ -153,6 +147,9 @@ public class DefaultNotificationManager implements NotificationManager {\n     @Autowired\n     private AnyObjectDataBinder anyObjectDataBinder;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Autowired\n     private EntityFactory entityFactory;\n \n@@ -162,7 +159,7 @@ public class DefaultNotificationManager implements NotificationManager {\n     @Transactional(readOnly = true)\n     @Override\n     public long getMaxRetries() {\n-        return confDAO.find(\"notification.maxRetries\", 0L);\n+        return confParamOps.get(SyncopeConstants.MASTER_DOMAIN, \"notification.maxRetries\", 0L, Long.class);\n     }\n \n     /**\n@@ -223,7 +220,7 @@ private NotificationTask getNotificationTask(\n         }\n \n         jexlVars.put(\"recipients\", recipientTOs);\n-        jexlVars.put(\"syncopeConf\", this.findAllSyncopeConfs());\n+        jexlVars.put(\"syncopeConf\", confParamOps.list(SyncopeConstants.MASTER_DOMAIN));\n         jexlVars.put(\"events\", notification.getEvents());\n \n         NotificationTask task = entityFactory.newEntity(NotificationTask.class);\n@@ -475,9 +472,4 @@ public long countExecutionsWithStatus(final String taskKey, final String status)\n         }\n         return count;\n     }\n-\n-    protected Map<String, String> findAllSyncopeConfs() {\n-        return confDAO.get().getPlainAttrs().stream().collect(\n-                Collectors.toMap(attr -> attr.getSchema().getKey(), attr -> attr.getValuesAsStrings().get(0)));\n-    }\n }"},{"sha":"13ef5334247d37457b8888e20474adf32a62d670","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/DummyConfParamOps.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DummyConfParamOps implements ConfParamOps {\n+\n+    @Override\n+    public Map<String, Object> list(final String domain) {\n+        return Collections.emptyMap();\n+    }\n+\n+    @Override\n+    public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n+        return defaultValue;\n+    }\n+\n+    @Override\n+    public <T> void set(final String domain, final String key, final T value) {\n+    }\n+\n+    @Override\n+    public void remove(final String domain, final String key) {\n+    }\n+}"},{"sha":"6f31f10aa2764f882c6ba1df9f7e3aaceab81499","filename":"core/spring/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -101,6 +101,11 @@ under the License.\n       <artifactId>syncope-common-idrepo-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n     \n     <!-- TEST -->\n     <dependency>"},{"sha":"7c78073a7a708ce74c9a415a54de7609701618ba","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java","status":"modified","additions":38,"deletions":23,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.core.spring.security;\n \n+import java.util.Collection;\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.Callable;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -40,10 +42,7 @@ public final class AuthContextUtils {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AuthContextUtils.class);\n \n-    public interface Executable<T> {\n-\n-        T exec();\n-    }\n+    private static final String FAKE_PASSWORD = \"FAKE_PASSWORD\";\n \n     public static String getUsername() {\n         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n@@ -54,7 +53,7 @@ public static void updateUsername(final String newUsername) {\n         Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n \n         UsernamePasswordAuthenticationToken newAuth = new UsernamePasswordAuthenticationToken(\n-                new User(newUsername, \"FAKE_PASSWORD\", auth.getAuthorities()),\n+                new User(newUsername, FAKE_PASSWORD, auth.getAuthorities()),\n                 auth.getCredentials(), auth.getAuthorities());\n         newAuth.setDetails(auth.getDetails());\n         SecurityContextHolder.getContext().setAuthentication(newAuth);\n@@ -98,31 +97,47 @@ public static String getDomain() {\n         return domainKey;\n     }\n \n-    private static Authentication getFakeAuth(final String domain) {\n-        List<GrantedAuthority> authorities = EntitlementsHolder.getInstance().getValues().stream().\n-                map(entitlement -> new SyncopeGrantedAuthority(entitlement, SyncopeConstants.ROOT_REALM)).\n-                collect(Collectors.toList());\n-\n-        UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n-                new User(ApplicationContextProvider.getBeanFactory().getBean(\"adminUser\", String.class),\n-                        \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(domain));\n-        return auth;\n-    }\n-\n-    public static <T> T execWithAuthContext(final String domain, final Executable<T> executable) {\n+    private static <T> T call(final String domain, final Authentication fakeAuth, final Callable<T> callable) {\n         Authentication original = SecurityContextHolder.getContext().getAuthentication();\n-        SecurityContextHolder.getContext().setAuthentication(getFakeAuth(domain));\n+        SecurityContextHolder.getContext().setAuthentication(fakeAuth);\n         try {\n-            return executable.exec();\n-        } catch (Throwable t) {\n-            LOG.debug(\"Error during execution with domain {} context\", domain, t);\n-            throw t;\n+            return callable.call();\n+        } catch (Exception e) {\n+            LOG.debug(\"Error during execution with domain {} context\", domain, e);\n+            if (e instanceof RuntimeException) {\n+                throw (RuntimeException) e;\n+            } else {\n+                throw new RuntimeException(e);\n+            }\n         } finally {\n             SecurityContextHolder.getContext().setAuthentication(original);\n         }\n     }\n \n+    public static <T> T callAs(\n+            final String domain,\n+            final String username,\n+            final Collection<String> entitlements,\n+            final Callable<T> callable) {\n+\n+        List<GrantedAuthority> authorities = entitlements.stream().\n+                map(entitlement -> new SyncopeGrantedAuthority(entitlement, SyncopeConstants.ROOT_REALM)).\n+                collect(Collectors.toList());\n+        UsernamePasswordAuthenticationToken fakeAuth = new UsernamePasswordAuthenticationToken(\n+                new User(username, FAKE_PASSWORD, authorities), FAKE_PASSWORD, authorities);\n+        fakeAuth.setDetails(new SyncopeAuthenticationDetails(domain));\n+\n+        return call(domain, fakeAuth, callable);\n+    }\n+\n+    public static <T> T callAsAdmin(final String domain, final Callable<T> callable) {\n+        return callAs(\n+                domain,\n+                ApplicationContextProvider.getBeanFactory().getBean(\"adminUser\", String.class),\n+                EntitlementsHolder.getInstance().getValues(),\n+                callable);\n+    }\n+\n     /**\n      * Private default constructor, for static-only classes.\n      */"},{"sha":"3226ff1b3f474441cc83071ab97d2cdfde2116ee","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":16,"deletions":14,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.spring.security;\n \n+import java.util.Arrays;\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n import java.util.Collections;\n import java.util.Date;\n@@ -26,13 +27,13 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -42,7 +43,6 @@\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.provisioning.api.utils.RealmUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.DomainDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n@@ -52,7 +52,6 @@\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.Domain;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n@@ -100,9 +99,6 @@ public class AuthDataAccessor {\n     @Autowired\n     protected DomainDAO domainDAO;\n \n-    @Autowired\n-    protected ConfDAO confDAO;\n-\n     @Autowired\n     protected RealmDAO realmDAO;\n \n@@ -121,6 +117,9 @@ public class AuthDataAccessor {\n     @Autowired\n     protected AccessTokenDAO accessTokenDAO;\n \n+    @Autowired\n+    private ConfParamOps confParamOps;\n+\n     @Autowired\n     protected ConnectorFactory connFactory;\n \n@@ -174,17 +173,16 @@ public Domain findDomain(final String key) {\n      * Attempts to authenticate the given credentials against internal storage and pass-through resources (if\n      * configured): the first succeeding causes global success.\n      *\n+     * @param domain domain\n      * @param authentication given credentials\n      * @return {@code null} if no matching user was found, authentication result otherwise\n      */\n     @Transactional(noRollbackFor = DisabledException.class)\n-    public Pair<User, Boolean> authenticate(final Authentication authentication) {\n+    public Pair<User, Boolean> authenticate(final String domain, final Authentication authentication) {\n         User user = null;\n \n-        Optional<? extends CPlainAttr> authAttrs = confDAO.find(\"authentication.attributes\");\n-        List<String> authAttrValues = authAttrs.isPresent()\n-                ? authAttrs.get().getValuesAsStrings()\n-                : Collections.singletonList(\"username\");\n+        List<String> authAttrValues = Arrays.asList(confParamOps.get(domain,\n+                \"authentication.attributes\", new String[] { \"username\" }, String[].class));\n         for (int i = 0; user == null && i < authAttrValues.size(); i++) {\n             if (\"username\".equals(authAttrValues.get(i))) {\n                 user = userDAO.findByUsername(authentication.getName());\n@@ -210,14 +208,16 @@ public Pair<User, Boolean> authenticate(final Authentication authentication) {\n                 throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n             }\n \n-            if (!confDAO.getValuesAsStrings(\"authentication.statuses\").contains(user.getStatus())) {\n+            List<String> authStatuses = Arrays.asList(confParamOps.get(domain,\n+                    \"authentication.statuses\", new String[] {}, String[].class));\n+            if (!authStatuses.contains(user.getStatus())) {\n                 throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n             }\n \n             boolean userModified = false;\n             authenticated = AuthDataAccessor.this.authenticate(user, authentication.getCredentials().toString());\n             if (authenticated) {\n-                if (confDAO.find(\"log.lastlogindate\", true)) {\n+                if (confParamOps.get(domain, \"log.lastlogindate\", true, Boolean.class)) {\n                     user.setLastLoginDate(new Date());\n                     userModified = true;\n                 }\n@@ -404,7 +404,9 @@ public Pair<String, Set<SyncopeGrantedAuthority>> authenticate(final JWTAuthenti\n                 throw new DisabledException(\"User \" + username + \" is suspended\");\n             }\n \n-            if (!confDAO.getValuesAsStrings(\"authentication.statuses\").contains(user.getStatus())) {\n+            List<String> authStatuses = Arrays.asList(confParamOps.get(authentication.getDetails().getDomain(),\n+                    \"authentication.statuses\", new String[] {}, String[].class));\n+            if (!authStatuses.contains(user.getStatus())) {\n                 throw new DisabledException(\"User \" + username + \" not allowed to authenticate\");\n             }\n "},{"sha":"c8fb6fb9dd5e79ecd7c50e900f33b1d89ce3cb26","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -41,7 +41,7 @@ public class JWTAuthenticationProvider implements AuthenticationProvider {\n     public Authentication authenticate(final Authentication authentication) throws AuthenticationException {\n         final JWTAuthentication jwtAuthentication = (JWTAuthentication) authentication;\n \n-        AuthContextUtils.execWithAuthContext(jwtAuthentication.getDetails().getDomain(), () -> {\n+        AuthContextUtils.callAsAdmin(jwtAuthentication.getDetails().getDomain(), () -> {\n             Pair<String, Set<SyncopeGrantedAuthority>> authenticated = dataAccessor.authenticate(jwtAuthentication);\n             jwtAuthentication.setUsername(authenticated.getLeft());\n             jwtAuthentication.getAuthorities().addAll(authenticated.getRight());"},{"sha":"a1e77e2ed3f31425df54d30233a573c20ca54149","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -109,7 +109,7 @@ public Authentication authenticate(final Authentication authentication) {\n                         adminPassword);\n             } else {\n                 final String domainToFind = domainKey;\n-                authenticated = AuthContextUtils.execWithAuthContext(SyncopeConstants.MASTER_DOMAIN, () -> {\n+                authenticated = AuthContextUtils.callAsAdmin(SyncopeConstants.MASTER_DOMAIN, () -> {\n                     Domain domain = dataAccessor.findDomain(domainToFind);\n \n                     return ENCRYPTOR.verify(\n@@ -119,14 +119,14 @@ public Authentication authenticate(final Authentication authentication) {\n                 });\n             }\n         } else {\n-            final Pair<User, Boolean> authResult =\n-                    AuthContextUtils.execWithAuthContext(domainKey, () -> dataAccessor.authenticate(authentication));\n+            Pair<User, Boolean> authResult = AuthContextUtils.callAsAdmin(domainKey,\n+                    () -> dataAccessor.authenticate(domainKey, authentication));\n             authenticated = authResult.getValue();\n             if (authResult.getLeft() != null && authResult.getRight() != null) {\n                 username[0] = authResult.getLeft().getUsername();\n \n                 if (!authResult.getRight()) {\n-                    AuthContextUtils.execWithAuthContext(domainKey, () -> {\n+                    AuthContextUtils.callAsAdmin(domainKey, () -> {\n                         provisioningManager.internalSuspend(authResult.getLeft().getKey());\n                         return null;\n                     });\n@@ -140,7 +140,7 @@ public Authentication authenticate(final Authentication authentication) {\n         final boolean isAuthenticated = authenticated != null && authenticated;\n         UsernamePasswordAuthenticationToken token;\n         if (isAuthenticated) {\n-            token = AuthContextUtils.execWithAuthContext(domainKey, () -> {\n+            token = AuthContextUtils.callAsAdmin(domainKey, () -> {\n                 UsernamePasswordAuthenticationToken token1 = new UsernamePasswordAuthenticationToken(\n                         username[0],\n                         null,\n@@ -158,7 +158,7 @@ public Authentication authenticate(final Authentication authentication) {\n             LOG.debug(\"User {} successfully authenticated, with entitlements {}\",\n                     username[0], token.getAuthorities());\n         } else {\n-            AuthContextUtils.execWithAuthContext(domainKey, () -> {\n+            AuthContextUtils.callAsAdmin(domainKey, () -> {\n                 dataAccessor.audit(\n                         username[0],\n                         AuditElements.EventCategoryType.LOGIC,"},{"sha":"7ca3dd8795079698437c6b3a6e3fa4982ee05151","filename":"core/upgrade/LICENSE","status":"removed","additions":0,"deletions":237,"changes":237,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2FLICENSE?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,237 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n-\n-==\n-\n-For Jackson (http://wiki.fasterxml.com/JacksonHome):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For SERP (http://serp.sourceforge.net/):\n-This is licensed under the BSD license:\n-\n-Redistribution and use in source and binary forms, with or without \n-modification, are permitted provided that the following conditions are met:\n-\n-1. Redistributions of source code must retain the above copyright notice, this \n-list of conditions and the following disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above copyright notice, \n-this list of conditions and the following disclaimer in the documentation \n-and/or other materials provided with the distribution.\n-\n-3. Neither the name of the copyright holder nor the names of its contributors \n-may be used to endorse or promote products derived from this software without \n-specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},{"sha":"3902f4c73e529e5bf4ae73a2e570c33575a69448","filename":"core/upgrade/NOTICE","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2FNOTICE?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,18 +0,0 @@\n-Apache Syncope\n-Copyright 2012-2019 The Apache Software Foundation\n-\n-This product includes software developed by:\n-The Apache Software Foundation (http://www.apache.org/).\n-\n-The following copyright notice(s) were affixed to portions of this code\n-with which this file is now or was at one time distributed.\n-\n-==\n-\n-This product includes software developed by the Jackson project.\n-\n-==\n-\n-This product includes software developed by the SERP Project.\n-Copyright (c) 2002-2007, A. Abram White http://serp.sourceforge.net/\n-All rights reserved."},{"sha":"5b204649eb7eb6df3b1ce71a1766b81c6857a11a","filename":"core/upgrade/pom.xml","status":"removed","additions":0,"deletions":157,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fpom.xml?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,157 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <groupId>org.apache.syncope</groupId>\n-    <artifactId>syncope-core</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n-  </parent>\n-\n-  <name>Apache Syncope Core Upgrade</name>\n-  <description>Apache Syncope Core Upgrade</description>\n-  <groupId>org.apache.syncope.core</groupId>\n-  <artifactId>syncope-core-upgrade</artifactId>\n-  <packaging>jar</packaging>\n-  \n-  <properties>\n-    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>org.apache.openjpa</groupId>\n-      <artifactId>openjpa-jdbc</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>com.fasterxml.jackson.core</groupId>\n-      <artifactId>jackson-databind</artifactId>\n-    </dependency>\n-      \n-    <!-- TEST -->\n-    <dependency>\n-      <groupId>javax.annotation</groupId>\n-      <artifactId>javax.annotation-api</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.h2database</groupId>\n-      <artifactId>h2</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context-support</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-jdbc</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-test</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.junit.jupiter</groupId>\n-      <artifactId>junit-jupiter</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-  </dependencies>\n-\n-  <build>\n-    <resources>\n-      <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n-      </resource>\n-      <resource>\n-        <directory>${basedir}</directory>\n-        <targetPath>META-INF</targetPath>\n-        <includes>\n-          <include>LICENSE</include>\n-          <include>NOTICE</include>\n-        </includes>\n-      </resource>      \n-    </resources>\n-    <testResources>\n-      <testResource>\n-        <directory>${basedir}/src/test/resources</directory>        \n-      </testResource>      \n-    </testResources>\n-        \n-    <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-assembly-plugin</artifactId>\n-        <configuration>\n-          <appendAssemblyId>false</appendAssemblyId>\n-          <descriptors>\n-            <descriptor>src/assemble/upgrade-zip.xml</descriptor>\n-          </descriptors>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <id>make-upgrade-zip</id>\n-            <phase>verify</phase>\n-            <goals>\n-              <goal>single</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n-\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-  </build>\n-  \n-  <profiles>\n-    <profile>\n-      <id>apache-release</id>\n-\n-      <build>\n-        <plugins>\n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-deploy-plugin</artifactId>\n-            <configuration>\n-              <skip>true</skip>\n-            </configuration>\n-          </plugin>\n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-source-plugin</artifactId>\n-            <inherited>false</inherited>\n-            <configuration>\n-              <skipSource>true</skipSource>\n-            </configuration>\n-          </plugin>\n-        </plugins>\n-      </build>\n-    </profile>\n-  </profiles>\n-</project>"},{"sha":"b891fd2086dd7981177d076a324e05fd7cd1aacc","filename":"core/upgrade/src/assemble/upgrade-zip.xml","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,62 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<assembly xmlns=\"http://maven.apache.org/ASSEMBLY/2.0.0\"\n-          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-          xsi:schemaLocation=\"http://maven.apache.org/ASSEMBLY/2.0.0\n-                              http://maven.apache.org/xsd/assembly-2.0.0.xsd\">\n-\n-  <id>upgrade-zip</id>\n-  \n-  <formats>\n-    <format>zip</format>\n-  </formats>\n-  \n-  <includeBaseDirectory>false</includeBaseDirectory>\n-  \n-  <fileSets>\n-    <fileSet>\n-      <directory>${basedir}</directory>\n-      <includes>\n-        <include>LICENSE</include>\n-        <include>NOTICE</include>\n-      </includes>\n-      <outputDirectory>${project.build.finalName}</outputDirectory>\n-    </fileSet>\n-    <fileSet>\n-      <directory>${project.build.outputDirectory}</directory>\n-      <includes>\n-        <include>syncopeupgrade.sh</include>\n-        <include>syncopeupgrade.bat</include>\n-      </includes>\n-      <outputDirectory>${project.build.finalName}</outputDirectory>\n-      <fileMode>0755</fileMode>\n-    </fileSet>\n-  </fileSets>\n-\n-  <dependencySets>\n-    <dependencySet>\n-      <outputDirectory>${project.build.finalName}/lib</outputDirectory>\n-      <useProjectArtifact>true</useProjectArtifact>\n-      <unpack>false</unpack>\n-      <scope>runtime</scope>\n-    </dependencySet>\n-  </dependencySets>\n-  \n-</assembly>"},{"sha":"15756f7c37ee5af8aed4de9a5db93d3e7359ecab","filename":"core/upgrade/src/main/java/org/apache/syncope/core/upgrade/GenerateUpgradeSQL.java","status":"removed","additions":0,"deletions":497,"changes":497,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,497 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.upgrade;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.io.Writer;\n-import java.sql.Connection;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.sql.Statement;\n-import java.util.Arrays;\n-import java.util.UUID;\n-import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n-import org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl;\n-import org.apache.openjpa.jdbc.schema.FileSchemaFactory;\n-import org.apache.openjpa.jdbc.schema.SchemaTool;\n-import org.apache.openjpa.jdbc.schema.SimpleDriverDataSource;\n-\n-public final class GenerateUpgradeSQL {\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private static Writer OUT = new PrintWriter(System.out);\n-\n-    public static void setWriter(final Writer out) {\n-        GenerateUpgradeSQL.OUT = out;\n-    }\n-\n-    private static void upgrade(final Connection conn) throws SQLException, IOException {\n-        // User\n-        OUT.write(\"UPDATE SyncopeUser SET mustChangePassword=0 WHERE mustChangePassword IS NULL;\\n\");\n-\n-        // VirSchema\n-        OUT.write(\"UPDATE VirSchema SET readonly=0 WHERE readonly IS NULL;\\n\");\n-\n-        // ExternalResource\n-        OUT.write(\"UPDATE ExternalResource SET overrideCapabilities=0 WHERE overrideCapabilities IS NULL;\\n\");\n-\n-        // OrgUnit\n-        OUT.write(\"UPDATE OrgUnit SET ignoreCaseMatch=0;\\n\");\n-\n-        // OrgUnitItemTransformer\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT orgUnitItem_id,transformerClassName FROM OrgUnitItem_Transformer\")) {\n-\n-            while (rs.next()) {\n-                String itemId = rs.getString(1);\n-                String transformerClassName = rs.getString(2);\n-\n-                String implementationId = \"OrgUnitItemTransformer_\" + transformerClassName + \"_\" + itemId;\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + implementationId + \"',\"\n-                        + \"'ITEM_TRANSFORMER',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + transformerClassName + \"');\\n\");\n-                OUT.write(\"INSERT INTO OrgUnitItemTransformer(item_id,implementation_id) VALUES(\"\n-                        + \"'\" + itemId + \"',\"\n-                        + \"'\" + implementationId + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE OrgUnitItem_Transformer;\\n\");\n-\n-        // PlainSchema\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT validatorClass FROM PlainSchema WHERE validatorClass IS NOT NULL\")) {\n-\n-            while (rs.next()) {\n-                String validatorClass = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + validatorClass + \"',\"\n-                        + \"'VALIDATOR',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + validatorClass + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"UPDATE PlainSchema SET validator_id=validatorClass;\\n\");\n-        OUT.write(\"ALTER TABLE PlainSchema DROP COLUMN validatorClass;\\n\");\n-\n-        // Provision\n-        OUT.write(\"UPDATE Provision SET ignoreCaseMatch=0;\\n\");\n-\n-        // PullPolicy\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT id,specification FROM PullPolicy WHERE specification IS NOT NULL\")) {\n-\n-            while (rs.next()) {\n-                String id = rs.getString(1);\n-                ObjectNode specification = (ObjectNode) MAPPER.readTree(rs.getString(2));\n-\n-                if (specification.has(\"conflictResolutionAction\")) {\n-                    OUT.write(\"UPDATE PullPolicy SET \"\n-                            + \"conflictResolutionAction='\"\n-                            + specification.get(\"conflictResolutionAction\").asText() + \"' \"\n-                            + \"WHERE id='\" + id + \"';\\n\");\n-                }\n-                if (specification.has(\"correlationRules\")) {\n-                    specification.get(\"correlationRules\").fields().forEachRemaining(entry -> {\n-                        ObjectNode body = MAPPER.createObjectNode();\n-                        body.put(\"@class\", \"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\");\n-                        body.put(\"name\", \"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\");\n-                        body.set(\"schemas\", entry.getValue());\n-\n-                        try {\n-                            String implementationId = \"PullCorrelationRule_\" + entry.getKey() + \"_\" + id;\n-                            OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                                    + \"'\" + implementationId + \"',\"\n-                                    + \"'PULL_CORRELATION_RULE',\"\n-                                    + \"'JAVA',\"\n-                                    + \"'\" + MAPPER.writeValueAsString(body) + \"');\\n\");\n-\n-                            OUT.write(\"INSERT INTO PullCorrelationRuleEntity\"\n-                                    + \"(id,pullPolicy_id,anyType_id,implementation_id) VALUES(\"\n-                                    + \"'\" + UUID.randomUUID().toString() + \"',\"\n-                                    + \"'\" + id + \"',\"\n-                                    + \"'\" + entry.getKey() + \"',\"\n-                                    + \"'\" + implementationId + \"');\\n\");\n-                        } catch (IOException e) {\n-                            System.err.println(\"Unexpected error: \" + e.getMessage());\n-                            System.exit(2);\n-                        }\n-                    });\n-                }\n-            }\n-            OUT.write(\"ALTER TABLE PullPolicy DROP COLUMN specification;\\n\");\n-        }\n-\n-        // AccountPolicy\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT id,accountPolicy_id,serializedInstance FROM AccountRuleConfInstance\")) {\n-\n-            while (rs.next()) {\n-                String id = rs.getString(1);\n-                String accountPolicyId = rs.getString(2);\n-                String serializedInstance = rs.getString(3);\n-\n-                String implementationId = \"AccountRule_\" + accountPolicyId + \"_\" + id;\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + implementationId + \"',\"\n-                        + \"'ACCOUNT_RULE',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + serializedInstance + \"');\\n\");\n-                OUT.write(\"INSERT INTO AccountPolicyRule(policy_id,implementation_id) VALUES(\"\n-                        + \"'\" + accountPolicyId + \"',\"\n-                        + \"'\" + implementationId + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE AccountRuleConfInstance;\\n\");\n-\n-        // PasswordPolicy\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT id,passwordPolicy_id,serializedInstance FROM PasswordRuleConfInstance\")) {\n-\n-            while (rs.next()) {\n-                String id = rs.getString(1);\n-                String passwordPolicyId = rs.getString(2);\n-                String serializedInstance = rs.getString(3);\n-\n-                String implementationId = \"PasswordRule_\" + passwordPolicyId + \"_\" + id;\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + implementationId + \"',\"\n-                        + \"'ACCOUNT_RULE',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + serializedInstance + \"');\\n\");\n-                OUT.write(\"INSERT INTO PasswordPolicyRule(policy_id,implementation_id) VALUES(\"\n-                        + \"'\" + passwordPolicyId + \"',\"\n-                        + \"'\" + implementationId + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE PasswordRuleConfInstance;\\n\");\n-\n-        // Task\n-        OUT.write(\"UPDATE Task SET remediation=0;\\n\");\n-        OUT.write(\"UPDATE Task SET active=0 WHERE active IS NULL;\\n\");\n-\n-        OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                + \"'PullJobDelegate',\"\n-                + \"'TASKJOB_DELEGATE',\"\n-                + \"'JAVA',\"\n-                + \"'org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate');\\n\");\n-        OUT.write(\"UPDATE Task SET jobDelegate_id='PullJobDelegate' WHERE DTYPE='PullTask';\\n\");\n-\n-        OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                + \"'PushJobDelegate',\"\n-                + \"'TASKJOB_DELEGATE',\"\n-                + \"'JAVA',\"\n-                + \"'org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate');\\n\");\n-        OUT.write(\"UPDATE Task SET jobDelegate_id='PushJobDelegate' WHERE DTYPE='PushTask';\\n\");\n-\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT jobDelegateClassName FROM Task WHERE jobDelegateClassName IS NOT NULL\")) {\n-\n-            while (rs.next()) {\n-                String jobDelegateClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + jobDelegateClassName + \"',\"\n-                        + \"'TASKJOB_DELEGATE',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + jobDelegateClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"UPDATE Task SET jobDelegate_id=jobDelegateClassName;\\n\");\n-        OUT.write(\"ALTER TABLE Task DROP COLUMN jobDelegateClassName;\\n\");\n-\n-        // PullActions\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT actionClassName FROM PullTask_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String actionClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + actionClassName + \"',\"\n-                        + \"'PULL_ACTIONS',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT pullTask_id,actionClassName FROM PullTask_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String pullTaskId = rs.getString(1);\n-                String actionClassName = rs.getString(2);\n-                OUT.write(\"INSERT INTO PullTaskAction(task_id,implementation_id) VALUES(\"\n-                        + \"'\" + pullTaskId + \"',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE PullTask_actionsClassNames;\\n\");\n-\n-        // PushActions\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT actionClassName FROM PushTask_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String actionClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + actionClassName + \"',\"\n-                        + \"'PUSH_ACTIONS',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT pushTask_id,actionClassName FROM PushTask_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String pushTaskId = rs.getString(1);\n-                String actionClassName = rs.getString(2);\n-                OUT.write(\"INSERT INTO PushTaskAction(task_id,implementation_id) VALUES(\"\n-                        + \"'\" + pushTaskId + \"',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE PushTask_actionsClassNames;\\n\");\n-\n-        // PropagationActions\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT actionClassName FROM ExternalResource_PropActions\")) {\n-\n-            while (rs.next()) {\n-                String actionClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + actionClassName + \"',\"\n-                        + \"'PROPAGATION_ACTIONS',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT resource_id,actionClassName FROM ExternalResource_PropActions\")) {\n-\n-            while (rs.next()) {\n-                String resourceId = rs.getString(1);\n-                String actionClassName = rs.getString(2);\n-                OUT.write(\"INSERT INTO ExternalResourcePropAction(resource_id,implementation_id) VALUES(\"\n-                        + \"'\" + resourceId + \"',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE ExternalResource_PropActions;\\n\");\n-\n-        // LogicActions\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT actionClassName FROM Realm_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String actionClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + actionClassName + \"',\"\n-                        + \"'LOGIC_ACTIONS',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT realm_id,actionClassName FROM Realm_actionsClassNames\")) {\n-\n-            while (rs.next()) {\n-                String realmId = rs.getString(1);\n-                String actionClassName = rs.getString(2);\n-                OUT.write(\"INSERT INTO RealmAction(realm_id,implementation_id) VALUES(\"\n-                        + \"'\" + realmId + \"',\"\n-                        + \"'\" + actionClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE Realm_actionsClassNames;\\n\");\n-\n-        // Reportlet\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT id,report_id,serializedInstance FROM ReportletConfInstance\")) {\n-\n-            while (rs.next()) {\n-                String id = rs.getString(1);\n-                String reportId = rs.getString(2);\n-                String serializedInstance = rs.getString(3);\n-\n-                String implementationId = \"Reportlet_\" + reportId + \"_\" + id;\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + implementationId + \"',\"\n-                        + \"'REPORTLET',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + serializedInstance + \"');\\n\");\n-                OUT.write(\"INSERT INTO ReportReportlet(report_id,implementation_id) VALUES(\"\n-                        + \"'\" + reportId + \"',\"\n-                        + \"'\" + implementationId + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE ReportletConfInstance;\\n\");\n-\n-        // MappingItemTransformer\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT mappingItem_id,transformerClassName FROM MappingItem_Transformer\")) {\n-\n-            while (rs.next()) {\n-                String itemId = rs.getString(1);\n-                String transformerClassName = rs.getString(2);\n-\n-                String implementationId = \"MappingItemTransformer_\" + transformerClassName + \"_\" + itemId;\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + implementationId + \"',\"\n-                        + \"'ITEM_TRANSFORMER',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + transformerClassName + \"');\\n\");\n-                OUT.write(\"INSERT INTO MappingItemTransformer(item_id,implementation_id) VALUES(\"\n-                        + \"'\" + itemId + \"',\"\n-                        + \"'\" + implementationId + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"DROP TABLE MappingItem_Transformer;\\n\");\n-\n-        // Notification\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\n-                        \"SELECT DISTINCT recipientsProviderClassName \"\n-                        + \"FROM Notification WHERE recipientsProviderClassName IS NOT NULL\")) {\n-\n-            while (rs.next()) {\n-                String recipientsProviderClassName = rs.getString(1);\n-                OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n-                        + \"'\" + recipientsProviderClassName + \"',\"\n-                        + \"'RECIPIENTS_PROVIDER',\"\n-                        + \"'JAVA',\"\n-                        + \"'\" + recipientsProviderClassName + \"');\\n\");\n-            }\n-        }\n-        OUT.write(\"UPDATE Notification SET recipientsProvider_id=recipientsProviderClassName;\\n\");\n-        OUT.write(\"ALTER TABLE Notification DROP COLUMN recipientsProviderClassName;\\n\");\n-    }\n-\n-    private static void upgradeFlowableTo212(final Connection conn) throws IOException, SQLException {\n-        try (Statement stmt = conn.createStatement();\n-                ResultSet rs = stmt.executeQuery(\"SELECT id,workflowId FROM SyncopeUser\")) {\n-\n-            while (rs.next()) {\n-                OUT.write(\"UPDATE ACT_RU_EXECUTION \"\n-                        + \"SET BUSINESS_KEY_='userWorkflow:\" + rs.getString(1) + \"' \"\n-                        + \"WHERE ID_='\" + rs.getString(2) + \"';\\n\");\n-            }\n-        }\n-\n-        OUT.write(\"DROP VIEW user_search;\\n\");\n-        OUT.write(\"ALTER TABLE SyncopeUser DROP COLUMN workflowId;\\n\");\n-        OUT.write(\"CREATE VIEW user_search AS SELECT u.id as any_id, u.* FROM SyncopeUser u;\\n\");\n-\n-        OUT.write(\"DROP VIEW group_search;\\n\");\n-        OUT.write(\"ALTER TABLE SyncopeGroup DROP COLUMN workflowId;\\n\");\n-        OUT.write(\"CREATE VIEW group_search AS SELECT r.id as any_id, r.* FROM SyncopeGroup r;\\n\");\n-\n-        OUT.write(\"DROP VIEW anyObject_search;\\n\");\n-        OUT.write(\"ALTER TABLE AnyObject DROP COLUMN workflowId;\\n\");\n-        OUT.write(\"CREATE VIEW anyObject_search AS SELECT a.id as any_id, a.* FROM AnyObject a;\\n\");\n-    }\n-\n-    public static void main(final String[] args) throws Exception {\n-        // parse args\n-        if (args.length < 5 || args.length > 7) {\n-            System.err.println(\"Unexpected arguments: \" + Arrays.asList(args));\n-            System.out.println(\"Usage: <driverClassName> <jdbcURL> <username> <password>\"\n-                    + \"<h2|mariadb|mysql|oracle|postgres|sqlserver> [-flowable-2.1.2] [filename]\");\n-            System.exit(1);\n-        }\n-\n-        String driverClassName = args[0];\n-        String jdbcURL = args[1];\n-        String username = args[2];\n-        String password = args[3];\n-        String dbDictionary = args[4];\n-        boolean flowableTo212 = false;\n-        if (args.length >= 6) {\n-            flowableTo212 = \"-flowable-2.1.2\".equals(args[5]);\n-            if (!flowableTo212) {\n-                setWriter(new FileWriter(args[args.length - 1]));\n-            }\n-        }\n-\n-        // setup DataSource\n-        SimpleDriverDataSource dataSource = new SimpleDriverDataSource();\n-        dataSource.setConnectionDriverName(driverClassName);\n-        dataSource.setConnectionURL(jdbcURL);\n-        dataSource.setConnectionUserName(username);\n-        dataSource.setConnectionPassword(password);\n-\n-        try {\n-            // setup OpenJPA\n-            JDBCConfiguration jdbcConf = new JDBCConfigurationImpl();\n-            jdbcConf.setConnection2DriverName(driverClassName);\n-            jdbcConf.setConnection2UserName(username);\n-            jdbcConf.setConnection2Password(password);\n-            jdbcConf.setDBDictionary(dbDictionary);\n-            jdbcConf.setConnectionFactory2(dataSource);\n-\n-            FileSchemaFactory schemaFactory = new FileSchemaFactory();\n-            schemaFactory.setConfiguration(jdbcConf);\n-            schemaFactory.setFile(\"schema.xml\");\n-            jdbcConf.setSchemaFactory(schemaFactory);\n-\n-            WiserSchemaTool schemaTool = new WiserSchemaTool(jdbcConf, SchemaTool.ACTION_ADD);\n-            schemaTool.setSchemaGroup(schemaFactory.readSchema());\n-            schemaTool.setWriter(OUT);\n-\n-            // now proceed with manual update statements...\n-            Connection conn = jdbcConf.getDataSource2(null).getConnection();\n-\n-            if (flowableTo212) {\n-                upgradeFlowableTo212(conn);\n-            } else {\n-                // run OpenJPA's SchemaTool to get the update statements\n-                schemaTool.run();\n-\n-                upgrade(conn);\n-            }\n-        } finally {\n-            OUT.flush();\n-            OUT.close();\n-        }\n-    }\n-\n-    private GenerateUpgradeSQL() {\n-        // private constructor\n-    }\n-}"},{"sha":"f2804b5f9fdd835abddf3eab58282eeb8bca63b2","filename":"core/upgrade/src/main/java/org/apache/syncope/core/upgrade/WiserSchemaTool.java","status":"removed","additions":0,"deletions":233,"changes":233,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FWiserSchemaTool.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,233 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.upgrade;\n-\n-import java.sql.SQLException;\n-import java.util.HashSet;\n-import java.util.Set;\n-import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n-import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n-import org.apache.openjpa.jdbc.schema.Column;\n-import org.apache.openjpa.jdbc.schema.ForeignKey;\n-import org.apache.openjpa.jdbc.schema.Index;\n-import org.apache.openjpa.jdbc.schema.PrimaryKey;\n-import org.apache.openjpa.jdbc.schema.Schema;\n-import org.apache.openjpa.jdbc.schema.SchemaGroup;\n-import org.apache.openjpa.jdbc.schema.SchemaTool;\n-import org.apache.openjpa.jdbc.schema.Sequence;\n-import org.apache.openjpa.jdbc.schema.Table;\n-import org.apache.openjpa.jdbc.schema.Unique;\n-\n-/**\n- * Compared to the original {@link SchemaTool}, this class' methods keep consistent behavior when either {@code _writer}\n- * is null or not.\n- */\n-public class WiserSchemaTool extends SchemaTool {\n-\n-    public WiserSchemaTool(final JDBCConfiguration conf) {\n-        super(conf);\n-    }\n-\n-    public WiserSchemaTool(final JDBCConfiguration conf, final String action) {\n-        super(conf, action);\n-    }\n-\n-    @Override\n-    protected void buildSchema(\n-            final SchemaGroup db,\n-            final SchemaGroup repos,\n-            final boolean considerDatabaseState) throws SQLException {\n-\n-        // add sequences\n-        if (getSequences()) {\n-            for (Schema schema : repos.getSchemas()) {\n-                for (Sequence seq : schema.getSequences()) {\n-                    if (considerDatabaseState && db.findSequence(schema, seq.getQualifiedPath()) != null) {\n-                        continue;\n-                    }\n-\n-                    if (createSequence(seq)) {\n-                        Schema dbSchema = db.getSchema(seq.getSchemaIdentifier());\n-                        if (dbSchema == null) {\n-                            dbSchema = db.addSchema(seq.getSchemaIdentifier());\n-                        }\n-                        dbSchema.importSequence(seq);\n-                    } else {\n-                        _log.warn(_loc.get(\"add-seq\", seq));\n-                    }\n-                }\n-            }\n-        }\n-\n-        // order is important in this method; start with columns\n-        DBIdentifier defaultSchemaName = DBIdentifier.newSchema(_dict.getDefaultSchemaName());\n-        for (Schema schema : repos.getSchemas()) {\n-            for (Table tab : schema.getTables()) {\n-                Table dbTable = null;\n-                if (considerDatabaseState) {\n-                    dbTable = db.findTable(schema, tab.getQualifiedPath(), defaultSchemaName);\n-                }\n-                for (Column col : tab.getColumns()) {\n-                    if (dbTable != null) {\n-                        Column dbCol = dbTable.getColumn(col.getIdentifier());\n-                        if (dbCol == null) {\n-                            if (addColumn(col)) {\n-                                dbTable.importColumn(col);\n-                            } else {\n-                                _log.warn(_loc.get(\"add-col\", col, tab));\n-                            }\n-                        } else if (!col.equalsColumn(_dict, dbCol)) {\n-                            _log.warn(_loc.get(\"bad-col\",\n-                                    new Object[] { dbCol, dbTable, dbCol.getDescription(), col.getDescription() }));\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        // primary keys\n-        if (getPrimaryKeys()) {\n-            for (Schema schema : repos.getSchemas()) {\n-                for (Table tab : schema.getTables()) {\n-                    PrimaryKey pk = tab.getPrimaryKey();\n-                    Table dbTable = null;\n-                    if (considerDatabaseState) {\n-                        dbTable = db.findTable(schema, tab.getQualifiedPath());\n-                    }\n-                    if (pk != null && !pk.isLogical() && dbTable != null) {\n-                        if (dbTable.getPrimaryKey() == null && addPrimaryKey(pk)) {\n-                            dbTable.importPrimaryKey(pk);\n-                        } else if (dbTable.getPrimaryKey() == null) {\n-                            _log.warn(_loc.get(\"add-pk\", pk, tab));\n-                        } else if (!pk.equalsPrimaryKey(dbTable.getPrimaryKey())) {\n-                            _log.warn(_loc.get(\"bad-pk\",\n-                                    dbTable.getPrimaryKey(), dbTable));\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        // tables\n-        Set<Table> newTables = new HashSet<>();\n-        for (Schema schema : repos.getSchemas()) {\n-            for (Table tab : schema.getTables()) {\n-                if (considerDatabaseState && db.findTable(schema, tab.getQualifiedPath()) != null) {\n-                    continue;\n-                }\n-\n-                if (createTable(tab)) {\n-                    newTables.add(tab);\n-                    Schema dbSchema = db.getSchema(tab.getSchemaIdentifier());\n-                    if (dbSchema == null) {\n-                        dbSchema = db.addSchema(tab.getSchemaIdentifier());\n-                    }\n-                    dbSchema.importTable(tab);\n-                } else {\n-                    _log.warn(_loc.get(\"add-table\", tab));\n-                }\n-            }\n-        }\n-\n-        // indexes\n-        for (Schema schema : repos.getSchemas()) {\n-            Table[] tabs = schema.getTables();\n-            for (Table tab : tabs) {\n-                // create indexes on new tables even if indexes have been turned off\n-                if (!getIndexes() && !newTables.contains(tab)) {\n-                    continue;\n-                }\n-\n-                Table dbTable = null;\n-                if (considerDatabaseState) {\n-                    dbTable = db.findTable(schema, tab.getQualifiedPath());\n-                }\n-                if (dbTable != null) {\n-                    for (Index idx : tab.getIndexes()) {\n-                        Index dbIdx = findIndex(dbTable, idx);\n-                        if (dbIdx == null) {\n-                            if (createIndex(idx, dbTable, tab.getUniques())) {\n-                                dbTable.importIndex(idx);\n-                            } else {\n-                                _log.warn(_loc.get(\"add-index\", idx, tab));\n-                            }\n-                        } else if (!idx.equalsIndex(dbIdx)) {\n-                            _log.warn(_loc.get(\"bad-index\", dbIdx, dbTable));\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        // Unique Constraints on group of columns\n-        for (Schema schema : repos.getSchemas()) {\n-            for (Table tab : schema.getTables()) {\n-                // create unique constraints only on new tables\n-                if (!newTables.contains(tab)) {\n-                    continue;\n-                }\n-                Unique[] uniques = tab.getUniques();\n-                if (uniques == null || uniques.length == 0) {\n-                    continue;\n-                }\n-                Table dbTable = null;\n-                if (considerDatabaseState) {\n-                    dbTable = db.findTable(tab);\n-                }\n-                if (dbTable == null) {\n-                    continue;\n-                }\n-                for (Unique unique : uniques) {\n-                    dbTable.importUnique(unique);\n-                }\n-            }\n-        }\n-\n-        // foreign keys\n-        for (Schema schema : repos.getSchemas()) {\n-            for (Table tab : schema.getTables()) {\n-                // create foreign keys on new tables even if fks have been turned off\n-                if (!getForeignKeys() && !newTables.contains(tab)) {\n-                    continue;\n-                }\n-\n-                Table dbTable = null;\n-                if (considerDatabaseState) {\n-                    dbTable = db.findTable(schema, tab.getQualifiedPath());\n-                }\n-                if (dbTable != null) {\n-                    for (ForeignKey fk : tab.getForeignKeys()) {\n-                        if (!fk.isLogical()) {\n-                            ForeignKey dbFk = findForeignKey(dbTable, fk);\n-                            if (dbFk == null) {\n-                                if (addForeignKey(fk)) {\n-                                    dbTable.importForeignKey(fk);\n-                                } else {\n-                                    _log.warn(_loc.get(\"add-fk\", fk, tab));\n-                                }\n-                            } else if (!fk.equalsForeignKey(dbFk)) {\n-                                _log.warn(_loc.get(\"bad-fk\", dbFk, dbTable));\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-    }\n-}"},{"sha":"ad63e207ab0e8680d89b8b7c110c1c8f5261c758","filename":"core/upgrade/src/main/resources/schema.xml","status":"removed","additions":0,"deletions":1212,"changes":1212,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fschema.xml?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,1212 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<schemas>\n-  <schema>\n-    <table name=\"ADynGroupMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_DYNGSHP_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_DYNGSHP_GROUP\" column=\"GROUP_ID\"/>\n-    </table>\n-    <table name=\"AMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n-      <index name=\"I_MMBRSHP_LEFTEND\" column=\"anyObject_id\"/>\n-      <index name=\"I_MMBRSHP_RIGHTEND\" column=\"group_id\"/>\n-    </table>\n-    <table name=\"APlainAttr\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"MEMBERSHIP_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AnyObject\" column=\"OWNER_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <fk to-table=\"AMembership\" column=\"MEMBERSHIP_ID\"/>\n-      <index name=\"I_PLINTTR_MEMBERSHIP\" column=\"MEMBERSHIP_ID\"/>\n-      <index name=\"I_PLINTTR_OWNER\" column=\"OWNER_ID\"/>\n-      <index name=\"I_PLINTTR_SCHEMA\" column=\"schema_id\"/>\n-    </table>\n-    <table name=\"APlainAttrUniqueValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"APlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <index name=\"I_PLNTQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_PLNTQVL_SCHEMA\" column=\"schema_id\"/>\n-      <unique name=\"U_PLNTQVL_BOOLEANVALUE\">\n-        <on column=\"booleanValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_DATEVALUE\">\n-        <on column=\"dateValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_STRINGVALUE\">\n-        <on column=\"stringValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_DOUBLEVALUE\">\n-        <on column=\"doubleValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_LONGVALUE\">\n-        <on column=\"longValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"APlainAttrValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"APlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_PLNTRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-    </table>\n-    <table name=\"ARelationship\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"left_anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"right_anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AnyObject\" column=\"left_anyObject_id\"/>\n-      <fk to-table=\"AnyObject\" column=\"right_anyObject_id\"/>\n-      <fk to-table=\"RelationshipType\" column=\"TYPE_ID\"/>\n-      <index name=\"I_RLTNSHP_LEFTEND\" column=\"left_anyObject_id\"/>\n-      <index name=\"I_RLTNSHP_RIGHTEND\" column=\"right_anyObject_id\"/>\n-      <index name=\"I_RLTNSHP_TYPE\" column=\"TYPE_ID\"/>\n-      <unique name=\"U_RLTNSHP_TYPE_ID\">\n-        <on column=\"TYPE_ID\"/>\n-        <on column=\"left_anyObject_id\"/>\n-        <on column=\"right_anyObject_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"AccessToken\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"authorities\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"body\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"expiryTime\" type=\"timestamp\"/>\n-      <column name=\"owner\" type=\"varchar\" size=\"255\"/>\n-      <unique name=\"U_CCSSTKN_OWNER\" column=\"owner\"/>\n-    </table>\n-    <table name=\"AccountPolicy\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"maxAuthenticationAttempts\" type=\"integer\"/>\n-      <column name=\"propagateSuspension\" type=\"integer\"/>\n-    </table>\n-    <table name=\"AccountPolicyRule\">\n-      <column name=\"policy_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AccountPolicy\" column=\"policy_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_CCNTYRL_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_CCNTYRL_POLICY_ID\" column=\"policy_id\"/>\n-    </table>\n-    <table name=\"AccountPolicy_ExternalResource\">\n-      <column name=\"accountPolicy_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AccountPolicy\" column=\"accountPolicy_id\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_CCNTSRC_ACCOUNTPOLICY_ID\" column=\"accountPolicy_id\"/>\n-      <index name=\"I_CCNTSRC_ELEMENT\" column=\"resource_id\"/>\n-    </table>\n-    <table name=\"AnyAbout\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"filter\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"NOTIFICATION_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Notification\" column=\"NOTIFICATION_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_NYABOUT_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_NYABOUT_NOTIFICATION\" column=\"NOTIFICATION_ID\"/>\n-      <unique name=\"U_NYABOUT_NOTIFICATION_ID\">\n-        <on column=\"NOTIFICATION_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"AnyObject\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"creationDate\" type=\"timestamp\"/>\n-      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n-      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"TYPE_ID\"/>\n-      <index name=\"I_NYOBJCT_REALM\" column=\"REALM_ID\"/>\n-      <index name=\"I_NYOBJCT_TYPE\" column=\"TYPE_ID\"/>\n-      <unique name=\"U_NYOBJCT_NAME\" column=\"name\"/>\n-    </table>\n-    <table name=\"AnyObject_AnyTypeClass\">\n-      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_NYBJLSS_ANYOBJECT_ID\" column=\"anyObject_id\"/>\n-      <index name=\"I_NYBJLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n-    </table>\n-    <table name=\"AnyObject_ExternalResource\">\n-      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_NYBJSRC_ANYOBJECT_ID\" column=\"anyObject_id\"/>\n-      <index name=\"I_NYBJSRC_ELEMENT\" column=\"resource_id\"/>\n-    </table>\n-    <table name=\"AnyTemplatePullTask\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"template\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"PULLTASK_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"Task\" column=\"PULLTASK_ID\"/>\n-      <index name=\"I_NYTMTSK_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_NYTMTSK_PULLTASK\" column=\"PULLTASK_ID\"/>\n-      <unique name=\"U_NYTMTSK_PULLTASK_ID\">\n-        <on column=\"PULLTASK_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"AnyTemplateRealm\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"template\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_NYTMRLM_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_NYTMRLM_REALM\" column=\"REALM_ID\"/>\n-      <unique name=\"U_NYTMRLM_REALM_ID\">\n-        <on column=\"REALM_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"AnyType\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"kind\" type=\"varchar\" size=\"20\"/>\n-    </table>\n-    <table name=\"AnyTypeClass\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-    </table>\n-    <table name=\"AnyType_AnyTypeClass\">\n-      <column name=\"anyType_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"AnyType\" column=\"anyType_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_NYTYLSS_ANYTYPE_ID\" column=\"anyType_id\"/>\n-      <index name=\"I_NYTYLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n-    </table>\n-    <table name=\"Application\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-    </table>\n-    <table name=\"CPlainAttr\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"OWNER_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <fk to-table=\"SyncopeConf\" column=\"OWNER_ID\"/>\n-      <index name=\"I_CPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n-      <index name=\"I_CPLNTTR_SCHEMA\" column=\"schema_id\"/>\n-    </table>\n-    <table name=\"CPlainAttrUniqueValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"CPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <index name=\"I_CPLNQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_CPLNQVL_SCHEMA\" column=\"schema_id\"/>\n-      <unique name=\"U_CPLNQVL_BOOLEANVALUE\">\n-        <on column=\"booleanValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_CPLNQVL_DATEVALUE\">\n-        <on column=\"dateValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_CPLNQVL_STRINGVALUE\">\n-        <on column=\"stringValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_CPLNQVL_DOUBLEVALUE\">\n-        <on column=\"doubleValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_CPLNQVL_LONGVALUE\">\n-        <on column=\"longValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"CPlainAttrValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"CPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_CPLNRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-    </table>\n-    <table name=\"ConnInstance\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"bundleName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"connRequestTimeout\" type=\"integer\"/>\n-      <column name=\"connectorName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"displayName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"jsonConf\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"location\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"version\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ADMINREALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"maxIdle\" type=\"integer\"/>\n-      <column name=\"maxObjects\" type=\"integer\"/>\n-      <column name=\"maxWait\" type=\"bigint\"/>\n-      <column name=\"minEvictableIdleTimeMillis\" type=\"bigint\"/>\n-      <column name=\"minIdle\" type=\"integer\"/>\n-      <fk to-table=\"Realm\" column=\"ADMINREALM_ID\"/>\n-      <index name=\"I_CNNNTNC_ADMINREALM\" column=\"ADMINREALM_ID\"/>\n-      <unique name=\"U_CNNNTNC_DISPLAYNAME\" column=\"displayName\"/>\n-    </table>\n-    <table name=\"ConnInstanceHistoryConf\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"conf\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"creation\" type=\"timestamp\"/>\n-      <column name=\"creator\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"ENTITY_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"ConnInstance\" column=\"ENTITY_ID\"/>\n-      <index name=\"I_CNNNCNF_ENTITY\" column=\"ENTITY_ID\"/>\n-    </table>\n-    <table name=\"ConnInstance_capabilities\">\n-      <column name=\"connInstance_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"capability\" type=\"varchar\" size=\"20\"/>\n-      <fk to-table=\"ConnInstance\" column=\"connInstance_id\"/>\n-      <index name=\"I_CNNNLTS_CONNINSTANCE_ID\" column=\"connInstance_id\"/>\n-    </table>\n-    <table name=\"DerSchema\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"expression\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n-      <index name=\"I_DRSCHEM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n-    </table>\n-    <table name=\"DynRealm\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-    </table>\n-    <table name=\"DynRealmMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"DYNREALM_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"DynRealm\" column=\"DYNREALM_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_DYNRSHP_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_DYNRSHP_DYNREALM\" column=\"DYNREALM_ID\"/>\n-    </table>\n-    <table name=\"DynRoleMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ROLE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"ROLE_ID\"/>\n-      <index name=\"I_DYNRSHP_ROLE\" column=\"ROLE_ID\"/>\n-    </table>\n-    <table name=\"ExternalResource\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"createTraceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"deleteTraceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"enforceMandatoryCondition\" type=\"integer\"/>\n-      <column name=\"jsonConf\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"overrideCapabilities\" type=\"integer\"/>\n-      <column name=\"propagationPriority\" type=\"integer\"/>\n-      <column name=\"provisioningTraceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"randomPwdIfNotProvided\" type=\"integer\"/>\n-      <column name=\"updateTraceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"ACCOUNTPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"CONNECTOR_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"PASSWORDPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"PULLPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"PUSHPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AccountPolicy\" column=\"ACCOUNTPOLICY_ID\"/>\n-      <fk to-table=\"ConnInstance\" column=\"CONNECTOR_ID\"/>\n-      <fk to-table=\"PasswordPolicy\" column=\"PASSWORDPOLICY_ID\"/>\n-      <fk to-table=\"PullPolicy\" column=\"PULLPOLICY_ID\"/>\n-      <fk to-table=\"PushPolicy\" column=\"PUSHPOLICY_ID\"/>\n-      <index name=\"I_XTRNSRC_ACCOUNTPOLICY\" column=\"ACCOUNTPOLICY_ID\"/>\n-      <index name=\"I_XTRNSRC_CONNECTOR\" column=\"CONNECTOR_ID\"/>\n-      <index name=\"I_XTRNSRC_PASSWORDPOLICY\" column=\"PASSWORDPOLICY_ID\"/>\n-      <index name=\"I_XTRNSRC_PULLPOLICY\" column=\"PULLPOLICY_ID\"/>\n-      <index name=\"I_XTRNSRC_PUSHPOLICY\" column=\"PUSHPOLICY_ID\"/>\n-    </table>\n-    <table name=\"ExternalResourceHistoryConf\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"conf\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"creation\" type=\"timestamp\"/>\n-      <column name=\"creator\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"ENTITY_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"ExternalResource\" column=\"ENTITY_ID\"/>\n-      <index name=\"I_XTRNCNF_ENTITY\" column=\"ENTITY_ID\"/>\n-    </table>\n-    <table name=\"ExternalResourcePropAction\">\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_XTRNCTN_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_XTRNCTN_RESOURCE_ID\" column=\"resource_id\"/>\n-    </table>\n-    <table name=\"ExternalResource_capOverride\">\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"capabilityOverride\" type=\"varchar\" size=\"20\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_XTRNRRD_RESOURCE_ID\" column=\"resource_id\"/>\n-    </table>\n-    <table name=\"GPlainAttr\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"OWNER_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <index name=\"I_GPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n-      <index name=\"I_GPLNTTR_SCHEMA\" column=\"schema_id\"/>\n-    </table>\n-    <table name=\"GPlainAttrUniqueValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"GPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <index name=\"I_GPLNQVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_GPLNQVL_SCHEMA\" column=\"schema_id\"/>\n-      <unique name=\"U_GPLNQVL_BOOLEANVALUE\">\n-        <on column=\"booleanValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_GPLNQVL_DATEVALUE\">\n-        <on column=\"dateValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_GPLNQVL_STRINGVALUE\">\n-        <on column=\"stringValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_GPLNQVL_DOUBLEVALUE\">\n-        <on column=\"doubleValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_GPLNQVL_LONGVALUE\">\n-        <on column=\"longValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"GPlainAttrValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"GPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_GPLNRVL_ATTRIBUTE\" column=\"ATTRIBUTE_ID\"/>\n-    </table>\n-    <table name=\"Implementation\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"body\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"engine\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n-      <column name=\"type\" type=\"varchar\" not-null=\"true\" size=\"21\"/>\n-    </table>\n-    <table name=\"MailTemplate\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"htmlTemplate\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"textTemplate\" type=\"clob\" size=\"-1\"/>\n-    </table>\n-    <table name=\"Mapping\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"connObjectLink\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"PROVISION_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Provision\" column=\"PROVISION_ID\"/>\n-      <index name=\"I_MAPPING_PROVISION\" column=\"PROVISION_ID\"/>\n-    </table>\n-    <table name=\"MappingItem\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"connObjectKey\" type=\"integer\"/>\n-      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"intAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"password\" type=\"integer\"/>\n-      <column name=\"propJEXL\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"pullJEXL\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"purpose\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"MAPPING_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Mapping\" column=\"MAPPING_ID\"/>\n-      <index name=\"I_MPPNGTM_MAPPING\" column=\"MAPPING_ID\"/>\n-    </table>\n-    <table name=\"MappingItemTransformer\">\n-      <column name=\"item_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"MappingItem\" column=\"item_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_MPPNRMR_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_MPPNRMR_ITEM_ID\" column=\"item_id\"/>\n-    </table>\n-    <table name=\"Notification\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"active\" type=\"integer\"/>\n-      <column name=\"recipientAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"recipientsFIQL\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"selfAsRecipient\" type=\"integer\"/>\n-      <column name=\"sender\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"subject\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"traceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"RECIPIENTSPROVIDER_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"template_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Implementation\" column=\"RECIPIENTSPROVIDER_ID\"/>\n-      <fk to-table=\"MailTemplate\" column=\"template_id\"/>\n-      <index name=\"I_NTFCTON_RECIPIENTSPROVIDER\" column=\"RECIPIENTSPROVIDER_ID\"/>\n-      <index name=\"I_NTFCTON_TEMPLATE\" column=\"template_id\"/>\n-    </table>\n-    <table name=\"NotificationTask_recipients\">\n-      <column name=\"notificationTask_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"address\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Task\" column=\"notificationTask_id\"/>\n-      <index name=\"I_NTFCNTS_NOTIFICATIONTASK_ID\" column=\"notificationTask_id\"/>\n-    </table>\n-    <table name=\"Notification_events\">\n-      <column name=\"notification_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"event\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Notification\" column=\"notification_id\"/>\n-      <index name=\"I_NTFCNTS_NOTIFICATION_ID\" column=\"notification_id\"/>\n-    </table>\n-    <table name=\"Notification_staticRecipients\">\n-      <column name=\"notification_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"staticRecipients\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Notification\" column=\"notification_id\"/>\n-      <index name=\"I_NTFCNTS_NOTIFICATION_ID1\" column=\"notification_id\"/>\n-    </table>\n-    <table name=\"OrgUnit\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"connObjectLink\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ignoreCaseMatch\" type=\"integer\"/>\n-      <column name=\"objectClass\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"serializedSyncToken\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n-      <index name=\"I_ORGUNIT_RESOURCE\" column=\"RESOURCE_ID\"/>\n-    </table>\n-    <table name=\"OrgUnitItem\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"connObjectKey\" type=\"integer\"/>\n-      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"intAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"password\" type=\"integer\"/>\n-      <column name=\"propJEXL\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"pullJEXL\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"purpose\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"ORGUNIT_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"OrgUnit\" column=\"ORGUNIT_ID\"/>\n-      <index name=\"I_RGUNTTM_ORGUNIT\" column=\"ORGUNIT_ID\"/>\n-    </table>\n-    <table name=\"OrgUnitItemTransformer\">\n-      <column name=\"item_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"OrgUnitItem\" column=\"item_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_RGNTRMR_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_RGNTRMR_ITEM_ID\" column=\"item_id\"/>\n-    </table>\n-    <table name=\"PasswordPolicy\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"allowNullPassword\" type=\"integer\"/>\n-      <column name=\"historyLength\" type=\"integer\"/>\n-    </table>\n-    <table name=\"PasswordPolicyRule\">\n-      <column name=\"policy_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"PasswordPolicy\" column=\"policy_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_PSSWYRL_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_PSSWYRL_POLICY_ID\" column=\"policy_id\"/>\n-    </table>\n-    <table name=\"PlainSchema\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"cipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"conversionPattern\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"enumerationKeys\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"enumerationValues\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"mandatoryCondition\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"mimeType\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"multivalue\" type=\"integer\"/>\n-      <column name=\"readonly\" type=\"integer\"/>\n-      <column name=\"secretKey\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"type\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"uniqueConstraint\" type=\"integer\"/>\n-      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"VALIDATOR_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n-      <fk to-table=\"Implementation\" column=\"VALIDATOR_ID\"/>\n-      <index name=\"I_PLNSCHM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n-      <index name=\"I_PLNSCHM_VALIDATOR\" column=\"VALIDATOR_ID\"/>\n-    </table>\n-    <table name=\"Privilege\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"spec\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"APPLICATION_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Application\" column=\"APPLICATION_ID\"/>\n-      <index name=\"I_PRIVILG_APPLICATION\" column=\"APPLICATION_ID\"/>\n-    </table>\n-    <table name=\"Provision\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"ignoreCaseMatch\" type=\"integer\"/>\n-      <column name=\"objectClass\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"serializedSyncToken\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"UIDONCREATE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"UIDONCREATE_ID\"/>\n-      <index name=\"I_PROVSON_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_PROVSON_RESOURCE\" column=\"RESOURCE_ID\"/>\n-      <index name=\"I_PROVSON_UIDONCREATE\" column=\"UIDONCREATE_ID\"/>\n-      <unique name=\"U_PROVSON_RESOURCE_ID\">\n-        <on column=\"RESOURCE_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"Provision_AnyTypeClass\">\n-      <column name=\"provision_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Provision\" column=\"provision_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_PRVSLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_PRVSLSS_PROVISION_ID\" column=\"provision_id\"/>\n-    </table>\n-    <table name=\"PullCorrelationRuleEntity\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"PULLPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"IMPLEMENTATION_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"PullPolicy\" column=\"PULLPOLICY_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"Implementation\" column=\"IMPLEMENTATION_ID\"/>\n-      <index name=\"I_PLLCTTY_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_PLLCTTY_IMPLEMENTATION\" column=\"IMPLEMENTATION_ID\"/>\n-      <index name=\"I_PLLCTTY_PULLPOLICY\" column=\"PULLPOLICY_ID\"/>\n-      <unique name=\"U_PLLCTTY_PULLPOLICY_ID\">\n-        <on column=\"PULLPOLICY_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"PullPolicy\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"conflictResolutionAction\" type=\"varchar\" size=\"20\"/>\n-    </table>\n-    <table name=\"PullTaskAction\">\n-      <column name=\"task_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Task\" column=\"task_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_PLLTCTN_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_PLLTCTN_TASK_ID\" column=\"task_id\"/>\n-    </table>\n-    <table name=\"PushCorrelationRuleEntity\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"PUSHPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"IMPLEMENTATION_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"PushPolicy\" column=\"PUSHPOLICY_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"Implementation\" column=\"IMPLEMENTATION_ID\"/>\n-      <index name=\"I_PSHCTTY_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_PSHCTTY_IMPLEMENTATION\" column=\"IMPLEMENTATION_ID\"/>\n-      <index name=\"I_PSHCTTY_PUSHPOLICY\" column=\"PUSHPOLICY_ID\"/>\n-      <unique name=\"U_PSHCTTY_PUSHPOLICY_ID\">\n-        <on column=\"PUSHPOLICY_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"PushPolicy\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"conflictResolutionAction\" type=\"varchar\" size=\"20\"/>\n-    </table>\n-    <table name=\"PushTaskAction\">\n-      <column name=\"task_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Task\" column=\"task_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_PSHTCTN_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_PSHTCTN_TASK_ID\" column=\"task_id\"/>\n-    </table>\n-    <table name=\"PushTaskAnyFilter\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"PUSHTASK_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"Task\" column=\"PUSHTASK_ID\"/>\n-      <index name=\"I_PSHTLTR_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_PSHTLTR_PUSHTASK\" column=\"PUSHTASK_ID\"/>\n-      <unique name=\"U_PSHTLTR_PUSHTASK_ID\">\n-        <on column=\"PUSHTASK_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"Realm\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ACCOUNTPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"PARENT_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"PASSWORDPOLICY_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AccountPolicy\" column=\"ACCOUNTPOLICY_ID\"/>\n-      <fk to-table=\"Realm\" column=\"PARENT_ID\"/>\n-      <fk to-table=\"PasswordPolicy\" column=\"PASSWORDPOLICY_ID\"/>\n-      <index name=\"I_REALM_ACCOUNTPOLICY\" column=\"ACCOUNTPOLICY_ID\"/>\n-      <index name=\"I_REALM_PARENT\" column=\"PARENT_ID\"/>\n-      <index name=\"I_REALM_PASSWORDPOLICY\" column=\"PASSWORDPOLICY_ID\"/>\n-      <unique name=\"U_REALM_NAME\">\n-        <on column=\"name\"/>\n-        <on column=\"PARENT_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"RealmAction\">\n-      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Realm\" column=\"realm_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_RLMCTON_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_RLMCTON_REALM_ID\" column=\"realm_id\"/>\n-    </table>\n-    <table name=\"Realm_ExternalResource\">\n-      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Realm\" column=\"realm_id\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_RLM_SRC_ELEMENT\" column=\"resource_id\"/>\n-      <index name=\"I_RLM_SRC_REALM_ID\" column=\"realm_id\"/>\n-    </table>\n-    <table name=\"RelationshipType\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-    </table>\n-    <table name=\"Remediation\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"error\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"instant\" type=\"timestamp\"/>\n-      <column name=\"operation\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"payload\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"remoteName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"PULLTASK_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <fk to-table=\"Task\" column=\"PULLTASK_ID\"/>\n-      <index name=\"I_RMDTION_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_RMDTION_PULLTASK\" column=\"PULLTASK_ID\"/>\n-    </table>\n-    <table name=\"Report\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"active\" type=\"integer\"/>\n-      <column name=\"cronExpression\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"name\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"template_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"ReportTemplate\" column=\"template_id\"/>\n-      <index name=\"I_REPORT_TEMPLATE\" column=\"template_id\"/>\n-      <unique name=\"U_REPORT_NAME\" column=\"name\"/>\n-    </table>\n-    <table name=\"ReportExec\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"endDate\" type=\"timestamp\"/>\n-      <column name=\"message\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"startDate\" type=\"timestamp\"/>\n-      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"execResult\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"REPORT_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Report\" column=\"REPORT_ID\"/>\n-      <index name=\"I_RPORTXC_REPORT\" column=\"REPORT_ID\"/>\n-    </table>\n-    <table name=\"ReportReportlet\">\n-      <column name=\"report_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"implementation_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"Report\" column=\"report_id\"/>\n-      <fk to-table=\"Implementation\" column=\"implementation_id\"/>\n-      <index name=\"I_RPRTTLT_ELEMENT\" column=\"implementation_id\"/>\n-      <index name=\"I_RPRTTLT_REPORT_ID\" column=\"report_id\"/>\n-    </table>\n-    <table name=\"ReportTemplate\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"csvTemplate\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"foTemplate\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"htmlTemplate\" type=\"clob\" size=\"-1\"/>\n-    </table>\n-    <table name=\"SchemaLabel\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"display\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"locale\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"SCHEMA_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeSchema\" column=\"SCHEMA_ID\"/>\n-      <index name=\"I_SCHMLBL_SCHEMA\" column=\"SCHEMA_ID\"/>\n-      <unique name=\"U_SCHMLBL_SCHEMA_ID\">\n-        <on column=\"SCHEMA_ID\"/>\n-        <on column=\"locale\"/>\n-      </unique>\n-    </table>\n-    <table name=\"SecurityQuestion\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"content\" type=\"varchar\" size=\"255\"/>\n-      <unique name=\"U_SCRTSTN_CONTENT\" column=\"content\"/>\n-    </table>\n-    <table name=\"SyncopeConf\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-    </table>\n-    <table name=\"SyncopeDomain\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"adminCipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"adminPwd\" type=\"varchar\" size=\"255\"/>\n-    </table>\n-    <table name=\"SyncopeGroup\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"creationDate\" type=\"timestamp\"/>\n-      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n-      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"GROUPOWNER_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"USEROWNER_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"GROUPOWNER_ID\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"USEROWNER_ID\"/>\n-      <index name=\"I_SYNCGRP_GROUPOWNER\" column=\"GROUPOWNER_ID\"/>\n-      <index name=\"I_SYNCGRP_REALM\" column=\"REALM_ID\"/>\n-      <index name=\"I_SYNCGRP_USEROWNER\" column=\"USEROWNER_ID\"/>\n-      <unique name=\"U_SYNCGRP_NAME\" column=\"name\"/>\n-    </table>\n-    <table name=\"SyncopeGroup_AnyTypeClass\">\n-      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_SYNCLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_SYNCLSS_GROUP_ID\" column=\"group_id\"/>\n-    </table>\n-    <table name=\"SyncopeGroup_ExternalResource\">\n-      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_SYNCSRC_ELEMENT\" column=\"resource_id\"/>\n-      <index name=\"I_SYNCSRC_GROUP_ID\" column=\"group_id\"/>\n-    </table>\n-    <table name=\"SyncopeLogger\">\n-      <pk column=\"logName\"/>\n-      <column name=\"logName\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"logLevel\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n-      <column name=\"logType\" type=\"varchar\" not-null=\"true\" size=\"20\"/>\n-    </table>\n-    <table name=\"SyncopeRole\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"consoleLayoutInfo\" type=\"clob\" size=\"-1\"/>\n-    </table>\n-    <table name=\"SyncopeRole_DynRealm\">\n-      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"dynamicRealm_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n-      <fk to-table=\"DynRealm\" column=\"dynamicRealm_id\"/>\n-      <index name=\"I_SYNCRLM_ELEMENT\" column=\"dynamicRealm_id\"/>\n-      <index name=\"I_SYNCRLM_ROLE_ID\" column=\"role_id\"/>\n-    </table>\n-    <table name=\"SyncopeRole_Privilege\">\n-      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"privilege_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n-      <fk to-table=\"Privilege\" column=\"privilege_id\"/>\n-      <index name=\"I_SYNCVLG_ELEMENT\" column=\"privilege_id\"/>\n-      <index name=\"I_SYNCVLG_ROLE_ID\" column=\"role_id\"/>\n-    </table>\n-    <table name=\"SyncopeRole_Realm\">\n-      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"realm_id\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n-      <fk to-table=\"Realm\" column=\"realm_id\"/>\n-      <index name=\"I_SYNCRLM_ELEMENT1\" column=\"realm_id\"/>\n-      <index name=\"I_SYNCRLM_ROLE_ID1\" column=\"role_id\"/>\n-    </table>\n-    <table name=\"SyncopeRole_entitlements\">\n-      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"entitlement\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n-      <index name=\"I_SYNCNTS_ROLE_ID\" column=\"role_id\"/>\n-    </table>\n-    <table name=\"SyncopeSchema\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-    </table>\n-    <table name=\"SyncopeUser\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"creationDate\" type=\"timestamp\"/>\n-      <column name=\"creator\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"lastChangeDate\" type=\"timestamp\"/>\n-      <column name=\"lastModifier\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"changePwdDate\" type=\"timestamp\"/>\n-      <column name=\"cipherAlgorithm\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"failedLogins\" type=\"integer\"/>\n-      <column name=\"lastLoginDate\" type=\"timestamp\"/>\n-      <column name=\"mustChangePassword\" type=\"integer\"/>\n-      <column name=\"password\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"securityAnswer\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"suspended\" type=\"integer\"/>\n-      <column name=\"token\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"tokenExpireTime\" type=\"timestamp\"/>\n-      <column name=\"username\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"REALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"SECURITYQUESTION_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Realm\" column=\"REALM_ID\"/>\n-      <fk to-table=\"SecurityQuestion\" column=\"SECURITYQUESTION_ID\"/>\n-      <index name=\"I_SYNCPSR_REALM\" column=\"REALM_ID\"/>\n-      <index name=\"I_SYNCPSR_SECURITYQUESTION\" column=\"SECURITYQUESTION_ID\"/>\n-      <unique name=\"U_SYNCPSR_USERNAME\" column=\"username\"/>\n-    </table>\n-    <table name=\"SyncopeUser_AnyTypeClass\">\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_SYNCLSS_ELEMENT1\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_SYNCLSS_USER_ID\" column=\"user_id\"/>\n-    </table>\n-    <table name=\"SyncopeUser_ExternalResource\">\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"resource_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <fk to-table=\"ExternalResource\" column=\"resource_id\"/>\n-      <index name=\"I_SYNCSRC_ELEMENT1\" column=\"resource_id\"/>\n-      <index name=\"I_SYNCSRC_USER_ID\" column=\"user_id\"/>\n-    </table>\n-    <table name=\"SyncopeUser_SyncopeRole\">\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"role_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <fk to-table=\"SyncopeRole\" column=\"role_id\"/>\n-      <index name=\"I_SYNCPRL_ELEMENT\" column=\"role_id\"/>\n-      <index name=\"I_SYNCPRL_USER_ID\" column=\"user_id\"/>\n-    </table>\n-    <table name=\"SyncopeUser_passwordHistory\">\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"passwordHistoryValue\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <index name=\"I_SYNCTRY_USER_ID\" column=\"user_id\"/>\n-    </table>\n-    <table name=\"Task\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"DTYPE\" type=\"varchar\" size=\"31\"/>\n-      <column name=\"active\" type=\"integer\"/>\n-      <column name=\"cronExpression\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"description\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"name\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"startAt\" type=\"timestamp\"/>\n-      <column name=\"matchingRule\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"performCreate\" type=\"integer\"/>\n-      <column name=\"performDelete\" type=\"integer\"/>\n-      <column name=\"performUpdate\" type=\"integer\"/>\n-      <column name=\"syncStatus\" type=\"integer\"/>\n-      <column name=\"unmatchingRule\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"pullMode\" type=\"varchar\" size=\"23\"/>\n-      <column name=\"remediation\" type=\"integer\"/>\n-      <column name=\"JOBDELEGATE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"RESOURCE_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"DESTINATIONREALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"RECONFILTERBUILDER_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"anyType\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"anyTypeKind\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"attributes\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"connObjectKey\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"entityKey\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"objectClassName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"oldConnObjectKey\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"operation\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"SOURCEREALM_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"executed\" type=\"integer\"/>\n-      <column name=\"htmlBody\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"sender\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"subject\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"textBody\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"traceLevel\" type=\"varchar\" size=\"20\"/>\n-      <column name=\"NOTIFICATION_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Implementation\" column=\"JOBDELEGATE_ID\"/>\n-      <fk to-table=\"ExternalResource\" column=\"RESOURCE_ID\"/>\n-      <fk to-table=\"Realm\" column=\"DESTINATIONREALM_ID\"/>\n-      <fk to-table=\"Implementation\" column=\"RECONFILTERBUILDER_ID\"/>\n-      <fk to-table=\"Realm\" column=\"SOURCEREALM_ID\"/>\n-      <fk to-table=\"Notification\" column=\"NOTIFICATION_ID\"/>\n-      <index name=\"I_TASK_DESTINATIONREALM\" column=\"DESTINATIONREALM_ID\"/>\n-      <index name=\"I_TASK_DTYPE\" column=\"DTYPE\"/>\n-      <index name=\"I_TASK_JOBDELEGATE\" column=\"JOBDELEGATE_ID\"/>\n-      <index name=\"I_TASK_NOTIFICATION\" column=\"NOTIFICATION_ID\"/>\n-      <index name=\"I_TASK_RECONFILTERBUILDER\" column=\"RECONFILTERBUILDER_ID\"/>\n-      <index name=\"I_TASK_RESOURCE\" column=\"RESOURCE_ID\"/>\n-      <index name=\"I_TASK_SOURCEREALM\" column=\"SOURCEREALM_ID\"/>\n-    </table>\n-    <table name=\"TaskExec\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"endDate\" type=\"timestamp\"/>\n-      <column name=\"message\" type=\"clob\" size=\"-1\"/>\n-      <column name=\"startDate\" type=\"timestamp\"/>\n-      <column name=\"status\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"TASK_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"Task\" column=\"TASK_ID\"/>\n-      <index name=\"I_TSKEXEC_TASK\" column=\"TASK_ID\"/>\n-    </table>\n-    <table name=\"TypeExtension\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"ANYTYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n-      <fk to-table=\"AnyType\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_TYPXNSN_ANYTYPE\" column=\"ANYTYPE_ID\"/>\n-      <index name=\"I_TYPXNSN_GROUP\" column=\"GROUP_ID\"/>\n-      <unique name=\"U_TYPXNSN_GROUP_ID\">\n-        <on column=\"GROUP_ID\"/>\n-        <on column=\"ANYTYPE_ID\"/>\n-      </unique>\n-    </table>\n-    <table name=\"TypeExtension_AnyTypeClass\">\n-      <column name=\"typeExtension_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyTypeClass_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"TypeExtension\" column=\"typeExtension_id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_TYPXLSS_ELEMENT\" column=\"anyTypeClass_id\"/>\n-      <index name=\"I_TYPXLSS_TYPEEXTENSION_ID\" column=\"typeExtension_id\"/>\n-    </table>\n-    <table name=\"UDynGroupMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"fiql\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"GROUP_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"GROUP_ID\"/>\n-      <index name=\"I_DYNGSHP_GROUP1\" column=\"GROUP_ID\"/>\n-    </table>\n-    <table name=\"UMembership\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"group_id\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <fk to-table=\"SyncopeGroup\" column=\"group_id\"/>\n-      <index name=\"I_MMBRSHP_LEFTEND1\" column=\"user_id\"/>\n-      <index name=\"I_MMBRSHP_RIGHTEND1\" column=\"group_id\"/>\n-    </table>\n-    <table name=\"UPlainAttr\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"OWNER_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"MEMBERSHIP_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"OWNER_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <fk to-table=\"UMembership\" column=\"MEMBERSHIP_ID\"/>\n-      <index name=\"I_UPLNTTR_MEMBERSHIP\" column=\"MEMBERSHIP_ID\"/>\n-      <index name=\"I_UPLNTTR_OWNER\" column=\"OWNER_ID\"/>\n-      <index name=\"I_UPLNTTR_SCHEMA\" column=\"schema_id\"/>\n-    </table>\n-    <table name=\"UPlainAttrUniqueValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"schema_id\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"UPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <fk to-table=\"PlainSchema\" column=\"schema_id\"/>\n-      <index name=\"I_PLNTQVL_ATTRIBUTE1\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_PLNTQVL_SCHEMA1\" column=\"schema_id\"/>\n-      <unique name=\"U_PLNTQVL_BOOLEANVALUE1\">\n-        <on column=\"booleanValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_DATEVALUE1\">\n-        <on column=\"dateValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_STRINGVALUE1\">\n-        <on column=\"stringValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_DOUBLEVALUE1\">\n-        <on column=\"doubleValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-      <unique name=\"U_PLNTQVL_LONGVALUE1\">\n-        <on column=\"longValue\"/>\n-        <on column=\"schema_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"UPlainAttrValue\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"binaryValue\" type=\"blob\" size=\"-1\"/>\n-      <column name=\"booleanValue\" type=\"integer\"/>\n-      <column name=\"dateValue\" type=\"timestamp\"/>\n-      <column name=\"doubleValue\" type=\"double\"/>\n-      <column name=\"longValue\" type=\"bigint\"/>\n-      <column name=\"stringValue\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"ATTRIBUTE_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"UPlainAttr\" column=\"ATTRIBUTE_ID\"/>\n-      <index name=\"I_PLNTRVL_ATTRIBUTE1\" column=\"ATTRIBUTE_ID\"/>\n-    </table>\n-    <table name=\"URelationship\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"36\"/>\n-      <column name=\"user_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"anyObject_id\" type=\"varchar\" size=\"36\"/>\n-      <column name=\"TYPE_ID\" type=\"varchar\" size=\"255\"/>\n-      <fk to-table=\"SyncopeUser\" column=\"user_id\"/>\n-      <fk to-table=\"AnyObject\" column=\"anyObject_id\"/>\n-      <fk to-table=\"RelationshipType\" column=\"TYPE_ID\"/>\n-      <index name=\"I_RLTNSHP_LEFTEND1\" column=\"user_id\"/>\n-      <index name=\"I_RLTNSHP_RIGHTEND1\" column=\"anyObject_id\"/>\n-      <index name=\"I_RLTNSHP_TYPE1\" column=\"TYPE_ID\"/>\n-      <unique name=\"U_RLTNSHP_TYPE_ID1\">\n-        <on column=\"TYPE_ID\"/>\n-        <on column=\"user_id\"/>\n-        <on column=\"anyObject_id\"/>\n-      </unique>\n-    </table>\n-    <table name=\"VirSchema\">\n-      <pk column=\"id\"/>\n-      <column name=\"id\" type=\"varchar\" not-null=\"true\" size=\"255\"/>\n-      <column name=\"extAttrName\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"readonly\" type=\"integer\"/>\n-      <column name=\"ANYTYPECLASS_ID\" type=\"varchar\" size=\"255\"/>\n-      <column name=\"PROVISION_ID\" type=\"varchar\" size=\"36\"/>\n-      <fk to-table=\"SyncopeSchema\" column=\"id\"/>\n-      <fk to-table=\"AnyTypeClass\" column=\"ANYTYPECLASS_ID\"/>\n-      <fk to-table=\"Provision\" column=\"PROVISION_ID\"/>\n-      <index name=\"I_VIRSCHM_ANYTYPECLASS\" column=\"ANYTYPECLASS_ID\"/>\n-      <index name=\"I_VIRSCHM_PROVISION\" column=\"PROVISION_ID\"/>\n-    </table>\n-  </schema>\n-</schemas>\n\\ No newline at end of file"},{"sha":"a1a7a7c5778c22aef03d4256cba15cbc42fb6973","filename":"core/upgrade/src/main/resources/syncopeupgrade.bat","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.bat?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,27 +0,0 @@\n-@ECHO OFF\n-\n-rem Licensed to the Apache Software Foundation (ASF) under one\n-rem or more contributor license agreements.  See the NOTICE file\n-rem distributed with this work for additional information\n-rem regarding copyright ownership.  The ASF licenses this file\n-rem to you under the Apache License, Version 2.0 (the\n-rem \"License\"); you may not use this file except in compliance\n-rem with the License.  You may obtain a copy of the License at\n-rem\n-rem   http://www.apache.org/licenses/LICENSE-2.0\n-rem\n-rem Unless required by applicable law or agreed to in writing,\n-rem software distributed under the License is distributed on an\n-rem \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-rem KIND, either express or implied.  See the License for the\n-rem specific language governing permissions and limitations\n-rem under the License.\n-\n-setLocal EnableDelayedExpansion\n-set CLASSPATH=\"\n-for /R ./lib %%a in (*.jar) do (\n-  set CLASSPATH=!CLASSPATH!;%%a\n-)\n-set CLASSPATH=!CLASSPATH!\"\n-\n-java -Xms256m -Xmx512m -classpath !CLASSPATH! org.apache.syncope.core.upgrade.GenerateUpgradeSQL %*\n\\ No newline at end of file"},{"sha":"466e986edbc91784a17f02240b01e49fbc0ad9fa","filename":"core/upgrade/src/main/resources/syncopeupgrade.sh","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fresources%2Fsyncopeupgrade.sh?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,23 +0,0 @@\n-#!/bin/sh\n-\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-LIB=`ls lib`\n-CLASSPATH=lib/`echo $LIB | sed \"s/jar /jar:lib\\//g\"`\n-\n-java -Xms256m -Xmx512m -classpath \"$CLASSPATH\" org.apache.syncope.core.upgrade.GenerateUpgradeSQL \"$@\"\n\\ No newline at end of file"},{"sha":"148797bf3dac9ef5397eb466164c1c6437ab0ec6","filename":"core/upgrade/src/test/java/org/apache/syncope/core/upgrade/GeneratedUpgradeSQLTest.java","status":"removed","additions":0,"deletions":148,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGeneratedUpgradeSQLTest.java?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,148 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.upgrade;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.AssertionsKt.fail;\n-\n-import java.io.StringWriter;\n-import java.nio.charset.StandardCharsets;\n-import javax.annotation.Resource;\n-import javax.sql.DataSource;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.ByteArrayResource;\n-import org.springframework.jdbc.core.JdbcTemplate;\n-import org.springframework.jdbc.datasource.init.DataSourceInitializer;\n-import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n-import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n-\n-@SpringJUnitConfig(locations = {\n-    \"classpath:testJDBCEnv.xml\"\n-})\n-public class GeneratedUpgradeSQLTest {\n-\n-    @Resource(name = \"driverClassName\")\n-    private String driverClassName;\n-\n-    @Resource(name = \"jdbcURL\")\n-    private String jdbcURL;\n-\n-    @Resource(name = \"username\")\n-    private String username;\n-\n-    @Resource(name = \"password\")\n-    private String password;\n-\n-    @Autowired\n-    private DataSource syncope20DataSource;\n-\n-    @Test\n-    public void upgradefrom20() throws Exception {\n-        StringWriter out = new StringWriter();\n-        GenerateUpgradeSQL.setWriter(out);\n-\n-        String[] args = new String[] { driverClassName, jdbcURL, username, password, \"h2\" };\n-        GenerateUpgradeSQL.main(args);\n-\n-        String upgradeSQL = out.toString();\n-\n-        try {\n-            DataSourceInitializer adminUsersInit = new DataSourceInitializer();\n-            adminUsersInit.setDataSource(syncope20DataSource);\n-            adminUsersInit.setDatabasePopulator(\n-                    new ResourceDatabasePopulator(new ByteArrayResource(upgradeSQL.getBytes(StandardCharsets.UTF_8))));\n-            adminUsersInit.afterPropertiesSet();\n-        } catch (Exception e) {\n-            fail(\"Unexpected error while upgrading\", e);\n-        }\n-\n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(syncope20DataSource);\n-\n-        Integer implementations = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM Implementation\", Integer.class);\n-        assertNotNull(implementations);\n-        assertEquals(15, implementations.intValue());\n-\n-        Integer pullTaskActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM PullTaskAction\", Integer.class);\n-        assertNotNull(pullTaskActions);\n-        assertEquals(1, pullTaskActions.intValue());\n-\n-        Integer pushTaskActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM PushTaskAction\", Integer.class);\n-        assertNotNull(pushTaskActions);\n-        assertEquals(0, pushTaskActions.intValue());\n-\n-        Integer propagationTaskActions = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM ExternalResourcePropAction\", Integer.class);\n-        assertNotNull(propagationTaskActions);\n-        assertEquals(1, propagationTaskActions.intValue());\n-\n-        Integer realmActions = jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM RealmAction\", Integer.class);\n-        assertNotNull(realmActions);\n-        assertEquals(0, realmActions.intValue());\n-\n-        Integer accountPolicyRules = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM AccountPolicyRule\", Integer.class);\n-        assertNotNull(accountPolicyRules);\n-        assertEquals(2, accountPolicyRules.intValue());\n-\n-        Integer passwordPolicyRules = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM PasswordPolicyRule\", Integer.class);\n-        assertNotNull(passwordPolicyRules);\n-        assertEquals(3, passwordPolicyRules.intValue());\n-\n-        Integer pullCorrelationRuleEntities = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM PullCorrelationRuleEntity\", Integer.class);\n-        assertNotNull(pullCorrelationRuleEntities);\n-        assertEquals(1, pullCorrelationRuleEntities.intValue());\n-\n-        Integer pushCorrelationRuleEntities = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM PushCorrelationRuleEntity\", Integer.class);\n-        assertNotNull(pushCorrelationRuleEntities);\n-        assertEquals(0, pushCorrelationRuleEntities.intValue());\n-    }\n-\n-    @Test\n-    public void upgradeFlowableTo212() throws Exception {\n-        StringWriter out = new StringWriter();\n-        GenerateUpgradeSQL.setWriter(out);\n-\n-        String[] args = new String[] { driverClassName, jdbcURL, username, password, \"h2\", \"-flowable-2.1.2\" };\n-        GenerateUpgradeSQL.main(args);\n-\n-        String upgradeSQL = out.toString();\n-\n-        try {\n-            DataSourceInitializer adminUsersInit = new DataSourceInitializer();\n-            adminUsersInit.setDataSource(syncope20DataSource);\n-            adminUsersInit.setDatabasePopulator(\n-                    new ResourceDatabasePopulator(new ByteArrayResource(upgradeSQL.getBytes(StandardCharsets.UTF_8))));\n-            adminUsersInit.afterPropertiesSet();\n-        } catch (Exception e) {\n-            fail(\"Unexpected error while upgrading Flowable to 2.1.2\", e);\n-        }\n-\n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(syncope20DataSource);\n-\n-        Integer processInstances = jdbcTemplate.queryForObject(\n-                \"SELECT COUNT(*) FROM ACT_RU_EXECUTION WHERE BUSINESS_KEY_ IS NOT NULL\", Integer.class);\n-        assertNotNull(processInstances);\n-        assertEquals(5, processInstances.intValue());\n-    }\n-}"},{"sha":"ff5ab06dad7d50d5e6dfb99cd08d0e9cc9e3664c","filename":"core/upgrade/src/test/resources/syncopedb20.sql","status":"removed","additions":0,"deletions":2856,"changes":2856,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2Fsyncopedb20.sql?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3"},{"sha":"173ffd47f471004b2822843945e86032b4e3483e","filename":"core/upgrade/src/test/resources/testJDBCEnv.xml","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml?ref=33ebbfe1b053e1e6800ee2d6bc1d32dcc13cf1d3","patch":"@@ -1,63 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-\n-  <bean id=\"driverClassName\" class=\"java.lang.String\">\n-    <constructor-arg value=\"org.h2.Driver\"/>\n-  </bean>\n-  <bean id=\"jdbcURL\" class=\"java.lang.String\">\n-    <constructor-arg value=\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\"/>\n-  </bean>\n-  <bean id=\"username\" class=\"java.lang.String\">\n-    <constructor-arg value=\"sa\"/>\n-  </bean>\n-  <bean id=\"password\" class=\"java.lang.String\">\n-    <constructor-arg value=\"sa\"/>\n-  </bean>\n-  \n-  <bean id=\"syncope20DataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-    <property name=\"driverClassName\" ref=\"driverClassName\"/>\n-    <property name=\"url\" ref=\"jdbcURL\"/>\n-    <property name=\"username\" ref=\"username\"/>\n-    <property name=\"password\" ref=\"password\"/>\n-  </bean>\n-  \n-  <bean id=\"syncope20DataSourceInit\" class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n-    <property name=\"dataSource\" ref=\"syncope20DataSource\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"false\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"false\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/syncopedb20.sql\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-\n-</beans>"},{"sha":"935f61f57a9e57013d6931354cff28f28b4b52e3","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -19,14 +19,15 @@\n package org.apache.syncope.core.workflow.java;\n \n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -36,7 +37,7 @@\n public class DefaultUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ConfParamOps confParamOps;\n \n     @Override\n     protected WorkflowResult<Pair<String, Boolean>> doCreate(\n@@ -112,8 +113,8 @@ protected WorkflowResult<String> doReactivate(final User user) {\n     @Override\n     protected void doRequestPasswordReset(final User user) {\n         user.generateToken(\n-                confDAO.find(\"token.length\", 256L).intValue(),\n-                confDAO.find(\"token.expireTime\", 60L).intValue());\n+                confParamOps.get(AuthContextUtils.getDomain(), \"token.length\", 256, Integer.class),\n+                confParamOps.get(AuthContextUtils.getDomain(), \"token.expireTime\", 60, Integer.class));\n         userDAO.save(user);\n     }\n "},{"sha":"d215a185576cd3dd5946d3e1278dd502fde0931e","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/WorkflowContext.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.workflow.java;\n \n+import java.lang.reflect.InvocationTargetException;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n@@ -41,25 +42,28 @@ public void setEnvironment(final Environment env) {\n \n     @Bean\n     public UserWorkflowAdapter uwfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n+            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n \n         return (UserWorkflowAdapter) Class.forName(env.getProperty(\"uwfAdapter\")).\n-                newInstance();\n+                getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n     public GroupWorkflowAdapter gwfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n+            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n \n         return (GroupWorkflowAdapter) Class.forName(env.getProperty(\"gwfAdapter\")).\n-                newInstance();\n+                getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n     public AnyObjectWorkflowAdapter awfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n+            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n \n         return (AnyObjectWorkflowAdapter) Class.forName(env.getProperty(\"awfAdapter\")).\n-                newInstance();\n+                getDeclaredConstructor().newInstance();\n     }\n }"},{"sha":"d81bb19d4c33dee6876e62a1845893c90c465950","filename":"docker/core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -267,7 +267,7 @@ under the License.\n     \n     <resources>\n       <resource>\n-        <directory>${basedir}/src/main/resources</directory>\n+        <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n "},{"sha":"9264deb2807d729f50391d9ef73aa68f0e7d186f","filename":"docker/core/src/main/resources/indexes.xml.pgjsonb","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -37,12 +37,6 @@ under the License.\n   <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n   <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n \n-  <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n-  <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n-  <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n-  <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n-  <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n-\n   <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n   <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n   <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n@@ -53,11 +47,5 @@ under the License.\n   <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n   <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n \n-  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n-  <entry key=\"CPAttrUniqueValue_attrIndex\">CREATE INDEX CPAttrUniqueValue_attrIndex on CPlainAttrUniqueValue(attribute_id)</entry>\n-\n-  <entry key=\"CPlainAttr_owner_Index\">CREATE INDEX CPlainAttr_owner_Index on CPlainAttr(owner_id)</entry>\n-  <entry key=\"CPlainAttr_schema_Index\">CREATE INDEX CPlainAttr_schema_Index on CPlainAttr(schema_id)</entry>\n-\n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n </properties>"},{"sha":"2393a4e2b6030ba8977baad16fa0eba2001e096a","filename":"docker/core/src/main/resources/persistence.properties.all","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -23,5 +23,4 @@ any.search.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO\n user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAConfDAO\n openjpa.RemoteCommitProvider=${OPENJPA_REMOTE_COMMIT}"},{"sha":"d5a51280ef611bce2221fe208e72eb087cf15033","filename":"docker/core/src/main/resources/persistence.properties.pgjsonb","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -23,5 +23,4 @@ any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n openjpa.RemoteCommitProvider=${OPENJPA_REMOTE_COMMIT}"},{"sha":"194c7584262b6d93db5ae428e6e55eca313e98b9","filename":"ext/elasticsearch/persistence-jpa/src/main/resources/persistence.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -23,5 +23,4 @@ any.search.dao=org.apache.syncope.core.persistence.jpa.dao.ElasticsearchAnySearc\n user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAConfDAO\n openjpa.RemoteCommitProvider=sjvm"},{"sha":"10d8b09ce9d3829043d893026b01c3a427ee8a15","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/GenerateToken.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.core.flowable.task;\n \n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n@@ -29,15 +30,15 @@\n public class GenerateToken extends FlowableServiceTask {\n \n     @Autowired\n-    private ConfDAO confDAO;\n+    private ConfParamOps confParamOps;\n \n     @Override\n     protected void doExecute(final DelegateExecution execution) {\n         User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n \n         user.generateToken(\n-                confDAO.find(\"token.length\", 256L).intValue(),\n-                confDAO.find(\"token.expireTime\", 60L).intValue());\n+                confParamOps.get(AuthContextUtils.getDomain(), \"token.length\", 256, Integer.class),\n+                confParamOps.get(AuthContextUtils.getDomain(), \"token.expireTime\", 60, Integer.class));\n \n         execution.setVariable(FlowableRuntimeUtils.USER, user);\n     }"},{"sha":"3a65e41d26c33e14c83646c07d8329601c4bfa04","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -310,7 +310,7 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n                 LOG.debug(\"No user matching {}, about to create\", keyValue);\n \n                 final String emailValue = userInfo.getEmail();\n-                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n                         () -> userManager.create(op, responseTO, emailValue));\n             } else if (op.isSelfRegUnmatching()) {\n                 UserTO userTO = new UserTO();\n@@ -338,7 +338,7 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n             if (op.isUpdateMatching()) {\n                 LOG.debug(\"About to update {} for {}\", matchingUsers.get(0), keyValue);\n \n-                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n                         () -> userManager.update(matchingUsers.get(0), op, responseTO));\n             } else {\n                 username = matchingUsers.get(0);"},{"sha":"37a398965abc92fd5e6b6d09fcce88af791630e6","filename":"ext/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -84,6 +84,7 @@ under the License.\n     <module>elasticsearch</module>\n     <module>scimv2</module>\n     <module>oidcclient</module>\n+    <module>self-keymaster</module>\n   </modules>\n \n </project>"},{"sha":"effa0d330218d8d1562d6c6916b2abbe8963af03","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -495,7 +495,7 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n             if (idp.isCreateUnmatching()) {\n                 LOG.debug(\"No user matching {}, about to create\", keyValue);\n \n-                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(),\n                         () -> userManager.create(idp, responseTO, nameID.getValue()));\n             } else if (idp.isSelfRegUnmatching()) {\n                 responseTO.setNameID(nameID.getValue());\n@@ -522,7 +522,7 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n             if (idp.isUpdateMatching()) {\n                 LOG.debug(\"About to update {} for {}\", matchingUsers.get(0), keyValue);\n \n-                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(), ()\n+                username = AuthContextUtils.callAsAdmin(AuthContextUtils.getDomain(), ()\n                         -> userManager.update(matchingUsers.get(0), idp, responseTO));\n             } else {\n                 username = matchingUsers.get(0);"},{"sha":"cbbf37c469566d43a7911063ad342fcfafcf9fbc","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -142,7 +142,7 @@ public void load() {\n \n     @Override\n     public void load(final String domain, final DataSource datasource) {\n-        AuthContextUtils.execWithAuthContext(domain, () -> {\n+        AuthContextUtils.callAsAdmin(domain, () -> {\n             idpDAO.findAll().forEach(idp -> {\n                 try {\n                     cache.put(idp);"},{"sha":"e0194a2f332c88dd0468c143d7b82e075a1d88ca","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/scim/SCIMConfManager.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -21,17 +21,17 @@\n import java.util.Base64;\n import java.util.Date;\n import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n import org.apache.syncope.common.lib.scim.SCIMGeneralConf;\n import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.core.logic.ConfigurationLogic;\n import org.apache.syncope.core.logic.SchemaLogic;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -44,25 +44,18 @@ public class SCIMConfManager {\n     protected static final Logger LOG = LoggerFactory.getLogger(SCIMConfManager.class);\n \n     @Autowired\n-    private ConfigurationLogic configurationLogic;\n+    private ConfParamOps confParamOps;\n \n     @Autowired\n     private SchemaLogic schemaLogic;\n \n     @PreAuthorize(\"hasRole('\" + SCIMEntitlement.SCIM_CONF_GET + \"')\")\n     public SCIMConf get() {\n-        Attr confTO = null;\n-        try {\n-            confTO = configurationLogic.get(SCIMConf.KEY);\n-        } catch (Exception e) {\n-            LOG.error(\"{} not found, reverting to default\", SCIMConf.KEY);\n-        }\n-\n         SCIMConf conf = null;\n-        if (confTO != null) {\n+        String confString = confParamOps.get(AuthContextUtils.getDomain(), SCIMConf.KEY, null, String.class);\n+        if (confString != null) {\n             try {\n-                conf = POJOHelper.deserialize(\n-                        new String(Base64.getDecoder().decode(confTO.getValues().get(0))), SCIMConf.class);\n+                conf = POJOHelper.deserialize(new String(Base64.getDecoder().decode(confString)), SCIMConf.class);\n             } catch (Exception e) {\n                 LOG.error(\"Could not deserialize, reverting to default\", e);\n             }\n@@ -89,8 +82,7 @@ public void set(final SCIMConf conf) {\n         conf.setGeneralConf(new SCIMGeneralConf());\n         conf.getGeneralConf().setLastChangeDate(new Date());\n \n-        configurationLogic.set(new Attr.Builder(SCIMConf.KEY).\n-                value(Base64.getEncoder().encodeToString(POJOHelper.serialize(conf).getBytes())).\n-                build());\n+        confParamOps.set(AuthContextUtils.getDomain(),\n+                SCIMConf.KEY, Base64.getEncoder().encodeToString(POJOHelper.serialize(conf).getBytes()));\n     }\n }"},{"sha":"5eb0b37668bbc3f78c02b7684b5584c23d2ec043","filename":"ext/self-keymaster/client/pom.xml","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fclient%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster Client</name>\n+  <description>Apache Syncope Ext: Self Keymaster Client</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-rest-api</artifactId>\n+      <version>${project.version}</version>  \n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-client</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-features-logging</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-json-provider</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.module</groupId>\n+      <artifactId>jackson-module-afterburner</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-autoconfigure</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"fbb9208006cb3efdd325fb0eaab898d4814d1e68","filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterClientContext.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.self;\n+\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import java.util.Arrays;\n+import org.apache.cxf.ext.logging.LoggingFeature;\n+import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+\n+@PropertySource(\"classpath:keymaster.properties\")\n+@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n+@Configuration\n+public class SelfKeymasterClientContext {\n+\n+    @Value(\"${keymaster.address}\")\n+    private String address;\n+\n+    @Value(\"${keymaster.username}\")\n+    private String username;\n+\n+    @Value(\"${keymaster.password}\")\n+    private String password;\n+\n+    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^http.+'}\")\n+    @Bean\n+    public ConfParamOps selfConfParamOps() {\n+        JAXRSClientFactoryBean restClientFactoryBean = new JAXRSClientFactoryBean();\n+        restClientFactoryBean.setAddress(address);\n+        restClientFactoryBean.setUsername(username);\n+        restClientFactoryBean.setPassword(password);\n+        restClientFactoryBean.setThreadSafe(true);\n+        restClientFactoryBean.setInheritHeaders(true);\n+        restClientFactoryBean.setFeatures(Arrays.asList(new LoggingFeature()));\n+        restClientFactoryBean.setProviders(Arrays.asList(new JacksonJsonProvider()));\n+\n+        return new SelfKeymasterConfParamOps(restClientFactoryBean);\n+    }\n+}"},{"sha":"ecf3ac677449249f86f8d58c91b0da546a0b3614","filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterConfParamOps.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.self;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Map;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.Client;\n+import org.apache.cxf.jaxrs.client.ClientConfiguration;\n+import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.ext.self.keymaster.api.service.ConfParamService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SelfKeymasterConfParamOps implements ConfParamOps {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConfParamOps.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private final JAXRSClientFactoryBean clientFactory;\n+\n+    public SelfKeymasterConfParamOps(final JAXRSClientFactoryBean clientFactory) {\n+        this.clientFactory = clientFactory;\n+    }\n+\n+    private ConfParamService client(final String domain) {\n+        ConfParamService service;\n+        synchronized (clientFactory) {\n+            clientFactory.setServiceClass(ConfParamService.class);\n+            clientFactory.setHeaders(Map.of(RESTHeaders.DOMAIN, domain));\n+            service = clientFactory.create(ConfParamService.class);\n+        }\n+\n+        Client client = WebClient.client(service);\n+        client.type(MediaType.APPLICATION_JSON).accept(MediaType.APPLICATION_JSON);\n+\n+        ClientConfiguration config = WebClient.getConfig(client);\n+        config.getInInterceptors().add(new GZIPInInterceptor());\n+        config.getOutInterceptors().add(new GZIPOutInterceptor());\n+\n+        return service;\n+    }\n+\n+    @Override\n+    public Map<String, Object> list(final String domain) {\n+        return client(domain).list();\n+    }\n+\n+    @Override\n+    public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n+        Response response = client(domain).get(key);\n+        if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+            return defaultValue;\n+        }\n+        try {\n+            return MAPPER.readValue(response.readEntity(InputStream.class), reference);\n+        } catch (IOException e) {\n+            LOG.error(\"Could not deserialize response\", e);\n+            return defaultValue;\n+        }\n+    }\n+\n+    @Override\n+    public <T> void set(final String domain, final String key, final T value) {\n+        if (value == null) {\n+            remove(domain, key);\n+        } else {\n+            try {\n+                ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+                MAPPER.writeValue(baos, value);\n+\n+                client(domain).set(key, new ByteArrayInputStream(baos.toByteArray()));\n+            } catch (IOException e) {\n+                throw new IllegalArgumentException(\"Could not serialize \" + value, e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void remove(final String domain, final String key) {\n+        client(domain).remove(key);\n+    }\n+}"},{"sha":"188b0c78d645b3c58834d67e3b600b57759d6fc5","filename":"ext/self-keymaster/client/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext"},{"sha":"e6047901c6847c748451dca7bc23844840931068","filename":"ext/self-keymaster/client/src/main/resources/keymaster.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fclient%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Key\n-content=Contenuto\n-values=Valori\n+keymaster.address=http://localhost:8080/syncope/keymaster\n+keymaster.username=${anonymousUser}\n+keymaster.password=${anonymousKey}","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel_it.properties"},{"sha":"7bb37ef8402656fa4dd0c58e172c44aab8d993e5","filename":"ext/self-keymaster/logic/pom.xml","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Flogic%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,65 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster Logic</name>\n+  <description>Apache Syncope Ext: Self Keymaster Logic</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-logic</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core.idrepo</groupId>\n+      <artifactId>syncope-core-idrepo-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-persistence-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>    \n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <configuration>\n+          <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"6014926fef1242b18dd1df193bfab6b61cc61763","filename":"ext/self-keymaster/logic/src/main/java/org/apache/syncope/core/logic/ConfParamLogic.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.core.persistence.api.dao.ConfParamDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.entity.ConfParam;\n+import org.apache.syncope.core.persistence.api.entity.SelfKeymasterEntityFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Component\n+public class ConfParamLogic extends AbstractTransactionalLogic<EntityTO> {\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Autowired\n+    private ConfParamDAO confParamDAO;\n+\n+    @Autowired\n+    private SelfKeymasterEntityFactory entityFactory;\n+\n+    @PreAuthorize(\"@environment.getProperty('keymaster.username') == authentication.name\")\n+    @Transactional(readOnly = true)\n+    public Map<String, Object> list() {\n+        Map<String, Object> params = new TreeMap<>();\n+        confParamDAO.findAll().forEach(param -> {\n+            try {\n+                params.put(param.getKey(), MAPPER.treeToValue(param.getValue(), Object.class));\n+            } catch (JsonProcessingException e) {\n+                LOG.error(\"While processing {}'s value\", param.getKey(), e);\n+            }\n+        });\n+        return params;\n+    }\n+\n+    @PreAuthorize(\"@environment.getProperty('keymaster.username') == authentication.name\")\n+    @Transactional(readOnly = true)\n+    public JsonNode get(final String key) {\n+        ConfParam param = confParamDAO.find(key);\n+\n+        return param == null\n+                ? null\n+                : param.getValue();\n+    }\n+\n+    @PreAuthorize(\"@environment.getProperty('keymaster.username') == authentication.name\")\n+    public void set(final String key, final JsonNode value) {\n+        ConfParam param = confParamDAO.find(key);\n+        if (param == null) {\n+            param = entityFactory.newConfParam();\n+            param.setKey(key);\n+        }\n+\n+        if (value == null) {\n+            throw new NotFoundException(\"No value provided for \" + key);\n+        }\n+\n+        param.setValue(value);\n+        confParamDAO.save(param);\n+    }\n+\n+    @PreAuthorize(\"@environment.getProperty('keymaster.username') == authentication.name\")\n+    public void remove(final String key) {\n+        confParamDAO.delete(key);\n+    }\n+\n+    @Override\n+    protected EntityTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n+        throw new UnsupportedOperationException();\n+    }\n+}"},{"sha":"5970c3cb0bb5d75306a55e9902f26eced2e6adb5","filename":"ext/self-keymaster/persistence-api/pom.xml","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-api%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster Persistence API</name>\n+  <description>Apache Syncope Ext: Self Keymaster Persistence API</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-persistence-api</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-persistence-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-databind</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"cc1eb8508df7b7c42dd3e9e6102db05a47a1a22c","filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConfParamDAO.java","status":"renamed","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -16,17 +16,18 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.conf;\n+package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.ConfParam;\n \n-public interface CPlainAttr extends PlainAttr<Conf> {\n+public interface ConfParamDAO extends DAO<ConfParam> {\n \n-    @Override\n-    List<? extends CPlainAttrValue> getValues();\n+    List<ConfParam> findAll();\n \n-    @Override\n-    CPlainAttrUniqueValue getUniqueValue();\n+    ConfParam find(String key);\n \n+    ConfParam save(ConfParam confParam);\n+\n+    void delete(String key);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/conf/CPlainAttr.java"},{"sha":"791d40b5b7815f9b044e2b1fa75d6dc91a756a78","filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ConfParam.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -16,13 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.conf;\n+package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import com.fasterxml.jackson.databind.JsonNode;\n \n-public interface CPlainAttrValue extends PlainAttrValue {\n+public interface ConfParam extends ProvidedKeyEntity {\n \n-    @Override\n-    CPlainAttr getAttr();\n+    JsonNode getValue();\n \n+    void setValue(JsonNode value);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/conf/CPlainAttrValue.java"},{"sha":"e481651ed988b355a231f57c702635f7bfe744b8","filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SelfKeymasterEntityFactory.java","status":"renamed","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -16,13 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.conf;\n+package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n-\n-public interface CPlainAttrUniqueValue extends PlainAttrUniqueValue {\n-\n-    @Override\n-    CPlainAttr getAttr();\n+public interface SelfKeymasterEntityFactory {\n \n+    ConfParam newConfParam();\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/conf/CPlainAttrUniqueValue.java"},{"sha":"6d56d00bc151fee8998650632dca34b333afdd60","filename":"ext/self-keymaster/persistence-jpa/pom.xml","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-jpa%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,134 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster Persistence JPA</name>\n+  <description>Apache Syncope Ext: Self Keymaster Persistence JPA</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>    \n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-persistence-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-maven-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <dependencies>\n+          <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <version>${h2.version}</version>\n+          </dependency>\n+        </dependencies>\n+        <configuration>\n+          <persistenceXmlFile>${rootpom.basedir}/core/persistence-jpa/src/main/resources/persistence-enhance.xml</persistenceXmlFile> \n+          <includes>org/apache/syncope/core/persistence/jpa/entity/**/*.class</includes>\n+          <connectionDriverName>org.springframework.jdbc.datasource.DriverManagerDataSource</connectionDriverName>\n+          <connectionProperties>\n+            driverClassName=org.h2.Driver,\n+            url=jdbc:h2:mem:syncopedb\n+            username=sa,\n+            password=\n+          </connectionProperties>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>enhancer</id>\n+            <phase>process-classes</phase>\n+            <goals>\n+              <goal>enhance</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+\n+    <testResources>\n+      <testResource>\n+        <directory>${rootpom.basedir}/core/persistence-jpa/src/main/resources</directory>\n+        <filtering>true</filtering>        \n+      </testResource>\n+    </testResources>\n+  </build>\n+\n+  <profiles>\n+    <profile>\n+      <id>sqlgen</id>\n+      \n+      <properties>\n+        <skipTests>true</skipTests>\n+      </properties>\n+      \n+      <build>\n+        <defaultGoal>clean verify</defaultGoal>\n+        \n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-maven-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <executions>\n+              <execution>\n+                <id>sqlgen</id>\n+                <phase>process-classes</phase>\n+                <goals>\n+                  <goal>sql</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>          \n+        </plugins>\n+      </build>\n+        \n+    </profile>\n+  </profiles>\n+\n+</project>"},{"sha":"24f14c6e5f19664527ef9761a6c9b418a2bab9ce","filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfParamDAO.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.dao;\n+\n+import java.util.List;\n+import javax.persistence.TypedQuery;\n+import org.apache.syncope.core.persistence.api.dao.ConfParamDAO;\n+import org.apache.syncope.core.persistence.api.entity.ConfParam;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAConfParam;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Repository\n+public class JPAConfParamDAO extends AbstractDAO<ConfParam> implements ConfParamDAO {\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public List<ConfParam> findAll() {\n+        TypedQuery<ConfParam> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPAConfParam.class.getSimpleName() + \" e ORDER BY e.id ASC\", ConfParam.class);\n+        return query.getResultList();\n+    }\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public ConfParam find(final String key) {\n+        return entityManager().find(JPAConfParam.class, key);\n+    }\n+\n+    @Override\n+    public ConfParam save(final ConfParam confParam) {\n+        return entityManager().merge(confParam);\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        ConfParam param = find(key);\n+        if (param != null) {\n+            entityManager().remove(param);\n+        }\n+    }\n+}"},{"sha":"a5eda65d743b2c90c2a77179e695d66b130ee68d","filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConfParam.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import javax.persistence.Entity;\n+import javax.persistence.Lob;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.ConfParam;\n+\n+@Entity\n+@Table(name = JPAConfParam.TABLE)\n+public class JPAConfParam extends AbstractProvidedKeyEntity implements ConfParam {\n+\n+    private static final long serialVersionUID = 8742750097008236475L;\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    public static final String TABLE = \"ConfParam\";\n+\n+    @Lob\n+    private String jsonValue;\n+\n+    @Override\n+    public JsonNode getValue() {\n+        JsonNode deserialized = null;\n+        try {\n+            deserialized = MAPPER.readTree(jsonValue);\n+        } catch (final IOException e) {\n+            LOG.error(\"Could not deserialize {}\", jsonValue, e);\n+        }\n+        return deserialized;\n+    }\n+\n+    @Override\n+    public void setValue(final JsonNode value) {\n+        try {\n+            this.jsonValue = MAPPER.writeValueAsString(value);\n+        } catch (JsonProcessingException e) {\n+            LOG.error(\"Could not serialize {}\", value, e);\n+        }\n+    }\n+}"},{"sha":"4e2d2167af24a47fe8ffd1917dd8c4d9fa66135d","filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASelfKeymasterEntityFactory.java","status":"renamed","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -16,18 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.conf;\n+package org.apache.syncope.core.persistence.jpa.entity;\n \n-import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.persistence.api.entity.ProvidedKeyEntity;\n+import org.apache.syncope.core.persistence.api.entity.ConfParam;\n+import org.apache.syncope.core.persistence.api.entity.SelfKeymasterEntityFactory;\n+import org.springframework.stereotype.Component;\n \n-public interface Conf extends Any<CPlainAttr>, ProvidedKeyEntity {\n+@Component\n+public class JPASelfKeymasterEntityFactory implements SelfKeymasterEntityFactory {\n \n     @Override\n-    boolean add(CPlainAttr attr);\n-\n-    @Override\n-    List<? extends CPlainAttr> getPlainAttrs();\n-\n+    public ConfParam newConfParam() {\n+        return new JPAConfParam();\n+    }\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/conf/Conf.java"},{"sha":"c38f66689d544c14948c2117dfca0eddce2fbeb5","filename":"ext/self-keymaster/pom.xml","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-ext</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster</name>\n+  <description>Apache Syncope Ext: Self Keymaster</description>\n+  <groupId>org.apache.syncope.ext</groupId>\n+  <artifactId>syncope-ext-self-keymaster</artifactId>\n+  <packaging>pom</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n+  <modules>\n+    <module>rest-api</module>\n+    <module>rest-cxf</module>\n+    <module>logic</module>\n+    <module>persistence-api</module>\n+    <module>persistence-jpa</module>\n+    <module>client</module>\n+  </modules>\n+\n+</project>"},{"sha":"bf801601c347ad7120df80917f4e55b58d59cde9","filename":"ext/self-keymaster/rest-api/pom.xml","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-api%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster REST API</name>\n+  <description>Apache Syncope Ext: Self Keymaster REST API</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-rest-api</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.idrepo</groupId>\n+      <artifactId>syncope-common-idrepo-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"5d7f9a1191b36252171bdd52fbed431a737ff355","filename":"ext/self-keymaster/rest-api/src/main/java/org/apache/syncope/ext/self/keymaster/api/service/ConfParamService.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fapi%2Fservice%2FConfParamService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fapi%2Fservice%2FConfParamService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fapi%2Fservice%2FConfParamService.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.api.service;\n+\n+import java.io.InputStream;\n+import java.io.Serializable;\n+import java.util.Map;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * REST operations for Self Keymaster's conf params.\n+ */\n+@Path(\"conf\")\n+public interface ConfParamService extends Serializable {\n+\n+    @GET\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    Map<String, Object> list();\n+\n+    @GET\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    Response get(@NotNull @PathParam(\"key\") String key);\n+\n+    @POST\n+    @Path(\"{key}\")\n+    @Consumes({ MediaType.APPLICATION_JSON })\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    Response set(@NotNull @PathParam(\"key\") String key, InputStream value);\n+\n+    @DELETE\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    Response remove(@NotNull @PathParam(\"key\") String key);\n+}"},{"sha":"55cbcb14b1e37f14cca9ba54e04846d82ed43d1a","filename":"ext/self-keymaster/rest-cxf/pom.xml","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,96 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: Self Keymaster REST CXF</name>\n+  <description>Apache Syncope Ext: Self Keymaster REST CXF</description>\n+  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+  <artifactId>syncope-ext-self-keymaster-rest-cxf</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-service-description</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-client</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-json-provider</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.module</groupId>\n+      <artifactId>jackson-module-afterburner</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"6071bd6a22a4b8a6eb7c6d9049453827802d39ee","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/SelfKeymasterContext.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.cxf;\n+\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import javax.annotation.Resource;\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.endpoint.Server;\n+import org.apache.cxf.jaxrs.model.wadl.WadlGenerator;\n+import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor;\n+import org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n+import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.ext.self.keymaster.cxf.client.SelfKeymasterInternalConfParamOps;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+\n+@PropertySource(\"classpath:keymaster.properties\")\n+@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n+@ComponentScan(\"org.apache.syncope.ext.self.keymaster.cxf.service\")\n+@Configuration\n+@ConditionalOnExpression(\"'${keymaster.address}' matches '^http.+'\")\n+public class SelfKeymasterContext {\n+\n+    @Autowired\n+    private Bus bus;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n+    @Resource(name = \"version\")\n+    private String version;\n+\n+    @Bean\n+    public JacksonJsonProvider selfKeymasterJacksonJsonProvider() {\n+        return new JacksonJsonProvider();\n+    }\n+\n+    @Bean\n+    public SelfKeymasterExceptionMapper selfKeymasterExceptionMapper() {\n+        return new SelfKeymasterExceptionMapper();\n+    }\n+\n+    @Bean\n+    public WadlGenerator selfKeymasterWADLGenerator() {\n+        WadlGenerator wadlGenerator = new WadlGenerator();\n+        wadlGenerator.setApplicationTitle(\"Apache Syncope Self Keymaster \" + version);\n+        wadlGenerator.setNamespacePrefix(\"syncope30\");\n+        wadlGenerator.setIncrementNamespacePrefix(false);\n+        wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n+        wadlGenerator.setUseJaxbContextForQnames(true);\n+        wadlGenerator.setAddResourceAndMethodIds(true);\n+        wadlGenerator.setIgnoreMessageWriters(true);\n+        wadlGenerator.setUsePathParamsToCompareOperations(false);\n+        return wadlGenerator;\n+    }\n+\n+    @Bean\n+    public Server selfKeymasterContainer() {\n+        SpringJAXRSServerFactoryBean selfKeymasterContainer = new SpringJAXRSServerFactoryBean();\n+        selfKeymasterContainer.setBus(bus);\n+        selfKeymasterContainer.setAddress(\"/keymaster\");\n+        selfKeymasterContainer.setStaticSubresourceResolution(true);\n+        selfKeymasterContainer.setBasePackages(Arrays.asList(\n+                \"org.apache.syncope.ext.self.keymaster.api.service\",\n+                \"org.apache.syncope.ext.self.keymaster.cxf.service\"));\n+        selfKeymasterContainer.setProperties(Collections.singletonMap(\"convert.wadl.resources.to.dom\", \"false\"));\n+\n+        selfKeymasterContainer.setInInterceptors(Arrays.asList(\n+                ctx.getBean(GZIPInInterceptor.class),\n+                ctx.getBean(JAXRSBeanValidationInInterceptor.class)));\n+\n+        selfKeymasterContainer.setOutInterceptors(Arrays.asList(\n+                ctx.getBean(GZIPOutInterceptor.class),\n+                ctx.getBean(JAXRSBeanValidationOutInterceptor.class)));\n+\n+        selfKeymasterContainer.setProviders(Arrays.asList(\n+                selfKeymasterJacksonJsonProvider(),\n+                selfKeymasterExceptionMapper(),\n+                selfKeymasterWADLGenerator()));\n+\n+        selfKeymasterContainer.setApplicationContext(ctx);\n+        return selfKeymasterContainer.create();\n+    }\n+\n+    @Bean\n+    public ConfParamOps internalConfParamOps() {\n+        return new SelfKeymasterInternalConfParamOps();\n+    }\n+}"},{"sha":"038f49c8be47c651c5871a10b9684ef77fbc6649","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/SelfKeymasterExceptionMapper.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterExceptionMapper.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.cxf;\n+\n+import javax.validation.ValidationException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.ResponseBuilder;\n+import javax.ws.rs.ext.ExceptionMapper;\n+import javax.ws.rs.ext.Provider;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.security.access.AccessDeniedException;\n+\n+@Provider\n+public class SelfKeymasterExceptionMapper implements ExceptionMapper<Exception> {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SelfKeymasterExceptionMapper.class);\n+\n+    @Override\n+    public Response toResponse(final Exception ex) {\n+        LOG.error(\"Exception thrown\", ex);\n+\n+        ResponseBuilder builder = null;\n+\n+        if (ex instanceof AccessDeniedException\n+                || ex instanceof ForbiddenException\n+                || ex instanceof NotAuthorizedException) {\n+\n+            // leaves the default exception processing\n+            builder = null;\n+        } else if (ex instanceof NotFoundException) {\n+            builder = Response.status(Response.Status.NOT_FOUND).\n+                    entity(ExceptionUtils.getRootCauseMessage(ex));\n+        } else if (ex instanceof SyncopeClientException) {\n+            SyncopeClientException sce = (SyncopeClientException) ex;\n+            builder = builder(sce.getType(), ExceptionUtils.getRootCauseMessage(ex));\n+        } else {\n+            // process JAX-RS validation errors\n+            if (ex instanceof ValidationException) {\n+                builder = builder(ClientExceptionType.RESTValidation, ExceptionUtils.getRootCauseMessage(ex));\n+            }\n+            // ...or just report as InternalServerError\n+            if (builder == null) {\n+                builder = Response.status(Response.Status.INTERNAL_SERVER_ERROR).\n+                        entity(ExceptionUtils.getRootCauseMessage(ex));\n+            }\n+        }\n+\n+        return builder == null ? null : builder.build();\n+    }\n+\n+    private ResponseBuilder builder(final ClientExceptionType type, final String msg) {\n+        ResponseBuilder builder = Response.status(type.getResponseStatus());\n+\n+        return builder.entity(msg);\n+    }\n+}"},{"sha":"f4e41f5b32b24d98fc56ce0cbef177b6de9c977a","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/client/SelfKeymasterInternalConfParamOps.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fclient%2FSelfKeymasterInternalConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fclient%2FSelfKeymasterInternalConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fclient%2FSelfKeymasterInternalConfParamOps.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.cxf.client;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.core.logic.ConfParamLogic;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+\n+public class SelfKeymasterInternalConfParamOps implements ConfParamOps {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConfParamOps.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Autowired\n+    private ConfParamLogic logic;\n+\n+    @Value(\"${keymaster.username}\")\n+    private String keymasterUser;\n+\n+    @Override\n+    public Map<String, Object> list(final String domain) {\n+        return AuthContextUtils.callAs(\n+                domain,\n+                keymasterUser,\n+                Collections.emptyList(),\n+                () -> logic.list());\n+    }\n+\n+    @Override\n+    public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n+\n+        JsonNode valueNode = AuthContextUtils.callAs(\n+                domain,\n+                keymasterUser,\n+                Collections.emptyList(),\n+                () -> logic.get(key));\n+        if (valueNode == null) {\n+            return defaultValue;\n+        }\n+\n+        try {\n+            return MAPPER.treeToValue(valueNode, reference);\n+        } catch (IOException e) {\n+            LOG.error(\"Could not deserialize {}\", valueNode, e);\n+            return defaultValue;\n+        }\n+    }\n+\n+    @Override\n+    public <T> void set(final String domain, final String key, final T value) {\n+        if (value == null) {\n+            remove(domain, key);\n+        } else {\n+            JsonNode valueNode = MAPPER.valueToTree(value);\n+\n+            AuthContextUtils.callAs(domain, keymasterUser, Collections.emptyList(), () -> {\n+                logic.set(key, valueNode);\n+                return null;\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void remove(final String domain, final String key) {\n+        AuthContextUtils.callAs(domain, keymasterUser, Collections.emptyList(), () -> {\n+            logic.remove(key);\n+            return null;\n+        });\n+    }\n+}"},{"sha":"82952915d64a88953e73e625b7bc5db8af862223","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/service/ConfParamServiceImpl.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fservice%2FConfParamServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fservice%2FConfParamServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fservice%2FConfParamServiceImpl.java?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.cxf.service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Map;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.core.logic.ConfParamLogic;\n+import org.apache.syncope.ext.self.keymaster.api.service.ConfParamService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class ConfParamServiceImpl implements ConfParamService {\n+\n+    private static final long serialVersionUID = 3954522705963997651L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConfParamService.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Autowired\n+    private ConfParamLogic logic;\n+\n+    @Override\n+    public Map<String, Object> list() {\n+        return logic.list();\n+    }\n+\n+    @Override\n+    public Response get(final String key) {\n+        return Response.ok(logic.get(key)).build();\n+    }\n+\n+    @Override\n+    public Response set(final String key, final InputStream value) {\n+        JsonNode valueNode = null;\n+        try {\n+            valueNode = MAPPER.readTree(value);\n+        } catch (IOException e) {\n+            LOG.error(\"Could not deserialize body as valid JSON\", e);\n+        }\n+\n+        logic.set(key, valueNode);\n+        return Response.noContent().build();\n+    }\n+\n+    @Override\n+    public Response remove(final String key) {\n+        logic.remove(key);\n+        return Response.noContent().build();\n+    }\n+}"},{"sha":"5f98d3e5c9ae8fe8fff3c813fce2cf52de50ca69","filename":"ext/self-keymaster/rest-cxf/src/main/resources/META-INF/spring.factories","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Key\n-content=Conte\\u00fado\n-values=Valores\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.self.keymaster.cxf.SelfKeymasterContext","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel_pt_BR.properties"},{"sha":"398cc60efa3b57618201c2777c0a4d86ef6c7efb","filename":"fit/console-reference/pom.xml","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -44,6 +44,17 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n       <artifactId>syncope-ext-flowable-client-console</artifactId>\n@@ -211,7 +222,7 @@ under the License.\n                   <cargo.jvmargs>\n                     -Dspring.profiles.active=embedded\n                     -Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC-Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n@@ -240,7 +251,6 @@ under the License.\n         <dependency>\n           <groupId>cglib</groupId>\n           <artifactId>cglib-nodep</artifactId>\n-          <version>3.2.6</version>\n         </dependency>\n       </dependencies>\n "},{"sha":"033fe3b8cdc122c28c9d2c96c62b4aaeab664fc4","filename":"fit/console-reference/src/main/resources/keymaster.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=\\u30ad\\u30fc\n-content=\\u5185\\u5bb9\n-values=\\u5024\n+keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.username=${anonymousUser}\n+keymaster.password=${anonymousKey}","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDetailsPanel_ja.properties"},{"sha":"0750199eae8a21cb8cf44c3590c2a1090c1de73f","filename":"fit/console-reference/src/main/resources/log4j2.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c2967d7691f5d9dbdf08f984d95c3de04c21879/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=1c2967d7691f5d9dbdf08f984d95c3de04c21879","patch":"@@ -41,6 +41,10 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n+    <asyncLogger name=\"org.apache.syncope.common.keymaster\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n     <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"INFO\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>"}]}