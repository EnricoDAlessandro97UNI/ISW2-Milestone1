{"sha":"e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUzYWM4OTk5ZDJmZmU2ZmM4N2I0NTU4NDUzYTU5ZDc5N2E4YzYxYzA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-13T15:23:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-13T15:32:21Z"},"message":"[SYNCOPE-1234] Pre-processing method added","tree":{"sha":"81d990d90c1a6f21b8ff36ccca5f6571414935de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/81d990d90c1a6f21b8ff36ccca5f6571414935de"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e7f03f43dbe72d036a6df1da56dc0db26045dcae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e7f03f43dbe72d036a6df1da56dc0db26045dcae","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e7f03f43dbe72d036a6df1da56dc0db26045dcae"}],"stats":{"total":327,"additions":146,"deletions":181},"files":[{"sha":"893e7a97f89cc549819c6ccf5be343f8e82f6066","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullActions.groovy","status":"modified","additions":13,"deletions":16,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -32,76 +32,73 @@ import org.quartz.JobExecutionException\n class MyPullActions implements PullActions {\n   \n   @Override\n-  SyncDelta beforeProvision(\n+  SyncDelta preprocess(SyncDelta delta) {\n+    return delta;\n+  }\n+  \n+  @Override\n+  void beforeProvision(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeAssign(\n+  void beforeAssign(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeUnassign(\n+  void beforeUnassign(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeDeprovision(\n+  void beforeDeprovision(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeUnlink(\n+  void beforeUnlink(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeLink(\n+  void beforeLink(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  <P extends AnyPatch> SyncDelta beforeUpdate(\n+  <P extends AnyPatch> void beforeUpdate(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity,\n     P anyPatch) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override\n-  SyncDelta beforeDelete(\n+  void beforeDelete(\n     ProvisioningProfile profile,\n     SyncDelta delta,\n     EntityTO entity) throws JobExecutionException {\n \n-    return delta;\n   }\n \n   @Override"},{"sha":"00cf2e9294acd73a95e287854fb158c9a720d861","filename":"core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -61,7 +61,7 @@ public class MigrationPullActions extends SchedulingPullActions {\n     private final Map<String, Set<String>> memberships = new HashMap<>();\n \n     @Override\n-    public SyncDelta beforeProvision(\n+    public void beforeProvision(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entity) throws JobExecutionException {\n@@ -74,8 +74,6 @@ public SyncDelta beforeProvision(\n             ((AnyTO) entity).getResources().addAll(\n                     resourcesAttr.getValue().stream().map(Object::toString).collect(Collectors.toList()));\n         }\n-\n-        return delta;\n     }\n \n     @Transactional"},{"sha":"bcf20c3727fa87b7e9199c6e1aff6456c4973af4","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullActions.java","status":"modified","additions":18,"deletions":32,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -30,6 +30,16 @@\n  */\n public interface PullActions extends ProvisioningActions {\n \n+    /**\n+     * Pre-process the pull information received by the underlying connector, before any internal activity occurs.\n+     *\n+     * @param delta retrieved pull information\n+     * @return pull information, possibly altered.\n+     */\n+    default SyncDelta preprocess(final SyncDelta delta) {\n+        return delta;\n+    }\n+\n     /**\n      * Action to be executed before to create a pulled entity locally.\n      * The entity is created locally upon pull in case of the un-matching rule\n@@ -38,15 +48,12 @@ public interface PullActions extends ProvisioningActions {\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeProvision(\n+    default void beforeProvision(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -57,15 +64,12 @@ default SyncDelta beforeProvision(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeAssign(\n+    default void beforeAssign(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -76,15 +80,12 @@ default SyncDelta beforeAssign(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeUnassign(\n+    default void beforeUnassign(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -95,15 +96,12 @@ default SyncDelta beforeUnassign(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeDeprovision(\n+    default void beforeDeprovision(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -114,15 +112,12 @@ default SyncDelta beforeDeprovision(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeUnlink(\n+    default void beforeUnlink(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -133,15 +128,12 @@ default SyncDelta beforeUnlink(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeLink(\n+    default void beforeLink(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -154,16 +146,13 @@ default SyncDelta beforeLink(\n      * @param delta retrieved pull information\n      * @param entity entity\n      * @param anyPatch modification\n-     * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure.\n      */\n-    default <P extends AnyPatch> SyncDelta beforeUpdate(\n+    default <P extends AnyPatch> void beforeUpdate(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity,\n             P anyPatch) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**\n@@ -172,15 +161,12 @@ default <P extends AnyPatch> SyncDelta beforeUpdate(\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information\n      * @param entity entity\n-     * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    default SyncDelta beforeDelete(\n+    default void beforeDelete(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity) throws JobExecutionException {\n-\n-        return delta;\n     }\n \n     /**"},{"sha":"dd7e4eff1b7c7f8381f2037a20da3475e6d98459","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":41,"deletions":37,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -191,12 +191,11 @@ protected List<ProvisioningReport> assign(\n             result.setKey(null);\n             finalize(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n         } else {\n-            SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeAssign(profile, actionedDelta, anyTO);\n+                action.beforeAssign(profile, delta, anyTO);\n             }\n \n-            create(anyTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n+            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -224,12 +223,11 @@ protected List<ProvisioningReport> provision(\n             result.setKey(null);\n             finalize(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n         } else {\n-            SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeProvision(profile, actionedDelta, anyTO);\n+                action.beforeProvision(profile, delta, anyTO);\n             }\n \n-            create(anyTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n+            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -307,7 +305,6 @@ protected List<ProvisioningReport> update(\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : anyKeys) {\n             LOG.debug(\"About to update {}\", key);\n \n@@ -337,21 +334,21 @@ protected List<ProvisioningReport> update(\n                     try {\n                         AnyPatch anyPatch = connObjectUtils.getAnyPatch(\n                                 before.getKey(),\n-                                workingDelta.getObject(),\n+                                delta.getObject(),\n                                 before,\n                                 profile.getTask(),\n                                 provision,\n                                 getAnyUtils());\n \n                         for (PullActions action : profile.getActions()) {\n-                            workingDelta = action.beforeUpdate(profile, workingDelta, before, anyPatch);\n+                            action.beforeUpdate(profile, delta, before, anyPatch);\n                         }\n \n-                        effectivePatch = doUpdate(before, anyPatch, workingDelta, result);\n+                        effectivePatch = doUpdate(before, anyPatch, delta, result);\n                         AnyTO updated = AnyOperations.patch(before, effectivePatch);\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, updated, result);\n+                            action.after(profile, delta, updated, result);\n                         }\n \n                         output = updated;\n@@ -363,7 +360,7 @@ protected List<ProvisioningReport> update(\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n-                                provision.getAnyType().getKey(), workingDelta.getUid().getUidValue(), e);\n+                                provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     } catch (Exception e) {\n@@ -372,13 +369,13 @@ protected List<ProvisioningReport> update(\n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\",\n-                                provision.getAnyType().getKey(), workingDelta.getUid().getUidValue(), e);\n+                                provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n                 finalize(MatchingRule.toEventName(MatchingRule.UPDATE),\n-                        resultStatus, before, output, workingDelta, effectivePatch);\n+                        resultStatus, before, output, delta, effectivePatch);\n             }\n             results.add(result);\n         }\n@@ -615,7 +612,6 @@ protected List<ProvisioningReport> delete(\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : anyKeys) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n@@ -633,7 +629,7 @@ protected List<ProvisioningReport> delete(\n \n                 if (!profile.isDryRun()) {\n                     for (PullActions action : profile.getActions()) {\n-                        workingDelta = action.beforeDelete(profile, workingDelta, before);\n+                        action.beforeDelete(profile, delta, before);\n                     }\n \n                     try {\n@@ -642,7 +638,7 @@ protected List<ProvisioningReport> delete(\n                         resultStatus = Result.SUCCESS;\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, before, result);\n+                            action.after(profile, delta, before, result);\n                         }\n                     } catch (Exception e) {\n                         throwIgnoreProvisionException(delta, e);\n@@ -653,7 +649,7 @@ protected List<ProvisioningReport> delete(\n                         output = e;\n                     }\n \n-                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n+                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n                 }\n \n                 results.add(result);\n@@ -729,14 +725,22 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n         LOG.debug(\"Process {} for {} as {}\",\n                 delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n \n-        String uid = delta.getPreviousUid() == null\n-                ? delta.getUid().getUidValue()\n-                : delta.getPreviousUid().getUidValue();\n+        SyncDelta processed = delta;\n+        for (PullActions action : profile.getActions()) {\n+            processed = action.preprocess(processed);\n+        }\n+\n+        LOG.debug(\"Transformed {} for {} as {}\",\n+                processed.getDeltaType(), processed.getUid().getUidValue(), processed.getObject().getObjectClass());\n+\n+        String uid = processed.getPreviousUid() == null\n+                ? processed.getUid().getUidValue()\n+                : processed.getPreviousUid().getUidValue();\n \n         try {\n-            List<String> anyKeys = pullUtils.findExisting(uid, delta.getObject(), provision, anyUtils);\n+            List<String> anyKeys = pullUtils.findExisting(uid, processed.getObject(), provision, anyUtils);\n             LOG.debug(\"Match(es) found for {} as {}: {}\",\n-                    delta.getUid().getUidValue(), delta.getObject().getObjectClass(), anyKeys);\n+                    processed.getUid().getUidValue(), processed.getObject().getObjectClass(), anyKeys);\n \n             if (anyKeys.size() > 1) {\n                 switch (profile.getResAct()) {\n@@ -756,19 +760,19 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                 }\n             }\n \n-            if (SyncDeltaType.CREATE_OR_UPDATE == delta.getDeltaType()) {\n+            if (SyncDeltaType.CREATE_OR_UPDATE == processed.getDeltaType()) {\n                 if (anyKeys.isEmpty()) {\n                     switch (profile.getTask().getUnmatchingRule()) {\n                         case ASSIGN:\n-                            profile.getResults().addAll(assign(delta, provision, anyUtils));\n+                            profile.getResults().addAll(assign(processed, provision, anyUtils));\n                             break;\n \n                         case PROVISION:\n-                            profile.getResults().addAll(provision(delta, provision, anyUtils));\n+                            profile.getResults().addAll(provision(processed, provision, anyUtils));\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().addAll(ignore(delta, null, provision, false));\n+                            profile.getResults().addAll(ignore(processed, null, provision, false));\n                             break;\n \n                         default:\n@@ -777,7 +781,7 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                 } else {\n                     // update VirAttrCache\n                     for (VirSchema virSchema : virSchemaDAO.findByProvision(provision)) {\n-                        Attribute attr = delta.getObject().getAttributeByName(virSchema.getExtAttrName());\n+                        Attribute attr = processed.getObject().getAttributeByName(virSchema.getExtAttrName());\n                         for (String anyKey : anyKeys) {\n                             if (attr == null) {\n                                 virAttrCache.expire(\n@@ -798,39 +802,39 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n \n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n-                            profile.getResults().addAll(update(delta, anyKeys, provision));\n+                            profile.getResults().addAll(update(processed, anyKeys, provision));\n                             break;\n \n                         case DEPROVISION:\n-                            profile.getResults().addAll(deprovision(delta, anyKeys, provision, false));\n+                            profile.getResults().addAll(deprovision(processed, anyKeys, provision, false));\n                             break;\n \n                         case UNASSIGN:\n-                            profile.getResults().addAll(deprovision(delta, anyKeys, provision, true));\n+                            profile.getResults().addAll(deprovision(processed, anyKeys, provision, true));\n                             break;\n \n                         case LINK:\n-                            profile.getResults().addAll(link(delta, anyKeys, provision, false));\n+                            profile.getResults().addAll(link(processed, anyKeys, provision, false));\n                             break;\n \n                         case UNLINK:\n-                            profile.getResults().addAll(link(delta, anyKeys, provision, true));\n+                            profile.getResults().addAll(link(processed, anyKeys, provision, true));\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().addAll(ignore(delta, anyKeys, provision, true));\n+                            profile.getResults().addAll(ignore(processed, anyKeys, provision, true));\n                             break;\n \n                         default:\n                         // do nothing\n                     }\n                 }\n-            } else if (SyncDeltaType.DELETE == delta.getDeltaType()) {\n+            } else if (SyncDeltaType.DELETE == processed.getDeltaType()) {\n                 if (anyKeys.isEmpty()) {\n-                    finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n+                    finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, processed);\n                     LOG.debug(\"No match found for deletion\");\n                 } else {\n-                    profile.getResults().addAll(delete(delta, anyKeys, provision));\n+                    profile.getResults().addAll(delete(processed, anyKeys, provision));\n                 }\n             }\n         } catch (IllegalStateException | IllegalArgumentException e) {"},{"sha":"580554380b6a602e3a9ffca679a3c37b6ae66425","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -60,7 +60,7 @@ public class DBPasswordPullActions implements PullActions {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public SyncDelta beforeProvision(\n+    public void beforeProvision(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO any) throws JobExecutionException {\n@@ -69,13 +69,11 @@ public SyncDelta beforeProvision(\n             String password = ((UserTO) any).getPassword();\n             parseEncodedPassword(password, profile.getConnector());\n         }\n-\n-        return delta;\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n-    public <M extends AnyPatch> SyncDelta beforeUpdate(\n+    public <M extends AnyPatch> void beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entityTO,\n@@ -85,8 +83,6 @@ public <M extends AnyPatch> SyncDelta beforeUpdate(\n             PasswordPatch modPassword = ((UserPatch) anyPatch).getPassword();\n             parseEncodedPassword(modPassword == null ? null : modPassword.getValue(), profile.getConnector());\n         }\n-\n-        return delta;\n     }\n \n     private void parseEncodedPassword(final String password, final Connector connector) {"},{"sha":"b3b12ea01efd10e3721fc66968640f4939f3b39e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":53,"deletions":51,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -153,12 +153,11 @@ private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit org\n             result.setKey(null);\n             finalize(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n         } else {\n-            SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeAssign(profile, actionedDelta, realmTO);\n+                action.beforeAssign(profile, delta, realmTO);\n             }\n \n-            create(realmTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n+            create(realmTO, delta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -192,12 +191,11 @@ private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit\n             result.setKey(null);\n             finalize(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n         } else {\n-            SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeProvision(profile, actionedDelta, realmTO);\n+                action.beforeProvision(profile, delta, realmTO);\n             }\n \n-            create(realmTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n+            create(realmTO, delta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -286,7 +284,6 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<String\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : keys) {\n             LOG.debug(\"About to update {}\", key);\n \n@@ -315,7 +312,7 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<String\n                 } else {\n                     try {\n                         for (PullActions action : profile.getActions()) {\n-                            workingDelta = action.beforeUpdate(profile, workingDelta, before, null);\n+                            action.beforeUpdate(profile, delta, before, null);\n                         }\n \n                         PropagationByResource propByRes = binder.update(realm, before);\n@@ -326,7 +323,7 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<String\n                         taskExecutor.execute(tasks, false);\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, updated, result);\n+                            action.after(profile, delta, updated, result);\n                         }\n \n                         output = updated;\n@@ -337,20 +334,20 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<String\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n-                        LOG.error(\"Could not propagate Realm {}\", workingDelta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not propagate Realm {}\", delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     } catch (Exception e) {\n-                        throwIgnoreProvisionException(workingDelta, e);\n+                        throwIgnoreProvisionException(delta, e);\n \n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                        LOG.error(\"Could not update Realm {}\", workingDelta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not update Realm {}\", delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n-                finalize(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, workingDelta);\n+                finalize(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n             }\n             results.add(result);\n         }\n@@ -373,7 +370,6 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<S\n \n         final List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : keys) {\n             LOG.debug(\"About to unassign resource {}\", key);\n \n@@ -403,11 +399,11 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<S\n                     try {\n                         if (unlink) {\n                             for (PullActions action : profile.getActions()) {\n-                                workingDelta = action.beforeUnassign(profile, workingDelta, before);\n+                                action.beforeUnassign(profile, delta, before);\n                             }\n                         } else {\n                             for (PullActions action : profile.getActions()) {\n-                                workingDelta = action.beforeDeprovision(profile, workingDelta, before);\n+                                action.beforeDeprovision(profile, delta, before);\n                             }\n                         }\n \n@@ -423,7 +419,7 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<S\n                         }\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, RealmTO.class.cast(output), result);\n+                            action.after(profile, delta, RealmTO.class.cast(output), result);\n                         }\n \n                         resultStatus = Result.SUCCESS;\n@@ -432,11 +428,11 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<S\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n-                        LOG.error(\"Could not propagate Realm {}\", workingDelta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not propagate Realm {}\", delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     } catch (Exception e) {\n-                        throwIgnoreProvisionException(workingDelta, e);\n+                        throwIgnoreProvisionException(delta, e);\n \n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -470,7 +466,6 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<String>\n \n         final List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : keys) {\n             LOG.debug(\"About to unassign resource {}\", key);\n \n@@ -499,11 +494,11 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<String>\n                     try {\n                         if (unlink) {\n                             for (PullActions action : profile.getActions()) {\n-                                workingDelta = action.beforeUnlink(profile, workingDelta, before);\n+                                action.beforeUnlink(profile, delta, before);\n                             }\n                         } else {\n                             for (PullActions action : profile.getActions()) {\n-                                workingDelta = action.beforeLink(profile, workingDelta, before);\n+                                action.beforeLink(profile, delta, before);\n                             }\n                         }\n \n@@ -512,10 +507,10 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<String>\n                         } else {\n                             realm.add(profile.getTask().getResource());\n                         }\n-                        output = update(workingDelta, Collections.singletonList(key));\n+                        output = update(delta, Collections.singletonList(key));\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, RealmTO.class.cast(output), result);\n+                            action.after(profile, delta, RealmTO.class.cast(output), result);\n                         }\n \n                         resultStatus = Result.SUCCESS;\n@@ -524,22 +519,22 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<String>\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n-                        LOG.error(\"Could not propagate Realm {}\", workingDelta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not propagate Realm {}\", delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     } catch (Exception e) {\n-                        throwIgnoreProvisionException(workingDelta, e);\n+                        throwIgnoreProvisionException(delta, e);\n \n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                        LOG.error(\"Could not update Realm {}\", workingDelta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not update Realm {}\", delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n                 finalize(unlink\n                         ? MatchingRule.toEventName(MatchingRule.UNLINK)\n-                        : MatchingRule.toEventName(MatchingRule.LINK), resultStatus, before, output, workingDelta);\n+                        : MatchingRule.toEventName(MatchingRule.LINK), resultStatus, before, output, delta);\n             }\n             results.add(result);\n         }\n@@ -560,7 +555,6 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<String\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n-        SyncDelta workingDelta = delta;\n         for (String key : keys) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n@@ -584,7 +578,7 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<String\n \n                 if (!profile.isDryRun()) {\n                     for (PullActions action : profile.getActions()) {\n-                        workingDelta = action.beforeDelete(profile, workingDelta, before);\n+                        action.beforeDelete(profile, delta, before);\n                     }\n \n                     try {\n@@ -622,18 +616,18 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<String\n                         resultStatus = Result.SUCCESS;\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, workingDelta, before, result);\n+                            action.after(profile, delta, before, result);\n                         }\n                     } catch (Exception e) {\n-                        throwIgnoreProvisionException(workingDelta, e);\n+                        throwIgnoreProvisionException(delta, e);\n \n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not delete {}\", realm, e);\n                         output = e;\n                     }\n \n-                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n+                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n                 }\n \n                 results.add(result);\n@@ -675,13 +669,21 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         LOG.debug(\"Process {} for {} as {}\",\n                 delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n \n-        String uid = delta.getPreviousUid() == null\n-                ? delta.getUid().getUidValue()\n-                : delta.getPreviousUid().getUidValue();\n+        SyncDelta processed = delta;\n+        for (PullActions action : profile.getActions()) {\n+            processed = action.preprocess(processed);\n+        }\n+\n+        LOG.debug(\"Transformed {} for {} as {}\",\n+                processed.getDeltaType(), processed.getUid().getUidValue(), processed.getObject().getObjectClass());\n+\n+        String uid = processed.getPreviousUid() == null\n+                ? processed.getUid().getUidValue()\n+                : processed.getPreviousUid().getUidValue();\n \n-        List<String> keys = pullUtils.findExisting(uid, delta.getObject(), orgUnit);\n+        List<String> keys = pullUtils.findExisting(uid, processed.getObject(), orgUnit);\n         LOG.debug(\"Match found for {} as {}: {}\",\n-                delta.getUid().getUidValue(), delta.getObject().getObjectClass(), keys);\n+                processed.getUid().getUidValue(), processed.getObject().getObjectClass(), keys);\n \n         if (keys.size() > 1) {\n             switch (profile.getResAct()) {\n@@ -702,19 +704,19 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         }\n \n         try {\n-            if (SyncDeltaType.CREATE_OR_UPDATE == delta.getDeltaType()) {\n+            if (SyncDeltaType.CREATE_OR_UPDATE == processed.getDeltaType()) {\n                 if (keys.isEmpty()) {\n                     switch (profile.getTask().getUnmatchingRule()) {\n                         case ASSIGN:\n-                            profile.getResults().addAll(assign(delta, orgUnit));\n+                            profile.getResults().addAll(assign(processed, orgUnit));\n                             break;\n \n                         case PROVISION:\n-                            profile.getResults().addAll(provision(delta, orgUnit));\n+                            profile.getResults().addAll(provision(processed, orgUnit));\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().add(ignore(delta, false));\n+                            profile.getResults().add(ignore(processed, false));\n                             break;\n \n                         default:\n@@ -723,39 +725,39 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n                 } else {\n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n-                            profile.getResults().addAll(update(delta, keys));\n+                            profile.getResults().addAll(update(processed, keys));\n                             break;\n \n                         case DEPROVISION:\n-                            profile.getResults().addAll(deprovision(delta, keys, false));\n+                            profile.getResults().addAll(deprovision(processed, keys, false));\n                             break;\n \n                         case UNASSIGN:\n-                            profile.getResults().addAll(deprovision(delta, keys, true));\n+                            profile.getResults().addAll(deprovision(processed, keys, true));\n                             break;\n \n                         case LINK:\n-                            profile.getResults().addAll(link(delta, keys, false));\n+                            profile.getResults().addAll(link(processed, keys, false));\n                             break;\n \n                         case UNLINK:\n-                            profile.getResults().addAll(link(delta, keys, true));\n+                            profile.getResults().addAll(link(processed, keys, true));\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().add(ignore(delta, true));\n+                            profile.getResults().add(ignore(processed, true));\n                             break;\n \n                         default:\n                         // do nothing\n                     }\n                 }\n-            } else if (SyncDeltaType.DELETE == delta.getDeltaType()) {\n+            } else if (SyncDeltaType.DELETE == processed.getDeltaType()) {\n                 if (keys.isEmpty()) {\n-                    finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n+                    finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, processed);\n                     LOG.debug(\"No match found for deletion\");\n                 } else {\n-                    profile.getResults().addAll(delete(delta, keys));\n+                    profile.getResults().addAll(delete(processed, keys));\n                 }\n             }\n         } catch (IllegalStateException | IllegalArgumentException e) {"},{"sha":"9de3f2f96a8c1215bef9e4f65d6324bb874b366b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GoogleAppsPullActions.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGoogleAppsPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGoogleAppsPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGoogleAppsPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -81,41 +81,33 @@ protected String getGoogleAppsIdSchema() {\n     }\n \n     @Override\n-    public SyncDelta beforeProvision(\n+    public void beforeProvision(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entity) throws JobExecutionException {\n \n-        if (!(entity instanceof UserTO)) {\n-            return delta;\n-        }\n-\n-        UserTO userTO = (UserTO) entity;\n-        if (userTO.getUsername() == null) {\n-            userTO.setUsername(delta.getObject().getName().getNameValue());\n+        if (entity instanceof UserTO) {\n+            UserTO userTO = (UserTO) entity;\n+            if (userTO.getUsername() == null) {\n+                userTO.setUsername(delta.getObject().getName().getNameValue());\n+            }\n         }\n-\n-        return delta;\n     }\n \n     @Override\n-    public <P extends AnyPatch> SyncDelta beforeUpdate(\n+    public <P extends AnyPatch> void beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entity,\n             final P anyPatch) throws JobExecutionException {\n \n-        if (!(anyPatch instanceof UserPatch)) {\n-            return delta;\n-        }\n-\n-        UserPatch userPatch = (UserPatch) anyPatch;\n-        if (userPatch.getUsername() == null) {\n-            userPatch.setUsername(new StringReplacePatchItem.Builder().\n-                    value(delta.getObject().getName().getNameValue()).build());\n+        if (anyPatch instanceof UserPatch) {\n+            UserPatch userPatch = (UserPatch) anyPatch;\n+            if (userPatch.getUsername() == null) {\n+                userPatch.setUsername(new StringReplacePatchItem.Builder().\n+                        value(delta.getObject().getName().getNameValue()).build());\n+            }\n         }\n-\n-        return delta;\n     }\n \n     @Transactional"},{"sha":"22c83eca046a0899dcadcaeb1a8d748f7958caf3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPPasswordPullActions.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -55,7 +55,7 @@ public class LDAPPasswordPullActions implements PullActions {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public SyncDelta beforeProvision(\n+    public void beforeProvision(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entity) throws JobExecutionException {\n@@ -64,13 +64,11 @@ public SyncDelta beforeProvision(\n             String password = ((UserTO) entity).getPassword();\n             parseEncodedPassword(password);\n         }\n-\n-        return delta;\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n-    public <M extends AnyPatch> SyncDelta beforeUpdate(\n+    public <M extends AnyPatch> void beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entityTO,\n@@ -80,8 +78,6 @@ public <M extends AnyPatch> SyncDelta beforeUpdate(\n             PasswordPatch modPassword = ((UserPatch) anyPatch).getPassword();\n             parseEncodedPassword(modPassword == null ? null : modPassword.getValue());\n         }\n-\n-        return delta;\n     }\n \n     private void parseEncodedPassword(final String password) {"},{"sha":"54e9510e504156dc037ad670f46e29231abe61a4","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestPullActions.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java?ref=e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","patch":"@@ -40,7 +40,7 @@ public class TestPullActions implements PullActions {\n     private int counter;\n \n     @Override\n-    public SyncDelta beforeProvision(\n+    public void beforeProvision(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n             throws JobExecutionException {\n \n@@ -56,24 +56,20 @@ public SyncDelta beforeProvision(\n             attrTO.get().getValues().clear();\n             attrTO.get().getValues().add(String.valueOf(counter++));\n         }\n-\n-        return delta;\n     }\n \n     @Override\n-    public SyncDelta beforeAssign(\n+    public void beforeAssign(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n             throws JobExecutionException {\n \n         if (entity instanceof UserTO && \"test2\".equals(UserTO.class.cast(entity).getUsername())) {\n             throw new IgnoreProvisionException();\n         }\n-\n-        return delta;\n     }\n \n     @Override\n-    public <M extends AnyPatch> SyncDelta beforeUpdate(\n+    public <M extends AnyPatch> void beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n             final EntityTO entityTO,\n@@ -94,7 +90,5 @@ public <M extends AnyPatch> SyncDelta beforeUpdate(\n \n         fullnamePatch.getAttrTO().getValues().clear();\n         fullnamePatch.getAttrTO().getValues().add(String.valueOf(counter++));\n-\n-        return delta;\n     }\n }"}]}