{"sha":"9fc6c19691495d52a2cc62641da536d29ebaada7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlmYzZjMTk2OTE0OTVkNTJhMmNjNjI2NDFkYTUzNmQyOWViYWFkYTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-26T08:52:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-26T10:13:56Z"},"message":"Upgrading H2, Swagger UI and frontend-maven-plugin","tree":{"sha":"6caada226096960f239d5faaf98d46c95336e71b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6caada226096960f239d5faaf98d46c95336e71b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9fc6c19691495d52a2cc62641da536d29ebaada7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9fc6c19691495d52a2cc62641da536d29ebaada7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9fc6c19691495d52a2cc62641da536d29ebaada7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9fc6c19691495d52a2cc62641da536d29ebaada7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f8c69a518cb2f3cdc1781d966318fa383f1ab5a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f8c69a518cb2f3cdc1781d966318fa383f1ab5a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f8c69a518cb2f3cdc1781d966318fa383f1ab5a"}],"stats":{"total":84,"additions":42,"deletions":42},"files":[{"sha":"9fcc0fb2f81857f0954dced6539c9bf4fe7daf46","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnectorServerStartStopListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -76,7 +76,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n                     ctx.getEnvironment().getProperty(\"testconnectorserver.key\", String.class).toCharArray()));\n \n             server.start();\n-            LOG.info(\"ConnId connector server listening on port \" + server.getPort());\n+            LOG.info(\"ConnId connector server listening on port {}\", server.getPort());\n         } catch (Exception e) {\n             LOG.error(\"Could not start ConnId connector server\", e);\n         }"},{"sha":"fd069bc3eb024f63ecaf4aff3bf6cbca0f99bd90","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/H2StartStopListener.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.fit.buildtools;\n \n+import java.nio.charset.StandardCharsets;\n import java.sql.SQLException;\n import javax.servlet.ServletContext;\n import javax.servlet.ServletContextEvent;\n@@ -49,7 +50,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n \n         try {\n             Server h2TestDb = new Server();\n-            h2TestDb.runTool(\"-tcp\", \"-tcpDaemon\", \"-web\", \"-webDaemon\",\n+            h2TestDb.runTool(\"-ifNotExists\", \"-tcp\", \"-tcpDaemon\", \"-web\", \"-webDaemon\",\n                     \"-webPort\", ctx.getEnvironment().getProperty(\"testdb.webport\"));\n \n             context.setAttribute(H2_TESTDB, h2TestDb);\n@@ -59,21 +60,24 @@ public void contextInitialized(final ServletContextEvent sce) {\n \n         DataSource datasource = ctx.getBean(\"testDataSource\", DataSource.class);\n \n-        ResourceDatabasePopulator populator = new ResourceDatabasePopulator(ctx.getResource(\"classpath:/testdb.sql\"));\n-        populator.setSqlScriptEncoding(\"UTF-8\");\n-        DataSourceInitializer init = new DataSourceInitializer();\n-        init.setDataSource(datasource);\n-        init.setEnabled(true);\n-        init.setDatabasePopulator(populator);\n-        init.afterPropertiesSet();\n-        LOG.info(\"Database successfully initialized\");\n+        try {\n+            ResourceDatabasePopulator populator =\n+                    new ResourceDatabasePopulator(ctx.getResource(\"classpath:/testdb.sql\"));\n+            populator.setSqlScriptEncoding(StandardCharsets.UTF_8.name());\n+            DataSourceInitializer init = new DataSourceInitializer();\n+            init.setDataSource(datasource);\n+            init.setEnabled(true);\n+            init.setDatabasePopulator(populator);\n+            init.afterPropertiesSet();\n+            LOG.info(\"H2 database successfully initialized\");\n+        } catch (Exception e) {\n+            LOG.error(\"Could not initialize H2\", e);\n+        }\n     }\n \n     @Override\n     public void contextDestroyed(final ServletContextEvent sce) {\n-        ServletContext context = sce.getServletContext();\n-\n-        Server h2TestDb = (Server) context.getAttribute(H2_TESTDB);\n+        Server h2TestDb = (Server) sce.getServletContext().getAttribute(H2_TESTDB);\n         if (h2TestDb != null) {\n             h2TestDb.shutdown();\n         }"},{"sha":"0f9fa20cbd14ad32a8ddf6bfe3e0c1b0bc32e482","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/SyslogRewriteAuditAppender.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyslogRewriteAuditAppender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyslogRewriteAuditAppender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyslogRewriteAuditAppender.java?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -61,20 +61,20 @@ public Set<AuditLoggerName> getEvents() {\n \n     @Override\n     public void initTargetAppender() {\n-        targetAppender = SyslogAppender.newSyslogAppenderBuilder()\n-                .withName(getTargetAppenderName())\n-                .withHost(\"localhost\")\n-                .withPort(514)\n-                .withProtocol(Protocol.UDP)\n-                .withLayout(\n-                        PatternLayout.newBuilder().withPattern(\"%d{ISO8601} %-5level %logger - %msg%n\").build())\n-                .setFacility(Facility.LOCAL1)\n-                .build();\n+        targetAppender = SyslogAppender.newSyslogAppenderBuilder().\n+                setName(getTargetAppenderName()).\n+                withHost(\"localhost\").\n+                withPort(514).\n+                withProtocol(Protocol.UDP).\n+                setLayout(PatternLayout.newBuilder().\n+                        withPattern(\"%d{ISO8601} %-5level %logger - %msg%n\").\n+                        build()).\n+                setFacility(Facility.LOCAL1).\n+                build();\n     }\n \n     @Override\n     public String getTargetAppenderName() {\n         return \"audit_for_\" + domainName + \"_syslog\";\n     }\n-\n }"},{"sha":"cc9cd3ec52e2be7e90915163c9046f1c86a83caf","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestFileAuditAppender.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileAuditAppender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileAuditAppender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileAuditAppender.java?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -67,20 +67,18 @@ public void initTargetAppender() {\n                 + File.separator\n                 : StringUtils.replace(mainFile.getFileName(), \"core.log\", StringUtils.EMPTY);\n \n-        targetAppender = FileAppender.newBuilder()\n-                .withName(getTargetAppenderName())\n-                .withAppend(true)\n-                .withFileName(pathPrefix + getTargetAppenderName() + \".log\")\n-                .withLayout(\n-                        PatternLayout.newBuilder()\n-                                .withPattern(\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\")\n-                                .build()).\n+        targetAppender = FileAppender.newBuilder().\n+                setName(getTargetAppenderName()).\n+                withAppend(true).\n+                withFileName(pathPrefix + getTargetAppenderName() + \".log\").\n+                setLayout(PatternLayout.newBuilder().\n+                        withPattern(\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\").\n+                        build()).\n                 build();\n     }\n \n     @Override\n     public String getTargetAppenderName() {\n         return \"audit_for_\" + domainName + \"_norewrite_file\";\n     }\n-\n }"},{"sha":"8ce0d99de12f56a18dc3d708ea9c9c760e949150","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestFileRewriteAuditAppender.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileRewriteAuditAppender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileRewriteAuditAppender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestFileRewriteAuditAppender.java?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -57,14 +57,13 @@ public void initTargetAppender() {\n         String pathPrefix = StringUtils.replace(mainFile.getFileName(), \"core.log\", StringUtils.EMPTY);\n \n         targetAppender = FileAppender.newBuilder().\n-                withName(getTargetAppenderName()).\n+                setName(getTargetAppenderName()).\n                 withAppend(true).\n                 withFileName(pathPrefix + getTargetAppenderName() + \".log\").\n-                withLayout(\n-                        PatternLayout.newBuilder()\n-                                .withPattern(\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\")\n-                                .build())\n-                .build();\n+                setLayout(PatternLayout.newBuilder().\n+                        withPattern(\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\").\n+                        build()).\n+                build();\n     }\n \n     @Override\n@@ -76,5 +75,4 @@ public String getTargetAppenderName() {\n     public RewritePolicy getRewritePolicy() {\n         return TestRewritePolicy.createPolicy();\n     }\n-\n }"},{"sha":"e61fe8eaaa23dd6899cf6c95b9b3b7503025c172","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc6c19691495d52a2cc62641da536d29ebaada7/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc6c19691495d52a2cc62641da536d29ebaada7/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=9fc6c19691495d52a2cc62641da536d29ebaada7","patch":"@@ -433,7 +433,7 @@ under the License.\n \n     <joda.version>2.10.1</joda.version>\n \n-    <h2.version>1.4.197</h2.version>\n+    <h2.version>1.4.198</h2.version>\n \n     <junit.version>5.4.0</junit.version>\n \n@@ -443,7 +443,7 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n \n     <swagger-core.version>2.0.7</swagger-core.version>    \n-    <swagger-ui.version>3.20.8</swagger-ui.version>\n+    <swagger-ui.version>3.20.9</swagger-ui.version>\n     <guava.version>20.0</guava.version>\n \n     <jquery.version>3.3.1-1</jquery.version>\n@@ -2125,7 +2125,7 @@ under the License.\n         <plugin>\n           <groupId>com.github.eirslett</groupId>\n           <artifactId>frontend-maven-plugin</artifactId>\n-          <version>1.6</version>\n+          <version>1.7.5</version>\n         </plugin>\n         <plugin>\n           <groupId>org.codehaus.mojo</groupId>"}]}