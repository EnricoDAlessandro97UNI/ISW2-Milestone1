{"sha":"2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjYjU0NmZlMGVhNjQxYTQ4NGMyZGMxYjU2MWE3ZTYzZWQ4YjM2MWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-15T14:30:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-15T14:31:09Z"},"message":"Fixing ConnObjects' paginated list","tree":{"sha":"d04d18890bbff6e00949723dc5b76e6d1c152137","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d04d18890bbff6e00949723dc5b76e6d1c152137"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fb88619787848f144b42d16d56228c2c3b2c339","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fb88619787848f144b42d16d56228c2c3b2c339","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fb88619787848f144b42d16d56228c2c3b2c339"}],"stats":{"total":38,"additions":20,"deletions":18},"files":[{"sha":"87a0c435ab2874a0fc5774a0b3c7e9faf6f1d6dc","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","patch":"@@ -72,9 +72,9 @@\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.framework.common.objects.ResultsHandler;\n import org.identityconnectors.framework.common.objects.SearchResult;\n import org.identityconnectors.framework.common.objects.Uid;\n-import org.identityconnectors.framework.spi.SearchResultsHandler;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -390,18 +390,12 @@ public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key,\n             options = MappingUtils.buildOperationOptions(mapItems);\n         }\n \n-        final SearchResult[] searchResult = new SearchResult[1];\n         final List<ConnObjectTO> connObjects = new ArrayList<>();\n \n-        connFactory.getConnector(resource).search(objectClass, null, new SearchResultsHandler() {\n+        SearchResult searchResult = connFactory.getConnector(resource).search(objectClass, null, new ResultsHandler() {\n \n             private int count;\n \n-            @Override\n-            public void handleResult(final SearchResult result) {\n-                searchResult[0] = result;\n-            }\n-\n             @Override\n             public boolean handle(final ConnectorObject connectorObject) {\n                 connObjects.add(connObjectUtils.getConnObjectTO(connectorObject));\n@@ -411,7 +405,7 @@ public boolean handle(final ConnectorObject connectorObject) {\n             }\n         }, size, pagedResultsCookie, orderBy, options);\n \n-        return ImmutablePair.of(searchResult[0], connObjects);\n+        return ImmutablePair.of(searchResult, connObjects);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_READ + \"')\")"},{"sha":"901cdc7c15a9160cbe342d6e48db8f0a8a1ff181","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","patch":"@@ -33,6 +33,7 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.identityconnectors.framework.common.objects.filter.Filter;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n+import org.identityconnectors.framework.common.objects.SearchResult;\n \n /**\n  * Entry point for making requests on underlying connector bundles.\n@@ -153,8 +154,9 @@ void filteredReconciliation(\n      * @param filter search filter\n      * @param handler class responsible for working with the objects returned from the search; may be null.\n      * @param options ConnId's OperationOptions\n+     * @return search result\n      */\n-    void search(\n+    SearchResult search(\n             ObjectClass objectClass,\n             Filter filter,\n             ResultsHandler handler,\n@@ -172,8 +174,9 @@ void search(\n      * @param orderBy the sort keys which should be used for ordering the {@link ConnectorObject} returned by\n      * search request\n      * @param options ConnId's OperationOptions\n+     * @return search result\n      */\n-    void search(\n+    SearchResult search(\n             ObjectClass objectClass,\n             Filter filter,\n             ResultsHandler handler,"},{"sha":"b122c9ebf0efbfd1a62aed2fc6615144c79ac366","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cb546fe0ea641a484c2dc1b561a7e63ed8b361e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=2cb546fe0ea641a484c2dc1b561a7e63ed8b361e","patch":"@@ -412,23 +412,26 @@ public ConnectorObject getObject(\n     }\n \n     @Override\n-    public void search(\n+    public SearchResult search(\n             final ObjectClass objectClass,\n             final Filter filter,\n             final ResultsHandler handler,\n             final OperationOptions options) {\n \n+        SearchResult result = null;\n+\n         if (connInstance.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n             if (options.getPageSize() == null && options.getPagedResultsCookie() == null) {\n-                OperationOptionsBuilder builder = new OperationOptionsBuilder(options).setPageSize(DEFAULT_PAGE_SIZE);\n+                OperationOptionsBuilder builder = new OperationOptionsBuilder(options).\n+                        setPageSize(DEFAULT_PAGE_SIZE).setPagedResultsOffset(-1);\n \n                 final String[] cookies = new String[] { null };\n                 do {\n                     if (cookies[0] != null) {\n                         builder.setPagedResultsCookie(cookies[0]);\n                     }\n \n-                    connector.search(objectClass, filter, new SearchResultsHandler() {\n+                    result = connector.search(objectClass, filter, new SearchResultsHandler() {\n \n                         @Override\n                         public void handleResult(final SearchResult result) {\n@@ -445,16 +448,18 @@ public boolean handle(final ConnectorObject connectorObject) {\n                     }, builder.build());\n                 } while (cookies[0] != null);\n             } else {\n-                connector.search(objectClass, filter, handler, options);\n+                result = connector.search(objectClass, filter, handler, options);\n             }\n         } else {\n             LOG.info(\"Search was attempted, although the connector only has these capabilities: {}. No action.\",\n                     connInstance.getCapabilities());\n         }\n+\n+        return result;\n     }\n \n     @Override\n-    public void search(\n+    public SearchResult search(\n             final ObjectClass objectClass,\n             final Filter filter,\n             final ResultsHandler handler,\n@@ -463,7 +468,7 @@ public void search(\n             final List<OrderByClause> orderBy,\n             final OperationOptions options) {\n \n-        OperationOptionsBuilder builder = new OperationOptionsBuilder().setPageSize(pageSize);\n+        OperationOptionsBuilder builder = new OperationOptionsBuilder().setPageSize(pageSize).setPagedResultsOffset(-1);\n         if (pagedResultsCookie != null) {\n             builder.setPagedResultsCookie(pagedResultsCookie);\n         }\n@@ -473,7 +478,7 @@ public void search(\n \n         builder.setAttributesToGet(options.getAttributesToGet());\n \n-        search(objectClass, filter, handler, builder.build());\n+        return search(objectClass, filter, handler, builder.build());\n     }\n \n     @Override"}]}