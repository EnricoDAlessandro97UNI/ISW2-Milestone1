{"sha":"4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRkMmNhMzUyYTJhMWEzMTI4Y2VlNTdlNGY3Nzk2YzhjN2NiYTU1OGQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-23T08:37:56Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-23T08:38:04Z"},"message":"Cleaning up UI test classes","tree":{"sha":"a9232c36a8fcddd2a265c685c8cf5927aef4252d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a9232c36a8fcddd2a265c685c8cf5927aef4252d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb"}],"stats":{"total":3045,"additions":1494,"deletions":1551},"files":[{"sha":"6e890bcdc2e3c1f85d3954f616f6acaefcca4e47","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":14,"deletions":23,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.syncope.fit.ui.AbstractUITCase;\n-import org.apache.syncope.fit.ui.UtilityUIT;\n import org.apache.wicket.util.tester.FormTester;\n import org.apache.wicket.util.tester.WicketTester;\n import org.junit.jupiter.api.BeforeAll;\n@@ -47,8 +46,6 @@\n \n public abstract class AbstractConsoleITCase extends AbstractUITCase {\n \n-    protected static UtilityUIT UTILITY_UI;\n-\n     @ImportAutoConfiguration(classes = { SelfKeymasterClientContext.class })\n     @Configuration\n     public static class SyncopeConsoleWebApplicationTestConfig {\n@@ -97,30 +94,24 @@ public PreviewUtils previewUtils() {\n     public static void setUp() {\n         Locale.setDefault(Locale.ENGLISH);\n \n-        synchronized (LOG) {\n-            if (UTILITY_UI == null) {\n-                AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n-                ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n-                ctx.register(SyncopeWebApplication.class);\n-                ctx.register(SyncopeIdMConsoleContext.class);\n-                ctx.refresh();\n-\n-                UTILITY_UI = new UtilityUIT(new WicketTester(ctx.getBean(SyncopeWebApplication.class)));\n-            }\n-\n-            if (SYNCOPE_SERVICE == null) {\n-                SYNCOPE_SERVICE = new SyncopeClientFactoryBean().\n-                        setAddress(ADDRESS).create(ADMIN_UNAME, ADMIN_PWD).\n-                        getService(SyncopeService.class);\n-            }\n-        }\n+        AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n+        ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n+        ctx.register(SyncopeWebApplication.class);\n+        ctx.register(SyncopeIdMConsoleContext.class);\n+        ctx.refresh();\n+\n+        TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n+\n+        SYNCOPE_SERVICE = new SyncopeClientFactoryBean().\n+                setAddress(ADDRESS).create(ADMIN_UNAME, ADMIN_PWD).\n+                getService(SyncopeService.class);\n     }\n \n     protected void doLogin(final String user, final String passwd) {\n-        UTILITY_UI.getTester().startPage(Login.class);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"login\");\n+        FormTester formTester = TESTER.newFormTester(\"login\");\n         formTester.setValue(\"username\", user);\n         formTester.setValue(\"password\", passwd);\n         formTester.submit(\"submit\");"},{"sha":"aa8ae80891f33b9da0f7dfe476ef5b712c70179a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":47,"deletions":47,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -42,131 +42,131 @@ public void login() {\n     }\n \n     protected void browsingToRelationshipType() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypes() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypeClasses() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToPlainSchemas() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        UTILITY_UI.getTester().assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToVirtualSchemas() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        UTILITY_UI.getTester().assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void createPlainSchema(final String key) {\n         browsingToPlainSchemas();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", key);\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"3\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     protected void createAnyTypeClassWithoutSchema(final String name) {\n         browsingToAnyTypeClasses();\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", name);\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n \n     protected void createAnyType(final String name) {\n         browsingToAnyTypes();\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", name);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n \n     protected void createRelationshipType(final String name) {\n         browsingToRelationshipType();\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:relationshipTypeDetails:container:form:key:textField\", name);\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"test relationshipType\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n     }\n }"},{"sha":"8659c6e1a5abc56ef16388111753be4cf33f0b89","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxBrowseITCase.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -36,50 +36,50 @@ public class AjaxBrowseITCase extends AbstractConsoleITCase {\n \n     @Test\n     public void loginPage() {\n-        UTILITY_UI.getTester().startPage(Login.class);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n     }\n \n     @Test\n     public void successfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().assertRenderedPage(Dashboard.class);\n+        TESTER.assertRenderedPage(Dashboard.class);\n     }\n \n     @Test\n     public void unsuccessfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD + 1);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n     }\n \n     @Test\n     public void browsingBookmarkablePageLink() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n \n-        UTILITY_UI.getTester().assertRenderedPage(Dashboard.class);\n+        TESTER.assertRenderedPage(Dashboard.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        UTILITY_UI.getTester().assertRenderedPage(Topology.class);\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        TESTER.assertRenderedPage(Topology.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n-        UTILITY_UI.getTester().assertRenderedPage(Reports.class);\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n+        TESTER.assertRenderedPage(Reports.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        UTILITY_UI.getTester().assertRenderedPage(Logs.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        TESTER.assertRenderedPage(Logs.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        TESTER.assertRenderedPage(Security.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        UTILITY_UI.getTester().assertRenderedPage(Notifications.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.assertRenderedPage(Notifications.class);\n     }\n }"},{"sha":"2918c1d906914ba0101200b8639b2327d03d2cad","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxPalettePanelITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -41,9 +41,9 @@ public void isRendered() {\n                 new TestPage.Builder<String, AjaxPalettePanel<String>>().build(\n                         new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n                                 TestPage.FIELD, SELECTED, ALL));\n-        UTILITY_UI.getTester().startPage(testPage);\n+        TESTER.startPage(testPage);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.submit();\n \n         Collection<String> list = testPage.getFieldPanel().getModelCollection();"},{"sha":"4153b5952aeacfd3e92c6a1508178d6d8fd49cab","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxTextFieldITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -38,8 +38,8 @@ public void emptyInputConvertedToNull() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n-        UTILITY_UI.getTester().startPage(testPage);\n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n+        TESTER.startPage(testPage);\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getField().getDefaultModelObject());\n@@ -52,8 +52,8 @@ public void valueAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         String text = \"sometext\";\n         TEXT_MODEL.setObject(text);\n-        UTILITY_UI.getTester().startPage(testPage);\n-        assertTrue(UTILITY_UI.getTester().getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n+        TESTER.startPage(testPage);\n+        assertTrue(TESTER.getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n     }\n \n     @Test\n@@ -63,8 +63,8 @@ public void nullIsNotValidated() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().getField().setRequired(false);\n         testPage.getFieldPanel().getField().add(StringValidator.minimumLength(2));\n-        UTILITY_UI.getTester().startPage(testPage);\n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n+        TESTER.startPage(testPage);\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getDefaultModelObject());\n@@ -78,9 +78,9 @@ public void requiredAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().setOutputMarkupId(true);\n         testPage.getFieldPanel().getField().setRequired(true);\n-        UTILITY_UI.getTester().startPage(testPage);\n-        UTILITY_UI.getTester().assertLabel(\"form:field:field-label\", \"field\");\n-        UTILITY_UI.getTester().assertVisible(\"form:field:required\");\n-        UTILITY_UI.getTester().assertVisible(\"form:field:externalAction\");\n+        TESTER.startPage(testPage);\n+        TESTER.assertLabel(\"form:field:field-label\", \"field\");\n+        TESTER.assertVisible(\"form:field:required\");\n+        TESTER.assertVisible(\"form:field:externalAction\");\n     }\n }"},{"sha":"910edde1f0e53d51061d62d0941da189da3ab91e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -42,40 +42,40 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n                 + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToClonePrinter() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:5:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n@@ -84,69 +84,69 @@ public void clickToClonePrinter() {\n \n     @Test\n     public void editPrinter() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n+        component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n     }\n \n     @Test\n     public void checkDeletePrinterLink() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:6:action:action\",\n                 IndicatingOnConfirmAjaxLink.class);"},{"sha":"4c02d1431b780446b57b4c5af96f518a4abfbe24","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":41,"deletions":41,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -37,15 +37,15 @@ public class AnyTypeClassesITCase extends AbstractTypesITCase {\n     public void read() {\n         browsingToAnyTypeClasses();\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 BaseModal.class);\n     }\n \n@@ -54,34 +54,34 @@ public void create() {\n         browsingToAnyTypeClasses();\n         final String anyTypeClassTest = \"anyTypeClassTest\";\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", anyTypeClassTest);\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:derSchemas:paletteField:recorder\", \"mderiveddata\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n \n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassTest);\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassTest);\n \n-        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n     }\n \n     @Test\n@@ -92,43 +92,43 @@ public void update() {\n         createPlainSchema(plainSchema);\n         browsingToAnyTypeClasses();\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:plainSchemas:paletteField:recorder\", plainSchema);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(component);\n     }\n@@ -138,28 +138,28 @@ public void delete() {\n         final String anyTypeClassName = \"zStringDelete\";\n         createAnyTypeClassWithoutSchema(anyTypeClassName);\n         browsingToAnyTypeClasses();\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        TESTER.cleanupFeedbackMessages();\n+        component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n \n         assertNull(component);\n     }"},{"sha":"3a3549978357a795e9b9cf1c4c9ae987db9b4f6f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":37,"deletions":37,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -37,21 +37,21 @@ public class AnyTypesITCase extends AbstractTypesITCase {\n     @Test\n     public void read() {\n         browsingToAnyTypes();\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", Label.class);\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 BaseModal.class);\n     }\n \n@@ -60,36 +60,36 @@ public void create() {\n         browsingToAnyTypes();\n         final String anyTypeTest = \"anyTypeTest2\";\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", anyTypeTest);\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", \"csv\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n \n-        UTILITY_UI.getTester().assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n-        UTILITY_UI.getTester().assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n \n         // issue SYNCOPE-1111\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n+        TESTER.assertLabel(\n                 \"body:content:body:container:content:tabbedPanel:tabs-container:tabs:4:link:title\",\n                 anyTypeTest);\n     }\n@@ -100,25 +100,25 @@ public void update() {\n         createAnyTypeClassWithoutSchema(name);\n         browsingToAnyTypes();\n \n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", name + \",minimal group\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n@@ -127,28 +127,28 @@ public void delete() {\n         createAnyType(name);\n         browsingToAnyTypes();\n \n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n-        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.cleanupFeedbackMessages();\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(component);\n     }"},{"sha":"0b00d905543aa4b4adada8bf5508813689cc78a3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BatchesITCase.java","status":"modified","additions":84,"deletions":84,"changes":168,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -44,70 +44,70 @@ public void login() {\n \n     @Test\n     public void users() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(CONTAINER\n+        FormTester formTester = TESTER.newFormTester(CONTAINER\n                 + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(CONTAINER + \"searchContainer:resultTable:tablePanel:batchLink\",\n+        TESTER.executeAjaxEvent(CONTAINER + \"searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(CONTAINER\n+        TESTER.assertComponent(CONTAINER\n                 + \"searchContainer:resultTable:batchModal:form:content:content:container\", WebMarkupContainer.class);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        assertNotNull(findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:batchModal:form:content:content:container\", \"rossini\"));\n     }\n \n     @Test\n     public void userResource() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container\", \"resource-csv\"));\n     }\n \n@@ -123,256 +123,256 @@ public void userStatusOnSyncopeOnly() {\n \n     private static void userStatusBatch(final int index, final String resource) {\n         // suspend \n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // enable\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath()\n                 + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         // suspend link\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n                 + \"second:container:actions:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n                 Constants.ON_CLICK);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath()\n                 + \":cells:1:cell:check\");\n         assertEquals(Status.SUSPENDED, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n         // re-activate\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // enable\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         // suspend link\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n                 + \"second:container:actions:actionRepeater:1:action:action\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n                 Constants.ON_CLICK);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath()\n                 + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n \n     @Test\n     public void groupResource() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-ldap\");\n         assertNotNull(component);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-ldap\"));\n     }\n \n     @Test\n     public void printerResource() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n         \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n-        component = UTILITY_UI.findComponentByProp(\"resource\",\n+        component = findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-db-scripted\");\n         assertNotNull(component);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-db-scripted\"));\n     }\n \n     @Test\n     public void executePropagationTask() {\n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:container:selectedObjects:body:rows:1:cells:1:cell\", Label.class);\n     }"},{"sha":"64c0856d6df6eda556641b97d4a6459822db211c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -29,31 +29,31 @@ public class DisplayAttributesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void readAndSet() {\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \"searchContainer:tablehandling:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer:form\");\n \n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"3:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n }"},{"sha":"dc2ebc41a2e189abda1c8047350a31a144c8eb93","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":63,"deletions":63,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -44,83 +44,83 @@ public void login() {\n \n     @Test\n     public void read() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:7:outer:container:content:togglePanelContainer:membersForm\");\n \n         formTester.select(\"type:dropDownChoiceField\", 0);\n         formTester.submit(\"changeit\");\n \n-        UTILITY_UI.getTester().assertModelValue(TAB_PANEL\n+        TESTER.assertModelValue(TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:dialog:header:header-label\", \"USER members of artDirector\");\n-        assertNotNull(UTILITY_UI.findComponentByProp(\"username\", TAB_PANEL\n+        assertNotNull(findComponentByProp(\"username\", TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:form:content:searchResult:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void filteredSearch() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n                 + \"value:textField\", TextField.class);\n     }\n \n     private static void cloneGroup(final String group) {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group);\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:name:textField\", group + \"_clone\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group + \"_clone\");\n         assertNotNull(component);\n     }\n@@ -129,131 +129,131 @@ private static void cloneGroup(final String group) {\n     public void clickToCloneGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:10:action:action\"), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void editGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n         // -------------------------\n         // SYNCOPE-1026\n         // -------------------------\n-        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:\"\n                 + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n                 + \"textField\").getDefaultModelObjectAsString(), \"[823074dc-d280-436d-a7dd-07399fae48ec] puccini\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:ownerContainer:search:userOwnerReset\");\n \n-        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:\"\n                 + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n                 + \"textField\").getDefaultModelObjectAsString(), StringUtils.EMPTY);\n         // -------------------------\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:10:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:10:action:action\"), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void checkDeleteGroupLink() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:10:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }"},{"sha":"acdf767c8162225ab132c2196b94ef02b51102a0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -41,64 +41,64 @@ public class LogsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        UTILITY_UI.getTester().assertRenderedPage(Logs.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        TESTER.assertRenderedPage(Logs.class);\n     }\n \n     @Test\n     public void readCoreLogs() {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"io.swagger\"));\n     }\n \n     @Test\n     public void updateCoreLogs() {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"io.swagger\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\n+        TESTER.getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", DropDownChoice.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void readConsoleLogs() {\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\",\n                 AjaxFallbackLink.class);\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.wicket\"));\n     }\n \n     @Test\n     public void updateConsoleLogs() {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.wicket\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\n+        TESTER.getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     private static Component searchLog(final String property, final String searchPath, final String key) {\n-        Component component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(searchPath);\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n \n         Component result = component.getPage().\n                 visitChildren(ListItem.class, (final ListItem<LoggerTO> object, final IVisit<Component> visit) -> {"},{"sha":"d447517832bfaef28ab23e8cd931b838aa383ddd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":57,"deletions":57,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -35,52 +35,52 @@ public class NotificationsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        UTILITY_UI.getTester().assertRenderedPage(Notifications.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.assertRenderedPage(Notifications.class);\n     }\n \n     private static void createNotification(final String sender, final String subject) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n \n         formTester.select(\"content:form:view:template:dropDownChoiceField\", 2);\n         formTester.select(\"content:form:view:traceLevel:dropDownChoiceField\", 0);\n         formTester.setValue(\"content:form:view:sender:textField\", sender);\n         formTester.setValue(\"content:form:view:subject:textField\", subject);\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoErrorMessage();\n \n         // -------------------------------\n         // recipients\n         // -------------------------------\n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:form:\"\n                 + \"view:staticRecipients:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n         formTester.setValue(\"content:form:view:staticRecipients:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"textField\", \"recipient@syncope.org\");\n         formTester.setValue(\"content:form:view:selfAsRecipient:checkboxField\", true);\n         formTester.setValue(\"content:form:view:recipientAttrName:textField\", \"email\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoErrorMessage();\n \n         // -------------------------------\n         // generate event to populate eventsPanel\n         // -------------------------------\n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         // -------------------------------\n@@ -89,7 +89,7 @@ private static void createNotification(final String sender, final String subject\n         // select event template\n         // -------------------------------\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n                 + \"form:view:eventSelection:eventsContainer:eventsPanel:successGroup\",\n                 Constants.ON_CLICK);\n@@ -98,25 +98,25 @@ private static void createNotification(final String sender, final String subject\n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:finish\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n     }\n \n     @Test\n     public void read() {\n-        assertNull(UTILITY_UI.findComponentByProp(KEY,\n+        assertNull(findComponentByProp(KEY,\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1));\n     }\n@@ -129,88 +129,88 @@ public void create() {\n     @Test\n     public void update() {\n         createNotification(\"update@syncope.org\", \"createToUpdate\");\n-        Component result = UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToUpdate\");\n \n         // edit notification\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void execute() {\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n-        Component result = UTILITY_UI.findComponentByProp(\"subject\",\n+        Component result = findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"Password Reset request\");\n \n         // notification tasks link\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        result = UTILITY_UI.findComponentByProp(\"subject\",\n+        result = findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n         // execute task\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:3:action:action\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n-        result = UTILITY_UI.findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Password Reset request\");\n \n         // notification tasks link\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        result = UTILITY_UI.findComponentByProp(\"subject\",\n+        result = findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n         // view task\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:title\", \"Executions\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"subject\",\n+        assertNotNull(findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\"));\n@@ -219,26 +219,26 @@ public void execute() {\n     @Test\n     public void delete() {\n         createNotification(\"delete@syncope.org\", \"createToDelete\");\n-        Component result = UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n \n         // delete task\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\"));\n     }\n }"},{"sha":"e2c36933a8cb1dd27b6ef3710c6419181e0d3ace","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -34,97 +34,97 @@ public class ParametersITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:keymasterLI:keymasterUL:parametersLI:parameters\");\n-        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n+        TESTER.clickLink(\"body:keymasterLI:keymasterUL:parametersLI:parameters\");\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void readParameter() {\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n-        assertNotNull(UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"authentication.statuses\"));\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        assertNotNull(findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"authentication.statuses\"));\n     }\n \n     @Test\n     public void createParameter() {\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester =\n-                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"testParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void updateParameter() {\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\",\n+        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\",\n                 \"notification.maxRetries\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester =\n-                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:spinner\", \"70\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void deleteParameter() {\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester =\n-                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"deleteParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        Component result = UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n+        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"43ba620562fb229419722c6919e66a5f8a371530","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":236,"deletions":236,"changes":472,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -37,243 +37,243 @@ public class PoliciesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n     }\n \n     private static void createAccountPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n         formTester.setValue(\"content:fields:3:field:paletteField:recorder\", \"ws-target-resource-nopropagation4\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:3:field:paletteField:recorder\", \"ws-target-resource-nopropagation4\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n         assertNotNull(component);\n     }\n \n     private static void createPasswordPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private static void createPullPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private static void deleteAccountPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private static void deletePasswordPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private static void deletePullPolicy(final String description) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     @Test\n     public void read() {\n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"an account policy\"));\n     }\n \n@@ -289,40 +289,40 @@ public void cloneDeleteAccountPolicy() {\n         final String description = \"My Test Account Policy to be cloned\";\n         createAccountPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + '2');\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deleteAccountPolicy(description);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + '2'));\n \n         deleteAccountPolicy(description + '2');\n@@ -340,40 +340,40 @@ public void cloneDeletePasswordPolicy() {\n         final String description = \"My Test Password Policy to be cloned\";\n         createPasswordPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + '2');\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deletePasswordPolicy(description);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + '2'));\n \n         deletePasswordPolicy(description + '2');\n@@ -391,40 +391,40 @@ public void cloneDeletePullPolicy() {\n         final String description = \"My Test Pull Policy to be cloned\";\n         createPullPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + '2');\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deletePullPolicy(description);\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + '2'));\n \n         deletePullPolicy(description + '2');\n@@ -435,93 +435,93 @@ public void createUpdateDeleteAccountPolicy() {\n         final String description = \"Account Policy To Be Updated\";\n         createAccountPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n         deleteAccountPolicy(description);\n     }\n \n     private static void composeDefaultAccountPolicy(final String policyDescription) {\n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", policyDescription);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:utility\");\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n     }\n \n     @Test\n@@ -537,50 +537,50 @@ public void createUpdateDeletePasswordPolicy() {\n         final String description = \"Password Policy To Be Updated\";\n         createPasswordPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -592,42 +592,42 @@ public void createComposeDeletePasswordPolicy() {\n         final String description = \"Password Policy To Be Composed\";\n         createPasswordPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:utility\");\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n         deletePasswordPolicy(description);\n     }\n@@ -637,50 +637,50 @@ public void createUpdateDeletePullPolicy() {\n         final String description = \"Pull Policy To Be Updated\";\n         createPullPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + '2');\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n-        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + '2');\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description + '2');\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -692,46 +692,46 @@ public void createComposeDeletePullPolicy() {\n         final String description = \"Pull Policy To Be Composed\";\n         createPullPolicy(description);\n \n-        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+        Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\",\n                 Modal.class);\n \n-        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        component = UTILITY_UI.findComponentById(\n+        component = findComponentById(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:view:0:panel:rule\",\n                 \"dropDownChoiceField\");\n         assertNotNull(component);\n \n         formTester.setValue(component, \"0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(component, Constants.ON_CHANGE);\n+        TESTER.executeAjaxEvent(component, Constants.ON_CHANGE);\n         formTester.setValue(component, \"0\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.closeCallBack(modal);\n+        closeCallBack(modal);\n \n         deletePullPolicy(description);\n     }\n@@ -744,69 +744,69 @@ public void issueSYNCOPE1030() {\n         composeDefaultAccountPolicy(description);\n \n         // goto realms\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n \n         // edit root realm\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         // set new account policy\n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n                 + \"accountPolicy:field-label\", \"Account Policy\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.select(\"view:details:container:accountPolicy:dropDownChoiceField\", 0);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n         // create user with a valid account name\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\",\n+        Component component = findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:9:\"\n                 + \"action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -815,42 +815,42 @@ public void issueSYNCOPE1030() {\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\", \"ross1030@apace.org\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\",\n+        component = findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNotNull(component);\n \n         // delete the new user\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n                 + \"action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:10:\"\n                 + \"action:action\"), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        component = UTILITY_UI.findComponentByProp(\"username\",\n+        component = findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNull(component);\n \n         // delete default policy\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n         deleteAccountPolicy(description);\n     }\n }"},{"sha":"1870d494c1560b922fde220d32c6cf9910e7cf63","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":76,"deletions":76,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -34,241 +34,241 @@ public class RealmsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void read() {\n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n                 \"Account Policy\");\n     }\n \n     @Test\n     public void create() {\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:0:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:generics:name:textField\", \"testRealm\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n \n         // remove the new realm just created\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:realmChoicePanel:container:realmsFragment:realms:btn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:realmChoicePanel:container:realmsFragment:realms:dropdown-menu:buttons:5:button\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:3:action:action\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n                 \"Account Policy\");\n \n-        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");\n     }\n \n     @Test\n     public void update() {\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void addUserTemplate() {\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:realmChoicePanel:container:realmsFragment:realms:btn\",\n                 Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:realmChoicePanel:container:realmsFragment:realms:dropdown-menu:buttons:4:button\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:templateModal\", Modal.class);\n+        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"'k' + firstname\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:templateModal\", Modal.class);\n+        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n+        TESTER.assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n                 \"'k' + firstname\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void verifyPropagation() {\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:btn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"even\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"resource-ldap-orgunit\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n         // ----------------------------------\n         // Check for propagation results\n         // ----------------------------------\n-        Component component = UTILITY_UI.findComponentByProp(\"resource\",\n+        Component component = findComponentByProp(\"resource\",\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        UTILITY_UI.getTester().clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:leftAttribute:field-label\", \"__NAME__\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:leftAttribute:textField\", null);\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:rightAttribute:field-label\", \"__NAME__\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:rightAttribute:textField\",\n                 \"ou=even,o=isp\");\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"even\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n         // ----------------------------------\n         // Check for propagation results\n         // ----------------------------------\n-        component = UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        UTILITY_UI.getTester().clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:leftAttribute:field-label\", \"ou\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:leftAttribute:textField\", \"even\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:rightAttribute:field-label\", \"ou\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:rightAttribute:textField\", null);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n     }"},{"sha":"9f98d4b534e56aa5a1b7e9833a43a7c47c5b3f7b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypesITCase.java","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -35,17 +35,17 @@ public class RelationshipTypesITCase extends AbstractTypesITCase {\n     public void read() {\n         browsingToRelationshipType();\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"inclusion\");\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, \"inclusion\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:1:cell\", Label.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n@@ -55,12 +55,12 @@ public void create() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n-        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n-        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n     }\n \n     @Test\n@@ -69,22 +69,22 @@ public void update() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"new description\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n@@ -93,26 +93,26 @@ public void delete() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n \n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.cleanupFeedbackMessages();\n+        result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(result);\n     }"},{"sha":"c12f2baa1133a5ab2e64ec598911e9f70c55227a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":37,"deletions":37,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -35,131 +35,131 @@ public class ReportsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n-        UTILITY_UI.getTester().assertRenderedPage(Reports.class);\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n+        TESTER.assertRenderedPage(Reports.class);\n     }\n \n     private static void createReport(final String name) {\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:name:textField\", name);\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"0\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n                 + \":0:outer:form:content:form:view:schedule:seconds:textField\", TextField.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n     }\n \n     private static void delete(final String name) {\n-        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n \n-        Component result = UTILITY_UI.findComponentByProp(\n+        Component result = findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\n+        assertNull(findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteReport\"));\n     }\n \n     @Test\n     public void read() {\n-        Component result = UTILITY_UI.findComponentByProp(\n+        Component result = findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"test\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:title\", \"Executions of report 'test'\");\n-        result = UTILITY_UI.findComponentByProp(\"status\",\n+        result = findComponentByProp(\"status\",\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"SUCCESS\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:firstLevelContainer:\"\n                 + \"first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n                 + \"actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:secondLevelContainer:back\");\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\n+        assertNotNull(findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"reconciliation\"));\n     }\n \n     @Test\n     public void update() {\n         createReport(\"updateReport\");\n-        Component result = UTILITY_UI.findComponentByProp(\n+        Component result = findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateReport\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n                 + \"0:outer:dialog:header:header-label\", \"Edit Report updateReport\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"1\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n         delete(\"updateReport\");\n     }"},{"sha":"ade1a0b84a6c8602c45afbf64013acdb522e30c5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -34,67 +34,67 @@ public class RolesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        TESTER.assertRenderedPage(Security.class);\n     }\n \n     private static void createRole(final String name) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", name);\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE,RELATIONSHIPTYPE_READ,RELATIONSHIPTYPE_LIST\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n     }\n \n     @Test\n     public void read() {\n-        Component result = UTILITY_UI.findComponentByProp(KEY,\n+        Component result = findComponentByProp(KEY,\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Other\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:header:header-label\",\n                 \"Role 'Other' members\");\n \n-        assertNotNull(UTILITY_UI.findComponentByProp(\"username\",\n+        assertNotNull(findComponentByProp(\"username\",\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n                 + \"content:searchResult:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"rossini\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n@@ -107,60 +107,60 @@ public void create() {\n     @Test\n     public void update() {\n         createRole(\"updateRole\");\n-        Component result = UTILITY_UI.findComponentByProp(KEY,\n+        Component result = findComponentByProp(KEY,\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateRole\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", \"updateRole\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void delete() {\n         createRole(\"deleteRole\");\n-        Component result = UTILITY_UI.findComponentByProp(KEY,\n+        Component result = findComponentByProp(KEY,\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:4:action:action\"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:4:action:action\"), \"onclick\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(KEY,\n+        assertNull(findComponentByProp(KEY,\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\"));\n     }"},{"sha":"f10207e253a16323ee6b09e3f340e7f52485b278","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -35,20 +35,20 @@ public class SchemasITCase extends AbstractTypesITCase {\n     @Test\n     public void readPlainSchema() {\n         browsingToPlainSchemas();\n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", \"aLong\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:form:view:kind:dropDownChoiceField\", DropDownChoice.class);\n@@ -57,133 +57,133 @@ public void readPlainSchema() {\n     @Test\n     public void createPlainSchema() {\n         browsingToPlainSchemas();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", \"zBoolean\");\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"3\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n     }\n \n     @Test\n     public void updatePlainSchema() {\n         browsingToPlainSchemas();\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n+        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n \n-        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:form:view:kind:dropDownChoiceField\", DropDownChoice.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:multivalue:checkboxField\", \"true\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void deletePlainSchema() {\n         browsingToPlainSchemas();\n         //create new Plain Schema\n         final String schemaName = \"zStringDelete\";\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", schemaName);\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");;\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");;\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n         //delete plain schema\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:bottomToolbars:toolbars:3:span:navigator:last\");\n \n-        UTILITY_UI.getTester().assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n+        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName));\n+        assertNull(findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName));\n     }\n \n     @Test\n     public void createVirtualSchema() {\n         browsingToVirtualSchemas();\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form\");\n \n         formTester.setValue(\"content:form:view:details:resource:dropDownChoiceField\", \"0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:form:view:details:resource:dropDownChoiceField\", Constants.ON_CHANGE);\n \n@@ -192,33 +192,33 @@ public void createVirtualSchema() {\n         formTester.setValue(\"content:form:view:details:anyType:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:form:view:details:extAttrName:textField\", \"virattr\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:2:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:2:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n-        Component result = UTILITY_UI.findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        Component result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\"));\n+        assertNull(findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\"));\n     }\n }"},{"sha":"168b70eee81291d23427d413784665289187fde0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -37,44 +37,44 @@ public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        TESTER.assertRenderedPage(Security.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n     }\n \n     private static void createSecurityQuestion(final String name) {\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 name);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n     }\n \n     @Test\n     public void read() {\n-        Label label = (Label) UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        Label label = (Label) TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:2:cell\");\n         assertTrue(label.getDefaultModelObjectAsString().startsWith(\"What&#039;s your \"));\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\",\n                 IndicatingAjaxLink.class);\n@@ -88,53 +88,53 @@ public void create() {\n     @Test\n     public void update() {\n         createSecurityQuestion(\"What's your preferred color?\");\n-        Component result = UTILITY_UI.findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"What's your preferred color?\");\n \n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your preferred car?\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void delete() {\n         String name = \"What's your preferred color?\";\n         createSecurityQuestion(name);\n \n-        Component result = UTILITY_UI.findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 name);\n         assertNotNull(result);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), \"onclick\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        assertNull(UTILITY_UI.findComponentByProp(\"content\",\n+        assertNull(findComponentByProp(\"content\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable\", name));"},{"sha":"247ef5e699b162a693655e80b4b67a06124d678c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":168,"deletions":168,"changes":336,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -43,116 +43,116 @@ public class TopologyITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        UTILITY_UI.getTester().assertRenderedPage(Topology.class);\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        TESTER.assertRenderedPage(Topology.class);\n     }\n \n     @Test\n     public void showTopology() {\n-        UTILITY_UI.getTester().assertComponent(\"body:syncope\", WebMarkupContainer.class);\n-        UTILITY_UI.getTester().assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n-        UTILITY_UI.getTester().assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:syncope\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n     }\n \n     @Test\n     public void showTopologyToggleMenu() {\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:pull\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:push\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:tasks\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:create\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n     }\n \n     @Test\n     public void resourceBatchAction() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:reconciliation\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n         formTester.setValue(\"content:anyTypes:dropDownChoiceField\", \"0\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:anyTypes:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         formTester.setValue(\"content:anyTypes:dropDownChoiceField\", \"0\");\n \n-        component = UTILITY_UI.findComponentByProp(\"key\",\n+        component = findComponentByProp(\"key\",\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\");\n \n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void editProvisioning() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:fields:0\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:mappings:1:itemTransformers:icon\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:view:mapping:mappingContainer:mappings:0:itemTransformers:alertsLink\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:outerObjectsRepeater:0:outer:container:content:togglePanelContainer:\"\n                 + \"form:classes:paletteField\", NonI18nPalette.class);\n@@ -162,72 +162,72 @@ public void editProvisioning() {\n     public void createNewResurceAndProvisionRules() {\n         final String res = UUID.randomUUID().toString();\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:conns:0:conns:0:conn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:create\", Constants.ON_CLICK);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n \n         formTester.setValue(\"view:container:key:textField\", res);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:next\");\n \n         // click on finish to create the external resource \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", res);\n+        Component component = findComponentByProp(\"key\", \"body:resources\", res);\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n         // -- create new provision rules for the current resource\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:objectTypeToggle:container:\"\n                 + \"content:togglePanelContainer:objectTypeForm\");\n         formTester.select(\"type:dropDownChoiceField\", 1);\n         formTester.submit(\"changeit\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n         // choose object class\n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n         // aux classes\n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n         // set a new mapping rule\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:addMappingBtn\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n \n@@ -236,106 +236,106 @@ public void createNewResurceAndProvisionRules() {\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n \n         formTester.submit(\"buttons:next\");\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n         // finish\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:finish\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n \n         // save\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:fields:0\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:0\", WebMarkupContainer.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:cancel\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", res);\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        component = findComponentByProp(\"key\", \"body:resources\", res);\n         assertNull(component);\n     }\n \n     @Test\n     public void executePullTask() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        component = UTILITY_UI.findComponentByProp(\"name\",\n+        component = findComponentByProp(\"name\",\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:3:action:action\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:startAt:container:content:togglePanelContainer:startAtForm:startAt\");\n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        component = UTILITY_UI.findComponentByProp(\"name\",\n+        component = findComponentByProp(\"name\",\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"Executions of task &#039;TestDB Task&#039;\");\n \n         int iteration = 0;\n         do {\n             try {\n-                component = UTILITY_UI.findComponentByProp(\"status\",\n+                component = findComponentByProp(\"status\",\n                         \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                         + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                         + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n@@ -348,248 +348,248 @@ public void executePullTask() {\n                 } catch (Exception ignore) {\n                 }\n \n-                UTILITY_UI.getTester().executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+                TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                         + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:\"\n                         + \"searchContainer:tablehandling:actionRepeater:0:action:action\", Constants.ON_CLICK);\n \n                 iteration++;\n             }\n         } while (iteration < 10);\n \n-        component = UTILITY_UI.findComponentByProp(\"status\",\n+        component = findComponentByProp(\"status\",\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:second:\"\n                 + \"executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void readPropagationTaskExecutions() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 WebMarkupContainer.class);\n \n-        component = UTILITY_UI.findComponentByProp(\"operation\",\n+        component = findComponentByProp(\"operation\",\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        component = UTILITY_UI.findComponentByPropNotNull(\"start\",\n+        component = findComponentByPropNotNull(\"start\",\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\");\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(\n+        TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"CREATE __ACCOUNT__\");\n \n-        component = UTILITY_UI.findComponentByProp(\"status\",\n+        component = findComponentByProp(\"status\",\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"FAILURE\");\n \n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void editPushTask() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:description:textField\", \"test\");\n         formTester.submit(\"buttons:next\");\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:filters:0:filters:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n                 + \"value:textField\", \"_NO_ONE_\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void createSchedTask() {\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:add\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"test\");\n         formTester.select(\"view:jobDelegate:dropDownChoiceField\", 0);\n \n         formTester.submit(\"buttons:next\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:wizard:form:view:schedule:seconds:textField\", TextField.class);\n \n         formTester.submit(\"buttons:finish\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void addGroupTemplate() {\n-        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:4:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"'k' + name\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:4:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:name:textField\",\n                 \"'k' + name\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void reloadConnectors() {\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:reload\",\n                 AjaxLink.class);\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n-        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n-        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"04fa2091b361c42b708654a777a00cadb6c304af","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":187,"deletions":187,"changes":374,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -45,63 +45,63 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        UTILITY_UI.getTester().clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n                 + \"textField\", TextField.class);\n-        UTILITY_UI.getTester().assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:1:panel:container:value:\"\n                 + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void forceChangePassword() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void clickToCloneUser() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n@@ -110,76 +110,76 @@ public void clickToCloneUser() {\n \n     @Test\n     public void editRelationships() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:actions:\"\n                 + \"actionRepeater:0:action:action\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.setValue(\"view:relationships:specification:type:dropDownChoiceField\", \"1\");\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n                 + \"specification:type:dropDownChoiceField\", Constants.ON_CHANGE);\n         // The ON_CHANGE above should enable this component, but it doesn't; doing it by hand\n-        Component otherType = UTILITY_UI.findComponentById(\n+        Component otherType = findComponentById(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:specification\",\n                 \"otherType\");\n         assertNotNull(otherType);\n         otherType.setEnabled(true);\n \n         formTester.setValue(\"view:relationships:specification:otherType:dropDownChoiceField\", \"PRINTER\");\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n                 + \"specification:otherType:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        component = UTILITY_UI.findComponentByProp(\"name\", TAB_PANEL + \"outerObjectsRepeater:\"\n+        component = findComponentByProp(\"name\", TAB_PANEL + \"outerObjectsRepeater:\"\n                 + \"0:outer:form:content:form:view:relationships:specification:searchPanelContainer:searchPanel:\"\n                 + \"searchResultPanel:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:\"\n                 + \"dataTable:body:rows:1:cells:2:cell\", \"Canon MF 8030cn\");\n@@ -190,114 +190,114 @@ public void editRelationships() {\n \n     @Test\n     public void editUser() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n     }\n \n     @Test\n     public void editUserMembership() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:btn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNull(component);\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n@@ -306,178 +306,178 @@ public void editUserMembership() {\n                 + \"schemas:0:panel:spinner\", \"1\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // reset ....\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"root,otherchild\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void editUserMemberships() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:btn\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container\"\n                 + \":realmsFragment:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // click on \"edit\"\n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // edit multivalue text field, set 2 elements in total\n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n                 TextField.class);\n         formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", \"2019-03-05\");\n \n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panelPlus:add\"));\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n                 TextField.class);\n         formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", \"2019-03-06\");\n \n-        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panelPlus:add\"));\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         // reopen form and go to Plain Attributes page...\n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // ... check multivalue field values has been saved\n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n                 TextField.class);\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n                 TextField.class);\n@@ -488,77 +488,77 @@ public void editUserMemberships() {\n         Calendar cal2 = Calendar.getInstance();\n         cal2.set(2019, Calendar.MARCH, 6, 0, 0, 0);\n         cal2.set(Calendar.MILLISECOND, 0);\n-        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n-        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", cal2.getTime());\n \n         // ... remove all values from multivalue field\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:drop\",\n                 Constants.ON_CLICK);\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:drop\",\n                 Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         // reopen form and go to Plain Attributes page...\n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+        TESTER.executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // ... check multivalue field is now empty\n-        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", null);\n-        component = UTILITY_UI.findComponentByProp(\"syncope-path\", TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        component = findComponentByProp(\"syncope-path\", TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm\",\n                 TAB_PANEL + \"outerObjectsRepeater:0:\"\n@@ -572,51 +572,51 @@ public void editUserMemberships() {\n \n     @Test\n     public void checkDeleteUsrLink() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:10:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n \n     @Test\n     public void editDateTimeField() {\n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:datepicker\", \"1/19/17\");\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:timepicker\", \"12:00 AM\");\n@@ -626,115 +626,115 @@ public void editDateTimeField() {\n \n         formTester.submit(\"buttons:finish\");\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n         Calendar cal = Calendar.getInstance();\n         cal.set(2017, Calendar.JANUARY, 19, 0, 0, 0);\n         cal.set(Calendar.MILLISECOND, 0);\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:body:container:content:\"\n+        TESTER.assertModelValue(\"body:content:body:container:content:\"\n                 + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"0:outer:form:content:form:view:plainSchemas:tabs:0:\"\n                 + \"body:content:schemas:1:panel:field:datepicker\", cal.getTime());\n \n-        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\"body:content:body:\"\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:\"\n                 + \"container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:plainSchemas:\"\n                 + \"tabs:0:body:content:schemas:1:panel:field:timepicker\").getDefaultModelObjectAsString(), \"12:00 AM\");\n \n-        UTILITY_UI.getTester().assertModelValue(\"body:content:body:container:content:\"\n+        TESTER.assertModelValue(\"body:content:body:container:content:\"\n                 + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:0:outer:form:content:\"\n                 + \"form:view:plainSchemas:tabs:0:body:content:schemas:8:panel:\"\n                 + \"multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n     }\n \n     @Test\n     public void changePassword() {\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password345\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password345\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n-        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password123\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password123\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"7e44616d15038352b439a06ca6343112198b54f6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AbstractEnduserITCase.java","status":"modified","additions":13,"deletions":23,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -23,7 +23,6 @@\n import com.giffing.wicket.spring.boot.starter.app.classscanner.candidates.WicketClassCandidatesHolder;\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.core.settings.general.GeneralSettingsProperties;\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n-\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -49,7 +48,6 @@\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.fit.ui.AbstractUITCase;\n-import org.apache.syncope.fit.ui.UtilityUIT;\n import org.apache.wicket.util.tester.FormTester;\n \n public abstract class AbstractEnduserITCase extends AbstractUITCase {\n@@ -64,8 +62,6 @@ public abstract class AbstractEnduserITCase extends AbstractUITCase {\n \n     protected static SecurityQuestionService securityQuestionService;\n \n-    protected static UtilityUIT UTILITY_UI;\n-\n     @ImportAutoConfiguration(classes = { SelfKeymasterClientContext.class })\n     @Configuration\n     public static class SyncopeEnduserWebApplicationTestConfig {\n@@ -112,22 +108,16 @@ public PreviewUtils previewUtils() {\n \n     @BeforeAll\n     public static void setUp() {\n-        synchronized (LOG) {\n-            if (UTILITY_UI == null) {\n-                AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n-                ctx.register(SyncopeEnduserWebApplicationTestConfig.class);\n-                ctx.register(SyncopeWebApplication.class);\n-                ctx.refresh();\n-\n-                UTILITY_UI = new UtilityUIT(new WicketTester(ctx.getBean(SyncopeWebApplication.class)));\n-            }\n-\n-            if (SYNCOPE_SERVICE == null) {\n-                SYNCOPE_SERVICE = new SyncopeClientFactoryBean().\n-                        setAddress(ADDRESS).create(ADMIN_UNAME, ADMIN_PWD).\n-                        getService(SyncopeService.class);\n-            }\n-        }\n+        AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n+        ctx.register(SyncopeEnduserWebApplicationTestConfig.class);\n+        ctx.register(SyncopeWebApplication.class);\n+        ctx.refresh();\n+\n+        TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n+\n+        SYNCOPE_SERVICE = new SyncopeClientFactoryBean().\n+                setAddress(ADDRESS).create(ADMIN_UNAME, ADMIN_PWD).\n+                getService(SyncopeService.class);\n     }\n \n     @BeforeAll\n@@ -179,10 +169,10 @@ public static void restSetup() {\n     }\n \n     protected void doLogin(final String user, final String passwd) {\n-        UTILITY_UI.getTester().startPage(Login.class);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"login\");\n+        FormTester formTester = TESTER.newFormTester(\"login\");\n         formTester.setValue(\"username\", user);\n         formTester.setValue(\"password\", passwd);\n         formTester.submit(\"submit\");"},{"sha":"28e7e5980c9a5d7717ec68ba3e9f697645b0b51c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/EnduserITCase.java","status":"modified","additions":97,"deletions":98,"changes":195,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FEnduserITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -52,86 +52,86 @@ public class EnduserITCase extends AbstractEnduserITCase {\n     public void selfCreate() {\n         String username = \"testUser\";\n \n-        UTILITY_UI.getTester().startPage(Login.class);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n-        UTILITY_UI.getTester().clickLink(\"self-registration\");\n+        TESTER.clickLink(\"self-registration\");\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n+        FormTester formTester = TESTER.newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n         formTester.setValue(\"view:username:textField\", username);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required field is correctly set\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n+        TESTER.assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"fullname\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"surname\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"userId\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n \n-        formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n+        formTester = TESTER.newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n-        formTester.setValue(UTILITY_UI.findComponentByMarkupId(WIZARD_FORM\n+        formTester.setValue(findComponentByMarkupId(WIZARD_FORM\n                 + \":view:plainSchemas:tabs:0:body:content:schemas\",\n                 \"fullname\").getPageRelativePath().replace(WIZARD_FORM + ':', StringUtils.EMPTY) + \":textField\",\n                 \"User fullname\");\n-        formTester.setValue(UTILITY_UI.findComponentByMarkupId(WIZARD_FORM\n+        formTester.setValue(findComponentByMarkupId(WIZARD_FORM\n                 + \":view:plainSchemas:tabs:0:body:content:schemas\",\n                 \"surname\").getPageRelativePath().replace(WIZARD_FORM + ':', StringUtils.EMPTY) + \":textField\",\n                 \"User surname\");\n-        formTester.setValue(UTILITY_UI.\n+        formTester.setValue(\n                 findComponentByMarkupId(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"userId\").\n-                getPageRelativePath().replace(WIZARD_FORM + ':', StringUtils.EMPTY) + \":textField\",\n+                        getPageRelativePath().replace(WIZARD_FORM + ':', StringUtils.EMPTY) + \":textField\",\n                 \"test@email.com\");\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required fields were correctly set\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+        TESTER.assertComponent(WIZARD_FORM\n                 + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n                 TextField.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n                 + \"multiValueContainer:innerForm:content:field-label\",\n                 Label.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n-        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n+        TESTER.assertRenderedPage(Login.class);\n+        TESTER.assertComponent(\"login:username\", TextField.class);\n \n         assertFalse(userService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(username).query()).\n                 build()).getResult().isEmpty());\n \n         assertNotNull(userService.read(username));\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n         // cleanup\n         userService.delete(username);\n@@ -153,48 +153,48 @@ public void selfPasswordReset() {\n                 .build());\n \n         final String pwdResetForm = \"body:content:selfPwdResetForm\";\n-        UTILITY_UI.getTester().startPage(Login.class);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n-        UTILITY_UI.getTester().clickLink(\"self-pwd-reset\");\n+        TESTER.clickLink(\"self-pwd-reset\");\n \n-        UTILITY_UI.getTester().assertRenderedPage(SelfPasswordReset.class);\n+        TESTER.assertRenderedPage(SelfPasswordReset.class);\n \n-        UTILITY_UI.getTester().assertComponent(pwdResetForm + \":selfPwdResetPanel:username\", TextField.class);\n-        UTILITY_UI.getTester().assertComponent(pwdResetForm + \":selfPwdResetPanel:securityQuestion\", TextField.class);\n+        TESTER.assertComponent(pwdResetForm + \":selfPwdResetPanel:username\", TextField.class);\n+        TESTER.assertComponent(pwdResetForm + \":selfPwdResetPanel:securityQuestion\", TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(pwdResetForm);\n+        FormTester formTester = TESTER.newFormTester(pwdResetForm);\n         assertNotNull(formTester);\n         // 1. set username to selfpwdreset\n-        formTester.setValue(UTILITY_UI.findComponentById(pwdResetForm + \":selfPwdResetPanel\", \"username\"),\n+        formTester.setValue(findComponentById(pwdResetForm + \":selfPwdResetPanel\", \"username\"),\n                 \"selfpwdreset\");\n         // 2. check that the question has been populated\n-        UTILITY_UI.getTester().executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:username\", Constants.ON_BLUR);\n-        UTILITY_UI.getTester().assertModelValue(pwdResetForm + \":selfPwdResetPanel:securityQuestion\", question.\n+        TESTER.executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:username\", Constants.ON_BLUR);\n+        TESTER.assertModelValue(pwdResetForm + \":selfPwdResetPanel:securityQuestion\", question.\n                 getContent());\n         // 3. submit form and receive an error\n-        formTester = UTILITY_UI.getTester().newFormTester(pwdResetForm);\n+        formTester = TESTER.newFormTester(pwdResetForm);\n         assertNotNull(formTester);\n-        UTILITY_UI.getTester().executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:submit\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertErrorMessages(\"InvalidSecurityAnswer []\");\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:submit\", Constants.ON_CLICK);\n+        TESTER.assertErrorMessages(\"InvalidSecurityAnswer []\");\n+        TESTER.cleanupFeedbackMessages();\n         // 3.1 set the correct answer\n-        formTester = UTILITY_UI.getTester().newFormTester(pwdResetForm);\n+        formTester = TESTER.newFormTester(pwdResetForm);\n         assertNotNull(formTester);\n-        UTILITY_UI.getTester().assertComponent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\", TextField.class);\n+        TESTER.assertComponent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\", TextField.class);\n         formTester.setValue(\"selfPwdResetPanel:securityAnswer\", \"ananswer\");\n-        UTILITY_UI.getTester().executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\", Constants.ON_CHANGE);\n-        UTILITY_UI.getTester().assertComponent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\",\n+        TESTER.executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\", Constants.ON_CHANGE);\n+        TESTER.assertComponent(pwdResetForm + \":selfPwdResetPanel:securityAnswer\",\n                 TextField.class);\n         // 4. submit form\n-        UTILITY_UI.getTester().assertNoFeedbackMessage(0);\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n-        UTILITY_UI.getTester().assertComponent(pwdResetForm + \":selfPwdResetPanel:submit\", Button.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:submit\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n-        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n-\n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.assertNoFeedbackMessage(0);\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertComponent(pwdResetForm + \":selfPwdResetPanel:submit\", Button.class);\n+        TESTER.executeAjaxEvent(pwdResetForm + \":selfPwdResetPanel:submit\", Constants.ON_CLICK);\n+        TESTER.assertRenderedPage(Login.class);\n+        TESTER.assertComponent(\"login:username\", TextField.class);\n+\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n@@ -205,106 +205,105 @@ public void mustChangePassword() {\n                         .operation(PatchOperation.ADD_REPLACE)\n                         .value(Boolean.TRUE).build()).build());\n \n-        UTILITY_UI.getTester().startPage(Login.class);\n+        TESTER.startPage(Login.class);\n         doLogin(\"mustchangepassword\", \"password123\");\n \n-        UTILITY_UI.getTester().assertRenderedPage(MustChangePassword.class);\n+        TESTER.assertRenderedPage(MustChangePassword.class);\n \n         final String changePwdForm = \"changePassword\";\n-        UTILITY_UI.getTester().assertComponent(changePwdForm + \":username\", TextField.class);\n-        UTILITY_UI.getTester().assertComponent(changePwdForm + \":password:passwordField\", PasswordTextField.class);\n-        UTILITY_UI.getTester().\n+        TESTER.assertComponent(changePwdForm + \":username\", TextField.class);\n+        TESTER.assertComponent(changePwdForm + \":password:passwordField\", PasswordTextField.class);\n+        TESTER.\n                 assertComponent(changePwdForm + \":confirmPassword:passwordField\", PasswordTextField.class);\n-        UTILITY_UI.getTester().assertModelValue(changePwdForm + \":username\", \"mustchangepassword\");\n+        TESTER.assertModelValue(changePwdForm + \":username\", \"mustchangepassword\");\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(changePwdForm);\n+        FormTester formTester = TESTER.newFormTester(changePwdForm);\n \n         assertNotNull(formTester);\n         // 1. set new password\n-        formTester.setValue(UTILITY_UI.findComponentById(changePwdForm + \":password\", \"passwordField\"), \"password124\");\n+        formTester.setValue(findComponentById(changePwdForm + \":password\", \"passwordField\"), \"password124\");\n         // 2. confirm password\n-        formTester.setValue(UTILITY_UI.findComponentById(changePwdForm + \":confirmPassword\", \"passwordField\"),\n+        formTester.setValue(findComponentById(changePwdForm + \":confirmPassword\", \"passwordField\"),\n                 \"password124\");\n         // 3. submit form\n-        UTILITY_UI.getTester().executeAjaxEvent(changePwdForm + \":submit\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(changePwdForm + \":submit\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n-        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n+        TESTER.assertRenderedPage(Login.class);\n+        TESTER.assertComponent(\"login:username\", TextField.class);\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n         doLogin(\"mustchangepassword\", \"password124\");\n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n     }\n \n     @Test\n     public void selfUpdate() {\n         String username = \"selfupdate\";\n         String newEmail = \"selfupdate@email.com\";\n \n-        UTILITY_UI.getTester().startPage(Login.class);\n+        TESTER.startPage(Login.class);\n         doLogin(username, \"password123\");\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n+        TESTER.assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"fullname\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"surname\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"userId\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n \n-        FormTester formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n+        FormTester formTester = TESTER.newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n-        UTILITY_UI.getTester().assertComponent(UTILITY_UI.findComponentByMarkupId(\n+        TESTER.assertComponent(findComponentByMarkupId(\n                 WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas\", \"email\").getPageRelativePath()\n                 + \":textField\",\n                 TextField.class);\n-        formTester.setValue(UTILITY_UI.findComponentByMarkupId(WIZARD_FORM\n+        formTester.setValue(findComponentByMarkupId(WIZARD_FORM\n                 + \":view:plainSchemas:tabs:0:body:content:schemas\",\n                 \"email\").getPageRelativePath().replace(WIZARD_FORM + ':', StringUtils.EMPTY) + \":textField\",\n                 newEmail);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required fields were correctly set\n-        UTILITY_UI.getTester().assertNoInfoMessage();\n-        UTILITY_UI.getTester().assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+        TESTER.assertComponent(WIZARD_FORM\n                 + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n                 TextField.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n                 + \"multiValueContainer:innerForm:content:field-label\",\n                 Label.class);\n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        TESTER.assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n \n-        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n \n-        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n-        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n+        TESTER.assertRenderedPage(Login.class);\n+        TESTER.assertComponent(\"login:username\", TextField.class);\n \n         assertEquals(\"active\", userService.read(username).getStatus());\n         assertEquals(newEmail, userService.read(username).getPlainAttr(\"email\").get().getValues().get(0));\n \n-        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n     }\n-\n }"},{"sha":"8b06c6ca47ce9439bf676c4ad5454f2b533e6cc7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ui/AbstractUITCase.java","status":"modified","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4d2ca352a2a1a3128cee57e4f7796c8c7cba558d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java?ref=4d2ca352a2a1a3128cee57e4f7796c8c7cba558d","patch":"@@ -18,7 +18,16 @@\n  */\n package org.apache.syncope.fit.ui;\n \n+import java.io.Serializable;\n+import java.lang.reflect.Method;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.behavior.AbstractAjaxBehavior;\n+import org.apache.wicket.core.util.lang.PropertyResolver;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.util.tester.WicketTester;\n+import org.apache.wicket.util.visit.IVisit;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -36,6 +45,67 @@ public abstract class AbstractUITCase {\n \n     protected static final String SCHEMA = \"schema\";\n \n+    protected static WicketTester TESTER;\n+\n     protected static SyncopeService SYNCOPE_SERVICE;\n \n+    protected static <V extends Serializable> Component findComponentByProp(\n+            final String property, final String searchPath, final V key) {\n+\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n+                    try {\n+                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                        if (getter != null && getter.invoke(object.getModelObject()).equals(key)) {\n+                            visit.stop(object);\n+                        }\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error invoke method\", e);\n+                    }\n+                });\n+    }\n+\n+    protected static <V extends Serializable> Component findComponentByPropNotNull(\n+            final String property, final String searchPath) {\n+\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n+                    try {\n+                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                        if (getter != null && getter.invoke(object.getModelObject()) != null) {\n+                            visit.stop(object);\n+                        }\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error invoke method\", e);\n+                    }\n+                });\n+    }\n+\n+    protected static Component findComponentById(final String searchPath, final String id) {\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n+                    if (object.getId().equals(id)) {\n+                        visit.stop(object);\n+                    }\n+                });\n+    }\n+\n+    protected static Component findComponentByMarkupId(final String searchPath, final String markupId) {\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n+                    if (object.getMarkupId().equals(markupId)) {\n+                        visit.stop(object);\n+                    }\n+                });\n+    }\n+\n+    protected static void closeCallBack(final Component modal) {\n+        modal.getBehaviors().stream().\n+                filter(behavior -> (behavior instanceof AbstractAjaxBehavior)).\n+                forEachOrdered(behavior -> TESTER.executeBehavior((AbstractAjaxBehavior) behavior));\n+    }\n }"},{"sha":"ced5a7f2bcad08e6b710e20a495617115b7f2e8e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ui/UtilityUIT.java","status":"removed","additions":0,"deletions":107,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -1,107 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.ui;\n-\n-import java.io.Serializable;\n-import java.lang.reflect.Method;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.MarkupContainer;\n-import org.apache.wicket.behavior.AbstractAjaxBehavior;\n-import org.apache.wicket.core.util.lang.PropertyResolver;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.util.tester.WicketTester;\n-import org.apache.wicket.util.visit.IVisit;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UtilityUIT {\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(UtilityUIT.class);\n-\n-    private final WicketTester tester;\n-\n-    public UtilityUIT(final WicketTester tester) {\n-        this.tester = tester;\n-    }\n-\n-    public <V extends Serializable> Component findComponentByProp(\n-            final String property, final String searchPath, final V key) {\n-\n-        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n-                    try {\n-                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n-                        if (getter != null && getter.invoke(object.getModelObject()).equals(key)) {\n-                            visit.stop(object);\n-                        }\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error invoke method\", e);\n-                    }\n-                });\n-    }\n-\n-    public <V extends Serializable> Component findComponentByPropNotNull(\n-            final String property, final String searchPath) {\n-\n-        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n-                    try {\n-                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n-                        if (getter != null && getter.invoke(object.getModelObject()) != null) {\n-                            visit.stop(object);\n-                        }\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error invoke method\", e);\n-                    }\n-                });\n-    }\n-\n-    public Component findComponentById(final String searchPath, final String id) {\n-        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n-                    if (object.getId().equals(id)) {\n-                        visit.stop(object);\n-                    }\n-                });\n-    }\n-    \n-    public Component findComponentByMarkupId(final String searchPath, final String markupId) {\n-        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n-                    if (object.getMarkupId().equals(markupId)) {\n-                        visit.stop(object);\n-                    }\n-                });\n-    }\n-\n-    public void closeCallBack(final Component modal) {\n-        modal.getBehaviors().stream().\n-                filter(behavior -> (behavior instanceof AbstractAjaxBehavior)).\n-                forEachOrdered(behavior -> tester.executeBehavior((AbstractAjaxBehavior) behavior));\n-    }\n-\n-    public WicketTester getTester() {\n-        return tester;\n-    }\n-\n-}"}]}