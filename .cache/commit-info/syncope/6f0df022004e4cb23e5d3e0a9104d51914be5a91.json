{"sha":"6f0df022004e4cb23e5d3e0a9104d51914be5a91","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZmMGRmMDIyMDA0ZTRjYjIzZTVkM2UwYTkxMDRkNTE5MTRiZTVhOTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-04-15T12:35:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-04-15T12:36:44Z"},"message":"[SYNCOPE-1629] Ensure to provide date search values as milliseconds when using JPA JSON","tree":{"sha":"83228240f1d75cef06356657ed873cb8fc363314","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/83228240f1d75cef06356657ed873cb8fc363314"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6f0df022004e4cb23e5d3e0a9104d51914be5a91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f0df022004e4cb23e5d3e0a9104d51914be5a91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f0df022004e4cb23e5d3e0a9104d51914be5a91","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f0df022004e4cb23e5d3e0a9104d51914be5a91/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6b518832be49821fbfd9605cb981414f861c914d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b518832be49821fbfd9605cb981414f861c914d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6b518832be49821fbfd9605cb981414f861c914d"}],"stats":{"total":71,"additions":49,"deletions":22},"files":[{"sha":"6356c611aa8a17bf4b51b7c4fe8bc016762e2bec","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -22,7 +22,6 @@\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n import java.io.Serializable;\n import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Date;\n@@ -82,8 +81,6 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private static final long serialVersionUID = -527351923968737757L;\n \n-    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = ThreadLocal.withInitial(SimpleDateFormat::new);\n-\n     protected static final AttributeModifier PREVENT_DEFAULT_RETURN = AttributeModifier.replace(\n             \"onkeydown\",\n             Model.of(\"if (event.keyCode == 13) { event.preventDefault(); }\"));\n@@ -516,8 +513,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 field.addOrReplace(value);\n                 target.add(value);\n             }\n-        }\n-        );\n+        });\n \n         AjaxDropDownChoicePanel<SearchClause.Type> type = new AjaxDropDownChoicePanel<>(\n                 \"type\", \"type\", new PropertyModel<>(searchClause, \"type\"));\n@@ -908,8 +904,10 @@ private void renderSearchValueField(\n                 break;\n \n             case Date:\n-                SimpleDateFormat df = DATE_FORMAT.get();\n-                df.applyPattern(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+                FastDateFormat fdf = FastDateFormat.getInstance(\n+                        plainSchemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : plainSchemaTO.getConversionPattern());\n \n                 value = new AjaxDateTimeFieldPanel(\n                         \"value\",\n@@ -922,7 +920,7 @@ private void renderSearchValueField(\n                     public Object getObject() {\n                         String date = (String) super.getObject();\n                         try {\n-                            return date != null ? df.parse(date) : null;\n+                            return date != null ? fdf.parse(date) : null;\n                         } catch (ParseException ex) {\n                             LOG.error(\"Date parse error {}\", date, ex);\n                         }\n@@ -932,7 +930,7 @@ public Object getObject() {\n                     @Override\n                     public void setObject(final Object object) {\n                         if (object instanceof Date) {\n-                            String valueDate = df.format(object);\n+                            String valueDate = fdf.format(object);\n                             super.setObject(valueDate);\n                         } else {\n                             super.setObject(object);"},{"sha":"0819436fc942c54755547bf6c7f46ac1c038cf4f","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/MyJPAJSONAnySearchDAO.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.jpa.dao;\n \n import java.util.List;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -171,6 +172,11 @@ protected void fillAttrQuery(\n                         append(\"')\");\n             } else {\n                 String key = key(schema.getType());\n+\n+                String value = Optional.ofNullable(attrValue.getDateValue()).\n+                        map(v -> String.valueOf(v.getTime())).\n+                        orElse(cond.getExpression());\n+\n                 boolean lower = (schema.getType() == AttrSchemaType.String || schema.getType() == AttrSchemaType.Enum)\n                         && (cond.getType() == AttrCond.Type.IEQ || cond.getType() == AttrCond.Type.ILIKE);\n \n@@ -185,7 +191,7 @@ protected void fillAttrQuery(\n                 appendOp(query, cond.getType(), not);\n \n                 query.append(lower ? \"LOWER(\" : \"\").\n-                        append('?').append(setParameter(parameters, cond.getExpression())).\n+                        append('?').append(setParameter(parameters, value)).\n                         append(lower ? \")\" : \"\");\n             }\n         }"},{"sha":"94820e7b467156b2a5a9a2a00b6127bc54554f13","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n@@ -59,7 +58,6 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.provisioning.api.utils.FormatUtils;\n import org.apache.syncope.core.provisioning.api.utils.RealmUtils;\n \n public class PGJPAJSONAnySearchDAO extends AbstractJPAJSONAnySearchDAO {\n@@ -106,14 +104,9 @@ protected void fillAttrQuery(\n         } else {\n             String key = key(schema.getType());\n \n-            String value = cond.getExpression();\n-            if (schema.getType() == AttrSchemaType.Date) {\n-                try {\n-                    value = String.valueOf(FormatUtils.parseDate(value).getTime());\n-                } catch (ParseException e) {\n-                    LOG.error(\"Could not parse {} as date\", value, e);\n-                }\n-            }\n+            String value = Optional.ofNullable(attrValue.getDateValue()).\n+                    map(v -> String.valueOf(v.getTime())).\n+                    orElse(cond.getExpression());\n \n             boolean isStr = true;\n             boolean lower;"},{"sha":"52c1a594536b5e2720aa805a5c9a39f23ffccfbc","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -279,7 +279,7 @@ under the License.\n   <AnyObject id=\"9e1d130c-d6a3-48b1-98b3-182477ed0688\" name=\"Epson Stylus Color\"\n              realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\" type_id=\"PRINTER\"\n              creator=\"admin\" lastModifier=\"admin\" \n-             creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n+             creationDate=\"2021-04-15 12:45:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n   <ARelationship id=\"11a0ec66-b59b-428a-af3d-f856950ff1c5\" type_id=\"neighborhood\"\n                  left_anyObject_id=\"fc6dbc3a-6c07-4965-8781-921e7401a4a5\""},{"sha":"c4648143eb9ba945ba3759b1566249ec321ef397","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -474,6 +474,36 @@ public void searchByRelationshipType() {\n         assertTrue(users.stream().anyMatch(any -> \"c9b2dec2-00a7-4855-97c0-d854842b4b24\".equals(any.getKey())));\n     }\n \n+    @Test\n+    public void searchByAnyCondDate() {\n+        AnyCond creationDateCond = new AnyCond(AnyCond.Type.EQ);\n+        creationDateCond.setSchema(\"creationDate\");\n+        creationDateCond.setExpression(\"2021-04-15 12:45:00\");\n+\n+        SearchCond searchCondition = SearchCond.getLeaf(creationDateCond);\n+        assertTrue(searchCondition.isValid());\n+\n+        List<AnyObject> anyObjects = searchDAO.search(searchCondition, AnyTypeKind.ANY_OBJECT);\n+        assertNotNull(anyObjects);\n+        assertEquals(1, anyObjects.size());\n+        assertEquals(\"9e1d130c-d6a3-48b1-98b3-182477ed0688\", anyObjects.iterator().next().getKey());\n+    }\n+\n+    @Test\n+    public void searchByAttrCondDate() {\n+        AttrCond loginDateCond = new AttrCond(AnyCond.Type.LT);\n+        loginDateCond.setSchema(\"loginDate\");\n+        loginDateCond.setExpression(\"2009-05-27\");\n+\n+        SearchCond searchCondition = SearchCond.getLeaf(loginDateCond);\n+        assertTrue(searchCondition.isValid());\n+\n+        List<User> users = searchDAO.search(searchCondition, AnyTypeKind.USER);\n+        assertNotNull(users);\n+        assertEquals(1, users.size());\n+        assertEquals(\"1417acbe-cbf6-4277-9372-e75e04f97000\", users.iterator().next().getKey());\n+    }\n+\n     @Test\n     public void userOrderBy() {\n         AnyCond usernameLeafCond = new AnyCond(AnyCond.Type.EQ);"},{"sha":"3a6ae3153f3509e11af1ee3bc45bf95fbf6eb867","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f0df022004e4cb23e5d3e0a9104d51914be5a91/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=6f0df022004e4cb23e5d3e0a9104d51914be5a91","patch":"@@ -146,7 +146,7 @@ under the License.\n   <AnyObject id=\"9e1d130c-d6a3-48b1-98b3-182477ed0688\" name=\"Epson Stylus Color\"\n              realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\" type_id=\"PRINTER\"\n              creator=\"admin\" lastModifier=\"admin\" \n-             creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n+             creationDate=\"2021-04-15 12:45:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n   <ARelationship id=\"11a0ec66-b59b-428a-af3d-f856950ff1c5\" type_id=\"neighborhood\"\n                  left_anyObject_id=\"fc6dbc3a-6c07-4965-8781-921e7401a4a5\""}]}