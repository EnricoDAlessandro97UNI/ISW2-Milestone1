{"sha":"ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZmYzYxZjBlMzI4YTJlYzcwMmYwZTljYTcyY2FlMzFlZDM4ZDliNTM=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-06-03T12:14:39Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-06-03T12:14:39Z"},"message":"[SYNCOPE-495] Fix X Close Button behavior, added new selenium test\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1599502 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b45cf04ed099ba56093a4c4993743272577106d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b45cf04ed099ba56093a4c4993743272577106d8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"a2121b3ddfa8440937e8f14d15f245d056fd43d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2121b3ddfa8440937e8f14d15f245d056fd43d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2121b3ddfa8440937e8f14d15f245d056fd43d3"}],"stats":{"total":156,"additions":93,"deletions":63},"files":[{"sha":"50904cc50c9c3f4e0a62c33756b13ae69ef9267a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":63,"deletions":62,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","patch":"@@ -78,7 +78,7 @@ public MembershipsPanel(final String id, final UserTO userTO, final boolean temp\n         super(id);\n         this.userTO = userTO;\n         this.statusPanel = statusPanel;\n-        \n+\n         final WebMarkupContainer membershipsContainer = new WebMarkupContainer(\"membershipsContainer\");\n         membershipsContainer.setOutputMarkupId(true);\n         add(membershipsContainer);\n@@ -151,69 +151,69 @@ public Page createPage() {\n         membView = new ListView<MembershipTO>(\"memberships\",\n                 new PropertyModel<List<? extends MembershipTO>>(userTO, \"memberships\")) {\n \n-            private static final long serialVersionUID = 9101744072914090143L;\n+                    private static final long serialVersionUID = 9101744072914090143L;\n \n-            @Override\n-            protected void populateItem(final ListItem<MembershipTO> item) {\n-                final MembershipTO membershipTO = (MembershipTO) item.getDefaultModelObject();\n+                    @Override\n+                    protected void populateItem(final ListItem<MembershipTO> item) {\n+                        final MembershipTO membershipTO = (MembershipTO) item.getDefaultModelObject();\n \n-                item.add(new Label(\"roleId\", new Model<Long>(membershipTO.getRoleId())));\n-                item.add(new Label(\"roleName\", new Model<String>(membershipTO.getRoleName())));\n+                        item.add(new Label(\"roleId\", new Model<Long>(membershipTO.getRoleId())));\n+                        item.add(new Label(\"roleName\", new Model<String>(membershipTO.getRoleName())));\n \n-                AjaxLink editLink = new ClearIndicatingAjaxLink(\"editLink\", pageRef) {\n+                        AjaxLink editLink = new ClearIndicatingAjaxLink(\"editLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        membWin.setPageCreator(new ModalWindow.PageCreator() {\n+                            @Override\n+                            protected void onClickInternal(final AjaxRequestTarget target) {\n+                                membWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID = -7834632442532690940L;\n+                                    private static final long serialVersionUID = -7834632442532690940L;\n \n-                            @Override\n-                            public Page createPage() {\n-                                return new MembershipModalPage(getPage().getPageReference(), membWin,\n-                                        membershipTO, templateMode);\n+                                    @Override\n+                                    public Page createPage() {\n+                                        return new MembershipModalPage(getPage().getPageReference(), membWin,\n+                                                membershipTO, templateMode);\n \n+                                    }\n+                                });\n+                                membWin.show(target);\n                             }\n-                        });\n-                        membWin.show(target);\n-                    }\n-                };\n-                item.add(editLink);\n+                        };\n+                        item.add(editLink);\n \n-                AjaxLink deleteLink = new IndicatingOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n+                        AjaxLink deleteLink = new IndicatingOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        userTO.getMemberships().remove(membershipTO);\n-                        ((UserModalPage) getPage()).getUserTO().getMemberships().remove(membershipTO);\n-                        target.add(membershipsContainer);\n+                            @Override\n+                            protected void onClickInternal(final AjaxRequestTarget target) {\n+                                userTO.getMemberships().remove(membershipTO);\n+                                ((UserModalPage) getPage()).getUserTO().getMemberships().remove(membershipTO);\n+                                target.add(membershipsContainer);\n \n-                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membershipTO.getRoleId());\n-                        Set<String> resourcesToRemove = roleTO == null\n+                                RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membershipTO.getRoleId());\n+                                Set<String> resourcesToRemove = roleTO == null\n                                 ? Collections.<String>emptySet() : roleTO.getResources();\n-                        if (!resourcesToRemove.isEmpty()) {\n-                            Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n-                            for (MembershipTO membTO : userTO.getMemberships()) {\n-                                roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n-                                if (roleTO != null) {\n-                                    resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                if (!resourcesToRemove.isEmpty()) {\n+                                    Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n+                                    for (MembershipTO membTO : userTO.getMemberships()) {\n+                                        roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n+                                        if (roleTO != null) {\n+                                            resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                        }\n+                                    }\n+                                    resourcesToRemove.removeAll(resourcesAssignedViaMembership);\n+                                    resourcesToRemove.removeAll(userTO.getResources());\n                                 }\n-                            }\n-                            resourcesToRemove.removeAll(resourcesAssignedViaMembership);\n-                            resourcesToRemove.removeAll(userTO.getResources());\n-                        }\n \n-                        StatusUtils.update(\n-                                userTO, statusPanel, target, Collections.<String>emptySet(), resourcesToRemove);\n+                                StatusUtils.update(\n+                                        userTO, statusPanel, target, Collections.<String>emptySet(), resourcesToRemove);\n+                            }\n+                        };\n+                        item.add(deleteLink);\n                     }\n                 };\n-                item.add(deleteLink);\n-            }\n-        };\n \n         membershipsContainer.add(membView);\n \n@@ -228,24 +228,25 @@ private void setWindowClosedCallback(final ModalWindow window, final WebMarkupCo\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 final UserTO updatedUserTO = ((UserModalPage) getPage()).getUserTO();\n-\n-                if (updatedUserTO.getMemberships().size() > userTO.getMemberships().size()) {\n-                    Set<Long> diff = new HashSet<Long>(updatedUserTO.getMembershipMap().keySet());\n-                    diff.removeAll(userTO.getMembershipMap().keySet());\n-\n-                    Set<String> resourcesToAdd = new HashSet<String>();\n-                    for (Long diffMembId : diff) {\n-                        long roleId = updatedUserTO.getMembershipMap().get(diffMembId).getRoleId();\n-                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, roleId);\n-                        resourcesToAdd.addAll(roleTO.getResources());\n-                        StatusUtils.update(\n-                                userTO, statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n+                if (!userTO.equals(updatedUserTO)) {\n+                    if (updatedUserTO.getMemberships().size() > userTO.getMemberships().size()) {\n+                        Set<Long> diff = new HashSet<Long>(updatedUserTO.getMembershipMap().keySet());\n+                        diff.removeAll(userTO.getMembershipMap().keySet());\n+\n+                        Set<String> resourcesToAdd = new HashSet<String>();\n+                        for (Long diffMembId : diff) {\n+                            long roleId = updatedUserTO.getMembershipMap().get(diffMembId).getRoleId();\n+                            RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, roleId);\n+                            resourcesToAdd.addAll(roleTO.getResources());\n+                            StatusUtils.update(\n+                                    userTO, statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n+                        }\n                     }\n-                }\n \n-                MembershipsPanel.this.userTO.getMemberships().clear();\n-                MembershipsPanel.this.userTO.getMemberships().addAll(updatedUserTO.getMemberships());         \n-                target.add(container);\n+                    MembershipsPanel.this.userTO.getMemberships().clear();\n+                    MembershipsPanel.this.userTO.getMemberships().addAll(updatedUserTO.getMemberships());\n+                    target.add(container);\n+                }\n             }\n         });\n     }"},{"sha":"655e279bcc26011a20f8b3fd89376f265da4269d","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":30,"deletions":1,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=ffc61f0e328a2ec702f0e9ca72cae31ed38d9b53","patch":"@@ -133,9 +133,38 @@ public void browseProvisioningFeatures() {\n \n         selenium.click(\"//div[@class='navigator']/div/span/a\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[div='ws-target-resource-1']\\\");\", \"30000\");\n-\n+        \n         seleniumDriver.switchTo().defaultContent();\n \n         selenium.click(\"css=a.w_close\");\n     }\n+\n+    @Test\n+    @SuppressWarnings(\"SleepWhileHoldingLock\")\n+    public void issueSyncope495() {\n+        selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[5]/div/span[12]/a\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n+        selenium.selectFrame(\"index=0\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='Antonio Vivaldi']\\\");\", \"30000\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='Vivaldi']\\\");\", \"30000\");\n+\n+        selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[4]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[5]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[6]/a/span\");\n+\n+        selenium.click(\"//span[2]/a/span\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@class='infolabel']\\\");\", \"30000\");\n+        selenium.selectFrame(\"relative=up\");\n+        selenium.click(\"css=a.w_close\");\n+    }\n }"}]}