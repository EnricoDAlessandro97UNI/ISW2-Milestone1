{"sha":"2940e5fc1a1efaeac5b75bd232cae744de01b2f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI5NDBlNWZjMWExZWZhZWFjNWI3NWJkMjMyY2FlNzQ0ZGUwMWIyZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-30T11:26:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-30T11:26:03Z"},"message":"[SYNCOPE-466] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1554190 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"63be06d38f2152bd6be832075bb8a7da13216b7b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/63be06d38f2152bd6be832075bb8a7da13216b7b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2940e5fc1a1efaeac5b75bd232cae744de01b2f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2940e5fc1a1efaeac5b75bd232cae744de01b2f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2940e5fc1a1efaeac5b75bd232cae744de01b2f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dcce063e1c911f86dc3de9b1e6dd7765d78d1566","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dcce063e1c911f86dc3de9b1e6dd7765d78d1566","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dcce063e1c911f86dc3de9b1e6dd7765d78d1566"},{"sha":"5928330fcc0dccd287668ba4d611b5221657d68d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5928330fcc0dccd287668ba4d611b5221657d68d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5928330fcc0dccd287668ba4d611b5221657d68d"}],"stats":{"total":56,"additions":37,"deletions":19},"files":[{"sha":"dd7c19bfe72e0364514bdf9f48e250798d90c582","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -30,9 +30,7 @@ public enum ClientExceptionType {\n     InvalidLogger(Response.Status.BAD_REQUEST),\r\n     InvalidConnInstance(Response.Status.BAD_REQUEST),\r\n     InvalidConnIdConf(Response.Status.BAD_REQUEST),\r\n-    InvalidPasswordPolicy(Response.Status.BAD_REQUEST),\r\n-    InvalidAccountPolicy(Response.Status.BAD_REQUEST),\r\n-    InvalidSyncPolicy(Response.Status.BAD_REQUEST),\r\n+    InvalidPolicy(Response.Status.BAD_REQUEST),\r\n     InvalidSyncopeRole(Response.Status.BAD_REQUEST),\r\n     InvalidReportExec(Response.Status.BAD_REQUEST),\r\n     InvalidRoles(Response.Status.BAD_REQUEST),\r"},{"sha":"c3bf57e65b7ced59d521ff104e7bd8faef4a2b86","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.AbstractPolicyTO;\n import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.types.AccountPolicySpec;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.PasswordPolicySpec;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n@@ -105,8 +107,9 @@ public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n     @SuppressWarnings(\"unchecked\")\n     public <T extends Policy> T getPolicy(T policy, final AbstractPolicyTO policyTO) {\n         if (policy != null && policy.getType() != policyTO.getType()) {\n-            throw new IllegalArgumentException(\n-                    String.format(\"Cannot update %s from %s\", policy.getType(), policyTO.getType()));\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+            sce.getElements().add(String.format(\"Cannot update %s from %s\", policy.getType(), policyTO.getType()));\n+            throw sce;\n         }\n \n         final boolean isGlobal = isGlobalPolicy(policyTO.getType());"},{"sha":"4543e92c4cda3eef233e155b18be9092fa335d50","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -186,7 +186,10 @@ private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n         }\r\n \r\n         if (iee != null) {\r\n-            ClientExceptionType exType = ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\r\n+            ClientExceptionType exType =\r\n+                    iee.getEntityClassSimpleName().endsWith(\"Policy\")\r\n+                    ? ClientExceptionType.InvalidPolicy\r\n+                    : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\r\n \r\n             ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);\r\n             builder.header(RESTHeaders.EXCEPTION_TYPE, exType.getHeaderValue());\r"},{"sha":"21c9999c731cfea98bbfff618677e29d3aa7ae88","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":25,"deletions":11,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -40,6 +40,18 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class PolicyTestITCase extends AbstractTest {\n \n+    private SyncPolicyTO buildSyncPolicyTO() {\n+        SyncPolicyTO policy = new SyncPolicyTO();\n+\n+        SyncPolicySpec spec = new SyncPolicySpec();\n+        spec.setUserJavaRule(TestSyncRule.class.getName());\n+\n+        policy.setSpecification(spec);\n+        policy.setDescription(\"Sync policy\");\n+\n+        return policy;\n+    }\n+\n     @Test\n     public void listByType() {\n         List<SyncPolicyTO> policyTOs = policyService.list(PolicyType.SYNC);\n@@ -82,7 +94,7 @@ public void createWithException() {\n             createPolicy(policy);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.InvalidPasswordPolicy, e.getType());\n+            assertEquals(ClientExceptionType.InvalidPolicy, e.getType());\n         }\n     }\n \n@@ -95,7 +107,7 @@ public void createMissingDescription() {\n             createPolicy(policy);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.InvalidSyncPolicy, e.getType());\n+            assertEquals(ClientExceptionType.InvalidPolicy, e.getType());\n         }\n     }\n \n@@ -163,15 +175,17 @@ public void getCorrelationRules() {\n         assertEquals(1, policyService.getSyncCorrelationRuleClasses().size());\n     }\n \n-    private SyncPolicyTO buildSyncPolicyTO() {\n-        SyncPolicyTO policy = new SyncPolicyTO();\n-\n-        SyncPolicySpec spec = new SyncPolicySpec();\n-        spec.setUserJavaRule(TestSyncRule.class.getName());\n-\n-        policy.setSpecification(spec);\n-        policy.setDescription(\"Sync policy\");\n+    @Test\n+    public void issueSYNCOPE466() {\n+        PasswordPolicyTO policy = policyService.read(4L);\n+        assertEquals(PolicyType.PASSWORD, policy.getType());\n \n-        return policy;\n+        policy.setType(PolicyType.GLOBAL_PASSWORD);\n+        try {\n+            policyService.update(policy.getId(), policy);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidPolicy, e.getType());\n+        }\n     }\n }"},{"sha":"c6594e769700730f141bd386aa06775050c6f3f4","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -393,7 +393,7 @@ public void delete() {\n \n     @Test\n     public void list() {\n-        List<ResourceTO> actuals = resourceService.list(null);\n+        List<ResourceTO> actuals = resourceService.list();\n         assertNotNull(actuals);\n         assertFalse(actuals.isEmpty());\n         for (ResourceTO resourceTO : actuals) {"},{"sha":"78cc029181c5b42d064a15d3185ded222cda4fb0","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2940e5fc1a1efaeac5b75bd232cae744de01b2f4/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2940e5fc1a1efaeac5b75bd232cae744de01b2f4","patch":"@@ -1043,7 +1043,7 @@ under the License.\n         <plugin>\n           <groupId>org.codehaus.cargo</groupId>\n           <artifactId>cargo-maven2-plugin</artifactId>\n-          <version>1.4.5</version>\n+          <version>1.4.6</version>\n           <configuration>\n             <container>\n               <containerId>tomcat7x</containerId>"}]}