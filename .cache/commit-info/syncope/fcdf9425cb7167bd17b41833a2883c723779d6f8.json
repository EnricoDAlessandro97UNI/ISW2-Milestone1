{"sha":"fcdf9425cb7167bd17b41833a2883c723779d6f8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZjZGY5NDI1Y2I3MTY3YmQxN2I0MTgzM2EyODgzYzcyMzc3OWQ2Zjg=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-12T14:53:59Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-12T14:53:59Z"},"message":"SYNCOPE-94 #comment strange behavior from HttpClient: request is sent twice in case of BadCredentialExceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1349384 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5a954097eb9f14ce19310b58ff4f3faa5cbc88d4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5a954097eb9f14ce19310b58ff4f3faa5cbc88d4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fcdf9425cb7167bd17b41833a2883c723779d6f8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fcdf9425cb7167bd17b41833a2883c723779d6f8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fcdf9425cb7167bd17b41833a2883c723779d6f8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fcdf9425cb7167bd17b41833a2883c723779d6f8/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"1969e756c44b3eb2d876e9dfa349962274bdb42c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1969e756c44b3eb2d876e9dfa349962274bdb42c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1969e756c44b3eb2d876e9dfa349962274bdb42c"}],"stats":{"total":62,"additions":33,"deletions":29},"files":[{"sha":"ec70a375d87103328f91c2ef0e8b6474a511be52","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":32,"deletions":28,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fcdf9425cb7167bd17b41833a2883c723779d6f8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fcdf9425cb7167bd17b41833a2883c723779d6f8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=fcdf9425cb7167bd17b41833a2883c723779d6f8","patch":"@@ -28,7 +28,6 @@\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.AuthenticationException;\n-import org.springframework.security.core.userdetails.UsernameNotFoundException;\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -37,6 +36,7 @@\n import org.apache.syncope.types.AuditElements.AuthenticationSubCategory;\n import org.apache.syncope.types.AuditElements.Category;\n import org.apache.syncope.types.AuditElements.Result;\n+import org.springframework.security.authentication.DisabledException;\n \n @Configurable\n public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n@@ -84,47 +84,45 @@ public void setSyncopeUserDetailsService(SyncopeUserDetailsService syncopeUserDe\n     }\n \n     @Override\n-    @Transactional(noRollbackFor = {BadCredentialsException.class})\n-    public Authentication authenticate(final Authentication authentication) throws AuthenticationException {\n+    @Transactional(noRollbackFor = {BadCredentialsException.class, DisabledException.class})\n+    public Authentication authenticate(final Authentication authentication)\n+            throws AuthenticationException {\n \n-        boolean authenticated;\n+        boolean authenticated = false;\n         SyncopeUser passwordUser = new SyncopeUser();\n         SyncopeUser user = null;\n \n-        if (adminUser.equals(authentication.getPrincipal())) {\n-            passwordUser.setPassword(authentication.getCredentials().toString(), CipherAlgorithm.MD5, 0);\n+        String username = authentication.getPrincipal().toString();\n \n+        if (adminUser.equals(username)) {\n+            passwordUser.setPassword(authentication.getCredentials().toString(), CipherAlgorithm.MD5, 0);\n             authenticated = adminMD5Password.equalsIgnoreCase(passwordUser.getPassword());\n         } else {\n-            String username;\n-            try {\n-                username = authentication.getPrincipal().toString();\n-            } catch (NumberFormatException e) {\n-                throw new UsernameNotFoundException(\"Invalid username: \" + authentication.getName(), e);\n-            }\n-\n             user = userDAO.find(username);\n-            if (user == null) {\n-                throw new UsernameNotFoundException(\"Could not find user \" + username);\n-            }\n \n-            passwordUser.setPassword(authentication.getCredentials().toString(), user.getCipherAlgoritm(), 0);\n+            if (user != null) {\n+                if (user.getSuspended()) {\n+                    throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n+                }\n \n-            authenticated = user.getPassword().equalsIgnoreCase(passwordUser.getPassword());\n+                passwordUser.setPassword(authentication.getCredentials().toString(), user.getCipherAlgoritm(), 0);\n+                authenticated = user.getPassword().equalsIgnoreCase(passwordUser.getPassword());\n+            }\n         }\n \n-        Authentication result;\n+        UsernamePasswordAuthenticationToken token;\n \n-        if ((user == null || !user.getSuspended()) && authenticated) {\n-            UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(authentication.\n-                    getPrincipal(), null, userDetailsService.loadUserByUsername(\n-                    authentication.getPrincipal().toString()).getAuthorities());\n-            token.setDetails(authentication.getDetails());\n+        if (authenticated) {\n+            token = new UsernamePasswordAuthenticationToken(\n+                    authentication.getPrincipal(),\n+                    null,\n+                    userDetailsService.loadUserByUsername(authentication.getPrincipal().toString()).getAuthorities());\n \n-            result = token;\n+            token.setDetails(authentication.getDetails());\n \n             auditManager.audit(Category.authentication, AuthenticationSubCategory.login, Result.success,\n                     \"Successfully authenticated, with roles: \" + token.getAuthorities());\n+\n             LOG.debug(\"User {} successfully authenticated, with roles {}\", authentication.getPrincipal(), token.\n                     getAuthorities());\n \n@@ -135,19 +133,25 @@ public Authentication authenticate(final Authentication authentication) throws A\n             }\n \n         } else {\n-            if (user != null && !user.getSuspended()) {\n+            if (user != null) {\n                 user.setFailedLogins(user.getFailedLogins() + 1);\n                 userDAO.save(user);\n             }\n \n             auditManager.audit(Category.authentication, AuthenticationSubCategory.login, Result.failure,\n                     \"User \" + authentication.getPrincipal() + \" not authenticated\");\n+\n             LOG.debug(\"User {} not authenticated\", authentication.getPrincipal());\n \n-            throw new BadCredentialsException(\"User \" + authentication.getPrincipal() + \" not authenticated\");\n+            // By using HttpComponents version 4.2 the request is sent twice in case of exception (SYNCOPE-94) ...\n+            // throw new BadCredentialsException(\"User \" + authentication.getPrincipal() + \" not authenticated\");\n+            \n+            // ... this is the reason of the following code.\n+            token = new UsernamePasswordAuthenticationToken(authentication.getPrincipal(), null, null);\n+            token.setDetails(authentication.getDetails());\n         }\n \n-        return result;\n+        return token;\n     }\n \n     @Override"},{"sha":"8f5b4e6cba0cff97ef199203f985df00812daa15","filename":"parent/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fcdf9425cb7167bd17b41833a2883c723779d6f8/parent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fcdf9425cb7167bd17b41833a2883c723779d6f8/parent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/parent%2Fpom.xml?ref=fcdf9425cb7167bd17b41833a2883c723779d6f8","patch":"@@ -241,7 +241,7 @@ under the License.\n     <commons-jexl.version>2.1.1</commons-jexl.version>\n     <commons-lang.version>2.6</commons-lang.version>\n         \n-    <httpcomponents.version>4.1.3</httpcomponents.version>\n+    <httpcomponents.version>4.2</httpcomponents.version>\n \n     <activiti.version>5.9</activiti.version>\n "}]}