{"sha":"c42936baaf870e829cd3d91998b8551d4bbd1f76","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM0MjkzNmJhYWY4NzBlODI5Y2QzZDkxOTk4Yjg1NTFkNGJiZDFmNzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-29T16:17:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-29T16:17:11Z"},"message":"Merge branch 'master' into 2_0_X","tree":{"sha":"55365e96b0195281a275de0758e5e39a0d71a75f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/55365e96b0195281a275de0758e5e39a0d71a75f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c42936baaf870e829cd3d91998b8551d4bbd1f76","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c42936baaf870e829cd3d91998b8551d4bbd1f76","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c42936baaf870e829cd3d91998b8551d4bbd1f76","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c42936baaf870e829cd3d91998b8551d4bbd1f76/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3ba2ad6692086c1cbad8a2a9c76a0fe829361fc5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ba2ad6692086c1cbad8a2a9c76a0fe829361fc5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3ba2ad6692086c1cbad8a2a9c76a0fe829361fc5"},{"sha":"849d2f6ff6d25e436ff0efc530792b2d475a2622","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/849d2f6ff6d25e436ff0efc530792b2d475a2622","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/849d2f6ff6d25e436ff0efc530792b2d475a2622"}],"stats":{"total":249,"additions":195,"deletions":54},"files":[{"sha":"3acd06397c7c4ef4bb0a096d45eef25e115f5fe3","filename":"common/src/main/java/org/apache/syncope/common/to/MappingTO.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -48,18 +48,17 @@ public void setAccountLink(String accountLink) {\n         this.accountLink = accountLink;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    public <T extends MappingItemTO> T getAccountIdItem() {\n-        T accountIdItem = null;\n+    public MappingItemTO getAccountIdItem() {\n+        MappingItemTO accountIdItem = null;\n         for (MappingItemTO item : getItems()) {\n             if (item.isAccountid()) {\n-                accountIdItem = (T) item;\n+                accountIdItem = item;\n             }\n         }\n         return accountIdItem;\n     }\n \n-    protected <T extends MappingItemTO> boolean addAccountIdItem(final T accountIdItem) {\n+    protected boolean addAccountIdItem(final MappingItemTO accountIdItem) {\n         if (IntMappingType.UserVirtualSchema == accountIdItem.getIntMappingType()\n                 || IntMappingType.RoleVirtualSchema == accountIdItem.getIntMappingType()\n                 || IntMappingType.MembershipVirtualSchema == accountIdItem.getIntMappingType()\n@@ -78,11 +77,9 @@ protected <T extends MappingItemTO> boolean addAccountIdItem(final T accountIdIt\n     }\n \n     public boolean setAccountIdItem(final MappingItemTO accountIdItem) {\n-        if (accountIdItem == null) {\n-            return this.removeItem(getAccountIdItem());\n-        } else {\n-            return addAccountIdItem(accountIdItem);\n-        }\n+        return accountIdItem == null\n+                ? this.removeItem(getAccountIdItem())\n+                : addAccountIdItem(accountIdItem);\n     }\n \n     public MappingItemTO getPasswordItem() {"},{"sha":"a3307d7e9eb1fec49ec5b750240e662c7634afde","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -190,8 +190,8 @@ public ConnObjectTO getConnectorObject(final String resourceName, final SubjectT\n \n         AbstractMappingItem accountIdItem = attrUtil.getAccountIdItem(resource);\n         if (accountIdItem == null) {\n-            throw new NotFoundException(\"AccountId mapping for \" + type + \" \" + id + \" on resource '\" + resourceName\n-                    + \"'\");\n+            throw new NotFoundException(\n+                    \"AccountId mapping for \" + type + \" \" + id + \" on resource '\" + resourceName + \"'\");\n         }\n         final String accountIdValue = MappingUtil.getAccountIdValue(\n                 subject, resource, attrUtil.getAccountIdItem(resource));"},{"sha":"e6fcb48b8e256b59ab80c3004a20787abd4cdbfe","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -21,9 +21,11 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.SyncopeClientCompositeException;\n@@ -76,6 +78,7 @@\n import org.apache.syncope.core.persistence.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.MembershipDAO;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n@@ -916,4 +919,26 @@ protected void fillTO(final AbstractAttributableTO attributableTO,\n             }\n         }\n     }\n+\n+    protected Map<String, String> getAccountIds(final AbstractSubject subject, final AttributableType type) {\n+        Map<String, String> accountIds = new HashMap<String, String>();\n+\n+        for (ExternalResource resource : subject.getResources()) {\n+            if ((type == AttributableType.USER && resource.getUmapping() != null)\n+                    || (type == AttributableType.ROLE && resource.getRmapping() != null)) {\n+\n+                AbstractMappingItem accountIdItem =\n+                        AttributableUtil.getInstance(type).getAccountIdItem(resource);\n+                if (accountIdItem == null) {\n+                    throw new NotFoundException(\n+                            \"AccountId mapping for \" + type + \" \" + subject.getId()\n+                            + \" on resource '\" + resource.getName() + \"'\");\n+                }\n+\n+                accountIds.put(resource.getName(), MappingUtil.getAccountIdValue(subject, resource, accountIdItem));\n+            }\n+        }\n+\n+        return accountIds;\n+    }\n }"},{"sha":"58029aa8c5acc26f9bbf3772a86eeeeacc22257f","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -21,14 +21,15 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.common.SyncopeClientCompositeException;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.SyncopeClientCompositeException;\n-import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n@@ -245,7 +246,8 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        Set<String> currentResources = role.getResourceNames();\n+        // fetch account ids before update\n+        Map<String, String> oldAccountIds = getAccountIds(role, AttributableType.ROLE);\n \n         // name\n         SyncopeClientException invalidRoles = SyncopeClientException.build(ClientExceptionType.InvalidRoles);\n@@ -254,10 +256,7 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n                     role.getParent() == null ? null : role.getParent().getId());\n             if (otherRole == null || role.equals(otherRole)) {\n                 if (!roleMod.getName().equals(role.getName())) {\n-                    propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n-                    for (String resource : currentResources) {\n-                        propByRes.addOldAccountId(resource, role.getName());\n-                    }\n+                    propByRes.addAll(ResourceOperation.UPDATE, role.getResourceNames());\n \n                     role.setName(roleMod.getName());\n                 }\n@@ -354,6 +353,17 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n         // attributes, derived attributes, virtual attributes and resources\n         propByRes.merge(fill(role, roleMod, AttributableUtil.getInstance(AttributableType.ROLE), scce));\n \n+        // check if some account id was changed by the update above\n+        Map<String, String> newAccountIds = getAccountIds(role, AttributableType.ROLE);\n+        for (Map.Entry<String, String> entry : oldAccountIds.entrySet()) {\n+            if (newAccountIds.containsKey(entry.getKey())\n+                    && !entry.getValue().equals(newAccountIds.get(entry.getKey()))) {\n+\n+                propByRes.addOldAccountId(entry.getKey(), entry.getValue());\n+                propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n+            }\n+        }\n+\n         return propByRes;\n     }\n "},{"sha":"a904611ad1dfb6393a0239c73d011c600a0946ae","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":21,"deletions":17,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -22,25 +22,24 @@\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.SyncopeClientCompositeException;\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.util.BeanUtils;\n-import org.apache.syncope.common.SyncopeClientCompositeException;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n-import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.SecurityQuestion;\n@@ -55,8 +54,8 @@\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.util.AttributableUtil;\n-import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.Encryptor;\n+import org.apache.syncope.core.util.EntitlementUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -267,6 +266,9 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n \n         Set<String> currentResources = user.getResourceNames();\n \n+        // fetch account ids before update\n+        Map<String, String> oldAccountIds = getAccountIds(user, AttributableType.USER);\n+\n         // password\n         if (StringUtils.isNotBlank(userMod.getPassword())) {\n             setPassword(user, userMod.getPassword(), scce);\n@@ -276,18 +278,9 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n \n         // username\n         if (userMod.getUsername() != null && !userMod.getUsername().equals(user.getUsername())) {\n-            String oldUsername = user.getUsername();\n-\n-            user.setUsername(userMod.getUsername());\n             propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n \n-            for (ExternalResource resource : user.getResources()) {\n-                for (AbstractMappingItem mapItem : resource.getUmapping().getItems()) {\n-                    if (mapItem.isAccountid() && mapItem.getIntMappingType() == IntMappingType.Username) {\n-                        propByRes.addOldAccountId(resource.getName(), oldUsername);\n-                    }\n-                }\n-            }\n+            user.setUsername(userMod.getUsername());\n         }\n \n         // security question / answer:\n@@ -405,6 +398,17 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n             propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n         }\n \n+        // check if some account id was changed by the update above\n+        Map<String, String> newAccountIds = getAccountIds(user, AttributableType.USER);\n+        for (Map.Entry<String, String> entry : oldAccountIds.entrySet()) {\n+            if (newAccountIds.containsKey(entry.getKey())\n+                    && !entry.getValue().equals(newAccountIds.get(entry.getKey()))) {\n+\n+                propByRes.addOldAccountId(entry.getKey(), entry.getValue());\n+                propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n+            }\n+        }\n+\n         return propByRes;\n     }\n "},{"sha":"071bfd4e342dad729a586923c023664b92270a0c","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":22,"deletions":6,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -27,6 +27,7 @@\n import java.util.Properties;\n import java.util.UUID;\n import javax.naming.Context;\n+import javax.naming.NamingException;\n import javax.naming.directory.InitialDirContext;\n import javax.sql.DataSource;\n import javax.ws.rs.core.Response;\n@@ -339,12 +340,9 @@ protected ResourceTO createResource(final ResourceTO resourceTO) {\n         return getObject(response.getLocation(), ResourceService.class, ResourceTO.class);\n     }\n \n-    protected Object getLdapRemoteObject(final String objectDn) {\n-        return getLdapRemoteObject(null, null, objectDn);\n-    }\n-\n     @SuppressWarnings({ \"unchecked\", \"rawtypes\", \"UseOfObsoleteCollectionType\" })\n-    protected Object getLdapRemoteObject(final String bindDn, final String bindPwd, final String objectDn) {\n+    protected InitialDirContext getLdapResourceDirContext(final String bindDn, final String bindPwd)\n+            throws NamingException {\n         ResourceTO ldapRes = resourceService.read(RESOURCE_NAME_LDAP);\n         final Map<String, ConnConfProperty> ldapConnConf =\n                 connectorService.read(ldapRes.getConnectorId()).getConfigurationMap();\n@@ -359,11 +357,29 @@ protected Object getLdapRemoteObject(final String bindDn, final String bindPwd,\n         env.put(Context.SECURITY_CREDENTIALS,\n                 bindPwd == null ? ldapConnConf.get(\"credentials\").getValues().get(0) : bindPwd);\n \n+        return new InitialDirContext(env);\n+    }\n+\n+    protected Object getLdapRemoteObject(final String bindDn, final String bindPwd, final String objectDn) {\n+        InitialDirContext ctx = null;\n         try {\n-            final InitialDirContext ctx = new InitialDirContext(env);\n+            ctx = getLdapResourceDirContext(bindDn, bindPwd);\n             return ctx.lookup(objectDn);\n         } catch (Exception e) {\n             return null;\n+        } finally {\n+            if (ctx != null) {\n+                try {\n+                    ctx.close();\n+                } catch (NamingException e) {\n+                    // ignore\n+                }\n+            }\n         }\n     }\n+\n+    protected Object getLdapRemoteObject(final String objectDn) {\n+        return getLdapRemoteObject(null, null, objectDn);\n+    }\n+\n }"},{"sha":"393a1041fc6e30f9b93989fd9b0ca2f6847bbeaf","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnectorTestITCase.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -313,7 +313,7 @@ public void issueSYNCOPE10() {\n \n         connInstanceTO = getObject(response.getLocation(), ConnectorService.class, ConnInstanceTO.class);\n         assertNotNull(connInstanceTO);\n-        assertTrue(connInstanceTO.getCapabilities().isEmpty());\n+        assertFalse(connInstanceTO.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n \n         long connId = connInstanceTO.getId();\n \n@@ -337,26 +337,23 @@ public void issueSYNCOPE10() {\n         // Check for spring bean.\n         // ----------------------------------\n         ConnInstanceTO connInstanceBean = connectorService.readByResource(resourceTO.getName());\n-\n         assertNotNull(connInstanceBean);\n-        assertTrue(connInstanceBean.getCapabilities().isEmpty());\n+        assertFalse(connInstanceBean.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n         // ----------------------------------\n \n         // ----------------------------------\n         // Check for spring bean update after connector instance update.\n         // ----------------------------------\n-        connInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n+        connInstanceTO.getCapabilities().add(ConnectorCapability.AUTHENTICATE);\n \n         connectorService.update(connInstanceTO.getId(), connInstanceTO);\n         ConnInstanceTO actual = connectorService.read(connInstanceTO.getId());\n-\n         assertNotNull(actual);\n-        assertFalse(connInstanceTO.getCapabilities().isEmpty());\n+        assertTrue(connInstanceTO.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n \n         // check for spring bean update\n         connInstanceBean = connectorService.readByResource(resourceTO.getName());\n-\n-        assertFalse(connInstanceBean.getCapabilities().isEmpty());\n+        assertTrue(connInstanceBean.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n         // ----------------------------------\n     }\n "},{"sha":"6e384d4ea5535af1dab500bcdcbc41fe0dce8f02","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -29,6 +29,11 @@\n import java.io.InputStream;\n import java.security.AccessControlException;\n import java.util.List;\n+import javax.naming.NamingEnumeration;\n+import javax.naming.NamingException;\n+import javax.naming.directory.DirContext;\n+import javax.naming.directory.SearchControls;\n+import javax.naming.directory.SearchResult;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -40,11 +45,15 @@\n import org.apache.syncope.common.reqres.PagedResult;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n+import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n@@ -794,4 +803,87 @@ public void issueSYNCOPE543() {\n         assertNotNull(child.getAttrMap().get(\"icon\").getValues());\n         assertEquals(\"parentIcon\", child.getAttrMap().get(\"icon\").getValues().get(0));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE632() {\n+        RoleTO roleTO = null;\n+        try {\n+            // 1. create new LDAP resource having account id mapped to a derived attribute\n+            ResourceTO newLDAP = resourceService.read(RESOURCE_NAME_LDAP);\n+            newLDAP.setName(\"new-ldap\");\n+            newLDAP.setPropagationPrimary(true);\n+            MappingItemTO accountId = newLDAP.getRmapping().getAccountIdItem();\n+            accountId.setIntMappingType(IntMappingType.RoleDerivedSchema);\n+            accountId.setIntAttrName(\"displayProperty\");\n+            newLDAP.getRmapping().setAccountIdItem(accountId);\n+            newLDAP.getRmapping().setAccountLink(\"'cn=' + displayProperty + ',ou=groups,o=isp'\");\n+\n+            MappingItemTO description = new MappingItemTO();\n+            description.setIntMappingType(IntMappingType.RoleId);\n+            description.setExtAttrName(\"description\");\n+            description.setPurpose(MappingPurpose.BOTH);\n+            newLDAP.getRmapping().addItem(description);\n+\n+            newLDAP = createResource(newLDAP);\n+            assertNotNull(newLDAP);\n+\n+            // 2. create a role and give the resource created above\n+            roleTO = buildRoleTO(\"lastRole\");\n+            roleTO.getRAttrTemplates().add(\"icon\");\n+            roleTO.getAttrs().add(attributeTO(\"icon\", \"anIcon\"));\n+            roleTO.getRAttrTemplates().add(\"show\");\n+            roleTO.getAttrs().add(attributeTO(\"show\", \"true\"));\n+            roleTO.getRDerAttrTemplates().add(\"displayProperty\");\n+            roleTO.getDerAttrs().add(attributeTO(\"displayProperty\", null));\n+            roleTO.getResources().clear();\n+            roleTO.getResources().add(\"new-ldap\");\n+\n+            roleTO = createRole(roleTO);\n+            assertNotNull(roleTO);\n+\n+            // 3. update the role\n+            RoleMod roleMod = new RoleMod();\n+            roleMod.setId(roleTO.getId());\n+            roleMod.getAttrsToRemove().add(\"icon\");\n+            roleMod.getAttrsToUpdate().add(attributeMod(\"icon\", \"anotherIcon\"));\n+\n+            roleTO = updateRole(roleMod);\n+            assertNotNull(roleTO);\n+\n+            // 4. check that a single group exists in LDAP for the role created and updated above\n+            int entries = 0;\n+            DirContext ctx = null;\n+            try {\n+                ctx = getLdapResourceDirContext(null, null);\n+\n+                SearchControls ctls = new SearchControls();\n+                ctls.setReturningAttributes(new String[] { \"*\", \"+\" });\n+                ctls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n+\n+                NamingEnumeration<SearchResult> result =\n+                        ctx.search(\"ou=groups,o=isp\", \"(description=\" + roleTO.getId() + \")\", ctls);\n+                while (result.hasMore()) {\n+                    SearchResult entry = result.next();\n+                    entries++;\n+                }\n+            } catch (Exception e) {\n+                // ignore\n+            } finally {\n+                if (ctx != null) {\n+                    try {\n+                        ctx.close();\n+                    } catch (NamingException e) {\n+                        // ignore\n+                    }\n+                }\n+            }\n+\n+            assertEquals(1, entries);\n+        } finally {\n+            if (roleTO != null) {\n+                roleService.delete(roleTO.getId());\n+            }\n+            resourceService.delete(\"new-ldap\");\n+        }\n+    }\n }"},{"sha":"3fa50e253756f09995063c306c23dd18945484bd","filename":"core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -158,7 +158,7 @@ public void updateWithoutApproval() {\n     }\n \n     @Test\n-    public void updateWitApproval() {\n+    public void updateWithApproval() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n \n         // 1. create user as admin"},{"sha":"0ed97d7e80cce32030269f6b5245738463f5fd8f","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c42936baaf870e829cd3d91998b8551d4bbd1f76/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c42936baaf870e829cd3d91998b8551d4bbd1f76/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c42936baaf870e829cd3d91998b8551d4bbd1f76","patch":"@@ -334,7 +334,7 @@ under the License.\n \n     <activiti.version>5.16.4</activiti.version>\n \n-    <aspectj.version>1.8.4</aspectj.version>\n+    <aspectj.version>1.8.5</aspectj.version>\n     \n     <cxf.version>3.0.3</cxf.version>\n     <camel.version>2.14.1</camel.version>\t\n@@ -1152,7 +1152,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-dependency-plugin</artifactId>\n-          <version>2.9</version>\n+          <version>2.10</version>\n           <configuration>\n             <outputDirectory>${bundles.directory}</outputDirectory>\n             <artifactItems>"}]}