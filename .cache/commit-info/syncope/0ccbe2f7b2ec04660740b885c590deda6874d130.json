{"sha":"0ccbe2f7b2ec04660740b885c590deda6874d130","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBjY2JlMmY3YjJlYzA0NjYwNzQwYjg4NWM1OTBkZWRhNjg3NGQxMzA=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-01-14T14:31:14Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-01-14T14:31:14Z"},"message":"SYNCOPE-272 merge from branch 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1432929 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"14b196cc4075d45979629681a41545ab5030ccbf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/14b196cc4075d45979629681a41545ab5030ccbf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0ccbe2f7b2ec04660740b885c590deda6874d130","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0ccbe2f7b2ec04660740b885c590deda6874d130","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0ccbe2f7b2ec04660740b885c590deda6874d130","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0ccbe2f7b2ec04660740b885c590deda6874d130/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"4fefb4d544415014b4451ff2872eb745cb7909eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fefb4d544415014b4451ff2872eb745cb7909eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4fefb4d544415014b4451ff2872eb745cb7909eb"}],"stats":{"total":56,"additions":56,"deletions":0},"files":[{"sha":"7f65b0377e2cf12347a7b2a48fcbb62ec539eed0","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ccbe2f7b2ec04660740b885c590deda6874d130/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ccbe2f7b2ec04660740b885c590deda6874d130/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=0ccbe2f7b2ec04660740b885c590deda6874d130","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.rest;\n \n+import java.util.Collections;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -30,6 +31,7 @@\n import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n+import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n import org.apache.syncope.client.to.NotificationTO;\n import org.apache.syncope.client.to.NotificationTaskTO;\n@@ -654,4 +656,58 @@ private TaskExecTO execTask(final Class<? extends TaskTO> taskClass, final Long\n         }\n         return taskTO.getExecutions().get(0);\n     }\n+\n+    @Test\n+    public void issueSYNCOPE272() {\n+\n+        //Create user with testdb resource\n+        UserTO userTO = new UserTO();\n+        userTO.setUsername(\"syncope272@syncope.apache.org\");\n+        userTO.setPassword(\"password\");\n+        userTO.addAttribute(attributeTO(\"firstname\", \"syncope272\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"syncope272\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"syncope272@syncope.apache.org\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"syncope272\"));\n+        userTO.addResource(\"resource-testdb\");\n+\n+        userTO = userService.create(userTO);\n+\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getPropagationTOs().size());\n+        assertTrue(userTO.getPropagationTOs().get(0).getStatus().isSuccessful());\n+\n+        // Update sync task\n+        SyncTaskTO task = taskService.read(SYNC_TASK_ID, SyncTaskTO.class);\n+        assertNotNull(task);\n+\n+        // add user template\n+\n+        AttributeTO newAttrTO = new AttributeTO();\n+        newAttrTO.setSchema(\"firstname\");\n+        newAttrTO.setValues(Collections.singletonList(\"\"));\n+\n+        UserTO template = new UserTO();\n+        template.addAttribute(newAttrTO);\n+        template.addAttribute(attributeTO(\"userId\", \"'test'\"));\n+        template.addAttribute(attributeTO(\"fullname\", \"'test'\"));\n+        template.addAttribute(attributeTO(\"surname\", \"'test'\"));\n+        template.addResource(\"resource-testdb\");\n+\n+        task.setUserTemplate(template);\n+\n+        SyncTaskTO actual = taskService.update(task.getId(), task);\n+        assertNotNull(actual);\n+        assertEquals(task.getId(), actual.getId());\n+\n+        TaskExecTO taskExecTO = execTask(SyncTaskTO.class, SYNC_TASK_ID, 50, false);\n+        assertNotNull(actual);\n+        assertEquals(task.getId(), actual.getId());\n+\n+        assertNotNull(taskExecTO.getStatus());\n+        assertTrue(PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()).isSuccessful());\n+\n+        userTO = userService.read(\"syncope272@syncope.apache.org\");\n+        assertNotNull(userTO);\n+        assertNotNull(userTO.getAttributeMap().get(\"firstname\").getValues().get(0));\n+    }\n }\n\\ No newline at end of file"}]}