{"sha":"d0dc9b35f8e901c692c6df8b3016fd2384d94d62","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQwZGM5YjM1ZjhlOTAxYzY5MmM2ZGY4YjMwMTZmZDIzODRkOTRkNjI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-02-27T14:18:15Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-02-27T14:19:05Z"},"message":"[SYNCOPE-1030] fix + integration test","tree":{"sha":"5cf6d92139cc4e3d11f3565c4399e5692b1980a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5cf6d92139cc4e3d11f3565c4399e5692b1980a1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d0dc9b35f8e901c692c6df8b3016fd2384d94d62","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0dc9b35f8e901c692c6df8b3016fd2384d94d62","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d0dc9b35f8e901c692c6df8b3016fd2384d94d62","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"b193aec33242410bccb668ae54d5029c62c03285","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b193aec33242410bccb668ae54d5029c62c03285","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b193aec33242410bccb668ae54d5029c62c03285"}],"stats":{"total":168,"additions":148,"deletions":20},"files":[{"sha":"c09fb43d15dc1bdefc7fca3236abfb761b9e9c26","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -227,10 +227,6 @@ public String transform(final AbstractSchemaTO input) {\n                                 new PropertyModel<List<String>>(bean.getObject(), fieldName),\n                                 new ListModel(Arrays.asList(listItemType.getEnumConstants()))).hideLabel();\n                     } else {\n-                        if (((List) wrapper.getPropertyValue(fieldName)).isEmpty()) {\n-                            ((List) wrapper.getPropertyValue(fieldName)).add(null);\n-                        }\n-\n                         panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(bean.getObject(), fieldName)).build(\n                                 \"value\","},{"sha":"7837f1234bfe9f04b2d8fe330d66f6b17856dd16","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -220,7 +220,7 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                                     afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n                             ? StringUtils.EMPTY\n                             : afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n-                                    iterator().next();\n+                            iterator().next();\n \n                     return new Label(\"field\", remoteId);\n                 } else if (\"status\".equalsIgnoreCase(key)) {"},{"sha":"603e49bd513ba124a2e9a6044b4b54fe5a420de7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -64,7 +64,7 @@ public class RealmDetails extends Panel {\n \n         @Override\n         protected Map<String, String> load() {\n-            Map<String, String> res = new HashMap<>();\n+            Map<String, String> res = new LinkedHashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n@@ -78,7 +78,7 @@ protected Map<String, String> load() {\n \n         @Override\n         protected Map<String, String> load() {\n-            Map<String, String> res = new HashMap<>();\n+            Map<String, String> res = new LinkedHashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }"},{"sha":"759600e10f8180f405853b7f92146216f6d527d6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -18,7 +18,10 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.List;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n@@ -47,6 +50,7 @@ public <T extends AbstractPolicyTO> List<T> getPolicies(final PolicyType type) {\n \n         try {\n             res.addAll((List<T>) getService(PolicyService.class).list(type));\n+            Collections.sort(res, new PolicyComparator());\n         } catch (Exception ignore) {\n             LOG.debug(\"No policy found\", ignore);\n         }\n@@ -65,4 +69,15 @@ public <T extends AbstractPolicyTO> void updatePolicy(final T policy) {\n     public void delete(final String key) {\n         getService(PolicyService.class).delete(key);\n     }\n+\n+    private class PolicyComparator implements Comparator<AbstractPolicyTO>, Serializable {\n+\n+        private static final long serialVersionUID = -4921433085213223115L;\n+\n+        @Override\n+        public int compare(final AbstractPolicyTO left, final AbstractPolicyTO right) {\n+            return left == null ? -1 : right == null ? 1 : left.getDescription().compareTo(right.getDescription());\n+        }\n+\n+    }\n }"},{"sha":"67ed20b0110b598201d202be177df995aff5ec53","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":127,"deletions":9,"changes":136,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -18,12 +18,18 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Policies;\n+import org.apache.syncope.client.console.pages.Realms;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -84,8 +90,9 @@ private void createAccountPolicy(final String description) {\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        Assert.assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n-                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n+        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n+        Assert.assertNotNull(component);\n     }\n \n     private void createPasswordPolicy(final String description) {\n@@ -423,13 +430,10 @@ public void createUpdateDeleteAccountPolicy() {\n         deleteAccountPolicy(description);\n     }\n \n-    @Test\n-    public void createComposeDeleteAccountPolicy() {\n-        final String description = \"Account Policy To Be Composed\";\n-        createAccountPolicy(description);\n+    private void composeDefaultAccountPolicy(final String policyDescription, final String ruleName) {\n \n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n-                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", policyDescription);\n \n         Assert.assertNotNull(component);\n         TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelCompose:composeLink\");\n@@ -443,7 +447,7 @@ public void createComposeDeleteAccountPolicy() {\n \n         FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n-        formTester.setValue(\"view:name:textField\", \"myrule\");\n+        formTester.setValue(\"view:name:textField\", ruleName);\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n@@ -452,22 +456,29 @@ public void createComposeDeleteAccountPolicy() {\n \n         formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n+        formTester.setValue(\"view:bean:propView:1:value:spinner\", \"6\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n         component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n-                \"myrule\");\n+                ruleName);\n \n         Assert.assertNotNull(component);\n \n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:exit\");\n \n         closeCallBack(modal);\n+    }\n \n+    @Test\n+    public void createComposeDeleteAccountPolicy() {\n+        final String description = \"Account Policy To Be Composed\";\n+        createAccountPolicy(description);\n+        composeDefaultAccountPolicy(description, \"myrule\");\n         deleteAccountPolicy(description);\n     }\n \n@@ -663,4 +674,111 @@ public void createComposeDeletePullPolicy() {\n \n         deletePullPolicy(description);\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1030() {\n+        final String description = \"SYNCOPE-1030\";\n+        // Create account policy\n+        createAccountPolicy(description);\n+        composeDefaultAccountPolicy(description, \"issue\");\n+\n+        // goto realms\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n+\n+        // edit root realm\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+\n+        // set new account policy\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n+                + \"accountPolicy:field-label\", \"Account Policy\");\n+\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.select(\"view:details:container:accountPolicy:dropDownChoiceField\", 0);\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                Constants.ON_CLICK);\n+\n+        // create user with a valid account name\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\",\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+\n+        TESTER.assertComponent(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n+\n+        formTester = TESTER.newFormTester(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\", \"rossini 1030\");\n+        formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\", \"ross1030@apace.org\");\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"username\",\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n+        assertNotNull(component);\n+\n+        // delete the new user\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"onclick\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        component = findComponentByProp(\"username\",\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n+        assertNull(component);\n+\n+        // delete default policy\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n+        deleteAccountPolicy(description);\n+    }\n }"},{"sha":"2631395a2dde6ecd1de1363fe1039d1c37a7786a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0dc9b35f8e901c692c6df8b3016fd2384d94d62/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=d0dc9b35f8e901c692c6df8b3016fd2384d94d62","patch":"@@ -86,9 +86,8 @@ public void clickToCloneUser() {\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n \n-        TESTER.\n-                assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n-                        TextField.class);\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n \n         FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);"}]}