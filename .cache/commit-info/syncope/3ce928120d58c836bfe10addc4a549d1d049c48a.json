{"sha":"3ce928120d58c836bfe10addc4a549d1d049c48a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNjZTkyODEyMGQ1OGM4MzZiZmUxMGFkZGM0YTU0OWQxZDA0OWM0OGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-22T15:55:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-22T15:59:07Z"},"message":"[SYNCOPE-1238] Stop the AjaxTimerBehavior once all expected connectors and resources are covered","tree":{"sha":"6c421430959ca5e19d823a73c8eb6b34796eaaa6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c421430959ca5e19d823a73c8eb6b34796eaaa6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3ce928120d58c836bfe10addc4a549d1d049c48a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ce928120d58c836bfe10addc4a549d1d049c48a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3ce928120d58c836bfe10addc4a549d1d049c48a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ce928120d58c836bfe10addc4a549d1d049c48a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e611d3e0d2a7bbce1d8114c56528777412795909","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e611d3e0d2a7bbce1d8114c56528777412795909","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e611d3e0d2a7bbce1d8114c56528777412795909"}],"stats":{"total":70,"additions":42,"deletions":28},"files":[{"sha":"fda5e0e3a5e7ba9a6dac2d632f4ec393dc195c8b","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ce928120d58c836bfe10addc4a549d1d049c48a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ce928120d58c836bfe10addc4a549d1d049c48a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=3ce928120d58c836bfe10addc4a549d1d049c48a","patch":"@@ -29,6 +29,7 @@\n import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Collectors;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -163,7 +164,8 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        body.add(new TopologyWebSocketBehavior());\n+        final TopologyWebSocketBehavior websocket = new TopologyWebSocketBehavior();\n+        body.add(websocket);\n \n         togglePanel = new TopologyTogglePanel(\"toggle\", getPageReference());\n         body.add(togglePanel);\n@@ -373,14 +375,15 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n         // -----------------------------------------\n         // Add Resources\n         // -----------------------------------------\n-        final Collection<String> administrableConns = new HashSet<>();\n+        final Collection<String> adminConns = new HashSet<>();\n         connModel.getObject().values().forEach(connInstances -> {\n-            administrableConns.addAll(connInstances.stream().map(EntityTO::getKey).collect(Collectors.toList()));\n+            adminConns.addAll(connInstances.stream().map(EntityTO::getKey).collect(Collectors.toList()));\n         });\n \n+        final Set<String> adminRes = new HashSet<>();\n         final List<String> connToBeProcessed = new ArrayList<>();\n         resModel.getObject().stream().\n-                filter((resourceTO) -> (administrableConns.contains(resourceTO.getConnector()))).\n+                filter((resourceTO) -> (adminConns.contains(resourceTO.getConnector()))).\n                 forEachOrdered(resourceTO -> {\n                     final TopologyNode topologynode = new TopologyNode(\n                             resourceTO.getKey(), resourceTO.getKey(), TopologyNode.Kind.RESOURCE);\n@@ -392,6 +395,9 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n                         connections.put(resourceTO.getConnector(), remoteConnections);\n                     }\n                     remoteConnections.put(topologynode.getKey(), topologynode);\n+\n+                    adminRes.add(resourceTO.getKey());\n+\n                     if (!connToBeProcessed.contains(resourceTO.getConnector())) {\n                         connToBeProcessed.add(resourceTO.getConnector());\n                     }\n@@ -479,6 +485,10 @@ public void renderHead(final Component component, final IHeaderResponse response\n \n             @Override\n             protected void onTimer(final AjaxRequestTarget target) {\n+                if (websocket.connCheckDone(adminConns) && websocket.resCheckDone(adminRes)) {\n+                    stop(target);\n+                }\n+\n                 target.appendJavaScript(\"checkConnection()\");\n \n                 if (getUpdateInterval().seconds() < 5.0) {"},{"sha":"1134a0040583c66e2666da8d6863f1c0c6d0cdec","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":28,"deletions":24,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ce928120d58c836bfe10addc4a549d1d049c48a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ce928120d58c836bfe10addc4a549d1d049c48a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=3ce928120d58c836bfe10addc4a549d1d049c48a","patch":"@@ -21,6 +21,8 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n@@ -47,13 +49,15 @@ public class TopologyWebSocketBehavior extends WebSocketBehavior {\n \n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n-    private final Map<String, String> resources = new HashMap<>();\n+    private final Map<String, String> resources =\n+            Collections.<String, String>synchronizedMap(new HashMap<String, String>());\n \n-    private final Set<String> runningResCheck = new HashSet<>();\n+    private final Set<String> runningResCheck = Collections.synchronizedSet(new HashSet<String>());\n \n-    private final Map<String, String> connectors = new HashMap<>();\n+    private final Map<String, String> connectors =\n+            Collections.<String, String>synchronizedMap(new HashMap<String, String>());\n \n-    private final Set<String> runningConnCheck = new HashSet<>();\n+    private final Set<String> runningConnCheck = Collections.synchronizedSet(new HashSet<String>());\n \n     private final ConnectorRestClient connectorRestClient = new ConnectorRestClient();\n \n@@ -75,12 +79,10 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n                                 \"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", TopologyNode.Status.UNKNOWN, ckey));\n                     }\n \n-                    synchronized (runningConnCheck) {\n-                        if (runningConnCheck.contains(ckey)) {\n-                            LOG.debug(\"Running connection check for connector {}\", ckey);\n-                        } else {\n-                            runningConnCheck.add(ckey);\n-                        }\n+                    if (runningConnCheck.contains(ckey)) {\n+                        LOG.debug(\"Running connection check for connector {}\", ckey);\n+                    } else {\n+                        runningConnCheck.add(ckey);\n                     }\n \n                     SyncopeConsoleSession.get().execute(new ConnCheck(ckey));\n@@ -96,12 +98,10 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n                                 \"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", TopologyNode.Status.UNKNOWN, rkey));\n                     }\n \n-                    synchronized (runningResCheck) {\n-                        if (runningResCheck.contains(rkey)) {\n-                            LOG.debug(\"Running connection check for resource {}\", rkey);\n-                        } else {\n-                            runningResCheck.add(rkey);\n-                        }\n+                    if (runningResCheck.contains(rkey)) {\n+                        LOG.debug(\"Running connection check for resource {}\", rkey);\n+                    } else {\n+                        runningResCheck.add(rkey);\n                     }\n \n                     SyncopeConsoleSession.get().execute(new ResCheck(rkey));\n@@ -120,6 +120,14 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n         }\n     }\n \n+    public boolean connCheckDone(final Collection<String> connectors) {\n+        return this.connectors.keySet().containsAll(connectors);\n+    }\n+\n+    public boolean resCheckDone(final Collection<String> resources) {\n+        return this.resources.keySet().containsAll(resources);\n+    }\n+\n     class ConnCheck implements Runnable {\n \n         private final String key;\n@@ -151,10 +159,8 @@ public void run() {\n                     res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", TopologyNode.Status.FAILURE, key);\n                 }\n \n-                synchronized (runningConnCheck) {\n-                    connectors.put(key, res);\n-                    runningConnCheck.remove(key);\n-                }\n+                connectors.put(key, res);\n+                runningConnCheck.remove(key);\n             } finally {\n                 ThreadContext.detach();\n             }\n@@ -192,10 +198,8 @@ public void run() {\n                     res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", TopologyNode.Status.FAILURE, key);\n                 }\n \n-                synchronized (runningResCheck) {\n-                    resources.put(key, res);\n-                    runningResCheck.remove(key);\n-                }\n+                resources.put(key, res);\n+                runningResCheck.remove(key);\n             } finally {\n                 ThreadContext.detach();\n             }"}]}