{"sha":"7187c35ab562c233fdefdc41e44a27b13ec46863","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxODdjMzVhYjU2MmMyMzNmZGVmZGM0MWU0NGEyN2IxM2VjNDY4NjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-29T08:31:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-29T08:31:51Z"},"message":"[SYNCOPE-1129] Fix IT execution","tree":{"sha":"db98dc0f75298dc48f274b73c922388dbe1ca317","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/db98dc0f75298dc48f274b73c922388dbe1ca317"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7187c35ab562c233fdefdc41e44a27b13ec46863","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7187c35ab562c233fdefdc41e44a27b13ec46863","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7187c35ab562c233fdefdc41e44a27b13ec46863","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7187c35ab562c233fdefdc41e44a27b13ec46863/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b4713c15f9ea28bb108ee2e82d986a8011586c43","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4713c15f9ea28bb108ee2e82d986a8011586c43","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4713c15f9ea28bb108ee2e82d986a8011586c43"}],"stats":{"total":76,"additions":28,"deletions":48},"files":[{"sha":"2d23df644037269eab97662cd3489b140d2c8475","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;"},{"sha":"394359b73c4fa3ff69da6a84d3018cfe614c3055","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import static org.apache.syncope.core.persistence.jpa.dao.AbstractDAO.LOG;\n-\n import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.Collection;"},{"sha":"1a425f3d4a75340c4e10ca30b22289d0b609b554","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -69,7 +69,6 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.security.authentication.AuthenticationCredentialsNotFoundException;\n@@ -86,7 +85,7 @@\n  * @see UsernamePasswordAuthenticationProvider\n  * @see SyncopeAuthenticationDetails\n  */\n-public class AuthDataAccessor implements InitializingBean {\n+public class AuthDataAccessor {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AuthDataAccessor.class);\n \n@@ -141,18 +140,21 @@ public class AuthDataAccessor implements InitializingBean {\n     @Autowired\n     protected ImplementationLookup implementationLookup;\n \n-    protected Map<String, JWTSSOProvider> jwtSSOProviders = new HashMap<>();\n+    private Map<String, JWTSSOProvider> jwtSSOProviders;\n \n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n-        for (Class<?> clazz : implementationLookup.getJWTSSOProviderClasses()) {\n-            JWTSSOProvider jwtSSOProvider = (JWTSSOProvider) ApplicationContextProvider.getBeanFactory().\n-                    createBean(clazz, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-            jwtSSOProviders.put(jwtSSOProvider.getIssuer(), jwtSSOProvider);\n+    public JWTSSOProvider getJWTSSOProvider(final String issuer) {\n+        synchronized (this) {\n+            if (jwtSSOProviders == null) {\n+                jwtSSOProviders = new HashMap<>();\n+\n+                for (Class<?> clazz : implementationLookup.getJWTSSOProviderClasses()) {\n+                    JWTSSOProvider jwtSSOProvider = (JWTSSOProvider) ApplicationContextProvider.getBeanFactory().\n+                            createBean(clazz, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+                    jwtSSOProviders.put(jwtSSOProvider.getIssuer(), jwtSSOProvider);\n+                }\n+            }\n         }\n-    }\n \n-    public JWTSSOProvider getJWTSSOProvider(final String issuer) {\n         JWTSSOProvider provider = jwtSSOProviders.get(issuer);\n         if (provider == null) {\n             throw new AuthenticationCredentialsNotFoundException("},{"sha":"d40a0969587c8700593abf60b398cbed564b4483","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeJWTSSOProvider.java","status":"modified","additions":3,"deletions":16,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -20,41 +20,28 @@\n \n import javax.annotation.Resource;\n import org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm;\n-import org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureVerifier;\n import org.apache.cxf.rs.security.jose.jws.JwsHeaders;\n-import org.apache.cxf.rs.security.jose.jws.JwsSignatureProvider;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n import org.apache.cxf.rs.security.jose.jws.JwsVerificationSignature;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Default implementation for internal JWT validation.\n  */\n-public class SyncopeJWTSSOProvider implements JWTSSOProvider, InitializingBean {\n+public class SyncopeJWTSSOProvider implements JWTSSOProvider {\n \n     @Resource(name = \"jwtIssuer\")\n     private String jwtIssuer;\n \n-    @Resource(name = \"jwsKey\")\n-    private String jwsKey;\n-\n-    @Autowired\n-    private JwsSignatureProvider signatureProvider;\n+    @Resource(name = \"syncopeJWTSSOProviderDelegate\")\n+    private JwsSignatureVerifier delegate;\n \n     @Autowired\n     private UserDAO userDAO;\n \n-    private JwsSignatureVerifier delegate;\n-\n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n-        delegate = new HmacJwsSignatureVerifier(jwsKey.getBytes(), signatureProvider.getAlgorithm());\n-    }\n-\n     @Override\n     public String getIssuer() {\n         return jwtIssuer;"},{"sha":"85a44a449dc5efd8bbed324366cfebaddcbe26a4","filename":"core/spring/src/main/resources/securityContext.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -54,6 +54,12 @@ under the License.\n     <constructor-arg value=\"${adminPassword}\" index=\"1\"/>\n   </bean>\n \n+  <bean id=\"syncopeJWTSSOProviderDelegate\" class=\"org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureVerifier\">\n+    <constructor-arg value=\"#{jwsKey.getBytes()}\" index=\"0\"/>\n+    <constructor-arg index=\"1\">\n+      <value type=\"org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm\">HS512</value>\n+    </constructor-arg>\n+  </bean>\n   <bean id=\"jwsSignatureProvider\" class=\"org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureProvider\">\n     <constructor-arg value=\"#{jwsKey.getBytes()}\" index=\"0\"/>\n     <constructor-arg index=\"1\">"},{"sha":"e670e935b607f4bc0cee0d3707e3b03b92529953","filename":"ext/elasticsearch/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/ElasticsearchAnySearchDAO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import static org.apache.syncope.core.persistence.jpa.dao.AbstractDAO.LOG;\n-\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;"},{"sha":"91e9ff0929133cd70e4fafebbdfd895e60603f4e","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":2,"deletions":15,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -36,9 +36,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureVerifier;\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactConsumer;\n-import org.apache.cxf.rs.security.jose.jws.JwsSignatureProvider;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -117,14 +115,13 @@\n import org.opensaml.saml.saml2.metadata.impl.SingleLogoutServiceBuilder;\n import org.opensaml.xmlsec.keyinfo.KeyInfoGenerator;\n import org.opensaml.xmlsec.keyinfo.impl.X509KeyInfoGeneratorFactory;\n-import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.security.authentication.BadCredentialsException;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> implements InitializingBean {\n+public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> {\n \n     private static final Integer JWT_RELAY_STATE_DURATION = 5;\n \n@@ -167,19 +164,9 @@ public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> implement\n     @Autowired\n     private SAML2ReaderWriter saml2rw;\n \n-    @Resource(name = \"jwsKey\")\n-    private String jwsKey;\n-\n-    @Autowired\n-    private JwsSignatureProvider jwsSignatureProvider;\n-\n+    @Resource(name = \"syncopeJWTSSOProviderDelegate\")\n     private JwsSignatureVerifier jwsSignatureVerifier;\n \n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n-        jwsSignatureVerifier = new HmacJwsSignatureVerifier(jwsKey.getBytes(), jwsSignatureProvider.getAlgorithm());\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANONYMOUS + \"')\")\n     public void getMetadata(final String spEntityID, final String urlContext, final OutputStream os) {\n         check();"},{"sha":"0a3571c9c659760a1add73fba6239d9977f4d00d","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7187c35ab562c233fdefdc41e44a27b13ec46863/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7187c35ab562c233fdefdc41e44a27b13ec46863/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=7187c35ab562c233fdefdc41e44a27b13ec46863","patch":"@@ -77,6 +77,10 @@ public class ITImplementationLookup implements ImplementationLookup {\n \n         {\n             Set<String> classNames = new HashSet<>();\n+            classNames.add(SyncopeJWTSSOProvider.class.getName());\n+            put(Type.JWT_SSO_PROVIDER, classNames);\n+\n+            classNames = new HashSet<>();\n             classNames.add(ReconciliationReportletConf.class.getName());\n             classNames.add(UserReportletConf.class.getName());\n             classNames.add(GroupReportletConf.class.getName());"}]}