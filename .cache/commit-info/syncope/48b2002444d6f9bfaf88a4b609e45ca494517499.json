{"sha":"48b2002444d6f9bfaf88a4b609e45ca494517499","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4YjIwMDI0NDRkNmY5YmZhZjg4YTRiNjA5ZTQ1Y2E0OTQ1MTc0OTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-23T07:15:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-23T07:19:06Z"},"message":"Prevent exceptions when attempting to read own groups as admin","tree":{"sha":"804b9ba14e44da25fe6db629650cba6b0a3dd6f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/804b9ba14e44da25fe6db629650cba6b0a3dd6f7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/48b2002444d6f9bfaf88a4b609e45ca494517499","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b2002444d6f9bfaf88a4b609e45ca494517499","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/48b2002444d6f9bfaf88a4b609e45ca494517499","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b2002444d6f9bfaf88a4b609e45ca494517499/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"74ee038a4b52bb58954900c3ad6692eb1d6176c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/74ee038a4b52bb58954900c3ad6692eb1d6176c1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/74ee038a4b52bb58954900c3ad6692eb1d6176c1"}],"stats":{"total":9,"additions":9,"deletions":0},"files":[{"sha":"c4ccc53e54957cb7cc7b23e0af4acd0c30d2ae00","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b2002444d6f9bfaf88a4b609e45ca494517499/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b2002444d6f9bfaf88a4b609e45ca494517499/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=48b2002444d6f9bfaf88a4b609e45ca494517499","patch":"@@ -20,12 +20,14 @@\n \n import java.lang.reflect.Method;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n+import javax.annotation.Resource;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -77,6 +79,9 @@\n @Component\n public class GroupLogic extends AbstractAnyLogic<GroupTO, GroupPatch> {\n \n+    @Resource(name = \"adminUser\")\n+    protected String adminUser;\n+\n     @Autowired\n     protected AnySearchDAO searchDAO;\n \n@@ -129,6 +134,10 @@ public GroupTO read(final String key) {\n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n     @Transactional(readOnly = true)\n     public List<GroupTO> own() {\n+        if (adminUser.equals(AuthContextUtils.getUsername())) {\n+            return Collections.emptyList();\n+        }\n+\n         return userDAO.findAllGroups(userDAO.findByUsername(AuthContextUtils.getUsername())).stream().\n                 map(group -> binder.getGroupTO(group, true)).collect(Collectors.toList());\n     }"}]}