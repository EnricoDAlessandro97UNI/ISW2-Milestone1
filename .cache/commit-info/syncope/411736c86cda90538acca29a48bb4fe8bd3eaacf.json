{"sha":"411736c86cda90538acca29a48bb4fe8bd3eaacf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQxMTczNmM4NmNkYTkwNTM4YWNjYTI5YTQ4YmI0ZmU4YmQzZWFhY2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-22T10:47:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-22T10:47:33Z"},"message":"[SYNCOPE-20] console UI for audit management completed\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1303723 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5599e26b3c74e44747e085ac51c04764fe0d7d04","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5599e26b3c74e44747e085ac51c04764fe0d7d04"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/411736c86cda90538acca29a48bb4fe8bd3eaacf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/411736c86cda90538acca29a48bb4fe8bd3eaacf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/411736c86cda90538acca29a48bb4fe8bd3eaacf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/411736c86cda90538acca29a48bb4fe8bd3eaacf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d1070a85bd2f33083824c5406531487787121443","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d1070a85bd2f33083824c5406531487787121443","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d1070a85bd2f33083824c5406531487787121443"}],"stats":{"total":898,"additions":777,"deletions":121},"files":[{"sha":"58f8ce9b005f4d25072d129b87f00d9881ef16d9","filename":"client/src/main/java/org/syncope/types/AuditLoggerName.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditLoggerName.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.types;\n+\n+import java.text.ParseException;\n+import org.codehaus.jackson.annotate.JsonCreator;\n+import org.codehaus.jackson.annotate.JsonProperty;\n+import org.codehaus.jackson.annotate.JsonTypeInfo;\n+import org.springframework.util.StringUtils;\n+import org.syncope.client.AbstractBaseBean;\n+import org.syncope.types.AuditElements.Category;\n+import org.syncope.types.AuditElements.Result;\n+\n+public class AuditLoggerName extends AbstractBaseBean {\n+\n+    private Category category;\n+\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+    private Enum<?> subcategory;\n+\n+    private Result result;\n+\n+    @JsonCreator\n+    public AuditLoggerName(@JsonProperty(\"category\") final Category category,\n+            @JsonProperty(\"subcategory\") final Enum<?> subcategory, @JsonProperty(\"result\") final Result result)\n+            throws IllegalArgumentException {\n+\n+        if (category == null || subcategory == null || result == null) {\n+            throw new IllegalArgumentException(\"Null values not permitted\");\n+        }\n+\n+        if (!category.getSubCategoryElements().contains(subcategory)) {\n+            throw new IllegalArgumentException(category.name() + \" does not contain \" + subcategory.name());\n+        }\n+\n+        this.category = category;\n+        this.subcategory = subcategory;\n+        this.result = result;\n+    }\n+\n+    public Category getCategory() {\n+        return category;\n+    }\n+\n+    public Result getResult() {\n+        return result;\n+    }\n+\n+    public Enum<?> getSubcategory() {\n+        return subcategory;\n+    }\n+\n+    public String toLoggerName() {\n+        return new StringBuilder().append(SyncopeLoggerType.AUDIT.getPrefix()).append('.').\n+                append(category.name()).append('.').\n+                append(subcategory.name()).append('.').\n+                append(result.name()).toString();\n+    }\n+\n+    public static AuditLoggerName fromLoggerName(final String loggerName)\n+            throws IllegalArgumentException, ParseException {\n+\n+        if (!StringUtils.hasText(loggerName)) {\n+            throw new IllegalArgumentException(\"Null value not permitted\");\n+        }\n+\n+        if (!loggerName.startsWith(SyncopeLoggerType.AUDIT.getPrefix())) {\n+            throw new ParseException(\"Audit logger name must start with \" + SyncopeLoggerType.AUDIT.getPrefix(), 0);\n+        }\n+\n+        String[] splitted = loggerName.split(\"\\\\.\");\n+        if (splitted == null || splitted.length < 5) {\n+            throw new ParseException(\"Unparsable logger name\", 0);\n+        }\n+\n+        Category category = Category.valueOf(splitted[2]);\n+        Enum<?> subcategory = Enum.valueOf(category.getSubCategory(), splitted[3]);\n+        Result result = Result.valueOf(splitted[4]);\n+\n+        return new AuditLoggerName(category, subcategory, result);\n+    }\n+}"},{"sha":"87afc9ee52899d60c5230ca2e2ef2cd1e249c6f8","filename":"client/src/test/java/org/syncope/client/test/JSONTest.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -34,6 +34,8 @@\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.WorkflowFormPropertyTO;\n+import org.syncope.types.AuditElements;\n+import org.syncope.types.AuditLoggerName;\n \n public class JSONTest {\n \n@@ -47,8 +49,8 @@ public void testSearchCondition() throws IOException {\n         final MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setRoleName(\"root\");\n \n-        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(usernameCond), NodeCond\n-                .getLeafCond(membershipCond));\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(usernameCond), NodeCond.getLeafCond(\n+                membershipCond));\n \n         assertTrue(searchCondition.checkValidity());\n \n@@ -115,4 +117,18 @@ public void testReportletConfImplementations() throws IOException {\n         ReportTO actual = mapper.readValue(writer.toString(), ReportTO.class);\n         assertEquals(report, actual);\n     }\n+\n+    @Test\n+    public void testAuditLoggerName() throws IOException {\n+        AuditLoggerName auditLoggerName = new AuditLoggerName(AuditElements.Category.report,\n+                AuditElements.ReportSubCategory.create, AuditElements.Result.failure);\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+\n+        StringWriter writer = new StringWriter();\n+        mapper.writeValue(writer, auditLoggerName);\n+\n+        AuditLoggerName actual = mapper.readValue(writer.toString(), AuditLoggerName.class);\n+        assertEquals(auditLoggerName, actual);\n+    }\n }"},{"sha":"b67f7f408a46e93b1d8b39611677bbbe2b75d0ee","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -72,6 +72,7 @@\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.pages.panels.PoliciesPanel;\n import org.syncope.console.rest.ConfigurationRestClient;\n+import org.syncope.console.rest.LoggerRestClient;\n import org.syncope.console.rest.NotificationRestClient;\n import org.syncope.console.rest.WorkflowRestClient;\n import org.syncope.console.wicket.markup.html.form.ActionLink;\n@@ -89,6 +90,9 @@ public class Configuration extends BasePage {\n     @SpringBean\n     private ConfigurationRestClient confRestClient;\n \n+    @SpringBean\n+    private LoggerRestClient loggerRestClient;\n+\n     @SpringBean\n     private NotificationRestClient notificationRestClient;\n \n@@ -188,7 +192,7 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n         add(workflowDefContainer);\n \n         // Logger stuff\n-        PropertyListView coreLoggerList = new LoggerPropertyList(null, \"corelogger\", confRestClient.listLogs());\n+        PropertyListView coreLoggerList = new LoggerPropertyList(null, \"corelogger\", loggerRestClient.listLogs());\n         WebMarkupContainer coreLoggerContainer = new WebMarkupContainer(\"coreLoggerContainer\");\n         coreLoggerContainer.add(coreLoggerList);\n         coreLoggerContainer.setOutputMarkupId(true);\n@@ -367,8 +371,8 @@ public void onClick() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS, String\n-                        .valueOf(confPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS, String.valueOf(\n+                        confPaginatorRows));\n                 confTable.setItemsPerPage(confPaginatorRows);\n \n                 target.add(confContainer);\n@@ -512,8 +516,8 @@ public Page createPage() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_NOTIFICATION_PAGINATOR_ROWS, String\n-                        .valueOf(notificationPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_NOTIFICATION_PAGINATOR_ROWS, String.valueOf(\n+                        notificationPaginatorRows));\n                 notificationTable.setItemsPerPage(notificationPaginatorRows);\n \n                 target.add(notificationContainer);\n@@ -652,11 +656,11 @@ public void detach() {\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     try {\n                         if (getId().equals(\"corelogger\")) {\n-                            confRestClient.setLogLevel(item.getModelObject().getName(), item.getModelObject()\n-                                    .getLevel());\n+                            loggerRestClient.setLogLevel(item.getModelObject().getName(),\n+                                    item.getModelObject().getLevel());\n                         } else {\n-                            consoleLoggerController.setLogLevel(item.getModelObject().getName(), item.getModelObject()\n-                                    .getLevel());\n+                            consoleLoggerController.setLogLevel(item.getModelObject().getName(),\n+                                    item.getModelObject().getLevel());\n                         }\n \n                         info(getString(\"operation_succeded\"));"},{"sha":"1898f22d4a4ac624a0122bda51288926961decfe","filename":"console/src/main/java/org/syncope/console/pages/Reports.java","status":"modified","additions":208,"deletions":2,"changes":210,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -22,8 +22,11 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -36,25 +39,41 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.util.StringUtils;\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n+import org.syncope.console.pages.panels.JQueryTabbedPanel;\n+import org.syncope.console.rest.LoggerRestClient;\n import org.syncope.console.rest.ReportRestClient;\n import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.syncope.console.wicket.markup.html.form.ActionLink;\n import org.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.syncope.types.AuditElements.Category;\n+import org.syncope.types.AuditElements.Result;\n+import org.syncope.types.AuditLoggerName;\n \n /**\n  * Auditing and Reporting.\n@@ -70,11 +89,16 @@ public class Reports extends BasePage {\n     @SpringBean\n     private ReportRestClient reportRestClient;\n \n+    @SpringBean\n+    private LoggerRestClient loggerRestClient;\n+\n     @SpringBean\n     private PreferenceManager prefMan;\n \n     private WebMarkupContainer reportContainer;\n \n+    private WebMarkupContainer auditContainer;\n+\n     private int paginatorRows;\n \n     private final ModalWindow window;\n@@ -90,6 +114,7 @@ public Reports(final PageParameters parameters) {\n         add(window);\n \n         setupReport();\n+        setupAudit();\n     }\n \n     private void setupReport() {\n@@ -206,8 +231,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_REPORT_PAGINATOR_ROWS, String\n-                        .valueOf(paginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_REPORT_PAGINATOR_ROWS,\n+                        String.valueOf(paginatorRows));\n                 reportTable.setItemsPerPage(paginatorRows);\n \n                 target.add(reportContainer);\n@@ -243,6 +268,34 @@ public Page createPage() {\n         add(createLink);\n     }\n \n+    private void setupAudit() {\n+        auditContainer = new WebMarkupContainer(\"auditContainer\");\n+        auditContainer.setOutputMarkupId(true);\n+        add(auditContainer);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(auditContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\"Audit\",\n+                \"list\"));\n+\n+        Form form = new Form(\"auditForm\");\n+        auditContainer.add(form);\n+\n+        List<ITab> tabs = new ArrayList<ITab>();\n+\n+        for (final Category category : Category.values()) {\n+            tabs.add(new AbstractTab(new Model<String>(StringUtils.capitalize(category.name()))) {\n+\n+                private static final long serialVersionUID = -5861786415855103549L;\n+\n+                @Override\n+                public WebMarkupContainer getPanel(final String panelId) {\n+                    return new AuditCategoryPanel(panelId, category);\n+                }\n+            });\n+        }\n+\n+        form.add(new JQueryTabbedPanel(\"categoriesTabs\", tabs));\n+    }\n+\n     private class ReportProvider extends SortableDataProvider<ReportTO> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n@@ -284,4 +337,157 @@ public ReportTO getObject() {\n             };\n         }\n     }\n+\n+    private class AuditsByCategoryModel implements IModel<List<AuditLoggerName>> {\n+\n+        private static final long serialVersionUID = 605983084097505724L;\n+\n+        private final Category category;\n+\n+        private final Result result;\n+\n+        public AuditsByCategoryModel(final Category category, final Result result) {\n+            this.category = category;\n+            this.result = result;\n+        }\n+\n+        @Override\n+        public List<AuditLoggerName> getObject() {\n+            Map<Category, Set<AuditLoggerName>> audits = loggerRestClient.listAuditsByCategory();\n+\n+            List<AuditLoggerName> object = new ArrayList<AuditLoggerName>();\n+            for (Enum<?> subcategory : category.getSubCategoryElements()) {\n+                AuditLoggerName auditLoggerName = new AuditLoggerName(category, subcategory, result);\n+                if (audits.containsKey(category) && audits.get(category).contains(auditLoggerName)) {\n+                    object.add(auditLoggerName);\n+                }\n+            }\n+\n+            return object;\n+        }\n+\n+        @Override\n+        public void setObject(final List<AuditLoggerName> object) {\n+            for (Enum<?> subcategory : category.getSubCategoryElements()) {\n+                AuditLoggerName auditLoggerName = new AuditLoggerName(category, subcategory, result);\n+\n+                if (object.contains(auditLoggerName)) {\n+                    loggerRestClient.enableAudit(auditLoggerName);\n+                } else {\n+                    loggerRestClient.disableAudit(auditLoggerName);\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void detach() {\n+            // Not needed.\n+        }\n+    }\n+\n+    private class AuditCategoryPanel extends Panel {\n+\n+        private static final long serialVersionUID = 1076251735476895253L;\n+\n+        public AuditCategoryPanel(final String id, final Category category) {\n+            super(id);\n+            setOutputMarkupId(true);\n+\n+            final CheckGroup<AuditLoggerName> successGroup = new CheckGroup<AuditLoggerName>(\"successGroup\",\n+                    new AuditsByCategoryModel(category, Result.success));\n+            successGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+                private static final long serialVersionUID = -151291731388673682L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // Empty method: here only to let Model.setObject() be invoked.\n+                }\n+            });\n+            add(successGroup);\n+            MetaDataRoleAuthorizationStrategy.authorize(successGroup, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(successGroup, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\"));\n+\n+            final CheckGroupSelector successSelector = new CheckGroupSelector(\"successSelector\", successGroup);\n+            add(successSelector);\n+            MetaDataRoleAuthorizationStrategy.authorize(successSelector, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(successSelector, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\"));\n+\n+            final CheckGroup<AuditLoggerName> failureGroup = new CheckGroup<AuditLoggerName>(\"failureGroup\",\n+                    new AuditsByCategoryModel(category, Result.failure));\n+            failureGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+                private static final long serialVersionUID = -151291731388673682L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // Empty method: here only to let Model.setObject() be invoked.\n+                }\n+            });\n+            add(failureGroup);\n+            MetaDataRoleAuthorizationStrategy.authorize(failureGroup, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(failureGroup, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\"));\n+\n+            final CheckGroupSelector failureSelector = new CheckGroupSelector(\"failureSelector\", failureGroup);\n+            add(failureSelector);\n+            MetaDataRoleAuthorizationStrategy.authorize(failureSelector, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(failureSelector, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\"));\n+\n+            ListView<Enum<?>> categoryView =\n+                    new ListView<Enum<?>>(\"categoryView\", new ArrayList(category.getSubCategoryElements())) {\n+\n+                        private static final long serialVersionUID = 4949588177564901031L;\n+\n+                        @Override\n+                        protected void populateItem(final ListItem<Enum<?>> item) {\n+                            final Enum<?> subcategory = item.getModelObject();\n+\n+                            item.add(new Label(\"subcategory\", subcategory.name()));\n+                        }\n+                    };\n+            add(categoryView);\n+\n+            ListView<Enum<?>> successView =\n+                    new ListView<Enum<?>>(\"successView\", new ArrayList(category.getSubCategoryElements())) {\n+\n+                        private static final long serialVersionUID = 4949588177564901031L;\n+\n+                        @Override\n+                        protected void populateItem(final ListItem<Enum<?>> item) {\n+                            final Enum<?> subcategory = item.getModelObject();\n+\n+                            final Check<AuditLoggerName> successCheck = new Check<AuditLoggerName>(\"successCheck\",\n+                                    new Model<AuditLoggerName>(\n+                                    new AuditLoggerName(category, subcategory, Result.success)), successGroup);\n+                            item.add(successCheck);\n+                        }\n+                    };\n+            successGroup.add(successView);\n+\n+            ListView<Enum<?>> failureView =\n+                    new ListView<Enum<?>>(\"failureView\", new ArrayList(category.getSubCategoryElements())) {\n+\n+                        private static final long serialVersionUID = 4949588177564901031L;\n+\n+                        @Override\n+                        protected void populateItem(final ListItem<Enum<?>> item) {\n+                            final Enum<?> subcategory = item.getModelObject();\n+\n+                            final Check<AuditLoggerName> failureCheck = new Check<AuditLoggerName>(\"failureCheck\",\n+                                    new Model<AuditLoggerName>(\n+                                    new AuditLoggerName(category, subcategory, Result.failure)), failureGroup);\n+                            item.add(failureCheck);\n+                        }\n+                    };\n+            failureGroup.add(failureView);\n+        }\n+    }\n }"},{"sha":"78a0bd5314010246de2184f02014133b8f19d5ca","filename":"console/src/main/java/org/syncope/console/pages/panels/JQueryTabbedPanel.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.List;\n+import org.apache.wicket.extensions.ajax.markup.html.tabs.AjaxTabbedPanel;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+\n+public class JQueryTabbedPanel extends AjaxTabbedPanel {\n+\n+    private static final long serialVersionUID = -5059184710433341333L;\n+\n+    public JQueryTabbedPanel(final String id, final List<ITab> tabs) {\n+        super(id, tabs);\n+    }\n+\n+    @Override\n+    protected String getTabContainerCssClass() {\n+        return \"\";\n+    }\n+}"},{"sha":"31ac4d16e5167b9be915fdde45cf84c241830af8","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -22,8 +22,6 @@\n import java.util.List;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ConfigurationTO;\n-import org.syncope.client.to.LoggerTO;\n-import org.syncope.types.SyncopeLoggerLevel;\n \n @Component\n public class ConfigurationRestClient extends AbstractBaseRestClient {\n@@ -65,12 +63,4 @@ public void updateConfiguration(final ConfigurationTO configurationTO) {\n     public void deleteConfiguration(final String key) {\n         restTemplate.delete(baseURL + \"configuration/delete/{key}.json\", key);\n     }\n-\n-    public List<LoggerTO> listLogs() {\n-        return Arrays.asList(restTemplate.getForObject(baseURL + \"logger/log/list\", LoggerTO[].class));\n-    }\n-\n-    public void setLogLevel(final String name, final SyncopeLoggerLevel level) {\n-        restTemplate.postForObject(baseURL + \"logger/log/{name}/{level}\", null, LoggerTO.class, name, level);\n-    }\n }"},{"sha":"adf93528821cdff686c8ccf12a6ef9e1066667f2","filename":"console/src/main/java/org/syncope/console/rest/LoggerRestClient.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.console.rest;\n+\n+import java.util.Arrays;\n+import java.util.EnumMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.springframework.stereotype.Component;\n+import org.syncope.client.to.LoggerTO;\n+import org.syncope.types.AuditElements;\n+import org.syncope.types.AuditElements.Category;\n+import org.syncope.types.AuditLoggerName;\n+import org.syncope.types.SyncopeLoggerLevel;\n+\n+@Component\n+public class LoggerRestClient extends AbstractBaseRestClient {\n+\n+    public List<LoggerTO> listLogs() {\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"logger/log/list\", LoggerTO[].class));\n+    }\n+\n+    public List<AuditLoggerName> listAudits() {\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"logger/audit/list\", AuditLoggerName[].class));\n+    }\n+\n+    public Map<AuditElements.Category, Set<AuditLoggerName>> listAuditsByCategory() {\n+        Map<Category, Set<AuditLoggerName>> result = new EnumMap<Category, Set<AuditLoggerName>>(Category.class);\n+        for (AuditLoggerName auditLoggerName : listAudits()) {\n+            if (!result.containsKey(auditLoggerName.getCategory())) {\n+                result.put(auditLoggerName.getCategory(), new HashSet<AuditLoggerName>());\n+            }\n+\n+            result.get(auditLoggerName.getCategory()).add(auditLoggerName);\n+        }\n+\n+        return result;\n+    }\n+\n+    public void setLogLevel(final String name, final SyncopeLoggerLevel level) {\n+        restTemplate.postForObject(baseURL + \"logger/log/{name}/{level}\", null, LoggerTO.class, name, level);\n+    }\n+\n+    public void enableAudit(final AuditLoggerName auditLoggerName) {\n+        restTemplate.put(baseURL + \"logger/audit/enable\", auditLoggerName);\n+    }\n+\n+    public void deleteLog(final String name) {\n+        restTemplate.delete(baseURL + \"logger/log/delete/{name}\", name);\n+    }\n+\n+    public void disableAudit(final AuditLoggerName auditLoggerName) {\n+        restTemplate.put(baseURL + \"logger/audit/disable\", auditLoggerName);\n+    }\n+}"},{"sha":"e8d5ebc967659a0a5d8c7934328af13791597c40","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -130,12 +130,12 @@ under the License.\n       <entitlement>AUDIT_LIST</entitlement>\n     </action>\n         \n-    <action id=\"setLevel\">\n-      <entitlement>AUDIT_SET_LEVEL</entitlement>\n+    <action id=\"enable\">\n+      <entitlement>AUDIT_ENABLE</entitlement>\n     </action>\n \n-    <action id=\"delete\">\n-      <entitlement>AUDIT_DELETE</entitlement>\n+    <action id=\"disable\">\n+      <entitlement>AUDIT_DISABLE</entitlement>\n     </action>\n   </page>\n "},{"sha":"528320d324bdf2f7bbe8ca45e2c14ec7a34ea7d4","filename":"console/src/main/resources/org/syncope/console/pages/Reports$AuditCategoryPanel.html","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports%24AuditCategoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports%24AuditCategoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports%24AuditCategoryPanel.html?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -0,0 +1,108 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      .divtableheaderlabel {\n+        font-weight: bold;\n+        float:left;\n+        margin-left: 5px;\n+      }\n+\n+      .divtableheadercell {\n+        display:table-cell;\n+        vertical-align:top;\n+        text-align:right;\n+        width:70px;\n+        height:20px;\n+      }\n+\n+      .divtablecheckcolumn {\n+        display:table-cell;\n+        vertical-align:top;\n+        text-align:right;\n+      }\n+\n+      .divtablecheck {\n+        width:70px;\n+        height:20px;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div style=\"display:block;\">\n+      <div style=\"display:inline-table;\">\n+        <div style=\"display:table-cell;vertical-align:top;\">\n+          <div>\n+            <div class=\"tablecolumn_label medium_fixedsize\">\n+            </div>\n+          </div>\n+        </div>\n+        <div class=\"divtableheadercell\">\n+          <div class=\"divtableheaderlabel\">Success</div>\n+          <input type=\"checkbox\" wicket:id=\"successSelector\" style=\"margin-top: 0px;margin-bottom: 0px;\"/>\n+        </div>\n+        <div class=\"divtableheadercell\">\n+          <div class=\"divtableheaderlabel\">Failure</div>\n+          <input type=\"checkbox\" wicket:id=\"failureSelector\" style=\"margin-top: 0px;margin-bottom: 0px;\"/>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <div style=\"display:inline-table;\">\n+      <div style=\"display:table-cell;vertical-align:top;\">\n+        <div id=\"divtablerow-label\" wicket:id=\"categoryView\">\n+          <div class=\"tablecolumn_label medium_fixedsize\" style=\"height:20px;\">\n+            <span wicket:id=\"subcategory\">[subcategory]</span>\n+          </div>\n+        </div>\n+\n+        <script type=\"text/javascript\">\n+          $(function() {\n+            $('#divtablerow-label div:even').addClass(\"alt\");\n+          });\n+        </script>\n+      </div>\n+\n+      <div id=\"divtablerow-success\" class=\"divtablecheckcolumn\">\n+        <span wicket:id=\"successGroup\">\n+          <div wicket:id=\"successView\" class=\"divtablecheck\">\n+            <input type=\"checkbox\" wicket:id=\"successCheck\"/>\n+          </div>\n+        </span>\n+\n+        <script type=\"text/javascript\">\n+          $(function() {\n+            $('#divtablerow-success div:even').addClass(\"alt\");\n+          });\n+        </script>\n+      </div>\n+\n+      <div id=\"divtablerow-failure\" class=\"divtablecheckcolumn\">\n+        <span wicket:id=\"failureGroup\">\n+          <div wicket:id=\"failureView\" class=\"divtablecheck\">\n+            <input type=\"checkbox\" wicket:id=\"failureCheck\"/>\n+          </div>\n+        </span>\n+\n+        <script type=\"text/javascript\">\n+          $(function() {\n+            $('#divtablerow-failure div:even').addClass(\"alt\");\n+          });\n+        </script>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"38ea02d6e7207be76333c361cf8eefc871897d71","filename":"console/src/main/resources/org/syncope/console/pages/Reports.html","status":"modified","additions":34,"deletions":31,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.html?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -14,37 +14,40 @@\n -->\n <wicket:extend>\n \n-    <div id=\"tabs\">\n-        <ul>\n-            <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"reports\"/></span></a></li>\n-            <li><a href=\"#tabs-2\"><span><wicket:message key=\"auditing\"/></span></a></li>\n-        </ul>\n-\n-        <div id=\"tabs-1\">\n-            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit;\">\n-                <span wicket:id=\"reportContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"reportTable\"/>\n-                </span>\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"paginatorForm\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n-            </div>\n-\n-            <div wicket:id=\"reportWin\">[Show modal window for report editing]</div>\n-            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-               wicket:id=\"createLink\">\n-                <wicket:message key=\"create_report\"/>\n-            </a>\n-\n-        </div>\n-\n-        <div id=\"tabs-2\">\n-        </div>\n+  <div id=\"tabs\">\n+    <ul>\n+      <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"reports\"/></span></a></li>\n+      <li><a href=\"#tabs-2\"><span><wicket:message key=\"audit\"/></span></a></li>\n+    </ul>\n+\n+    <div id=\"tabs-1\">\n+      <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit;\">\n+        <span wicket:id=\"reportContainer\">\n+          <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"reportTable\"/>\n+        </span>\n+        <span style=\"float:right\">\n+          <form wicket:id=\"paginatorForm\" style=\"display:inline\">\n+            <label><wicket:message key=\"displayRows\"/></label>\n+            <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n+          </form>\n+        </span>\n+      </div>\n+\n+      <div wicket:id=\"reportWin\">[Show modal window for report editing]</div>\n+      <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createLink\">\n+        <wicket:message key=\"create_report\"/>\n+      </a>\n+\n+    </div>\n+\n+    <div id=\"tabs-2\">\n+      <span wicket:id=\"auditContainer\">\n+        <form wicket:id=\"auditForm\">\n+\n+          <div wicket:id=\"categoriesTabs\"/>\n+        </form>\n+      </span>\n     </div>\n+  </div>\n \n </wicket:extend>\n\\ No newline at end of file"},{"sha":"77a0de09cf7fbe2d0466111139beec97297a1a8f","filename":"console/src/main/resources/org/syncope/console/pages/Reports.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.properties?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -14,8 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-auditing=Auditing\n+audit=Audit\n create_report=Create new report\n lastExec=Last Execution\n nextExec=Next Execution\n latestExecStatus=Last status\n+category=Category\n+subcategory=Subcategory"},{"sha":"9204cff662e461d8cae7d277539ae6848b84f809","filename":"console/src/main/resources/org/syncope/console/pages/Reports_it.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -14,8 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-auditing=Auditing\n+audit=Audit\n create_report=Crea un nuovo rapporto\n lastExec=Ultima Esecuzione\n nextExec=Prossima Esecuzione\n latestExecStatus=Ultimo stato\n+category=Categoria\n+subcategory=Sottocategoria"},{"sha":"5503ed9b90fe02ba642a2d19c47e3da52a0e1045","filename":"console/src/main/resources/org/syncope/console/pages/panels/JQueryTabbedPanel.html","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FJQueryTabbedPanel.html?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<wicket:head>\n+  <style>\n+    .selected {\n+      background: url(\"../images/ui-bg_glass_65_ffffff_1x400.png\") repeat-x scroll 50% 50% #FFFFFF !important;\n+      border: 1px solid #AAAAAA !important;\n+      margin-bottom: 0 !important;\n+      padding-bottom: 1px !important;\n+      color: #212121 !important;\n+      font-weight: normal !important;\n+    }\n+    .tab-panel {\n+      padding: 9px 12px;\n+    }\n+  </style>\n+</wicket:head>\n+<wicket:panel xmlns:wicket=\"http://wicket.apache.org\">\n+  <div class=\"ui-tabs ui-widget ui-widget-content ui-corner-all\">\n+    <span wicket:id=\"tabs-container\"> \n+      <ul class=\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\">\n+        <li wicket:id=\"tabs\" class=\"tabs-selected ui-state-default ui-corner-top\">\n+          <a href=\"#\" wicket:id=\"link\"><span wicket:id=\"title\">[[tab title]]</span></a>\n+        </li>\n+      </ul>\n+    </span>\n+    <div wicket:id=\"panel\" class=\"tab-panel\">[panel]</div>\n+  </div>\n+</wicket:panel>\n\\ No newline at end of file"},{"sha":"3ae5c60691ee2641091b7a4fa11a375291db2406","filename":"console/src/main/webapp/img/tabs/bg.gif","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fbg.gif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fbg.gif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fbg.gif?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf"},{"sha":"473505a371c87bf61d717476df88ea823376fd8c","filename":"console/src/main/webapp/img/tabs/left.gif","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft.gif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft.gif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft.gif?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf"},{"sha":"58d8425184b26bca872ccb0501825befd2f31388","filename":"console/src/main/webapp/img/tabs/left_on.gif","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft_on.gif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft_on.gif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fleft_on.gif?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf"},{"sha":"e97e0e9f9a0ec15ba76c974468da8b229f7b733a","filename":"console/src/main/webapp/img/tabs/right.gif","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright.gif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright.gif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright.gif?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf"},{"sha":"9b02b58f03c83956adb01b2fa5dea1c78ffbad05","filename":"console/src/main/webapp/img/tabs/right_on.gif","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright_on.gif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright_on.gif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Ftabs%2Fright_on.gif?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf"},{"sha":"d32283814d971c76fd86c8d2ab2d63343bd88313","filename":"console/src/test/java/org/syncope/console/ReportTestITCase.java","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FReportTestITCase.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -44,7 +44,7 @@ public void readReportlet() {\n     }\n \n     @Test\n-    public void execute() {\n+    public void executeReport() {\n         selenium.click(\"css=img[alt=\\\"Reports\\\"]\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n@@ -53,4 +53,25 @@ public void execute() {\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n+\n+    @Test\n+    public void navigateAudit() {\n+        selenium.click(\"css=img[alt=\\\"Reports\\\"]\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+\n+        selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[2]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[3]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[4]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[5]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[6]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[7]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[8]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[9]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[10]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[11]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[12]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[13]/a\");\n+        selenium.click(\"//div[3]/div[2]/span/form/div[2]/div/span/ul/li[14]/a\");\n+    }\n }"},{"sha":"e944cf24e7505e0ebe82c4dc224cf7fe53d6045c","filename":"core/src/main/java/org/syncope/core/audit/AuditManager.java","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -22,9 +22,9 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n+import org.syncope.types.AuditLoggerName;\n import org.syncope.types.AuditElements.Category;\n import org.syncope.types.AuditElements.Result;\n-import org.syncope.types.SyncopeLoggerType;\n \n public class AuditManager {\n \n@@ -33,24 +33,21 @@ public class AuditManager {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(AuditManager.class);\n \n-    public String getLoggerName(final Category category, final Enum<?> subcategory, final Result result) {\n-\n-        return new StringBuilder().append(SyncopeLoggerType.AUDIT.getPrefix()).append('.').\n-                append(category.name()).append('.').\n-                append(subcategory.name()).append('.').\n-                append(result.name()).toString();\n-    }\n-\n     public void audit(final Category category, final Enum<?> subcategory, final Result result, final String message) {\n         audit(category, subcategory, result, message, null);\n     }\n \n     public void audit(final Category category, final Enum<?> subcategory, final Result result, final String message,\n             final Throwable throwable) {\n \n-        if (category == null || subcategory == null || result == null) {\n-            LOG.error(\"Invalid request: some null items {} {} {}\", new Object[]{category, subcategory, result});\n-        } else if (category.getSubCategoryElements().contains(subcategory)) {\n+        AuditLoggerName auditLoggerName = null;\n+        try {\n+            auditLoggerName = new AuditLoggerName(category, subcategory, result);\n+        } catch (IllegalArgumentException e) {\n+            LOG.error(\"Invalid audit parameters, aborting...\", e);\n+        }\n+\n+        if (auditLoggerName != null) {\n             StringBuilder auditMessage = new StringBuilder();\n \n             final SecurityContext ctx = SecurityContextHolder.getContext();\n@@ -59,15 +56,12 @@ public void audit(final Category category, final Enum<?> subcategory, final Resu\n             }\n             auditMessage.append(message);\n \n-            Logger logger = LoggerFactory.getLogger(getLoggerName(category, subcategory, result));\n+            Logger logger = LoggerFactory.getLogger(auditLoggerName.toLoggerName());\n             if (throwable == null) {\n                 logger.debug(auditMessage.toString());\n             } else {\n                 logger.debug(auditMessage.toString(), throwable);\n             }\n-        } else {\n-            LOG.error(\"Invalid request: {} does not belong to {}\", new Object[]{subcategory, category});\n         }\n-\n     }\n }"},{"sha":"8248817920cf249ed58e1870bf6af0acda46c46f","filename":"core/src/main/java/org/syncope/core/init/LoggerLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -59,7 +59,7 @@ public void load() {\n                 if (loggerLogs.containsKey(logger.getName())) {\n                     logger.setLevel(loggerLogs.get(logger.getName()).getLevel().getLevel());\n                     loggerLogs.remove(logger.getName());\n-                } else {\n+                } else if (!logger.getName().equals(SyncopeLoggerType.AUDIT.getPrefix())) {\n                     SyncopeLogger syncopeLogger = new SyncopeLogger();\n                     syncopeLogger.setName(logger.getName());\n                     syncopeLogger.setLevel(SyncopeLoggerLevel.fromLevel(logger.getLevel()));"},{"sha":"c99ffe153f1bbb9c2a2fd9da7bfdfd790eb301af","filename":"core/src/main/java/org/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":49,"deletions":20,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -32,9 +32,11 @@\n import org.springframework.stereotype.Controller;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.syncope.client.to.LoggerTO;\n+import org.syncope.types.AuditLoggerName;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.audit.AuditManager;\n@@ -65,8 +67,8 @@ private List<LoggerTO> list(final SyncopeLoggerType type) {\n             result.add(loggerTO);\n         }\n \n-        auditManager.audit(Category.logger, LoggerSubCategory.list, Result.success, \"Successfully listed all loggers (\"\n-                + type + \"): \" + result.size());\n+        auditManager.audit(Category.logger, LoggerSubCategory.list, Result.success,\n+                \"Successfully listed all loggers (\" + type + \"): \" + result.size());\n \n         return result;\n     }\n@@ -81,8 +83,18 @@ public List<LoggerTO> listLogs() {\n     @PreAuthorize(\"hasRole('AUDIT_LIST')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/audit/list\")\n     @Transactional(readOnly = true)\n-    public List<LoggerTO> listAudits() {\n-        return list(SyncopeLoggerType.AUDIT);\n+    public List<AuditLoggerName> listAudits() {\n+        List<AuditLoggerName> result = new ArrayList<AuditLoggerName>();\n+\n+        for (LoggerTO logger : list(SyncopeLoggerType.AUDIT)) {\n+            try {\n+                result.add(AuditLoggerName.fromLoggerName(logger.getName()));\n+            } catch (Exception e) {\n+                LOG.error(\"Unexpected audit logger name: {}\", logger.getName(), e);\n+            }\n+        }\n+\n+        return result;\n     }\n \n     private void throwInvalidLogger(final SyncopeLoggerType type) {\n@@ -120,8 +132,8 @@ private LoggerTO setLevel(final String name, final Level level, final SyncopeLog\n         LoggerTO result = new LoggerTO();\n         BeanUtils.copyProperties(syncopeLogger, result);\n \n-        auditManager.audit(Category.logger, LoggerSubCategory.setLevel, Result.success, String.format(\n-                \"Successfully set level %s to logger %s (%s)\", level, name, expectedType));\n+        auditManager.audit(Category.logger, LoggerSubCategory.setLevel, Result.success,\n+                String.format(\"Successfully set level %s to logger %s (%s)\", level, name, expectedType));\n \n         return result;\n     }\n@@ -132,17 +144,24 @@ public LoggerTO setLogLevel(@PathVariable(\"name\") final String name, @PathVariab\n         return setLevel(name, level, SyncopeLoggerType.LOG);\n     }\n \n-    @PreAuthorize(\"hasRole('AUDIT_SET_LEVEL')\")\n-    @RequestMapping(method = RequestMethod.POST, value = \"/audit/{category}/{subcategory}/{result}/{level}\")\n-    public LoggerTO setAuditLevel(@PathVariable(\"category\") final Category category,\n-            @PathVariable(\"subcategory\") final Enum<?> subcategory, @PathVariable(\"result\") final Result result,\n-            @PathVariable(\"level\") final Level level) {\n+    @PreAuthorize(\"hasRole('AUDIT_ENABLE')\")\n+    @RequestMapping(method = RequestMethod.PUT, value = \"/audit/enable\")\n+    public void enableAudit(@RequestBody final AuditLoggerName auditLoggerName) {\n+        try {\n+            setLevel(auditLoggerName.toLoggerName(), Level.DEBUG, SyncopeLoggerType.AUDIT);\n+        } catch (IllegalArgumentException e) {\n+            SyncopeClientCompositeErrorException sccee =\n+                    new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n+\n+            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n+            sce.addElement(e.getMessage());\n+            sccee.addException(sce);\n \n-        return setLevel(auditManager.getLoggerName(category, subcategory, result), level, SyncopeLoggerType.AUDIT);\n+            throw sccee;\n+        }\n     }\n \n     private void delete(final String name, final SyncopeLoggerType expectedType) throws NotFoundException {\n-\n         SyncopeLogger syncopeLogger = loggerDAO.find(name);\n         if (syncopeLogger == null) {\n             throw new NotFoundException(\"Logger \" + name);\n@@ -165,16 +184,26 @@ private void delete(final String name, final SyncopeLoggerType expectedType) thr\n     @PreAuthorize(\"hasRole('LOG_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE, value = \"/log/delete/{name}\")\n     public void deleteLog(@PathVariable(\"name\") final String name) throws NotFoundException {\n-\n         delete(name, SyncopeLoggerType.LOG);\n     }\n \n-    @PreAuthorize(\"hasRole('AUDIT_DELETE')\")\n-    @RequestMapping(method = RequestMethod.DELETE, value = \"/audit/delete/{category}/{subcategory}/{result}\")\n-    public void deleteAudit(@PathVariable(\"category\") final Category category,\n-            @PathVariable(\"subcategory\") final Enum<?> subcategory, @PathVariable(\"result\") final Result result) throws\n-            NotFoundException {\n+    @PreAuthorize(\"hasRole('AUDIT_DISABLE')\")\n+    @RequestMapping(method = RequestMethod.PUT, value = \"/audit/disable\")\n+    public void disableAudit(@RequestBody final AuditLoggerName auditLoggerName) {\n+\n+        try {\n+            delete(auditLoggerName.toLoggerName(), SyncopeLoggerType.AUDIT);\n+        } catch (NotFoundException e) {\n+            LOG.debug(\"Ignoring disable of non existing logger {}\", auditLoggerName.toLoggerName());\n+        } catch (IllegalArgumentException e) {\n+            SyncopeClientCompositeErrorException sccee =\n+                    new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n-        delete(auditManager.getLoggerName(category, subcategory, result), SyncopeLoggerType.AUDIT);\n+            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n+            sce.addElement(e.getMessage());\n+            sccee.addException(sce);\n+\n+            throw sccee;\n+        }\n     }\n }"},{"sha":"cc38c474f5ba6229ae80bac0c24587178383abfe","filename":"core/src/main/resources/content.xml","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -29,25 +29,25 @@ under the License.\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"false\"/>\n     \n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"GLOBAL_SYNC\"\n-            specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n+          specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n   <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"Global Password Policy\" type=\"GLOBAL_PASSWORD\"\n-            specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n+          specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n   <Policy DTYPE=\"AccountPolicy\" id=\"3\" description=\"Global Account Policy\" type=\"GLOBAL_ACCOUNT\"\n-            specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n+          specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n     \n   <USchema name=\"surname\" type=\"String\"\n-             mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <USchema name=\"firstname\" type=\"String\"\n-             mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <USchema name=\"email\" type=\"String\"\n-             mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"\n-             validatorClass=\"org.syncope.core.persistence.validation.attrvalue.EmailAddressValidator\"/>\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"\n+           validatorClass=\"org.syncope.core.persistence.validation.attrvalue.EmailAddressValidator\"/>\n                \n   <UDerSchema name=\"fullname\" expression=\"firstname + '.' + surname\"/>\n \n   <MSchema name=\"subscriptionDate\" type=\"Date\"\n-             mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n-             conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n+           conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n \n     <!-- Authentication and authorization -->\n   <Entitlement name=\"SCHEMA_CREATE\"/>\n@@ -115,8 +115,8 @@ under the License.\n   <Entitlement name=\"LOG_SET_LEVEL\"/>\n   <Entitlement name=\"LOG_DELETE\"/>\n   <Entitlement name=\"AUDIT_LIST\"/>\n-  <Entitlement name=\"AUDIT_SET_LEVEL\"/>\n-  <Entitlement name=\"AUDIT_DELETE\"/>\n+  <Entitlement name=\"AUDIT_ENABLE\"/>\n+  <Entitlement name=\"AUDIT_DISABLE\"/>\n \n   <ACT_GE_PROPERTY NAME_=\"schema.version\" VALUE_=\"5.9\" REV_=\"1\"/>\n   <ACT_GE_PROPERTY NAME_=\"schema.history\" VALUE_=\"create(5.9)\" REV_=\"1\"/>"},{"sha":"1dbf01d53460ceddac9f0a5cc6451fb9b811c28e","filename":"core/src/test/java/org/syncope/core/rest/LoggerTestITCase.java","status":"modified","additions":39,"deletions":10,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -24,32 +24,38 @@\n import java.util.List;\n import org.junit.Test;\n import org.syncope.client.to.LoggerTO;\n+import org.syncope.types.AuditElements;\n+import org.syncope.types.AuditLoggerName;\n import org.syncope.types.SyncopeLoggerLevel;\n \n public class LoggerTestITCase extends AbstractTest {\n \n     @Test\n-    public void list() {\n-        List<LoggerTO> loggers = Arrays.asList(restTemplate\n-                .getForObject(BASE_URL + \"logger/log/list\", LoggerTO[].class));\n+    public void listLogs() {\n+        List<LoggerTO> loggers =\n+                Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/log/list\", LoggerTO[].class));\n         assertNotNull(loggers);\n         assertFalse(loggers.isEmpty());\n         for (LoggerTO logger : loggers) {\n             assertNotNull(logger);\n         }\n+    }\n \n-        loggers = Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/audit/list\", LoggerTO[].class));\n-        assertNotNull(loggers);\n-        assertFalse(loggers.isEmpty());\n-        for (LoggerTO logger : loggers) {\n-            assertNotNull(logger);\n+    @Test\n+    public void listAudits() {\n+        List<AuditLoggerName> audits =\n+                Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/audit/list\", AuditLoggerName[].class));\n+        assertNotNull(audits);\n+        assertFalse(audits.isEmpty());\n+        for (AuditLoggerName audit : audits) {\n+            assertNotNull(audit);\n         }\n     }\n \n     @Test\n     public void setLevel() {\n-        List<LoggerTO> loggers = Arrays.asList(restTemplate\n-                .getForObject(BASE_URL + \"logger/log/list\", LoggerTO[].class));\n+        List<LoggerTO> loggers =\n+                Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/log/list\", LoggerTO[].class));\n         assertNotNull(loggers);\n         int startSize = loggers.size();\n \n@@ -62,4 +68,27 @@ public void setLevel() {\n         assertNotNull(loggers);\n         assertEquals(startSize + 1, loggers.size());\n     }\n+\n+    @Test\n+    public void enableDisableAudit() {\n+        AuditLoggerName auditLoggerName = new AuditLoggerName(AuditElements.Category.report,\n+                AuditElements.ReportSubCategory.listExecutions, AuditElements.Result.failure);\n+\n+        List<AuditLoggerName> audits =\n+                Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/audit/list\", AuditLoggerName[].class));\n+        assertNotNull(audits);\n+        assertFalse(audits.contains(auditLoggerName));\n+\n+        restTemplate.put(BASE_URL + \"logger/audit/enable\", auditLoggerName);\n+\n+        audits = Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/audit/list\", AuditLoggerName[].class));\n+        assertNotNull(audits);\n+        assertTrue(audits.contains(auditLoggerName));\n+\n+        restTemplate.put(BASE_URL + \"logger/audit/disable\", auditLoggerName);\n+\n+        audits = Arrays.asList(restTemplate.getForObject(BASE_URL + \"logger/audit/list\", AuditLoggerName[].class));\n+        assertNotNull(audits);\n+        assertFalse(audits.contains(auditLoggerName));\n+    }\n }"},{"sha":"6178fb0e8806fae09443dfd4a40c5bc126de8a98","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/411736c86cda90538acca29a48bb4fe8bd3eaacf/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=411736c86cda90538acca29a48bb4fe8bd3eaacf","patch":"@@ -562,8 +562,8 @@ under the License.\n   <Entitlement name=\"LOG_SET_LEVEL\"/>\n   <Entitlement name=\"LOG_DELETE\"/>\n   <Entitlement name=\"AUDIT_LIST\"/>\n-  <Entitlement name=\"AUDIT_SET_LEVEL\"/>\n-  <Entitlement name=\"AUDIT_DELETE\"/>\n+  <Entitlement name=\"AUDIT_ENABLE\"/>\n+  <Entitlement name=\"AUDIT_DISABLE\"/>\n   <Entitlement name=\"ROLE_1\"/>\n   <Entitlement name=\"ROLE_2\"/>\n   <Entitlement name=\"ROLE_3\"/>"}]}