{"sha":"9af846542fd2c69cf46a9b21d5672eff8b271ed0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlhZjg0NjU0MmZkMmM2OWNmNDZhOWIyMWQ1NjcyZWZmOGIyNzFlZDA=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-13T08:11:22Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-13T08:11:22Z"},"message":"SYNCOPE-108 #comment delete about a resource removing will be propagate if and only if that resource is not be linked (directly or indirectly) to the user anymore\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1361081 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f27d9b62de3e4a6ab8a7ca7e4483a1ba9d4c4ad8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f27d9b62de3e4a6ab8a7ca7e4483a1ba9d4c4ad8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9af846542fd2c69cf46a9b21d5672eff8b271ed0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9af846542fd2c69cf46a9b21d5672eff8b271ed0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9af846542fd2c69cf46a9b21d5672eff8b271ed0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9af846542fd2c69cf46a9b21d5672eff8b271ed0/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2cc6bfefd4985e6dbddd4c55f4868f09b3f6b9d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cc6bfefd4985e6dbddd4c55f4868f09b3f6b9d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2cc6bfefd4985e6dbddd4c55f4868f09b3f6b9d9"}],"stats":{"total":210,"additions":164,"deletions":46},"files":[{"sha":"9ece07a38d939fb6298a819bc2df735776e84878","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":16,"deletions":17,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -105,8 +105,8 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n         this.activeConnInstance = connInstance;\n \n         // specify a connector.\n-        ConnectorKey key = new ConnectorKey(connInstance.getBundleName(), connInstance.getVersion(), connInstance\n-                .getConnectorName());\n+        ConnectorKey key = new ConnectorKey(connInstance.getBundleName(), connInstance.getVersion(), connInstance.\n+                getConnectorName());\n \n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"\\nBundle name: \" + key.getBundleName() + \"\\nBundle version: \" + key.getBundleVersion()\n@@ -221,8 +221,8 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n             result = connector.update(objectClass, uid, attrs, options);\n         } else {\n             LOG.info(\"Update for {} was attempted, although the \"\n-                    + \"connector only has these capabilities: {}. No action.\", uid.getUidValue(), activeConnInstance\n-                    .getCapabilities());\n+                    + \"connector only has these capabilities: {}. No action.\", uid.getUidValue(), activeConnInstance.\n+                    getCapabilities());\n         }\n \n         return result;\n@@ -248,9 +248,8 @@ public void delete(final PropagationMode propagationMode, final ObjectClass obje\n \n             connector.delete(objectClass, uid, options);\n         } else {\n-            LOG.info(\"Delete for {} was attempted, although the \"\n-                    + \"connector only has these capabilities: {}. No action.\", uid.getUidValue(), activeConnInstance\n-                    .getCapabilities());\n+            LOG.info(\"Delete for {} was attempted, although the connector only has these capabilities: {}. No action.\",\n+                    uid.getUidValue(), activeConnInstance.getCapabilities());\n         }\n     }\n \n@@ -265,7 +264,7 @@ public void sync(final SyncToken token, final SyncResultsHandler handler, final\n         if (activeConnInstance.getCapabilities().contains(ConnectorCapability.SYNC)) {\n             connector.sync(ObjectClass.ACCOUNT, token, handler, options);\n         } else {\n-            LOG.info(\"Sync was attempted, although the \" + \"connector only has these capabilities: {}. No action.\",\n+            LOG.info(\"Sync was attempted, although the connector only has these capabilities: {}. No action.\",\n                     activeConnInstance.getCapabilities());\n         }\n     }\n@@ -343,7 +342,7 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Pr\n                 }\n             }\n         } else {\n-            LOG.info(\"Search was attempted, although the \" + \"connector only has these capabilities: {}. No action.\",\n+            LOG.info(\"Search was attempted, although the connector only has these capabilities: {}. No action.\",\n                     activeConnInstance.getCapabilities());\n         }\n \n@@ -451,8 +450,8 @@ public Set<String> getSchema(final boolean showall) {\n                 for (AttributeInfo attrInfo : info.getAttributeInfo()) {\n                     if (showall\n                             || (!Name.NAME.equals(attrInfo.getName())\n-                                    && !OperationalAttributes.PASSWORD_NAME.equals(attrInfo.getName()) && !OperationalAttributes.ENABLE_NAME\n-                                    .equals(attrInfo.getName()))) {\n+                            && !OperationalAttributes.PASSWORD_NAME.equals(attrInfo.getName()) && !OperationalAttributes.ENABLE_NAME.\n+                            equals(attrInfo.getName()))) {\n \n                         resourceSchemaNames.add(attrInfo.getName());\n                     }\n@@ -482,7 +481,7 @@ public void test() {\n \n     @Override\n     public String toString() {\n-        return \"ConnectorFacadeProxy{\" + \"connector=\" + connector + \"capabitilies=\"\n+        return \"ConnectorFacadeProxy{connector=\" + connector + \"capabitilies=\"\n                 + activeConnInstance.getCapabilities() + '}';\n     }\n \n@@ -502,8 +501,8 @@ public OperationOptions getOperationOptions(final ExternalResource resource) {\n         // -------------------------------------\n         final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n \n-        final Set<String> attributesToGet = new HashSet<String>(Arrays.asList(new String[] { Name.NAME, Uid.NAME,\n-                OperationalAttributes.ENABLE_NAME }));\n+        final Set<String> attributesToGet = new HashSet<String>(Arrays.asList(new String[]{Name.NAME, Uid.NAME,\n+                    OperationalAttributes.ENABLE_NAME}));\n \n         for (SchemaMapping mapping : resource.getMappings()) {\n             final String extAttrName = SchemaMappingUtil.getExtAttrName(mapping);\n@@ -526,8 +525,8 @@ private Object getPropertyValue(final ConnConfProperty property) {\n \n         if (values != null && !values.isEmpty()) {\n             try {\n-                final Class propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils\n-                        .getDefaultClassLoader());\n+                final Class propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils.\n+                        getDefaultClassLoader());\n \n                 if (GuardedString.class.equals(propertySchemaClass)) {\n                     value = new GuardedString((values.get(0).toString()).toCharArray());\n@@ -552,7 +551,7 @@ private Object getPropertyValue(final ConnConfProperty property) {\n                 } else if (File.class.equals(propertySchemaClass)) {\n                     value = new File(values.get(0).toString());\n                 } else if (String[].class.equals(propertySchemaClass)) {\n-                    value = values.toArray(new String[] {});\n+                    value = values.toArray(new String[]{});\n                 } else {\n                     value = values.get(0).toString();\n                 }"},{"sha":"fb1fddf298d2eb7382d9249a60de4e63f90c5e52","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -722,8 +722,17 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n                         if (before == null) {\n                             LOG.debug(\"{} not found on external resource:\" + \" ignoring delete\", task.getAccountId());\n                         } else {\n-                            connector.delete(task.getPropagationMode(), ObjectClass.ACCOUNT, before.getUid(), null,\n-                                    propagationAttempted);\n+                            final SyncopeUser user = getSyncopeUser(task.getSyncopeUser().getId());\n+\n+                            if (user == null || !user.getResourceNames().contains(task.getResource().getName())) {\n+                                connector.delete(\n+                                        task.getPropagationMode(),\n+                                        ObjectClass.ACCOUNT,\n+                                        before.getUid(),\n+                                        null,\n+                                        propagationAttempted);\n+                            }\n+\n                         }\n                         break;\n "},{"sha":"35fddc4b3559952589efb819643495418dc4fd86","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -183,8 +183,8 @@ protected void fillAttribute(final List<String> values, final AttributableUtil a\n         List<String> valuesProvided = schema.isMultivalue()\n                 ? values\n                 : (values.isEmpty()\n-                        ? Collections.EMPTY_LIST\n-                        : Collections.singletonList(values.iterator().next()));\n+                ? Collections.EMPTY_LIST\n+                : Collections.singletonList(values.iterator().next()));\n \n         for (String value : valuesProvided) {\n             if (value == null || value.isEmpty()) {\n@@ -216,8 +216,8 @@ private boolean evaluateMandatoryCondition(final ExternalResource resource,\n \n         boolean result = false;\n \n-        for (Iterator<SchemaMapping> itor = resource.getMappings(intAttrName, attributableUtil.intMappingType())\n-                .iterator(); itor.hasNext() && !result;) {\n+        for (Iterator<SchemaMapping> itor = resource.getMappings(intAttrName, attributableUtil.intMappingType()).\n+                iterator(); itor.hasNext() && !result;) {\n \n             SchemaMapping mapping = itor.next();\n             result |= evaluateMandatoryCondition(mapping.getMandatoryCondition(), attributes);\n@@ -259,8 +259,8 @@ private SyncopeClientException checkMandatory(final AttributableUtil attributabl\n             if (attributable.getAttribute(schema.getName()) == null\n                     && !schema.isReadonly()\n                     && (evaluateMandatoryCondition(schema.getMandatoryCondition(), attributable.getAttributes()) || evaluateMandatoryCondition(\n-                            attributable.getResources(), attributable.getAttributes(), schema.getName(),\n-                            attributableUtil))) {\n+                    attributable.getResources(), attributable.getAttributes(), schema.getName(),\n+                    attributableUtil))) {\n \n                 LOG.error(\"Mandatory schema \" + schema.getName() + \" not provided with values\");\n \n@@ -303,8 +303,8 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                         if (mapping.isAccountid() && virtualAttribute != null\n                                 && !virtualAttribute.getValues().isEmpty()) {\n \n-                            propByRes.addOldAccountId(mapping.getResource().getName(), virtualAttribute.getValues()\n-                                    .get(0));\n+                            propByRes.addOldAccountId(mapping.getResource().getName(), virtualAttribute.getValues().get(\n+                                    0));\n                         }\n                     }\n                 }\n@@ -315,8 +315,8 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n \n         // 2. virtual attributes to be updated\n         for (AttributeMod vAttrToBeUpdated : vAttrsToBeUpdated) {\n-            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeUpdated.getSchema(), attributableUtil\n-                    .virtualSchemaClass());\n+            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeUpdated.getSchema(), attributableUtil.\n+                    virtualSchemaClass());\n \n             if (virtualSchema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n@@ -429,8 +429,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n                         if (mapping.isAccountid() && attribute != null && !attribute.getValuesAsStrings().isEmpty()) {\n \n-                            propByRes.addOldAccountId(mapping.getResource().getName(), attribute.getValuesAsStrings()\n-                                    .iterator().next());\n+                            propByRes.addOldAccountId(mapping.getResource().getName(), attribute.getValuesAsStrings().\n+                                    iterator().next());\n                         }\n                     }\n                 }\n@@ -492,8 +492,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                 valuesToBeAdded = attributeMod.getValuesToBeAdded();\n                 if (valuesToBeAdded != null\n                         && !valuesToBeAdded.isEmpty()\n-                        && (!schema.isUniqueConstraint() || attribute.getUniqueValue() == null || !valuesToBeAdded\n-                                .iterator().next().equals(attribute.getUniqueValue().getValueAsString()))) {\n+                        && (!schema.isUniqueConstraint() || attribute.getUniqueValue() == null || !valuesToBeAdded.\n+                        iterator().next().equals(attribute.getUniqueValue().getValueAsString()))) {\n \n                     fillAttribute(attributeMod.getValuesToBeAdded(), attributableUtil, schema, attribute, invalidValues);\n                 }\n@@ -536,8 +536,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                         if (mapping.isAccountid() && derivedAttribute != null\n                                 && !derivedAttribute.getValue(attributable.getAttributes()).isEmpty()) {\n \n-                            propByRes.addOldAccountId(mapping.getResource().getName(), derivedAttribute\n-                                    .getValue(attributable.getAttributes()));\n+                            propByRes.addOldAccountId(mapping.getResource().getName(),\n+                                    derivedAttribute.getValue(attributable.getAttributes()));\n                         }\n                     }\n                 }\n@@ -573,8 +573,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n         // 7. virtual attributes: for users this is delegated to PropagationManager\n         if (AttributableType.USER != attributableUtil.getType()) {\n-            fillVirtual(attributable, attributableMod.getVirtualAttributesToBeRemoved(), attributableMod\n-                    .getVirtualAttributesToBeUpdated(), attributableUtil);\n+            fillVirtual(attributable, attributableMod.getVirtualAttributesToBeRemoved(), attributableMod.\n+                    getVirtualAttributesToBeUpdated(), attributableUtil);\n         }\n \n         // Finally, check if mandatory values are missing\n@@ -606,8 +606,8 @@ public void fillVirtual(final AbstractAttributable attributable, final List<Attr\n             AbstractVirAttr virtualAttribute = attributable.getVirtualAttribute(attributeTO.getSchema());\n \n             if (virtualAttribute == null) {\n-                AbstractVirSchema virtualSchema = getVirtualSchema(attributeTO.getSchema(), attributableUtil\n-                        .virtualSchemaClass());\n+                AbstractVirSchema virtualSchema = getVirtualSchema(attributeTO.getSchema(), attributableUtil.\n+                        virtualSchemaClass());\n \n                 if (virtualSchema != null) {\n                     virtualAttribute = attributableUtil.newVirtualAttribute();\n@@ -684,8 +684,8 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         // 3. user virtual attributes will be valued by the propagation manager only (if needed).\n         if (AttributableType.USER == attributableUtil.getType()) {\n             for (AttributeTO vattrTO : attributableTO.getVirtualAttributes()) {\n-                AbstractVirSchema uVirSchema = getVirtualSchema(vattrTO.getSchema(), attributableUtil\n-                        .virtualSchemaClass());\n+                AbstractVirSchema uVirSchema = getVirtualSchema(vattrTO.getSchema(),\n+                        attributableUtil.virtualSchemaClass());\n \n                 if (uVirSchema != null) {\n                     AbstractVirAttr vattr = attributableUtil.newVirtualAttribute();"},{"sha":"3bd5a25d4207337b7a6622c9ccb56b442585733c","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -43,7 +43,7 @@ public class EntitlementTest extends AbstractTest {\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         // 69 real entitlements + 9 role entitlements\n-        assertEquals(\"did not get expected number of entitlements \", 80, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 82, list.size());\n     }\n \n     @Test"},{"sha":"ff9741997054a2aafa7719652761fd122cc8ebaf","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -43,7 +43,7 @@ public class RoleTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<SyncopeRole> list = roleDAO.findAll();\n-        assertEquals(\"did not get expected number of roles \", 11, list.size());\n+        assertEquals(\"did not get expected number of roles \", 13, list.size());\n     }\n \n     @Test"},{"sha":"1683539b998ef4a5b0bbe9bc16636875e157359c","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":107,"deletions":3,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -1479,11 +1479,12 @@ public void issue213() {\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n+        assertEquals(1, userTO.getResources().size());\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n-        String username = jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class,\n-                userTO.getUsername());\n+        String username =\n+                jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n \n         assertEquals(userTO.getUsername(), username);\n \n@@ -1496,7 +1497,7 @@ public void issue213() {\n \n         assertTrue(userTO.getResources().isEmpty());\n \n-        jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+        String azz = jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n     }\n \n     @Test\n@@ -1745,4 +1746,107 @@ public void issueSYNCOPE16() {\n         assertNotNull(actual);\n         assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE108() {\n+        UserTO userTO = getSampleTO(\"syncope108@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO csvuserid = new AttributeTO();\n+        csvuserid.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(csvuserid);\n+\n+        MembershipTO memb12 = new MembershipTO();\n+        memb12.setRoleId(12L);\n+\n+        userTO.addMembership(memb12);\n+\n+        MembershipTO memb13 = new MembershipTO();\n+        memb13.setRoleId(13L);\n+\n+        userTO.addMembership(memb13);\n+\n+        userTO.addResource(\"resource-csv\");\n+\n+        UserTO actual = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(actual);\n+        assertEquals(2, actual.getMemberships().size());\n+        assertEquals(1, actual.getResources().size());\n+\n+        ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n+                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n+                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n+\n+        assertNotNull(connObjectTO);\n+\n+        // -----------------------------------\n+        // Remove the first membership: de-provisioning shouldn't happen\n+        // -----------------------------------\n+        UserMod userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        userMod.addMembershipToBeRemoved(actual.getMemberships().get(0).getId());\n+\n+        actual = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(actual);\n+        assertEquals(1, actual.getMemberships().size());\n+\n+        connObjectTO = restTemplate.getForObject(BASE_URL\n+                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n+\n+        assertNotNull(connObjectTO);\n+        // -----------------------------------\n+\n+        // -----------------------------------\n+        // Remove the resource assigned directly: de-provisioning shouldn't happen\n+        // -----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        userMod.addResourceToBeRemoved(actual.getResources().iterator().next());\n+\n+        actual = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(actual);\n+        assertEquals(1, actual.getMemberships().size());\n+        assertFalse(actual.getResources().isEmpty());\n+\n+        connObjectTO = restTemplate.getForObject(BASE_URL\n+                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n+                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n+\n+        assertNotNull(connObjectTO);\n+        // -----------------------------------\n+\n+        // -----------------------------------\n+        // Remove the first membership: de-provisioning should happen\n+        // -----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        userMod.addMembershipToBeRemoved(actual.getMemberships().get(0).getId());\n+\n+        actual = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(actual);\n+        assertTrue(actual.getMemberships().isEmpty());\n+        assertTrue(actual.getResources().isEmpty());\n+\n+        Throwable t = null;\n+\n+        try {\n+            restTemplate.getForObject(BASE_URL\n+                    + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n+                    getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n+            t = e;\n+        }\n+\n+        assertNotNull(t);\n+        // -----------------------------------\n+    }\n }"},{"sha":"00a62061e11207fde53e9efa910038700e79221b","filename":"core/src/test/resources/content.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9af846542fd2c69cf46a9b21d5672eff8b271ed0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=9af846542fd2c69cf46a9b21d5672eff8b271ed0","patch":"@@ -70,6 +70,8 @@ under the License.\n                inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n                inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\"/>\n   <SyncopeRole id=\"11\" name=\"roleForWorkflowOptIn\" parent_id=\"1\"/>\n+  <SyncopeRole id=\"12\" name=\"aRoleForPropagation\" parent_id=\"1\"/>\n+  <SyncopeRole id=\"13\" name=\"bRoleForPropagation\" parent_id=\"1\"/>\n \n   <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n   <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n@@ -337,6 +339,8 @@ under the License.\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-1\" />\n   <SyncopeRole_ExternalResource role_id=\"7\" resource_name=\"ws-target-resource-nopropagation\" />\n   <SyncopeRole_ExternalResource role_id=\"10\" resource_name=\"ws-target-resource-nopropagation3\" />\n+  <SyncopeRole_ExternalResource role_id=\"12\" resource_name=\"resource-csv\" />\n+  <SyncopeRole_ExternalResource role_id=\"13\" resource_name=\"resource-csv\" />\n \n   <SchemaMapping id=\"99\" extAttrName=\"userid\"\n                  resource_name=\"ws-target-resource-1\"\n@@ -631,6 +635,8 @@ under the License.\n   <Entitlement name=\"ROLE_9\"/>\n   <Entitlement name=\"ROLE_10\"/>\n   <Entitlement name=\"ROLE_11\"/>\n+  <Entitlement name=\"ROLE_12\"/>\n+  <Entitlement name=\"ROLE_13\"/>\n \n   <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"1\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"advanced\" role_id=\"1\"/>"}]}