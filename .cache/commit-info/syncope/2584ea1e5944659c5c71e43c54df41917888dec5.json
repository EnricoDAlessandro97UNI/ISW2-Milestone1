{"sha":"2584ea1e5944659c5c71e43c54df41917888dec5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI1ODRlYTFlNTk0NDY1OWM1YzcxZTQzYzU0ZGY0MTkxNzg4OGRlYzU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-26T14:52:07Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-26T14:52:07Z"},"message":"(Fixes issue 128)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247097 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5159cc450c5148107c64b5aa889cb102702ba9aa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5159cc450c5148107c64b5aa889cb102702ba9aa"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2584ea1e5944659c5c71e43c54df41917888dec5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2584ea1e5944659c5c71e43c54df41917888dec5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2584ea1e5944659c5c71e43c54df41917888dec5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2584ea1e5944659c5c71e43c54df41917888dec5/comments","author":null,"committer":null,"parents":[{"sha":"8a0b03a954d2e57c6ced2d317fe3de10ea9de796","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8a0b03a954d2e57c6ced2d317fe3de10ea9de796","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8a0b03a954d2e57c6ced2d317fe3de10ea9de796"}],"stats":{"total":235,"additions":161,"deletions":74},"files":[{"sha":"52b5f6805b1937c769ba7aa2b99ae20c8d7937f4","filename":"client/src/main/java/org/syncope/client/search/ResourceCond.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FResourceCond.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -21,21 +21,17 @@\n  */\n public class ResourceCond extends AbstractBaseBean {\n \n-    private String name;\n+    private String resourceName;\n \n-    public ResourceCond() {\n-        super();\n+    public String getResourceName() {\n+        return resourceName;\n     }\n \n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n+    public void setResourceName(String resourceName) {\n+        this.resourceName = resourceName;\n     }\n \n     public final boolean checkValidity() {\n-        return name != null;\n+        return resourceName != null;\n     }\n }"},{"sha":"9b091c49b1ba977e931ea17c917cfafd75c78bca","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -683,7 +683,7 @@ private NodeCond buildSearchCond(\n                 break;\n             case RESOURCE:\n                 final ResourceCond resourceCond = new ResourceCond();\n-                resourceCond.setName(searchConditionWrapper.getFilterName());\n+                resourceCond.setResourceName(searchConditionWrapper.getFilterName());\n \n                 if (searchConditionWrapper.isNotOperator()) {\n                     nodeCond = NodeCond.getNotLeafCond(resourceCond);"},{"sha":"31d73286354a050efc8b916ead5eeeac9309f33b","filename":"core/pom.xml","status":"modified","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -756,6 +756,49 @@\n                 </plugins>\n             </build>\n         </profile> \n+        \n+        <profile>\n+            <id>mysql-it</id>\n+            <properties>\n+                <jdbcdriver.groupId>mysql</jdbcdriver.groupId>    \n+                <jdbcdriver.artifactId>mysql-connector-java</jdbcdriver.artifactId>    \n+            </properties>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>mysql</groupId>\n+                    <artifactId>mysql-connector-java</artifactId>\n+                    <version>5.1.17</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <defaultGoal>clean verify</defaultGoal>\n+        \n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-antrun-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <executions>\n+                            <execution>\n+                                <id>set-mysql</id>\n+                                <phase>process-test-resources</phase>\n+                                <configuration>\n+                                    <target>\n+                                        <copy todir=\"${project.build.directory}/test-classes\" overwrite=\"true\">\n+                                            <fileset dir=\"${basedir}/src/test/resources/mysql\"/>\n+                                        </copy>\n+                                    </target>\n+                                </configuration>\n+                                <goals>\n+                                    <goal>run</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n     </profiles>\n     \n </project>"},{"sha":"ac58d9d0995ff907811d5462f1892bb30b135008","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeConf.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -14,15 +14,18 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n \n @Entity\n public class SyncopeConf extends AbstractBaseBean {\n \n     @Id\n+    @Column(name = \"confKey\")\n     private String key;\n \n+    @Column(name = \"confValue\")\n     private String value;\n \n     public String getKey() {"},{"sha":"b1b3b0ec788ef8547384315fc73c2097242a7677","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -115,14 +115,20 @@ public List<SyncopeUser> findByDerAttrValue(\n         // query string\n         final StringBuilder querystring = new StringBuilder();\n \n+        boolean subquery = false;\n         for (String clause : getWhereClause(schema.getExpression(), value)) {\n             if (querystring.length() > 0) {\n-                querystring.append(\" INTERSECT \");\n+                subquery = true;\n+                querystring.append(\" AND a.owner_id IN ( \");\n             }\n \n             querystring.append(\"SELECT a.owner_id \").\n-                    append(\"FROM uattr a, uattrvalue v, uschema s \").\n+                    append(\"FROM UAttr a, UAttrValue v, USchema s \").\n                     append(\"WHERE \").append(clause);\n+\n+            if (subquery) {\n+                querystring.append(')');\n+            }\n         }\n \n         LOG.debug(\"Execute query {}\", querystring);"},{"sha":"133ac77752faa1efe8b5c98d6ae917b51795c901","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":15,"deletions":26,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -279,10 +279,9 @@ private StringBuilder getQuery(final NodeCond nodeCond,\n                 break;\n \n             case AND:\n-                query.append(\"(\").\n-                        append(getQuery(nodeCond.getLeftNodeCond(),\n+                query.append(getQuery(nodeCond.getLeftNodeCond(),\n                         parameters)).\n-                        append(\" INTERSECT \").\n+                        append(\" AND user_id IN ( \").\n                         append(getQuery(nodeCond.getRightNodeCond(),\n                         parameters).\n                         append(\")\"));\n@@ -316,13 +315,12 @@ private String getQuery(final MembershipCond cond,\n                     append(\"FROM user_search_membership WHERE \");\n         }\n \n-        Integer paramKey;\n         if (cond.getRoleId() != null) {\n-            paramKey = setParameter(random, parameters, cond.getRoleId());\n-            query.append(\"role_id=:param\").append(paramKey);\n+            query.append(\"role_id=:param\").append(\n+                    setParameter(random, parameters, cond.getRoleId()));\n         } else if (cond.getRoleName() != null) {\n-            paramKey = setParameter(random, parameters, cond.getRoleName());\n-            query.append(\"role_name=:param\").append(paramKey);\n+            query.append(\"role_name=:param\").append(\n+                    setParameter(random, parameters, cond.getRoleName()));\n         }\n \n         if (not) {\n@@ -336,29 +334,20 @@ private String getQuery(final ResourceCond cond,\n             final boolean not, final Map<Integer, Object> parameters) {\n \n         StringBuilder query = new StringBuilder(\n-                \"SELECT id AS user_id FROM syncopeuser WHERE id \");\n+                \"SELECT DISTINCT user_id FROM user_search_resource WHERE \");\n \n         if (not) {\n-            query.append(\"NOT IN (\");\n-        } else {\n-            query.append(\" IN (\");\n+            query.append(\"user_id NOT IN (\").\n+                    append(\"SELECT DISTINCT user_id \").\n+                    append(\"FROM user_search_resource WHERE \");\n         }\n \n-        query.append(\"SELECT DISTINCT m.syncopeuser_id AS user_id \").\n-                append(\"FROM membership m, \").\n-                append(\"syncoperole_targetresource rr \").\n-                append(\"WHERE rr.targetresources_name=:param\").\n-                append(setParameter(random, parameters, cond.getName())).\n-                append(\" \").\n-                append(\"AND rr.roles_id=m.syncoperole_id \").\n-                append(\"UNION \").\n-                append(\"SELECT DISTINCT ur.users_id AS user_id \").\n-                append(\"FROM syncopeuser_targetresource ur \").\n-                append(\"WHERE ur.targetresources_name=:param\").\n-                append(setParameter(random, parameters, cond.getName()));\n-\n-        query.append(\")\");\n+        query.append(\"resource_name=:param\").append(\n+                setParameter(random, parameters, cond.getResourceName()));\n \n+        if (not) {\n+            query.append(\")\");\n+        }\n         return query.toString();\n     }\n "},{"sha":"be65ccb1ee02f6e266d179f023e0ec2a251a7f51","filename":"core/src/main/java/org/syncope/core/persistence/util/SchemaExporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FSchemaExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FSchemaExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FSchemaExporter.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -110,7 +110,7 @@ private static enum Dialect {\n \n         ORACLE(\"org.hibernate.dialect.Oracle10gDialect\"),\n         POSTGRESQL(\"org.hibernate.dialect.PostgreSQLDialect\"),\n-        MYSQL(\"org.hibernate.dialect.MySQLDialect\"),\n+        MYSQL(\"org.hibernate.dialect.MySQL5InnoDBDialect\"),\n         HSQL(\"org.hibernate.dialect.HSQLDialect\");\n \n         private String dialectClass;"},{"sha":"4c63ed8cc86f4850a08be015cadf19b81a20bd2c","filename":"core/src/main/resources/content.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -13,14 +13,14 @@\n   limitations under the License.\n -->\n <dataset>\n-    <SyncopeConf key=\"token.length\" value=\"256\"/>\n-    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n-    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n-    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n-    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n-    <SyncopeConf key=\"connid.bundles.directory\" value=\"${bundles.directory}\"/>\n-    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n+    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n+    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n+    <SyncopeConf confKey=\"token.encryption.confKey\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n \n     <USchema name=\"surname\" type=\"String\"\n                 mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>"},{"sha":"ec17bf9a3a8a80208388e93a21fcf83314abffa2","filename":"core/src/main/resources/views.xml","status":"modified","additions":20,"deletions":10,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -16,8 +16,7 @@\n <properties>\n     <comment>Views</comment>\n     <entry key=\"user_search_attr\">\n-CREATE VIEW user_search_attr\n-AS\n+CREATE VIEW user_search_attr AS\n \n SELECT ua.owner_id AS user_id,\n ua.schema_name AS schema_name,\n@@ -26,7 +25,7 @@ uav.datevalue AS datevalue,\n uav.doublevalue AS doublevalue,\n uav.longvalue AS longvalue,\n uav.stringvalue AS stringvalue\n-FROM uattruniquevalue uav, uattr ua\n+FROM UAttrUniqueValue uav, UAttr ua\n WHERE uav.attribute_id = ua.id\n \n UNION ALL\n@@ -38,28 +37,39 @@ uav.datevalue AS datevalue,\n uav.doublevalue AS doublevalue,\n uav.longvalue AS longvalue,\n uav.stringvalue AS stringvalue\n-FROM uattrvalue uav, uattr ua\n+FROM UAttrValue uav, UAttr ua\n WHERE uav.attribute_id = ua.id\n \n UNION ALL\n \n SELECT u.id AS user_id,\n-uschema.name AS schema_name,\n+USchema.name AS schema_name,\n NULL AS booleanvalue,\n NULL AS datevalue,\n NULL AS doublevalue,\n NULL AS longvalue,\n NULL AS stringvalue\n-FROM syncopeuser u CROSS JOIN uschema\n-LEFT OUTER JOIN uattr ua ON (uschema.name = ua.schema_name AND ua.owner_id = u.id)\n+FROM SyncopeUser u CROSS JOIN USchema\n+LEFT OUTER JOIN UAttr ua ON (USchema.name = ua.schema_name AND ua.owner_id = u.id)\n WHERE ua.id IS NULL\n     </entry>\n     <entry key=\"user_search_membership\">\n-CREATE VIEW user_search_membership\n-AS\n+CREATE VIEW user_search_membership AS\n \n SELECT m.syncopeuser_id AS user_id, r.id AS role_id, r.name AS role_name\n-FROM membership m, syncoperole r\n+FROM Membership m, SyncopeRole r\n WHERE m.syncoperole_id = r.id\n     </entry>\n+    <entry key=\"user_search_resource\">\n+CREATE VIEW user_search_resource AS\n+\n+SELECT st.users_id AS user_id, st.targetResources_name AS resource_name\n+FROM SyncopeUser_TargetResource st\n+\n+UNION ALL\n+\n+SELECT m.syncopeuser_id AS user_id, st.targetResources_name AS resource_name\n+FROM Membership m, SyncopeRole r, SyncopeRole_TargetResource st\n+WHERE m.syncoperole_id = r.id AND st.roles_id = r.id\n+    </entry>\n </properties>"},{"sha":"73f7bb097575676278fb0ea6faa24c395afb6579","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserSearchTest.java","status":"modified","additions":25,"deletions":4,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -28,6 +28,7 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.ResourceCond;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.util.EntitlementUtil;\n \n@@ -184,8 +185,7 @@ public void searchByIsNull() {\n                 new AttributeCond(AttributeCond.Type.ISNULL);\n         coolLeafCond.setSchema(\"cool\");\n \n-        List<SyncopeUser> users =\n-                searchDAO.search(\n+        List<SyncopeUser> users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 NodeCond.getLeafCond(coolLeafCond));\n         assertNotNull(users);\n@@ -195,11 +195,32 @@ public void searchByIsNull() {\n                 new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         coolLeafCond.setSchema(\"cool\");\n \n-        users =\n-                searchDAO.search(\n+        users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 NodeCond.getLeafCond(coolLeafCond));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n+\n+    @Test\n+    public void searchByResource() {\n+        ResourceCond ws2 = new ResourceCond();\n+        ws2.setResourceName(\"ws-target-resource2\");\n+\n+        ResourceCond ws1 = new ResourceCond();\n+        ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n+\n+        NodeCond searchCondition = NodeCond.getAndCond(\n+                NodeCond.getNotLeafCond(ws2),\n+                NodeCond.getLeafCond(ws1));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        List<SyncopeUser> users = searchDAO.search(\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n+                searchCondition);\n+\n+        assertNotNull(users);\n+        assertEquals(1, users.size());\n+    }\n }"},{"sha":"e7b84f72be50a5fafa76bf6e4e81087bf2b883f3","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -210,7 +210,7 @@ public void sync() {\n         assertEquals(\"JOB_FIRED\", execution.getStatus());\n \n         try {\n-            Thread.sleep(3000);\n+            Thread.sleep(5000);\n         } catch (InterruptedException e) {\n         }\n "},{"sha":"97c21d67efdddf316a50d0a102ff677cfe595d00","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -596,10 +596,10 @@ public final void search() {\n     @Test\n     public final void searchUserByResourceName() {\n         ResourceCond ws2 = new ResourceCond();\n-        ws2.setName(\"ws-target-resource2\");\n+        ws2.setResourceName(\"ws-target-resource2\");\n \n         ResourceCond ws1 = new ResourceCond();\n-        ws1.setName(\"ws-target-resource-list-mappings-2\");\n+        ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n \n         NodeCond searchCondition = NodeCond.getAndCond(\n                 NodeCond.getNotLeafCond(ws2),"},{"sha":"92c41869478ca76b6583036b67aeafc22101f7c5","filename":"core/src/test/resources/content.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -13,14 +13,14 @@\n   limitations under the License.\n -->\n <dataset>\n-    <SyncopeConf key=\"token.length\" value=\"256\"/>\n-    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n-    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n-    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n-    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n-    <SyncopeConf key=\"connid.bundles.directory\" value=\"${bundles.directory}\"/>\n-    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n+    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n+    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n+    <SyncopeConf confKey=\"token.encryption.confKey\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>"},{"sha":"568e14ce619353994ee6ead9927e5fb3b3ffd884","filename":"core/src/test/resources/mysql/persistence.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -0,0 +1,19 @@\n+#  Licensed under the Apache License, Version 2.0 (the \"License\");\n+#  you may not use this file except in compliance with the License.\n+#  You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+#  limitations under the License.\n+hibernate.connection.driver_class=com.mysql.jdbc.Driver\n+hibernate.connection.url=jdbc:mysql://localhost:3306/syncope\n+hibernate.connection.username=syncope\n+hibernate.connection.password=syncope\n+hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n+dbUnitDataTypeFactory=org.dbunit.ext.mysql.MySqlDataTypeFactory\n+quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.sql=tables_mysql_innodb.sql"},{"sha":"0a50bcd13ca811d50f5c5854d1dc51e73464bf35","filename":"core/src/test/resources/oracle/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2584ea1e5944659c5c71e43c54df41917888dec5/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties?ref=2584ea1e5944659c5c71e43c54df41917888dec5","patch":"@@ -10,7 +10,7 @@\n #  See the License for the specific language governing permissions and\n #  limitations under the License.\n hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver\n-hibernate.connection.url=jdbc:oracle:thin:@pioppo:1521:orcl\n+hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:orcl\n hibernate.connection.username=syncope\n hibernate.connection.password=syncope\n hibernate.dialect=org.hibernate.dialect.Oracle10gDialect"}]}