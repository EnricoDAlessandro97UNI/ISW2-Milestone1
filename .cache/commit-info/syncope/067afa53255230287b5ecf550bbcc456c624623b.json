{"sha":"067afa53255230287b5ecf550bbcc456c624623b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA2N2FmYTUzMjU1MjMwMjg3YjVlY2Y1NTBiYmNjNDU2YzYyNDYyM2I=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-01T14:46:03Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-01T14:46:03Z"},"message":"Fixes issue 203\nQuartz configuration has been proved working in clustered scenarios.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247222 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"575be0f683a33d88f23d511173f78847fa44fb49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/575be0f683a33d88f23d511173f78847fa44fb49"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/067afa53255230287b5ecf550bbcc456c624623b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/067afa53255230287b5ecf550bbcc456c624623b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/067afa53255230287b5ecf550bbcc456c624623b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/067afa53255230287b5ecf550bbcc456c624623b/comments","author":null,"committer":null,"parents":[{"sha":"824ba958d2e9c83e698ba828710aeb90f3e44d38","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/824ba958d2e9c83e698ba828710aeb90f3e44d38","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/824ba958d2e9c83e698ba828710aeb90f3e44d38"}],"stats":{"total":110,"additions":80,"deletions":30},"files":[{"sha":"5fed32c4aba2c6b22cc3be6b56c9cd4996f5af91","filename":"archetype/pom.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -93,6 +93,9 @@\n                                 <copy file=\"${basedir}/../core/src/main/resources/logback.xml\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/core/src/main/resources\"\n                                       overwrite=\"true\"/>\n+                                <copy file=\"${basedir}/../core/src/main/webapp/WEB-INF/web.xml\"\n+                                      todir=\"${basedir}/src/main/resources/archetype-resources/core/src/main/webapp/WEB-INF\"\n+                                      overwrite=\"true\"/>\n                                       \n                                 <copy file=\"${basedir}/../console/src/main/resources/logback.xml\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/console/src/main/resources\""},{"sha":"d3658d3759f0184042f8e331900ef9bcf99e1245","filename":"archetype/src/main/resources/archetype-resources/pom.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -16,26 +16,26 @@\n         <syncope.version>0.7-SNAPSHOT</syncope.version>\r\n \r\n         <connid.soap.version>1.1</connid.soap.version>\r\n-        <connid.db.table.version>1.2.1</connid.db.table.version>\r\n+        <connid.db.table.version>2.0</connid.db.table.version>\r\n         <connid.csvdir.version>0.1</connid.csvdir.version>\r\n \r\n-        <h2.version>1.3.160</h2.version>\r\n+        <h2.version>1.3.161</h2.version>\r\n \r\n         <servlet-api.version>2.5</servlet-api.version>\r\n         <jsp-api.version>2.1</jsp-api.version>\r\n         <jstl.version>1.2</jstl.version>\r\n         \r\n         <spring>3.0.6.RELEASE</spring>\r\n \r\n-        <wicket.version>1.5.1</wicket.version>\r\n+        <wicket.version>1.5.3</wicket.version>\r\n \r\n         <commons-lang.version>2.6</commons-lang.version>\r\n         <commons-httpclient.version>3.1</commons-httpclient.version>\r\n \r\n-        <cxf.version>2.4.2</cxf.version>\r\n+        <cxf.version>2.4.4</cxf.version>\r\n \r\n-        <logback.version>0.9.29</logback.version>\r\n-        <slf4j.version>1.6.1</slf4j.version>\r\n+        <logback.version>1.0.0</logback.version>\r\n+        <slf4j.version>1.6.4</slf4j.version>\r\n \r\n         <junit.version>4.9</junit.version>\r\n \r\n@@ -309,7 +309,7 @@\n                 <plugin>\r\n                     <groupId>org.apache.maven.plugins</groupId>\r\n                     <artifactId>maven-failsafe-plugin</artifactId>\r\n-                    <version>2.9</version>\r\n+                    <version>2.10</version>\r\n                     <executions>\r\n                         <execution>\r\n                             <goals>\r\n@@ -332,7 +332,7 @@\n                 <plugin>\r\n                     <groupId>org.codehaus.mojo</groupId>\r\n                     <artifactId>sql-maven-plugin</artifactId>\r\n-                    <version>1.4</version>\r\n+                    <version>1.5</version>\r\n                 </plugin>\r\n                 <plugin>\r\n                     <groupId>org.codehaus.mojo</groupId>\r"},{"sha":"4e9f0f8bc4f8f71e353635379a2010a420a689be","filename":"core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -1012,7 +1012,7 @@\n                 <dependency>\n                     <groupId>mysql</groupId>\n                     <artifactId>mysql-connector-java</artifactId>\n-                    <version>5.1.17</version>\n+                    <version>5.1.18</version>\n                     <scope>test</scope>\n                 </dependency>\n             </dependencies>"},{"sha":"59af40feb32fb51ef0446cb78fa5730c4dd759d1","filename":"core/src/main/java/org/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -60,7 +60,13 @@ private String getBeanName(final ExternalResource resource) {\n      * context\n      */\n     public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n-            throws BeansException {\n+            throws BeansException, NotFoundException {\n+\n+        // Try to re-create connector bean from underlying resource\n+        // (useful for managing failover scenarios)\n+        if (!getBeanFactory().containsBean(getBeanName(resource))) {\n+            registerConnector(resource);\n+        }\n \n         return (ConnectorFacadeProxy) getBeanFactory().getBean(\n                 getBeanName(resource));"},{"sha":"1b538ab0c25fad9b3181d2aac5773f2c8548e835","filename":"core/src/main/java/org/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -14,6 +14,8 @@\n package org.syncope.core.init;\n \n import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import org.apache.commons.lang.StringUtils;\n import org.quartz.Job;\n import org.quartz.JobDetail;\n@@ -49,6 +51,21 @@ public class JobInstanceLoader extends AbstractLoader {\n     @Autowired\n     private TaskDAO taskDAO;\n \n+    public static Long getTaskIdFromJobName(final String name) {\n+        Long result = null;\n+\n+        Matcher jobMatcher = Pattern.compile(\"job[0-9]+\").matcher(name);\n+        if (jobMatcher.matches()) {\n+            try {\n+                result = Long.valueOf(name.substring(3));\n+            } catch (NumberFormatException e) {\n+                LOG.error(\"Unparsable task id: {}\", name.substring(3), e);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     public static String getJobName(final Long taskId) {\n         return \"job\" + taskId;\n     }"},{"sha":"ab498be517cf75a274b48b5f2b767e003f40e626","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -121,10 +121,9 @@ protected <T extends AbstractAttributable> List<Object> retrieveValues(\n             if (attributeNames != null && accountId != null) {\n                 LOG.debug(\"Get object attribute for entry {}\", accountId);\n \n-                ConnectorFacadeProxy connector =\n-                        connInstanceLoader.getConnector(resource);\n-\n                 try {\n+                    ConnectorFacadeProxy connector =\n+                            connInstanceLoader.getConnector(resource);\n                     Set<Attribute> attributes = connector.getObjectAttributes(\n                             ObjectClass.ACCOUNT,\n                             new Uid(accountId),"},{"sha":"57850bd4f87fb092b14063d6f113fe47a0b6127d","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -15,6 +15,8 @@\n package org.syncope.core.rest.controller;\n \n import java.lang.reflect.Modifier;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n@@ -26,6 +28,8 @@\n import org.quartz.JobDataMap;\n import org.quartz.Scheduler;\n import org.reflections.Reflections;\n+import org.reflections.util.ClasspathHelper;\n+import org.reflections.util.ConfigurationBuilder;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -245,8 +249,21 @@ public List<TaskExecTO> listExecutions(\n     @PreAuthorize(\"hasRole('TASK_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/jobClasses\")\n-    public ModelAndView getJobClasses() {\n-        Reflections reflections = new Reflections(\"\");\n+    public ModelAndView getJobClasses()\n+            throws MalformedURLException {\n+\n+        // this is needed because Job interface is not in the same classloader\n+        // as the current class\n+        List<URL> urls = new ArrayList<URL>();\n+        for (URL url : ClasspathHelper.forClassLoader()) {\n+            if (!url.toExternalForm().endsWith(\".jar\")\n+                    || url.toExternalForm().contains(\"quartz\")) {\n+\n+                urls.add(url);\n+            }\n+        }\n+        Reflections reflections = new Reflections(\n+                new ConfigurationBuilder().setUrls(urls));\n \n         Set<Class<? extends Job>> subTypes =\n                 reflections.getSubTypesOf(Job.class);"},{"sha":"c7c8030e40c26d3f4cea328cb4e83b4fd0c75eb5","filename":"core/src/main/java/org/syncope/core/scheduling/SpringBeanJobFactory.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanJobFactory.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -20,6 +20,9 @@\n import org.springframework.beans.PropertyAccessorFactory;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ConfigurableApplicationContext;\n+import org.syncope.core.init.JobInstanceLoader;\n+import org.syncope.core.persistence.beans.SchedTask;\n+import org.syncope.core.persistence.dao.TaskDAO;\n \n public class SpringBeanJobFactory\n         extends org.springframework.scheduling.quartz.SpringBeanJobFactory {\n@@ -55,6 +58,23 @@ protected Object createJobInstance(final TriggerFiredBundle bundle)\n         final ApplicationContext ctx =\n                 ((ConfigurableApplicationContext) schedulerContext.get(\n                 \"applicationContext\"));\n+\n+        // Try to re-create job bean from underlying task (useful for managing\n+        // failover scenarios)\n+        if (!ctx.containsBean(bundle.getJobDetail().getName())) {\n+            Long taskId = JobInstanceLoader.getTaskIdFromJobName(\n+                    bundle.getJobDetail().getName());\n+            if (taskId != null) {\n+                TaskDAO taskDAO = ctx.getBean(TaskDAO.class);\n+                SchedTask task = taskDAO.find(taskId);\n+\n+                JobInstanceLoader jobInstanceLoader =\n+                        ctx.getBean(JobInstanceLoader.class);\n+                jobInstanceLoader.registerJob(taskId,\n+                        task.getJobClassName(), task.getCronExpression());\n+            }\n+        }\n+\n         final Object job = ctx.getBean(bundle.getJobDetail().getName());\n         final BeanWrapper wrapper =\n                 PropertyAccessorFactory.forBeanPropertyAccess(job);"},{"sha":"296be23247c9145335a71e815ee39e648276c71e","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -29,7 +29,6 @@\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n-import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.GrantedAuthority;\n@@ -918,7 +917,7 @@ protected String doExecute(final boolean dryRun)\n         ConnectorFacadeProxy connector;\n         try {\n             connector = connInstanceLoader.getConnector(syncTask.getResource());\n-        } catch (BeansException e) {\n+        } catch (Exception e) {\n             final String msg = String.format(\n                     \"Connector instance bean for resource %s \"\n                     + \"and connInstance %s not found\","},{"sha":"f70b3ceef97789a213b41e7ab4a89be15f47d8f9","filename":"core/src/main/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -22,7 +22,7 @@\n     <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n     <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"false\"/>\n     \n-    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n+    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"GLOBBAL SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n     <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"Global Password Policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n     <Policy DTYPE=\"AccountPolicy\" id=\"3\" description=\"Global Account Policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n     "},{"sha":"00909ee51e4dc4784296a1b335b16fe5eb1dba71","filename":"core/src/test/java/org/syncope/core/init/ConnInstanceLoaderTest.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -18,13 +18,10 @@\n \n import org.junit.Before;\n import org.junit.Test;\n-import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.test.util.ReflectionTestUtils;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.AbstractTest;\n-import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.propagation.ConnectorFacadeProxy;\n import org.syncope.core.util.ApplicationContextManager;\n@@ -66,12 +63,4 @@ public void load() {\n                 ApplicationContextManager.getApplicationContext().\n                 getBeanNamesForType(ConnectorFacadeProxy.class).length);\n     }\n-\n-    @Test(expected = NoSuchBeanDefinitionException.class)\n-    public void getConnectorWhenEmpty() {\n-        ConnInstance instance = new ConnInstance();\n-        ExternalResource resource = new ExternalResource();\n-        resource.setConnector(instance);\n-        cil.getConnector(resource);\n-    }\n }"},{"sha":"b9ea278011aafafa34d9bb662dcda0acd6cacea8","filename":"core/src/test/resources/mysql/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/067afa53255230287b5ecf550bbcc456c624623b/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=067afa53255230287b5ecf550bbcc456c624623b","patch":"@@ -10,7 +10,7 @@\n #  See the License for the specific language governing permissions and\n #  limitations under the License.\n hibernate.connection.driver_class=com.mysql.jdbc.Driver\n-hibernate.connection.url=jdbc:mysql://localhost:3306/syncope\n+hibernate.connection.url=jdbc:mysql://localhost:3306/syncope?characterEncoding=UTF-8\n hibernate.connection.username=syncope\n hibernate.connection.password=syncope\n hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect"}]}