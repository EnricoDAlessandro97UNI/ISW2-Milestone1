{"sha":"7cd228925e538bd7743a22ac923bdee4b30a32e6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdjZDIyODkyNWU1MzhiZDc3NDNhMjJhYzkyM2JkZWU0YjMwYTMyZTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-14T15:54:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-11-14T16:23:18Z"},"message":"[SYNCOPE-152] SCIM configuration including attribute mapping + console extension","tree":{"sha":"261651eec45497c0d51b36a5c99cdd7c02c55462","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/261651eec45497c0d51b36a5c99cdd7c02c55462"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7cd228925e538bd7743a22ac923bdee4b30a32e6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cd228925e538bd7743a22ac923bdee4b30a32e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cd228925e538bd7743a22ac923bdee4b30a32e6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cd228925e538bd7743a22ac923bdee4b30a32e6/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3ac8999d2ffe6fc87b4558453a59d797a8c61c0"}],"stats":{"total":3119,"additions":2860,"deletions":259},"files":[{"sha":"da2018f49197506c0fde90f65e9edcf378b1531b","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -140,6 +140,12 @@ under the License.\n           <version>${syncope.version}</version>\n         </dependency>\n         \n+        <dependency>\n+          <groupId>org.apache.syncope.ext.scimv2</groupId>\n+          <artifactId>syncope-ext-scimv2-client-console</artifactId>\n+          <version>${syncope.version}</version>\n+        </dependency>\n+\n         <dependency>\n           <groupId>org.flowable</groupId>\n           <artifactId>flowable-ui-modeler-app</artifactId>            "},{"sha":"8e68fe99a7d4d0e5a5a30048536c29220279d7bd","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -192,6 +192,17 @@ under the License.\n           <version>${syncope.version}</version>\n         </dependency>\n \n+        <dependency>\n+          <groupId>org.apache.syncope.ext.scimv2</groupId>\n+          <artifactId>syncope-ext-scimv2-rest-cxf</artifactId>\n+          <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>org.apache.syncope.ext.scimv2</groupId>\n+          <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n+          <version>${project.version}</version>\n+        </dependency>\n+\n         <dependency>\n           <groupId>org.apache.syncope.ext</groupId>\n           <artifactId>syncope-ext-swagger-ui</artifactId>"},{"sha":"dbf222cc69a690322b4ae9f6ee757046c593cfc8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -100,7 +100,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 target.add(container);\n             }\n         });\n-\n+        modalDetails.size(Modal.Size.Medium);\n         addInnerObject(modalDetails);\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AttrTO>(new AttrTO(), pageRef) {"},{"sha":"4768d1608e4fd33854c13ba05e43b0e70fad6471","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -224,7 +224,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                             modal.show(false);\n                             modal.close(target);\n                         } catch (Exception e) {\n-                            LOG.error(\"While updating onsole layout info for role {}\", info.getKey(), e);\n+                            LOG.error(\"While updating console layout info for role {}\", info.getKey(), e);\n                             SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                     ? e.getClass().getName() : e.getMessage());\n                         }"},{"sha":"7b02052b8584660b1f654e06ea8dadee4ef4352c","filename":"ext/scimv2/client-console/pom.xml","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,78 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 Client Console</name>\n+  <description>Apache Syncope Ext: SCIMv2 Client Console</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-client-console</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"bd22f03b7f99d51d7c6d157a05c5c4b5b67de8c5","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/pages/SCIMConf.java","status":"added","additions":137,"deletions":0,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.annotations.ExtPage;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.SCIMConfRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n+import org.apache.syncope.common.lib.scim.SCIMComplexConf;\n+import org.apache.syncope.common.lib.scim.SCIMEnterpriseUserConf;\n+import org.apache.syncope.common.lib.scim.SCIMUserConf;\n+import org.apache.syncope.common.lib.scim.SCIMUserNameConf;\n+import org.apache.syncope.common.lib.scim.types.EmailCanonicalType;\n+import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+@ExtPage(label = \"SCIM 2.0\", icon = \"fa-cloud\", listEntitlement = SCIMEntitlement.SCIM_CONF_GET, priority = 100)\n+public class SCIMConf extends BaseExtPage {\n+\n+    private static final long serialVersionUID = 9128779230455599119L;\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private final SCIMConfRestClient restClient = new SCIMConfRestClient();\n+\n+    public SCIMConf(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        final BaseModal<String> modal = new BaseModal<>(\"modal\");\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                modal.show(false);\n+            }\n+        });\n+        modal.size(Modal.Size.Large);\n+        modal.addSubmitButton();\n+        body.add(modal);\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        body.add(content);\n+\n+        String confString = \"\";\n+        try {\n+            org.apache.syncope.common.lib.scim.SCIMConf conf = restClient.get();\n+            if (conf.getUserConf() == null) {\n+                conf.setUserConf(new SCIMUserConf());\n+            }\n+            if (conf.getUserConf().getName() == null) {\n+                conf.getUserConf().setName(new SCIMUserNameConf());\n+            }\n+            if (conf.getUserConf().getEmails().isEmpty()) {\n+                conf.getUserConf().getEmails().add(new SCIMComplexConf<EmailCanonicalType>());\n+            }\n+\n+            if (conf.getEnterpriseUserConf() == null) {\n+                conf.setEnterpriseUserConf(new SCIMEnterpriseUserConf());\n+            }\n+\n+            confString = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(conf);\n+        } catch (Exception e) {\n+            LOG.error(\"While reading SCIM configuration\", e);\n+            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                    ? e.getClass().getName() : e.getMessage());\n+        }\n+        final Model<String> confModel = Model.of(confString);\n+\n+        content.add(new AjaxLink<Void>(\"edit\") {\n+\n+            private static final long serialVersionUID = -4331619903296515985L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                modal.header(new ResourceModel(\"editConf\"));\n+                modal.setContent(new JsonEditorPanel(modal, confModel, false, getPageReference()) {\n+\n+                    private static final long serialVersionUID = -8927036362466990179L;\n+\n+                    @Override\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            restClient.set(MAPPER.readValue(\n+                                    confModel.getObject(), org.apache.syncope.common.lib.scim.SCIMConf.class));\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.show(false);\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While setting SCIM configuration\", e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                });\n+                modal.show(true);\n+                target.add(modal);\n+            }\n+        });\n+    }\n+\n+}"},{"sha":"95ae6630302999172047166101caf2fd79dd0126","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/rest/SCIMConfRestClient.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSCIMConfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSCIMConfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSCIMConfRestClient.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.rest.api.service.SCIMConfService;\n+\n+public class SCIMConfRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -8572714521320571470L;\n+\n+    public SCIMConf get() {\n+        return getService(SCIMConfService.class).get();\n+    }\n+\n+    public void set(final SCIMConf conf) {\n+        getService(SCIMConfService.class).set(conf);\n+    }\n+}"},{"sha":"aa1e725ae79d90568946423760dc1cf96480e182","filename":"ext/scimv2/client-console/src/main/resources/org/apache/syncope/client/console/pages/SCIMConf.html","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.html?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,41 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n+        <li class=\"active\"><wicket:message key=\"extensions\"/></li>\n+        <li class=\"active\">SCIM 2.0</li>\n+      </ol>\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"logviewer-btn\">\n+        <a class=\"btn btn-primary\" wicket:id=\"edit\"> <wicket:message key=\"editConf\"/>\n+          <span class=\"fa fa-edit\"></span>\n+        </a>\n+      </div>\n+    </section>\n+\n+    <div wicket:id=\"modal\"/>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"e7f31e6f7c9198b7701b785ca529bf75028d07fc","filename":"ext/scimv2/client-console/src/main/resources/org/apache/syncope/client/console/pages/SCIMConf.properties","status":"renamed","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf.properties?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -14,8 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=${conf.directory}\n-\n-bulk.maxOperations=1000\n-bulk.maxPayloadSize=1048576\n-filter.maxResults=200\n+editConf=SCIM 2.0 configuration","previous_filename":"fit/core-reference/src/main/resources/all/scimv2-logic.properties"},{"sha":"3655a0f529c748e953c7b386956ba81318370fd3","filename":"ext/scimv2/client-console/src/main/resources/org/apache/syncope/client/console/pages/SCIMConf_it.properties","status":"renamed","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_it.properties?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -14,8 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=${conf.directory}\n-\n-bulk.maxOperations=1000\n-bulk.maxPayloadSize=1048576\n-filter.maxResults=200\n+editConf=Configurazione SCIM 2.0","previous_filename":"ext/scimv2/logic/src/main/resources/scimv2-logic.properties"},{"sha":"e7f31e6f7c9198b7701b785ca529bf75028d07fc","filename":"ext/scimv2/client-console/src/main/resources/org/apache/syncope/client/console/pages/SCIMConf_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_pt_BR.properties?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+editConf=SCIM 2.0 configuration"},{"sha":"e7f31e6f7c9198b7701b785ca529bf75028d07fc","filename":"ext/scimv2/client-console/src/main/resources/org/apache/syncope/client/console/pages/SCIMConf_ru.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConf_ru.properties?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+editConf=SCIM 2.0 configuration"},{"sha":"246688de8d9d88f538cb68aa070266b15dff53ca","filename":"ext/scimv2/common-lib/pom.xml","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 Common Lib</name>\n+  <description>Apache Syncope Ext: SCIMv2 Common Lib</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-common-lib</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common</groupId>\n+      <artifactId>syncope-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"84cb3faacaed9d14423bc57af0bb2adbddcc73a9","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMComplexConf.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMComplexConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMComplexConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMComplexConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+\n+public class SCIMComplexConf<E extends Enum<?>> implements Serializable {\n+\n+    private static final long serialVersionUID = -6205072829179565927L;\n+\n+    private String value;\n+\n+    private String display;\n+\n+    private E type;\n+\n+    private boolean primary;\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(final String value) {\n+        this.value = value;\n+    }\n+\n+    public String getDisplay() {\n+        return display;\n+    }\n+\n+    public void setDisplay(final String display) {\n+        this.display = display;\n+    }\n+\n+    public E getType() {\n+        return type;\n+    }\n+\n+    public void setType(final E type) {\n+        this.type = type;\n+    }\n+\n+    public boolean isPrimary() {\n+        return primary;\n+    }\n+\n+    public void setPrimary(final boolean primary) {\n+        this.primary = primary;\n+    }\n+\n+}"},{"sha":"e7cc2a4f699b3d16ffc15c2036d589bd8962ba64","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMConf.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import java.io.Serializable;\n+import java.util.Date;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class SCIMConf implements Serializable {\n+\n+    private static final long serialVersionUID = 5032136914118958611L;\n+\n+    public static final String KEY = \"scimv2.conf\";\n+\n+    private Date creationDate = new Date();\n+\n+    private Date lastChangeDate = new Date();\n+\n+    private int bulkMaxOperations = 1000;\n+\n+    private int bulkMaxPayloadSize = 1048576;\n+\n+    private int filterMaxResults = 200;\n+\n+    private SCIMUserConf userConf;\n+\n+    private SCIMEnterpriseUserConf enterpriseUserConf;\n+\n+    public Date getCreationDate() {\n+        if (creationDate != null) {\n+            return new Date(creationDate.getTime());\n+        }\n+        return null;\n+    }\n+\n+    public void setCreationDate(final Date creationDate) {\n+        if (creationDate != null) {\n+            this.creationDate = new Date(creationDate.getTime());\n+        } else {\n+            this.creationDate = null;\n+        }\n+    }\n+\n+    public Date getLastChangeDate() {\n+        if (lastChangeDate != null) {\n+            return new Date(lastChangeDate.getTime());\n+        }\n+        return null;\n+    }\n+\n+    public void setLastChangeDate(final Date lastChangeDate) {\n+        if (lastChangeDate != null) {\n+            this.lastChangeDate = new Date(lastChangeDate.getTime());\n+        } else {\n+            this.lastChangeDate = null;\n+        }\n+    }\n+\n+    @JsonIgnore\n+    public String getETagValue() {\n+        Date etagDate = getLastChangeDate() == null\n+                ? getCreationDate() : getLastChangeDate();\n+        return etagDate == null\n+                ? StringUtils.EMPTY\n+                : String.valueOf(etagDate.getTime());\n+\n+    }\n+\n+    public int getBulkMaxOperations() {\n+        return bulkMaxOperations;\n+    }\n+\n+    public void setBulkMaxOperations(final int bulkMaxOperations) {\n+        this.bulkMaxOperations = bulkMaxOperations;\n+    }\n+\n+    public int getBulkMaxPayloadSize() {\n+        return bulkMaxPayloadSize;\n+    }\n+\n+    public void setBulkMaxPayloadSize(final int bulkMaxPayloadSize) {\n+        this.bulkMaxPayloadSize = bulkMaxPayloadSize;\n+    }\n+\n+    public int getFilterMaxResults() {\n+        return filterMaxResults;\n+    }\n+\n+    public void setFilterMaxResults(final int filterMaxResults) {\n+        this.filterMaxResults = filterMaxResults;\n+    }\n+\n+    public SCIMUserConf getUserConf() {\n+        return userConf;\n+    }\n+\n+    public void setUserConf(final SCIMUserConf userConf) {\n+        this.userConf = userConf;\n+    }\n+\n+    public SCIMEnterpriseUserConf getEnterpriseUserConf() {\n+        return enterpriseUserConf;\n+    }\n+\n+    public void setEnterpriseUserConf(final SCIMEnterpriseUserConf enterpriseUserConf) {\n+        this.enterpriseUserConf = enterpriseUserConf;\n+    }\n+\n+}"},{"sha":"4cf7b88724773dc03f15cbc62ec90e7d32b8afb5","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMEnterpriseUserConf.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMEnterpriseUserConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMEnterpriseUserConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMEnterpriseUserConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+\n+public class SCIMEnterpriseUserConf implements Serializable {\n+\n+    private static final long serialVersionUID = 5929414914887282638L;\n+\n+    private String employeeNumber;\n+\n+    private String costCenter;\n+\n+    private String organization;\n+\n+    private String division;\n+\n+    private String department;\n+\n+    private SCIMManagerConf manager;\n+\n+    public String getEmployeeNumber() {\n+        return employeeNumber;\n+    }\n+\n+    public void setEmployeeNumber(final String employeeNumber) {\n+        this.employeeNumber = employeeNumber;\n+    }\n+\n+    public String getCostCenter() {\n+        return costCenter;\n+    }\n+\n+    public void setCostCenter(final String costCenter) {\n+        this.costCenter = costCenter;\n+    }\n+\n+    public String getOrganization() {\n+        return organization;\n+    }\n+\n+    public void setOrganization(final String organization) {\n+        this.organization = organization;\n+    }\n+\n+    public String getDivision() {\n+        return division;\n+    }\n+\n+    public void setDivision(final String division) {\n+        this.division = division;\n+    }\n+\n+    public String getDepartment() {\n+        return department;\n+    }\n+\n+    public void setDepartment(final String department) {\n+        this.department = department;\n+    }\n+\n+    public SCIMManagerConf getManager() {\n+        return manager;\n+    }\n+\n+    public void setManager(final SCIMManagerConf manager) {\n+        this.manager = manager;\n+    }\n+\n+}"},{"sha":"481eb5fcadd4675c536c94e91882dfd8f5a8d808","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMManagerConf.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMManagerConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMManagerConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMManagerConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+\n+public class SCIMManagerConf implements Serializable {\n+\n+    private static final long serialVersionUID = -1443695570207406613L;\n+\n+    private String manager;\n+\n+    private String displayName;\n+\n+    public String getManager() {\n+        return manager;\n+    }\n+\n+    public void setManager(final String manager) {\n+        this.manager = manager;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(final String displayName) {\n+        this.displayName = displayName;\n+    }\n+\n+}"},{"sha":"ed5643a32ecf3537f1c44f4be7a4b3d116c2f676","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMUserAddressConf.java","status":"added","additions":107,"deletions":0,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserAddressConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserAddressConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserAddressConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.common.lib.scim.types.AddressCanonicalType;\n+\n+public class SCIMUserAddressConf implements Serializable {\n+\n+    private static final long serialVersionUID = 8093531407836615577L;\n+\n+    private String formatted;\n+\n+    private String streetAddress;\n+\n+    private String locality;\n+\n+    private String region;\n+\n+    private String postalCode;\n+\n+    private String country;\n+\n+    private AddressCanonicalType type;\n+\n+    private boolean primary;\n+\n+    public String getFormatted() {\n+        return formatted;\n+    }\n+\n+    public void setFormatted(final String formatted) {\n+        this.formatted = formatted;\n+    }\n+\n+    public String getStreetAddress() {\n+        return streetAddress;\n+    }\n+\n+    public void setStreetAddress(final String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getLocality() {\n+        return locality;\n+    }\n+\n+    public void setLocality(final String locality) {\n+        this.locality = locality;\n+    }\n+\n+    public String getRegion() {\n+        return region;\n+    }\n+\n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public String getPostalCode() {\n+        return postalCode;\n+    }\n+\n+    public void setPostalCode(final String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getCountry() {\n+        return country;\n+    }\n+\n+    public void setCountry(final String country) {\n+        this.country = country;\n+    }\n+\n+    public AddressCanonicalType getType() {\n+        return type;\n+    }\n+\n+    public void setType(final AddressCanonicalType type) {\n+        this.type = type;\n+    }\n+\n+    public boolean isPrimary() {\n+        return primary;\n+    }\n+\n+    public void setPrimary(final boolean primary) {\n+        this.primary = primary;\n+    }\n+}"},{"sha":"7d1be737f4b74188deaa23f336fd2d3f9c84803f","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMUserConf.java","status":"added","additions":159,"deletions":0,"changes":159,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.scim.types.EmailCanonicalType;\n+import org.apache.syncope.common.lib.scim.types.IMCanonicalType;\n+import org.apache.syncope.common.lib.scim.types.PhoneNumberCanonicalType;\n+import org.apache.syncope.common.lib.scim.types.PhotoCanonicalType;\n+\n+public class SCIMUserConf implements Serializable {\n+\n+    private static final long serialVersionUID = -2700011089067219156L;\n+\n+    private SCIMUserNameConf name;\n+\n+    private String displayName;\n+\n+    private String nickName;\n+\n+    private String profileUrl;\n+\n+    private String title;\n+\n+    private String userType;\n+\n+    private String preferredLanguage;\n+\n+    private String locale;\n+\n+    private String timezone;\n+\n+    private final List<SCIMComplexConf<EmailCanonicalType>> emails = new ArrayList<>();\n+\n+    private final List<SCIMComplexConf<PhoneNumberCanonicalType>> phoneNumbers = new ArrayList<>();\n+\n+    private final List<SCIMComplexConf<IMCanonicalType>> ims = new ArrayList<>();\n+\n+    private final List<SCIMComplexConf<PhotoCanonicalType>> photos = new ArrayList<>();\n+\n+    private final List<SCIMUserAddressConf> addresses = new ArrayList<>();\n+\n+    private final List<String> x509Certificates = new ArrayList<>();\n+\n+    public SCIMUserNameConf getName() {\n+        return name;\n+    }\n+\n+    public void setName(final SCIMUserNameConf name) {\n+        this.name = name;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(final String displayName) {\n+        this.displayName = displayName;\n+    }\n+\n+    public String getNickName() {\n+        return nickName;\n+    }\n+\n+    public void setNickName(final String nickName) {\n+        this.nickName = nickName;\n+    }\n+\n+    public String getProfileUrl() {\n+        return profileUrl;\n+    }\n+\n+    public void setProfileUrl(final String profileUrl) {\n+        this.profileUrl = profileUrl;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(final String title) {\n+        this.title = title;\n+    }\n+\n+    public String getUserType() {\n+        return userType;\n+    }\n+\n+    public void setUserType(final String userType) {\n+        this.userType = userType;\n+    }\n+\n+    public String getPreferredLanguage() {\n+        return preferredLanguage;\n+    }\n+\n+    public void setPreferredLanguage(final String preferredLanguage) {\n+        this.preferredLanguage = preferredLanguage;\n+    }\n+\n+    public String getLocale() {\n+        return locale;\n+    }\n+\n+    public void setLocale(final String locale) {\n+        this.locale = locale;\n+    }\n+\n+    public String getTimezone() {\n+        return timezone;\n+    }\n+\n+    public void setTimezone(final String timezone) {\n+        this.timezone = timezone;\n+    }\n+\n+    public List<SCIMComplexConf<EmailCanonicalType>> getEmails() {\n+        return emails;\n+    }\n+\n+    public List<SCIMComplexConf<PhoneNumberCanonicalType>> getPhoneNumbers() {\n+        return phoneNumbers;\n+    }\n+\n+    public List<SCIMComplexConf<IMCanonicalType>> getIms() {\n+        return ims;\n+    }\n+\n+    public List<SCIMComplexConf<PhotoCanonicalType>> getPhotos() {\n+        return photos;\n+    }\n+\n+    public List<SCIMUserAddressConf> getAddresses() {\n+        return addresses;\n+    }\n+\n+    public List<String> getX509Certificates() {\n+        return x509Certificates;\n+    }\n+\n+}"},{"sha":"2f2db0f3e934e06d799d6eb470e53790cb91d029","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/SCIMUserNameConf.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserNameConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserNameConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2FSCIMUserNameConf.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim;\n+\n+import java.io.Serializable;\n+\n+public class SCIMUserNameConf implements Serializable {\n+\n+    private static final long serialVersionUID = -2256008193008290376L;\n+\n+    private String formatted;\n+\n+    private String familyName;\n+\n+    private String givenName;\n+\n+    private String middleName;\n+\n+    private String honorificPrefix;\n+\n+    private String honorificSuffix;\n+\n+    public String getFormatted() {\n+        return formatted;\n+    }\n+\n+    public void setFormatted(final String formatted) {\n+        this.formatted = formatted;\n+    }\n+\n+    public String getFamilyName() {\n+        return familyName;\n+    }\n+\n+    public void setFamilyName(final String familyName) {\n+        this.familyName = familyName;\n+    }\n+\n+    public String getGivenName() {\n+        return givenName;\n+    }\n+\n+    public void setGivenName(final String givenName) {\n+        this.givenName = givenName;\n+    }\n+\n+    public String getMiddleName() {\n+        return middleName;\n+    }\n+\n+    public void setMiddleName(final String middleName) {\n+        this.middleName = middleName;\n+    }\n+\n+    public String getHonorificPrefix() {\n+        return honorificPrefix;\n+    }\n+\n+    public void setHonorificPrefix(final String honorificPrefix) {\n+        this.honorificPrefix = honorificPrefix;\n+    }\n+\n+    public String getHonorificSuffix() {\n+        return honorificSuffix;\n+    }\n+\n+    public void setHonorificSuffix(final String honorificSuffix) {\n+        this.honorificSuffix = honorificSuffix;\n+    }\n+\n+}"},{"sha":"cf2cb13f43c6fd958ce792a3c1b44f3a314bd46e","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/AddressCanonicalType.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FAddressCanonicalType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FAddressCanonicalType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FAddressCanonicalType.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+public enum AddressCanonicalType {\n+    work,\n+    home,\n+    other\n+\n+}"},{"sha":"986c9f61a0905be4ce0ebee2cb449d39d76c8225","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/EmailCanonicalType.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FEmailCanonicalType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FEmailCanonicalType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FEmailCanonicalType.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+public enum EmailCanonicalType {\n+    work,\n+    home,\n+    other\n+\n+}"},{"sha":"09d44309530099d2d22c41247ed34e2ca447ea2b","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/IMCanonicalType.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FIMCanonicalType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FIMCanonicalType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FIMCanonicalType.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+public enum IMCanonicalType {\n+    aim,\n+    gtalk,\n+    icq,\n+    xmpp,\n+    msn,\n+    skype,\n+    qq,\n+    yahoo\n+\n+}"},{"sha":"72ff342c62880de893b9e10261362347116f7e48","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/PhoneNumberCanonicalType.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhoneNumberCanonicalType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhoneNumberCanonicalType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhoneNumberCanonicalType.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+public enum PhoneNumberCanonicalType {\n+    work,\n+    home,\n+    mobile,\n+    fax,\n+    pager,\n+    other\n+\n+}"},{"sha":"b6428f1aaa774211c36fa7f0982aa38db2884303","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/PhotoCanonicalType.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhotoCanonicalType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhotoCanonicalType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FPhotoCanonicalType.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+public enum PhotoCanonicalType {\n+    photo,\n+    thumbnail\n+\n+}"},{"sha":"8a8a1aed2345dd72851c8a46a6c61e81dc04f2e2","filename":"ext/scimv2/common-lib/src/main/java/org/apache/syncope/common/lib/scim/types/SCIMEntitlement.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FSCIMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FSCIMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fscim%2Ftypes%2FSCIMEntitlement.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.scim.types;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.TreeSet;\n+\n+public final class SCIMEntitlement {\n+\n+    public static final String SCIM_CONF_GET = \"SCIM_CONF_GET\";\n+\n+    public static final String SCIM_CONF_SET = \"SCIM_CONF_SET\";\n+\n+    private static final Set<String> VALUES;\n+\n+    static {\n+        Set<String> values = new TreeSet<>();\n+        for (Field field : SCIMEntitlement.class.getDeclaredFields()) {\n+            if (Modifier.isStatic(field.getModifiers()) && String.class.equals(field.getType())) {\n+                values.add(field.getName());\n+            }\n+        }\n+        VALUES = Collections.unmodifiableSet(values);\n+    }\n+\n+    public static Set<String> values() {\n+        return VALUES;\n+    }\n+\n+    private SCIMEntitlement() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"204a3bd32639c6675ddc984ade7fab66d9e81cd0","filename":"ext/scimv2/logic/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -51,6 +51,12 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>org.antlr</groupId>\n       <artifactId>antlr4-runtime</artifactId>"},{"sha":"d15d30bede12776b2dea2297b545fc76521441ff","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"added","additions":394,"deletions":0,"changes":394,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,394 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.scim.SCIMComplexConf;\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.core.logic.scim.SCIMConfManager;\n+import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.spring.security.AuthDataAccessor;\n+import org.apache.syncope.ext.scimv2.api.data.Value;\n+import org.apache.syncope.ext.scimv2.api.data.Group;\n+import org.apache.syncope.ext.scimv2.api.data.Member;\n+import org.apache.syncope.ext.scimv2.api.data.Meta;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMComplexValue;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMEnterpriseInfo;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUserAddress;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUserManager;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUserName;\n+import org.apache.syncope.ext.scimv2.api.type.Function;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SCIMDataBinder {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(SCIMDataBinder.class);\n+\n+    @Autowired\n+    private SCIMConfManager confManager;\n+\n+    @Autowired\n+    private UserLogic userLogic;\n+\n+    @Autowired\n+    private AuthDataAccessor authDataAccessor;\n+\n+    private <E extends Enum<?>> void fill(\n+            final Map<String, AttrTO> attrs,\n+            final List<SCIMComplexConf<E>> confs,\n+            final List<SCIMComplexValue> values) {\n+\n+        confs.forEach(conf -> {\n+            SCIMComplexValue value = new SCIMComplexValue();\n+\n+            if (conf.getValue() != null && attrs.containsKey(conf.getValue())) {\n+                value.setValue(attrs.get(conf.getValue()).getValues().get(0));\n+            }\n+            if (conf.getDisplay() != null && attrs.containsKey(conf.getDisplay())) {\n+                value.setDisplay(attrs.get(conf.getDisplay()).getValues().get(0));\n+            }\n+            if (conf.getType() != null) {\n+                value.setType(conf.getType().name());\n+            }\n+            if (conf.isPrimary()) {\n+                value.setPrimary(true);\n+            }\n+\n+            if (!value.isEmpty()) {\n+                values.add(value);\n+            }\n+        });\n+    }\n+\n+    public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n+        SCIMConf conf = confManager.get();\n+\n+        SCIMUser user = new SCIMUser(\n+                userTO.getKey(),\n+                Collections.singletonList(Resource.User.schema()),\n+                new Meta(\n+                        Resource.User,\n+                        userTO.getCreationDate(),\n+                        userTO.getLastChangeDate() == null\n+                        ? userTO.getCreationDate() : userTO.getLastChangeDate(),\n+                        userTO.getETagValue(),\n+                        location),\n+                userTO.getUsername(),\n+                !userTO.isSuspended());\n+\n+        Map<String, AttrTO> attrs = new HashMap<>();\n+        attrs.putAll(EntityTOUtils.buildAttrMap(userTO.getPlainAttrs()));\n+        attrs.putAll(EntityTOUtils.buildAttrMap(userTO.getDerAttrs()));\n+        attrs.putAll(EntityTOUtils.buildAttrMap(userTO.getVirAttrs()));\n+\n+        if (conf.getUserConf() != null) {\n+            if (conf.getUserConf().getName() != null) {\n+                SCIMUserName name = new SCIMUserName();\n+\n+                if (conf.getUserConf().getName().getFamilyName() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getFamilyName())) {\n+\n+                    name.setFamilyName(attrs.get(conf.getUserConf().getName().getFamilyName()).getValues().get(0));\n+                }\n+                if (conf.getUserConf().getName().getFormatted() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getFormatted())) {\n+\n+                    name.setFormatted(attrs.get(conf.getUserConf().getName().getFormatted()).getValues().get(0));\n+                }\n+                if (conf.getUserConf().getName().getGivenName() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getGivenName())) {\n+\n+                    name.setGivenName(attrs.get(conf.getUserConf().getName().getGivenName()).getValues().get(0));\n+                }\n+                if (conf.getUserConf().getName().getHonorificPrefix() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getHonorificPrefix())) {\n+\n+                    name.setHonorificPrefix(\n+                            attrs.get(conf.getUserConf().getName().getHonorificPrefix()).getValues().get(0));\n+                }\n+                if (conf.getUserConf().getName().getHonorificSuffix() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getHonorificSuffix())) {\n+\n+                    name.setHonorificSuffix(\n+                            attrs.get(conf.getUserConf().getName().getHonorificSuffix()).getValues().get(0));\n+                }\n+                if (conf.getUserConf().getName().getMiddleName() != null\n+                        && attrs.containsKey(conf.getUserConf().getName().getMiddleName())) {\n+\n+                    name.setMiddleName(attrs.get(conf.getUserConf().getName().getMiddleName()).getValues().get(0));\n+                }\n+\n+                if (!name.isEmpty()) {\n+                    user.setName(name);\n+                }\n+            }\n+\n+            if (conf.getUserConf().getDisplayName() != null\n+                    && attrs.containsKey(conf.getUserConf().getDisplayName())) {\n+\n+                user.setDisplayName(attrs.get(conf.getUserConf().getDisplayName()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getNickName() != null\n+                    && attrs.containsKey(conf.getUserConf().getNickName())) {\n+\n+                user.setNickName(attrs.get(conf.getUserConf().getNickName()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getProfileUrl() != null\n+                    && attrs.containsKey(conf.getUserConf().getProfileUrl())) {\n+\n+                user.setProfileUrl(attrs.get(conf.getUserConf().getProfileUrl()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getTitle() != null\n+                    && attrs.containsKey(conf.getUserConf().getTitle())) {\n+\n+                user.setTitle(attrs.get(conf.getUserConf().getTitle()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getUserType() != null\n+                    && attrs.containsKey(conf.getUserConf().getUserType())) {\n+\n+                user.setUserType(attrs.get(conf.getUserConf().getUserType()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getPreferredLanguage() != null\n+                    && attrs.containsKey(conf.getUserConf().getPreferredLanguage())) {\n+\n+                user.setPreferredLanguage(attrs.get(conf.getUserConf().getPreferredLanguage()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getLocale() != null\n+                    && attrs.containsKey(conf.getUserConf().getLocale())) {\n+\n+                user.setLocale(attrs.get(conf.getUserConf().getLocale()).getValues().get(0));\n+            }\n+\n+            if (conf.getUserConf().getTimezone() != null\n+                    && attrs.containsKey(conf.getUserConf().getTimezone())) {\n+\n+                user.setTimezone(attrs.get(conf.getUserConf().getTimezone()).getValues().get(0));\n+            }\n+\n+            fill(attrs, conf.getUserConf().getEmails(), user.getEmails());\n+            fill(attrs, conf.getUserConf().getPhoneNumbers(), user.getPhoneNumbers());\n+            fill(attrs, conf.getUserConf().getIms(), user.getIms());\n+            fill(attrs, conf.getUserConf().getPhotos(), user.getPhotos());\n+            conf.getUserConf().getAddresses().forEach(addressConf -> {\n+                SCIMUserAddress address = new SCIMUserAddress();\n+\n+                if (addressConf.getFormatted() != null && attrs.containsKey(addressConf.getFormatted())) {\n+                    address.setFormatted(attrs.get(addressConf.getFormatted()).getValues().get(0));\n+                }\n+                if (addressConf.getStreetAddress() != null && attrs.containsKey(addressConf.getStreetAddress())) {\n+                    address.setStreetAddress(attrs.get(addressConf.getStreetAddress()).getValues().get(0));\n+                }\n+                if (addressConf.getLocality() != null && attrs.containsKey(addressConf.getLocality())) {\n+                    address.setLocality(attrs.get(addressConf.getLocality()).getValues().get(0));\n+                }\n+                if (addressConf.getRegion() != null && attrs.containsKey(addressConf.getRegion())) {\n+                    address.setRegion(attrs.get(addressConf.getRegion()).getValues().get(0));\n+                }\n+                if (addressConf.getCountry() != null && attrs.containsKey(addressConf.getCountry())) {\n+                    address.setCountry(attrs.get(addressConf.getCountry()).getValues().get(0));\n+                }\n+                if (addressConf.getType() != null) {\n+                    address.setType(addressConf.getType().name());\n+                }\n+                if (addressConf.isPrimary()) {\n+                    address.setPrimary(true);\n+                }\n+\n+                if (!address.isEmpty()) {\n+                    user.getAddresses().add(address);\n+                }\n+            });\n+\n+            conf.getUserConf().getX509Certificates().stream().\n+                    filter(certificate -> attrs.containsKey(certificate)).\n+                    forEachOrdered(certificate -> {\n+                        user.getX509Certificates().add(new Value(attrs.get(certificate).getValues().get(0)));\n+                    });\n+        }\n+\n+        if (conf.getEnterpriseUserConf() != null) {\n+            SCIMEnterpriseInfo enterpriseInfo = new SCIMEnterpriseInfo();\n+\n+            if (conf.getEnterpriseUserConf().getEmployeeNumber() != null\n+                    && attrs.containsKey(conf.getEnterpriseUserConf().getEmployeeNumber())) {\n+\n+                enterpriseInfo.setEmployeeNumber(\n+                        attrs.get(conf.getEnterpriseUserConf().getEmployeeNumber()).getValues().get(0));\n+            }\n+            if (conf.getEnterpriseUserConf().getCostCenter() != null\n+                    && attrs.containsKey(conf.getEnterpriseUserConf().getCostCenter())) {\n+\n+                enterpriseInfo.setCostCenter(\n+                        attrs.get(conf.getEnterpriseUserConf().getCostCenter()).getValues().get(0));\n+            }\n+            if (conf.getEnterpriseUserConf().getOrganization() != null\n+                    && attrs.containsKey(conf.getEnterpriseUserConf().getOrganization())) {\n+\n+                enterpriseInfo.setOrganization(\n+                        attrs.get(conf.getEnterpriseUserConf().getOrganization()).getValues().get(0));\n+            }\n+            if (conf.getEnterpriseUserConf().getDivision() != null\n+                    && attrs.containsKey(conf.getEnterpriseUserConf().getDivision())) {\n+\n+                enterpriseInfo.setDivision(\n+                        attrs.get(conf.getEnterpriseUserConf().getDivision()).getValues().get(0));\n+            }\n+            if (conf.getEnterpriseUserConf().getDepartment() != null\n+                    && attrs.containsKey(conf.getEnterpriseUserConf().getDepartment())) {\n+\n+                enterpriseInfo.setDepartment(\n+                        attrs.get(conf.getEnterpriseUserConf().getDepartment()).getValues().get(0));\n+            }\n+            if (conf.getEnterpriseUserConf().getManager() != null) {\n+                SCIMUserManager manager = new SCIMUserManager();\n+\n+                if (conf.getEnterpriseUserConf().getManager().getManager() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getManager().getManager())) {\n+\n+                    try {\n+                        UserTO userManager = userLogic.read(\n+                                attrs.get(conf.getEnterpriseUserConf().getManager().getManager()).getValues().get(0));\n+                        manager.setValue(userManager.getKey());\n+                        manager.setRef(\n+                                StringUtils.substringBefore(location, \"/Users\") + \"/Users/\" + userManager.getKey());\n+\n+                        if (conf.getEnterpriseUserConf().getManager().getDisplayName() != null) {\n+                            AttrTO displayName = userManager.getPlainAttr(\n+                                    conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                            if (displayName == null) {\n+                                displayName = userManager.getDerAttr(\n+                                        conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                            }\n+                            if (displayName == null) {\n+                                displayName = userManager.getVirAttr(\n+                                        conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                            }\n+                            if (displayName != null) {\n+                                manager.setDisplayName(displayName.getValues().get(0));\n+                            }\n+                        }\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not read attribute {}\",\n+                                conf.getEnterpriseUserConf().getManager().getManager(), e);\n+                    }\n+                }\n+\n+                if (!manager.isEmpty()) {\n+                    enterpriseInfo.setManager(manager);\n+                }\n+            }\n+\n+            if (!enterpriseInfo.isEmpty()) {\n+                user.setEnterpriseInfo(enterpriseInfo);\n+            }\n+        }\n+\n+        userTO.getMemberships().forEach(membership -> {\n+            user.getGroups().add(new Group(\n+                    membership.getGroupKey(),\n+                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                    membership.getGroupName(),\n+                    Function.direct));\n+        });\n+        userTO.getDynMemberships().forEach(membership -> {\n+            user.getGroups().add(new Group(\n+                    membership.getGroupKey(),\n+                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                    membership.getGroupName(),\n+                    Function.indirect));\n+        });\n+\n+        authDataAccessor.getAuthorities(userTO.getUsername()).forEach(authority -> {\n+            user.getEntitlements().add(new Value(authority.getAuthority() + \" on Realm(s) \" + authority.getRealms()));\n+        });\n+\n+        userTO.getRoles().forEach(role -> {\n+            user.getRoles().add(new Value(role));\n+        });\n+\n+        return user;\n+    }\n+\n+    public SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n+        SCIMGroup group = new SCIMGroup(\n+                groupTO.getKey(),\n+                Collections.singletonList(Resource.Group.schema()),\n+                new Meta(\n+                        Resource.Group,\n+                        groupTO.getCreationDate(),\n+                        groupTO.getLastChangeDate() == null\n+                        ? groupTO.getCreationDate() : groupTO.getLastChangeDate(),\n+                        groupTO.getETagValue(),\n+                        location),\n+                groupTO.getName());\n+\n+        MembershipCond membCond = new MembershipCond();\n+        membCond.setGroup(groupTO.getKey());\n+        SearchCond searchCond = SearchCond.getLeafCond(membCond);\n+\n+        int count = userLogic.\n+                search(searchCond, 1, 1, Collections.<OrderByClause>emptyList(), SyncopeConstants.ROOT_REALM, false).\n+                getLeft();\n+\n+        for (int page = 1; page <= (count / AnyDAO.DEFAULT_PAGE_SIZE) + 1; page++) {\n+            List<UserTO> users = userLogic.search(\n+                    searchCond,\n+                    page,\n+                    AnyDAO.DEFAULT_PAGE_SIZE,\n+                    Collections.<OrderByClause>emptyList(),\n+                    SyncopeConstants.ROOT_REALM,\n+                    false).\n+                    getRight();\n+            users.forEach(userTO -> {\n+                group.getMembers().add(new Member(\n+                        userTO.getKey(),\n+                        StringUtils.substringBefore(location, \"/Groups\") + \"/Users/\" + userTO.getKey(),\n+                        userTO.getUsername(),\n+                        Resource.User));\n+            });\n+        }\n+\n+        return group;\n+    }\n+}"},{"sha":"11085fbe17f412eb60454d679405595c5e0b8bc9","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMLogic.java","status":"renamed","additions":64,"deletions":9,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -18,14 +18,21 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import java.io.IOException;\n import java.lang.reflect.Method;\n import java.net.URI;\n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import javax.ws.rs.NotFoundException;\n import javax.ws.rs.core.UriBuilder;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n-import org.apache.syncope.core.logic.init.SCIMLoader;\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.core.logic.scim.SCIMConfManager;\n import org.apache.syncope.ext.scimv2.api.data.AuthenticationScheme;\n import org.apache.syncope.ext.scimv2.api.data.BulkConfigurationOption;\n import org.apache.syncope.ext.scimv2.api.data.ConfigurationOption;\n@@ -40,7 +47,9 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class RootLogic extends AbstractLogic<AbstractBaseBean> {\n+public class SCIMLogic extends AbstractLogic<AbstractBaseBean> {\n+\n+    private static final String SCHEMAS_JSON = \"schemas.json\";\n \n     private static final Object MONITOR = new Object();\n \n@@ -50,18 +59,52 @@ public class RootLogic extends AbstractLogic<AbstractBaseBean> {\n \n     private static ResourceType GROUP;\n \n+    private static String SCHEMAS;\n+\n+    private static final Map<String, String> SCHEMA_MAP = new HashMap<>();\n+\n     @Autowired\n-    private SCIMLoader loader;\n+    private SCIMConfManager confManager;\n+\n+    private void init() {\n+        try {\n+            ObjectMapper mapper = new ObjectMapper();\n+            JsonNode tree = mapper.readTree(getClass().getResourceAsStream(\"/\" + SCHEMAS_JSON));\n+            if (!tree.isArray()) {\n+                throw new IOException(\"JSON node is not a tree\");\n+            }\n+\n+            ArrayNode schemaArray = (ArrayNode) tree;\n+            SCHEMAS = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(tree);\n+\n+            for (JsonNode schema : schemaArray) {\n+                SCHEMA_MAP.put(schema.get(\"id\").asText(), mapper.writeValueAsString(schema));\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"Could not parse the default schema definitions\", e);\n+        }\n+    }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public ServiceProviderConfig serviceProviderConfig() {\n+    public ServiceProviderConfig serviceProviderConfig(final UriBuilder uriBuilder) {\n         synchronized (MONITOR) {\n+            if (SCHEMAS == null) {\n+                init();\n+            }\n+\n             if (SERVICE_PROVIDER_CONFIG == null) {\n+                SCIMConf conf = confManager.get();\n+\n                 SERVICE_PROVIDER_CONFIG = new ServiceProviderConfig(\n+                        new Meta(\n+                                Resource.ServiceProviderConfig,\n+                                conf.getCreationDate(),\n+                                conf.getLastChangeDate(),\n+                                conf.getETagValue(),\n+                                uriBuilder.build().toASCIIString()),\n                         new ConfigurationOption(true),\n-                        new BulkConfigurationOption(\n-                                true, loader.getBulkMaxOperations(), loader.getBulkMaxPayloadSize()),\n-                        new FilterConfigurationOption(true, loader.getFilterMaxResults()),\n+                        new BulkConfigurationOption(true, conf.getBulkMaxOperations(), conf.getBulkMaxPayloadSize()),\n+                        new FilterConfigurationOption(true, conf.getFilterMaxResults()),\n                         new ConfigurationOption(true),\n                         new ConfigurationOption(true),\n                         new ConfigurationOption(true));\n@@ -120,12 +163,24 @@ public ResourceType resourceType(final UriBuilder uriBuilder, final String type)\n \n     @PreAuthorize(\"isAuthenticated()\")\n     public String schemas() {\n-        return loader.getSchemas();\n+        synchronized (MONITOR) {\n+            if (SCHEMAS == null) {\n+                init();\n+            }\n+        }\n+\n+        return SCHEMAS;\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n     public String schema(final String schema) {\n-        String found = loader.getSchema(schema);\n+        synchronized (MONITOR) {\n+            if (SCHEMAS == null) {\n+                init();\n+            }\n+        }\n+\n+        String found = SCHEMA_MAP.get(schema);\n         if (found == null) {\n             throw new NotFoundException(\"Schema \" + schema);\n         }","previous_filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/RootLogic.java"},{"sha":"a5a17331ced825c4fefbc0556bdc10986321b54f","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/init/SCIMLoader.java","status":"modified","additions":3,"deletions":70,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -18,89 +18,22 @@\n  */\n package org.apache.syncope.core.logic.init;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ArrayNode;\n-import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Properties;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.springframework.stereotype.Component;\n \n @Component\n public class SCIMLoader implements SyncopeLoader {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SCIMLoader.class);\n-\n-    private static final String SCIMV2_LOGIC_PROPERTIES = \"scimv2-logic.properties\";\n-\n-    private static final String SCHEMAS = \"schemas.json\";\n-\n-    private int bulkMaxOperations = 0;\n-\n-    private int bulkMaxPayloadSize = 0;\n-\n-    private int filterMaxResults = 0;\n-\n-    private String schemas;\n-\n-    private final Map<String, String> schemaMap = new HashMap<>();\n-\n     @Override\n     public Integer getPriority() {\n         return 1000;\n     }\n \n     @Override\n     public void load() {\n-        Pair<Properties, String> init = PropertyUtils.read(getClass(), SCIMV2_LOGIC_PROPERTIES, \"conf.directory\");\n-        Properties props = init.getLeft();\n-\n-        bulkMaxOperations = Integer.valueOf(props.getProperty(\"bulk.maxOperations\"));\n-        bulkMaxPayloadSize = Integer.valueOf(props.getProperty(\"bulk.maxPayloadSize\"));\n-        filterMaxResults = Integer.valueOf(props.getProperty(\"filter.maxResults\"));\n-\n-        try {\n-            ObjectMapper mapper = new ObjectMapper();\n-            JsonNode tree = mapper.readTree(getClass().getResourceAsStream(\"/\" + SCHEMAS));\n-            if (!tree.isArray()) {\n-                throw new IOException(\"JSON node is not a tree\");\n-            }\n-\n-            ArrayNode schemaArray = (ArrayNode) tree;\n-            schemas = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(tree);\n-\n-            for (JsonNode schema : schemaArray) {\n-                schemaMap.put(schema.get(\"id\").asText(), mapper.writeValueAsString(schema));\n-            }\n-        } catch (IOException e) {\n-            LOG.error(\"Could not parse the default schema definitions\", e);\n-        }\n-    }\n-\n-    public int getBulkMaxOperations() {\n-        return bulkMaxOperations;\n-    }\n-\n-    public int getBulkMaxPayloadSize() {\n-        return bulkMaxPayloadSize;\n-    }\n-\n-    public int getFilterMaxResults() {\n-        return filterMaxResults;\n-    }\n-\n-    public String getSchemas() {\n-        return schemas;\n-    }\n-\n-    public String getSchema(final String schema) {\n-        return schemaMap.get(schema);\n+        EntitlementsHolder.getInstance().init(SCIMEntitlement.values());\n     }\n \n }"},{"sha":"ede870bf675336f89832365710c130c0f9cc34fd","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/scim/SCIMConfManager.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fscim%2FSCIMConfManager.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.scim;\n+\n+import java.util.Date;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.core.logic.ConfigurationLogic;\n+import org.apache.syncope.core.logic.SchemaLogic;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.identityconnectors.common.Base64;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SCIMConfManager {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(SCIMConfManager.class);\n+\n+    @Autowired\n+    private ConfigurationLogic configurationLogic;\n+\n+    @Autowired\n+    private SchemaLogic schemaLogic;\n+\n+    @PreAuthorize(\"hasRole('\" + SCIMEntitlement.SCIM_CONF_GET + \"')\")\n+    public SCIMConf get() {\n+        AttrTO confTO = null;\n+        try {\n+            confTO = configurationLogic.get(SCIMConf.KEY);\n+        } catch (Exception e) {\n+            LOG.error(\"{} not found, reverting to default\", SCIMConf.KEY);\n+        }\n+\n+        SCIMConf conf = null;\n+        if (confTO != null) {\n+            try {\n+                conf = POJOHelper.deserialize(new String(Base64.decode(confTO.getValues().get(0))), SCIMConf.class);\n+            } catch (Exception e) {\n+                LOG.error(\"Could not deserialize, reverting to default\", e);\n+            }\n+        }\n+        if (conf == null) {\n+            conf = new SCIMConf();\n+            set(conf);\n+        }\n+\n+        return conf;\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + SCIMEntitlement.SCIM_CONF_SET + \"')\")\n+    public void set(final SCIMConf conf) {\n+        try {\n+            schemaLogic.read(SchemaType.PLAIN, SCIMConf.KEY);\n+        } catch (NotFoundException e) {\n+            PlainSchemaTO scimConf = new PlainSchemaTO();\n+            scimConf.setKey(SCIMConf.KEY);\n+            scimConf.setType(AttrSchemaType.Binary);\n+            scimConf.setMimeType(MediaType.APPLICATION_JSON);\n+            schemaLogic.create(SchemaType.PLAIN, scimConf);\n+        }\n+        conf.setLastChangeDate(new Date());\n+\n+        configurationLogic.set(new AttrTO.Builder().\n+                schema(SCIMConf.KEY).value(Base64.encode(POJOHelper.serialize(conf).getBytes())).build());\n+    }\n+\n+}"},{"sha":"5a55f49ac9b4f9c4369d77020cd9bb1d39ece2c8","filename":"ext/scimv2/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -38,9 +38,13 @@ under the License.\n   </properties>\n   \n   <modules>\n+    <module>common-lib</module>\n+    <module>rest-api</module>\n+    <module>rest-cxf</module>\n     <module>scim-rest-api</module>\n     <module>scim-rest-cxf</module>\n     <module>logic</module>\n+    <module>client-console</module>\n   </modules>\n \n </project>"},{"sha":"70108464eeee43335a751e3bc2baa3a48b077df9","filename":"ext/scimv2/rest-api/pom.xml","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-api%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 REST API</name>\n+  <description>Apache Syncope Ext: SCIMv2 REST API</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-rest-api</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.common</groupId>\n+      <artifactId>syncope-common-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-common-lib</artifactId>      \n+      <version>${project.version}</version>\n+    </dependency>    \n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <!-- Generating javadoc JAR artifact for usage with CXF's WADL generator (for core) -->\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-javadoc-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>attach-javadocs</id>\n+            <goals>\n+              <goal>jar</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"fdc4da3add98d287a56c3aebd2349140ca4377ae","filename":"ext/scimv2/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SCIMConfService.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+\n+/**\n+ * REST operations for SCIM 2.0 configuration.\n+ */\n+@Path(\"scimv2conf\")\n+public interface SCIMConfService extends JAXRSService {\n+\n+    /**\n+     * Reads SCIM configuration, generates empty if missing.\n+     *\n+     * @return SCIM configuration\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    SCIMConf get();\n+\n+    /**\n+     * Sets SCIM configuration.\n+     *\n+     * @param conf SCIM configuration\n+     */\n+    @PUT\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    void set(@NotNull SCIMConf conf);\n+}"},{"sha":"403f430a291835282afdc1ed067981a5731fc1c5","filename":"ext/scimv2/rest-cxf/pom.xml","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-cxf%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 REST CXF</name>\n+  <description>Apache Syncope Ext: SCIMv2 REST CXF</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-rest-cxf</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-rest-api</artifactId>\n+      <version>${project.version}</version>\n+      <classifier>javadoc</classifier>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"223aca7e4cfa777bc32e297cb016a2538e3f0f62","filename":"ext/scimv2/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SCIMConfServiceImpl.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.rest.api.service.SCIMConfService;\n+import org.apache.syncope.core.logic.scim.SCIMConfManager;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class SCIMConfServiceImpl extends AbstractServiceImpl implements SCIMConfService {\n+\n+    @Autowired\n+    private SCIMConfManager manager;\n+\n+    @Override\n+    public SCIMConf get() {\n+        return manager.get();\n+    }\n+\n+    @Override\n+    public void set(final SCIMConf conf) {\n+        manager.set(conf);\n+    }\n+\n+}"},{"sha":"a00c79331b044deb356a04cf54a4e1a84a8021ef","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Reference.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -20,18 +20,25 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n \n-abstract class Reference extends Display {\n+abstract class Reference extends Value {\n \n     private static final long serialVersionUID = -6190164044699376089L;\n \n+    private final String display;\n+\n     @JsonProperty(\"$ref\")\n     private final String ref;\n \n     Reference(final String value, final String display, final String ref) {\n-        super(value, display);\n+        super(value);\n+        this.display = display;\n         this.ref = ref;\n     }\n \n+    public String getDisplay() {\n+        return display;\n+    }\n+\n     public String getRef() {\n         return ref;\n     }"},{"sha":"ca191be88cfa537b92ff1336bb30beeb580f3931","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMBean.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -21,7 +21,7 @@\n import com.fasterxml.jackson.annotation.JsonInclude;\n import java.io.Serializable;\n \n-@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n abstract class SCIMBean implements Serializable {\n \n     private static final long serialVersionUID = 7604407251038024743L;"},{"sha":"94c43203680e68b445e741fe9bf47954f1dcd73a","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMComplexValue.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMComplexValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMComplexValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMComplexValue.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+public class SCIMComplexValue extends SCIMBean {\n+\n+    private static final long serialVersionUID = -3887211468327809832L;\n+\n+    private String value;\n+\n+    private String display;\n+\n+    private String type;\n+\n+    private boolean primary;\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(final String value) {\n+        this.value = value;\n+    }\n+\n+    public String getDisplay() {\n+        return display;\n+    }\n+\n+    public void setDisplay(final String display) {\n+        this.display = display;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(final String type) {\n+        this.type = type;\n+    }\n+\n+    public boolean isPrimary() {\n+        return primary;\n+    }\n+\n+    public void setPrimary(final boolean primary) {\n+        this.primary = primary;\n+    }\n+\n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return value == null && display == null && type == null;\n+    }\n+}"},{"sha":"d419c09339df0bed8d28c93220e5fd9ef02b6a1d","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMEnterpriseInfo.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMEnterpriseInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMEnterpriseInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMEnterpriseInfo.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+public class SCIMEnterpriseInfo extends SCIMBean {\n+\n+    private static final long serialVersionUID = 5745005071861557082L;\n+\n+    private String employeeNumber;\n+\n+    private String costCenter;\n+\n+    private String organization;\n+\n+    private String division;\n+\n+    private String department;\n+\n+    private SCIMUserManager manager;\n+\n+    public String getEmployeeNumber() {\n+        return employeeNumber;\n+    }\n+\n+    public void setEmployeeNumber(final String employeeNumber) {\n+        this.employeeNumber = employeeNumber;\n+    }\n+\n+    public String getCostCenter() {\n+        return costCenter;\n+    }\n+\n+    public void setCostCenter(final String costCenter) {\n+        this.costCenter = costCenter;\n+    }\n+\n+    public String getOrganization() {\n+        return organization;\n+    }\n+\n+    public void setOrganization(final String organization) {\n+        this.organization = organization;\n+    }\n+\n+    public String getDivision() {\n+        return division;\n+    }\n+\n+    public void setDivision(final String division) {\n+        this.division = division;\n+    }\n+\n+    public String getDepartment() {\n+        return department;\n+    }\n+\n+    public void setDepartment(final String department) {\n+        this.department = department;\n+    }\n+\n+    public SCIMUserManager getManager() {\n+        return manager;\n+    }\n+\n+    public void setManager(final SCIMUserManager manager) {\n+        this.manager = manager;\n+    }\n+\n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return employeeNumber == null\n+                && costCenter == null\n+                && organization == null\n+                && division == null\n+                && department == null\n+                && manager == null;\n+    }\n+}"},{"sha":"775b1ad7217585827d2cbd5b4611335b23403629","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMUser.java","status":"modified","additions":162,"deletions":3,"changes":165,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -24,18 +24,61 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-@JsonPropertyOrder({ \"schemas\", \"id\", \"externalId\", \"userName\", \"active\", \"groups\", \"roles\", \"meta\" })\n+@JsonPropertyOrder({ \"schemas\", \"id\", \"externalId\",\n+    \"userName\", \"password\", \"active\",\n+    \"name\", \"displayName\", \"nickName\", \"profileUrl\", \"title\", \"userType\", \"preferredLanguage\", \"locale\", \"timezone\",\n+    \"emails\", \"phoneNumbers\", \"ims\", \"photos\", \"addresses\", \"x509Certificates\",\n+    \"groups\", \"entitlements\", \"roles\",\n+    \"enterpriseInfo\",\n+    \"meta\" })\n public class SCIMUser extends SCIMResource {\n \n     private static final long serialVersionUID = -2935466041674390279L;\n \n     private final String userName;\n \n+    private String password;\n+\n     private final boolean active;\n \n+    private SCIMUserName name;\n+\n+    private String displayName;\n+\n+    private String nickName;\n+\n+    private String profileUrl;\n+\n+    private String title;\n+\n+    private String userType;\n+\n+    private String preferredLanguage;\n+\n+    private String locale;\n+\n+    private String timezone;\n+\n+    private final List<SCIMComplexValue> emails = new ArrayList<>();\n+\n+    private final List<SCIMComplexValue> phoneNumbers = new ArrayList<>();\n+\n+    private final List<SCIMComplexValue> ims = new ArrayList<>();\n+\n+    private final List<SCIMComplexValue> photos = new ArrayList<>();\n+\n+    private final List<SCIMUserAddress> addresses = new ArrayList<>();\n+\n+    private final List<Value> x509Certificates = new ArrayList<>();\n+\n     private final List<Group> groups = new ArrayList<>();\n \n-    private final List<Display> roles = new ArrayList<>();\n+    private final List<Value> entitlements = new ArrayList<>();\n+\n+    private final List<Value> roles = new ArrayList<>();\n+\n+    @JsonProperty(\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\")\n+    private SCIMEnterpriseInfo enterpriseInfo;\n \n     @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n     public SCIMUser(\n@@ -54,16 +97,132 @@ public String getUserName() {\n         return userName;\n     }\n \n+    public void setPassword(final String password) {\n+        this.password = password;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n     public boolean isActive() {\n         return active;\n     }\n \n+    public SCIMUserName getName() {\n+        return name;\n+    }\n+\n+    public void setName(final SCIMUserName name) {\n+        this.name = name;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(final String displayName) {\n+        this.displayName = displayName;\n+    }\n+\n+    public String getNickName() {\n+        return nickName;\n+    }\n+\n+    public void setNickName(final String nickName) {\n+        this.nickName = nickName;\n+    }\n+\n+    public String getProfileUrl() {\n+        return profileUrl;\n+    }\n+\n+    public void setProfileUrl(final String profileUrl) {\n+        this.profileUrl = profileUrl;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(final String title) {\n+        this.title = title;\n+    }\n+\n+    public String getUserType() {\n+        return userType;\n+    }\n+\n+    public void setUserType(final String userType) {\n+        this.userType = userType;\n+    }\n+\n+    public String getPreferredLanguage() {\n+        return preferredLanguage;\n+    }\n+\n+    public void setPreferredLanguage(final String preferredLanguage) {\n+        this.preferredLanguage = preferredLanguage;\n+    }\n+\n+    public String getLocale() {\n+        return locale;\n+    }\n+\n+    public void setLocale(final String locale) {\n+        this.locale = locale;\n+    }\n+\n+    public String getTimezone() {\n+        return timezone;\n+    }\n+\n+    public void setTimezone(final String timezone) {\n+        this.timezone = timezone;\n+    }\n+\n+    public List<SCIMComplexValue> getEmails() {\n+        return emails;\n+    }\n+\n+    public List<SCIMComplexValue> getPhoneNumbers() {\n+        return phoneNumbers;\n+    }\n+\n+    public List<SCIMComplexValue> getIms() {\n+        return ims;\n+    }\n+\n+    public List<SCIMComplexValue> getPhotos() {\n+        return photos;\n+    }\n+\n+    public List<SCIMUserAddress> getAddresses() {\n+        return addresses;\n+    }\n+\n+    public List<Value> getX509Certificates() {\n+        return x509Certificates;\n+    }\n+\n     public List<Group> getGroups() {\n         return groups;\n     }\n \n-    public List<Display> getRoles() {\n+    public List<Value> getEntitlements() {\n+        return entitlements;\n+    }\n+\n+    public List<Value> getRoles() {\n         return roles;\n     }\n \n+    public SCIMEnterpriseInfo getEnterpriseInfo() {\n+        return enterpriseInfo;\n+    }\n+\n+    public void setEnterpriseInfo(final SCIMEnterpriseInfo enterpriseInfo) {\n+        this.enterpriseInfo = enterpriseInfo;\n+    }\n+\n }"},{"sha":"3c1f0d935fdcd894c55b3f852e5d48f2bd4e0e65","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMUserAddress.java","status":"added","additions":117,"deletions":0,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserAddress.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserAddress.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserAddress.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+public class SCIMUserAddress extends SCIMBean {\n+\n+    private static final long serialVersionUID = -7936040729842689890L;\n+\n+    private String formatted;\n+\n+    private String streetAddress;\n+\n+    private String locality;\n+\n+    private String region;\n+\n+    private String postalCode;\n+\n+    private String country;\n+\n+    private String type;\n+\n+    private boolean primary;\n+\n+    public String getFormatted() {\n+        return formatted;\n+    }\n+\n+    public void setFormatted(final String formatted) {\n+        this.formatted = formatted;\n+    }\n+\n+    public String getStreetAddress() {\n+        return streetAddress;\n+    }\n+\n+    public void setStreetAddress(final String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getLocality() {\n+        return locality;\n+    }\n+\n+    public void setLocality(final String locality) {\n+        this.locality = locality;\n+    }\n+\n+    public String getRegion() {\n+        return region;\n+    }\n+\n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public String getPostalCode() {\n+        return postalCode;\n+    }\n+\n+    public void setPostalCode(final String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getCountry() {\n+        return country;\n+    }\n+\n+    public void setCountry(final String country) {\n+        this.country = country;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(final String type) {\n+        this.type = type;\n+    }\n+\n+    public boolean isPrimary() {\n+        return primary;\n+    }\n+\n+    public void setPrimary(final boolean primary) {\n+        this.primary = primary;\n+    }\n+\n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return formatted == null\n+                && streetAddress == null\n+                && locality == null\n+                && region == null\n+                && postalCode == null\n+                && country == null\n+                && type == null;\n+    }\n+}"},{"sha":"c1294e9af8b816954eb0e14184e7d448c4930763","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMUserManager.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserManager.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class SCIMUserManager extends SCIMBean {\n+\n+    private static final long serialVersionUID = -4193118676994783252L;\n+\n+    private String value;\n+\n+    @JsonProperty(\"$ref\")\n+    private String ref;\n+\n+    private String displayName;\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(final String value) {\n+        this.value = value;\n+    }\n+\n+    public String getRef() {\n+        return ref;\n+    }\n+\n+    public void setRef(final String ref) {\n+        this.ref = ref;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(final String displayName) {\n+        this.displayName = displayName;\n+    }\n+\n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return value == null && ref == null && displayName == null;\n+    }\n+}"},{"sha":"0293e95a6accfd2180c4ddeeabb1f1d447a6d581","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMUserName.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUserName.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+public class SCIMUserName extends SCIMBean {\n+\n+    private static final long serialVersionUID = 5492302691746462480L;\n+\n+    private String formatted;\n+\n+    private String familyName;\n+\n+    private String givenName;\n+\n+    private String middleName;\n+\n+    private String honorificPrefix;\n+\n+    private String honorificSuffix;\n+\n+    public String getFormatted() {\n+        return formatted;\n+    }\n+\n+    public void setFormatted(final String formatted) {\n+        this.formatted = formatted;\n+    }\n+\n+    public String getFamilyName() {\n+        return familyName;\n+    }\n+\n+    public void setFamilyName(final String familyName) {\n+        this.familyName = familyName;\n+    }\n+\n+    public String getGivenName() {\n+        return givenName;\n+    }\n+\n+    public void setGivenName(final String givenName) {\n+        this.givenName = givenName;\n+    }\n+\n+    public String getMiddleName() {\n+        return middleName;\n+    }\n+\n+    public void setMiddleName(final String middleName) {\n+        this.middleName = middleName;\n+    }\n+\n+    public String getHonorificPrefix() {\n+        return honorificPrefix;\n+    }\n+\n+    public void setHonorificPrefix(final String honorificPrefix) {\n+        this.honorificPrefix = honorificPrefix;\n+    }\n+\n+    public String getHonorificSuffix() {\n+        return honorificSuffix;\n+    }\n+\n+    public void setHonorificSuffix(final String honorificSuffix) {\n+        this.honorificSuffix = honorificSuffix;\n+    }\n+\n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return formatted == null\n+                && familyName == null\n+                && givenName == null\n+                && middleName == null\n+                && honorificPrefix == null\n+                && honorificSuffix == null;\n+    }\n+}"},{"sha":"75eec0aac93736bec0b54dfabbcfdc53ace4a150","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ServiceProviderConfig.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -20,17 +20,22 @@\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n \n+@JsonPropertyOrder(\n+        { \"schemas\", \"patch\", \"bulk\", \"filter\", \"changePassword\", \"sort\", \"etag\", \"authenticationSchemes\", \"meta\" })\n public class ServiceProviderConfig extends SCIMBean {\n \n     private static final long serialVersionUID = 1027738509789460252L;\n \n     private final List<String> schemas = Arrays.asList(Resource.ServiceProviderConfig.schema());\n \n+    private final Meta meta;\n+\n     private final ConfigurationOption patch;\n \n     private final BulkConfigurationOption bulk;\n@@ -47,13 +52,15 @@ public class ServiceProviderConfig extends SCIMBean {\n \n     @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n     public ServiceProviderConfig(\n+            @JsonProperty(\"meta\") final Meta meta,\n             @JsonProperty(\"patch\") final ConfigurationOption patch,\n             @JsonProperty(\"bulk\") final BulkConfigurationOption bulk,\n             @JsonProperty(\"filter\") final FilterConfigurationOption filter,\n             @JsonProperty(\"changePassword\") final ConfigurationOption changePassword,\n             @JsonProperty(\"sort\") final ConfigurationOption sort,\n             @JsonProperty(\"etag\") final ConfigurationOption etag) {\n \n+        this.meta = meta;\n         this.patch = patch;\n         this.bulk = bulk;\n         this.filter = filter;\n@@ -66,6 +73,10 @@ public List<String> getSchemas() {\n         return schemas;\n     }\n \n+    public Meta getMeta() {\n+        return meta;\n+    }\n+\n     public ConfigurationOption getPatch() {\n         return patch;\n     }"},{"sha":"543f0003b2ef2c7cb14d765ce14293d79d613ad9","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Value.java","status":"renamed","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FValue.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -21,26 +21,19 @@\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n-public class Display extends SCIMBean {\n+public class Value extends SCIMBean {\n \n     private static final long serialVersionUID = 5337055958765320091L;\n \n     private final String value;\n \n-    private final String display;\n-\n     @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n-    public Display(@JsonProperty(\"value\") final String value, @JsonProperty(\"display\") final String display) {\n+    public Value(@JsonProperty(\"value\") final String value) {\n         this.value = value;\n-        this.display = display;\n     }\n \n     public String getValue() {\n         return value;\n     }\n \n-    public String getDisplay() {\n-        return display;\n-    }\n-\n }","previous_filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Display.java"},{"sha":"196572ef4c73fd2407bd76e38d9b498ccb172356","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/GroupService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n \n @Path(\"v2/Groups\")\n-public interface GroupService extends SCIMService<SCIMGroup> {\n+public interface GroupService extends SearchService<SCIMGroup> {\n \n     @POST\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })"},{"sha":"606474745dd39edbe60daa67b54c6588f082c430","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SCIMService.java","status":"modified","additions":29,"deletions":11,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -20,22 +20,40 @@\n \n import java.util.List;\n import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n-import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n-import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n-import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n \n-public interface SCIMService<R extends SCIMResource> {\n+@Path(\"v2\")\n+public interface SCIMService extends SearchService<SCIMResource> {\n \n     @GET\n+    @Path(\"ServiceProviderConfig\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    ListResponse<R> search(\n-            @QueryParam(\"startIndex\") Integer startIndex,\n-            @QueryParam(\"count\") Integer count,\n-            @QueryParam(\"filter\") String filter,\n-            @QueryParam(\"sortBy\") String sortBy,\n-            @QueryParam(\"sortOrder\") SortOrder sortOrder,\n-            @QueryParam(\"attributes\") List<String> attributes);\n+    ServiceProviderConfig serviceProviderConfig();\n+\n+    @GET\n+    @Path(\"ResourceTypes\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    List<ResourceType> resourceTypes();\n+\n+    @GET\n+    @Path(\"ResourceTypes/{type}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    ResourceType resourceType(@PathParam(\"type\") String type);\n+\n+    @GET\n+    @Path(\"Schemas\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response schemas();\n+\n+    @GET\n+    @Path(\"Schemas/{schema}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response schema(@PathParam(\"schema\") String schema);\n }"},{"sha":"fcd4789418274a510d65fe1b9af8973c3298381f","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SearchService.java","status":"renamed","additions":11,"deletions":29,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSearchService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -20,40 +20,22 @@\n \n import java.util.List;\n import javax.ws.rs.GET;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n-import javax.ws.rs.core.Response;\n+import javax.ws.rs.QueryParam;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n-import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n-import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n-@Path(\"v2\")\n-public interface RootService extends SCIMService<SCIMResource> {\n+public interface SearchService<R extends SCIMResource> {\n \n     @GET\n-    @Path(\"ServiceProviderConfig\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    ServiceProviderConfig serviceProviderConfig();\n-\n-    @GET\n-    @Path(\"ResourceTypes\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    List<ResourceType> resourceTypes();\n-\n-    @GET\n-    @Path(\"ResourceTypes/{type}\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    ResourceType resourceType(@PathParam(\"type\") String type);\n-\n-    @GET\n-    @Path(\"Schemas\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    Response schemas();\n-\n-    @GET\n-    @Path(\"Schemas/{schema}\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    Response schema(@PathParam(\"schema\") String schema);\n+    ListResponse<R> search(\n+            @QueryParam(\"startIndex\") Integer startIndex,\n+            @QueryParam(\"count\") Integer count,\n+            @QueryParam(\"filter\") String filter,\n+            @QueryParam(\"sortBy\") String sortBy,\n+            @QueryParam(\"sortOrder\") SortOrder sortOrder,\n+            @QueryParam(\"attributes\") List<String> attributes);\n }","previous_filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/RootService.java"},{"sha":"1135650e4a5a876ce80f0e90eb0d8f491e76b392","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/UserService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n \n @Path(\"v2/Users\")\n-public interface UserService extends SCIMService<SCIMUser> {\n+public interface UserService extends SearchService<SCIMUser> {\n \n     @POST\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })"},{"sha":"d2c76a898dbb9af2dc5ee40f5500f280097bb17f","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/AddETagFilter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -46,7 +46,7 @@ public void filter(final ContainerRequestContext reqCtx, final ContainerResponse\n                 if (lastModified != null) {\n                     String etagValue = String.valueOf(lastModified.getTime());\n                     if (StringUtils.isNotBlank(etagValue)) {\n-                        resCtx.getHeaders().add(HttpHeaders.ETAG, new EntityTag(etagValue).toString());\n+                        resCtx.getHeaders().add(HttpHeaders.ETAG, new EntityTag(etagValue, true).toString());\n                     }\n                 }\n             }"},{"sha":"6f61e4c4a98b728d893dbac9352d0dad0bf2a282","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractService.java","status":"renamed","additions":17,"deletions":92,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -31,31 +31,23 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.logic.AbstractAnyLogic;\n import org.apache.syncope.core.logic.GroupLogic;\n+import org.apache.syncope.core.logic.SCIMDataBinder;\n import org.apache.syncope.core.logic.UserLogic;\n import org.apache.syncope.core.logic.scim.SearchCondConverter;\n import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.ext.scimv2.api.data.Display;\n-import org.apache.syncope.ext.scimv2.api.data.Group;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n-import org.apache.syncope.ext.scimv2.api.data.Member;\n-import org.apache.syncope.ext.scimv2.api.data.Meta;\n-import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n-import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n-import org.apache.syncope.ext.scimv2.api.service.SCIMService;\n-import org.apache.syncope.ext.scimv2.api.type.Function;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.apache.syncope.ext.scimv2.api.service.SearchService;\n \n-abstract class AbstractSCIMService<R extends SCIMResource> implements SCIMService<R> {\n+abstract class AbstractService<R extends SCIMResource> implements SearchService<R> {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(AbstractSCIMService.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractService.class);\n \n     @Context\n     protected UriInfo uriInfo;\n@@ -67,6 +59,8 @@\n \n     private GroupLogic groupLogic;\n \n+    private SCIMDataBinder binder;\n+\n     protected UserLogic userLogic() {\n         synchronized (this) {\n             if (userLogic == null) {\n@@ -85,6 +79,15 @@ protected GroupLogic groupLogic() {\n         return groupLogic;\n     }\n \n+    protected SCIMDataBinder binder() {\n+        synchronized (this) {\n+            if (binder == null) {\n+                binder = ApplicationContextProvider.getApplicationContext().getBean(SCIMDataBinder.class);\n+            }\n+        }\n+        return binder;\n+    }\n+\n     protected AbstractAnyLogic<?, ?> anyLogic(final Resource type) {\n         switch (type) {\n             case User:\n@@ -98,84 +101,6 @@ protected GroupLogic groupLogic() {\n         }\n     }\n \n-    protected SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n-        SCIMUser user = new SCIMUser(\n-                userTO.getKey(),\n-                Collections.singletonList(Resource.User.schema()),\n-                new Meta(\n-                        Resource.User,\n-                        userTO.getCreationDate(),\n-                        userTO.getLastChangeDate() == null\n-                        ? userTO.getCreationDate() : userTO.getLastChangeDate(),\n-                        userTO.getETagValue(),\n-                        location),\n-                userTO.getUsername(),\n-                !userTO.isSuspended());\n-\n-        userTO.getMemberships().forEach(membership -> {\n-            user.getGroups().add(new Group(\n-                    membership.getGroupKey(),\n-                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n-                    membership.getGroupName(),\n-                    Function.direct));\n-        });\n-        userTO.getDynMemberships().forEach(membership -> {\n-            user.getGroups().add(new Group(\n-                    membership.getGroupKey(),\n-                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n-                    membership.getGroupName(),\n-                    Function.indirect));\n-        });\n-\n-        userTO.getRoles().forEach(role -> {\n-            user.getRoles().add(new Display(role, null));\n-        });\n-\n-        return user;\n-    }\n-\n-    protected SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n-        SCIMGroup group = new SCIMGroup(\n-                groupTO.getKey(),\n-                Collections.singletonList(Resource.Group.schema()),\n-                new Meta(\n-                        Resource.Group,\n-                        groupTO.getCreationDate(),\n-                        groupTO.getLastChangeDate() == null\n-                        ? groupTO.getCreationDate() : groupTO.getLastChangeDate(),\n-                        groupTO.getETagValue(),\n-                        location),\n-                groupTO.getName());\n-\n-        MembershipCond membCond = new MembershipCond();\n-        membCond.setGroup(groupTO.getKey());\n-        SearchCond searchCond = SearchCond.getLeafCond(membCond);\n-\n-        int count = userLogic().\n-                search(searchCond, 1, 1, Collections.<OrderByClause>emptyList(), SyncopeConstants.ROOT_REALM, false).\n-                getLeft();\n-\n-        for (int page = 1; page <= (count / AnyDAO.DEFAULT_PAGE_SIZE) + 1; page++) {\n-            List<UserTO> users = userLogic().search(\n-                    searchCond,\n-                    page,\n-                    AnyDAO.DEFAULT_PAGE_SIZE,\n-                    Collections.<OrderByClause>emptyList(),\n-                    SyncopeConstants.ROOT_REALM,\n-                    false).\n-                    getRight();\n-            users.forEach(userTO -> {\n-                group.getMembers().add(new Member(\n-                        userTO.getKey(),\n-                        StringUtils.substringBefore(location, \"/Groups\") + \"/Users/\" + userTO.getKey(),\n-                        userTO.getUsername(),\n-                        Resource.User));\n-            });\n-        }\n-\n-        return group;\n-    }\n-\n     @SuppressWarnings(\"unchecked\")\n     protected ListResponse<R> doSearch(\n             final Resource type,\n@@ -204,11 +129,11 @@ protected ListResponse<R> doSearch(\n         result.getRight().forEach(anyTO -> {\n             SCIMResource resource = null;\n             if (anyTO instanceof UserTO) {\n-                resource = toSCIMUser(\n+                resource = binder().toSCIMUser(\n                         (UserTO) anyTO,\n                         uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n             } else if (anyTO instanceof GroupTO) {\n-                resource = toSCIMGroup(\n+                resource = binder().toSCIMGroup(\n                         (GroupTO) anyTO,\n                         uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n             }","previous_filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractSCIMService.java"},{"sha":"d03b57c6b87e0392f2ab5449c3c8c16847a7df4d","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/GroupServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n-public class GroupServiceImpl extends AbstractSCIMService<SCIMGroup> implements GroupService {\n+public class GroupServiceImpl extends AbstractService<SCIMGroup> implements GroupService {\n \n     @Override\n     public Response create() {\n@@ -38,7 +38,7 @@ public Response create() {\n \n     @Override\n     public SCIMGroup read(final String id) {\n-        return toSCIMGroup(groupLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+        return binder().toSCIMGroup(groupLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n     }\n \n     @Override"},{"sha":"65e4ad1992d403e3ea66b6678e77313177b0fdec","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/SCIMServiceImpl.java","status":"renamed","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMServiceImpl.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -20,49 +20,49 @@\n \n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.core.logic.RootLogic;\n+import org.apache.syncope.core.logic.SCIMLogic;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n-import org.apache.syncope.ext.scimv2.api.service.RootService;\n+import org.apache.syncope.ext.scimv2.api.service.SCIMService;\n \n-public class RootServiceImpl extends AbstractSCIMService<SCIMResource> implements RootService {\n+public class SCIMServiceImpl extends AbstractService<SCIMResource> implements SCIMService {\n \n-    private RootLogic rootLogic;\n+    private SCIMLogic scimLogic;\n \n-    protected RootLogic rootLogic() {\n+    private SCIMLogic scimLogic() {\n         synchronized (this) {\n-            if (rootLogic == null) {\n-                rootLogic = ApplicationContextProvider.getApplicationContext().getBean(RootLogic.class);\n+            if (scimLogic == null) {\n+                scimLogic = ApplicationContextProvider.getApplicationContext().getBean(SCIMLogic.class);\n             }\n         }\n-        return rootLogic;\n+        return scimLogic;\n     }\n \n     @Override\n     public ServiceProviderConfig serviceProviderConfig() {\n-        return rootLogic().serviceProviderConfig();\n+        return scimLogic().serviceProviderConfig(uriInfo.getAbsolutePathBuilder());\n     }\n \n     @Override\n     public List<ResourceType> resourceTypes() {\n-        return rootLogic().resourceTypes(uriInfo.getAbsolutePathBuilder());\n+        return scimLogic().resourceTypes(uriInfo.getAbsolutePathBuilder());\n     }\n \n     @Override\n     public ResourceType resourceType(final String type) {\n-        return rootLogic().resourceType(uriInfo.getAbsolutePathBuilder(), type);\n+        return scimLogic().resourceType(uriInfo.getAbsolutePathBuilder(), type);\n     }\n \n     @Override\n     public Response schemas() {\n-        return Response.ok(rootLogic().schemas()).build();\n+        return Response.ok(scimLogic().schemas()).build();\n     }\n \n     @Override\n     public Response schema(final String schema) {\n-        return Response.ok(rootLogic().schema(schema)).build();\n+        return Response.ok(scimLogic().schema(schema)).build();\n     }\n \n }","previous_filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/RootServiceImpl.java"},{"sha":"67b9b47b14dc19c8b5e4f143a0bf09da45bc1bb8","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n-public class UserServiceImpl extends AbstractSCIMService<SCIMUser> implements UserService {\n+public class UserServiceImpl extends AbstractService<SCIMUser> implements UserService {\n \n     @Override\n     public Response create() {\n@@ -38,7 +38,7 @@ public Response create() {\n \n     @Override\n     public SCIMUser read(final String id) {\n-        return toSCIMUser(userLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+        return binder().toSCIMUser(userLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n     }\n \n     @Override"},{"sha":"253b0433d61f235ca1329004a3c2b2613d971d8a","filename":"fit/console-reference/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -68,6 +68,12 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>"},{"sha":"cfd69c9510006df74c270209e7fdd174bc5e522f","filename":"fit/console-reference/src/test/resources/rebel.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -32,6 +32,8 @@ under the License.\n     </dir>\n     <dir name=\"${basedir}/../../ext/saml2sp/client-console/target/classes\">\n     </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/client-console/target/classes\">\n+    </dir>\n   </classpath>\n \n   <web>\n@@ -51,6 +53,10 @@ under the License.\n       <dir name=\"${basedir}/../../ext/saml2sp/client-console/target/classes\">\n       </dir>\n     </link>\n+    <link target=\"/\">\n+      <dir name=\"${basedir}/../../ext/scimv2/client-console/target/classes\">\n+      </dir>\n+    </link>\n   </web>\n \n </application>"},{"sha":"5284b9ea692b2dc08377e11c741a1416c7788585","filename":"fit/core-reference/pom.xml","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -165,7 +165,25 @@ under the License.\n       <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n-    </dependency>  \n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-client-console</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-test</artifactId>\n@@ -1056,6 +1074,11 @@ under the License.\n           <version>${project.version}</version>\n         </dependency>\n         \n+        <dependency>\n+          <groupId>org.apache.syncope.ext.scimv2</groupId>\n+          <artifactId>syncope-ext-scimv2-rest-cxf</artifactId>\n+          <version>${project.version}</version>\n+        </dependency>\n         <dependency>\n           <groupId>org.apache.syncope.ext.scimv2</groupId>\n           <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>"},{"sha":"c31be40c539f7c02f930091b21d725892aff75c8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -90,6 +90,7 @@\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.common.rest.api.service.SAML2IdPService;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n+import org.apache.syncope.common.rest.api.service.SCIMConfService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n@@ -243,6 +244,8 @@ public abstract class AbstractITCase {\n \n     protected static SAML2IdPService saml2IdPService;\n \n+    protected static SCIMConfService scimConfService;\n+\n     @BeforeAll\n     public static void securitySetup() {\n         InputStream propStream = null;\n@@ -311,6 +314,7 @@ public static void restSetup() {\n         camelRouteService = adminClient.getService(CamelRouteService.class);\n         saml2SpService = adminClient.getService(SAML2SPService.class);\n         saml2IdPService = adminClient.getService(SAML2IdPService.class);\n+        scimConfService = adminClient.getService(SCIMConfService.class);\n     }\n \n     protected static String getUUIDString() {"},{"sha":"cc582b5b544dd5fcd5e24e6f038836462b3995ed","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -21,6 +21,7 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n@@ -37,6 +38,8 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.lib.scim.SCIMUserConf;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n@@ -153,6 +156,34 @@ public void read() throws IOException {\n         assertFalse(user.getRoles().isEmpty());\n     }\n \n+    @Test\n+    public void conf() {\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n+\n+        SCIMConf conf = scimConfService.get();\n+        assertNotNull(conf);\n+\n+        SCIMUserConf userConf = conf.getUserConf();\n+        if (userConf == null) {\n+            userConf = new SCIMUserConf();\n+            conf.setUserConf(userConf);\n+        }\n+        assertNull(userConf.getDisplayName());\n+        userConf.setDisplayName(\"cn\");\n+\n+        scimConfService.set(conf);\n+\n+        Response response = webClient().path(\"Users\").path(\"1417acbe-cbf6-4277-9372-e75e04f97000\").get();\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        SCIMUser user = response.readEntity(SCIMUser.class);\n+        assertNotNull(user);\n+        assertEquals(\"Rossini, Gioacchino\", user.getDisplayName());\n+    }\n+\n     @Test\n     public void list() throws IOException {\n         assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));"},{"sha":"da4b4b16fb9f973dc80369bbd035d52aee22ca5e","filename":"fit/core-reference/src/test/resources/rebel.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cd228925e538bd7743a22ac923bdee4b30a32e6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=7cd228925e538bd7743a22ac923bdee4b30a32e6","patch":"@@ -91,6 +91,12 @@ under the License.\n     </dir>\n     <dir name=\"${basedir}/../../ext/elasticsearch/persistence-jpa/target/classes\">\n     </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/common-lib/target/classes\">\n+    </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/rest-api/target/classes\">\n+    </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/rest-cxf/target/classes\">\n+    </dir>\n     <dir name=\"${basedir}/../../ext/scimv2/scim-rest-api/target/classes\">\n     </dir>\n     <dir name=\"${basedir}/../../ext/scimv2/scim-rest-cxf/target/classes\">"}]}