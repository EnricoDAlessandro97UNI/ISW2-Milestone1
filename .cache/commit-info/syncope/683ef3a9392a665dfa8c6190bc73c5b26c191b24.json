{"sha":"683ef3a9392a665dfa8c6190bc73c5b26c191b24","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY4M2VmM2E5MzkyYTY2NWRmYThjNjE5MGJjNzNjNWIyNmMxOTFiMjQ=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-02T11:22:34Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-02T11:22:34Z"},"message":"sonar: checking type before casting\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332996 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ab797506579f74e1cbbf3c090641c89cb65e78c6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ab797506579f74e1cbbf3c090641c89cb65e78c6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/683ef3a9392a665dfa8c6190bc73c5b26c191b24","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/683ef3a9392a665dfa8c6190bc73c5b26c191b24","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/683ef3a9392a665dfa8c6190bc73c5b26c191b24","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/683ef3a9392a665dfa8c6190bc73c5b26c191b24/comments","author":null,"committer":null,"parents":[{"sha":"ef375c53b887dfa6855e721ea959a6897d29e326","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef375c53b887dfa6855e721ea959a6897d29e326","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef375c53b887dfa6855e721ea959a6897d29e326"}],"stats":{"total":42,"additions":21,"deletions":21},"files":[{"sha":"745afd8001c4e1beb16c1cc963af8404918b1a27","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/683ef3a9392a665dfa8c6190bc73c5b26c191b24/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/683ef3a9392a665dfa8c6190bc73c5b26c191b24/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=683ef3a9392a665dfa8c6190bc73c5b26c191b24","patch":"@@ -91,47 +91,47 @@ public <T extends Policy> T getPolicy(T policy, final PolicyTO policyTO) {\n         if (policy != null && policy.getType() != policyTO.getType()) {\n             throw new IllegalArgumentException(String.format(\"Cannot update %s from %s\", policy.getType(), policyTO.getType()));\n         }\n-\n+        \n+        boolean isGlobal = Boolean.FALSE;\n         switch (policyTO.getType()) {\n             case GLOBAL_PASSWORD:\n-                if (policy == null) {\n-                    policy = (T) new PasswordPolicy(true);\n-                }\n-                policy.setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n-                break;\n+            case GLOBAL_ACCOUNT:\n+            case GLOBAL_SYNC:\n+                isGlobal = Boolean.TRUE;\n+            default:\n+        }\n \n+        switch (policyTO.getType()) {\n+            case GLOBAL_PASSWORD:\n             case PASSWORD:\n+                if (!(policyTO instanceof PasswordPolicyTO)) {\n+                    throw new ClassCastException(\"policyTO is expected to be typed PasswordPolicyTO: \" + policyTO.getClass().getName());\n+                }\n                 if (policy == null) {\n-                    policy = (T) new PasswordPolicy();\n+                    policy = (T) new PasswordPolicy(isGlobal);\n                 }\n                 policy.setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n                 break;\n \n             case GLOBAL_ACCOUNT:\n-                if (policy == null) {\n-                    policy = (T) new AccountPolicy(true);\n-                }\n-                policy.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n-                break;\n-\n             case ACCOUNT:\n+                if (!(policyTO instanceof AccountPolicyTO)) {\n+                    throw new ClassCastException(\"policyTO is expected to be typed AccountPolicyTO: \" + policyTO.getClass().getName());\n+                }\n                 if (policy == null) {\n-                    policy = (T) new AccountPolicy();\n+                    policy = (T) new AccountPolicy(isGlobal);\n                 }\n                 policy.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n                 break;\n \n             case GLOBAL_SYNC:\n-                if (policy == null) {\n-                    policy = (T) new SyncPolicy(true);\n-                }\n-                policy.setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n-                break;\n-\n             case SYNC:\n             default:\n+                if (!(policyTO instanceof SyncPolicyTO)) {\n+                    throw new ClassCastException(\"policyTO is expected to be typed SyncPolicyTO: \" + policyTO.getClass().getName());\n+                }\n                 if (policy == null) {\n-                    policy = (T) new SyncPolicy();\n+                    policy = (T) new SyncPolicy(isGlobal);\n                 }\n                 policy.setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n         }"}]}