{"sha":"41d662e80290fcf7ff817a083aa323c0e4c850d6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQxZDY2MmU4MDI5MGZjZjdmZjgxN2EwODNhYTMyM2MwZTRjODUwZDY=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T12:17:46Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T12:17:46Z"},"message":"SYNCOPE-231 Fixing RoleTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440928 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cbaa463a7b6802182726c0cd28d38afb749f9876","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cbaa463a7b6802182726c0cd28d38afb749f9876"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/41d662e80290fcf7ff817a083aa323c0e4c850d6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/41d662e80290fcf7ff817a083aa323c0e4c850d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/41d662e80290fcf7ff817a083aa323c0e4c850d6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/41d662e80290fcf7ff817a083aa323c0e4c850d6/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"b8e8cc8208181429683ba9ed2e571bbcb8f53600","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b8e8cc8208181429683ba9ed2e571bbcb8f53600","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b8e8cc8208181429683ba9ed2e571bbcb8f53600"}],"stats":{"total":59,"additions":35,"deletions":24},"files":[{"sha":"6454752616d9c06d64de0483ee87333f7512f9e0","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":19,"deletions":1,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=41d662e80290fcf7ff817a083aa323c0e4c850d6","patch":"@@ -25,7 +25,6 @@\n import java.util.UUID;\n \n import javax.sql.DataSource;\n-import javax.ws.rs.PathParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n@@ -71,6 +70,7 @@\n import org.apache.syncope.common.services.SchemaService.SchemaType;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.validation.SyncopeClientErrorHandler;\n@@ -329,6 +329,12 @@ protected static AttributeMod attributeMod(final String schema, final String val\n \n     protected UserTO createUser(final UserTO userTO) {\n         Response response = userService.create(userTO);\n+        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+            Exception ex = clientExceptionMapper.fromResponse(response);\n+            if (ex != null) {\n+                throw (RuntimeException) ex;\n+            }\n+        }\n         return response.readEntity(UserTO.class);\n     }\n \n@@ -357,4 +363,16 @@ <T extends AbstractSchemaTO> Response createSchema(final AttributableType kind,\n         }\n         return response;\n     }\n+    \n+    protected RoleTO createRole(RoleService roleService, RoleTO newRoleTO) {\n+        Response response = roleService.create(newRoleTO);\n+        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+            Exception ex = clientExceptionMapper.fromResponse(response);\n+            if (ex != null) {\n+                throw (RuntimeException) ex;\n+            }\n+        }\n+        return getObject(response, RoleTO.class, roleService);\n+    }\n+\n }"},{"sha":"25cee0101c70aa02c2e21d9ccf070d03e85748d3","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=41d662e80290fcf7ff817a083aa323c0e4c850d6","patch":"@@ -30,7 +30,6 @@\n import java.net.URL;\n import java.util.List;\n import java.util.Set;\n-import java.util.UUID;\n \n import javax.ws.rs.core.Response;\n "},{"sha":"aa0c1f1929878bd7108957e34b3acd66c315ab1d","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":16,"deletions":22,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/41d662e80290fcf7ff817a083aa323c0e4c850d6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=41d662e80290fcf7ff817a083aa323c0e4c850d6","patch":"@@ -25,6 +25,7 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.security.AccessControlException;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -78,14 +79,12 @@ public void createWithException() {\n         RoleTO newRoleTO = new RoleTO();\n         newRoleTO.addAttribute(attributeTO(\"attr1\", \"value1\"));\n \n-        Throwable t = null;\n         try {\n-            roleService.create(newRoleTO);\n+            createRole(roleService, newRoleTO);\n             fail();\n         } catch (SyncopeClientCompositeErrorException sccee) {\n-            t = sccee.getException(SyncopeClientExceptionType.InvalidSyncopeRole);\n+            assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidSyncopeRole));\n         }\n-        assertNotNull(t);\n     }\n \n     @Test\n@@ -94,8 +93,7 @@ public void create() {\n         roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n         roleTO.setRoleOwner(8L);\n \n-        Response response = roleService.create(roleTO);\n-        roleTO = getObject(response, RoleTO.class, roleService);\n+        roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n \n         assertNotNull(roleTO.getVirtualAttributeMap());\n@@ -124,8 +122,7 @@ public void createWithPasswordPolicy() {\n         roleTO.setParent(8L);\n         roleTO.setPasswordPolicy(4L);\n \n-        Response response = roleService.create(roleTO);\n-        RoleTO actual = getObject(response, RoleTO.class, roleService);\n+        RoleTO actual = createRole(roleService, roleTO);\n         assertNotNull(actual);\n \n         actual = roleService.read(actual.getId());\n@@ -143,7 +140,7 @@ public void delete() {\n         }\n \n         RoleTO roleTO = new RoleTO();\n-        roleTO.setName(\"toBeDeleted\");\n+        roleTO.setName(\"toBeDeleted\" + getUUIDString());\n         roleTO.setParent(8L);\n \n         roleTO.addResource(\"resource-ldap\");\n@@ -216,9 +213,8 @@ public void selfRead() {\n \n     @Test\n     public void update() {\n-        RoleTO roleTO = buildRoleTO(\"latestRole\");\n-        Response response = roleService.create(roleTO);\n-        roleTO = getObject(response, RoleTO.class, roleService);\n+        RoleTO roleTO = buildRoleTO(\"latestRole\" + getUUIDString());\n+        roleTO = createRole(roleService, roleTO);\n \n         assertEquals(1, roleTO.getAttributes().size());\n \n@@ -252,11 +248,10 @@ public void update() {\n \n     @Test\n     public void updateRemovingVirAttribute() {\n-        RoleTO roleTO = buildBasicRoleTO(\"withvirtual\");\n+        RoleTO roleTO = buildBasicRoleTO(\"withvirtual\" + getUUIDString());\n         roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", null));\n \n-        Response response = roleService.create(roleTO);\n-        roleTO = getObject(response, RoleTO.class, roleService);\n+        roleTO = createRole(roleService, roleTO);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getVirtualAttributes().size());\n@@ -273,11 +268,10 @@ public void updateRemovingVirAttribute() {\n \n     @Test\n     public void updateRemovingDerAttribute() {\n-        RoleTO roleTO = buildBasicRoleTO(\"withderived\");\n+        RoleTO roleTO = buildBasicRoleTO(\"withderived\" + getUUIDString());\n         roleTO.addDerivedAttribute(attributeTO(\"rderivedschema\", null));\n \n-        Response response = roleService.create(roleTO);\n-        roleTO = getObject(response, RoleTO.class, roleService);\n+        roleTO = createRole(roleService, roleTO);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getDerivedAttributes().size());\n@@ -310,6 +304,8 @@ public void updateAsRoleOwner() {\n             fail();\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n         }\n \n         // 4. update as user5, owner of role 7 because owner of role 6 with\n@@ -331,8 +327,7 @@ public void issue178() {\n         String roleName = \"torename\" + getUUIDString();\n         roleTO.setName(roleName);\n \n-        Response response = roleService.create(roleTO);\n-        RoleTO actual = getObject(response, RoleTO.class, roleService);\n+        RoleTO actual = createRole(roleService, roleTO);\n \n         assertNotNull(actual);\n         assertEquals(roleName, actual.getName());\n@@ -356,8 +351,7 @@ public void issueSYNCOPE228() {\n         roleTO.addEntitlement(\"USER_READ\");\n         roleTO.addEntitlement(\"SCHEMA_READ\");\n \n-        Response response = roleService.create(roleTO);\n-        roleTO = getObject(response, RoleTO.class, roleService);\n+        roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n         assertNotNull(roleTO.getEntitlements());\n         assertFalse(roleTO.getEntitlements().isEmpty());"}]}