{"sha":"a78a6f1f7624bb834ada494cff969ed36ca4a85b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE3OGE2ZjFmNzYyNGJiODM0YWRhNDk0Y2ZmOTY5ZWQzNmNhNGE4NWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-26T06:24:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-26T06:24:18Z"},"message":"[SYNCOPE-666] Fix naming","tree":{"sha":"1c283be41934b7181fc624033d8284dcc6c48fbf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1c283be41934b7181fc624033d8284dcc6c48fbf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a78a6f1f7624bb834ada494cff969ed36ca4a85b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a78a6f1f7624bb834ada494cff969ed36ca4a85b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a78a6f1f7624bb834ada494cff969ed36ca4a85b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a78a6f1f7624bb834ada494cff969ed36ca4a85b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a5408c5e12ed77f0545fa33ac957d04bdb8d96e3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a5408c5e12ed77f0545fa33ac957d04bdb8d96e3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a5408c5e12ed77f0545fa33ac957d04bdb8d96e3"}],"stats":{"total":546,"additions":270,"deletions":276},"files":[{"sha":"99cfaf0ac0597b74b3e1aefbfc1d446869ff501f","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SortableAnyProviderComparator.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -29,14 +29,14 @@\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n \n-public class SortableAttributableProviderComparator extends SortableDataProviderComparator<AnyTO> {\n+public class SortableAnyProviderComparator extends SortableDataProviderComparator<AnyTO> {\n \n     private static final long serialVersionUID = 1775967163571699258L;\n \n     private static final Set<String> INLINE_PROPS = new HashSet<>(Arrays.asList(\n             new String[] { \"key\", \"status\", \"token\", \"username\" }));\n \n-    public SortableAttributableProviderComparator(final SortableDataProvider<AnyTO, String> provider) {\n+    public SortableAnyProviderComparator(final SortableDataProvider<AnyTO, String> provider) {\n         super(provider);\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SortableAttributableProviderComparator.java"},{"sha":"199b262354d7f77fb86eb202d4b01adfd8c493d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/ConnObjectWrapper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -32,10 +32,10 @@ public class ConnObjectWrapper implements Serializable {\n \n     private final ConnObjectTO connObjectTO;\n \n-    public ConnObjectWrapper(final AnyTO attributable, final String resourceName,\n+    public ConnObjectWrapper(final AnyTO any, final String resourceName,\n             final ConnObjectTO connObjectTO) {\n \n-        this.any = attributable;\n+        this.any = any;\n         this.resourceName = resourceName;\n         this.connObjectTO = connObjectTO;\n     }"},{"sha":"adb604017e00fdf02f64716f40758e8d19ab744f","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -37,7 +37,7 @@ public class StatusBean implements Serializable {\n \n     private final String resourceName;\n \n-    private String accountLink = null;\n+    private String connObjectLink = null;\n \n     private Status status = Status.OBJECT_NOT_FOUND;\n \n@@ -50,12 +50,12 @@ public StatusBean(final AnyTO any, final String resourceName) {\n         this.resourceName = resourceName;\n     }\n \n-    public String getAccountLink() {\n-        return accountLink;\n+    public String getConnObjectLink() {\n+        return connObjectLink;\n     }\n \n-    public void setAccountLink(final String accountLink) {\n-        this.accountLink = accountLink;\n+    public void setConnObjectLink(final String connObjectLink) {\n+        this.connObjectLink = connObjectLink;\n     }\n \n     public String getResourceName() {"},{"sha":"1a6f04fbe9399c062737b5ae8251b617a8ad6d0a","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -108,10 +108,10 @@ public StatusBean getStatusBean(\n                             ? Status.ACTIVE\n                             : Status.SUSPENDED;\n \n-            final String accountLink = getAccountLink(objectTO);\n+            String connObjectLink = getConnObjectLink(objectTO);\n \n             statusBean.setStatus(status);\n-            statusBean.setAccountLink(accountLink);\n+            statusBean.setConnObjectLink(connObjectLink);\n         }\n \n         return statusBean;\n@@ -127,7 +127,7 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n                 : null;\n     }\n \n-    private String getAccountLink(final ConnObjectTO objectTO) {\n+    private String getConnObjectLink(final ConnObjectTO objectTO) {\n         final Map<String, AttrTO> attributeTOs = objectTO == null\n                 ? Collections.<String, AttrTO>emptyMap()\n                 : objectTO.getPlainAttrMap();"},{"sha":"62dfe30ff8d5fcc03f006c581b66c934b6e73746","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefGETResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -29,8 +29,7 @@\n /**\n  * Mirror REST resource for obtaining user workflow definition in JSON (used by Activiti Modeler).\n  *\n- * @see org.apache.syncope.common.rest.api.service.WorkflowService#exportDefinition(\n- * org.apache.syncope.common.types.SubjectType)\n+ * @see org.apache.syncope.common.rest.api.service.WorkflowService#exportDefinition\n  */\n public class WorkflowDefGETResource extends AbstractResource {\n "},{"sha":"b85dfd8df0de750f38cd0b0797cec6c8a55eff60","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -33,8 +33,7 @@\n /**\n  * Mirror REST resource for putting user workflow definition in JSON (used by Activiti Modeler).\n  *\n- * @see org.apache.syncope.common.rest.api.service.#importDefinition(\n- * org.apache.syncope.common.types.SubjectType, java.lang.String)\n+ * @see org.apache.syncope.common.rest.api.service.WorkflowService#importDefinition\n  */\n public class WorkflowDefPUTResource extends AbstractResource {\n "},{"sha":"073e7c31451ed05ee6af14676152767567d14ef6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -50,22 +50,22 @@ public class GroupRestClient extends AbstractAnyRestClient {\n     @Override\n     public int count(final String realm) {\n         return getService(GroupService.class).\n-                list(SyncopeClient.getSubjectListQueryBuilder().realm(realm).page(1).size(1).build()).\n+                list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n         return getService(GroupService.class).\n-                list(SyncopeClient.getSubjectListQueryBuilder().realm(realm).page(page).size(size).\n+                list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }\n \n     @Override\n     public int searchCount(final String realm, final String fiql) {\n         return getService(GroupService.class).\n-                search(SyncopeClient.getSubjectSearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n+                search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n@@ -74,7 +74,7 @@ public List<GroupTO> search(\n             final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n \n         return getService(GroupService.class).\n-                search(SyncopeClient.getSubjectSearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n+                search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }"},{"sha":"45272c3f15ea503373ca09f58de7cc15d6065e34","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -52,14 +52,14 @@ public class UserRestClient extends AbstractAnyRestClient {\n     @Override\n     public int count(final String realm) {\n         return getService(UserService.class).\n-                list(SyncopeClient.getSubjectListQueryBuilder().realm(realm).page(1).size(1).build()).\n+                list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n         return getService(UserService.class).\n-                list(SyncopeClient.getSubjectListQueryBuilder().realm(realm).page(page).size(size).\n+                list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }\n@@ -103,7 +103,7 @@ public UserTO read(final Long id) {\n     @Override\n     public int searchCount(final String realm, final String fiql) {\n         return getService(UserService.class).\n-                search(SyncopeClient.getSubjectSearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n+                search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n@@ -112,7 +112,7 @@ public List<UserTO> search(\n             final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n \n         return getService(UserService.class).\n-                search(SyncopeClient.getSubjectSearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n+                search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }"},{"sha":"c981739d2755b4db60e3e115be71e6887f4407f8","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -113,7 +113,7 @@ public static ListQueryBuilder getListQueryBuilder() {\n      *\n      * @return default instance of {@link AnyListQueryBuilder}\n      */\n-    public static AnyListQueryBuilder getSubjectListQueryBuilder() {\n+    public static AnyListQueryBuilder getAnyListQueryBuilder() {\n         return new AnyListQueryBuilder();\n     }\n \n@@ -124,7 +124,7 @@ public static AnyListQueryBuilder getSubjectListQueryBuilder() {\n      *\n      * @return default instance of {@link AnySearchQueryBuilder}\n      */\n-    public static AnySearchQueryBuilder getSubjectSearchQueryBuilder() {\n+    public static AnySearchQueryBuilder getAnySearchQueryBuilder() {\n         return new AnySearchQueryBuilder();\n     }\n "},{"sha":"f252fbb0c86524459d153bd0d99e72c864dd87f0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingItemTO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -51,7 +51,7 @@ public class MappingItemTO extends AbstractBaseBean {\n     /**\n      * Specify if the mapped target resource's field is the key.\n      */\n-    private boolean accountid;\n+    private boolean connObjectKey;\n \n     /**\n      * Specify if the mapped target resource's field is the password.\n@@ -68,12 +68,12 @@ public class MappingItemTO extends AbstractBaseBean {\n      */\n     private MappingPurpose purpose;\n \n-    public boolean isAccountid() {\n-        return accountid;\n+    public boolean isConnObjectKey() {\n+        return connObjectKey;\n     }\n \n-    public void setAccountid(final boolean accountid) {\n-        this.accountid = accountid;\n+    public void setConnObjectKey(final boolean connObjectKey) {\n+        this.connObjectKey = connObjectKey;\n     }\n \n     public String getExtAttrName() {"},{"sha":"92be8e19901fed7bbee9d8880fe5cd2913a0a66f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -53,7 +53,7 @@ public MappingItemTO getConnObjectKeyItem() {\n \n             @Override\n             public boolean evaluate(final MappingItemTO item) {\n-                return item.isAccountid();\n+                return item.isConnObjectKey();\n             }\n         });\n     }\n@@ -64,14 +64,14 @@ protected boolean addConnObjectKeyItem(final MappingItemTO connObjectItem) {\n                 || IntMappingType.AnyVirtualSchema == connObjectItem.getIntMappingType()\n                 || IntMappingType.Password == connObjectItem.getIntMappingType()) {\n \n-            throw new IllegalArgumentException(\"Virtual attributes cannot be set as accountId\");\n+            throw new IllegalArgumentException(\"Virtual attributes cannot be set as connObjectKey\");\n         }\n         if (IntMappingType.Password == connObjectItem.getIntMappingType()) {\n-            throw new IllegalArgumentException(\"Password attributes cannot be set as accountId\");\n+            throw new IllegalArgumentException(\"Password attributes cannot be set as connObjectKey\");\n         }\n \n         connObjectItem.setExtAttrName(connObjectItem.getExtAttrName());\n-        connObjectItem.setAccountid(true);\n+        connObjectItem.setConnObjectKey(true);\n \n         return this.add(connObjectItem);\n     }"},{"sha":"bf35bb3c851052e4fbbb7266afe995aa401d8c7b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationByResource.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationByResource.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -49,9 +49,9 @@ public class PropagationByResource implements Serializable {\n     private final Set<String> toBeDeleted;\n \n     /**\n-     * Mapping target resource names to old account ids (when applicable).\n+     * Mapping target resource names to old ConnObjectKeys (when applicable).\n      */\n-    private final Map<String, String> oldAccountIds;\n+    private final Map<String, String> oldConnObjectKeys;\n \n     /**\n      * Default constructor.\n@@ -61,7 +61,7 @@ public PropagationByResource() {\n         toBeUpdated = new HashSet<>();\n         toBeDeleted = new HashSet<>();\n \n-        oldAccountIds = new HashMap<>();\n+        oldConnObjectKeys = new HashMap<>();\n     }\n \n     /**\n@@ -301,7 +301,7 @@ public final void merge(final PropagationByResource propByRes) {\n             toBeCreated.addAll(propByRes.get(ResourceOperation.CREATE));\n             toBeUpdated.addAll(propByRes.get(ResourceOperation.UPDATE));\n             toBeDeleted.addAll(propByRes.get(ResourceOperation.DELETE));\n-            oldAccountIds.putAll(propByRes.getOldAccountIds());\n+            oldConnObjectKeys.putAll(propByRes.getOldConnObjectKeys());\n         }\n     }\n \n@@ -317,40 +317,40 @@ public void clear() {\n     /**\n      * Whether no operations are present.\n      *\n-     * @return true if no operations (create / update / delete) and no old account ids are present\n+     * @return true if no operations (create / update / delete) and no old connObjectKeys are present\n      */\n     public final boolean isEmpty() {\n-        return toBeCreated.isEmpty() && toBeUpdated.isEmpty() && toBeDeleted.isEmpty() && oldAccountIds.isEmpty();\n+        return toBeCreated.isEmpty() && toBeUpdated.isEmpty() && toBeDeleted.isEmpty() && oldConnObjectKeys.isEmpty();\n     }\n \n     /**\n-     * Fetch all old account ids.\n+     * Fetch all old connObjectKeys.\n      *\n-     * @return old account ids; can be empty\n+     * @return old connObjectKeys; can be empty\n      */\n-    public Map<String, String> getOldAccountIds() {\n-        return oldAccountIds;\n+    public Map<String, String> getOldConnObjectKeys() {\n+        return oldConnObjectKeys;\n     }\n \n     /**\n-     * Fetch old account id for given resource name.\n+     * Fetch old connObjectKey for given resource name.\n      *\n      * @param resourceName resource name\n-     * @return old account id; can be null\n+     * @return old connObjectKey; can be null\n      */\n-    public String getOldAccountId(final String resourceName) {\n-        return oldAccountIds.get(resourceName);\n+    public String getOldConnObjectKey(final String resourceName) {\n+        return oldConnObjectKeys.get(resourceName);\n     }\n \n     /**\n-     * Add old account id for a given resource name.\n+     * Add old ConnObjectKey for a given resource name.\n      *\n      * @param resourceName resourceName resource name\n-     * @param oldAccountId old account id\n+     * @param oldConnObjectKey old ConnObjectKey\n      */\n-    public void addOldAccountId(final String resourceName, final String oldAccountId) {\n-        if (resourceName != null && oldAccountId != null) {\n-            oldAccountIds.put(resourceName, oldAccountId);\n+    public void addOldConnObjectKey(final String resourceName, final String oldConnObjectKey) {\n+        if (resourceName != null && oldConnObjectKey != null) {\n+            oldConnObjectKeys.put(resourceName, oldConnObjectKey);\n         }\n     }\n \n@@ -359,6 +359,6 @@ public String toString() {\n         return \"To be Created: \" + toBeCreated + \";\\n\"\n                 + \"To be Updated: \" + toBeUpdated + \";\\n\"\n                 + \"To be Deleted: \" + toBeDeleted + \";\\n\"\n-                + \"Old account Ids: \" + oldAccountIds;\n+                + \"Old connObjectKeys: \" + oldConnObjectKeys;\n     }\n }"},{"sha":"83e90da43c53ae613af38dd7dc736cfbe704b3c5","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -71,7 +71,7 @@ protected Set<String> getEffectiveRealms(\n \n     public abstract int count(List<String> realms);\n \n-    public abstract T update(V attributableMod);\n+    public abstract T update(V anyMod);\n \n     public abstract T delete(Long key);\n "},{"sha":"31fda377f8ee3c2fe19e5d6d484abcfa58ef9a21","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -161,7 +161,7 @@ public AnyObjectTO create(final AnyObjectTO anyObjectTO) {\n             throw new UnauthorizedException(AnyTypeKind.ANY_OBJECT, null);\n         }\n \n-        // Attributable transformation (if configured)\n+        // Any transformation (if configured)\n         AnyObjectTO actual = attrTransformer.transform(anyObjectTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n@@ -188,7 +188,7 @@ public AnyObjectTO update(final AnyObjectMod anyObjectMod) {\n             throw new UnauthorizedException(AnyTypeKind.ANY_OBJECT, anyObject.getKey());\n         }\n \n-        // Attribute value transformation (if configured)\n+        // Any transformation (if configured)\n         AnyObjectMod actual = attrTransformer.transform(anyObjectMod);\n         LOG.debug(\"Transformed: {}\", actual);\n "},{"sha":"d9216da595dc11781f2348e1dbc7755ab8635034","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -178,7 +178,7 @@ public GroupTO create(final GroupTO groupTO) {\n             throw new UnauthorizedException(AnyTypeKind.GROUP, null);\n         }\n \n-        // Attributable transformation (if configured)\n+        // Any transformation (if configured)\n         GroupTO actual = attrTransformer.transform(groupTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n@@ -205,7 +205,7 @@ public GroupTO update(final GroupMod groupMod) {\n             throw new UnauthorizedException(AnyTypeKind.GROUP, group.getKey());\n         }\n \n-        // Attribute value transformation (if configured)\n+        // Any transformation (if configured)\n         GroupMod actual = attrTransformer.transform(groupMod);\n         LOG.debug(\"Transformed: {}\", actual);\n "},{"sha":"37acf19a88e6131fa227a061cc184eb56cf8135c","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -199,7 +199,7 @@ public UserTO create(final UserTO userTO, final boolean storePassword) {\n     }\n \n     protected UserTO doCreate(final UserTO userTO, final boolean storePassword) {\n-        // Attributable transformation (if configured)\n+        // Any transformation (if configured)\n         UserTO actual = anyTransformer.transform(userTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n@@ -224,7 +224,7 @@ public UserTO updateSelf(final UserMod userMod) {\n     @PreAuthorize(\"hasRole('\" + Entitlement.USER_UPDATE + \"')\")\n     @Override\n     public UserTO update(final UserMod userMod) {\n-        // AttributableMod transformation (if configured)\n+        // Any transformation (if configured)\n         UserMod actual = anyTransformer.transform(userMod);\n         LOG.debug(\"Transformed: {}\", actual);\n "},{"sha":"d2f6b11693ece89668cf9c46a91843309a9366d2","filename":"core/logic/src/main/resources/logic.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-attributableTransformer=org.apache.syncope.core.provisioning.java.DefaultAttributableTransformer\n+anyTransformer=org.apache.syncope.core.provisioning.java.DefaultAnyTransformer\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler"},{"sha":"b70f4cd542167f95d314d101cb6db03a0ca35fe0","filename":"core/logic/src/main/resources/logicContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -37,6 +37,6 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.core.logic\"/>\n \n   <bean class=\"${logicInvocationHandler}\"/>\n-  <bean class=\"${attributableTransformer}\"/>\n+  <bean class=\"${anyTransformer}\"/>\n \n </beans>"},{"sha":"279ef77ad24d6616d64033ac02971250f8aeb75c","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -540,7 +540,7 @@ private void retrieveVirAttrValue(\n                                     : MappingUtils.getConnObjectKeyValue(any, provision);\n \n                             if (StringUtils.isBlank(connObjectKey)) {\n-                                throw new IllegalArgumentException(\"No AccountId found for \" + resource.getKey());\n+                                throw new IllegalArgumentException(\"No ConnObjectKey found for \" + resource.getKey());\n                             }\n \n                             Connector connector = connFactory.getConnector(resource);"},{"sha":"a1931c1fb5754af848dd1f2fa0fda5d5032bc855","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/MappingUtils.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -127,7 +127,7 @@ public boolean evaluate(final T item) {\n      * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param enable whether any object must be enabled or not\n      * @param provision provision information\n-     * @return account link + prepared attributes\n+     * @return connObjectLink + prepared attributes\n      */\n     public static Pair<String, Set<Attribute>> prepareAttributes(\n             final AnyUtils anyUtils, final Any<?, ?, ?> any,\n@@ -186,10 +186,10 @@ public static Pair<String, Set<Attribute>> prepareAttributes(\n             }\n         }\n \n-        final Attribute accountIdExtAttr =\n+        Attribute connObjectKeyExtAttr =\n                 AttributeUtil.find(anyUtils.getConnObjectKeyItem(provision).getExtAttrName(), attributes);\n-        if (accountIdExtAttr != null) {\n-            attributes.remove(accountIdExtAttr);\n+        if (connObjectKeyExtAttr != null) {\n+            attributes.remove(connObjectKeyExtAttr);\n             attributes.add(AttributeBuilder.build(\n                     anyUtils.getConnObjectKeyItem(provision).getExtAttrName(), connObjectKey));\n         }\n@@ -218,7 +218,7 @@ public static Pair<String, Set<Attribute>> prepareAttributes(\n      * @param passwordGenerator password generator\n      * @param vAttrsToBeRemoved virtual attributes to be removed\n      * @param vAttrsToBeUpdated virtual attributes to be added\n-     * @return account link + prepared attribute\n+     * @return connObjectLink + prepared attribute\n      */\n     @SuppressWarnings(\"unchecked\")\n     private static Pair<String, Attribute> prepareAttr(\n@@ -294,7 +294,7 @@ private static Pair<String, Attribute> prepareAttr(\n \n         LOG.debug(\"Define mapping for: \"\n                 + \"\\n* ExtAttrName \" + extAttrName\n-                + \"\\n* is accountId \" + mapItem.isConnObjectKey()\n+                + \"\\n* is connObjectKey \" + mapItem.isConnObjectKey()\n                 + \"\\n* is password \" + (mapItem.isPassword() || mapItem.getIntMappingType() == IntMappingType.Password)\n                 + \"\\n* mandatory condition \" + mapItem.getMandatoryCondition()\n                 + \"\\n* Schema \" + mapItem.getIntAttrName()\n@@ -364,8 +364,8 @@ private static Pair<String, Attribute> prepareAttr(\n     }\n \n     /**\n-     * Build __NAME__ for propagation. First look if there ia a defined accountLink for the given resource (and in this\n-     * case evaluate as JEXL); otherwise, take given accountId.\n+     * Build __NAME__ for propagation. First look if there ia a defined connObjectLink for the given resource (and in\n+     * this case evaluate as JEXL); otherwise, take given connObjectKey.\n      *\n      * @param any given any object\n      * @param provision external resource\n@@ -384,29 +384,29 @@ public static Name evaluateNAME(final Any<?, ?, ?> any,\n             LOG.error(\"Missing ConnObjectKey for '{}': \", provision.getResource());\n         }\n \n-        // Evaluate AccountLink expression\n-        String evalAccountLink = null;\n+        // Evaluate connObjectKey expression\n+        String evalConnObjectLink = null;\n         if (StringUtils.isNotBlank(anyUtils.getConnObjectLink(provision))) {\n             final JexlContext jexlContext = new MapContext();\n             JexlUtils.addFieldsToContext(any, jexlContext);\n             JexlUtils.addAttrsToContext(any.getPlainAttrs(), jexlContext);\n             JexlUtils.addDerAttrsToContext(any.getDerAttrs(), any.getPlainAttrs(), jexlContext);\n-            evalAccountLink = JexlUtils.evaluate(anyUtils.getConnObjectLink(provision), jexlContext);\n+            evalConnObjectLink = JexlUtils.evaluate(anyUtils.getConnObjectLink(provision), jexlContext);\n         }\n \n-        // If AccountLink evaluates to an empty string, just use the provided AccountId as Name(),\n-        // otherwise evaluated AccountLink expression is taken as Name().\n+        // If connObjectLink evaluates to an empty string, just use the provided connObjectKey as Name(),\n+        // otherwise evaluated connObjectLink expression is taken as Name().\n         Name name;\n-        if (StringUtils.isBlank(evalAccountLink)) {\n-            // add AccountId as __NAME__ attribute ...\n-            LOG.debug(\"Add AccountId [{}] as __NAME__\", connObjectKey);\n+        if (StringUtils.isBlank(evalConnObjectLink)) {\n+            // add connObjectKey as __NAME__ attribute ...\n+            LOG.debug(\"Add connObjectKey [{}] as __NAME__\", connObjectKey);\n             name = new Name(connObjectKey);\n         } else {\n-            LOG.debug(\"Add AccountLink [{}] as __NAME__\", evalAccountLink);\n-            name = new Name(evalAccountLink);\n+            LOG.debug(\"Add connObjectLink [{}] as __NAME__\", evalConnObjectLink);\n+            name = new Name(evalConnObjectLink);\n \n-            // AccountId not propagated: it will be used to set the value for __UID__ attribute\n-            LOG.debug(\"AccountId will be used just as __UID__ attribute\");\n+            // connObjectKey not propagated: it will be used to set the value for __UID__ attribute\n+            LOG.debug(\"connObjectKey will be used just as __UID__ attribute\");\n         }\n \n         return name;"},{"sha":"6a14e582accff53409daefd1f9c8415f45a07a41","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":23,"deletions":27,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -61,17 +61,13 @@\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.util.ReflectionUtils;\n \n @Repository\n public class JPAAnySearchDAO extends AbstractDAO<Any<?, ?, ?>, Long> implements AnySearchDAO {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(AnySearchDAO.class);\n-\n     private static final String EMPTY_ATTR_QUERY = \"SELECT any_id FROM user_search_attr WHERE 1=2\";\n \n     @Autowired\n@@ -193,7 +189,7 @@ public int count(final Set<String> adminRealms, final SearchCond searchCondition\n \n     @Override\n     public <T extends Any<?, ?, ?>> boolean matches(\n-            final T subject, final SearchCond searchCondition, final AnyTypeKind typeKind) {\n+            final T any, final SearchCond searchCondition, final AnyTypeKind typeKind) {\n \n         List<Object> parameters = Collections.synchronizedList(new ArrayList<>());\n \n@@ -208,7 +204,7 @@ public int count(final Set<String> adminRealms, final SearchCond searchCondition\n         } else {\n             // 2. take into account the passed user\n             queryString.insert(0, \"SELECT u.any_id FROM (\");\n-            queryString.append(\") u WHERE any_id=?\").append(setParameter(parameters, subject.getKey()));\n+            queryString.append(\") u WHERE any_id=?\").append(setParameter(parameters, any.getKey()));\n \n             // 3. prepare the search query\n             Query query = entityManager.createNativeQuery(queryString.toString());\n@@ -305,8 +301,8 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n             // Manage difference among external key attribute and internal JPA @Id\n             String fieldName = \"key\".equals(clause.getField()) ? \"id\" : clause.getField();\n \n-            Field subjectField = ReflectionUtils.findField(attrUtils.anyClass(), fieldName);\n-            if (subjectField == null) {\n+            Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), fieldName);\n+            if (anyField == null) {\n                 PlainSchema schema = schemaDAO.find(fieldName);\n                 if (schema != null) {\n                     if (schema.isUniqueConstraint()) {\n@@ -389,25 +385,25 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n         // 6. Prepare the result (avoiding duplicates)\n         List<T> result = new ArrayList<>();\n \n-        for (Object subjectKey : query.getResultList()) {\n+        for (Object anyKey : query.getResultList()) {\n             long actualKey;\n-            if (subjectKey instanceof Object[]) {\n-                actualKey = ((Number) ((Object[]) subjectKey)[0]).longValue();\n+            if (anyKey instanceof Object[]) {\n+                actualKey = ((Number) ((Object[]) anyKey)[0]).longValue();\n             } else {\n-                actualKey = ((Number) subjectKey).longValue();\n+                actualKey = ((Number) anyKey).longValue();\n             }\n \n-            T subject = typeKind == AnyTypeKind.USER\n+            T any = typeKind == AnyTypeKind.USER\n                     ? (T) userDAO.find(actualKey)\n                     : typeKind == AnyTypeKind.GROUP\n                             ? (T) groupDAO.find(actualKey)\n                             : (T) anyObjectDAO.find(actualKey);\n-            if (subject == null) {\n+            if (any == null) {\n                 LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n                         typeKind, actualKey);\n             } else {\n-                if (!result.contains(subject)) {\n-                    result.add(subject);\n+                if (!result.contains(any)) {\n+                    result.add(any);\n                 }\n             }\n         }\n@@ -736,26 +732,26 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n             cond.setSchema(\"id\");\n         }\n \n-        Field subjectField = ReflectionUtils.findField(attrUtils.anyClass(), cond.getSchema());\n-        if (subjectField == null) {\n+        Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), cond.getSchema());\n+        if (anyField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n         }\n \n         PlainSchema schema = new JPAPlainSchema();\n-        schema.setKey(subjectField.getName());\n+        schema.setKey(anyField.getName());\n         for (AttrSchemaType attrSchemaType : AttrSchemaType.values()) {\n-            if (subjectField.getType().isAssignableFrom(attrSchemaType.getType())) {\n+            if (anyField.getType().isAssignableFrom(attrSchemaType.getType())) {\n                 schema.setType(attrSchemaType);\n             }\n         }\n \n-        // Deal with subject Integer fields logically mapping to boolean values\n+        // Deal with any Integer fields logically mapping to boolean values\n         // (JPAGroup.inheritPlainAttrs, for example)\n         boolean foundBooleanMin = false;\n         boolean foundBooleanMax = false;\n-        if (Integer.class.equals(subjectField.getType())) {\n-            for (Annotation annotation : subjectField.getAnnotations()) {\n+        if (Integer.class.equals(anyField.getType())) {\n+            for (Annotation annotation : anyField.getAnnotations()) {\n                 if (Min.class.equals(annotation.annotationType())) {\n                     foundBooleanMin = ((Min) annotation).value() == 0;\n                 } else if (Max.class.equals(annotation.annotationType())) {\n@@ -767,13 +763,13 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n             schema.setType(AttrSchemaType.Boolean);\n         }\n \n-        // Deal with subject fields representing relationships to other entities\n-        if (subjectField.getType().getAnnotation(Entity.class) != null) {\n+        // Deal with any fields representing relationships to other entities\n+        if (anyField.getType().getAnnotation(Entity.class) != null) {\n             Method relMethod = null;\n             try {\n-                relMethod = ClassUtils.getPublicMethod(subjectField.getType(), \"getKey\", new Class[0]);\n+                relMethod = ClassUtils.getPublicMethod(anyField.getType(), \"getKey\", new Class[0]);\n             } catch (Exception e) {\n-                LOG.error(\"Could not find {}#getKey\", subjectField.getType(), e);\n+                LOG.error(\"Could not find {}#getKey\", anyField.getType(), e);\n             }\n \n             if (relMethod != null) {"},{"sha":"f888374382df71371256df851ed197c0451a8ae5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ExternalResourceValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -82,8 +82,8 @@ public boolean evaluate(final MappingItem item) {\n         MappingItem connObjectKey = mapping.getConnObjectKeyItem();\n         if (connObjectKey.getIntMappingType().getAnyTypeKind() != anyType.getKind()) {\n             context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping, \"ConnObjectKey must be from the same AnyType\")).\n-                    addPropertyNode(\"attributableType\").addConstraintViolation();\n+                    getTemplate(EntityViolationType.InvalidMapping, \"ConnObjectKey must be from the same AnyTypeKind\")).\n+                    addPropertyNode(\"anyTypeKind\").addConstraintViolation();\n             return false;\n         }\n "},{"sha":"fcc398293e4932c4b34ea0058e1dd59d361b1cdf","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnySearchTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -272,7 +272,7 @@ public void searchByResource() {\n     }\n \n     @Test\n-    public void searchByBooleanSubjectCond() {\n+    public void searchByBooleanAnyCond() {\n         AttributeCond booleanCond = new AttributeCond(AnyCond.Type.EQ);\n         booleanCond.setSchema(\"show\");\n         booleanCond.setExpression(\"true\");"},{"sha":"8535dc2c4157a468126ce9de282b8d4cde7fc6cf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -66,16 +66,16 @@ public class DefaultGroupProvisioningManager implements GroupProvisioningManager\n     protected GroupDAO groupDAO;\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> create(final GroupTO subject) {\n-        return create(subject, Collections.<String>emptySet());\n+    public Pair<Long, List<PropagationStatus>> create(final GroupTO any) {\n+        return create(any, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> create(final GroupTO subject, final Set<String> excludedResources) {\n-        WorkflowResult<Long> created = gwfAdapter.create(subject);\n+    public Pair<Long, List<PropagationStatus>> create(final GroupTO any, final Set<String> excludedResources) {\n+        WorkflowResult<Long> created = gwfAdapter.create(any);\n \n         List<PropagationTask> tasks =\n-                propagationManager.getGroupCreateTasks(created, subject.getVirAttrs(), excludedResources);\n+                propagationManager.getGroupCreateTasks(created, any.getVirAttrs(), excludedResources);\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n                 PropagationReporter.class);\n         try {\n@@ -107,18 +107,18 @@ public Pair<Long, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> update(final GroupMod subjectMod) {\n-        return update(subjectMod, Collections.<String>emptySet());\n+    public Pair<Long, List<PropagationStatus>> update(final GroupMod anyMod) {\n+        return update(anyMod, Collections.<String>emptySet());\n     }\n \n     @Override\n     public Pair<Long, List<PropagationStatus>> update(\n-            final GroupMod subjectMod, final Set<String> excludedResources) {\n+            final GroupMod anyMod, final Set<String> excludedResources) {\n \n-        WorkflowResult<Long> updated = gwfAdapter.update(subjectMod);\n+        WorkflowResult<Long> updated = gwfAdapter.update(anyMod);\n \n         List<PropagationTask> tasks = propagationManager.getGroupUpdateTasks(updated,\n-                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate(), null);\n+                anyMod.getVirAttrsToRemove(), anyMod.getVirAttrsToUpdate(), null);\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {\n@@ -134,10 +134,10 @@ public Pair<Long, List<PropagationStatus>> update(\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final Long subjectKey) {\n+    public List<PropagationStatus> delete(final Long anyKey) {\n         final List<PropagationTask> tasks = new ArrayList<>();\n \n-        Group group = groupDAO.authFind(subjectKey);\n+        Group group = groupDAO.authFind(anyKey);\n         if (group != null) {\n             // Generate propagation tasks for deleting users from group resources, if they are on those resources only\n             // because of the reason being deleted (see SYNCOPE-357)\n@@ -163,7 +163,7 @@ public List<PropagationStatus> delete(final Long subjectKey) {\n         }\n \n         try {\n-            gwfAdapter.delete(subjectKey);\n+            gwfAdapter.delete(anyKey);\n         } catch (RuntimeException e) {\n             throw e;\n         }\n@@ -172,8 +172,8 @@ public List<PropagationStatus> delete(final Long subjectKey) {\n     }\n \n     @Override\n-    public Long unlink(final GroupMod subjectMod) {\n-        WorkflowResult<Long> updated = gwfAdapter.update(subjectMod);\n+    public Long unlink(final GroupMod anyMod) {\n+        WorkflowResult<Long> updated = gwfAdapter.update(anyMod);\n         return updated.getResult();\n     }\n \n@@ -197,8 +197,8 @@ public List<PropagationStatus> deprovision(final Long groupKey, final Collection\n     }\n \n     @Override\n-    public Long link(final GroupMod subjectMod) {\n-        return gwfAdapter.update(subjectMod).getResult();\n+    public Long link(final GroupMod anyMod) {\n+        return gwfAdapter.update(anyMod).getResult();\n     }\n \n }"},{"sha":"58ecb4ab8fc73da20b40fd5014f5870b99f14423","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -143,13 +143,13 @@ public List<PropagationStatus> delete(final Long userKey) {\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final Long subjectId, final Set<String> excludedResources) {\n+    public List<PropagationStatus> delete(final Long anyId, final Set<String> excludedResources) {\n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this\n         // information could only be available after uwfAdapter.delete(), which\n         // will also effectively remove user from db, thus making virtually\n         // impossible by NotificationManager to fetch required user information\n-        List<PropagationTask> tasks = propagationManager.getUserDeleteTasks(subjectId, excludedResources);\n+        List<PropagationTask> tasks = propagationManager.getUserDeleteTasks(anyId, excludedResources);\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n@@ -161,7 +161,7 @@ public List<PropagationStatus> delete(final Long subjectId, final Set<String> ex\n         }\n \n         try {\n-            uwfAdapter.delete(subjectId);\n+            uwfAdapter.delete(anyId);\n         } catch (PropagationException e) {\n             throw e;\n         }\n@@ -176,8 +176,8 @@ public Long unlink(final UserMod userMod) {\n     }\n \n     @Override\n-    public Long link(final UserMod subjectMod) {\n-        return uwfAdapter.update(subjectMod).getResult().getKey().getKey();\n+    public Long link(final UserMod anyMod) {\n+        return uwfAdapter.update(anyMod).getResult().getKey().getKey();\n     }\n \n     @Override"},{"sha":"6c11f8a46fb6607ba99818a96a765285ce023f46","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandler.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -138,7 +138,7 @@ public PropagationByResource fillVirtual(final Any any,\n \n                             // Using virtual attribute as ConnObjectKey must be avoided\n                             if (mapItem.isConnObjectKey() && virAttr != null && !virAttr.getValues().isEmpty()) {\n-                                propByRes.addOldAccountId(resource.getKey(), virAttr.getValues().get(0).toString());\n+                                propByRes.addOldConnObjectKey(resource.getKey(), virAttr.getValues().get(0).toString());\n                             }\n                         }\n                     }"},{"sha":"21d22369498f8e314b2bba5633aaef203f193d5e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/MemoryVirAttrCache.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -56,7 +56,7 @@ public MemoryVirAttrCache(final int ttl, final int maxCacheSize) {\n      * Cache virtual attribute values.\n      *\n      * @param type any object type\n-     * @param key attributable key\n+     * @param key any key\n      * @param schemaName virtual attribute name\n      * @param value virtual attribute values\n      */\n@@ -81,7 +81,7 @@ public void put(\n      * Retrieve cached value. Return null in case of virtual attribute not cached.\n      *\n      * @param type any object type\n-     * @param key attributable key\n+     * @param key any key\n      * @param schemaName virtual attribute schema name.\n      * @return cached values or null if virtual attribute is not cached.\n      */\n@@ -94,7 +94,7 @@ public VirAttrCacheValue get(final String type, final Long key, final String sch\n      * Force entry expiring.\n      *\n      * @param type any object type\n-     * @param key attributable key\n+     * @param key any key\n      * @param schemaName virtual attribute schema name\n      */\n     @Override"},{"sha":"f63a9b4c83f83a836c86692ab0961e998a8b51a8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -353,7 +353,7 @@ protected PropagationByResource fill(final Any any, final AnyMod anyMod, final A\n                             propByRes.add(ResourceOperation.UPDATE, resource.getKey());\n \n                             if (mapItem.isConnObjectKey() && attr != null && !attr.getValuesAsStrings().isEmpty()) {\n-                                propByRes.addOldAccountId(resource.getKey(), attr.getValuesAsStrings().get(0));\n+                                propByRes.addOldConnObjectKey(resource.getKey(), attr.getValuesAsStrings().get(0));\n                             }\n                         }\n                     }\n@@ -451,7 +451,7 @@ protected PropagationByResource fill(final Any any, final AnyMod anyMod, final A\n                             if (mapItem.isConnObjectKey() && derAttr != null\n                                     && !derAttr.getValue(any.getPlainAttrs()).isEmpty()) {\n \n-                                propByRes.addOldAccountId(resource.getKey(),\n+                                propByRes.addOldConnObjectKey(resource.getKey(),\n                                         derAttr.getValue(any.getPlainAttrs()));\n                             }\n                         }"},{"sha":"6bce1b197e4b5980d783412adf01c736bdc203a3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -126,7 +126,7 @@ public PropagationByResource update(final Group toBeUpdated, final GroupMod grou\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        // fetch account ids before update\n+        // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(group);\n \n         // realm\n@@ -153,13 +153,13 @@ public PropagationByResource update(final Group toBeUpdated, final GroupMod grou\n         // attributes, derived attributes, virtual attributes and resources\n         propByRes.merge(fill(group, groupMod, anyUtilsFactory.getInstance(AnyTypeKind.GROUP), scce));\n \n-        // check if some account id was changed by the update above\n+        // check if some connObjectKey was changed by the update above\n         Map<String, String> newConnObjectKeys = getConnObjectKeys(group);\n         for (Map.Entry<String, String> entry : oldConnObjectKeys.entrySet()) {\n             if (newConnObjectKeys.containsKey(entry.getKey())\n                     && !entry.getValue().equals(newConnObjectKeys.get(entry.getKey()))) {\n \n-                propByRes.addOldAccountId(entry.getKey(), entry.getValue());\n+                propByRes.addOldConnObjectKey(entry.getKey(), entry.getValue());\n                 propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n             }\n         }"},{"sha":"4930764be1fe4b6b66ba662ac5730e4eb2e29d24","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -246,7 +246,7 @@ private void populateMappingTO(final Mapping mapping, final MappingTO mappingTO)\n             itemTO.setKey(item.getKey());\n             BeanUtils.copyProperties(item, itemTO, MAPPINGITEM_IGNORE_PROPERTIES);\n \n-            if (itemTO.isAccountid()) {\n+            if (itemTO.isConnObjectKey()) {\n                 mappingTO.setConnObjectKeyItem(itemTO);\n             } else {\n                 mappingTO.add(itemTO);"},{"sha":"e20e405586bec198e2608576393809a29c1a0b17","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -213,7 +213,7 @@ public PropagationByResource update(final User toBeUpdated, final UserMod userMo\n \n         Collection<String> currentResources = userDAO.findAllResourceNames(user);\n \n-        // fetch account ids before update\n+        // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(user);\n \n         // realm\n@@ -336,13 +336,13 @@ public void execute(final Long roleKey) {\n             propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n         }\n \n-        // check if some account id was changed by the update above\n-        Map<String, String> newAccountIds = getConnObjectKeys(user);\n+        // check if some connObjectKey was changed by the update above\n+        Map<String, String> newcCnnObjectKeys = getConnObjectKeys(user);\n         for (Map.Entry<String, String> entry : oldConnObjectKeys.entrySet()) {\n-            if (newAccountIds.containsKey(entry.getKey())\n-                    && !entry.getValue().equals(newAccountIds.get(entry.getKey()))) {\n+            if (newcCnnObjectKeys.containsKey(entry.getKey())\n+                    && !entry.getValue().equals(newcCnnObjectKeys.get(entry.getKey()))) {\n \n-                propByRes.addOldAccountId(entry.getKey(), entry.getValue());\n+                propByRes.addOldConnObjectKey(entry.getKey(), entry.getValue());\n                 propByRes.add(ResourceOperation.UPDATE, entry.getKey());\n             }\n         }"},{"sha":"73a78961f2048bd747d7bacc7489aa07318c1b9e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -296,11 +296,11 @@ protected void delete(final PropagationTask task, final ConnectorObject beforeOb\n              * update, this user / group used to have the current resource assigned by more than one mean (for example,\n              * two different memberships with the same resource).\n              */\n-            Any<?, ?, ?> subject = getAny(task);\n-            Collection<String> resources = subject instanceof User\n-                    ? userDAO.findAllResourceNames((User) subject)\n-                    : subject instanceof Group\n-                            ? ((Group) subject).getResourceNames()\n+            Any<?, ?, ?> any = getAny(task);\n+            Collection<String> resources = any instanceof User\n+                    ? userDAO.findAllResourceNames((User) any)\n+                    : any instanceof Group\n+                            ? ((Group) any).getResourceNames()\n                             : Collections.<String>emptySet();\n             if (!resources.contains(task.getResource().getKey())) {\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n@@ -527,7 +527,7 @@ protected boolean hasToBeregistered(final PropagationTask task, final TaskExec e\n      * @param connector connector facade proxy.\n      * @param task current propagation task.\n      * @param provision provision\n-     * @param latest 'FALSE' to retrieve object using old accountId if not null.\n+     * @param latest 'FALSE' to retrieve object using old connObjectKey if not null.\n      * @return remote connector object.\n      */\n     protected ConnectorObject getRemoteObject(final PropagationTask task, final Connector connector,"},{"sha":"6d795d8873c75401d8b46e83ddd7a717c05a54b8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -76,31 +76,31 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n         if (AnyTypeKind.USER == task.getAnyTypeKind() && provision.getMapping() != null) {\n             User user = userDAO.find(task.getAnyKey());\n             if (user != null) {\n-                List<String> groupAccountLinks = new ArrayList<>();\n+                List<String> groupConnObjectLinks = new ArrayList<>();\n                 for (Group group : userDAO.findAllGroups(user)) {\n                     if (group.getResourceNames().contains(task.getResource().getKey())\n                             && StringUtils.isNotBlank(provision.getMapping().getConnObjectLink())) {\n \n-                        LOG.debug(\"Evaluating accountLink for {}\", group);\n+                        LOG.debug(\"Evaluating connObjectLink for {}\", group);\n \n                         JexlContext jexlContext = new MapContext();\n                         JexlUtils.addFieldsToContext(group, jexlContext);\n                         JexlUtils.addAttrsToContext(group.getPlainAttrs(), jexlContext);\n                         JexlUtils.addDerAttrsToContext(group.getDerAttrs(), group.getPlainAttrs(), jexlContext);\n \n-                        String groupAccountLink =\n+                        String groupConnObjectLinkLink =\n                                 JexlUtils.evaluate(provision.getMapping().getConnObjectLink(), jexlContext);\n-                        LOG.debug(\"AccountLink for {} is '{}'\", group, groupAccountLink);\n-                        if (StringUtils.isNotBlank(groupAccountLink)) {\n-                            groupAccountLinks.add(groupAccountLink);\n+                        LOG.debug(\"ConnObjectLink for {} is '{}'\", group, groupConnObjectLinkLink);\n+                        if (StringUtils.isNotBlank(groupConnObjectLinkLink)) {\n+                            groupConnObjectLinks.add(groupConnObjectLinkLink);\n                         }\n                     }\n                 }\n-                LOG.debug(\"Group accountLinks to propagate for membership: {}\", groupAccountLinks);\n+                LOG.debug(\"Group connObjectLinks to propagate for membership: {}\", groupConnObjectLinks);\n \n                 Set<Attribute> attributes = new HashSet<>(task.getAttributes());\n \n-                Set<String> groups = new HashSet<>(groupAccountLinks);\n+                Set<String> groups = new HashSet<>(groupConnObjectLinks);\n                 Attribute ldapGroups = AttributeUtil.find(getGroupMembershipAttrName(), attributes);\n \n                 if (ldapGroups != null) {"},{"sha":"952343b942aa18bea6f7104043d9debdf07cbb44","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -467,7 +467,7 @@ protected List<PropagationTask> createTasks(final Any<?, ?, ?> any,\n                     }\n                     task.setPropagationOperation(operation);\n                     task.setPropagationMode(resource.getPropagationMode());\n-                    task.setOldConnObjectKey(propByRes.getOldAccountId(resource.getKey()));\n+                    task.setOldConnObjectKey(propByRes.getOldConnObjectKey(resource.getKey()));\n \n                     Pair<String, Set<Attribute>> preparedAttrs = MappingUtils.prepareAttributes(anyUtils, any,\n                             password, changePwd, vAttrsToBeRemoved, vAttrsToBeUpdated, enable, provision);"},{"sha":"1ead6a703be29de29f885dd2d130ec7d5a40bac9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -114,7 +114,7 @@ protected List<ProvisioningResult> assign(\n         result.setAnyType(provision.getAnyType().getKey());\n         result.setStatus(ProvisioningResult.Status.SUCCESS);\n \n-        // Attributable transformation (if configured)\n+        // Any transformation (if configured)\n         AnyTO transformed = anyTransformer.transform(anyTO);\n         LOG.debug(\"Transformed: {}\", transformed);\n \n@@ -145,7 +145,7 @@ protected List<ProvisioningResult> provision(\n \n         AnyTO anyTO = connObjectUtils.getAnyTO(delta.getObject(), profile.getTask(), provision, anyUtils);\n \n-        // Attributable transformation (if configured)\n+        // Any transformation (if configured)\n         AnyTO transformed = anyTransformer.transform(anyTO);\n         LOG.debug(\"Transformed: {}\", transformed);\n "},{"sha":"503ce0b6b1b54307aaf9df04f133943232c88a4a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AnyObjectPushResultHandlerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -111,7 +111,7 @@ protected AnyUtils getAnyUtils() {\n     }\n \n     @Override\n-    protected String getName(final Any<?, ?, ?> subject) {\n+    protected String getName(final Any<?, ?, ?> any) {\n         return StringUtils.EMPTY;\n     }\n "},{"sha":"78fffbfcb575337837a970ea4169e9fc920c6f5d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/GroupPushResultHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -110,8 +110,8 @@ protected AnyUtils getAnyUtils() {\n     }\n \n     @Override\n-    protected String getName(final Any<?, ?, ?> subject) {\n-        return Group.class.cast(subject).getName();\n+    protected String getName(final Any<?, ?, ?> any) {\n+        return Group.class.cast(any).getName();\n     }\n \n     @Override"},{"sha":"32f660ee61611194edb075f24a411c6db137ca2c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/LDAPPasswordSyncActions.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FLDAPPasswordSyncActions.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -56,10 +56,10 @@ public class LDAPPasswordSyncActions extends DefaultSyncActions {\n     public <T extends AnyTO> SyncDelta beforeProvision(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n-            final T subject) throws JobExecutionException {\n+            final T any) throws JobExecutionException {\n \n-        if (subject instanceof UserTO) {\n-            String password = ((UserTO) subject).getPassword();\n+        if (any instanceof UserTO) {\n+            String password = ((UserTO) any).getPassword();\n             parseEncodedPassword(password);\n         }\n \n@@ -71,11 +71,11 @@ public <T extends AnyTO> SyncDelta beforeProvision(\n     public <T extends AnyTO, K extends AnyMod> SyncDelta beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n-            final T subject,\n-            final K subjectMod) throws JobExecutionException {\n+            final T any,\n+            final K anyMod) throws JobExecutionException {\n \n-        if (subjectMod instanceof UserMod) {\n-            String modPassword = ((UserMod) subjectMod).getPassword();\n+        if (anyMod instanceof UserMod) {\n+            String modPassword = ((UserMod) anyMod).getPassword();\n             parseEncodedPassword(modPassword);\n         }\n \n@@ -104,11 +104,11 @@ private void parseEncodedPassword(final String password) {\n     public <T extends AnyTO> void after(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n-            final T subject,\n+            final T any,\n             final ProvisioningResult result) throws JobExecutionException {\n \n-        if (subject instanceof UserTO && encodedPassword != null && cipher != null) {\n-            User syncopeUser = userDAO.find(subject.getKey());\n+        if (any instanceof UserTO && encodedPassword != null && cipher != null) {\n+            User syncopeUser = userDAO.find(any.getKey());\n             if (syncopeUser != null) {\n                 byte[] encodedPasswordBytes = Base64.decode(encodedPassword.getBytes());\n                 char[] encodedHex = Hex.encode(encodedPasswordBytes);"},{"sha":"898282441c0edebd7e072418ecf5dbee15740152","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncUtils.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -163,10 +163,10 @@ public Long findMatchingAnyKey(\n         return result;\n     }\n \n-    private AnyDAO<?> getAnyDAO(final MappingItem accountIdItem) {\n-        return AnyTypeKind.USER == accountIdItem.getIntMappingType().getAnyTypeKind()\n+    private AnyDAO<?> getAnyDAO(final MappingItem connObjectKeyItem) {\n+        return AnyTypeKind.USER == connObjectKeyItem.getIntMappingType().getAnyTypeKind()\n                 ? userDAO\n-                : AnyTypeKind.ANY_OBJECT == accountIdItem.getIntMappingType().getAnyTypeKind()\n+                : AnyTypeKind.ANY_OBJECT == connObjectKeyItem.getIntMappingType().getAnyTypeKind()\n                         ? anyObjectDAO\n                         : groupDAO;\n     }\n@@ -238,7 +238,7 @@ private List<Long> findByConnObjectKeyItem(\n                 break;\n \n             default:\n-                LOG.error(\"Invalid accountId type '{}'\", connObjectKeyItem.getIntMappingType());\n+                LOG.error(\"Invalid connObjectKey type '{}'\", connObjectKeyItem.getIntMappingType());\n         }\n \n         return result;\n@@ -356,7 +356,7 @@ private List<String> getAltSearchSchemas(final Provision provision, final SyncPo\n     /**\n      * Find users / groups based on mapped uid value (or previous uid value, if updated).\n      *\n-     * @param uid for finding by account id\n+     * @param uid for finding by connObjectKey\n      * @param connObj for finding by attribute value\n      * @param provision external resource\n      * @param anyUtils any util"},{"sha":"e4a436f8b75dddcf144d0e6b463d038f113f7213","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/UserPushResultHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserPushResultHandlerImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -113,8 +113,8 @@ protected AnyUtils getAnyUtils() {\n     }\n \n     @Override\n-    protected String getName(final Any<?, ?, ?> subject) {\n-        return User.class.cast(subject).getUsername();\n+    protected String getName(final Any<?, ?, ?> any) {\n+        return User.class.cast(any).getUsername();\n     }\n \n     @Override"},{"sha":"8487fa8f237cf028d73ea90d59b55b3f71ec2b7f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/UserSyncResultHandlerImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -40,8 +40,8 @@ protected AnyUtils getAnyUtils() {\n     }\n \n     @Override\n-    protected String getName(final AnyTO subjectTO) {\n-        return UserTO.class.cast(subjectTO).getUsername();\n+    protected String getName(final AnyTO anyTO) {\n+        return UserTO.class.cast(anyTO).getUsername();\n     }\n \n     @Override\n@@ -55,8 +55,8 @@ protected AnyTO getAnyTO(final long key) {\n     }\n \n     @Override\n-    protected AnyTO doCreate(final AnyTO subjectTO, final SyncDelta delta, final ProvisioningResult result) {\n-        UserTO userTO = UserTO.class.cast(subjectTO);\n+    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final ProvisioningResult result) {\n+        UserTO userTO = UserTO.class.cast(anyTO);\n \n         Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getTask());\n         Map.Entry<Long, List<PropagationStatus>> created = userProvisioningManager.create(userTO, true, true, enabled,"},{"sha":"969dd894195600a22a1d495432d66823f5c6313e","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -92,7 +92,7 @@ public void issue42() {\n         item.setIntAttrName(\"userId\");\n         item.setIntMappingType(IntMappingType.UserPlainSchema);\n         item.setExtAttrName(\"campo1\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setMandatoryCondition(\"false\");\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);"},{"sha":"e2ddbc929206d4f9fbd100e3a3124417781058d2","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/init/CamelRouteLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -82,7 +82,7 @@ public void load() {\n     }\n \n     private boolean loadRoutesFor(final AnyTypeKind anyTypeKind) {\n-        final String sql = String.format(\"SELECT * FROM %s WHERE SUBJECTTYPE = ?\", CamelRoute.class.getSimpleName());\n+        final String sql = String.format(\"SELECT * FROM %s WHERE ANYTYPEKIND = ?\", CamelRoute.class.getSimpleName());\n         final JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n         final List<Map<String, Object>> rows = jdbcTemplate.queryForList(sql, new Object[] { anyTypeKind.name() });\n         return rows.isEmpty();\n@@ -104,7 +104,7 @@ private String nodeToString(final Node content, final DOMImplementationLS domImp\n \n     private void loadRoutes(final Resource resource, final AnyTypeKind anyTypeKind) {\n         if (loadRoutesFor(anyTypeKind)) {\n-            String query = String.format(\"INSERT INTO %s(NAME, SUBJECTTYPE, CONTENT) VALUES (?, ?, ?)\",\n+            String query = String.format(\"INSERT INTO %s(NAME, ANYTYPEKIND, CONTENT) VALUES (?, ?, ?)\",\n                     CamelRoute.class.getSimpleName());\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n "},{"sha":"18aadcc5aa340225c2d4ce4600079af823d297f8","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -36,8 +36,8 @@\n         extends AbstractCamelProvisioningManager implements GroupProvisioningManager {\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> create(final GroupTO subject) {\n-        return create(subject, Collections.<String>emptySet());\n+    public Pair<Long, List<PropagationStatus>> create(final GroupTO any) {\n+        return create(any, Collections.<String>emptySet());\n     }\n \n     @Override\n@@ -82,21 +82,21 @@ public Pair<Long, List<PropagationStatus>> create(final GroupTO groupTO, final M\n     }\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> update(final GroupMod subjectMod) {\n-        return update(subjectMod, Collections.<String>emptySet());\n+    public Pair<Long, List<PropagationStatus>> update(final GroupMod anyMod) {\n+        return update(anyMod, Collections.<String>emptySet());\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<Long, List<PropagationStatus>> update(\n-            final GroupMod subjectMod, final Set<String> excludedResources) {\n+            final GroupMod anyMod, final Set<String> excludedResources) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n \n-        sendMessage(\"direct:updateGroup\", subjectMod, props);\n+        sendMessage(\"direct:updateGroup\", anyMod, props);\n \n         Exchange exchange = pollingConsumer.receive();\n "},{"sha":"a2587517d4565145dbe07ab4c88366057f591cd4","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -214,10 +214,10 @@ public Pair<Long, List<PropagationStatus>> suspend(final User user, final Status\n     }\n \n     @Override\n-    public Long link(final UserMod subjectMod) {\n+    public Long link(final UserMod anyMod) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:linkPort\");\n \n-        sendMessage(\"direct:linkUser\", subjectMod);\n+        sendMessage(\"direct:linkUser\", anyMod);\n \n         Exchange exchange = pollingConsumer.receive();\n "},{"sha":"8dc8bde6a59af05d2d6312db90b5afc1bde5d51e","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateInSyncProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInSyncProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInSyncProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInSyncProcessor.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -48,7 +48,7 @@ public class GroupCreateInSyncProcessor implements Processor {\n     public void process(final Exchange exchange) {\n         WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n \n-        GroupTO actual = exchange.getProperty(\"subject\", GroupTO.class);\n+        GroupTO actual = exchange.getProperty(\"any\", GroupTO.class);\n         Map<Long, String> groupOwnerMap = exchange.getProperty(\"groupOwnerMap\", Map.class);\n         Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n "},{"sha":"4ab62e38135c66fc22c3a796b4a9ef0734bc1531","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateProcessor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -51,11 +51,11 @@ public class GroupCreateProcessor implements Processor {\n     @Override\n     public void process(final Exchange exchange) {\n         WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n-        GroupTO subject = exchange.getProperty(\"subject\", GroupTO.class);\n+        GroupTO any = exchange.getProperty(\"any\", GroupTO.class);\n         Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n \n         List<PropagationTask> tasks =\n-                propagationManager.getGroupCreateTasks(created, subject.getVirAttrs(), excludedResource);\n+                propagationManager.getGroupCreateTasks(created, any.getVirAttrs(), excludedResource);\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {"},{"sha":"f452ffd38af965fbcb440992cdf30cc34dcdb5c2","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupDeleteProcessor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -59,8 +59,8 @@ public class GroupDeleteProcessor implements Processor {\n \n     @Override\n     public void process(final Exchange exchange) throws Exception {\n-        Long subjectKey = exchange.getIn().getBody(Long.class);\n-        Group group = groupDAO.find(subjectKey);\n+        Long anyKey = exchange.getIn().getBody(Long.class);\n+        Group group = groupDAO.find(anyKey);\n \n         final List<PropagationTask> tasks = new ArrayList<>();\n "},{"sha":"7a2f455e38b3206b5c3bfc3587370a91fbf4e50d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupUpdateProcessor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -51,11 +51,11 @@ public class GroupUpdateProcessor implements Processor {\n     @Override\n     public void process(final Exchange exchange) {\n         WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n-        GroupMod subjectMod = exchange.getProperty(\"subjectMod\", GroupMod.class);\n+        GroupMod anyMod = exchange.getProperty(\"anyMod\", GroupMod.class);\n         Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n \n         List<PropagationTask> tasks = propagationManager.getGroupUpdateTasks(updated,\n-                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate(), excludedResources);\n+                anyMod.getVirAttrsToRemove(), anyMod.getVirAttrsToUpdate(), excludedResources);\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {"},{"sha":"f897f902d7a6f71c767a644fd8d5a2f913b4588e","filename":"ext/camel/provisioning-camel/src/main/resources/groupRoutes.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -21,7 +21,7 @@ under the License.\n      \n   <route id=\"createGroup\">\n     <from uri=\"direct:createGroup\"/>\n-    <setProperty propertyName=\"subject\">\n+    <setProperty propertyName=\"any\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n@@ -40,7 +40,7 @@ under the License.\n                \n   <route id=\"createGroupSync\">\n     <from uri=\"direct:createGroupInSync\"/>\n-    <setProperty propertyName=\"subject\">\n+    <setProperty propertyName=\"any\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n@@ -59,7 +59,7 @@ under the License.\n          \n   <route id=\"updateGroup\">\n     <from uri=\"direct:updateGroup\"/>\n-    <setProperty propertyName=\"subjectMod\">\n+    <setProperty propertyName=\"anyMod\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>"},{"sha":"b92d976ddae35a5f19b72af030546baba08a7fc3","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DoubleValueAnyTransformer.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueAnyTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueAnyTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueAnyTransformer.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -29,7 +29,7 @@\n /**\n  * Class for integration tests: transform (by making it double) any attribute value for defined schema.\n  */\n-public class DoubleValueAttributableTransformer implements AnyTransformer {\n+public class DoubleValueAnyTransformer implements AnyTransformer {\n \n     private static final String NAME = \"makeItDouble\";\n ","previous_filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DoubleValueAttributableTransformer.java"},{"sha":"8974c829e1b5cbadc6d6e45517d5237d356737ff","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSyncActions.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -39,20 +39,20 @@ public class TestSyncActions extends DefaultSyncActions {\n \n     @Override\n     public <T extends AnyTO> SyncDelta beforeProvision(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T subject)\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T any)\n             throws JobExecutionException {\n \n         AttrTO attrTO = null;\n-        for (int i = 0; i < subject.getPlainAttrs().size(); i++) {\n-            AttrTO plainAttr = CollectionUtils.get(subject.getPlainAttrs(), i);\n+        for (int i = 0; i < any.getPlainAttrs().size(); i++) {\n+            AttrTO plainAttr = CollectionUtils.get(any.getPlainAttrs(), i);\n             if (\"fullname\".equals(plainAttr.getSchema())) {\n                 attrTO = plainAttr;\n             }\n         }\n         if (attrTO == null) {\n             attrTO = new AttrTO();\n             attrTO.setSchema(\"fullname\");\n-            subject.getPlainAttrs().add(attrTO);\n+            any.getPlainAttrs().add(attrTO);\n         }\n         attrTO.getValues().clear();\n         attrTO.getValues().add(String.valueOf(counter++));\n@@ -62,10 +62,10 @@ public <T extends AnyTO> SyncDelta beforeProvision(\n \n     @Override\n     public <T extends AnyTO> SyncDelta beforeAssign(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T subject)\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T any)\n             throws JobExecutionException {\n \n-        if (subject instanceof UserTO && \"test2\".equals(UserTO.class.cast(subject).getUsername())) {\n+        if (any instanceof UserTO && \"test2\".equals(UserTO.class.cast(any).getUsername())) {\n             throw new IgnoreProvisionException();\n         }\n \n@@ -76,21 +76,21 @@ public <T extends AnyTO> SyncDelta beforeAssign(\n     public <T extends AnyTO, K extends AnyMod> SyncDelta beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,\n             final SyncDelta delta,\n-            final T subject,\n-            final K subjectMod) throws JobExecutionException {\n+            final T any,\n+            final K anyMod) throws JobExecutionException {\n \n-        subjectMod.getPlainAttrsToRemove().add(\"fullname\");\n+        anyMod.getPlainAttrsToRemove().add(\"fullname\");\n \n         AttrMod fullnameMod = null;\n-        for (AttrMod attrMod : subjectMod.getPlainAttrsToUpdate()) {\n+        for (AttrMod attrMod : anyMod.getPlainAttrsToUpdate()) {\n             if (\"fullname\".equals(attrMod.getSchema())) {\n                 fullnameMod = attrMod;\n             }\n         }\n         if (fullnameMod == null) {\n             fullnameMod = new AttrMod();\n             fullnameMod.setSchema(\"fullname\");\n-            subjectMod.getPlainAttrsToUpdate().add(fullnameMod);\n+            anyMod.getPlainAttrsToUpdate().add(fullnameMod);\n         }\n \n         fullnameMod.getValuesToBeAdded().clear();"},{"sha":"7ff308d4e14fa2c9b57c2245c9adcb0dd8f1848b","filename":"fit/core-reference/src/main/resources/logic.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-attributableTransformer=org.apache.syncope.fit.core.reference.DoubleValueAttributableTransformer\n+anyTransformer=org.apache.syncope.fit.core.reference.DoubleValueAnyTransformer\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler"},{"sha":"8005b241274a86d1c20bf853bc96270033d8a3a4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AuthenticationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -198,7 +198,7 @@ public void testUserSearch() {\n                 getService(UserService.class);\n \n         PagedResult<UserTO> matchedUsers = userService2.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"key\").query()).build());\n         assertNotNull(matchedUsers);\n         assertFalse(matchedUsers.getResult().isEmpty());\n@@ -217,7 +217,7 @@ public Long transform(final UserTO input) {\n         UserService userService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(UserService.class);\n \n         matchedUsers = userService3.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(\"/even/two\").\n+                SyncopeClient.getAnySearchQueryBuilder().realm(\"/even/two\").\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"loginDate\").query()).build());\n         assertNotNull(matchedUsers);\n         assertTrue(matchedUsers.getResult().isEmpty());"},{"sha":"5d75e7c4a75f2cc4159a0148565bdfb2585eb3c5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -660,7 +660,7 @@ public void issueSYNCOPE112() {\n             mapItem.setExtAttrName(\"uid\");\n             mapItem.setIntAttrName(\"userId\");\n             mapItem.setIntMappingType(IntMappingType.UserPlainSchema);\n-            mapItem.setAccountid(true);\n+            mapItem.setConnObjectKey(true);\n             mapping.setConnObjectKeyItem(mapItem);\n             // ----------------------------------------\n "},{"sha":"d0a4be19b2e01b6d88b3d274d36bd1eec40d654f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -149,7 +149,7 @@ public void delete() {\n     @Test\n     public void list() {\n         PagedResult<GroupTO> groupTOs =\n-                groupService.list(SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n+                groupService.list(SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n         assertNotNull(groupTOs);\n         assertTrue(groupTOs.getResult().size() >= 8);\n         for (GroupTO groupTO : groupTOs.getResult()) {\n@@ -546,14 +546,14 @@ public void anonymous() {\n         GroupService unauthenticated = clientFactory.createAnonymous().getService(GroupService.class);\n         try {\n             unauthenticated.\n-                    list(SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n+                    list(SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n             fail();\n         } catch (AccessControlException e) {\n             assertNotNull(e);\n         }\n \n         GroupService anonymous = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(GroupService.class);\n-        assertFalse(anonymous.list(SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+        assertFalse(anonymous.list(SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 build()).\n                 getResult().isEmpty());\n     }"},{"sha":"1f498ccdc440002b5a772280c76f6f2c25da64fe","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PushTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -291,7 +291,7 @@ public void issueSYNCOPE598() {\n             item.setIntMappingType(IntMappingType.GroupPlainSchema);\n             item.setExtAttrName(\"cn\");\n             item.setIntAttrName(newPlainSchemaTO.getKey());\n-            item.setAccountid(true);\n+            item.setConnObjectKey(true);\n             item.setPurpose(MappingPurpose.BOTH);\n             rmapping.setConnObjectKeyItem(item);\n "},{"sha":"2e6cf216b1cf12cabb22b6316876ff6e8d699967","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ResourceITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -86,7 +86,7 @@ private ResourceTO buildResourceTO(final String resourceName) {\n         item.setExtAttrName(\"fullname\");\n         item.setIntAttrName(\"cn\");\n         item.setIntMappingType(IntMappingType.UserPlainSchema);\n-        item.setAccountid(false);\n+        item.setConnObjectKey(false);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.add(item);\n \n@@ -138,15 +138,15 @@ public void createOverridingProps() {\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n         item.setIntMappingType(IntMappingType.UserId);\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n \n         item = new MappingItemTO();\n         item.setExtAttrName(\"fullname\");\n         item.setIntAttrName(\"cn\");\n         item.setIntMappingType(IntMappingType.UserPlainSchema);\n-        item.setAccountid(false);\n+        item.setConnObjectKey(false);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.add(item);\n \n@@ -191,7 +191,7 @@ public void createWithSingleMappingItem() {\n         MappingItemTO item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.UserId);\n         item.setExtAttrName(\"userId\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.PROPAGATION);\n         mapping.setConnObjectKeyItem(item);\n \n@@ -205,7 +205,7 @@ public void createWithSingleMappingItem() {\n         item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.GroupId);\n         item.setExtAttrName(\"groupId\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.SYNCHRONIZATION);\n         mapping.setConnObjectKeyItem(item);\n \n@@ -241,7 +241,7 @@ public void createWithInvalidMapping() {\n         MappingItemTO item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.UserId);\n         item.setExtAttrName(\"userId\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         mapping.setConnObjectKeyItem(item);\n \n         item = new MappingItemTO();\n@@ -277,7 +277,7 @@ public void createWithoutExtAttr() {\n         MappingItemTO item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.UserId);\n         item.setExtAttrName(\"userId\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         mapping.setConnObjectKeyItem(item);\n \n         item = new MappingItemTO();\n@@ -309,7 +309,7 @@ public void createWithPasswordPolicy() {\n         item.setExtAttrName(\"userId\");\n         item.setIntAttrName(\"userId\");\n         item.setIntMappingType(IntMappingType.UserPlainSchema);\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n \n@@ -374,7 +374,7 @@ public void update() {\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n         item.setIntMappingType(IntMappingType.UserId);\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n \n@@ -599,13 +599,13 @@ public void issueSYNCOPE493() {\n         MappingItemTO item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.UserId);\n         item.setExtAttrName(\"userId\");\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.PROPAGATION);\n         mapping.setConnObjectKeyItem(item);\n \n         MappingItemTO item2 = new MappingItemTO();\n         item2.setIntMappingType(IntMappingType.UserPlainSchema);\n-        item2.setAccountid(false);\n+        item2.setConnObjectKey(false);\n         item2.setIntAttrName(\"gender\");\n         item2.setExtAttrName(\"gender\");\n         item2.setPurpose(MappingPurpose.NONE);"},{"sha":"3f1eb0af27a1e8c1beb58c12b69b38a7e145d719","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SearchITCase.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -45,7 +45,7 @@ public class SearchITCase extends AbstractITCase {\n     public void searchUser() {\n         // LIKE\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().\n                         is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query()).build());\n         assertNotNull(matchedUsers);\n@@ -57,7 +57,7 @@ public void searchUser() {\n \n         // ISNULL\n         matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNull(\"loginDate\").query()).build());\n         assertNotNull(matchedUsers);\n         assertFalse(matchedUsers.getResult().isEmpty());\n@@ -75,7 +75,7 @@ public boolean evaluate(final UserTO user) {\n     @Test\n     public void searchByUsernameAndKey() {\n         PagedResult<UserTO> matchingUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().\n                         is(\"username\").equalTo(\"rossini\").and(\"key\").lessThan(2).query()).build());\n         assertNotNull(matchingUsers);\n@@ -87,7 +87,7 @@ public void searchByUsernameAndKey() {\n     @Test\n     public void searchByGroupNameAndKey() {\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().\n                         is(\"name\").equalTo(\"root\").and(\"key\").lessThan(2).query()).build());\n         assertNotNull(matchingGroups);\n@@ -99,7 +99,7 @@ public void searchByGroupNameAndKey() {\n     @Test\n     public void searchByGroup() {\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(1L).query()).\n                 build());\n         assertNotNull(matchedUsers);\n@@ -122,7 +122,7 @@ public void searchByDynGroup() {\n         assertNotNull(group);\n \n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(group.getKey()).query()).\n                 build());\n         assertNotNull(matchedUsers);\n@@ -140,7 +140,7 @@ public boolean evaluate(final UserTO user) {\n     @Test\n     public void searchByRole() {\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(3L).query()).\n                 build());\n         assertNotNull(matchedUsers);\n@@ -164,7 +164,7 @@ public void searchByDynRole() {\n         assertNotNull(role);\n \n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(role.getKey()).query()).\n                 build());\n         assertNotNull(matchedUsers);\n@@ -182,7 +182,7 @@ public boolean evaluate(final UserTO user) {\n     @Test\n     public void searchUserByResourceName() {\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().hasResources(RESOURCE_NAME_MAPPINGS2).query()).\n                 build());\n         assertNotNull(matchedUsers);\n@@ -201,7 +201,7 @@ public boolean evaluate(final UserTO user) {\n     public void paginatedSearch() {\n         // LIKE\n         PagedResult<UserTO> matchingUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().\n                         is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query()).page(1).size(2).build());\n         assertNotNull(matchingUsers);\n@@ -213,7 +213,7 @@ public void paginatedSearch() {\n \n         // ISNULL\n         matchingUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNull(\"loginDate\").query()).page(2).size(2).\n                 build());\n         assertNotNull(matchingUsers);\n@@ -222,18 +222,18 @@ public void paginatedSearch() {\n     }\n \n     @Test\n-    public void searchByBooleanSubjectCond() {\n+    public void searchByBooleanAnyCond() {\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"show\").equalTo(\"true\").query()).build());\n         assertNotNull(matchingGroups);\n         assertFalse(matchingGroups.getResult().isEmpty());\n     }\n \n     @Test\n-    public void searchByRelationshipSubjectCond() {\n+    public void searchByRelationshipAnyCond() {\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"userOwner\").equalTo(5).query()).build());\n         assertNotNull(matchingGroups);\n         assertEquals(1, matchingGroups.getResult().size());\n@@ -243,7 +243,7 @@ public void searchByRelationshipSubjectCond() {\n     @Test\n     public void nested() {\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(\"((fullname==*o*,fullname==*i*);$resources!=ws-target-resource-1)\").page(1).size(2).build());\n         assertNotNull(matchedUsers);\n \n@@ -256,7 +256,7 @@ public void nested() {\n     @Test\n     public void orderBy() {\n         PagedResult<UserTO> matchedUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"userId\").equalTo(\"*@apache.org\").query()).\n                 orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"status\").desc(\"firstname\").build()).build());\n         assertNotNull(matchedUsers);"},{"sha":"479c96fb3f2f4894f41a39b1a71f2b237f692548","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -156,7 +156,7 @@ public void sync() throws Exception {\n         // -----------------------------\n         try {\n             int usersPre = userService.list(\n-                    SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                    SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                     page(1).size(1).build()).getTotalCount();\n             assertNotNull(usersPre);\n \n@@ -212,7 +212,7 @@ public boolean evaluate(final AttrTO attributeTO) {\n \n             // check for sync results\n             int usersPost = userService.list(\n-                    SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                    SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                     page(1).size(1).build()).getTotalCount();\n             assertNotNull(usersPost);\n             assertEquals(usersPre + 8, usersPost);\n@@ -282,7 +282,7 @@ public void reconcileFromDB() {\n      */\n     private void ldapCleanup() {\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(\"testLDAPGroup\").query()).\n                 build());\n         if (matchingGroups.getSize() > 0) {\n@@ -294,7 +294,7 @@ private void ldapCleanup() {\n             }\n         }\n         PagedResult<UserTO> matchingUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"syncFromLDAP\").query()).\n                 build());\n         if (matchingUsers.getSize() > 0) {\n@@ -322,14 +322,14 @@ public void reconcileFromLDAP() {\n \n         // 2. verify that synchronized group is found, with expected attributes\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(\"testLDAPGroup\").query()).\n                 build());\n         assertNotNull(matchingGroups);\n         assertEquals(1, matchingGroups.getResult().size());\n \n         PagedResult<UserTO> matchingUsers = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"syncFromLDAP\").query()).\n                 build());\n         assertNotNull(matchingUsers);\n@@ -352,7 +352,7 @@ public void reconcileFromLDAP() {\n \n         // 3. verify that LDAP group membership is propagated as Syncope group membership\n         PagedResult<UserTO> members = userService.search(\n-                SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(groupTO.getKey()).query()).build());\n         assertNotNull(members);\n         assertEquals(1, members.getResult().size());"},{"sha":"107c95337701db2b58b09813ae9f6c4c62a69a09","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -531,7 +531,7 @@ public void deleteByUsername() {\n     @Test\n     public void list() {\n         PagedResult<UserTO> users = userService.list(\n-                SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n+                SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).build());\n         assertNotNull(users);\n         assertFalse(users.getResult().isEmpty());\n \n@@ -543,7 +543,7 @@ public void list() {\n     @Test\n     public void paginatedList() {\n         PagedResult<UserTO> users = userService.list(\n-                SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).page(1).size(2).build());\n+                SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).page(1).size(2).build());\n         assertNotNull(users);\n         assertFalse(users.getResult().isEmpty());\n         assertEquals(2, users.getResult().size());\n@@ -552,13 +552,13 @@ public void paginatedList() {\n             assertNotNull(user);\n         }\n \n-        users = userService.list(SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+        users = userService.list(SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 page(2).size(2).build());\n         assertNotNull(users);\n         assertEquals(2, users.getPage());\n         assertEquals(2, users.getResult().size());\n \n-        users = userService.list(SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+        users = userService.list(SyncopeClient.getAnyListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 page(100).size(2).build());\n         assertNotNull(users);\n         assertTrue(users.getResult().isEmpty());"},{"sha":"a373df556746ca1adb21e6dd5ba2f44a2e939456","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -465,7 +465,7 @@ public void issueSYNCOPE453() {\n         item.setIntMappingType(IntMappingType.UserPlainSchema);\n         item.setExtAttrName(groupName);\n         item.setPurpose(MappingPurpose.PROPAGATION);\n-        item.setAccountid(true);\n+        item.setConnObjectKey(true);\n         mapping.setConnObjectKeyItem(item);\n \n         item = new MappingItemTO();"},{"sha":"436c0831cf9609061fb8530ac812496cff9e389d","filename":"src/site/xdoc/security.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a78a6f1f7624bb834ada494cff969ed36ca4a85b/src%2Fsite%2Fxdoc%2Fsecurity.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a78a6f1f7624bb834ada494cff969ed36ca4a85b/src%2Fsite%2Fxdoc%2Fsecurity.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Fsecurity.xml?ref=a78a6f1f7624bb834ada494cff969ed36ca4a85b","patch":"@@ -63,7 +63,7 @@ under the License.\n \n       <subsection name=\"CVE-2014-0111: Remote code execution by an authenticated administrator\">\t\n         <p>In the various places in which Apache Commons JEXL expressions are allowed (derived schema definition, \n-          user / group templates, account links of resource mappings) a malicious administrator can inject Java code \n+          user / group templates, connObjectLinks of resource mappings) a malicious administrator can inject Java code \n           that can be executed remotely by the JEE container running the Apache Syncope core.</p>\n \n         <p>"}]}