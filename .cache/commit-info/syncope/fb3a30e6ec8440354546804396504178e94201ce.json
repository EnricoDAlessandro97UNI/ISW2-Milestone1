{"sha":"fb3a30e6ec8440354546804396504178e94201ce","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZiM2EzMGU2ZWM4NDQwMzU0NTQ2ODA0Mzk2NTA0MTc4ZTk0MjAxY2U=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-20T13:38:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-20T13:38:05Z"},"message":"[SYNCOPE-1281] Added the possibility to map privileges for propagation","tree":{"sha":"80f4ad443d1f2608e8430674ef75402ff69eacda","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/80f4ad443d1f2608e8430674ef75402ff69eacda"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fb3a30e6ec8440354546804396504178e94201ce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb3a30e6ec8440354546804396504178e94201ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fb3a30e6ec8440354546804396504178e94201ce","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb3a30e6ec8440354546804396504178e94201ce/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a413dbca5d69a18a76ba8fc2380fcbe40d4cfd02","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a413dbca5d69a18a76ba8fc2380fcbe40d4cfd02","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a413dbca5d69a18a76ba8fc2380fcbe40d4cfd02"}],"stats":{"total":360,"additions":328,"deletions":32},"files":[{"sha":"471e5490e9bffc92b524b4aeef82e9752ed6121f","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -352,11 +352,10 @@ public Recipients(final NotificationWrapper modelObject) {\n             recipientAttrName.setChoices(getSchemas());\n             recipientAttrName.addRequiredLabel();\n             recipientAttrName.setTitle(getString(\"intAttrNameInfo.help\")\n-                    + \"<div style=\\\"font-size: 10px;\\\">\"\n-                    + \"<code>groups[groupName].attribute</code>\\n\"\n-                    + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n-                    + \"<code>memberships[groupName].attribute</code>\\n\"\n-                    + \"</div>\", true);\n+                    + \"<code>groups[groupName].attribute</code>, \"\n+                    + \"<code>anyObjects[anyObjectName].attribute</code>, \"\n+                    + \"<code>memberships[groupName].attribute</code> or \"\n+                    + \"<code>privileges[applicationKey]</code>\", true);\n             add(recipientAttrName);\n \n             AjaxTextFieldPanel staticRecipientsFieldPanel ="},{"sha":"c35be6a033150718cc893db1746d6a31933815c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractMappingPanel.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -151,12 +151,11 @@ public AbstractMappingPanel(\n         mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n                 Model.<String>of(),\n                 Model.of(getString(\"intAttrNameInfo.help\")\n-                        + \"<div style=\\\"font-size: 10px;\\\">\"\n-                        + \"<code>groups[groupName].attribute</code>\\n\"\n-                        + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n-                        + \"<code>memberships[groupName].attribute</code>\\n\"\n-                        + \"</div>\"),\n-                new PopoverConfig().withHtml(true).withPlacement(TooltipConfig.Placement.bottom)) {\n+                        + \"<code>groups[groupName].attribute</code>, \"\n+                        + \"<code>anyObjects[anyObjectName].attribute</code>, \"\n+                        + \"<code>memberships[groupName].attribute</code> or \"\n+                        + \"<code>privileges[applicationKey]</code>\"),\n+                new PopoverConfig().withHtml(true).withPlacement(TooltipConfig.Placement.right)) {\n \n             private static final long serialVersionUID = -7867802555691605021L;\n "},{"sha":"1d093bcfe71d662c0221c835a6926160caa1a5c6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -67,7 +67,7 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlements\n audit=Audit\n connectors.confirm.reload=This request is potentially dangerous for running operations, continue?\n-intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects, memberships or privileges; for example:\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementations\n "},{"sha":"a4514ff885ac854fa311b6721c7d322fa2a82591","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -67,7 +67,7 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n-intAttrNameInfo.help=Oltre agli attributi auto-completati, \\u00e8 possibile fare riferimento anche a gruppi, any object e membership (se applicabile); ad esempio:\n+intAttrNameInfo.help=Oltre agli attributi auto-completati, \\u00e8 possibile fare riferimento anche a gruppi, any object, membership e privilegi; ad esempio:\n confirmGlobalLogout=Vuoi davvero procedere al logout globale?\n implementations=Implementazioni\n "},{"sha":"3d407518e574515612594cd664792e23becb5164","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -67,7 +67,7 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?\n-intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects, memberships or privileges; for example:\n confirmGlobalLogout=Do you really want to perform global logout?\n implementations=Implementa\\u00e7\\u00f5es\n "},{"sha":"e4cf8a2010ed8602ac6ad3b6ac73c00102281f53","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Role.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -44,5 +44,7 @@ public interface Role extends ProvidedKeyEntity {\n \n     boolean add(Privilege privilege);\n \n+    Set<? extends Privilege> getPrivileges(Application application);\n+\n     Set<? extends Privilege> getPrivileges();\n }"},{"sha":"756ce12ce6dddcb0b2f0d2f4edebb1a2faadf289","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAApplication.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAApplication.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -28,9 +28,11 @@\n import javax.persistence.Table;\n import org.apache.syncope.core.persistence.api.entity.Application;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.ApplicationCheck;\n \n @Entity\n @Table(name = JPAApplication.TABLE)\n+@ApplicationCheck\n public class JPAApplication extends AbstractProvidedKeyEntity implements Application {\n \n     private static final long serialVersionUID = -5951400197744722305L;"},{"sha":"d09bb1d1bb44279cf1b629acc155eb95be616293","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAPrivilege.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPrivilege.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPrivilege.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPrivilege.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -24,9 +24,11 @@\n import javax.persistence.Table;\n import org.apache.syncope.core.persistence.api.entity.Application;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.PrivilegeCheck;\n \n @Entity\n @Table(name = JPAPrivilege.TABLE)\n+@PrivilegeCheck\n public class JPAPrivilege extends AbstractProvidedKeyEntity implements Privilege {\n \n     private static final long serialVersionUID = -6479069294944858456L;"},{"sha":"4dbddbf441f15a5d7caa33b3bb9a6d086f5d761a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARole.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -22,6 +22,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n import javax.persistence.CollectionTable;\n@@ -36,6 +37,7 @@\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.validation.Valid;\n+import org.apache.syncope.core.persistence.api.entity.Application;\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.Role;\n@@ -146,6 +148,13 @@ public boolean add(final Privilege privilege) {\n         return privileges.add((JPAPrivilege) privilege);\n     }\n \n+    @Override\n+    public Set<? extends Privilege> getPrivileges(final Application application) {\n+        return privileges.stream().\n+                filter(privilege -> privilege.getApplication().equals(application)).\n+                collect(Collectors.toSet());\n+    }\n+\n     @Override\n     public Set<? extends Privilege> getPrivileges() {\n         return privileges;"},{"sha":"674a5b16492177efd4240d9234a6cd76c1ecbcd4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ApplicationCheck.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationCheck.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = ApplicationValidator.class)\n+@Documented\n+public @interface ApplicationCheck {\n+\n+    String message() default \"{org.apache.syncope.core.persistence.validation.application}\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+}"},{"sha":"7360021a4ee6e7baa9a2f7339afc47a98558d732","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ApplicationValidator.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FApplicationValidator.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.api.entity.Application;\n+\n+public class ApplicationValidator extends AbstractValidator<ApplicationCheck, Application> {\n+\n+    @Override\n+    public boolean isValid(final Application application, final ConstraintValidatorContext context) {\n+        context.disableDefaultConstraintViolation();\n+\n+        if (application.getKey() == null || !KEY_PATTERN.matcher(application.getKey()).matches()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidKey, \"Invalid application key\")).\n+                    addPropertyNode(\"key\").addConstraintViolation();\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+}"},{"sha":"aabc552822156eb38fdc80ae39299a0e192d0481","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PrivilegeCheck.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeCheck.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = PrivilegeValidator.class)\n+@Documented\n+public @interface PrivilegeCheck {\n+\n+    String message() default \"{org.apache.syncope.core.persistence.validation.privilege}\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+}"},{"sha":"6f035d84adb4fb26f1376d83629dc301948680b7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PrivilegeValidator.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPrivilegeValidator.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.api.entity.Privilege;\n+\n+public class PrivilegeValidator extends AbstractValidator<PrivilegeCheck, Privilege> {\n+\n+    @Override\n+    public boolean isValid(final Privilege privilege, final ConstraintValidatorContext context) {\n+        context.disableDefaultConstraintViolation();\n+\n+        if (privilege.getKey() == null || !KEY_PATTERN.matcher(privilege.getKey()).matches()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidKey, \"Invalid privilege key\")).\n+                    addPropertyNode(\"key\").addConstraintViolation();\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+}"},{"sha":"1c42ec9d570bb5efae32e6ae285da9ebcf1324db","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/IntAttrName.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -39,6 +39,8 @@ public class IntAttrName {\n \n     private String membershipOfGroup;\n \n+    private String privilegesOfApplication;\n+\n     public AnyTypeKind getAnyTypeKind() {\n         return anyTypeKind;\n     }\n@@ -95,6 +97,14 @@ public void setMembershipOfGroup(final String membershipOfGroup) {\n         this.membershipOfGroup = membershipOfGroup;\n     }\n \n+    public String getPrivilegesOfApplication() {\n+        return privilegesOfApplication;\n+    }\n+\n+    public void setPrivilegesOfApplication(final String privilegesOfApplication) {\n+        this.privilegesOfApplication = privilegesOfApplication;\n+    }\n+\n     @Override\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this, ToStringStyle.JSON_STYLE);"},{"sha":"2d42609a3b5b906a670840885b932de10f90e5f9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/IntAttrNameParser.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -35,6 +35,9 @@\n \n public class IntAttrNameParser {\n \n+    private static final Pattern PRIVILEGE_PATTERN = Pattern.compile(\n+            \"^privileges\\\\[(\" + SyncopeConstants.NAME_PATTERN + \")\\\\]\");\n+\n     private static final Pattern ENCLOSING_GROUP_PATTERN = Pattern.compile(\n             \"^groups\\\\[(\" + SyncopeConstants.NAME_PATTERN + \")\\\\]\\\\.(.+)\");\n \n@@ -92,11 +95,18 @@ private void setFieldOrSchemaName(\n     public IntAttrName parse(final String intAttrName, final AnyTypeKind provisionAnyTypeKind) throws ParseException {\n         IntAttrName result = new IntAttrName();\n \n+        Matcher matcher;\n         if (intAttrName.indexOf('.') == -1) {\n-            result.setAnyTypeKind(provisionAnyTypeKind);\n-            setFieldOrSchemaName(intAttrName, result.getAnyTypeKind(), result);\n+            matcher = PRIVILEGE_PATTERN.matcher(intAttrName);\n+            if (matcher.matches()) {\n+                result.setAnyTypeKind(AnyTypeKind.USER);\n+                result.setPrivilegesOfApplication(matcher.group(1));\n+            } else {\n+                result.setAnyTypeKind(provisionAnyTypeKind);\n+                setFieldOrSchemaName(intAttrName, result.getAnyTypeKind(), result);\n+            }\n         } else {\n-            Matcher matcher = ENCLOSING_GROUP_PATTERN.matcher(intAttrName);\n+            matcher = ENCLOSING_GROUP_PATTERN.matcher(intAttrName);\n             if (matcher.matches()) {\n                 result.setAnyTypeKind(AnyTypeKind.GROUP);\n                 result.setEnclosingGroup(matcher.group(1));"},{"sha":"aced10381b78bc9c5139c9ee4affec47f50ed70d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":40,"deletions":13,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -43,14 +43,17 @@\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.ApplicationDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n+import org.apache.syncope.core.persistence.api.entity.Application;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.GroupableRelatable;\n import org.apache.syncope.core.persistence.api.entity.Membership;\n@@ -111,6 +114,9 @@ public class MappingManagerImpl implements MappingManager {\n     @Autowired\n     private VirSchemaDAO virSchemaDAO;\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Autowired\n     private AnyObjectDAO anyObjectDAO;\n \n@@ -120,6 +126,9 @@ public class MappingManagerImpl implements MappingManager {\n     @Autowired\n     private RealmDAO realmDAO;\n \n+    @Autowired\n+    private ApplicationDAO applicationDAO;\n+\n     @Autowired\n     private DerAttrHandler derAttrHandler;\n \n@@ -526,7 +535,10 @@ public List<PlainAttrValue> getIntValues(\n                         attr = ((GroupableRelatable<?, ?, ?, ?, ?>) reference).getPlainAttr(\n                                 intAttrName.getSchemaName(), membership).orElse(null);\n                     }\n-                    if (attr != null) {\n+                    if (attr == null) {\n+                        LOG.warn(\"Invalid PlainSchema {} or PlainAttr not found for {}\",\n+                                intAttrName.getSchemaName(), reference);\n+                    } else {\n                         if (attr.getUniqueValue() != null) {\n                             values.add(anyUtils.clonePlainAttrValue(attr.getUniqueValue()));\n                         } else if (attr.getValues() != null) {\n@@ -537,13 +549,15 @@ public List<PlainAttrValue> getIntValues(\n \n                 case DERIVED:\n                     DerSchema derSchema = derSchemaDAO.find(intAttrName.getSchemaName());\n-                    if (derSchema != null) {\n-                        String value = membership == null\n+                    if (derSchema == null) {\n+                        LOG.warn(\"Invalid DerSchema: {}\", intAttrName.getSchemaName());\n+                    } else {\n+                        String derValue = membership == null\n                                 ? derAttrHandler.getValue(reference, derSchema)\n                                 : derAttrHandler.getValue(reference, membership, derSchema);\n-                        if (value != null) {\n+                        if (derValue != null) {\n                             PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                            attrValue.setStringValue(value);\n+                            attrValue.setStringValue(derValue);\n                             values.add(attrValue);\n                         }\n                     }\n@@ -554,26 +568,39 @@ public List<PlainAttrValue> getIntValues(\n                     transform = false;\n \n                     VirSchema virSchema = virSchemaDAO.find(intAttrName.getSchemaName());\n-                    if (virSchema != null) {\n+                    if (virSchema == null) {\n+                        LOG.warn(\"Invalid VirSchema: {}\", intAttrName.getSchemaName());\n+                    } else {\n                         LOG.debug(\"Expire entry cache {}-{}\", reference, intAttrName.getSchemaName());\n                         virAttrCache.expire(\n                                 reference.getType().getKey(), reference.getKey(), intAttrName.getSchemaName());\n \n                         List<String> virValues = membership == null\n                                 ? virAttrHandler.getValues(reference, virSchema)\n                                 : virAttrHandler.getValues(reference, membership, virSchema);\n-                        virValues.stream().\n-                                map(value -> {\n-                                    PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                                    attrValue.setStringValue(value);\n-                                    return attrValue;\n-                                }).\n-                                forEachOrdered(attrValue -> values.add(attrValue));\n+                        virValues.forEach(virValue -> {\n+                            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                            attrValue.setStringValue(virValue);\n+                            values.add(attrValue);\n+                        });\n                     }\n                     break;\n \n                 default:\n             }\n+        } else if (intAttrName.getPrivilegesOfApplication() != null && reference instanceof User) {\n+            Application application = applicationDAO.find(intAttrName.getPrivilegesOfApplication());\n+            if (application == null) {\n+                LOG.warn(\"Invalid application: {}\", intAttrName.getPrivilegesOfApplication());\n+            } else {\n+                userDAO.findAllRoles((User) reference).stream().\n+                        flatMap(role -> role.getPrivileges(application).stream()).\n+                        forEach(privilege -> {\n+                            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                            attrValue.setStringValue(privilege.getKey());\n+                            values.add(attrValue);\n+                        });\n+            }\n         }\n \n         LOG.debug(\"Internal values: {}\", values);"},{"sha":"1db8e5609497a04d4debe9b461d46b1ce1a6609d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -410,14 +410,19 @@ private void populateMapping(\n                     LOG.error(\"Invalid intAttrName '{}'\", itemTO.getIntAttrName(), e);\n                 }\n \n-                if (intAttrName == null || intAttrName.getSchemaType() == null && intAttrName.getField() == null) {\n+                if (intAttrName == null\n+                        || intAttrName.getSchemaType() == null && intAttrName.getField() == null\n+                        && intAttrName.getPrivilegesOfApplication() == null) {\n+\n                     LOG.error(\"'{}' not existing\", itemTO.getIntAttrName());\n                     invalidMapping.getElements().add(\"'\" + itemTO.getIntAttrName() + \"' not existing\");\n                 } else {\n                     boolean allowed = true;\n                     if (intAttrName.getSchemaType() != null\n                             && intAttrName.getEnclosingGroup() == null\n-                            && intAttrName.getRelatedAnyObject() == null) {\n+                            && intAttrName.getRelatedAnyObject() == null\n+                            && intAttrName.getPrivilegesOfApplication() == null) {\n+\n                         switch (intAttrName.getSchemaType()) {\n                             case PLAIN:\n                                 allowed = allowedSchemas.getPlainSchemas().contains(intAttrName.getSchemaName());\n@@ -492,6 +497,13 @@ private void populateMapping(\n                                     \"Only \" + MappingPurpose.PROPAGATION.name()\n                                     + \" allowed when referring to any objects\");\n                         }\n+                        if (intAttrName.getPrivilegesOfApplication() != null\n+                                && item.getPurpose() != MappingPurpose.PROPAGATION) {\n+\n+                            invalidMapping.getElements().add(\n+                                    \"Only \" + MappingPurpose.PROPAGATION.name()\n+                                    + \" allowed when referring to privileges\");\n+                        }\n                         if (intAttrName.getSchemaType() == SchemaType.DERIVED\n                                 && item.getPurpose() != MappingPurpose.PROPAGATION) {\n "},{"sha":"0316a1217936db4e8e7c2fee4488dc58ff0d569e","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/IntAttrNameParserTest.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -49,6 +49,7 @@ public void ownFields() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n \n         intAttrName = intAttrNameParser.parse(\"name\", AnyTypeKind.GROUP);\n         assertNotNull(intAttrName);\n@@ -60,6 +61,7 @@ public void ownFields() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n \n         intAttrName = intAttrNameParser.parse(\"userOwner\", AnyTypeKind.GROUP);\n         assertNotNull(intAttrName);\n@@ -71,6 +73,7 @@ public void ownFields() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n \n         intAttrName = intAttrNameParser.parse(\"name\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n@@ -89,6 +92,7 @@ public void ownSchema() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n \n         intAttrName = intAttrNameParser.parse(\"cn\", AnyTypeKind.ANY_OBJECT);\n         assertNotNull(intAttrName);\n@@ -99,6 +103,7 @@ public void ownSchema() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n \n         intAttrName = intAttrNameParser.parse(\"rvirtualdata\", AnyTypeKind.ANY_OBJECT);\n         assertNotNull(intAttrName);\n@@ -109,6 +114,7 @@ public void ownSchema() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n     }\n \n     @Test\n@@ -122,6 +128,7 @@ public void enclosingGroup() throws ParseException {\n         assertEquals(\"readers\", intAttrName.getEnclosingGroup());\n         assertNull(intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n     }\n \n     @Test\n@@ -135,6 +142,7 @@ public void relatedAnyObject() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertEquals(\"hp\", intAttrName.getRelatedAnyObject());\n         assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n     }\n \n     @Test\n@@ -148,6 +156,20 @@ public void membership() throws ParseException {\n         assertNull(intAttrName.getEnclosingGroup());\n         assertEquals(\"top\", intAttrName.getMembershipOfGroup());\n         assertNull(intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getPrivilegesOfApplication());\n+    }\n+\n+    @Test\n+    public void privileges() throws ParseException {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"privileges[mightyApp]\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertNull(intAttrName.getSchemaName());\n+        assertNull(intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+        assertEquals(\"mightyApp\", intAttrName.getPrivilegesOfApplication());\n     }\n \n     @Test"},{"sha":"834eb104978fb4170834bd475c076c5f656c8eac","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -29,16 +29,19 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.to.TaskTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.beans.ExecQuery;\n@@ -143,6 +146,41 @@ public void propagationJEXLTransformer() {\n         }\n     }\n \n+    @Test\n+    public void privileges() {\n+        ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n+        ldap.setKey(\"ldapWithPrivileges\");\n+\n+        ItemTO item = new ItemTO();\n+        item.setIntAttrName(\"privileges[mightyApp]\");\n+        item.setExtAttrName(\"businessCategory\");\n+        item.setPurpose(MappingPurpose.PROPAGATION);\n+\n+        ProvisionTO provision = ldap.getProvision(AnyTypeKind.USER.name()).get();\n+        provision.getVirSchemas().clear();\n+        provision.getMapping().add(item);\n+\n+        ldap = createResource(ldap);\n+\n+        try {\n+            UserTO user = UserITCase.getUniqueSampleTO(\"privilege@syncope.apache.org\");\n+            user.getResources().add(ldap.getKey());\n+            user.getRoles().add(\"Other\");\n+\n+            ProvisioningResult<UserTO> result = createUser(user);\n+            assertEquals(1, result.getPropagationStatuses().size());\n+            assertNotNull(result.getPropagationStatuses().get(0).getAfterObj());\n+\n+            AttrTO businessCategory =\n+                    result.getPropagationStatuses().get(0).getAfterObj().getAttr(\"businessCategory\").orElse(null);\n+            assertNotNull(businessCategory);\n+            assertEquals(1, businessCategory.getValues().size());\n+            assertEquals(\"postMighty\", businessCategory.getValues().get(0));\n+        } finally {\n+            resourceService.delete(ldap.getKey());\n+        }\n+    }\n+\n     @Test\n     public void issueSYNCOPE741() {\n         for (int i = 0; i < 3; i++) {"},{"sha":"3c54e42547d5e641e116c7de5443bdd9ce0f261b","filename":"src/main/asciidoc/reference-guide/concepts/externalresources.adoc","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb3a30e6ec8440354546804396504178e94201ce/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb3a30e6ec8440354546804396504178e94201ce/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc?ref=fb3a30e6ec8440354546804396504178e94201ce","patch":"@@ -110,6 +110,8 @@ specified by an expression matching one of the following models:\n name `anyObjectName`, if a relationship with the mapped entity exists\n ** `memberships[groupName].schema` - resolves to the attribute for the given `schema`, owned by the membership for group\n `groupName` of the mapped entity (user, any object), if such a membership exists\n+** `privileges[applicationKey]` - resolves to the list of privileges, related to the given <<application,applicaton>>,\n+owned by the mapped entity (which can only be user, in this case)\n * external attribute - the name of the attribute on the Identity Store\n * transformers - http://commons.apache.org/proper/commons-jexl/[JEXL^] expression or Java class implementing\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]"}]}