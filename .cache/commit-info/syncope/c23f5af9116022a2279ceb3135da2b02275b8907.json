{"sha":"c23f5af9116022a2279ceb3135da2b02275b8907","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMyM2Y1YWY5MTE2MDIyYTIyNzljZWIzMTM1ZGEyYjAyMjc1Yjg5MDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-29T10:37:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-29T10:37:55Z"},"message":"[SYNCOPE-122] Making the whole process more robust\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439821 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"da40e7a4460edd47e03e6f3a4eb79fffd3b7569a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/da40e7a4460edd47e03e6f3a4eb79fffd3b7569a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c23f5af9116022a2279ceb3135da2b02275b8907","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c23f5af9116022a2279ceb3135da2b02275b8907","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c23f5af9116022a2279ceb3135da2b02275b8907","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c23f5af9116022a2279ceb3135da2b02275b8907/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"027a007b3545d784c71e80286fea71b651030ed2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/027a007b3545d784c71e80286fea71b651030ed2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/027a007b3545d784c71e80286fea71b651030ed2"}],"stats":{"total":43,"additions":26,"deletions":17},"files":[{"sha":"1de6170a2cfcdb3109632feb0e3c83fef5c01f10","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":18,"deletions":14,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c23f5af9116022a2279ceb3135da2b02275b8907/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c23f5af9116022a2279ceb3135da2b02275b8907/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=c23f5af9116022a2279ceb3135da2b02275b8907","patch":"@@ -139,7 +139,7 @@ public Boolean verifyPasswordInternal(String username,\n     public ModelAndView count() {\n         return new ModelAndView().addObject(countInternal());\n     }\n-    \n+\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public int countInternal() {\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n@@ -285,7 +285,7 @@ public UserTO create(final HttpServletResponse response, @RequestBody final User\n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return savedTO;\n     }\n-    \n+\n     public UserTO createInternal(final UserTO userTO) {\n         LOG.debug(\"User create called with {}\", userTO);\n \n@@ -337,35 +337,39 @@ public UserTO update(@RequestBody final UserMod userMod)\n         WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n \n         // 2. propagate password update only to requested resources\n-        List<PropagationTask> tasks;\n+        List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n         if (userMod.getPwdPropRequest() == null) {\n             // 2a. no specific password propagation request: generate propagation tasks for any resource associated\n             tasks = propagationManager.getUserUpdateTaskIds(updated, changedPwd,\n                     userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated());\n         } else {\n-            // 2b. generate the propagation task list in two phases: first the ones containing password, \n+            // 2b. generate the propagation task list in two phases: first the ones containing password,\n             // the the rest (with no password)\n             final PropagationByResource origPropByRes = new PropagationByResource();\n             origPropByRes.merge(updated.getPropByRes());\n-            SyncopeUser user = dataBinder.getUserFromId(updated.getResult().getKey());\n-            origPropByRes.addAll(ResourceOperation.UPDATE, user.getResourceNames());\n-            origPropByRes.purge();\n \n+            Set<String> pwdResourceNames = userMod.getPwdPropRequest().getResources();\n+            SyncopeUser user = dataBinder.getUserFromId(updated.getResult().getKey());\n+            pwdResourceNames.retainAll(user.getResourceNames());\n             final PropagationByResource pwdPropByRes = new PropagationByResource();\n-            pwdPropByRes.merge(origPropByRes);\n-            pwdPropByRes.retainAll(userMod.getPwdPropRequest().getResources());\n+            pwdPropByRes.addAll(ResourceOperation.UPDATE, pwdResourceNames);\n             updated.setPropByRes(pwdPropByRes);\n \n-            tasks = propagationManager.getUserUpdateTaskIds(updated, changedPwd,\n-                    userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated());\n+            if (!pwdPropByRes.isEmpty()) {\n+                tasks.addAll(propagationManager.getUserUpdateTaskIds(updated, changedPwd,\n+                        userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated()));\n+            }\n \n             final PropagationByResource nonPwdPropByRes = new PropagationByResource();\n             nonPwdPropByRes.merge(origPropByRes);\n-            nonPwdPropByRes.removeAll(userMod.getPwdPropRequest().getResources());\n+            nonPwdPropByRes.removeAll(pwdResourceNames);\n+            nonPwdPropByRes.purge();\n             updated.setPropByRes(nonPwdPropByRes);\n \n-            tasks.addAll(propagationManager.getUserUpdateTaskIds(updated, null,\n-                    userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated()));\n+            if (!nonPwdPropByRes.isEmpty()) {\n+                tasks.addAll(propagationManager.getUserUpdateTaskIds(updated, null,\n+                        userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated()));\n+            }\n \n             updated.setPropByRes(origPropByRes);\n         }"},{"sha":"232be6d3d0a9726663f3176cf6cc912fdbd4ecc5","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c23f5af9116022a2279ceb3135da2b02275b8907/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c23f5af9116022a2279ceb3135da2b02275b8907/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=c23f5af9116022a2279ceb3135da2b02275b8907","patch":"@@ -1916,18 +1916,23 @@ public void issueSYNCOPE122() {\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n-        // 3a. verify that password hasn't changed on Syncope\n+        // 3a. Chech that only a single propagation took place\n+        assertNotNull(userTO.getPropagationStatusTOs());\n+        assertEquals(1, userTO.getPropagationStatusTOs().size());\n+        assertEquals(\"resource-testdb\", userTO.getPropagationStatusTOs().iterator().next().getResource());\n+        \n+        // 3b. verify that password hasn't changed on Syncope\n         assertEquals(pwdOnSyncope, userTO.getPassword());\n \n-        // 3b. verify that password *has* changed on testdb\n+        // 3c. verify that password *has* changed on testdb\n         userOnDb = resourceService.getConnector(\"resource-testdb\", AttributableType.USER, userTO.getUsername());\n         final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n-        // 3c. verify that password hasn't changed on testdb2\n+        // 3d. verify that password hasn't changed on testdb2\n         userOnDb2 = resourceService.getConnector(\"resource-testdb2\", AttributableType.USER, userTO.getUsername());\n         final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);"}]}