{"sha":"d7a95a9126bf0eaeec27d82bfa3db11a07996ba9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ3YTk1YTkxMjZiZjBlYWVlYzI3ZDgyYmZhM2RiMTFhMDc5OTZiYTk=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-04-23T15:29:15Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-04-23T15:29:15Z"},"message":"sync task status fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1471010 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7a9dc0202234317ddd0a2286e0d115f5e10a6e98","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7a9dc0202234317ddd0a2286e0d115f5e10a6e98"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3513e543a283f241c78f867184c38eb23d1436b1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3513e543a283f241c78f867184c38eb23d1436b1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3513e543a283f241c78f867184c38eb23d1436b1"}],"stats":{"total":18,"additions":10,"deletions":8},"files":[{"sha":"02231ec40bff518aefb5ed3993e7a2d79a3a511f","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7a95a9126bf0eaeec27d82bfa3db11a07996ba9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=d7a95a9126bf0eaeec27d82bfa3db11a07996ba9","patch":"@@ -367,8 +367,7 @@ protected List<Long> findByAttributableSearch(\n \n         final Map<String, Attribute> extValues = new HashMap<String, Attribute>();\n \n-        for (AbstractMappingItem item\n-                : attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)) {\n+        for (AbstractMappingItem item : attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)) {\n \n             extValues.put(item.getIntAttrName(), connObj.getAttributeByName(item.getExtAttrName()));\n         }\n@@ -512,6 +511,7 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n         final SyncResult result = new SyncResult();\n         result.setOperation(ResourceOperation.CREATE);\n         result.setSubjectType(attrUtil.getType());\n+        result.setStatus(SyncResult.Status.SUCCESS);\n \n         AbstractAttributableTO subjectTO = connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n \n@@ -525,7 +525,6 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n             if (subjectTO instanceof RoleTO) {\n                 result.setName(((RoleTO) subjectTO).getName());\n             }\n-            result.setStatus(SyncResult.Status.SUCCESS);\n         } else {\n             try {\n                 if (AttributableType.USER == attrUtil.getType()) {\n@@ -565,8 +564,10 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                     result.setId(created.getResult());\n                     result.setName(((RoleTO) subjectTO).getName());\n                 }\n-                result.setStatus(SyncResult.Status.SUCCESS);\n+\n             } catch (PropagationException e) {\n+                // A propagation failure doesn't imply a synchronization failure.\n+                // The propagation exception status will be reported into the propagation task execution.\n                 LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n             } catch (Exception e) {\n                 result.setStatus(SyncResult.Status.FAILURE);\n@@ -716,9 +717,8 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                     result.setName(updated.getName());\n                 }\n             } catch (PropagationException e) {\n-                result.setStatus(SyncResult.Status.FAILURE);\n-                result.setMessage(delta.getUid().getUidValue() + \"updated but not propagated\\n\" + e.getMessage());\n-\n+                // A propagation failure doesn't imply a synchronization failure.\n+                // The propagation exception status will be reported into the propagation task execution.\n                 LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n             } catch (Exception e) {\n                 result.setStatus(SyncResult.Status.FAILURE);\n@@ -778,6 +778,8 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                         }\n                         taskExecutor.execute(tasks);\n                     } catch (Exception e) {\n+                        // A propagation failure doesn't imply a synchronization failure.\n+                        // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate user \" + id, e);\n                     }\n \n@@ -789,7 +791,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                             rwfAdapter.delete(id);\n                         }\n                     } catch (Exception e) {\n-                        result.setStatus(SyncResult.Status.SUCCESS);\n+                        result.setStatus(SyncResult.Status.FAILURE);\n                         result.setMessage(e.getMessage());\n                         LOG.error(\"Could not delete {} {}\", attrUtil.getType(), id, e);\n                     }"}]}