{"sha":"8ce27484a557ea7ee07ffa27134aaeb4215fc172","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjZTI3NDg0YTU1N2VhN2VlMDdmZmEyNzEzNGFhZWI0MjE1ZmMxNzI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-31T15:13:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-31T15:19:55Z"},"message":"Cleaning up log messages","tree":{"sha":"e70c5ccf1c2feaa681ad5f1bfedbf730bfeffec7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e70c5ccf1c2feaa681ad5f1bfedbf730bfeffec7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8ce27484a557ea7ee07ffa27134aaeb4215fc172","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ce27484a557ea7ee07ffa27134aaeb4215fc172","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8ce27484a557ea7ee07ffa27134aaeb4215fc172","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ce27484a557ea7ee07ffa27134aaeb4215fc172/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"58983df16678167db27f0a5c0b32e0bd3fc985a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58983df16678167db27f0a5c0b32e0bd3fc985a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/58983df16678167db27f0a5c0b32e0bd3fc985a7"}],"stats":{"total":22,"additions":11,"deletions":11},"files":[{"sha":"1d64ace0c02620e9c54e8488b500c4e4b0581876","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ce27484a557ea7ee07ffa27134aaeb4215fc172/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ce27484a557ea7ee07ffa27134aaeb4215fc172/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=8ce27484a557ea7ee07ffa27134aaeb4215fc172","patch":"@@ -434,6 +434,10 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n \n         Assertion assertion = validatorResponse.getOpensamlAssertion();\n         NameID nameID = assertion.getSubject().getNameID();\n+        if (nameID == null) {\n+            throw new IllegalArgumentException(\"NameID not found\");\n+        }\n+\n         String keyValue = null;\n         if (StringUtils.isNotBlank(nameID.getValue())\n                 && idp.getConnObjectKeyItem().getExtAttrName().equals(\"NameID\")) {\n@@ -474,31 +478,27 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n                 }\n             }\n         }\n-        if (nameID == null) {\n-            throw new IllegalArgumentException(\"NameID not found\");\n-        }\n-        final String nameIDValue = nameID.getValue();\n \n         final List<String> matchingUsers = keyValue == null\n                 ? Collections.<String>emptyList()\n                 : userManager.findMatchingUser(keyValue, idp.getConnObjectKeyItem());\n-        LOG.debug(\"Found {} matching users for NameID {}\", matchingUsers.size(), nameID.getValue());\n+        LOG.debug(\"Found {} matching users for {}\", matchingUsers.size(), keyValue);\n \n         String username;\n         if (matchingUsers.isEmpty()) {\n             if (idp.isCreateUnmatching()) {\n-                LOG.debug(\"No user matching NameID {}, about to create\", nameID.getValue());\n+                LOG.debug(\"No user matching {}, about to create\", keyValue);\n \n-                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(), ()\n-                        -> userManager.create(idp, responseTO, nameIDValue));\n+                username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n+                        () -> userManager.create(idp, responseTO, nameID.getValue()));\n             } else {\n-                throw new NotFoundException(\"User matching the provided NameID value \" + nameID.getValue());\n+                throw new NotFoundException(\"User matching the provided value \" + keyValue);\n             }\n         } else if (matchingUsers.size() > 1) {\n-            throw new IllegalArgumentException(\"Several users match the provided NameID value \" + nameID.getValue());\n+            throw new IllegalArgumentException(\"Several users match the provided value \" + keyValue);\n         } else {\n             if (idp.isUpdateMatching()) {\n-                LOG.debug(\"About to update {} for NameID {}\", matchingUsers.get(0), nameID.getValue());\n+                LOG.debug(\"About to update {} for {}\", matchingUsers.get(0), keyValue);\n \n                 username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(), ()\n                         -> userManager.update(matchingUsers.get(0), idp, responseTO));"}]}