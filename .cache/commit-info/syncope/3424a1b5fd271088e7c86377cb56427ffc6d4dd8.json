{"sha":"3424a1b5fd271088e7c86377cb56427ffc6d4dd8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0MjRhMWI1ZmQyNzEwODhlN2M4NjM3N2NiNTY0MjdmZmM2ZDRkZDg=","commit":{"author":{"name":"rohan julka","email":"rohanjulka19@gmail.com","date":"2018-08-14T07:20:14Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-08-21T15:20:33Z"},"message":"[SYNCOPE-1220] Support Groovy implementation in the Netbeans plugin, This closes #82","tree":{"sha":"6b281154d44e71304fc2ee15456758edb974c4a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6b281154d44e71304fc2ee15456758edb974c4a0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3424a1b5fd271088e7c86377cb56427ffc6d4dd8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3424a1b5fd271088e7c86377cb56427ffc6d4dd8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3424a1b5fd271088e7c86377cb56427ffc6d4dd8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/comments","author":{"login":"rohanjulka19","id":19673968,"node_id":"MDQ6VXNlcjE5NjczOTY4","avatar_url":"https://avatars.githubusercontent.com/u/19673968?v=4","gravatar_id":"","url":"https://api.github.com/users/rohanjulka19","html_url":"https://github.com/rohanjulka19","followers_url":"https://api.github.com/users/rohanjulka19/followers","following_url":"https://api.github.com/users/rohanjulka19/following{/other_user}","gists_url":"https://api.github.com/users/rohanjulka19/gists{/gist_id}","starred_url":"https://api.github.com/users/rohanjulka19/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rohanjulka19/subscriptions","organizations_url":"https://api.github.com/users/rohanjulka19/orgs","repos_url":"https://api.github.com/users/rohanjulka19/repos","events_url":"https://api.github.com/users/rohanjulka19/events{/privacy}","received_events_url":"https://api.github.com/users/rohanjulka19/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"12f1d82f828289afcaa2c54bf204721423e6b711","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/12f1d82f828289afcaa2c54bf204721423e6b711","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/12f1d82f828289afcaa2c54bf204721423e6b711"}],"stats":{"total":982,"additions":893,"deletions":89},"files":[{"sha":"26d26195ab28152f10e8e69908d194fded079ebc","filename":"ide/netbeans/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fpom.xml?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -176,6 +176,7 @@ under the License.\n         <filtering>false</filtering>\n         <includes>\n           <include>org/apache/syncope/**/*.png</include>\n+          <include>org/apache/syncope/**/*.groovy</include>\n         </includes>\n       </resource>\n "},{"sha":"c1359bf3098cfda3577f069ff96a69e1c2679b8e","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/PluginConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FPluginConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FPluginConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FPluginConstants.java?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -27,6 +27,8 @@ public final class PluginConstants {\n \n     public static final String REPORT_XSLTS = \"Report XSLTs\";\n \n+    public static final String GROOVY_SCRIPTS = \"Groovy Scripts\";\n+\n     public static final String[] MAIL_TEMPLATE_FORMATS = {\n         MailTemplateFormat.HTML.name(), MailTemplateFormat.TEXT.name() };\n "},{"sha":"51df938d05afacfefc1a4b6a6b11cdab67b29013","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/ResourceConnector.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FResourceConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FResourceConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2FResourceConnector.java?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.ide.netbeans.service.MailTemplateManagerService;\n import org.apache.syncope.ide.netbeans.service.ReportTemplateManagerService;\n+import org.apache.syncope.ide.netbeans.service.ImplementationManagerService;\n import org.apache.syncope.ide.netbeans.view.ResourceExplorerTopComponent;\n import org.openide.util.NbPreferences;\n \n@@ -32,10 +33,14 @@ public final class ResourceConnector {\n \n     private static ReportTemplateManagerService REPORT_TEMPLATE_MANAGER_SERVICE;\n \n+     private static ImplementationManagerService IMPLEMENTATION_MANAGER_SERVICE;\n+\n     private static final Object MAIL_TEMPLATE_MONITOR = new Object();\n \n     private static final Object REPORT_TEMPLATE_MONITOR = new Object();\n \n+    private static final Object IMPLEMENTATION_MONITOR = new Object();\n+\n     private ResourceConnector() {\n     }\n \n@@ -61,6 +66,17 @@ public static ReportTemplateManagerService getReportTemplateManagerService() thr\n         return REPORT_TEMPLATE_MANAGER_SERVICE;\n     }\n \n+    public static ImplementationManagerService getImplementationManagerService() throws IOException {\n+        synchronized (IMPLEMENTATION_MONITOR) {\n+            ConnectionParams connParams = getConnectionParams();\n+            IMPLEMENTATION_MANAGER_SERVICE = new ImplementationManagerService(\n+                    connParams.getUrl(),\n+                    connParams.getUsername(),\n+                    connParams.getPassword());\n+        }\n+        return IMPLEMENTATION_MANAGER_SERVICE;\n+    }\n+    \n     public static ConnectionParams getConnectionParams() {\n         Preferences prefs = NbPreferences.forModule(ResourceExplorerTopComponent.class);\n         return ConnectionParams.builder()"},{"sha":"b2ccfb87af4e82c35a79f2f20a2c01cdfa5cadba","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/service/ImplementationManagerService.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FImplementationManagerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FImplementationManagerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fservice%2FImplementationManagerService.java?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.netbeans.service;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.syncope.common.rest.api.service.ImplementationService;\n+\n+public class ImplementationManagerService {\n+\n+    private final ImplementationService service ;\n+\n+    public ImplementationManagerService(final String url, final String userName, final String password) {\n+        SyncopeClient syncopeClient = new SyncopeClientFactoryBean().setAddress(url).create(userName, password);\n+        service = syncopeClient.getService(ImplementationService.class);\n+    }\n+ \n+    public List<ImplementationTO> list(final ImplementationType type) {\n+        return service.list(type);\n+    } \n+\n+    public ImplementationTO read(final ImplementationType type , final String key) {\n+        return service.read(type, key);\n+    }\n+\n+    public boolean create(final ImplementationTO implementationTO) {\n+        return Response.Status.CREATED.getStatusCode() == service.create(implementationTO).getStatus();\n+    }\n+\n+    public boolean delete(final ImplementationType type , final String key) {\n+        return Response.Status.NO_CONTENT.getStatusCode() == service.delete(type, key).getStatus();\n+    }\n+\n+    public boolean update(final ImplementationTO implementationTO) {\n+       return Response.Status.NO_CONTENT.getStatusCode() == service.update(implementationTO).getStatus();\n+    }\n+}"},{"sha":"1edbae09fc8d5f234133b623f5889d4d99823cc1","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/view/ResourceExplorerTopComponent.java","status":"modified","additions":211,"deletions":89,"changes":300,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -47,13 +47,16 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.to.ReportTemplateTO;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.ide.netbeans.PluginConstants;\n import org.apache.syncope.ide.netbeans.ResourceConnector;\n import org.apache.syncope.ide.netbeans.service.MailTemplateManagerService;\n import org.apache.syncope.ide.netbeans.service.ReportTemplateManagerService;\n+import org.apache.syncope.ide.netbeans.service.ImplementationManagerService;\n import org.netbeans.api.editor.EditorRegistry;\n import org.netbeans.api.progress.ProgressHandle;\n import org.netbeans.api.settings.ConvertAsProperties;\n@@ -106,10 +109,14 @@ public final class ResourceExplorerTopComponent extends TopComponent {\n \n     private final DefaultMutableTreeNode reportXslts;\n \n+    private final DefaultMutableTreeNode groovyScripts;\n+\n     private MailTemplateManagerService mailTemplateManagerService;\n \n     private ReportTemplateManagerService reportTemplateManagerService;\n \n+    private ImplementationManagerService implementationManagerService;\n+\n     private Charset encodingPattern;\n \n     public ResourceExplorerTopComponent() {\n@@ -123,6 +130,7 @@ public ResourceExplorerTopComponent() {\n         visibleRoot = new DefaultMutableTreeNode(PluginConstants.ROOT_NAME);\n         mailTemplates = new DefaultMutableTreeNode(PluginConstants.MAIL_TEMPLATES);\n         reportXslts = new DefaultMutableTreeNode(PluginConstants.REPORT_XSLTS);\n+        groovyScripts = new DefaultMutableTreeNode(PluginConstants.GROOVY_SCRIPTS);\n         root.add(visibleRoot);\n         initTemplatesTree();\n     }\n@@ -175,29 +183,43 @@ private void resourceExplorerTreeMouseClicked(final java.awt.event.MouseEvent ev\n             String parentNodeName = parentNode == null ? null : String.valueOf(parentNode.getUserObject());\n             if (selectedNode.isLeaf() && StringUtils.isNotBlank(parentNodeName)) {\n                 String leafNodeName = (String) selectedNode.getUserObject();\n+                DefaultMutableTreeNode grandParentNode = (DefaultMutableTreeNode) parentNode.getParent();\n+                String grandParentNodeName = (String) grandParentNode.getUserObject();\n                 try {\n                     if (PluginConstants.MAIL_TEMPLATES.equals(parentNodeName)) {\n                         openMailEditor(leafNodeName);\n                     } else if (PluginConstants.REPORT_XSLTS.equals(parentNodeName)) {\n                         openReportEditor(leafNodeName);\n+                    } else if (PluginConstants.GROOVY_SCRIPTS.equals(grandParentNodeName)) {\n+                        openScriptEditor(leafNodeName , parentNodeName);\n                     }\n-                } catch (IOException e) {\n-                    Exceptions.printStackTrace(e);\n-                }\n+                }  catch (SyncopeClientException ex) {\n+                JOptionPane.showMessageDialog(null, ex.getMessage(), \"Syncope Error\", JOptionPane.ERROR_MESSAGE);\n+                } catch (IOException ex) {\n+                JOptionPane.showMessageDialog(null , ex.getMessage(), \"Error\" , JOptionPane.ERROR_MESSAGE);\n+                } catch (Exception ex) {\n+                LOG.info(\"The Exception is\" + ex);\n+                getRefreshServerDetails().setVisible(true);\n+                }               \n             }\n         } else if (evt.getButton() == MouseEvent.BUTTON3 && evt.getClickCount() == 1) {\n             DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) resourceExplorerTree.\n                     getLastSelectedPathComponent();\n+            DefaultMutableTreeNode parent = (DefaultMutableTreeNode) selectedNode.getParent();\n+            String parentNodeName = (String) parent.getUserObject();\n             String selectedNodeName = (String) selectedNode.getUserObject();\n             if (selectedNode.isLeaf()\n                     && !PluginConstants.ROOT_NAME.equals(selectedNodeName)\n                     && !PluginConstants.MAIL_TEMPLATES.equals(selectedNodeName)\n-                    && !PluginConstants.REPORT_XSLTS.equals(selectedNodeName)) {\n+                    && !PluginConstants.REPORT_XSLTS.equals(selectedNodeName)\n+                    && !PluginConstants.GROOVY_SCRIPTS.equals(parentNodeName)) {\n                 leafRightClickAction(evt, selectedNode);\n             } else if (PluginConstants.MAIL_TEMPLATES.equals(selectedNodeName)) {\n                 folderRightClickAction(evt, mailTemplates);\n             } else if (PluginConstants.REPORT_XSLTS.equals(selectedNodeName)) {\n                 folderRightClickAction(evt, reportXslts);\n+            } else if (PluginConstants.GROOVY_SCRIPTS.equals(parentNodeName)) {\n+                folderRightClickAction(evt, selectedNode);\n             } else if (PluginConstants.ROOT_NAME.equals(selectedNodeName)) {\n                 rootRightClickAction(evt);\n             }\n@@ -223,6 +245,7 @@ public void componentOpened() {\n         try {\n             mailTemplateManagerService = ResourceConnector.getMailTemplateManagerService();\n             reportTemplateManagerService = ResourceConnector.getReportTemplateManagerService();\n+            implementationManagerService = ResourceConnector.getImplementationManagerService();\n             // init tree, because on close it is reset\n             initTemplatesTree();\n             // Load templates\n@@ -244,42 +267,24 @@ public boolean cancel() {\n                     progr.progress(\"Loading Templates.\");\n                     addMailTemplates();\n                     addReportXslts();\n+                    addGroovyScripts();\n                     progr.finish();\n                 }\n \n-            };\n+           }; \n             REQUEST_PROCESSOR.post(tsk);\n-        } catch (Exception e) {\n+        } catch (IOException e) {\n             JOptionPane.showMessageDialog(null, e.getMessage(), \"Generic Error\", JOptionPane.ERROR_MESSAGE);\n             ServerDetailsView serverDetails = getRefreshServerDetails();\n+        } catch (Exception ex) {\n+            getRefreshServerDetails().setVisible(true);\n         }\n \n-        Runnable tsk = new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                final ProgressHandle progr = ProgressHandle.createHandle(\"Loading Templates\", new Cancellable() {\n-\n-                    @Override\n-                    public boolean cancel() {\n-                        return true;\n-                    }\n-                });\n-\n-                progr.start();\n-                progr.progress(\"Loading Templates.\");\n-                addMailTemplates();\n-                addReportXslts();\n-                progr.finish();\n-            }\n-\n-        };\n-        RequestProcessor.getDefault().post(tsk);\n     }\n-\n     @Override\n     public void componentClosed() {\n-        // TODO add custom code on component closing\n+        // TODO add custom code on component\n+        resetTree();\n     }\n \n     void writeProperties(final java.util.Properties p) {\n@@ -312,6 +317,26 @@ private void addReportXslts() {\n         treeModel.reload();\n     }\n \n+    private void addGroovyScripts() {\n+        for (ImplementationType type : ImplementationType.values()) {\n+            String implType = type.toString();\n+            DefaultMutableTreeNode tempNode = new DefaultMutableTreeNode(implType.toString());\n+           if (implType.equals(\"JWT_SSO_PROVIDER\") || implType.equals(\"AUDIT_APPENDER\")) {\n+                continue ;\n+           }\n+            List<ImplementationTO> scripts = implementationManagerService.list(type);\n+            for (ImplementationTO script : scripts) {\n+                 if (script.getEngine() == ImplementationEngine.GROOVY) {\n+                    tempNode.add(new DefaultMutableTreeNode(\n+                        script.getKey()));\n+                }\n+            }\n+            groovyScripts.add(tempNode);\n+        }\n+\n+        treeModel.reload();\n+    }\n+\n     private void rootRightClickAction(final MouseEvent evt) {\n         JPopupMenu menu = new JPopupMenu();\n         JMenuItem refreshItem = new JMenuItem(\"Refresh Templates\");\n@@ -363,11 +388,17 @@ private void folderRightClickAction(final MouseEvent evt,\n \n             @Override\n             public void actionPerformed(final ActionEvent e) {\n-                String name = JOptionPane.showInputDialog(\"Enter Name\");\n+            try {\n+                String name = null ;\n+                while (StringUtils.isBlank(name)) {\n+                     name = JOptionPane.showInputDialog(\"Enter Name\");\n+                }\n+                DefaultMutableTreeNode parent = (DefaultMutableTreeNode) node.getParent();\n                 boolean added = false;\n                 if (!\"exit\".equals(e.getActionCommand())) {\n \n-                    if (node.getUserObject().equals(PluginConstants.MAIL_TEMPLATES)) {\n+                    if (PluginConstants.MAIL_TEMPLATES.equals(node.getUserObject())) {\n+\n                         MailTemplateTO mailTemplate = new MailTemplateTO();\n                         mailTemplate.setKey(name);\n                         added = mailTemplateManagerService.create(mailTemplate);\n@@ -377,11 +408,78 @@ public void actionPerformed(final ActionEvent e) {\n                         mailTemplateManagerService.setFormat(name,\n                                 MailTemplateFormat.TEXT,\n                                 IOUtils.toInputStream(\"//Enter Content here\", encodingPattern));\n-                        try {\n                             openMailEditor(name);\n-                        } catch (IOException ex) {\n-                            Exceptions.printStackTrace(ex);\n-                        }\n+                    } else if (PluginConstants.GROOVY_SCRIPTS.equals(parent.getUserObject())) {\n+                            ImplementationTO newNode = new ImplementationTO();\n+                            ImplementationType type = getType((String) node.getUserObject());\n+                            newNode.setKey(name);\n+                            newNode.setEngine(ImplementationEngine.GROOVY);\n+                            newNode.setType(type);\n+                            String templateClassName = null;\n+                            switch (type) {\n+                                case REPORTLET:\n+                                    templateClassName = \"MyReportlet\";\n+                                    break;\n+\n+                                case ACCOUNT_RULE:\n+                                    templateClassName = \"MyAccountRule\";\n+                                    break;\n+\n+                                case PASSWORD_RULE:\n+                                    templateClassName = \"MyPasswordRule\";\n+                                    break;\n+\n+                                case ITEM_TRANSFORMER:\n+                                    templateClassName = \"MyItemTransformer\";\n+                                    break;\n+\n+                                case TASKJOB_DELEGATE:\n+                                    templateClassName = \"MySchedTaskJobDelegate\";\n+                                    break;\n+\n+                                case RECON_FILTER_BUILDER:\n+                                    templateClassName = \"MyReconFilterBuilder\";\n+                                    break;\n+\n+                                case LOGIC_ACTIONS:\n+                                    templateClassName = \"MyLogicActions\";\n+                                    break;\n+\n+                                case PROPAGATION_ACTIONS:\n+                                    templateClassName = \"MyPropagationActions\";\n+                                    break;\n+\n+                                case PULL_ACTIONS:\n+                                    templateClassName = \"MyPullActions\";\n+                                    break;\n+\n+                                case PUSH_ACTIONS:\n+                                    templateClassName = \"MyPushActions\";\n+                                    break;\n+\n+                                case PULL_CORRELATION_RULE:\n+                                    templateClassName = \"MyPullCorrelationRule\";\n+                                    break;\n+\n+                                case PUSH_CORRELATION_RULE:\n+                                    templateClassName = \"MyPushCorrelationRule\";\n+                                    break;\n+\n+                                case VALIDATOR:\n+                                    templateClassName = \"MyValidator\";\n+                                    break;\n+\n+                                case RECIPIENTS_PROVIDER:\n+                                    templateClassName = \"MyRecipientsProvider\";\n+                                    break;\n+\n+                                default:\n+                            }\n+                                    newNode.setBody(IOUtils.toString(\n+                                    getClass().getResourceAsStream(\"/org/apache/syncope/ide/netbeans/implementations/\"\n+                                    + templateClassName + \".groovy\")));\n+                                    added = implementationManagerService.create(newNode);\n+                                    openScriptEditor(name, (String) node.getUserObject());\n                     } else {\n                         ReportTemplateTO reportTemplate = new ReportTemplateTO();\n                         reportTemplate.setKey(name);\n@@ -395,11 +493,7 @@ public void actionPerformed(final ActionEvent e) {\n                         reportTemplateManagerService.setFormat(name,\n                                 ReportTemplateFormat.HTML,\n                                 IOUtils.toInputStream(\"//Enter content here\", encodingPattern));\n-                        try {\n                             openReportEditor(name);\n-                        } catch (IOException ex) {\n-                            Exceptions.printStackTrace(ex);\n-                        }\n                     }\n \n                     if (added) {\n@@ -410,7 +504,14 @@ public void actionPerformed(final ActionEvent e) {\n                                 null, \"Error while creating new element\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                     }\n                 }\n+            } catch (SyncopeClientException excp) {\n+                JOptionPane.showMessageDialog(null, excp.getMessage(), \"Syncope Error\", JOptionPane.ERROR_MESSAGE);\n+            } catch (IOException ex) {\n+                JOptionPane.showMessageDialog(null , ex.getMessage(), \"Error\", JOptionPane.ERROR_MESSAGE);\n+            } catch (Exception exc) {\n+                 getRefreshServerDetails().setVisible(true);\n             }\n+        }\n         });\n \n         menu.show(evt.getComponent(), evt.getX(), evt.getY());\n@@ -429,11 +530,16 @@ public void actionPerformed(final ActionEvent e) {\n                 int result = JOptionPane.showConfirmDialog(null, \"Are you sure to delete the item?\");\n                 if (result == JOptionPane.OK_OPTION) {\n                     DefaultMutableTreeNode parent = (DefaultMutableTreeNode) node.getParent();\n-                    boolean deleted;\n-                    if (parent.getUserObject().equals(PluginConstants.MAIL_TEMPLATES)) {\n-                        deleted = mailTemplateManagerService.delete((String) node.getUserObject());\n+                    String nodeName = (String) node.getUserObject() ;\n+                    boolean deleted = false;\n+                try {\n+                    if (PluginConstants.MAIL_TEMPLATES.equals(parent.getUserObject())) {\n+                        deleted = mailTemplateManagerService.delete(nodeName);\n+                    } else if (PluginConstants.REPORT_XSLTS.equals(parent.getUserObject())) {\n+                        deleted = reportTemplateManagerService.delete(nodeName);\n                     } else {\n-                        deleted = reportTemplateManagerService.delete((String) node.getUserObject());\n+                        ImplementationType type = getType((String) parent.getUserObject());\n+                        deleted = implementationManagerService.delete(type, nodeName);\n                     }\n                     if (deleted) {\n                         node.removeFromParent();\n@@ -442,6 +548,12 @@ public void actionPerformed(final ActionEvent e) {\n                         JOptionPane.showMessageDialog(\n                                 null, \"Error while deleting new element\", \"Error\", JOptionPane.ERROR_MESSAGE);\n                     }\n+                    } catch (SyncopeClientException exc) {\n+                        JOptionPane.showMessageDialog(\n+                            null, exc.getMessage(), \"Syncope Error\", JOptionPane.ERROR_MESSAGE);\n+                    } catch (Exception ex) {\n+                        getRefreshServerDetails().setVisible(true);\n+                    }\n                 }\n             }\n         });\n@@ -460,7 +572,6 @@ private void openMailEditor(final String name) throws IOException {\n             String type = null;\n             InputStream is = null;\n \n-            try {\n                 switch (format) {\n                     case HTML:\n                         type = \"html\";\n@@ -474,24 +585,6 @@ private void openMailEditor(final String name) throws IOException {\n                         LOG.log(Level.SEVERE, String.format(\"Format [%s] not supported\", format));\n                         break;\n                 }\n-            } catch (SyncopeClientException e) {\n-                LOG.log(Level.SEVERE,\n-                        String.format(\"Unable to get [%s] mail template in [%s] format\", name, format), e);\n-                if (ClientExceptionType.NotFound.equals(e.getType())) {\n-                    LOG.log(Level.SEVERE, String.format(\n-                            \"Report template in [%s] format not found, create an empty one\", format));\n-                } else {\n-                    JOptionPane.showMessageDialog(\n-                            null, String.format(\"Unable to get [%s] report template in [%s] format\", name, format),\n-                            \"Connection Error\", JOptionPane.ERROR_MESSAGE);\n-                }\n-            } catch (Exception e) {\n-                LOG.log(Level.SEVERE,\n-                        String.format(\"Unable to get [%s] mail template in [%s] format\", name, format), e);\n-                JOptionPane.showMessageDialog(\n-                        null, String.format(\"Unable to get [%s] mail template in [%s] format\", name, format), \"Error\",\n-                        JOptionPane.ERROR_MESSAGE);\n-            }\n             String content = is == null ? StringUtils.EMPTY : IOUtils.toString(is, encodingPattern);\n \n             String mailTemplatesDirName = System.getProperty(\"java.io.tmpdir\") + \"/Templates/Mail/\";\n@@ -521,15 +614,42 @@ public void propertyChange(final PropertyChangeEvent evt) {\n         }\n     }\n \n+    private void openScriptEditor(final String name , final String type) throws IOException {\n+            ImplementationTO node = implementationManagerService.read(getType(type), name);\n+            String groovyScriptsDirName = System.getProperty(\"java.io.tmpdir\") + \"/Groovy/\"\n+            + node.getType().toString() + \"/\";\n+            File groovyScriptsDir = new File(groovyScriptsDirName);\n+            if (!groovyScriptsDir.exists()) {\n+                groovyScriptsDir.mkdirs();\n+            }\n+            File file = new File(groovyScriptsDirName + name + \".groovy\");\n+            FileWriter fw = new FileWriter(file);\n+            fw.write(node.getBody());\n+            fw.flush();\n+            FileObject fob = FileUtil.toFileObject(file.getAbsoluteFile());\n+            DataObject data = DataObject.find(fob);\n+            data.getLookup().lookup(OpenCookie.class).open();\n+            data.addPropertyChangeListener(new PropertyChangeListener() {\n+\n+                @Override\n+                public void propertyChange(final PropertyChangeEvent evt) {\n+                    if (DataObject.PROP_MODIFIED.equals(evt.getPropertyName())) {\n+                        //save item remotely\n+                        LOG.info(String.format(\"Saving Groovy template [%s]\", name));\n+                       saveContent();\n+                    }\n+                }\n+            });\n+\n+    }\n+\n     private void openReportEditor(final String name) throws IOException {\n         String formatStr = (String) JOptionPane.showInputDialog(null, \"Select File Format\",\n                 \"File format\", JOptionPane.QUESTION_MESSAGE, null,\n                 PluginConstants.REPORT_TEMPLATE_FORMATS, ReportTemplateFormat.FO.name());\n         if (StringUtils.isNotBlank(formatStr)) {\n             ReportTemplateFormat format = ReportTemplateFormat.valueOf(formatStr);\n-\n             InputStream is = null;\n-            try {\n                 switch (format) {\n                     case HTML:\n                         is = (InputStream) reportTemplateManagerService.getFormat(name, ReportTemplateFormat.HTML);\n@@ -544,24 +664,6 @@ private void openReportEditor(final String name) throws IOException {\n                         LOG.log(Level.SEVERE, String.format(\"Format [%s] not supported\", format));\n                         break;\n                 }\n-            } catch (SyncopeClientException e) {\n-                LOG.log(Level.SEVERE, String.format(\"Unable to get [%s] report template in [%s] format\", name, format),\n-                        e);\n-                if (ClientExceptionType.NotFound.equals(e.getType())) {\n-                    LOG.log(Level.SEVERE, String.format(\n-                            \"Report template [%s] not found, create an empty one\", name));\n-                } else {\n-                    JOptionPane.showMessageDialog(\n-                            null, String.format(\"Unable to get [%s] report template in [%s] format\", name, format),\n-                            \"Connection Error\", JOptionPane.ERROR_MESSAGE);\n-                }\n-            } catch (Exception e) {\n-                LOG.log(Level.SEVERE, String.format(\"Unable to get [%s] report template in [%s] format\", name, format),\n-                        e);\n-                JOptionPane.showMessageDialog(\n-                        null, String.format(\"Unable to get [%s] report template in [%s] format\", name, format),\n-                        \"Generic Error\", JOptionPane.ERROR_MESSAGE);\n-            }\n             String content = is == null ? StringUtils.EMPTY : IOUtils.toString(is, encodingPattern);\n \n             String reportTemplatesDirName = System.getProperty(\"java.io.tmpdir\") + \"/Templates/Report/\";\n@@ -597,15 +699,16 @@ private void saveContent() {\n             Document document = ed.getDocument();\n             String content = document.getText(0, document.getLength());\n             String path = (String) document.getProperty(Document.TitleProperty);\n-            String[] temp = path.split(File.separator);\n+            String[] temp = path.split(File.separator.replace(\"\\\\\", \"\\\\\\\\\"));\n             String name = temp[temp.length - 1];\n+            String fileName = temp[temp.length - 3];\n             String templateType = temp[temp.length - 2];\n             temp = name.split(\"\\\\.\");\n             String format = temp[1];\n             String key = temp[0];\n \n-            if (templateType.equals(\"Mail\")) {\n-                if (format.equals(\"txt\")) {\n+            if (\"Mail\".equals(templateType)) {\n+                if (\"txt\".equals(format)) {\n                     mailTemplateManagerService.setFormat(key,\n                             MailTemplateFormat.TEXT,\n                             IOUtils.toInputStream(content, encodingPattern));\n@@ -614,22 +717,39 @@ private void saveContent() {\n                             MailTemplateFormat.HTML,\n                             IOUtils.toInputStream(content, encodingPattern));\n                 }\n-            } else if (format.equals(\"html\")) {\n+            } else if (\"html\".equals(format)) {\n                 reportTemplateManagerService.setFormat(key,\n                         ReportTemplateFormat.HTML,\n                         IOUtils.toInputStream(content, encodingPattern));\n-            } else if (format.equals(\"fo\")) {\n+            } else if (\"fo\".equals(format)) {\n                 reportTemplateManagerService.setFormat(key,\n                         ReportTemplateFormat.FO,\n                         IOUtils.toInputStream(content, encodingPattern));\n-            } else {\n+            } else if (\"csv\".equals(format)) {\n                 reportTemplateManagerService.setFormat(key,\n                         ReportTemplateFormat.CSV,\n                         IOUtils.toInputStream(content, encodingPattern));\n+            } else if (\"Groovy\".equals(fileName)) {\n+                    ImplementationTO node = implementationManagerService.read(getType(templateType), key);\n+                    node.setBody(content);\n+                    implementationManagerService.update(node);\n             }\n         } catch (BadLocationException e) {\n             Exceptions.printStackTrace(e);\n+        } catch (Exception e) {\n+            getRefreshServerDetails().setVisible(true);\n+        }\n+    }\n+\n+    private ImplementationType getType(final String typeName) {\n+        ImplementationType type = null ;\n+        for (ImplementationType implType : ImplementationType.values()) {\n+            if (implType.toString().equals(typeName)) {\n+                type = implType ;\n+            }\n+\n         }\n+        return (type);\n     }\n \n     private void closeComponent() {\n@@ -642,13 +762,15 @@ private void closeComponent() {\n     private void initTemplatesTree() {\n         visibleRoot.add(mailTemplates);\n         visibleRoot.add(reportXslts);\n+        visibleRoot.add(groovyScripts);\n         treeModel.reload();\n     }\n \n     private void resetTree() {\n         visibleRoot.removeAllChildren();\n         mailTemplates.removeAllChildren();\n         reportXslts.removeAllChildren();\n+        groovyScripts.removeAllChildren();\n         treeModel.reload();\n     }\n "},{"sha":"978e76db1e8578c10d94f7bd66031ddc633d414f","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyAccountRule.groovy","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyAccountRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyAccountRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyAccountRule.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.AccountRule\n+import org.apache.syncope.core.persistence.api.entity.user.User\n+\n+@CompileStatic\n+class MyAccountRule implements AccountRule {\n+  \n+  void enforce(User user) {\n+  }\n+\n+}"},{"sha":"fd4b5d41cc2d12b651dec3fa3f1b5382d0657097","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyItemTransformer.groovy","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyItemTransformer.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyItemTransformer.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyItemTransformer.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.to.EntityTO\n+import org.apache.syncope.core.persistence.api.entity.Entity\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue\n+import org.apache.syncope.core.persistence.api.entity.resource.Item\n+import org.apache.syncope.core.provisioning.api.data.ItemTransformer\n+\n+@CompileStatic\n+class MyItemTransformer implements ItemTransformer {\n+\t\n+  @Override\n+  List<PlainAttrValue> beforePropagation(\n+    Item item,\n+    Entity entity,\n+    List<PlainAttrValue> values) {\n+\n+    return values;\n+  }\n+    \n+  @Override\n+  List<Object> beforePull(\n+    Item item,\n+    EntityTO entityTO,\n+    List<Object> values) {\n+\n+    return values;\n+  }\n+}"},{"sha":"df22aa231bf61092d18e3258b1b5f42a1d793368","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyLogicActions.groovy","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyLogicActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyLogicActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyLogicActions.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.patch.AnyPatch\n+import org.apache.syncope.common.lib.patch.AttrPatch\n+import org.apache.syncope.common.lib.to.AnyTO\n+import org.apache.syncope.common.lib.to.AttrTO\n+import org.apache.syncope.core.provisioning.api.LogicActions\n+\n+@CompileStatic\n+class MyLogicActions implements LogicActions {\n+  \n+  @Override\n+  <A extends AnyTO> A beforeCreate(final A input) {\n+    return input;\n+  }\n+\n+  @Override\n+  <M extends AnyPatch> M beforeUpdate(final M input) {\n+    return input;\n+  }\n+}"},{"sha":"dab38baca8abf80bc6a0cd3e175f4a59c52de93a","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyPasswordRule.groovy","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPasswordRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPasswordRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPasswordRule.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.PasswordRule\n+import org.apache.syncope.core.persistence.api.entity.user.User\n+\n+@CompileStatic\n+class MyPasswordRule implements PasswordRule {\n+  \n+  void enforce(User user) {\n+  }\n+}"},{"sha":"6a24777af2e21d92643673f13529b4921f9bd86f","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyPropagationActions.groovy","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPropagationActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPropagationActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPropagationActions.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,43 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationActions\n+import org.identityconnectors.framework.common.objects.ConnectorObject\n+\n+@CompileStatic\n+class MyPropagationActions implements PropagationActions {\n+  \n+  @Override\n+  void before(PropagationTask task, ConnectorObject beforeObj) {\n+    // do nothing\n+  }\n+\n+  @Override\n+  void onError(PropagationTask task, TaskExec execution, Exception error) {\n+    // do nothing\n+  }\n+\n+  @Override\n+  void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj) {\n+    // do nothing\n+  }\n+}"},{"sha":"893e7a97f89cc549819c6ccf5be343f8e82f6066","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyPullActions.groovy","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullActions.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.common.lib.patch.AnyPatch\n+import org.apache.syncope.common.lib.to.EntityTO\n+import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions\n+import org.identityconnectors.framework.common.objects.SyncDelta\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MyPullActions implements PullActions {\n+  \n+  @Override\n+  SyncDelta preprocess(SyncDelta delta) {\n+    return delta;\n+  }\n+  \n+  @Override\n+  void beforeProvision(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeAssign(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeUnassign(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeDeprovision(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeUnlink(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeLink(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  <P extends AnyPatch> void beforeUpdate(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity,\n+    P anyPatch) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void beforeDelete(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity) throws JobExecutionException {\n+\n+  }\n+\n+  @Override\n+  void after(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    EntityTO entity,\n+    ProvisioningReport result) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+\n+  @Override\n+  IgnoreProvisionException onError(\n+    ProvisioningProfile profile,\n+    SyncDelta delta,\n+    Exception e) throws JobExecutionException {\n+\n+    return null;\n+  }\n+}"},{"sha":"bb56ebe04e7b21880aca401d68ffd3dbdbac411b","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyPullCorrelationRule.groovy","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullCorrelationRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullCorrelationRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPullCorrelationRule.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision\n+import org.identityconnectors.framework.common.objects.ConnectorObject\n+\n+@CompileStatic\n+class MyPullCorrelationRule implements PullCorrelationRule {\n+\n+  @Override\n+  SearchCond getSearchCond(ConnectorObject connObj, Provision provision) {\n+    \n+  }\n+}"},{"sha":"dad420636fd335fbbacff700f99d6d6b67ab2d2d","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyPushActions.groovy","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPushActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPushActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyPushActions.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,112 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.entity.Entity\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MyPushActions implements PushActions {\n+  \n+  @Override \n+  Entity beforeAssign(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeProvision(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUpdate(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeLink(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUnlink(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeUnassign(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeDeprovision(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  Entity beforeDelete(\n+    ProvisioningProfile profile,\n+    Entity entity) throws JobExecutionException {\n+\n+    return entity;\n+  }\n+\n+  @Override \n+  void onError(\n+    ProvisioningProfile profile,\n+    Entity entity,\n+    ProvisioningReport result,\n+    Exception error) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+\n+  @Override \n+  void after(\n+    ProvisioningProfile profile,\n+    Entity entity,\n+    ProvisioningReport result) throws JobExecutionException {\n+\n+    // do nothing\n+  }\n+}"},{"sha":"d118861800cadfb65171839bcc5fe08431c0d7d9","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyRecipientsProvider.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyRecipientsProvider.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyRecipientsProvider.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyRecipientsProvider.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.entity.Notification\n+import org.apache.syncope.core.provisioning.api.notification.RecipientsProvider\n+\n+@CompileStatic\n+class MyRecipientsProvider implements RecipientsProvider {\n+  \n+  @Override\n+  Set<String> provideRecipients(Notification notification) {\n+    return Collections.emptyList();\n+  }\n+}"},{"sha":"b19b88e66aa9eaf3c5db4e93b77f1f9706b26508","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyReconFilterBuilder.groovy","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReconFilterBuilder.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReconFilterBuilder.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReconFilterBuilder.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder\n+import org.identityconnectors.framework.common.objects.filter.Filter\n+\n+@CompileStatic\n+class MyReconFilterBuilder implements ReconFilterBuilder {\n+  \n+  @Override\n+  Filter build() {\n+    return PASS_THROUGH;\n+  }\n+}"},{"sha":"07447c21cb6e1f3924c38a8d78df88f45193f7a9","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyReportlet.groovy","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReportlet.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReportlet.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyReportlet.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.dao.Reportlet\n+import org.xml.sax.SAXException\n+\n+@CompileStatic\n+class MyReportlet implements Reportlet {\n+  \n+  @Override\n+  void extract(ContentHandler handler) throws SAXException {\n+  }\n+}"},{"sha":"3356319b044dcce5e57bde13c03991a2a651a58b","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MySchedTaskJobDelegate.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMySchedTaskJobDelegate.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMySchedTaskJobDelegate.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMySchedTaskJobDelegate.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate\n+import org.quartz.JobExecutionContext\n+import org.quartz.JobExecutionException\n+\n+@CompileStatic\n+class MySchedTaskJobDelegate implements SchedTaskJobDelegate {\n+\t\n+  @Override\n+  void execute(String taskKey, boolean dryRun, JobExecutionContext context) throws JobExecutionException {\n+   \n+  }\n+}"},{"sha":"b0c3e377501d16b280d06800fd14f5930d8210aa","filename":"ide/netbeans/src/main/resources/org/apache/syncope/ide/netbeans/implementations/MyValidator.groovy","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyValidator.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3424a1b5fd271088e7c86377cb56427ffc6d4dd8/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyValidator.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fimplementations%2FMyValidator.groovy?ref=3424a1b5fd271088e7c86377cb56427ffc6d4dd8","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema\n+\n+@CompileStatic\n+class MyValidator implements Validator {\n+  \n+  @Override\n+  void setSchema(PlainSchema schema) {\n+  }\n+\n+  @Override\n+  void validate(String value, PlainAttrValue attrValue) {      \n+  }\n+}"}]}