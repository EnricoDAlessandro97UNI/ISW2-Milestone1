{"sha":"b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyZmIxZTZhNzZjY2VjN2Q3MDViOWE1MzBiMjUwZWEwMTg5YmM0ZjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-23T14:45:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-23T14:48:29Z"},"message":"[SYNCOPE-1501] Returning full Connector schema details, not just names","tree":{"sha":"bd3bb49375045ebaccfc70b63c39b9fdff7586f2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bd3bb49375045ebaccfc70b63c39b9fdff7586f2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5e7c289802420d6c248a63f2137fcfd656eae35c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5e7c289802420d6c248a63f2137fcfd656eae35c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5e7c289802420d6c248a63f2137fcfd656eae35c"}],"stats":{"total":95,"additions":58,"deletions":37},"files":[{"sha":"0718e714ca450cfab8ea428a6c1e67160ff901c9","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":6,"deletions":15,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -22,7 +22,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n@@ -32,8 +31,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n@@ -151,17 +149,10 @@ private void populateAnyTypes(final String resourceKey) {\n     }\n \n     private List<String> getExtAttrNames() {\n-        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(selectedResource.getConnector());\n-        connInstanceTO.getConf().addAll(selectedResource.getConfOverride());\n-\n-        Optional<ConnIdObjectClassTO> connIdObjectClass =\n-                ConnectorRestClient.buildObjectClassInfo(connInstanceTO, false).stream().\n-                        filter(object -> object.getType().equals(anyTypes.get(anyType.getModelObject()))).\n-                        findAny();\n-\n-        return connIdObjectClass.isPresent()\n-                ? connIdObjectClass.get().getAttributes()\n-                : List.of();\n+        return ConnectorRestClient.getExtAttrNames(\n+                SyncopeConstants.ROOT_REALM,\n+                anyTypes.get(anyType.getModelObject()),\n+                selectedResource.getConnector(),\n+                selectedResource.getConfOverride());\n     }\n }"},{"sha":"1af47389d44b449ac0386ad74b27bb10289013c3","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.springframework.beans.BeanUtils;\n@@ -94,7 +95,10 @@ public static List<String> getExtAttrNames(\n                 filter(object -> object.getType().equalsIgnoreCase(objectClass)).\n                 findAny();\n \n-        return connIdObjectClass.isPresent() ? connIdObjectClass.get().getAttributes() : new ArrayList<>();\n+        return connIdObjectClass.isPresent()\n+                ? connIdObjectClass.get().getAttributes().stream().\n+                        map(PlainSchemaTO::getKey).collect(Collectors.toList())\n+                : Collections.emptyList();\n     }\n \n     /**"},{"sha":"feba9d0f2803ae42d7c845607499bb1bbaab6fa4","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -42,7 +42,7 @@ public class ConnIdObjectClassTO implements Serializable {\n \n     private boolean auxiliary;\n \n-    private final List<String> attributes = new ArrayList<>();\n+    private final List<PlainSchemaTO> attributes = new ArrayList<>();\n \n     public String getType() {\n         return type;\n@@ -71,7 +71,7 @@ public void setAuxiliary(final boolean auxiliary) {\n     @XmlElementWrapper(name = \"attributes\")\n     @XmlElement(name = \"attribute\")\n     @JsonProperty(\"attributes\")\n-    public List<String> getAttributes() {\n+    public List<PlainSchemaTO> getAttributes() {\n         return attributes;\n     }\n }"},{"sha":"bbd14428764a3c0008bc00e3ba512999bfbc79e1","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -26,11 +26,14 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.IdMEntitlement;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n@@ -47,7 +50,6 @@\n import org.identityconnectors.common.l10n.CurrentLocale;\n import org.identityconnectors.framework.api.ConfigurationProperties;\n import org.identityconnectors.framework.api.ConnectorKey;\n-import org.identityconnectors.framework.common.objects.AttributeInfo;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -223,7 +225,31 @@ public List<ConnIdObjectClassTO> buildObjectClassInfo(\n \n             connIdObjectClassTO.getAttributes().addAll(info.getAttributeInfo().stream().\n                     filter(attrInfo -> includeSpecial || !AttributeUtil.isSpecialName(attrInfo.getName())).\n-                    map(AttributeInfo::getName).\n+                    map(attrInfo -> {\n+                        PlainSchemaTO schema = new PlainSchemaTO();\n+                        schema.setKey(attrInfo.getName());\n+                        schema.setMandatoryCondition(BooleanUtils.toStringTrueFalse(attrInfo.isRequired()));\n+                        schema.setMultivalue(attrInfo.isMultiValued());\n+                        schema.setReadonly(!attrInfo.isUpdateable());\n+\n+                        if (attrInfo.getType().equals(int.class) || attrInfo.getType().equals(Integer.class)\n+                                || attrInfo.getType().equals(long.class) || attrInfo.getType().equals(Long.class)) {\n+\n+                            schema.setType(AttrSchemaType.Long);\n+                        } else if (attrInfo.getType().equals(float.class) || attrInfo.getType().equals(Float.class)\n+                                || attrInfo.getType().equals(double.class) || attrInfo.getType().equals(Double.class)) {\n+\n+                            schema.setType(AttrSchemaType.Double);\n+                        } else if (attrInfo.getType().equals(boolean.class)\n+                                || attrInfo.getType().equals(Boolean.class)) {\n+\n+                            schema.setType(AttrSchemaType.Boolean);\n+                        } else {\n+                            schema.setType(AttrSchemaType.String);\n+                        }\n+\n+                        return schema;\n+                    }).\n                     collect(Collectors.toList()));\n \n             return connIdObjectClassTO;"},{"sha":"b22a390c328082442c70ce41a2203322c21357fe","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractRealmResultHandler.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -38,8 +38,6 @@\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeResultHandler.class);\n \n-    protected static final String REALM_TYPE = \"REALM\";\n-\n     @Autowired\n     protected RealmDAO realmDAO;\n "},{"sha":"6cdf29746ed67120ab8c5d9a4581468caefb1c41","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -24,6 +24,7 @@\n import java.util.function.Function;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -111,7 +112,7 @@ public boolean handle(final SyncDelta delta) {\n             ProvisioningReport ignoreResult = new ProvisioningReport();\n             ignoreResult.setOperation(ResourceOperation.NONE);\n             ignoreResult.setStatus(ProvisioningReport.Status.IGNORE);\n-            ignoreResult.setAnyType(REALM_TYPE);\n+            ignoreResult.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n             ignoreResult.setKey(null);\n             ignoreResult.setName(delta.getObject().getName().getNameValue());\n             profile.getResults().add(ignoreResult);\n@@ -148,7 +149,7 @@ private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit org\n \n         ProvisioningReport result = new ProvisioningReport();\n         result.setOperation(ResourceOperation.CREATE);\n-        result.setAnyType(REALM_TYPE);\n+        result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n         result.setStatus(ProvisioningReport.Status.SUCCESS);\n         result.setName(realmTO.getFullPath());\n \n@@ -186,7 +187,7 @@ private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit\n \n         ProvisioningReport result = new ProvisioningReport();\n         result.setOperation(ResourceOperation.CREATE);\n-        result.setAnyType(REALM_TYPE);\n+        result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n         result.setStatus(ProvisioningReport.Status.SUCCESS);\n         result.setName(realmTO.getFullPath());\n \n@@ -292,7 +293,7 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<Realm>\n \n             ProvisioningReport result = new ProvisioningReport();\n             result.setOperation(ResourceOperation.UPDATE);\n-            result.setAnyType(REALM_TYPE);\n+            result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n             result.setStatus(ProvisioningReport.Status.SUCCESS);\n             result.setKey(realm.getKey());\n             result.setName(realm.getFullPath());\n@@ -370,7 +371,7 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<R\n \n             ProvisioningReport result = new ProvisioningReport();\n             result.setOperation(ResourceOperation.DELETE);\n-            result.setAnyType(REALM_TYPE);\n+            result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n             result.setStatus(ProvisioningReport.Status.SUCCESS);\n             result.setKey(realm.getKey());\n             result.setName(realm.getFullPath());\n@@ -458,7 +459,7 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<Realm> r\n \n             ProvisioningReport result = new ProvisioningReport();\n             result.setOperation(ResourceOperation.NONE);\n-            result.setAnyType(REALM_TYPE);\n+            result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n             result.setStatus(ProvisioningReport.Status.SUCCESS);\n             result.setKey(realm.getKey());\n             result.setName(realm.getFullPath());\n@@ -539,7 +540,7 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<Realm>\n                 result.setKey(realm.getKey());\n                 result.setName(realm.getFullPath());\n                 result.setOperation(ResourceOperation.DELETE);\n-                result.setAnyType(REALM_TYPE);\n+                result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n                 result.setStatus(ProvisioningReport.Status.SUCCESS);\n \n                 if (!profile.isDryRun()) {\n@@ -613,7 +614,7 @@ private ProvisioningReport ignore(final SyncDelta delta, final boolean matching)\n         result.setKey(null);\n         result.setName(delta.getObject().getUid().getUidValue());\n         result.setOperation(ResourceOperation.NONE);\n-        result.setAnyType(REALM_TYPE);\n+        result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n         result.setStatus(ProvisioningReport.Status.SUCCESS);\n \n         if (!profile.isDryRun()) {\n@@ -736,7 +737,7 @@ private void finalize(\n         notificationManager.createTasks(\n                 AuthContextUtils.getUsername(),\n                 AuditElements.EventCategoryType.PULL,\n-                REALM_TYPE.toLowerCase(),\n+                SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,\n                 result,\n@@ -747,7 +748,7 @@ private void finalize(\n         auditManager.audit(\n                 AuthContextUtils.getUsername(),\n                 AuditElements.EventCategoryType.PULL,\n-                REALM_TYPE.toLowerCase(),\n+                SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,\n                 result,"},{"sha":"a79d7e20e26d654929e7011af8cdeec48ecd4ec3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=b2fb1e6a76ccec7d705b9a530b250ea0189bc4f5","patch":"@@ -25,6 +25,7 @@\n import java.util.Optional;\n import java.util.stream.Stream;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n@@ -81,7 +82,7 @@ public boolean handle(final String realmKey) {\n         } catch (IgnoreProvisionException e) {\n             ProvisioningReport result = new ProvisioningReport();\n             result.setOperation(ResourceOperation.NONE);\n-            result.setAnyType(realm == null ? null : REALM_TYPE);\n+            result.setAnyType(realm == null ? null : SyncopeConstants.REALM_ANYTYPE);\n             result.setStatus(ProvisioningReport.Status.IGNORE);\n             result.setKey(realmKey);\n             profile.getResults().add(result);\n@@ -199,7 +200,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n         profile.getResults().add(result);\n \n         result.setKey(realm.getKey());\n-        result.setAnyType(REALM_TYPE);\n+        result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n         result.setName(realm.getFullPath());\n \n         LOG.debug(\"Propagating Realm with key {} towards {}\", realm.getKey(), profile.getTask().getResource());\n@@ -238,13 +239,13 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n             boolean notificationsAvailable = notificationManager.notificationsAvailable(\n                     AuditElements.EventCategoryType.PUSH,\n-                    REALM_TYPE.toLowerCase(),\n+                    SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                     profile.getTask().getResource().getKey(),\n                     operation);\n             boolean auditRequested = auditManager.auditRequested(\n                     AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.PUSH,\n-                    REALM_TYPE.toLowerCase(),\n+                    SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                     profile.getTask().getResource().getKey(),\n                     operation);\n             try {\n@@ -428,7 +429,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n                             AuthContextUtils.getUsername(),\n                             AuditElements.EventCategoryType.PUSH,\n-                            REALM_TYPE.toLowerCase(),\n+                            SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                             profile.getTask().getResource().getKey(),\n                             operation,\n                             resultStatus,"}]}