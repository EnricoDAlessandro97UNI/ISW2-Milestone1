{"sha":"653afac686cc10a13bdd191b807b8f90e0b84e25","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY1M2FmYWM2ODZjYzEwYTEzYmRkMTkxYjgwN2I4ZjkwZTBiODRlMjU=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-28T14:23:48Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-28T14:24:19Z"},"message":"[SYNCOPE-1133] fixes the issue + provides refactoring","tree":{"sha":"9352d6cb279695b7645450b50ded660151d0d9fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9352d6cb279695b7645450b50ded660151d0d9fa"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/653afac686cc10a13bdd191b807b8f90e0b84e25","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/653afac686cc10a13bdd191b807b8f90e0b84e25","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/653afac686cc10a13bdd191b807b8f90e0b84e25","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/653afac686cc10a13bdd191b807b8f90e0b84e25/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"aa5d3ba9505f2512cc17f847c32716cde4b0359b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa5d3ba9505f2512cc17f847c32716cde4b0359b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa5d3ba9505f2512cc17f847c32716cde4b0359b"}],"stats":{"total":553,"additions":192,"deletions":361},"files":[{"sha":"ec9dbabe2e1e1541d534de4361f2da54466bd163","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -42,7 +42,7 @@ public ApprovalDetails(final PageReference pageRef, final WorkflowFormTO formTO)\n             newUserTO = formTO.getUserTO();\n             previousUserTO = null;\n         } else if (formTO.getUserTO() == null) {\n-            // make it stronger by handling NPE in case of test users or missing approval info\n+            // make it stronger by handling possible NPE\n             previousUserTO = new UserTO();\n             previousUserTO.setKey(formTO.getUserPatch().getKey());\n             newUserTO = AnyOperations.patch(previousUserTO, formTO.getUserPatch());"},{"sha":"24109d2f5aa91e72f4bcfe3968359f4b51c44c56","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -73,12 +73,6 @@ public final class Constants {\n \n     public static final String PARAM_PASSWORD_RESET_TOKEN = \"pwdResetToken\";\n \n-    public static final String PREF_USERS_DETAILS_VIEW = \"users.details.view\";\n-\n-    public static final String PREF_USERS_PLAIN_ATTRS_VIEW = \"users.plain.attrs.view\";\n-\n-    public static final String PREF_USERS_DER_ATTRS_VIEW = \"users.der.attrs.view\";\n-\n     public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n \n     public static final String PREF_USER_PLAIN_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n@@ -95,12 +89,6 @@ public final class Constants {\n \n     public static final String PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS = \"relationshiptype.painator.rows\";\n \n-    public static final String PREF_GROUP_DETAILS_VIEW = \"group.details.view\";\n-\n-    public static final String PREF_GROUP_PLAIN_ATTRS_VIEW = \"group.plain.attrs.view\";\n-\n-    public static final String PREF_GROUP_DER_ATTRS_VIEW = \"group.der.attrs.view\";\n-\n     public static final String PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"group.schema.paginator.rows\";\n \n     public static final String PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS = \"group.derived.schema.paginator.rows\";\n@@ -169,11 +157,11 @@ public final class Constants {\n \n     public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n \n-    public static final String PREF_ANY_OBJECT_DETAILS_VIEW = \"anyobject.%s.details.view\";\n+    public static final String PREF_ANY_DETAILS_VIEW = \"any.%s.details.view\";\n \n-    public static final String PREF_ANY_OBJECT_PLAIN_ATTRS_VIEW = \"anyobject.%s.plain.attrs.view\";\n+    public static final String PREF_ANY_PLAIN_ATTRS_VIEW = \"any.%s.plain.attrs.view\";\n \n-    public static final String PREF_ANY_OBJECT_DER_ATTRS_VIEW = \"anyobject.%s.der.attrs.view\";\n+    public static final String PREF_ANY_DER_ATTRS_VIEW = \"any.%s.der.attrs.view\";\n \n     public static final String CREATED_ICON = \"glyphicon glyphicon-ok-circle\";\n "},{"sha":"b6c6778068d875d41f4f0e3c037246805c619323","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -22,6 +22,7 @@\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n@@ -35,6 +36,7 @@\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n@@ -49,6 +51,7 @@\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -57,6 +60,7 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.springframework.util.ReflectionUtils;\n \n public abstract class AnyDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n         extends DirectoryPanel<A, AnyWrapper<A>, AnyDataProvider<A>, E> {\n@@ -123,6 +127,57 @@ protected AnyDirectoryPanel(final String id, final Builder<A, E> builder, final\n         initResultTable();\n     }\n \n+    @Override\n+    protected final List<IColumn<A, String>> getColumns() {\n+        final List<IColumn<A, String>> columns = new ArrayList<>();\n+        final List<IColumn<A, String>> prefcolumns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<A>(\n+                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n+\n+        for (String name : prefMan.getList(\n+                getRequest(), DisplayAttributesModalPanel.getPrefDetailView(type))) {\n+            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n+                addPropertyColumn(\n+                        name,\n+                        ReflectionUtils.findField(DisplayAttributesModalPanel.getTOClass(type), name),\n+                        prefcolumns);\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(\n+                getRequest(), DisplayAttributesModalPanel.getPrefPlainAttributeView(type))) {\n+            if (pSchemaNames.contains(name)) {\n+                prefcolumns.add(new AttrColumn<A>(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(\n+                getRequest(), DisplayAttributesModalPanel.getPrefDerivedAttributeView(type))) {\n+            if (dSchemaNames.contains(name)) {\n+                prefcolumns.add(new AttrColumn<A>(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (prefcolumns.isEmpty()) {\n+            for (String name : getDefaultAttributeSelection()) {\n+                addPropertyColumn(\n+                        name,\n+                        ReflectionUtils.findField(DisplayAttributesModalPanel.getTOClass(type), name),\n+                        prefcolumns);\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_ANY_DETAILS_VIEW,\n+                    Arrays.asList(getDefaultAttributeSelection()));\n+        }\n+\n+        columns.addAll(prefcolumns);\n+        return columns;\n+    }\n+\n+    protected abstract String[] getDefaultAttributeSelection();\n+\n     protected void addPropertyColumn(\n             final String name,\n             final Field field,"},{"sha":"2b7d1543443178ae81ee6d64136da6370161a104","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":5,"deletions":52,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -19,8 +19,6 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -31,8 +29,6 @@\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -45,18 +41,15 @@\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.springframework.util.ReflectionUtils;\n \n public class AnyObjectDirectoryPanel extends AnyDirectoryPanel<AnyObjectTO, AnyObjectRestClient> {\n \n@@ -71,6 +64,11 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_ANYOBJECT_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    protected String[] getDefaultAttributeSelection() {\n+        return AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION;\n+    }\n+\n     @Override\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n@@ -96,51 +94,6 @@ protected boolean statusCondition(final Serializable modelObject) {\n         return panel;\n     }\n \n-    @Override\n-    protected List<IColumn<AnyObjectTO, String>> getColumns() {\n-        final List<IColumn<AnyObjectTO, String>> columns = new ArrayList<>();\n-        final List<IColumn<AnyObjectTO, String>> prefcolumns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<AnyObjectTO>(\n-                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n-\n-        for (String name : prefMan.getList(\n-                getRequest(), String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type))) {\n-            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n-                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), prefcolumns);\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(\n-                getRequest(), String.format(Constants.PREF_ANY_OBJECT_PLAIN_ATTRS_VIEW, type))) {\n-\n-            if (pSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.PLAIN));\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(\n-                getRequest(), String.format(Constants.PREF_ANY_OBJECT_DER_ATTRS_VIEW, type))) {\n-\n-            if (dSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.DERIVED));\n-            }\n-        }\n-\n-        // Add defaults in case of no selection\n-        if (prefcolumns.isEmpty()) {\n-            for (String name : AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), prefcolumns);\n-            }\n-\n-            prefMan.setList(getRequest(), getResponse(), Constants.PREF_ANY_OBJECT_DETAILS_VIEW,\n-                    Arrays.asList(AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION));\n-        }\n-\n-        columns.addAll(prefcolumns);\n-        return columns;\n-    }\n-\n     @Override\n     public ActionsPanel<AnyObjectTO> getActions(final IModel<AnyObjectTO> model) {\n         final ActionsPanel<AnyObjectTO> panel = super.getActions(model);"},{"sha":"3d798cd65298fc82c3eef76dcc9114e833d4d5e6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDisplayAttributesModalPanel.java","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,9 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.wicket.PageReference;\n \n /**\n@@ -46,24 +44,4 @@ public AnyObjectDisplayAttributesModalPanel(\n \n         super(modal, pageRef, schemaNames, dSchemaNames, type);\n     }\n-\n-    @Override\n-    protected String getPrefDetailView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type);\n-    }\n-\n-    @Override\n-    protected String getPrefPlainAttributeView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_PLAIN_ATTRS_VIEW, type);\n-    }\n-\n-    @Override\n-    protected String getPrefDerivedAttributeView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_DER_ATTRS_VIEW, type);\n-    }\n-\n-    @Override\n-    protected Class<AnyObjectTO> getTOClass() {\n-        return AnyObjectTO.class;\n-    }\n }"},{"sha":"7e2ed3d4194ec066916b7b8d65e1b58d3d4aec69","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -182,7 +182,6 @@ public void onEvent(final IEvent<?> event) {\n                     break;\n                 default:\n             }\n-            target.add(directoryPanel);\n         } else {\n             super.onEvent(event);\n         }"},{"sha":"344356daab0218d8acf0b1c1bfe19be1f3e4f5f2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":32,"deletions":20,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -30,7 +30,11 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -64,14 +68,6 @@\n \n     protected final String type;\n \n-    public DisplayAttributesModalPanel(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final List<String> schemaNames,\n-            final List<String> dSchemaNames) {\n-        this(modal, pageRef, schemaNames, dSchemaNames, null);\n-    }\n-\n     public DisplayAttributesModalPanel(\n             final BaseModal<T> modal,\n             final PageReference pageRef,\n@@ -82,7 +78,7 @@ public DisplayAttributesModalPanel(\n         super(modal, pageRef);\n         this.type = type;\n \n-        final List<String> detailslList = SearchableFields.get(getTOClass());\n+        final List<String> detailslList = SearchableFields.get(DisplayAttributesModalPanel.getTOClass(type));\n         Collections.sort(detailslList);\n         Collections.sort(pSchemaNames);\n         Collections.sort(dSchemaNames);\n@@ -117,9 +113,12 @@ protected List<String> load() {\n             }\n         };\n \n-        selectedDetails = prefMan.getList(getRequest(), getPrefDetailView());\n-        selectedPlainSchemas = prefMan.getList(getRequest(), getPrefPlainAttributeView());\n-        selectedDerSchemas = prefMan.getList(getRequest(), getPrefDerivedAttributeView());\n+        selectedDetails\n+                = prefMan.getList(getRequest(), DisplayAttributesModalPanel.getPrefDetailView(type));\n+        selectedPlainSchemas\n+                = prefMan.getList(getRequest(), DisplayAttributesModalPanel.getPrefPlainAttributeView(type));\n+        selectedDerSchemas\n+                = prefMan.getList(getRequest(), DisplayAttributesModalPanel.getPrefDerivedAttributeView(type));\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n@@ -164,9 +163,9 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         } else {\n             final Map<String, List<String>> prefs = new HashMap<>();\n \n-            prefs.put(getPrefDetailView(), selectedDetails);\n-            prefs.put(getPrefPlainAttributeView(), selectedPlainSchemas);\n-            prefs.put(getPrefDerivedAttributeView(), selectedDerSchemas);\n+            prefs.put(DisplayAttributesModalPanel.getPrefDetailView(type), selectedDetails);\n+            prefs.put(DisplayAttributesModalPanel.getPrefPlainAttributeView(type), selectedPlainSchemas);\n+            prefs.put(DisplayAttributesModalPanel.getPrefDerivedAttributeView(type), selectedDerSchemas);\n             prefMan.setList(getRequest(), getResponse(), prefs);\n \n             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n@@ -175,12 +174,25 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         }\n     }\n \n-    protected abstract String getPrefDetailView();\n-\n-    protected abstract String getPrefPlainAttributeView();\n+    protected static final String getPrefDetailView(final String type) {\n+        return String.format(Constants.PREF_ANY_DETAILS_VIEW, type);\n+    }\n \n-    protected abstract String getPrefDerivedAttributeView();\n+    protected static final String getPrefPlainAttributeView(final String type) {\n+        return String.format(Constants.PREF_ANY_PLAIN_ATTRS_VIEW, type);\n+    }\n \n-    protected abstract Class<? extends AnyTO> getTOClass();\n+    protected static final String getPrefDerivedAttributeView(final String type) {\n+        return String.format(Constants.PREF_ANY_DER_ATTRS_VIEW, type);\n+    }\n \n+    protected static final Class<? extends AnyTO> getTOClass(final String type) {\n+        if (type.equalsIgnoreCase(AnyTypeKind.USER.name())) {\n+            return UserTO.class;\n+        } else if (type.equalsIgnoreCase(AnyTypeKind.USER.name())) {\n+            return GroupTO.class;\n+        } else {\n+            return AnyObjectTO.class;\n+        }\n+    }\n }"},{"sha":"b560f8234f55e373ec2027d1091500c1d687a02b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":5,"deletions":48,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,8 +20,6 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -36,8 +34,6 @@\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -57,21 +53,18 @@\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n-import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.springframework.util.ReflectionUtils;\n \n public class GroupDirectoryPanel extends AnyDirectoryPanel<GroupTO, GroupRestClient> {\n \n@@ -183,6 +176,11 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_GROUP_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    protected String[] getDefaultAttributeSelection() {\n+        return GroupDisplayAttributesModalPanel.DEFAULT_SELECTION;\n+    }\n+\n     @Override\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n@@ -202,47 +200,6 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         return panel;\n     }\n \n-    @Override\n-    protected List<IColumn<GroupTO, String>> getColumns() {\n-\n-        final List<IColumn<GroupTO, String>> columns = new ArrayList<>();\n-        final List<IColumn<GroupTO, String>> prefcolumns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<GroupTO>(\n-                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n-            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n-                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), prefcolumns);\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_PLAIN_ATTRS_VIEW)) {\n-            if (pSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<GroupTO>(name, SchemaType.PLAIN));\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DER_ATTRS_VIEW)) {\n-            if (dSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<GroupTO>(name, SchemaType.DERIVED));\n-            }\n-        }\n-\n-        // Add defaults in case of no selection\n-        if (prefcolumns.isEmpty()) {\n-            for (String name : GroupDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), prefcolumns);\n-            }\n-\n-            prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n-                    Arrays.asList(GroupDisplayAttributesModalPanel.DEFAULT_SELECTION));\n-        }\n-\n-        columns.addAll(prefcolumns);\n-        return columns;\n-    }\n-\n     @Override\n     public ActionsPanel<GroupTO> getActions(final IModel<GroupTO> model) {\n         final ActionsPanel<GroupTO> panel = super.getActions(model);"},{"sha":"e35a8ad2ce6cd462a57d4496c53f90ad55f9229f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDisplayAttributesModalPanel.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,9 +20,8 @@\n \n import java.io.Serializable;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n \n /**\n@@ -42,26 +41,6 @@ public GroupDisplayAttributesModalPanel(\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {\n-        super(modal, pageRef, schemaNames, dSchemaNames);\n-    }\n-\n-    @Override\n-    protected String getPrefDetailView() {\n-        return Constants.PREF_GROUP_DETAILS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefPlainAttributeView() {\n-        return Constants.PREF_GROUP_PLAIN_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefDerivedAttributeView() {\n-        return Constants.PREF_GROUP_DER_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    protected Class<GroupTO> getTOClass() {\n-        return GroupTO.class;\n+        super(modal, pageRef, schemaNames, dSchemaNames, AnyTypeKind.GROUP.name());\n     }\n }"},{"sha":"2845ad9f05621341190726bb7a9a3e8aa8402586","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":5,"deletions":46,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -33,8 +32,6 @@\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.status.ChangePasswordModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -46,19 +43,16 @@\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.springframework.util.ReflectionUtils;\n \n public class UserDirectoryPanel extends AnyDirectoryPanel<UserTO, UserRestClient> {\n \n@@ -88,6 +82,11 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_USERS_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    protected String[] getDefaultAttributeSelection() {\n+        return UserDisplayAttributesModalPanel.DEFAULT_SELECTION;\n+    }\n+\n     @Override\n     protected Collection<ActionType> getBulkActions() {\n         List<ActionType> bulkActions = new ArrayList<>();\n@@ -126,46 +125,6 @@ protected boolean statusCondition(final Serializable modelObject) {\n         return panel;\n     }\n \n-    @Override\n-    protected List<IColumn<UserTO, String>> getColumns() {\n-        final List<IColumn<UserTO, String>> columns = new ArrayList<>();\n-        final List<IColumn<UserTO, String>> prefcolumns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<UserTO>(\n-                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n-            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n-                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), prefcolumns);\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_PLAIN_ATTRS_VIEW)) {\n-            if (pSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<UserTO>(name, SchemaType.PLAIN));\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DER_ATTRS_VIEW)) {\n-            if (dSchemaNames.contains(name)) {\n-                prefcolumns.add(new AttrColumn<UserTO>(name, SchemaType.DERIVED));\n-            }\n-        }\n-\n-        // Add defaults in case of no selection\n-        if (prefcolumns.isEmpty()) {\n-            for (String name : UserDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), prefcolumns);\n-            }\n-\n-            prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n-                    Arrays.asList(UserDisplayAttributesModalPanel.DEFAULT_SELECTION));\n-        }\n-\n-        columns.addAll(prefcolumns);\n-        return columns;\n-    }\n-\n     @Override\n     public ActionsPanel<UserTO> getActions(final IModel<UserTO> model) {\n         final ActionsPanel<UserTO> panel = super.getActions(model);"},{"sha":"24e701ef4ed2ff3074edb47a4b29a0ed7db3948d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDisplayAttributesModalPanel.java","status":"modified","additions":2,"deletions":24,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,9 +20,8 @@\n \n import java.io.Serializable;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n \n /**\n@@ -42,27 +41,6 @@ public UserDisplayAttributesModalPanel(\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {\n-        super(modal, pageRef, schemaNames, dSchemaNames);\n+        super(modal, pageRef, schemaNames, dSchemaNames, AnyTypeKind.USER.name());\n     }\n-\n-    @Override\n-    protected String getPrefDetailView() {\n-        return Constants.PREF_USERS_DETAILS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefPlainAttributeView() {\n-        return Constants.PREF_USERS_PLAIN_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefDerivedAttributeView() {\n-        return Constants.PREF_USERS_DER_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    protected Class<UserTO> getTOClass() {\n-        return UserTO.class;\n-    }\n-\n }"},{"sha":"665409143890d767bee715fb10dc79ac5d51485d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AnyObjectDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -33,7 +34,7 @@\n     private static final long serialVersionUID = -1100228004207271272L;\n \n     private AnyObjectSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n-        super(id, builder, AnyObjectTO.class, wizardInModal);\n+        super(id, builder, wizardInModal);\n     }\n \n     @Override\n@@ -42,18 +43,8 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    public String getPrefDetailsView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type);\n-    }\n-\n-    @Override\n-    public String getPrefPlainAttributesView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_PLAIN_ATTRS_VIEW, type);\n-    }\n-\n-    @Override\n-    public String getPrefDerivedAttributesView() {\n-        return String.format(Constants.PREF_ANY_OBJECT_DER_ATTRS_VIEW, type);\n+    protected String[] getDefaultAttributeSelection() {\n+        return AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION;\n     }\n \n     public static final class Builder extends AnySelectionDirectoryPanel.Builder<AnyObjectTO, AnyObjectRestClient> {\n@@ -62,8 +53,6 @@ public static final class Builder extends AnySelectionDirectoryPanel.Builder<Any\n \n         public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n             super(anyTypeClassTOs, new AnyObjectRestClient(), type, pageRef);\n-            this.filtered = true;\n-            this.checkBoxEnabled = false;\n         }\n \n         @Override"},{"sha":"7eeb59cf503bbea6a757606d404a12f3cd4f3275","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -19,89 +19,33 @@\n package org.apache.syncope.client.console.panels.search;\n \n import java.io.Serializable;\n-import java.lang.reflect.Field;\n-import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.Date;\n import java.util.List;\n import org.apache.syncope.client.console.panels.AnyDirectoryPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n-import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.springframework.util.ReflectionUtils;\n \n public abstract class AnySelectionDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n         extends AnyDirectoryPanel<A, E> {\n \n     private static final long serialVersionUID = -1100228004207271272L;\n \n-    private final Class<A> reference;\n-\n     protected AnySelectionDirectoryPanel(\n             final String id,\n             final AnyDirectoryPanel.Builder<A, E> builder,\n-            final Class<A> reference,\n             final boolean wizardInModal) {\n \n         super(id, builder, wizardInModal);\n-        this.reference = reference;\n-    }\n-\n-    @Override\n-    protected List<IColumn<A, String>> getColumns() {\n-        final List<IColumn<A, String>> columns = new ArrayList<>();\n-\n-        for (String name : prefMan.getList(getRequest(), getPrefDetailsView())) {\n-            final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n-\n-            if (\"key\".equalsIgnoreCase(name)) {\n-                columns.add(new KeyPropertyColumn<A>(new ResourceModel(name, name), name, name));\n-            } else if (reference == UserTO.class && \"token\".equalsIgnoreCase(name)) {\n-                columns.add(new TokenColumn<A>(new ResourceModel(name, name), name));\n-            } else if (field != null\n-                    && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n-\n-                columns.add(new BooleanPropertyColumn<A>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new DatePropertyColumn<A>(new ResourceModel(name, name), name, name));\n-            } else {\n-                columns.add(new PropertyColumn<A, String>(new ResourceModel(name, name), name, name));\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), getPrefPlainAttributesView())) {\n-            if (pSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<A>(name, SchemaType.PLAIN));\n-            }\n-        }\n-\n-        for (String name : prefMan.getList(getRequest(), getPrefDerivedAttributesView())) {\n-            if (dSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<A>(name, SchemaType.DERIVED));\n-            }\n-        }\n-\n-        return columns;\n     }\n \n     @Override\n@@ -127,12 +71,6 @@ protected Collection<ActionType> getBulkActions() {\n         return Collections.<ActionType>emptyList();\n     }\n \n-    protected abstract String getPrefDetailsView();\n-\n-    protected abstract String getPrefPlainAttributesView();\n-\n-    protected abstract String getPrefDerivedAttributesView();\n-\n     public abstract static class Builder<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n             extends AnyDirectoryPanel.Builder<A, E> {\n "},{"sha":"a31fb41d50158483d3258795cc94d8bcd67350eb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.GroupDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -32,7 +33,7 @@ public final class GroupSelectionDirectoryPanel extends AnySelectionDirectoryPan\n     private static final long serialVersionUID = -1100228004207271271L;\n \n     private GroupSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n-        super(id, builder, GroupTO.class, wizardInModal);\n+        super(id, builder, wizardInModal);\n     }\n \n     @Override\n@@ -41,18 +42,8 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    public String getPrefDetailsView() {\n-        return Constants.PREF_GROUP_DETAILS_VIEW;\n-    }\n-\n-    @Override\n-    public String getPrefPlainAttributesView() {\n-        return Constants.PREF_GROUP_PLAIN_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    public String getPrefDerivedAttributesView() {\n-        return Constants.PREF_GROUP_DER_ATTRS_VIEW;\n+    protected String[] getDefaultAttributeSelection() {\n+        return GroupDisplayAttributesModalPanel.DEFAULT_SELECTION;\n     }\n \n     public static final class Builder extends AnySelectionDirectoryPanel.Builder<GroupTO, GroupRestClient> {\n@@ -61,8 +52,6 @@ public static final class Builder extends AnySelectionDirectoryPanel.Builder<Gro\n \n         public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n             super(anyTypeClassTOs, new GroupRestClient(), type, pageRef);\n-            this.filtered = true;\n-            this.checkBoxEnabled = false;\n         }\n \n         @Override"},{"sha":"542536c4943fd3f870ce075a00b9ff7be7033b9c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.UserDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -32,7 +33,7 @@ public final class UserSelectionDirectoryPanel extends AnySelectionDirectoryPane\n     private static final long serialVersionUID = -1100228004207271272L;\n \n     private UserSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n-        super(id, builder, UserTO.class, wizardInModal);\n+        super(id, builder, wizardInModal);\n     }\n \n     @Override\n@@ -41,18 +42,8 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    protected String getPrefDetailsView() {\n-        return Constants.PREF_USERS_DETAILS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefPlainAttributesView() {\n-        return Constants.PREF_USERS_PLAIN_ATTRS_VIEW;\n-    }\n-\n-    @Override\n-    protected String getPrefDerivedAttributesView() {\n-        return Constants.PREF_USERS_DER_ATTRS_VIEW;\n+    protected String[] getDefaultAttributeSelection() {\n+        return UserDisplayAttributesModalPanel.DEFAULT_SELECTION;\n     }\n \n     public static final class Builder extends AnySelectionDirectoryPanel.Builder<UserTO, UserRestClient> {\n@@ -61,8 +52,6 @@ public static final class Builder extends AnySelectionDirectoryPanel.Builder<Use\n \n         public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n             super(anyTypeClassTOs, new UserRestClient(), type, pageRef);\n-            this.filtered = true;\n-            this.checkBoxEnabled = false;\n         }\n \n         @Override"},{"sha":"da08b7fdd7cc3006abc9a4f03f5e1666be51eed8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -360,7 +360,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         anyObjectDirectoryPanel = new AnyObjectSelectionDirectoryPanel.Builder(\n                                 anyTypeClassRestClient.list(anyType.getClasses()),\n                                 anyType.getKey(),\n-                                pageRef).setFiltered(true).\n+                                pageRef).\n                                 setFiql(SyncopeClient.getAnyObjectSearchConditionBuilder(anyType.getKey()).\n                                         is(\"key\").notNullValue().query()).\n                                 setWizardInModal(true).build(\"searchResultPanel\");\n@@ -378,7 +378,7 @@ public void onEvent(final IEvent<?> event) {\n                         getTarget();\n                 final String fiql = SearchUtils.buildFIQL(anyObjectSearchPanel.getModel().getObject(),\n                         SyncopeClient.getAnyObjectSearchConditionBuilder(anyObjectSearchPanel.getBackObjectType()));\n-                AnyDirectoryPanel.class.cast(anyObjectDirectoryPanel).search(fiql, target);\n+                AnyDirectoryPanel.class.cast(Specification.this.anyObjectDirectoryPanel).search(fiql, target);\n             } else if (event.getPayload() instanceof AnySelectionDirectoryPanel.ItemSelection) {\n                 final AjaxRequestTarget target = AnySelectionDirectoryPanel.ItemSelection.class.cast(event.\n                         getPayload()).getTarget();"},{"sha":"a78d9f36ac0716500ac4c1d9c86ee79bedbd9a9f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/653afac686cc10a13bdd191b807b8f90e0b84e25/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/653afac686cc10a13bdd191b807b8f90e0b84e25/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=653afac686cc10a13bdd191b807b8f90e0b84e25","patch":"@@ -98,6 +98,74 @@ public void clickToCloneUser() {\n         formTester.submit(\"buttons:cancel\");\n     }\n \n+    @Test\n+    public void editRelationships() {\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n+        assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n+\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n+\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:actions:\"\n+                + \"actionRepeater:0:action:action\", Constants.ON_CLICK);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.setValue(\"view:relationships:specification:type:dropDownChoiceField\", \"1\");\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n+                + \"specification:type:dropDownChoiceField\", Constants.ON_CHANGE);\n+\n+        formTester.setValue(\"view:relationships:specification:rightType:dropDownChoiceField\", \"PRINTER\");\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n+                + \"specification:rightType:dropDownChoiceField\", Constants.ON_CHANGE);\n+\n+        component = findComponentByProp(\"name\", TAB_PANEL + \"outerObjectsRepeater:\"\n+                + \"0:outer:form:content:form:view:relationships:specification:searchPanelContainer:searchPanel:\"\n+                + \"searchResultPanel:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:\"\n+                + \"dataTable:body:rows:1:cells:2:cell\", \"Canon MF 8030cn\");\n+        assertNotNull(component);\n+\n+        formTester.submit(\"buttons:cancel\");\n+    }\n+\n     @Test\n     public void editUser() {\n         TESTER.clickLink(\"body:realmsLI:realms\");"}]}