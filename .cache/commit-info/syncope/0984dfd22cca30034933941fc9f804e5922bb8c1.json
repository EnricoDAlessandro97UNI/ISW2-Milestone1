{"sha":"0984dfd22cca30034933941fc9f804e5922bb8c1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA5ODRkZmQyMmNjYTMwMDM0OTMzOTQxZmM5ZjgwNGU1OTIyYmI4YzE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-19T09:33:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-19T09:34:10Z"},"message":"Small cleanup","tree":{"sha":"efef65bdca4ca6758451c873a1711ad7dbf2ee19","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/efef65bdca4ca6758451c873a1711ad7dbf2ee19"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0984dfd22cca30034933941fc9f804e5922bb8c1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0984dfd22cca30034933941fc9f804e5922bb8c1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0984dfd22cca30034933941fc9f804e5922bb8c1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0984dfd22cca30034933941fc9f804e5922bb8c1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ed30ef8006a983fca5136407a6643a0806286297","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed30ef8006a983fca5136407a6643a0806286297","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ed30ef8006a983fca5136407a6643a0806286297"}],"stats":{"total":73,"additions":48,"deletions":25},"files":[{"sha":"4c02da1b837fb8b4d6212aa0cef723211fa26209","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0984dfd22cca30034933941fc9f804e5922bb8c1/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0984dfd22cca30034933941fc9f804e5922bb8c1/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=0984dfd22cca30034933941fc9f804e5922bb8c1","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n@@ -52,7 +51,7 @@ public T getTask() {\n         return task;\n     }\n \n-    public Collection<ProvisioningReport> getResults() {\n+    public List<ProvisioningReport> getResults() {\n         return results;\n     }\n "},{"sha":"9ec7edbc5fb56c019d3196efdb4253d7cb4d2464","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":47,"deletions":23,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0984dfd22cca30034933941fc9f804e5922bb8c1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0984dfd22cca30034933941fc9f804e5922bb8c1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=0984dfd22cca30034933941fc9f804e5922bb8c1","patch":"@@ -295,20 +295,20 @@ protected void create(\n     }\n \n     protected List<ProvisioningReport> update(\n-            final SyncDelta delta, final List<String> anys, final Provision provision) throws JobExecutionException {\n+            final SyncDelta delta, final List<String> anyKeys, final Provision provision) throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n             LOG.debug(\"PullTask not configured for update\");\n             finalize(MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n-        LOG.debug(\"About to update {}\", anys);\n+        LOG.debug(\"About to update {}\", anyKeys);\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n         SyncDelta workingDelta = delta;\n-        for (String key : anys) {\n+        for (String key : anyKeys) {\n             LOG.debug(\"About to update {}\", key);\n \n             ProvisioningReport result = new ProvisioningReport();\n@@ -387,7 +387,7 @@ protected List<ProvisioningReport> update(\n \n     protected List<ProvisioningReport> deprovision(\n             final SyncDelta delta,\n-            final List<String> anys,\n+            final List<String> anyKeys,\n             final Provision provision,\n             final boolean unlink)\n             throws JobExecutionException {\n@@ -400,11 +400,11 @@ protected List<ProvisioningReport> deprovision(\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n-        LOG.debug(\"About to deprovision {}\", anys);\n+        LOG.debug(\"About to deprovision {}\", anyKeys);\n \n         final List<ProvisioningReport> results = new ArrayList<>();\n \n-        for (String key : anys) {\n+        for (String key : anyKeys) {\n             LOG.debug(\"About to unassign resource {}\", key);\n \n             ProvisioningReport result = new ProvisioningReport();\n@@ -500,7 +500,7 @@ protected List<ProvisioningReport> deprovision(\n \n     protected List<ProvisioningReport> link(\n             final SyncDelta delta,\n-            final List<String> anys,\n+            final List<String> anyKeys,\n             final Provision provision,\n             final boolean unlink)\n             throws JobExecutionException {\n@@ -513,11 +513,11 @@ protected List<ProvisioningReport> link(\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n-        LOG.debug(\"About to update {}\", anys);\n+        LOG.debug(\"About to update {}\", anyKeys);\n \n         final List<ProvisioningReport> results = new ArrayList<>();\n \n-        for (String key : anys) {\n+        for (String key : anyKeys) {\n             LOG.debug(\"About to unassign resource {}\", key);\n \n             ProvisioningReport result = new ProvisioningReport();\n@@ -601,7 +601,7 @@ protected List<ProvisioningReport> link(\n \n     protected List<ProvisioningReport> delete(\n             final SyncDelta delta,\n-            final List<String> anys,\n+            final List<String> anyKeys,\n             final Provision provision)\n             throws JobExecutionException {\n \n@@ -611,12 +611,12 @@ protected List<ProvisioningReport> delete(\n             return Collections.<ProvisioningReport>emptyList();\n         }\n \n-        LOG.debug(\"About to delete {}\", anys);\n+        LOG.debug(\"About to delete {}\", anyKeys);\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n         SyncDelta workingDelta = delta;\n-        for (String key : anys) {\n+        for (String key : anyKeys) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n \n@@ -669,27 +669,51 @@ protected List<ProvisioningReport> delete(\n         return results;\n     }\n \n-    protected ProvisioningReport ignore(\n+    protected List<ProvisioningReport> ignore(\n             final SyncDelta delta,\n+            final List<String> anyKeys,\n             final Provision provision,\n-            final boolean matching)\n+            final boolean matching,\n+            final String... message)\n             throws JobExecutionException {\n \n         LOG.debug(\"Any to ignore {}\", delta.getObject().getUid().getUidValue());\n \n-        ProvisioningReport result = new ProvisioningReport();\n+        List<ProvisioningReport> results = new ArrayList<>();\n \n-        result.setKey(null);\n-        result.setName(delta.getObject().getUid().getUidValue());\n-        result.setOperation(ResourceOperation.NONE);\n-        result.setAnyType(provision.getAnyType().getKey());\n-        result.setStatus(ProvisioningReport.Status.SUCCESS);\n+        if (anyKeys == null) {\n+            ProvisioningReport report = new ProvisioningReport();\n+            report.setKey(null);\n+            report.setName(delta.getObject().getUid().getUidValue());\n+            report.setOperation(ResourceOperation.NONE);\n+            report.setAnyType(provision.getAnyType().getKey());\n+            report.setStatus(ProvisioningReport.Status.SUCCESS);\n+            if (message != null && message.length >= 1) {\n+                report.setMessage(message[0]);\n+            }\n+\n+            results.add(report);\n+        } else {\n+            for (String anyKey : anyKeys) {\n+                ProvisioningReport report = new ProvisioningReport();\n+                report.setKey(anyKey);\n+                report.setName(delta.getObject().getUid().getUidValue());\n+                report.setOperation(ResourceOperation.NONE);\n+                report.setAnyType(provision.getAnyType().getKey());\n+                report.setStatus(ProvisioningReport.Status.SUCCESS);\n+                if (message != null && message.length >= 1) {\n+                    report.setMessage(message[0]);\n+                }\n+\n+                results.add(report);\n+            }\n+        }\n \n         finalize(matching\n                 ? MatchingRule.toEventName(MatchingRule.IGNORE)\n                 : UnmatchingRule.toEventName(UnmatchingRule.IGNORE), Result.SUCCESS, null, null, delta);\n \n-        return result;\n+        return results;\n     }\n \n     /**\n@@ -744,7 +768,7 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().add(ignore(delta, provision, false));\n+                            profile.getResults().addAll(ignore(delta, null, provision, false));\n                             break;\n \n                         default:\n@@ -794,7 +818,7 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().add(ignore(delta, provision, true));\n+                            profile.getResults().addAll(ignore(delta, anyKeys, provision, true));\n                             break;\n \n                         default:"}]}