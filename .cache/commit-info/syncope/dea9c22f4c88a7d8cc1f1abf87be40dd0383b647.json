{"sha":"dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRlYTljMjJmNGM4OGE3ZDhjYzFmMWFiZjg3YmU0MGRkMDM4M2I2NDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-23T14:27:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-23T14:57:13Z"},"message":"[SYNCOPE-1512] Escaping single quote when using JSON operators","tree":{"sha":"e88c2219dcdedc9743e8ae9158e0571e096cc90b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e88c2219dcdedc9743e8ae9158e0571e096cc90b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9e168b7f2f7a7ef42c905f2179aeb6315125c5b8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e168b7f2f7a7ef42c905f2179aeb6315125c5b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e168b7f2f7a7ef42c905f2179aeb6315125c5b8"}],"stats":{"total":90,"additions":85,"deletions":5},"files":[{"sha":"6e1486bda10c719dc09495319329ecdb61f57e6b","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/MyJPAJSONAnyDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnyDAO.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -70,7 +70,7 @@ protected String attrValueMatch(\n             } else {\n                 ((JSONPlainAttr) container).add(attrValue);\n             }\n-            return \"JSON_CONTAINS(plainAttrs, '\" + POJOHelper.serialize(List.of(container)) + \"')\";\n+            return \"JSON_CONTAINS(plainAttrs, '\" + POJOHelper.serialize(List.of(container)).replace(\"'\", \"''\") + \"')\";\n         }\n     }\n }"},{"sha":"b8d6a98b283d8bea4771cdd9fc5fed27dcb25a7d","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/MyJPAJSONAnySearchDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -168,7 +168,7 @@ private void fillAttrQuery(\n                 }\n \n                 query.append(\"JSON_CONTAINS(plainAttrs, '\").\n-                        append(POJOHelper.serialize(List.of(container))).\n+                        append(POJOHelper.serialize(List.of(container)).replace(\"'\", \"''\")).\n                         append(\"')\");\n             } else {\n                 String key = key(schema.getType());"},{"sha":"a844be6a0a1e5e8becab6e80ea79a69b1d19920e","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnyDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -64,7 +64,7 @@ protected String attrValueMatch(\n             } else {\n                 ((JSONPlainAttr) container).add(attrValue);\n             }\n-            return \"plainAttrs @> '\" + POJOHelper.serialize(List.of(container)) + \"'::jsonb\";\n+            return \"plainAttrs @> '\" + POJOHelper.serialize(List.of(container)).replace(\"'\", \"''\") + \"'::jsonb\";\n         }\n     }\n }"},{"sha":"b6d5b26ab6f24a75bc718493b483fd4134025920","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -137,7 +137,7 @@ private void fillAttrQuery(\n                 }\n \n                 query.append(\"plainAttrs @> '\").\n-                        append(POJOHelper.serialize(List.of(container))).\n+                        append(POJOHelper.serialize(List.of(container)).replace(\"'\", \"''\")).\n                         append(\"'::jsonb\");\n             } else {\n                 String key = key(schema.getType());"},{"sha":"cf38a3d7c351157df1d963fabb1c31020a5513f7","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -152,6 +152,9 @@ under the License.\n   <SyncopeSchema id=\"title\"/>\n   <PlainSchema id=\"title\" type=\"String\" anyTypeClass_id=\"minimal group\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <SyncopeSchema id=\"originalName\"/>\n+  <PlainSchema id=\"originalName\" type=\"String\" anyTypeClass_id=\"minimal group\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"1\" readonly=\"0\"/>\n \n   <SyncopeSchema id=\"rderiveddata\"/>\n   <DerSchema id=\"rderiveddata\" expression=\"rderived_sx + '-' + rderived_dx\""},{"sha":"9059e59b5e097a2c160c024a10d79c2dbb4eb88f","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -54,7 +54,7 @@ public class PlainSchemaTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<PlainSchema> schemas = plainSchemaDAO.findAll();\n-        assertEquals(26, schemas.size());\n+        assertEquals(27, schemas.size());\n     }\n \n     @Test"},{"sha":"a659697ed84f48c1b982647b3d7fbf17af67de5b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnySearchTest.java","status":"modified","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -33,13 +33,16 @@\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.RoleCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n import org.apache.syncope.core.persistence.api.entity.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.junit.jupiter.api.Test;\n@@ -61,6 +64,9 @@ public class AnySearchTest extends AbstractTest {\n     @Autowired\n     private RoleDAO roleDAO;\n \n+    @Autowired\n+    private PlainSchemaDAO plainSchemaDAO;\n+\n     @Test\n     public void searchByDynMembership() {\n         // 1. create role with dynamic membership\n@@ -139,4 +145,44 @@ public void issueSYNCOPE1417() {\n             assertEquals(ClientExceptionType.InvalidSearchExpression, e.getType());\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1512() {\n+        Group group = groupDAO.findByName(\"root\");\n+        assertNotNull(group);\n+\n+        // non unique\n+        GPlainAttr title = entityFactory.newEntity(GPlainAttr.class);\n+        title.setOwner(group);\n+        title.setSchema(plainSchemaDAO.find(\"title\"));\n+        title.add(\"syncope's group\", anyUtilsFactory.getInstance(AnyTypeKind.GROUP));\n+        group.add(title);\n+\n+        // unique\n+        GPlainAttr originalName = entityFactory.newEntity(GPlainAttr.class);\n+        originalName.setOwner(group);\n+        originalName.setSchema(plainSchemaDAO.find(\"originalName\"));\n+        originalName.add(\"syncope's group\", anyUtilsFactory.getInstance(AnyTypeKind.GROUP));\n+        group.add(originalName);\n+\n+        groupDAO.save(group);\n+\n+        entityManager().flush();\n+\n+        AttributeCond titleCond = new AttributeCond(AttributeCond.Type.EQ);\n+        titleCond.setSchema(\"title\");\n+        titleCond.setExpression(\"syncope's group\");\n+\n+        List<Group> matching = searchDAO.search(SearchCond.getLeafCond(titleCond), AnyTypeKind.GROUP);\n+        assertEquals(1, matching.size());\n+        assertEquals(group.getKey(), matching.get(0).getKey());\n+\n+        AttributeCond originalNameCond = new AttributeCond(AttributeCond.Type.EQ);\n+        originalNameCond.setSchema(\"originalName\");\n+        originalNameCond.setExpression(\"syncope's group\");\n+\n+        matching = searchDAO.search(SearchCond.getLeafCond(originalNameCond), AnyTypeKind.GROUP);\n+        assertEquals(1, matching.size());\n+        assertEquals(group.getKey(), matching.get(0).getKey());\n+    }\n }"},{"sha":"c85767696438a434ae460a68daea40614fd06c82","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -371,4 +371,32 @@ public void adynMembership() {\n         dynGroupMemberships = findDynGroups(anyObject);\n         assertTrue(dynGroupMemberships.isEmpty());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1512() {\n+        Group group = groupDAO.findByName(\"root\");\n+        assertNotNull(group);\n+\n+        // non unique\n+        GPlainAttr title = entityFactory.newEntity(GPlainAttr.class);\n+        title.setOwner(group);\n+        title.setSchema(plainSchemaDAO.find(\"title\"));\n+        title.add(\"syncope's group\", anyUtilsFactory.getInstance(AnyTypeKind.GROUP));\n+        group.add(title);\n+\n+        // unique\n+        GPlainAttr originalName = entityFactory.newEntity(GPlainAttr.class);\n+        originalName.setOwner(group);\n+        originalName.setSchema(plainSchemaDAO.find(\"originalName\"));\n+        originalName.add(\"syncope's group\", anyUtilsFactory.getInstance(AnyTypeKind.GROUP));\n+        group.add(originalName);\n+\n+        groupDAO.save(group);\n+\n+        entityManager().flush();\n+\n+        group = groupDAO.find(group.getKey());\n+        assertEquals(\"syncope's group\", group.getPlainAttr(\"title\").get().getValuesAsStrings().get(0));\n+        assertEquals(\"syncope's group\", group.getPlainAttr(\"originalName\").get().getValuesAsStrings().get(0));\n+    }\n }"},{"sha":"e9ba453108c4b17a1b8563e92f449569545570bc","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dea9c22f4c88a7d8cc1f1abf87be40dd0383b647/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=dea9c22f4c88a7d8cc1f1abf87be40dd0383b647","patch":"@@ -357,6 +357,9 @@ under the License.\n   <SyncopeSchema id=\"title\"/>\n   <PlainSchema id=\"title\" type=\"String\" anyTypeClass_id=\"minimal group\"\n                mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <SyncopeSchema id=\"originalName\"/>\n+  <PlainSchema id=\"originalName\" type=\"String\" anyTypeClass_id=\"minimal group\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"1\" readonly=\"0\"/>\n \n   <SyncopeSchema id=\"rderiveddata\"/>\n   <DerSchema id=\"rderiveddata\" expression=\"rderived_sx + '-' + rderived_dx\""}]}