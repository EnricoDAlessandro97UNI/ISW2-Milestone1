{"sha":"b5c5aefde2aa48045684e10bc9772046d866fa71","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI1YzVhZWZkZTJhYTQ4MDQ1Njg0ZTEwYmM5NzcyMDQ2ZDg2NmZhNzE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-17T11:26:25Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-17T11:26:25Z"},"message":"Bugfixing account id update propagation\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246796 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f72b950671a62d23d83be71313cdad94bc9e400c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f72b950671a62d23d83be71313cdad94bc9e400c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b5c5aefde2aa48045684e10bc9772046d866fa71","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5c5aefde2aa48045684e10bc9772046d866fa71","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5c5aefde2aa48045684e10bc9772046d866fa71","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5c5aefde2aa48045684e10bc9772046d866fa71/comments","author":null,"committer":null,"parents":[{"sha":"b79fce1454b63c91e3fb1f11cdc6ac9e977d64ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b79fce1454b63c91e3fb1f11cdc6ac9e977d64ea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b79fce1454b63c91e3fb1f11cdc6ac9e977d64ea"}],"stats":{"total":117,"additions":63,"deletions":54},"files":[{"sha":"cd9f94cf27cef1de0953bf3c84bcb16a036954c8","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":25,"deletions":31,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=b5c5aefde2aa48045684e10bc9772046d866fa71","patch":"@@ -147,31 +147,6 @@ public ConnectorFacadeProxy(final ConnectorInstance connectorInstance)\n         this.capabitilies = connectorInstance.getCapabilities();\n     }\n \n-    public Uid create(\n-            final PropagationMode propagationMode,\n-            final ObjectClass oclass,\n-            final Set<Attribute> attrs,\n-            final OperationOptions options,\n-            final Set<String> triedPropagationRequests) {\n-\n-        Uid result = null;\n-\n-        if (propagationMode == PropagationMode.SYNC\n-                ? capabitilies.contains(\n-                ConnectorCapability.SYNC_CREATE)\n-                : capabitilies.contains(\n-                ConnectorCapability.ASYNC_CREATE)) {\n-\n-            if (triedPropagationRequests != null) {\n-                triedPropagationRequests.add(\"create\");\n-            }\n-\n-            result = connector.create(oclass, attrs, options);\n-        }\n-\n-        return result;\n-    }\n-\n     public Uid resolveUsername(\n             final PropagationMode propagationMode,\n             final ResourceOperationType operationType,\n@@ -214,6 +189,29 @@ public Uid resolveUsername(\n         return result;\n     }\n \n+    public Uid create(\n+            final PropagationMode propagationMode,\n+            final ObjectClass oclass,\n+            final Set<Attribute> attrs,\n+            final OperationOptions options,\n+            final Set<String> triedPropagationRequests) {\n+\n+        Uid result = null;\n+\n+        if (propagationMode == PropagationMode.SYNC\n+                ? capabitilies.contains(\n+                ConnectorCapability.SYNC_CREATE)\n+                : capabitilies.contains(\n+                ConnectorCapability.ASYNC_CREATE)) {\n+\n+            triedPropagationRequests.add(\"create\");\n+\n+            result = connector.create(oclass, attrs, options);\n+        }\n+\n+        return result;\n+    }\n+\n     public Uid update(final PropagationMode propagationMode,\n             final ObjectClass objclass,\n             final Uid uid,\n@@ -229,9 +227,7 @@ public Uid update(final PropagationMode propagationMode,\n                 : capabitilies.contains(\n                 ConnectorCapability.ASYNC_UPDATE)) {\n \n-            if (triedPropagationRequests != null) {\n-                triedPropagationRequests.add(\"update\");\n-            }\n+            triedPropagationRequests.add(\"update\");\n \n             result = connector.update(\n                     objclass, uid, replaceAttributes, options);\n@@ -252,9 +248,7 @@ public void delete(final PropagationMode propagationMode,\n                 : capabitilies.contains(\n                 ConnectorCapability.ASYNC_DELETE)) {\n \n-            if (triedPropagationRequests != null) {\n-                triedPropagationRequests.add(\"delete\");\n-            }\n+            triedPropagationRequests.add(\"delete\");\n \n             connector.delete(objClass, uid, options);\n         }"},{"sha":"df2d50bf03536ae378ebcd07a65de443cbf4b072","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=b5c5aefde2aa48045684e10bc9772046d866fa71","patch":"@@ -241,7 +241,8 @@ private void provision(\n                         ? PropagationMode.SYNC\n                         : resource.getOptionalPropagationMode());\n                 task.setAccountId(accountId);\n-                task.setOldAccountId(resourceOperations.getOldAccountId());\n+                task.setOldAccountId(\n+                        resourceOperations.getOldAccountId(resource.getName()));\n                 task.setAttributes(\n                         preparedAttributes.values().iterator().next());\n \n@@ -305,11 +306,10 @@ private Class getSourceMappingTypeClass(\n     private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n             String password, TargetResource resource) {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Preparing resource attributes for \" + user\n-                    + \" on resource \" + resource\n-                    + \" with attributes: \" + user.getAttributes());\n-        }\n+        LOG.debug(\"Preparing resource attributes for {}\"\n+                + \" on resource {}\"\n+                + \" with attributes {}\",\n+                new Object[]{user, resource, user.getAttributes()});\n \n         // set of user attributes\n         Set<Attribute> attributes = new HashSet<Attribute>();\n@@ -353,14 +353,14 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                                 : attr.getValues())\n                                 : Collections.EMPTY_LIST;\n \n-                        if (LOG.isDebugEnabled()) {\n-                            LOG.debug(\"Retrieved attribute \" + attr\n-                                    + \"\\n* SourceAttrName \"\n-                                    + mapping.getSourceAttrName()\n-                                    + \"\\n* SourceMappingType \"\n-                                    + mapping.getSourceMappingType()\n-                                    + \"\\n* Attribute values \" + values);\n-                        }\n+                        LOG.debug(\"Retrieved attribute {}\"\n+                                + \"\\n* SourceAttrName {}\"\n+                                + \"\\n* SourceMappingType {}\"\n+                                + \"\\n* Attribute values {}\",\n+                                new Object[]{attr,\n+                                    mapping.getSourceAttrName(),\n+                                    mapping.getSourceMappingType(),\n+                                    values});\n                         break;\n \n                     case SyncopeUserId:"},{"sha":"063e75abd3391ecb23a07adde368c2002fb6f45f","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":22,"deletions":8,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=b5c5aefde2aa48045684e10bc9772046d866fa71","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -15,22 +15,32 @@\n package org.syncope.core.persistence.propagation;\n \n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.Map;\n import java.util.Set;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.types.ResourceOperationType;\n \n public class ResourceOperations {\n \n     private Set<TargetResource> toBeCreated;\n+\n     private Set<TargetResource> toBeUpdated;\n+\n     private Set<TargetResource> toBeDeleted;\n-    private String oldAccountId;\n+\n+    /**\n+     * Mapping target resource names to old account ids (when applicable).\n+     */\n+    private Map<String, String> oldAccountIds;\n \n     public ResourceOperations() {\n         toBeCreated = new HashSet<TargetResource>();\n         toBeUpdated = new HashSet<TargetResource>();\n         toBeDeleted = new HashSet<TargetResource>();\n+\n+        oldAccountIds = new HashMap<String, String>();\n     }\n \n     /**\n@@ -181,19 +191,23 @@ public final boolean isEmpty() {\n                 && toBeUpdated.isEmpty();\n     }\n \n-    public String getOldAccountId() {\n-        return oldAccountId;\n+    public String getOldAccountId(final String resourceName) {\n+        return oldAccountIds.get(resourceName);\n     }\n \n-    public void setOldAccountId(final String oldAccountId) {\n-        this.oldAccountId = oldAccountId;\n+    public void addOldAccountId(final String resourceName,\n+            final String oldAccountId) {\n+\n+        if (resourceName != null && oldAccountId != null) {\n+            oldAccountIds.put(resourceName, oldAccountId);\n+        }\n     }\n \n     @Override\n     public String toString() {\n         return \"To be Created: \" + toBeCreated + \";\\n\"\n                 + \"To be Updated: \" + toBeUpdated + \";\\n\"\n                 + \"To be Deleted: \" + toBeDeleted + \";\\n\"\n-                + \"Old account Id: \" + oldAccountId;\n+                + \"Old account Ids: \" + oldAccountIds;\n     }\n }"},{"sha":"b6f6224c17d05d738b1b8489f4056a2a43b8e759","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5c5aefde2aa48045684e10bc9772046d866fa71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=b5c5aefde2aa48045684e10bc9772046d866fa71","patch":"@@ -346,7 +346,8 @@ protected ResourceOperations fill(\n                         if (mapping.isAccountid() && attribute != null\n                                 && !attribute.getValuesAsStrings().isEmpty()) {\n \n-                            resourceOperations.setOldAccountId(\n+                            resourceOperations.addOldAccountId(\n+                                    mapping.getResource().getName(),\n                                     attribute.getValuesAsStrings().\n                                     iterator().next());\n                         }"}]}