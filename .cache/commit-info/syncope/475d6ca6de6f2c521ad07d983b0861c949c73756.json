{"sha":"475d6ca6de6f2c521ad07d983b0861c949c73756","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3NWQ2Y2E2ZGU2ZjJjNTIxYWQwN2Q5ODNiMDg2MWM5NDljNzM3NTY=","commit":{"author":{"name":"Federico Palmitesta","email":"federico.palmitesta@gmail.com","date":"2019-12-17T15:24:30Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2019-12-17T15:42:45Z"},"message":"[SYNCOPE-1530] Provide the possibility to start a User Request with custom variables. (#150)","tree":{"sha":"77daedad3b3c41c69bf83a82723500747313fd4e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/77daedad3b3c41c69bf83a82723500747313fd4e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/475d6ca6de6f2c521ad07d983b0861c949c73756","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/475d6ca6de6f2c521ad07d983b0861c949c73756","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/475d6ca6de6f2c521ad07d983b0861c949c73756","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/475d6ca6de6f2c521ad07d983b0861c949c73756/comments","author":{"login":"FedericoPalmitesta","id":23123123,"node_id":"MDQ6VXNlcjIzMTIzMTIz","avatar_url":"https://avatars.githubusercontent.com/u/23123123?v=4","gravatar_id":"","url":"https://api.github.com/users/FedericoPalmitesta","html_url":"https://github.com/FedericoPalmitesta","followers_url":"https://api.github.com/users/FedericoPalmitesta/followers","following_url":"https://api.github.com/users/FedericoPalmitesta/following{/other_user}","gists_url":"https://api.github.com/users/FedericoPalmitesta/gists{/gist_id}","starred_url":"https://api.github.com/users/FedericoPalmitesta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FedericoPalmitesta/subscriptions","organizations_url":"https://api.github.com/users/FedericoPalmitesta/orgs","repos_url":"https://api.github.com/users/FedericoPalmitesta/repos","events_url":"https://api.github.com/users/FedericoPalmitesta/events{/privacy}","received_events_url":"https://api.github.com/users/FedericoPalmitesta/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"414e2b314f7f26040f0f14117d3adc2f21b68cd8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/414e2b314f7f26040f0f14117d3adc2f21b68cd8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/414e2b314f7f26040f0f14117d3adc2f21b68cd8"}],"stats":{"total":165,"additions":146,"deletions":19},"files":[{"sha":"3d449aff44025cc6c3e85620278e335c58087e46","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserRequestRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -82,7 +82,7 @@ public static void submitForm(final UserRequestForm form) {\n     }\n \n     public static void start(final String bpmnProcess, final String user) {\n-        getService(UserRequestService.class).start(bpmnProcess, user);\n+        getService(UserRequestService.class).start(bpmnProcess, user, null);\n     }\n \n     public static UserRequestForm claimForm(final String taskKey) {"},{"sha":"105278ed59fd3ae5c6ffc48d0eab47020a820237","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/api/UserRequestHandler.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fapi%2FUserRequestHandler.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.UserWorkflowResult;\n@@ -49,9 +50,10 @@ Pair<Integer, List<UserRequest>> getUserRequests(\n      *\n      * @param bpmnProcess BPMN process\n      * @param user user\n+     * @param inputVariables variables\n      * @return data about the started request service, including execution id\n      */\n-    UserRequest start(String bpmnProcess, User user);\n+    UserRequest start(String bpmnProcess, User user, WorkflowTaskExecInput inputVariables);\n \n     /**\n      * Parses the given execution id to find matching user request and owner."},{"sha":"233b3f2e8c83921206f060085ccea8d421184d63","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestFormProperty;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n@@ -195,12 +196,14 @@ protected User lazyLoad(final User user) {\n     }\n \n     @Override\n-    public UserRequest start(final String bpmnProcess, final User user) {\n+    public UserRequest start(final String bpmnProcess, final User user, final WorkflowTaskExecInput inputVariables) {\n         Map<String, Object> variables = new HashMap<>();\n         variables.put(FlowableRuntimeUtils.WF_EXECUTOR, AuthContextUtils.getUsername());\n         variables.put(FlowableRuntimeUtils.USER, lazyLoad(user));\n         variables.put(FlowableRuntimeUtils.USER_TO, dataBinder.getUserTO(user, true));\n-\n+        if (inputVariables != null) {\n+            variables.putAll(inputVariables.getVariables());\n+        }\n         ProcessInstance procInst = null;\n         try {\n             procInst = engine.getRuntimeService().startProcessInstanceByKey(bpmnProcess, variables);"},{"sha":"65ed365f0d2d16e55418d930cf95fb0d3e904073","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/UserRequestLogic.java","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.lib.types.BpmnProcessFormat;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.FlowableEntitlement;\n@@ -95,21 +96,27 @@ public Pair<Integer, List<UserRequest>> list(final String userKey,\n         return userRequestHandler.getUserRequests(userKey, page, size, orderByClauses);\n     }\n \n-    protected UserRequest doStart(final String bpmnProcess, final User user) {\n+    protected UserRequest doStart(\n+            final String bpmnProcess,\n+            final User user,\n+            final WorkflowTaskExecInput inputVariables) {\n         // check if BPMN process exists\n         bpmnProcessManager.exportProcess(bpmnProcess, BpmnProcessFormat.XML, new NullOutputStream());\n \n-        return userRequestHandler.start(bpmnProcess, user);\n+        return userRequestHandler.start(bpmnProcess, user, inputVariables);\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public UserRequest start(final String bpmnProcess) {\n-        return doStart(bpmnProcess, userDAO.findByUsername(AuthContextUtils.getUsername()));\n+    public UserRequest start(final String bpmnProcess, final WorkflowTaskExecInput inputVariables) {\n+        return doStart(bpmnProcess, userDAO.findByUsername(AuthContextUtils.getUsername()), inputVariables);\n     }\n \n     @PreAuthorize(\"hasRole('\" + FlowableEntitlement.USER_REQUEST_START + \"')\")\n-    public UserRequest start(final String bpmnProcess, final String userKey) {\n-        return doStart(bpmnProcess, userDAO.authFind(userKey));\n+    public UserRequest start(\n+            final String bpmnProcess,\n+            final String userKey,\n+            final WorkflowTaskExecInput inputVariables) {\n+        return doStart(bpmnProcess, userDAO.authFind(userKey), inputVariables);\n     }\n \n     protected static void securityChecks(final String username, final String entitlement, final String errorMessage) {"},{"sha":"d9bcd53a5c45eba048d05ea9bf89d54f81e3d3fa","filename":"ext/flowable/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserRequestService.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserRequestService.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.UserRequestFormQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n@@ -67,14 +68,16 @@ public interface UserRequestService extends JAXRSService {\n      *\n      * @param bpmnProcess BPMN process\n      * @param user if value looks like a UUID then it is interpreted as key otherwise as a username\n+     * @param inputVariables initial request variables\n      * @return data about the started request service, including execution id\n      */\n     @POST\n     @Path(\"start/{bpmnProcess}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     UserRequest start(\n             @NotNull @PathParam(\"bpmnProcess\") String bpmnProcess,\n-            @QueryParam(JAXRSService.PARAM_USER) String user);\n+            @QueryParam(JAXRSService.PARAM_USER) String user,\n+            WorkflowTaskExecInput inputVariables);\n \n     /**\n      * Cancel a running user request."},{"sha":"4f939c4c088986309370968d6f8f59f47155091b","filename":"ext/flowable/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserRequestServiceImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserRequestServiceImpl.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -24,6 +24,7 @@\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.rest.api.beans.UserRequestFormQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n import org.apache.syncope.core.logic.UserRequestLogic;\n@@ -53,10 +54,10 @@ public PagedResult<UserRequest> list(final UserRequestQuery query) {\n     }\n \n     @Override\n-    public UserRequest start(final String bpmnProcess, final String user) {\n+    public UserRequest start(final String bpmnProcess, final String user, final WorkflowTaskExecInput inputVariables) {\n         return user == null\n-                ? logic.start(bpmnProcess)\n-                : logic.start(bpmnProcess, getActualKey(userDAO, user));\n+                ? logic.start(bpmnProcess, inputVariables)\n+                : logic.start(bpmnProcess, getActualKey(userDAO, user), inputVariables);\n     }\n \n     @Override"},{"sha":"0528e222d708f6d6294e3de4e0d17d7f207c4e24","filename":"fit/core-reference/src/main/resources/verifyAddedVariables.bpmn20.xml","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FverifyAddedVariables.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FverifyAddedVariables.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FverifyAddedVariables.bpmn20.xml?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -0,0 +1,64 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+             xmlns:flowable=\"http://flowable.org/bpmn\"\n+             xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n+             xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" \n+             xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" \n+             typeLanguage=\"http://www.w3.org/2001/XMLSchema\" \n+             expressionLanguage=\"http://www.w3.org/1999/XPath\" \n+             targetNamespace=\"http://www.flowable.org/processdef\">\n+\n+  <process id=\"verifyAddedVariables\" name=\"Verify Added Variables\" isExecutable=\"true\">\n+    <startEvent id=\"startevent1\" name=\"Start\" flowable:formFieldValidation=\"true\"/>\n+    <userTask id=\"testForm\" name=\"Test Form\" flowable:formKey=\"approval\" flowable:formFieldValidation=\"true\">\n+      <extensionElements>\n+        <flowable:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\" variable=\"approve\" required=\"true\"/>\n+        <flowable:formProperty id=\"providedVariable\" name=\"Provided Variable\" type=\"string\" expression=\"${providedVariable}\" writable=\"false\"/>\n+        <flowable:formProperty id=\"username\" name=\"Username\" type=\"string\" expression=\"${userTO.username}\" writable=\"false\"/>\n+      </extensionElements>\n+    </userTask>\n+    <sequenceFlow id=\"sid-27C1484D-96E9-4B39-A129-F4AB14ABDF13\" sourceRef=\"testForm\" targetRef=\"endevent1\"/>\n+    <sequenceFlow id=\"sid-A9FEC01B-768E-4C07-B025-6D019D72015F\" sourceRef=\"startevent1\" targetRef=\"testForm\"/>\n+    <endEvent id=\"endevent1\" name=\"End\"/>\n+  </process>\n+  <bpmndi:BPMNDiagram id=\"BPMNDiagram_userWorkflow\">\n+    <bpmndi:BPMNPlane bpmnElement=\"userWorkflow\" id=\"BPMNPlane_userWorkflow\">\n+      <bpmndi:BPMNShape bpmnElement=\"startevent1\" id=\"BPMNShape_startevent1\">\n+        <omgdc:Bounds height=\"30.0\" width=\"30.0\" x=\"150.0\" y=\"115.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"testForm\" id=\"BPMNShape_testForm\">\n+        <omgdc:Bounds height=\"80.0\" width=\"100.0\" x=\"345.0\" y=\"90.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"endevent1\" id=\"BPMNShape_endevent1\">\n+        <omgdc:Bounds height=\"28.0\" width=\"28.0\" x=\"615.0\" y=\"116.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-27C1484D-96E9-4B39-A129-F4AB14ABDF13\" id=\"BPMNEdge_sid-27C1484D-96E9-4B39-A129-F4AB14ABDF13\">\n+        <omgdi:waypoint x=\"444.94999999992734\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"615.0\" y=\"130.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge bpmnElement=\"sid-A9FEC01B-768E-4C07-B025-6D019D72015F\" id=\"BPMNEdge_sid-A9FEC01B-768E-4C07-B025-6D019D72015F\">\n+        <omgdi:waypoint x=\"179.94999965443563\" y=\"130.0\"/>\n+        <omgdi:waypoint x=\"345.0\" y=\"130.0\"/>\n+      </bpmndi:BPMNEdge>\n+    </bpmndi:BPMNPlane>\n+  </bpmndi:BPMNDiagram>\n+</definitions>"},{"sha":"e1a89ad051967988a0632028b6fd9657211f7007","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserRequestITCase.java","status":"modified","additions":52,"deletions":5,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475d6ca6de6f2c521ad07d983b0861c949c73756/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475d6ca6de6f2c521ad07d983b0861c949c73756/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserRequestITCase.java?ref=475d6ca6de6f2c521ad07d983b0861c949c73756","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.lib.to.UserRequestForm;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.rest.api.beans.UserRequestFormQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n import org.apache.syncope.common.rest.api.service.UserRequestService;\n@@ -54,6 +55,8 @@ public static void loadBpmnProcesses() throws IOException {\n                 IOUtils.toString(UserRequestITCase.class.getResourceAsStream(\"/directorGroupRequest.bpmn20.xml\")));\n         bpmnProcessService.set(\"assignPrinterRequest\",\n                 IOUtils.toString(UserRequestITCase.class.getResourceAsStream(\"/assignPrinterRequest.bpmn20.xml\")));\n+        bpmnProcessService.set(\"verifyAddedVariables\",\n+                IOUtils.toString(UserRequestITCase.class.getResourceAsStream(\"/verifyAddedVariables.bpmn20.xml\")));\n     }\n \n     @Test\n@@ -65,7 +68,7 @@ public void twoLevelsApproval() {\n         assertFalse(user.getMembership(\"ebf97068-aa4b-4a85-9f01-680e8c4cf227\").isPresent());\n \n         // start request\n-        UserRequest req = userRequestService.start(\"directorGroupRequest\", user.getKey());\n+        UserRequest req = userRequestService.start(\"directorGroupRequest\", user.getKey(), null);\n         assertNotNull(req);\n         assertEquals(\"directorGroupRequest\", req.getBpmnProcess());\n         assertNotNull(req.getExecutionId());\n@@ -91,7 +94,7 @@ public void twoLevelsApproval() {\n         assertFalse(userService.read(user.getKey()).getMembership(\"ebf97068-aa4b-4a85-9f01-680e8c4cf227\").isPresent());\n \n         // start request again\n-        req = userRequestService.start(\"directorGroupRequest\", user.getKey());\n+        req = userRequestService.start(\"directorGroupRequest\", user.getKey(), null);\n         assertNotNull(req);\n \n         // 1st approval -> accept\n@@ -114,7 +117,7 @@ public void twoLevelsApproval() {\n         assertFalse(userService.read(user.getKey()).getMembership(\"ebf97068-aa4b-4a85-9f01-680e8c4cf227\").isPresent());\n \n         // start request again\n-        req = userRequestService.start(\"directorGroupRequest\", user.getKey());\n+        req = userRequestService.start(\"directorGroupRequest\", user.getKey(), null);\n         assertNotNull(req);\n \n         // 1st approval -> accept\n@@ -149,7 +152,7 @@ public void cancel() {\n         assertFalse(user.getMembership(\"ebf97068-aa4b-4a85-9f01-680e8c4cf227\").isPresent());\n \n         // start request\n-        UserRequest req = userRequestService.start(\"directorGroupRequest\", user.getKey());\n+        UserRequest req = userRequestService.start(\"directorGroupRequest\", user.getKey(), null);\n         assertNotNull(req);\n \n         // check that form was generated\n@@ -186,7 +189,7 @@ public void userSelection() {\n         SyncopeClient client = clientFactory.create(user.getUsername(), \"password123\");\n \n         // start request as user\n-        UserRequest req = client.getService(UserRequestService.class).start(\"assignPrinterRequest\", null);\n+        UserRequest req = client.getService(UserRequestService.class).start(\"assignPrinterRequest\", null, null);\n         assertNotNull(req);\n \n         // check (as admin) that a new form is available\n@@ -244,4 +247,48 @@ public void userSelection() {\n         assertTrue(relationships.stream().\n                 anyMatch(relationship -> \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\".equals(relationship.getOtherEndKey())));\n     }\n+    \n+    @Test\n+    public void addVariablesToUserRequestAtStart() {\n+        assumeTrue(FlowableDetector.isFlowableEnabledForUserWorkflow(syncopeService));\n+\n+        PagedResult<UserRequestForm> forms =\n+                userRequestService.getForms(new UserRequestFormQuery.Builder().build());\n+        int preForms = forms.getTotalCount();\n+\n+        UserTO user = createUser(UserITCase.getUniqueSample(\"addVariables@tirasa.net\")).getEntity();\n+        assertNotNull(user);\n+\n+        SyncopeClient client = clientFactory.create(user.getUsername(), \"password123\");\n+\n+        WorkflowTaskExecInput testInput = new WorkflowTaskExecInput();\n+        testInput.getVariables().put(\"providedVariable\", \"test\");\n+        \n+        // start request as user\n+        UserRequest req = client.getService(UserRequestService.class).start(\"verifyAddedVariables\", null, testInput);\n+        assertNotNull(req);\n+\n+        // check that a new form is available\n+        forms = userRequestService.getForms(new UserRequestFormQuery.Builder().build());\n+        assertEquals(preForms + 1, forms.getTotalCount());\n+\n+        // get the form and verify the property value\n+        PagedResult<UserRequestForm> userForms = userRequestService.\n+                getForms(new UserRequestFormQuery.Builder().user(user.getKey()).build());\n+        assertEquals(1, userForms.getTotalCount());\n+\n+        UserRequestForm form = userForms.getResult().get(0);\n+        form = userRequestService.claimForm(form.getTaskId());\n+        assertEquals(form.getProperty(\"providedVariable\").get().getValue(), \"test\");\n+        \n+        // cancel request\n+        userRequestService.cancel(req.getExecutionId(), \"nothing in particular\");\n+       \n+        // no more forms available\n+        forms = userRequestService.getForms(new UserRequestFormQuery.Builder().build());\n+        assertEquals(preForms, forms.getTotalCount());\n+\n+        assertTrue(client.getService(UserRequestService.class).\n+                list(new UserRequestQuery.Builder().user(user.getKey()).build()).getResult().isEmpty());\n+    }\n }"}]}