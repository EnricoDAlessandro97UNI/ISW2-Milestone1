{"sha":"eb58c5c68724c295b012e36768bb84bd69f3c4b0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmViNThjNWM2ODcyNGMyOTViMDEyZTM2NzY4YmI4NGJkNjlmM2M0YjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-06-25T13:38:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-06-25T13:43:03Z"},"message":"Upgrading Commons JEXL, CodeMirror and AspectJ","tree":{"sha":"c8bca970ef69025f291937265e89541f3132207d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c8bca970ef69025f291937265e89541f3132207d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/eb58c5c68724c295b012e36768bb84bd69f3c4b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb58c5c68724c295b012e36768bb84bd69f3c4b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb58c5c68724c295b012e36768bb84bd69f3c4b0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb58c5c68724c295b012e36768bb84bd69f3c4b0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b67b7ed5bfb08556ddfdacd5cc833d8f0bed6874","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b67b7ed5bfb08556ddfdacd5cc833d8f0bed6874","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b67b7ed5bfb08556ddfdacd5cc833d8f0bed6874"}],"stats":{"total":33,"additions":13,"deletions":20},"files":[{"sha":"bb44c190954246d5d0db18afe81df9d5d2d663a1","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractJPAJSONAnyDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java?ref=eb58c5c68724c295b012e36768bb84bd69f3c4b0","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n@@ -219,7 +218,7 @@ public <A extends Any<?>> List<A> findByDerAttrValue(\n             return List.of();\n         }\n \n-        Parser parser = new Parser(new StringReader(derSchema.getExpression()));\n+        Parser parser = new Parser(derSchema.getExpression());\n \n         // Schema keys\n         List<String> identifiers = new ArrayList<>();"},{"sha":"bc529dd1e2609bb6f3b91acaa32ab3106025f8bf","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=eb58c5c68724c295b012e36768bb84bd69f3c4b0","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -284,7 +283,7 @@ private static List<String> split(final String attrValue, final List<String> lit\n     }\n \n     private Set<String> getWhereClause(final String expression, final String value, final boolean ignoreCaseMatch) {\n-        Parser parser = new Parser(new StringReader(expression));\n+        Parser parser = new Parser(expression);\n \n         // Schema keys\n         List<String> identifiers = new ArrayList<>();"},{"sha":"3675fc8f3e036b47e1436e04e0a4476f8a45d1f7","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/jexl/SandboxUberspect.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb58c5c68724c295b012e36768bb84bd69f3c4b0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java?ref=eb58c5c68724c295b012e36768bb84bd69f3c4b0","patch":"@@ -19,17 +19,13 @@\n package org.apache.syncope.core.provisioning.api.jexl;\n \n import java.time.Instant;\n-import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n import org.apache.commons.jexl3.JexlEngine;\n-import org.apache.commons.jexl3.internal.TemplateInterpreter;\n import org.apache.commons.jexl3.internal.introspection.Uberspect;\n import org.apache.commons.jexl3.introspection.JexlMethod;\n import org.apache.commons.jexl3.introspection.JexlPropertySet;\n@@ -46,14 +42,14 @@\n \n class SandboxUberspect extends Uberspect {\n \n-    private static final Set<String> COLLECTION_METHODS = Collections.unmodifiableSet(new HashSet<>(\n-            Arrays.asList(\"contains\", \"containsAll\", \"isEmpty\", \"size\", \"iterator\", \"toString\")));\n+    private static final Set<String> COLLECTION_METHODS =\n+            Set.of(\"contains\", \"containsAll\", \"isEmpty\", \"size\", \"iterator\", \"toString\");\n \n-    private static final Set<String> LIST_METHODS = Collections.unmodifiableSet(new HashSet<>(\n-            Arrays.asList(\"get\", \"indexOf\", \"lastIndexOf\", \"toString\")));\n+    private static final Set<String> LIST_METHODS =\n+            Set.of(\"get\", \"indexOf\", \"lastIndexOf\", \"toString\");\n \n-    private static final Set<String> MAP_METHODS = Collections.unmodifiableSet(new HashSet<>(\n-            Arrays.asList(\"get\", \"getOrDefault\", \"containsKey\", \"containsValue\", \"toString\")));\n+    private static final Set<String> MAP_METHODS =\n+            Set.of(\"get\", \"getOrDefault\", \"containsKey\", \"containsValue\", \"toString\");\n \n     SandboxUberspect() {\n         super(LogFactory.getLog(JexlEngine.class), JexlUberspect.JEXL_STRATEGY);\n@@ -66,9 +62,7 @@ public JexlMethod getConstructor(final Object ctorHandle, final Object... args)\n \n     @Override\n     public JexlMethod getMethod(final Object obj, final String method, final Object... args) {\n-        if (obj instanceof TemplateInterpreter) { // https://issues.apache.org/jira/browse/JEXL-351\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof AnyTO || obj instanceof Any\n+        if (obj instanceof AnyTO || obj instanceof Any\n                 || obj instanceof PlainAttr || obj instanceof Attr\n                 || obj instanceof MembershipTO || obj instanceof Membership\n                 || obj instanceof Realm || obj instanceof RealmTO) {"},{"sha":"890ca007e79f31099bb28a4ef5eec9a3d8e5f0a1","filename":"pom.xml","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb58c5c68724c295b012e36768bb84bd69f3c4b0/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb58c5c68724c295b012e36768bb84bd69f3c4b0/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=eb58c5c68724c295b012e36768bb84bd69f3c4b0","patch":"@@ -439,7 +439,7 @@ under the License.\n     <log4j.version>2.14.1</log4j.version>\n     <disruptor.version>3.4.4</disruptor.version>\n     \n-    <commons-jexl.version>3.2</commons-jexl.version>\n+    <commons-jexl.version>3.2.1</commons-jexl.version>\n     <commons-lang.version>3.12.0</commons-lang.version>\n     <commons-text.version>1.9</commons-text.version>\n     <commons-codec.version>1.15</commons-codec.version>\n@@ -466,7 +466,8 @@ under the License.\n     <bootbox.version>5.5.2</bootbox.version>\n     <font-awesome.version>5.15.3</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n-    <codemirror.version>5.50.0</codemirror.version>\n+    <highlightjs.version>10.1.2</highlightjs.version>\n+    <codemirror.version>5.62.0</codemirror.version>\n     <googlediffmatchpath.version>895a9512bb</googlediffmatchpath.version>\n     <jsplumb.version>2.0.7</jsplumb.version>\n     <chartjs.version>1.0.2</chartjs.version>\n@@ -972,7 +973,7 @@ under the License.\n       <dependency>\n         <groupId>org.aspectj</groupId>\n         <artifactId>aspectjweaver</artifactId>\n-        <version>1.9.6</version>\n+        <version>1.9.7</version>\n       </dependency>\n \n       <dependency>"}]}