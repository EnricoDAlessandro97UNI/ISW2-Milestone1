{"sha":"e233932c16d6174d5ca056a8190a925337f46954","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUyMzM5MzJjMTZkNjE3NGQ1Y2EwNTZhODE5MGE5MjUzMzdmNDY5NTQ=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-15T15:35:34Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-02-15T15:35:34Z"},"message":"SYNCOPE-312 Moving workflow related methods from UserService to UserWorkflowService\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1446632 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"397e370036c5749ec6a35ca399b536909e9b65c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/397e370036c5749ec6a35ca399b536909e9b65c0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e233932c16d6174d5ca056a8190a925337f46954","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e233932c16d6174d5ca056a8190a925337f46954","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e233932c16d6174d5ca056a8190a925337f46954","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e233932c16d6174d5ca056a8190a925337f46954/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"1d51597a1f5292a8e7a21b03ff8b3d7994bd6ee3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d51597a1f5292a8e7a21b03ff8b3d7994bd6ee3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1d51597a1f5292a8e7a21b03ff8b3d7994bd6ee3"}],"stats":{"total":290,"additions":199,"deletions":91},"files":[{"sha":"68a75663ac9596851564837ec07e309ddc69072b","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserServiceProxy.java","status":"modified","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.to.WorkflowFormTO;\n import org.springframework.web.client.RestTemplate;\n \n public class UserServiceProxy extends SpringServiceProxy implements UserService {\n@@ -93,34 +92,6 @@ public UserTO delete(final Long userId) {\n         return getRestTemplate().getForObject(baseUrl + \"user/delete/{userId}\", UserTO.class, userId);\n     }\n \n-    @Override\n-    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n-        return null;\n-    }\n-\n-    @Override\n-    public List<WorkflowFormTO> getForms() {\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"user/workflow/form/list\",\n-                WorkflowFormTO[].class));\n-    }\n-\n-    @Override\n-    public WorkflowFormTO getFormForUser(final Long userId) {\n-        return getRestTemplate().getForObject(baseUrl + \"user/workflow/form/{userId}\", WorkflowFormTO.class,\n-                userId);\n-    }\n-\n-    @Override\n-    public WorkflowFormTO claimForm(final String taskId) {\n-        return getRestTemplate().getForObject(baseUrl + \"user/workflow/form/claim/{taskId}\",\n-                WorkflowFormTO.class, taskId);\n-    }\n-\n-    @Override\n-    public UserTO submitForm(final WorkflowFormTO form) {\n-        return getRestTemplate().postForObject(baseUrl + \"user/workflow/form/submit\", form, UserTO.class);\n-    }\n-\n     @Override\n     public UserTO activate(final long userId, final String token) {\n         return getRestTemplate().getForObject(baseUrl + \"user/activate/{userId}?token=\" + token, UserTO.class, userId);"},{"sha":"28d3cb6fdb2eb7328cbf838813c6b78c24b2e689","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserWorkflowServiceProxy.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserWorkflowServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserWorkflowServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserWorkflowServiceProxy.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.services.proxy;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.syncope.common.services.UserWorkflowService;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n+import org.springframework.web.client.RestTemplate;\n+\n+public class UserWorkflowServiceProxy extends SpringServiceProxy implements UserWorkflowService {\n+\n+    public UserWorkflowServiceProxy(String baseUrl, RestTemplate restTemplate) {\n+\t\tsuper(baseUrl, restTemplate);\n+\t}\n+\n+\t@Override\n+    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<WorkflowFormTO> getForms() {\n+        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"user/workflow/form/list\",\n+                WorkflowFormTO[].class));\n+    }\n+\n+    @Override\n+    public WorkflowFormTO getFormForUser(final Long userId) {\n+        return getRestTemplate().getForObject(baseUrl + \"user/workflow/form/{userId}\", WorkflowFormTO.class,\n+                userId);\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId) {\n+        return getRestTemplate().getForObject(baseUrl + \"user/workflow/form/claim/{taskId}\",\n+                WorkflowFormTO.class, taskId);\n+    }\n+\n+    @Override\n+    public UserTO submitForm(final WorkflowFormTO form) {\n+        return getRestTemplate().postForObject(baseUrl + \"user/workflow/form/submit\", form, UserTO.class);\n+    }\n+\n+}"},{"sha":"c4502f6d9c12c5aecda00df390dda147b3c3461d","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.to.WorkflowFormTO;\n \n @Path(\"users\")\n public interface UserService {\n@@ -56,10 +55,6 @@ UserTO activate(@PathParam(\"userId\") long userId, @QueryParam(\"token\") String to\n     UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"token\") String token,\n             PropagationRequestTO propagationRequestTO);\n \n-    @POST\n-    @Path(\"workflow/tasks/{taskId}/claim\")\n-    WorkflowFormTO claimForm(@PathParam(\"taskId\") String taskId);\n-\n     @GET\n     @Path(\"count\")\n     int count();\n@@ -71,19 +66,7 @@ UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"t\n     @Path(\"{userId}\")\n     UserTO delete(@PathParam(\"userId\") Long userId);\n \n-    @POST\n-    @Path(\"workflow/tasks/{taskId}/execute\")\n-    UserTO executeWorkflow(@PathParam(\"taskId\") String taskId, UserTO userTO);\n-\n-    @GET\n-    @Path(\"{userId}/workflow/form\")\n-    WorkflowFormTO getFormForUser(@PathParam(\"userId\") Long userId);\n-\n-    @GET\n-    @Path(\"workflow/form\")\n-    List<WorkflowFormTO> getForms();\n-\n-    @GET\n+   @GET\n     List<UserTO> list();\n \n     @GET\n@@ -129,10 +112,6 @@ List<UserTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @Path(\"search/count\")\n     int searchCount(NodeCond searchCondition) throws InvalidSearchConditionException;\n \n-    @POST\n-    @Path(\"workflow/form\")\n-    UserTO submitForm(WorkflowFormTO form);\n-\n     @POST\n     @Path(\"{userId}/status/suspend\")\n     UserTO suspend(@PathParam(\"userId\") long userId);\n@@ -156,4 +135,4 @@ List<UserTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @GET\n     Boolean verifyPassword(@QueryParam(\"username\") String username, @QueryParam(\"pwd\") String password);\n \n-}\n+ }"},{"sha":"0c312ce846ae6b44d8c665dc602854307456fd51","filename":"common/src/main/java/org/apache/syncope/common/services/UserWorkflowService.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.services;\n+\n+import java.util.List;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n+\n+@Path(\"userworkflow\")\n+public interface UserWorkflowService {\n+\t@POST\n+\t@Path(\"forms\")\n+\tUserTO submitForm(WorkflowFormTO form);\n+\n+\t@GET\n+\t@Path(\"forms\")\n+\tList<WorkflowFormTO> getForms();\n+\n+\t@GET\n+\t@Path(\"forms/{userId}\")\n+\tWorkflowFormTO getFormForUser(@PathParam(\"userId\") Long userId);\n+\t\n+\t@POST\n+\t@Path(\"tasks/{taskId}/claim\")\n+\tWorkflowFormTO claimForm(@PathParam(\"taskId\") String taskId);\n+\n+\t@POST\n+\t@Path(\"tasks/{taskId}/execute\")\n+\tUserTO executeWorkflow(@PathParam(\"taskId\") String taskId, UserTO userTO);\n+}"},{"sha":"84f379aad23d20b62018b7359c0903c7bfe06a42","filename":"console/src/main/java/org/apache/syncope/console/rest/ApprovalRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n \n-import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.services.UserWorkflowService;\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.springframework.stereotype.Component;\n \n@@ -33,14 +33,14 @@ public class ApprovalRestClient extends BaseRestClient {\n     private static final long serialVersionUID = -4785231164900813921L;\n \n     public List<WorkflowFormTO> getForms() {\n-        return getService(UserService.class).getForms();\n+        return getService(UserWorkflowService.class).getForms();\n     }\n \n     public WorkflowFormTO claimForm(final String taskId) {\n-        return getService(UserService.class).claimForm(taskId);\n+        return getService(UserWorkflowService.class).claimForm(taskId);\n     }\n \n     public void submitForm(final WorkflowFormTO form) {\n-        getService(UserService.class).submitForm(form);\n+        getService(UserWorkflowService.class).submitForm(form);\n     }\n }"},{"sha":"b8949b8723ef4baa8184701fa5567c1594de4158","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -20,7 +20,6 @@\n \n import java.net.URI;\n import java.util.List;\n-import javax.ws.rs.POST;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriInfo;\n import org.apache.syncope.common.SyncopeConstants;\n@@ -30,7 +29,6 @@\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.core.rest.controller.UserController;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n@@ -64,11 +62,6 @@ public UserTO activateByUsername(final String username, final String token,\n         return userController.activate(username, token, propagationRequestTO);\n     }\n \n-    @Override\n-    public WorkflowFormTO claimForm(final String taskId) {\n-        return userController.claimForm(taskId);\n-    }\n-\n     @Override\n     public int count() {\n         return userController.countInternal();\n@@ -89,22 +82,6 @@ public UserTO delete(final Long userId) {\n         return userController.delete(userId);\n     }\n \n-    @Override\n-    @POST\n-    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n-        return userController.executeWorkflow(userTO, taskId);\n-    }\n-\n-    @Override\n-    public WorkflowFormTO getFormForUser(final Long userId) {\n-        return userController.getFormForUser(userId);\n-    }\n-\n-    @Override\n-    public List<WorkflowFormTO> getForms() {\n-        return userController.getForms();\n-    }\n-\n     @Override\n     public List<UserTO> list() {\n         return userController.list();\n@@ -165,11 +142,6 @@ public int searchCount(final NodeCond searchCondition) throws InvalidSearchCondi\n         return userController.searchCountInternal(searchCondition);\n     }\n \n-    @Override\n-    public UserTO submitForm(final WorkflowFormTO form) {\n-        return userController.submitForm(form);\n-    }\n-\n     @Override\n     public UserTO suspend(final long userId) {\n         return userController.suspend(userId);"},{"sha":"8b51a000ec39f958c4ab2a2e92e713b5c50c00de","filename":"core/src/main/java/org/apache/syncope/core/services/UserWorkflowServiceImpl.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.services;\n+\n+import java.util.List;\n+\n+import org.apache.syncope.common.services.UserWorkflowService;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n+import org.apache.syncope.core.rest.controller.UserController;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class UserWorkflowServiceImpl implements UserWorkflowService {\n+\n+    @Autowired\n+    private UserController userController;\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId) {\n+        return userController.claimForm(taskId);\n+    }\n+    \n+\n+    @Override\n+    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n+        return userController.executeWorkflow(userTO, taskId);\n+    }\n+\n+    @Override\n+    public WorkflowFormTO getFormForUser(final Long userId) {\n+        return userController.getFormForUser(userId);\n+    }\n+\n+    @Override\n+    public List<WorkflowFormTO> getForms() {\n+        return userController.getForms();\n+    }\n+    \n+\n+    @Override\n+    public UserTO submitForm(final WorkflowFormTO form) {\n+        return userController.submitForm(form);\n+    }\n+    \n+}"},{"sha":"f9d14f613e356a40962af91979c9a22715dfbe0a","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -80,6 +80,7 @@ under the License.\n       <ref bean=\"userRequestServiceImpl\"/>\n       <ref bean=\"userServiceImpl\"/>\n       <ref bean=\"workflowServiceImpl\"/>\n+      <ref bean=\"userWorkflowServiceImpl\"/>\n     </jaxrs:serviceBeans>\n     <jaxrs:resourceComparator>\n       <bean id=\"myServiceComparator\" class=\"org.apache.syncope.core.rest.utils.QueryResourceInfoComperator\"/>"},{"sha":"87f04fec0fa566d78e702308096f79a549b6d492","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -51,6 +51,7 @@\n import org.apache.syncope.client.services.proxy.TaskServiceProxy;\n import org.apache.syncope.client.services.proxy.UserRequestServiceProxy;\n import org.apache.syncope.client.services.proxy.UserServiceProxy;\n+import org.apache.syncope.client.services.proxy.UserWorkflowServiceProxy;\n import org.apache.syncope.client.services.proxy.WorkflowServiceProxy;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.services.ConfigurationService;\n@@ -66,6 +67,7 @@\n import org.apache.syncope.common.services.TaskService;\n import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.services.UserWorkflowService;\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n import org.apache.syncope.common.to.AttributeTO;\n@@ -131,6 +133,8 @@ public abstract class AbstractTest {\n     private String contentType;\n \n     protected UserService userService;\n+    \n+    protected UserWorkflowService userWorkflowService;\n \n     protected RoleService roleService;\n \n@@ -191,6 +195,7 @@ private RestTemplate getAnonymousRestTemplate() {\n     protected void resetRestTemplate() {\n         setupRestTemplate(ADMIN_UID, ADMIN_PWD);\n         userService = new UserServiceProxy(BASE_URL, restTemplate);\n+        userWorkflowService = new UserWorkflowServiceProxy(BASE_URL, restTemplate);\n         roleService = new RoleServiceProxy(BASE_URL, restTemplate);\n         resourceService = new ResourceServiceProxy(BASE_URL, restTemplate);\n         entitlementService = new EntitlementServiceProxy(BASE_URL, restTemplate);\n@@ -210,6 +215,7 @@ protected void resetRestTemplate() {\n     // BEGIN CXF Initialization\n     public void setupCXFServices() throws Exception {\n         userService = createServiceInstance(UserService.class);\n+        userWorkflowService = createServiceInstance(UserWorkflowService.class);\n         roleService = createServiceInstance(RoleService.class);\n         resourceService = createServiceInstance(ResourceService.class);\n         entitlementService = createServiceInstance(EntitlementService.class);"},{"sha":"5d8ca8bb3d268b9d7bcc7956397220fd31dc749e","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e233932c16d6174d5ca056a8190a925337f46954/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e233932c16d6174d5ca056a8190a925337f46954","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.services.UserWorkflowService;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n@@ -555,7 +556,7 @@ public void createWithReject() {\n         assertEquals(\"createApproval\", userTO.getStatus());\n \n         // 2. request if there is any pending task for user just created\n-        WorkflowFormTO form = userService.getFormForUser(userTO.getId());\n+        WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getId());\n \n         assertNotNull(form);\n         assertNotNull(form.getUserId());\n@@ -564,7 +565,7 @@ public void createWithReject() {\n         assertNull(form.getOwner());\n \n         // 3. claim task from user1, not in role 7 (designated for approval in workflow definition): fail\n-        UserService userService2 = setupCredentials(userService, UserService.class, \"user1\", ADMIN_PWD);\n+        UserWorkflowService userService2 = setupCredentials(userWorkflowService, UserWorkflowService.class, \"user1\", ADMIN_PWD);\n \n         try {\n             userService2.claimForm(form.getTaskId());\n@@ -574,7 +575,7 @@ public void createWithReject() {\n         }\n \n         // 4. claim task from user4, in role 7\n-        UserService userService3 = setupCredentials(userService, UserService.class, \"user4\", ADMIN_PWD);\n+        UserWorkflowService userService3 = setupCredentials(userWorkflowService, UserWorkflowService.class, \"user4\", ADMIN_PWD);\n \n         form = userService3.claimForm(form.getTaskId());\n         assertNotNull(form);\n@@ -627,17 +628,17 @@ public void createWithApproval() {\n         assertNotNull(exception);\n \n         // 2. request if there is any pending form for user just created\n-        List<WorkflowFormTO> forms = userService.getForms();\n+        List<WorkflowFormTO> forms = userWorkflowService.getForms();\n         assertNotNull(forms);\n         assertEquals(1, forms.size());\n \n-        WorkflowFormTO form = userService.getFormForUser(userTO.getId());\n+        WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getId());\n         assertNotNull(form);\n         assertNotNull(form.getTaskId());\n         assertNull(form.getOwner());\n \n         // 4. claim task (from admin)\n-        form = userService.claimForm(form.getTaskId());\n+        form = userWorkflowService.claimForm(form.getTaskId());\n         assertNotNull(form);\n         assertNotNull(form.getTaskId());\n         assertNotNull(form.getOwner());\n@@ -646,7 +647,7 @@ public void createWithApproval() {\n         Map<String, WorkflowFormPropertyTO> props = form.getPropertyMap();\n         props.get(\"approve\").setValue(Boolean.TRUE.toString());\n         form.setProperties(props.values());\n-        userTO = userService.submitForm(form);\n+        userTO = userWorkflowService.submitForm(form);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n         assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());"}]}