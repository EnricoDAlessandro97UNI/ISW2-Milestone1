{"sha":"75f497793d3ac0d46af2c607a9fd7450169b7d5c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1ZjQ5Nzc5M2QzYWMwZDQ2YWYyYzYwN2E5ZmQ3NDUwMTY5YjdkNWM=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-09T09:07:50Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-09T09:07:50Z"},"message":"SYNCOPE-31 #comment user status can be managed during update as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1298759 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1fed0f3397241d044030be2d5c74d2725af0fe3d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1fed0f3397241d044030be2d5c74d2725af0fe3d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/75f497793d3ac0d46af2c607a9fd7450169b7d5c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75f497793d3ac0d46af2c607a9fd7450169b7d5c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75f497793d3ac0d46af2c607a9fd7450169b7d5c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75f497793d3ac0d46af2c607a9fd7450169b7d5c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"53e6f4b87e9d6bd1983c0bed221356f3c522e06e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/53e6f4b87e9d6bd1983c0bed221356f3c522e06e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/53e6f4b87e9d6bd1983c0bed221356f3c522e06e"}],"stats":{"total":191,"additions":89,"deletions":102},"files":[{"sha":"0756ef550f6697f67d661595f6391d96a2f08353","filename":"core/src/main/java/org/syncope/core/init/ContentLoader.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -69,14 +69,12 @@ public void load() {\n                     ResultSet.TYPE_SCROLL_SENSITIVE,\n                     ResultSet.CONCUR_READ_ONLY);\n \n-            resultSet = statement.executeQuery(\"SELECT * FROM \"\n-                    + SyncopeConf.class.getSimpleName());\n+            resultSet = statement.executeQuery(\"SELECT * FROM \" + SyncopeConf.class.getSimpleName());\n             resultSet.last();\n \n             existingData = resultSet.getRow() > 0;\n         } catch (SQLException e) {\n-            LOG.error(\"Could not access to table \"\n-                    + SyncopeConf.class.getSimpleName(), e);\n+            LOG.error(\"Could not access to table \" + SyncopeConf.class.getSimpleName(), e);\n \n             // Setting this to true make nothing to be done below\n             existingData = true;\n@@ -107,8 +105,7 @@ public void load() {\n         // 2. Create views\n         LOG.debug(\"Creating views\");\n         try {\n-            InputStream viewsStream = getClass().getResourceAsStream(\n-                    \"/views.xml\");\n+            InputStream viewsStream = getClass().getResourceAsStream(\"/views.xml\");\n             Properties views = new Properties();\n             views.loadFromXML(viewsStream);\n \n@@ -117,8 +114,7 @@ public void load() {\n \n                 try {\n                     statement = conn.createStatement();\n-                    statement.executeUpdate(views.get(idx).toString().\n-                            replaceAll(\"\\\\n\", \" \"));\n+                    statement.executeUpdate(views.get(idx).toString().replaceAll(\"\\\\n\", \" \"));\n                     statement.close();\n                 } catch (SQLException e) {\n                     LOG.error(\"Could not create view \", e);\n@@ -133,8 +129,7 @@ public void load() {\n         // 3. Create indexes\n         LOG.debug(\"Creating indexes\");\n         try {\n-            InputStream indexesStream = getClass().getResourceAsStream(\n-                    \"/indexes.xml\");\n+            InputStream indexesStream = getClass().getResourceAsStream(\"/indexes.xml\");\n             Properties indexes = new Properties();\n             indexes.loadFromXML(indexesStream);\n \n@@ -167,8 +162,7 @@ public void load() {\n         SAXParserFactory factory = SAXParserFactory.newInstance();\n         try {\n             SAXParser parser = factory.newSAXParser();\n-            parser.parse(getClass().getResourceAsStream(\"/content.xml\"),\n-                    importExport);\n+            parser.parse(getClass().getResourceAsStream(\"/content.xml\"), importExport);\n             LOG.debug(\"Default content successfully loaded\");\n         } catch (Throwable t) {\n             LOG.error(\"While loading default content\", t);"},{"sha":"45e9185f09f04389636ff257a4ebe43eaafd4e78","filename":"core/src/main/java/org/syncope/core/notification/NotificationManager.java","status":"modified","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -46,6 +46,7 @@\n \n /**\n  * Create notification tasks that will be executed by NotificationJob.\n+ *\n  * @see NotificationTask\n  */\n @Transactional(rollbackFor = {\n@@ -172,11 +173,10 @@ private NotificationTask getNotificationTask(\n     }\n \n     /**\n-     * Create notification tasks for each notification matching the passed\n-     * workflow result.\n+     * Create notification tasks for each notification matching the passed workflow result.\n+     *\n      * @param wfResult workflow result\n-     * @throws NotFoundException if user contained in the workflow result\n-     * cannot be found\n+     * @throws NotFoundException if user contained in the workflow result cannot be found\n      */\n     public void createTasks(final WorkflowResult<Long> wfResult)\n             throws NotFoundException {\n@@ -186,22 +186,16 @@ public void createTasks(final WorkflowResult<Long> wfResult)\n             throw new NotFoundException(\"User \" + wfResult.getResult());\n         }\n \n-        final String emailSchema =\n-                confDAO.find(\"email.schema\", \"email\").getValue();\n+        final String emailSchema = confDAO.find(\"email.schema\", \"email\").getValue();\n \n         for (Notification notification : notificationDAO.findAll()) {\n             if (searchDAO.matches(user, notification.getAbout())) {\n-                Set<String> events = new HashSet<String>(\n-                        notification.getEvents());\n+                Set<String> events = new HashSet<String>(notification.getEvents());\n                 events.retainAll(wfResult.getPerformedTasks());\n \n                 if (!events.isEmpty()) {\n-                    LOG.debug(\n-                            \"Creating notification task for events {} about {}\",\n-                            events, user);\n-\n-                    taskDAO.save(getNotificationTask(notification, user,\n-                            emailSchema));\n+                    LOG.debug(\"Creating notification task for events {} about {}\", events, user);\n+                    taskDAO.save(getNotificationTask(notification, user, emailSchema));\n                 } else {\n                     LOG.debug(\"No events found about {}\", user);\n                 }"},{"sha":"d952e09ab0b153e7b835d59d8bfa456136b0d429","filename":"core/src/main/java/org/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -19,7 +19,9 @@\n package org.syncope.core.policy;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.regex.Pattern;\n+import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.UserTO;\n@@ -125,8 +127,11 @@ public void enforce(\n \n                 // propagate suspension if and only if it is required by policy\n                 if (policy.isPropagateSuspension()) {\n-                    final List<PropagationTask> tasks = propagationManager.\n-                            getUpdateTaskIds(updated, Boolean.FALSE);\n+                    final List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                            new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                            new DefaultMapEntry(updated.getResult(), Boolean.FALSE),\n+                            updated.getPropByRes(),\n+                            updated.getPerformedTasks()));\n \n                     propagationManager.execute(tasks);\n                 }"},{"sha":"7d1a4560055d167c336c2fa3ae01ac76696395cc","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":20,"deletions":26,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -230,71 +230,65 @@ public List<PropagationTask> getUpdateTaskIds(\n      * Performs update on each resource associated to the user.\n      *\n      * @param wfResult user to be propagated (and info associated), as per result from workflow.\n-     * @param enable wether user must be enabled or not.\n      * @return list of propagation tasks\n      * @throws NotFoundException if userId is not found\n      */\n     public List<PropagationTask> getUpdateTaskIds(\n-            final WorkflowResult<Long> wfResult,\n-            final Boolean enable)\n+            final WorkflowResult<Map.Entry<Long, Boolean>> wfResult)\n             throws NotFoundException {\n \n-        return getUpdateTaskIds(wfResult, null, null, null, enable, null);\n+        return getUpdateTaskIds(wfResult, null, null, null, null);\n     }\n \n     /**\n      * Performs update on each resource associated to the user.\n      *\n-     * @param wfResult user to be propagated (and info associated), as per result from workflow\n-     * @param password to be updated\n-     * @param vAttrsToBeRemoved virtual attributes to be removed\n-     * @param vAttrsToBeUpdated virtual attributes to be added\n-     * @param enable wether user must be enabled or not\n-     * @return list of propagation tasks\n-     * @throws NotFoundException if userId is not found\n+     * @param wfResult user to be propagated (and info associated), as per result from workflow.\n+     * @param password to be updated.\n+     * @param vAttrsToBeRemoved virtual attributes to be removed.\n+     * @param vAttrsToBeUpdated virtual attributes to be added.\n+     * @return list of propagation tasks.\n+     * @throws NotFoundException if userId is not found.\n      */\n     public List<PropagationTask> getUpdateTaskIds(\n-            final WorkflowResult<Long> wfResult,\n+            final WorkflowResult<Map.Entry<Long, Boolean>> wfResult,\n             final String password,\n             final Set<String> vAttrsToBeRemoved,\n-            final Set<AttributeMod> vAttrsToBeUpdated,\n-            final Boolean enable)\n+            final Set<AttributeMod> vAttrsToBeUpdated)\n             throws NotFoundException {\n \n-        return getUpdateTaskIds(wfResult, password, vAttrsToBeRemoved, vAttrsToBeUpdated, enable, null);\n+        return getUpdateTaskIds(wfResult, password, vAttrsToBeRemoved, vAttrsToBeUpdated, null);\n     }\n \n     /**\n      * Performs update on each resource associated to the user.\n      *\n-     * @param wfResult user to be propagated (and info associated), as per result from workflow\n-     * @param password to be updated\n-     * @param vAttrsToBeRemoved virtual attributes to be removed\n-     * @param vAttrsToBeUpdated virtual attributes to be added\n-     * @param enable wether user must be enabled or not\n+     * @param wfResult user to be propagated (and info associated), as per result from workflow.\n+     * @param password to be updated.\n+     * @param vAttrsToBeRemoved virtual attributes to be removed.\n+     * @param vAttrsToBeUpdated virtual attributes to be added.\n      * @param syncResourceNames external resource names not to be considered for propagation. Use this during sync and\n      * disable/enable actions limited to the external resources only.\n-     * @return list of propagation tasks\n-     * @throws NotFoundException if userId is not found\n+     * @return list of propagation tasks.\n+     * @throws NotFoundException if userId is not found.\n      */\n     public List<PropagationTask> getUpdateTaskIds(\n-            final WorkflowResult<Long> wfResult,\n+            final WorkflowResult<Map.Entry<Long, Boolean>> wfResult,\n             final String password,\n             final Set<String> vAttrsToBeRemoved,\n             final Set<AttributeMod> vAttrsToBeUpdated,\n-            final Boolean enable,\n             final Set<String> syncResourceNames)\n             throws NotFoundException {\n \n-        SyncopeUser user = getSyncopeUser(wfResult.getResult());\n+        SyncopeUser user = getSyncopeUser(wfResult.getResult().getKey());\n \n         return getUpdateTaskIds(\n                 user,\n                 wfResult.getPropByRes(),\n                 password,\n                 vAttrsToBeRemoved,\n                 vAttrsToBeUpdated,\n-                enable,\n+                wfResult.getResult().getValue(),\n                 syncResourceNames);\n     }\n "},{"sha":"4bac2b06c5318cbd516a9665e00b51a7b0ffefc2","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -36,6 +36,7 @@\n import java.util.Set;\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n+import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -329,7 +330,7 @@ public UserTO update(@RequestBody final UserMod userMod)\n \n         LOG.debug(\"User update called with {}\", userMod);\n \n-        WorkflowResult<Long> updated = wfAdapter.update(userMod);\n+        WorkflowResult<Map.Entry<Long, Boolean>> updated = wfAdapter.update(userMod);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n                 updated, userMod.getPassword(),\n@@ -364,10 +365,12 @@ public void handle(\n             }\n         });\n \n-        notificationManager.createTasks(updated);\n+        notificationManager.createTasks(\n+                new WorkflowResult<Long>(updated.getResult().getKey(),\n+                updated.getPropByRes(),\n+                updated.getPerformedTasks()));\n \n-        final UserTO updatedTO =\n-                userDataBinder.getUserTO(updated.getResult());\n+        final UserTO updatedTO = userDataBinder.getUserTO(updated.getResult().getKey());\n \n         updatedTO.setPropagationTOs(propagations);\n \n@@ -535,8 +538,10 @@ public UserTO executeWorkflow(\n \n         WorkflowResult<Long> updated = wfAdapter.execute(userTO, taskId);\n \n-        List<PropagationTask> tasks =\n-                propagationManager.getUpdateTaskIds(updated, null);\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(updated.getResult(), null),\n+                updated.getPropByRes(),\n+                updated.getPerformedTasks()));\n \n         propagationManager.execute(tasks);\n \n@@ -593,17 +598,17 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n         LOG.debug(\"About to process form {}\", form);\n \n         WorkflowResult<Map.Entry<Long, String>> updated =\n-                wfAdapter.submitForm(form, SecurityContextHolder.getContext().\n-                getAuthentication().getName());\n+                wfAdapter.submitForm(form, SecurityContextHolder.getContext().getAuthentication().getName());\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                new WorkflowResult<Long>(updated.getResult().getKey(),\n-                updated.getPropByRes(), updated.getPerformedTasks()),\n-                updated.getResult().getValue(), null, null, Boolean.TRUE);\n+                new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(updated.getResult().getKey(), Boolean.TRUE),\n+                updated.getPropByRes(),\n+                updated.getPerformedTasks()),\n+                updated.getResult().getValue(), null, null);\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = userDataBinder.getUserTO(\n-                updated.getResult().getKey());\n+        final UserTO savedTO = userDataBinder.getUserTO(updated.getResult().getKey());\n \n         LOG.debug(\"About to return user after form processing\\n{}\", savedTO);\n "},{"sha":"0599b63c1c7fe8c45392ef7f37ecbff0e4ee84c7","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -360,14 +360,14 @@ private void updateUsers(\n                     result.setUsername(userMod.getUsername());\n \n                     if (!dryRun) {\n-                        WorkflowResult<Long> updated = wfAdapter.update(userMod);\n+                        WorkflowResult<Map.Entry<Long, Boolean>> updated = wfAdapter.update(userMod);\n \n                         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                                updated, userMod.getPassword(), null, null, null,\n+                                updated, userMod.getPassword(), null, null,\n                                 Collections.singleton(((SyncTask) this.task).getResource().getName()));\n \n                         propagationManager.execute(tasks);\n-                        userTO = userDataBinder.getUserTO(updated.getResult());\n+                        userTO = userDataBinder.getUserTO(updated.getResult().getKey());\n                     }\n                 } catch (PropagationException e) {\n                     LOG.error(\"Could not propagate user \" + delta.getUid().getUidValue(), e);"},{"sha":"07ce8aaa933a30afd61f5a06b4addb602a3891a8","filename":"core/src/main/java/org/syncope/core/workflow/AbstractUserWorkflowAdapter.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.syncope.core.workflow;\n \n+import java.util.Map;\n import java.util.Map.Entry;\n import javassist.NotFoundException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -32,8 +33,7 @@\n @Transactional(rollbackFor = {\n     Throwable.class\n })\n-public abstract class AbstractUserWorkflowAdapter\n-        implements UserWorkflowAdapter {\n+public abstract class AbstractUserWorkflowAdapter implements UserWorkflowAdapter {\n \n     @Autowired\n     protected UserDataBinder dataBinder;\n@@ -59,11 +59,11 @@ public WorkflowResult<Long> activate(final Long userId, final String token)\n         return doActivate(dataBinder.getUserFromId(userId), token);\n     }\n \n-    protected abstract WorkflowResult<Long> doUpdate(SyncopeUser user, UserMod userMod)\n+    protected abstract WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(SyncopeUser user, UserMod userMod)\n             throws WorkflowException;\n \n     @Override\n-    public WorkflowResult<Long> update(final UserMod userMod)\n+    public WorkflowResult<Map.Entry<Long, Boolean>> update(final UserMod userMod)\n             throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n \n         return doUpdate(dataBinder.getUserFromId(userMod.getId()), userMod);"},{"sha":"be155d932c5063c008cd5bad4843c5fcea06aac5","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -224,11 +224,11 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(\n         updateStatus(user);\n         user = userDAO.save(user);\n \n-        Boolean propagate_enable =\n+        Boolean propagateEnable =\n                 (Boolean) runtimeService.getVariable(processInstance.getProcessInstanceId(), PROPAGATE_ENABLE);\n \n-        if (propagate_enable == null) {\n-            propagate_enable = enabled;\n+        if (propagateEnable == null) {\n+            propagateEnable = enabled;\n         }\n \n         // save resources to be propagated and password for later -\n@@ -247,7 +247,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(\n         }\n \n         return new WorkflowResult<Map.Entry<Long, Boolean>>(\n-                new DefaultMapEntry(user.getId(), propagate_enable), propByRes, getPerformedTasks(user));\n+                new DefaultMapEntry(user.getId(), propagateEnable), propByRes, getPerformedTasks(user));\n     }\n \n     private Set<String> doExecuteTask(\n@@ -299,7 +299,7 @@ protected WorkflowResult<Long> doActivate(final SyncopeUser user,\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doUpdate(\n+    protected WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(\n             final SyncopeUser user, final UserMod userMod)\n             throws WorkflowException {\n \n@@ -317,7 +317,10 @@ protected WorkflowResult<Long> doUpdate(\n             runtimeService.setVariable(user.getWorkflowId(), ENCRYPTED_PWD, encrypt(userMod.getPassword()));\n         }\n \n-        return new WorkflowResult<Long>(updated.getId(), propByRes, task);\n+        Boolean propagateEnable = (Boolean) runtimeService.getVariable(user.getWorkflowId(), PROPAGATE_ENABLE);\n+\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(updated.getId(), propagateEnable), propByRes, task);\n     }\n \n     @Override"},{"sha":"bcf44f96421f8f1063883345a51230e59749d0d9","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -92,8 +92,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(\n         propByRes.set(PropagationOperation.CREATE, user.getResourceNames());\n \n         return new WorkflowResult<Map.Entry<Long, Boolean>>(\n-                new DefaultMapEntry(user.getId(), propagate_enable),\n-                propByRes, \"create\");\n+                new DefaultMapEntry(user.getId(), propagate_enable), propByRes, \"create\");\n     }\n \n     @Override\n@@ -114,16 +113,16 @@ protected WorkflowResult<Long> doActivate(final SyncopeUser user,\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doUpdate(\n+    protected WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(\n             final SyncopeUser user, final UserMod userMod)\n             throws WorkflowException {\n \n         PropagationByResource propByRes = dataBinder.update(user, userMod);\n \n         SyncopeUser updated = userDAO.save(user);\n \n-        return new WorkflowResult<Long>(\n-                updated.getId(), propByRes, \"update\");\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(updated.getId(), true), propByRes, \"update\");\n     }\n \n     @Override"},{"sha":"5a8f5294aa8d284e68cebc0feae19ee33d206eab","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":10,"deletions":17,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f497793d3ac0d46af2c607a9fd7450169b7d5c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=75f497793d3ac0d46af2c607a9fd7450169b7d5c","patch":"@@ -23,9 +23,9 @@\n import javassist.NotFoundException;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.client.to.WorkflowFormTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n /**\n@@ -85,8 +85,7 @@ WorkflowResult<Map.Entry<Long, Boolean>> create(\n      * @throws WorkflowException workflow exception\n      */\n     WorkflowResult<Long> execute(UserTO userTO, String taskId)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Activate an user.\n@@ -99,8 +98,7 @@ WorkflowResult<Long> execute(UserTO userTO, String taskId)\n      * @throws WorkflowException workflow exception\n      */\n     WorkflowResult<Long> activate(Long userId, String token)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Updated an user.\n@@ -111,9 +109,8 @@ WorkflowResult<Long> activate(Long userId, String token)\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Long> update(UserMod userMod)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+    WorkflowResult<Map.Entry<Long, Boolean>> update(UserMod userMod)\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Suspend an user.\n@@ -125,8 +122,7 @@ WorkflowResult<Long> update(UserMod userMod)\n      * @throws WorkflowException workflow exception\n      */\n     WorkflowResult<Long> suspend(Long userId)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Suspend an user.\n@@ -149,8 +145,7 @@ WorkflowResult<Long> suspend(SyncopeUser user)\n      * @throws WorkflowException workflow exception\n      */\n     WorkflowResult<Long> reactivate(Long userId)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Delete an user.\n@@ -161,8 +156,7 @@ WorkflowResult<Long> reactivate(Long userId)\n      * @throws WorkflowException workflow exception\n      */\n     void delete(Long userId)\n-            throws UnauthorizedRoleException, NotFoundException,\n-            WorkflowException;\n+            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n \n     /**\n      * Get workflow definition.\n@@ -195,7 +189,7 @@ List<String> getDefinedTasks()\n     /**\n      * Get all defined forms for current workflow process instances.\n      *\n-     * @return list of defined forms \n+     * @return list of defined forms\n      */\n     List<WorkflowFormTO> getForms();\n \n@@ -231,7 +225,6 @@ WorkflowFormTO claimForm(String taskId, String username)\n      * @throws NotFoundException not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Map.Entry<Long, String>> submitForm(\n-            WorkflowFormTO form, String username)\n+    WorkflowResult<Map.Entry<Long, String>> submitForm(WorkflowFormTO form, String username)\n             throws NotFoundException, WorkflowException;\n }"}]}