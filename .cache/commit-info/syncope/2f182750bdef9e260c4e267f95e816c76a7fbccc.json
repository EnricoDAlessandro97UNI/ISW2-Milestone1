{"sha":"2f182750bdef9e260c4e267f95e816c76a7fbccc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJmMTgyNzUwYmRlZjllMjYwYzRlMjY3Zjk1ZTgxNmM3NmE3ZmJjY2M=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-08-01T16:27:20Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-08-01T20:27:45Z"},"message":"Fixed WSS4J version on master + added a few lambdas in the SAML SSO code","tree":{"sha":"4fad7d8a746f4d0f09ef25851307e00056010598","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4fad7d8a746f4d0f09ef25851307e00056010598"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2f182750bdef9e260c4e267f95e816c76a7fbccc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2f182750bdef9e260c4e267f95e816c76a7fbccc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2f182750bdef9e260c4e267f95e816c76a7fbccc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2f182750bdef9e260c4e267f95e816c76a7fbccc/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"508c8cc823118d2015aa12f323de7bf5afd77019","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/508c8cc823118d2015aa12f323de7bf5afd77019","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/508c8cc823118d2015aa12f323de7bf5afd77019"}],"stats":{"total":26,"additions":8,"deletions":18},"files":[{"sha":"4ec2074f192c8cbd94d36761959f89ce6eb601c0","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2SPServiceImpl.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2f182750bdef9e260c4e267f95e816c76a7fbccc/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2f182750bdef9e260c4e267f95e816c76a7fbccc/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java?ref=2f182750bdef9e260c4e267f95e816c76a7fbccc","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.io.IOException;\n-import java.io.OutputStream;\n-\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n@@ -42,13 +39,8 @@ public class SAML2SPServiceImpl extends AbstractServiceImpl implements SAML2SPSe\n \n     @Override\n     public Response getMetadata(final String spEntityID, final String urlContext) {\n-        StreamingOutput sout = new StreamingOutput() {\n+        StreamingOutput sout = (os) -> logic.getMetadata(StringUtils.appendIfMissing(spEntityID, \"/\"), urlContext, os);\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                logic.getMetadata(StringUtils.appendIfMissing(spEntityID, \"/\"), urlContext, os);\n-            }\n-        };\n         return Response.ok(sout).\n                 type(MediaType.APPLICATION_XML).\n                 build();"},{"sha":"2df4530526be86a1c763d286df31fc6b1ae4455a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2f182750bdef9e260c4e267f95e816c76a7fbccc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2f182750bdef9e260c4e267f95e816c76a7fbccc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java?ref=2f182750bdef9e260c4e267f95e816c76a7fbccc","patch":"@@ -28,11 +28,11 @@\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.nio.charset.StandardCharsets;\n+import java.util.Optional;\n+\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.codec.binary.Base64;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.cxf.staxutils.StaxUtils;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n@@ -135,13 +135,11 @@ public void createLoginRequest() {\n     public void setIdPMapping() {\n         Assume.assumeTrue(SAML2SPDetector.isSAML2SPAvailable());\n \n-        SAML2IdPTO ssoCircle = IterableUtils.find(saml2IdPService.list(), new Predicate<SAML2IdPTO>() {\n+        Optional<SAML2IdPTO> ssoCircleOpt =\n+            saml2IdPService.list().stream().filter(o -> \"https://idp.ssocircle.com\".equals(o.getEntityID())).findFirst();\n+        assertTrue(ssoCircleOpt.isPresent());\n \n-            @Override\n-            public boolean evaluate(final SAML2IdPTO object) {\n-                return \"https://idp.ssocircle.com\".equals(object.getEntityID());\n-            }\n-        });\n+        SAML2IdPTO ssoCircle = ssoCircleOpt.get();\n         assertNotNull(ssoCircle);\n         assertFalse(ssoCircle.getMappingItems().isEmpty());\n         assertNotNull(ssoCircle.getConnObjectKeyItem());"},{"sha":"39bae7d05b52baa53eebe1fae12100c89a976759","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2f182750bdef9e260c4e267f95e816c76a7fbccc/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2f182750bdef9e260c4e267f95e816c76a7fbccc/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2f182750bdef9e260c4e267f95e816c76a7fbccc","patch":"@@ -608,7 +608,7 @@ under the License.\n       <dependency>\n         <groupId>org.apache.wss4j</groupId>\n         <artifactId>wss4j-ws-security-dom</artifactId>\n-        <version>2.1.10</version>\n+        <version>2.2.0-SNAPSHOT</version>\n         <exclusions>\n           <exclusion>\n             <groupId>org.jasypt</groupId>"}]}