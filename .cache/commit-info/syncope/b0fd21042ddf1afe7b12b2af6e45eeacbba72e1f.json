{"sha":"b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIwZmQyMTA0MmRkZjFhZmU3YjEyYjJhZjZlNDVlZWFjYmJhNzJlMWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-15T15:12:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-15T15:12:48Z"},"message":"[SYNCOPE-222] Extending AbstractAttributableDataBinder for checking mandatory conditions on derived and external attributes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1398326 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"13d067a67cf4c7fa1f926e07055db49518653dbe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/13d067a67cf4c7fa1f926e07055db49518653dbe"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d9c32e6ec2ec990402613c700c2c0c5b399d2a2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9c32e6ec2ec990402613c700c2c0c5b399d2a2e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d9c32e6ec2ec990402613c700c2c0c5b399d2a2e"}],"stats":{"total":498,"additions":278,"deletions":220},"files":[{"sha":"14ba3e22b32ba07ff664eb8c305af05db6fa9cc7","filename":"client/src/main/java/org/apache/syncope/client/to/ResourceTO.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -54,10 +54,7 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private PropagationMode propagationMode;\n \n-    /**\n-     * Force mandatory constraint.\n-     */\n-    private boolean forceMandatoryConstraint;\n+    private boolean enforceMandatoryCondition;\n \n     private TraceLevel createTraceLevel;\n \n@@ -89,12 +86,12 @@ public ResourceTO() {\n         syncTraceLevel = TraceLevel.ALL;\n     }\n \n-    public boolean isForceMandatoryConstraint() {\n-        return forceMandatoryConstraint;\n+    public boolean isEnforceMandatoryCondition() {\n+        return enforceMandatoryCondition;\n     }\n \n-    public void setForceMandatoryConstraint(boolean forceMandatoryConstraint) {\n-        this.forceMandatoryConstraint = forceMandatoryConstraint;\n+    public void setEnforceMandatoryCondition(boolean enforceMandatoryCondition) {\n+        this.enforceMandatoryCondition = enforceMandatoryCondition;\n     }\n \n     public Long getConnectorId() {"},{"sha":"9bb1085e56955842805349ecebadec85b509aa30","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -20,6 +20,16 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.apache.syncope.client.to.ConnInstanceTO;\n+import org.apache.syncope.client.to.ResourceTO;\n+import org.apache.syncope.console.pages.ResourceModalPage.ResourceEvent;\n+import org.apache.syncope.console.rest.ConnectorRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.types.PropagationMode;\n+import org.apache.syncope.types.TraceLevel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.event.Broadcast;\n@@ -33,16 +43,6 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.syncope.client.to.ConnInstanceTO;\n-import org.apache.syncope.client.to.ResourceTO;\n-import org.apache.syncope.console.pages.ResourceModalPage.ResourceEvent;\n-import org.apache.syncope.console.rest.ConnectorRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.types.PropagationMode;\n-import org.apache.syncope.types.TraceLevel;\n \n public class ResourceDetailsPanel extends Panel {\n \n@@ -82,10 +82,10 @@ protected List<ConnInstanceTO> load() {\n         resourceName.addRequiredLabel();\n         add(resourceName);\n \n-        final AjaxCheckBoxPanel forceMandatoryConstraint = new AjaxCheckBoxPanel(\"forceMandatoryConstraint\",\n-                new ResourceModel(\"forceMandatoryConstraint\", \"forceMandatoryConstraint\").getObject(),\n-                new PropertyModel<Boolean>(resourceTO, \"forceMandatoryConstraint\"));\n-        add(forceMandatoryConstraint);\n+        final AjaxCheckBoxPanel enforceMandatoryCondition = new AjaxCheckBoxPanel(\"enforceMandatoryCondition\",\n+                new ResourceModel(\"enforceMandatoryCondition\", \"enforceMandatoryCondition\").getObject(),\n+                new PropertyModel<Boolean>(resourceTO, \"enforceMandatoryCondition\"));\n+        add(enforceMandatoryCondition);\n \n         final AjaxCheckBoxPanel propagationPrimary = new AjaxCheckBoxPanel(\"propagationPrimary\", new ResourceModel(\n                 \"propagationPrimary\", \"propagationPrimary\").getObject(), new PropertyModel<Boolean>(resourceTO,"},{"sha":"b4e686bf870587719fb07a3336667c2594e16ca1","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -36,7 +36,7 @@ mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Delete\n intAttrNames=Internal Attributes\n-forceMandatoryConstraint=Enforce mandatory constraints\n+enforceMandatoryCondition=Enforce mandatory condition\n fieldName=Field name\n \n accountIdValidation=There must be exactly one AccountId"},{"sha":"fed41c67564c263a30834ac1ee6d2301381044f9","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -37,7 +37,7 @@ mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Rimuovi\n intAttrNames=Attributi interni\n-forceMandatoryConstraint=Forza mandatory constraint\n+enforceMandatoryCondition=Abilita mandatory condition\n fieldName=Nome campo\n \n accountIdValidation=Deve essere definito esattamente un AccountId"},{"sha":"ee39a78f33d866f0c0ff6291f7d1f6a549d50b2f","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -35,10 +35,10 @@\n \n             <div class=\"tablerow\">\n                 <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"forceMandatoryConstraint\"><wicket:message key=\"forceMandatoryConstraint\"/></label>\n+                    <label for=\"enforceMandatoryCondition\"><wicket:message key=\"enforceMandatoryCondition\"/></label>\n                 </div>\n                 <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"forceMandatoryConstraint\">[forceMandatoryConstraint]</span>\n+                    <span wicket:id=\"enforceMandatoryCondition\">[enforceMandatoryCondition]</span>\n                 </div>\n             </div>\n "},{"sha":"d208e68d3478ce012ba51cb613d38b06e66abea1","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttr.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -39,10 +39,10 @@ public <T extends AbstractAttrValue> T addValue(final String value, final Attrib\n \n         T attrValue;\n         if (getSchema().isUniqueConstraint()) {\n-            attrValue = (T) attributableUtil.newAttributeUniqueValue();\n+            attrValue = (T) attributableUtil.newAttrUniqueValue();\n             ((AbstractAttrUniqueValue) attrValue).setSchema(getSchema());\n         } else {\n-            attrValue = (T) attributableUtil.newAttributeValue();\n+            attrValue = (T) attributableUtil.newAttrValue();\n         }\n \n         attrValue.setAttribute(this);"},{"sha":"9c9a363131e8128ea0001f6672d3940a2385811b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -31,9 +31,8 @@ public abstract class AbstractAttributable extends AbstractBaseBean {\n \n     public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n         T result = null;\n-        T attribute;\n         for (Iterator<? extends AbstractAttr> itor = getAttributes().iterator(); result == null && itor.hasNext();) {\n-            attribute = (T) itor.next();\n+            final T attribute = (T) itor.next();\n             if (attribute.getSchema() != null && schemaName.equals(attribute.getSchema().getName())) {\n                 result = attribute;\n             }\n@@ -42,13 +41,11 @@ public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n     }\n \n     public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSchemaName) {\n-\n         T result = null;\n-        T derivedAttribute;\n         for (Iterator<? extends AbstractDerAttr> itor = getDerivedAttributes().iterator(); result == null\n                 && itor.hasNext();) {\n \n-            derivedAttribute = (T) itor.next();\n+            final T derivedAttribute = (T) itor.next();\n             if (derivedAttribute.getDerivedSchema() != null\n                     && derivedSchemaName.equals(derivedAttribute.getDerivedSchema().getName())) {\n \n@@ -60,14 +57,11 @@ public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSch\n     }\n \n     public <T extends AbstractVirAttr> T getVirtualAttribute(final String virtualSchemaName) {\n-\n         T result = null;\n-        T virtualAttribute;\n         for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator(); result == null\n                 && itor.hasNext();) {\n \n-            virtualAttribute = (T) itor.next();\n-\n+            final T virtualAttribute = (T) itor.next();\n             if (virtualAttribute.getVirtualSchema() != null\n                     && virtualSchemaName.equals(virtualAttribute.getVirtualSchema().getName())) {\n "},{"sha":"426d2a3f4f8dc549fb454152a93f1e43aa116eda","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":19,"deletions":23,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -69,19 +69,17 @@ public class ExternalResource extends AbstractBaseBean {\n     @Basic\n     @Min(0)\n     @Max(1)\n-    private Integer forceMandatoryConstraint;\n+    private Integer enforceMandatoryCondition;\n \n     /**\n      * The resource type is identified by the associated connector.\n      */\n-    @ManyToOne(fetch = FetchType.EAGER, cascade = { CascadeType.MERGE })\n+    @ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.MERGE})\n     @NotNull\n     private ConnInstance connector;\n \n     /**\n      * Attribute mappings.\n-     *\n-     * List type cannot be used. Please, take a look at https://hibernate.onjira.com/browse/HHH-1718\n      */\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"resource\")\n     @Valid\n@@ -155,7 +153,7 @@ public class ExternalResource extends AbstractBaseBean {\n     public ExternalResource() {\n         super();\n \n-        forceMandatoryConstraint = getBooleanAsInteger(false);\n+        enforceMandatoryCondition = getBooleanAsInteger(false);\n         mappings = new HashSet<SchemaMapping>();\n         propagationPrimary = 0;\n         propagationPriority = 0;\n@@ -167,12 +165,12 @@ public ExternalResource() {\n         syncTraceLevel = TraceLevel.FAILURES;\n     }\n \n-    public boolean isForceMandatoryConstraint() {\n-        return isBooleanAsInteger(forceMandatoryConstraint);\n+    public boolean isEnforceMandatoryCondition() {\n+        return isBooleanAsInteger(enforceMandatoryCondition);\n     }\n \n-    public void setForceMandatoryConstraint(boolean forceMandatoryConstraint) {\n-        this.forceMandatoryConstraint = getBooleanAsInteger(forceMandatoryConstraint);\n+    public void setEnforceMandatoryCondition(boolean enforceMandatoryCondition) {\n+        this.enforceMandatoryCondition = getBooleanAsInteger(enforceMandatoryCondition);\n     }\n \n     public ConnInstance getConnector() {\n@@ -214,7 +212,6 @@ public Set<SchemaMapping> getMappings() {\n     }\n \n     public Set<SchemaMapping> getMappings(final String intAttrName, final IntMappingType intMappingType) {\n-\n         Set<SchemaMapping> result = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : mappings) {\n             if (intAttrName.equals(mapping.getIntAttrName()) && mapping.getIntMappingType() == intMappingType) {\n@@ -225,7 +222,7 @@ public Set<SchemaMapping> getMappings(final String intAttrName, final IntMapping\n         return result;\n     }\n \n-    public boolean removeMapping(SchemaMapping mapping) {\n+    public boolean removeMapping(final SchemaMapping mapping) {\n         return mappings.remove(mapping);\n     }\n \n@@ -248,76 +245,75 @@ public String getAccountLink() {\n         return accountLink;\n     }\n \n-    public void setAccountLink(String accountLink) {\n+    public void setAccountLink(final String accountLink) {\n         this.accountLink = accountLink;\n     }\n \n     public String getName() {\n         return name;\n     }\n \n-    public void setName(String name) {\n+    public void setName(final String name) {\n         this.name = name;\n     }\n \n     public TraceLevel getCreateTraceLevel() {\n         return createTraceLevel;\n     }\n \n-    public void setCreateTraceLevel(TraceLevel createTraceLevel) {\n+    public void setCreateTraceLevel(final TraceLevel createTraceLevel) {\n         this.createTraceLevel = createTraceLevel;\n     }\n \n     public TraceLevel getDeleteTraceLevel() {\n         return deleteTraceLevel;\n     }\n \n-    public void setDeleteTraceLevel(TraceLevel deleteTraceLevel) {\n+    public void setDeleteTraceLevel(final TraceLevel deleteTraceLevel) {\n         this.deleteTraceLevel = deleteTraceLevel;\n     }\n \n     public TraceLevel getUpdateTraceLevel() {\n         return updateTraceLevel;\n     }\n \n-    public void setUpdateTraceLevel(TraceLevel updateTraceLevel) {\n+    public void setUpdateTraceLevel(final TraceLevel updateTraceLevel) {\n         this.updateTraceLevel = updateTraceLevel;\n     }\n \n     public TraceLevel getSyncTraceLevel() {\n         return syncTraceLevel;\n     }\n \n-    public void setSyncTraceLevel(TraceLevel syncTraceLevel) {\n+    public void setSyncTraceLevel(final TraceLevel syncTraceLevel) {\n         this.syncTraceLevel = syncTraceLevel;\n     }\n \n     public AccountPolicy getAccountPolicy() {\n         return accountPolicy;\n     }\n \n-    public void setAccountPolicy(AccountPolicy accountPolicy) {\n+    public void setAccountPolicy(final AccountPolicy accountPolicy) {\n         this.accountPolicy = accountPolicy;\n     }\n \n     public PasswordPolicy getPasswordPolicy() {\n         return passwordPolicy;\n     }\n \n-    public void setPasswordPolicy(PasswordPolicy passwordPolicy) {\n+    public void setPasswordPolicy(final PasswordPolicy passwordPolicy) {\n         this.passwordPolicy = passwordPolicy;\n     }\n \n     public SyncPolicy getSyncPolicy() {\n         return syncPolicy;\n     }\n \n-    public void setSyncPolicy(SyncPolicy syncPolicy) {\n+    public void setSyncPolicy(final SyncPolicy syncPolicy) {\n         this.syncPolicy = syncPolicy;\n     }\n \n     public void setConnectorConfigurationProperties(final Set<ConnConfProperty> properties) {\n-\n         // create new set to make sure it's a serializable set implementation.\n         xmlConfiguration = XMLSerializer.serialize(new HashSet<ConnConfProperty>(properties));\n     }\n@@ -327,7 +323,7 @@ public Set<ConnConfProperty> getConfiguration() {\n \n         Set<ConnConfProperty> deserializedSet;\n         if (StringUtils.isNotBlank(xmlConfiguration)) {\n-            deserializedSet = XMLSerializer.<HashSet<ConnConfProperty>> deserialize(xmlConfiguration);\n+            deserializedSet = XMLSerializer.<HashSet<ConnConfProperty>>deserialize(xmlConfiguration);\n             if (deserializedSet != null) {\n                 result = deserializedSet;\n             }\n@@ -343,7 +339,7 @@ public String getSerializedSyncToken() {\n     public SyncToken getSyncToken() {\n         return serializedSyncToken == null\n                 ? null\n-                : XMLSerializer.<SyncToken> deserialize(serializedSyncToken);\n+                : XMLSerializer.<SyncToken>deserialize(serializedSyncToken);\n     }\n \n     public void setSerializedSyncToken(final String serializedSyncToken) {"},{"sha":"6bfdf13e5cb7443862360a76a823b12d6318821e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -18,12 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n-import static javax.persistence.EnumType.STRING;\n-\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n@@ -47,7 +46,7 @@ public class SchemaMapping extends AbstractBaseBean {\n     private String intAttrName;\n \n     @Column(nullable = false)\n-    @Enumerated(STRING)\n+    @Enumerated(EnumType.STRING)\n     private IntMappingType intMappingType;\n \n     /**"},{"sha":"2b3331c6bf72082ef611b1c6655b3d6d944f4183","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MVirAttr.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -31,8 +31,10 @@\n public class MVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = 7774760571251641332L;\n+\n     @ManyToOne\n     private Membership owner;\n+\n     @ManyToOne(fetch = FetchType.EAGER)\n     private MVirSchema virtualSchema;\n \n@@ -42,7 +44,7 @@ public <T extends AbstractAttributable> T getOwner() {\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> void setOwner(T owner) {\n+    public <T extends AbstractAttributable> void setOwner(final T owner) {\n         if (!(owner instanceof Membership)) {\n             throw new ClassCastException(\"expected type Membership, found: \" + owner.getClass().getName());\n         }\n@@ -56,7 +58,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n         if (!(virtualSchema instanceof MVirSchema)) {\n             throw new ClassCastException(\"expected type MVirSchema, found: \" + virtualSchema.getClass().getName());\n         }"},{"sha":"675bfc36a2b153069abdb052bca481d902b7b6fd","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RVirAttr.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -31,8 +31,10 @@\n public class RVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = -1747430556914428649L;\n+\n     @ManyToOne\n     private SyncopeRole owner;\n+\n     @ManyToOne(fetch = FetchType.EAGER)\n     private RVirSchema virtualSchema;\n \n@@ -42,7 +44,7 @@ public <T extends AbstractAttributable> T getOwner() {\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> void setOwner(T owner) {\n+    public <T extends AbstractAttributable> void setOwner(final T owner) {\n         if (!(owner instanceof SyncopeRole)) {\n             throw new ClassCastException(\"expected type SyncopeRole, found: \" + owner.getClass().getName());\n         }\n@@ -55,7 +57,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n         if (!(virtualSchema instanceof RVirSchema)) {\n             throw new ClassCastException(\"expected type RVirSchema, found: \" + virtualSchema.getClass().getName());\n         }"},{"sha":"65d0a0e4294ba3c889b09aa2bce3cf32e876221e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UVirAttr.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -31,8 +31,10 @@\n public class UVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = 2943450934283989741L;\n+\n     @ManyToOne\n     private SyncopeUser owner;\n+\n     @ManyToOne(fetch = FetchType.EAGER)\n     private UVirSchema virtualSchema;\n \n@@ -42,7 +44,7 @@ public <T extends AbstractAttributable> T getOwner() {\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> void setOwner(T owner) {\n+    public <T extends AbstractAttributable> void setOwner(final T owner) {\n         if (!(owner instanceof SyncopeUser)) {\n             throw new ClassCastException(\"expected type SyncopeUser, found: \" + owner.getClass().getName());\n         }\n@@ -55,7 +57,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n         if (!(virtualSchema instanceof UVirSchema)) {\n             throw new ClassCastException(\"expected type UVirSchema, found: \" + virtualSchema.getClass().getName());\n         }"},{"sha":"de8faa4ccbdaafb834673183f2f9feabbc584b3e","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/DerSchemaDAOImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -61,14 +61,14 @@ public <T extends AbstractDerSchema> T save(final T derivedSchema) {\n     @Override\n     public void delete(final String name, final AttributableUtil attributableUtil) {\n \n-        final AbstractDerSchema derivedSchema = find(name, attributableUtil.derivedSchemaClass());\n+        final AbstractDerSchema derivedSchema = find(name, attributableUtil.derSchemaClass());\n \n         if (derivedSchema == null) {\n             return;\n         }\n \n         List<? extends AbstractDerAttr> attributes = getAttributes(derivedSchema, attributableUtil\n-                .derivedAttributeClass());\n+                .derAttrClass());\n \n         final Set<Long> derivedAttributeIds = new HashSet<Long>(attributes.size());\n \n@@ -83,7 +83,7 @@ public void delete(final String name, final AttributableUtil attributableUtil) {\n             derivedAttributeDAO.delete(derivedAttributeId, attributeClass);\n         }\n \n-        resourceDAO.deleteMappings(name, attributableUtil.derivedIntMappingType());\n+        resourceDAO.deleteMappings(name, attributableUtil.derIntMappingType());\n \n         entityManager.remove(derivedSchema);\n     }"},{"sha":"70392be01c12747fe0347bffddcb4835424968a8","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -77,14 +77,14 @@ public void delete(final String name, final AttributableUtil attributableUtil) {\n             return;\n         }\n \n-        List<? extends AbstractAttr> attributes = getAttributes(schema, attributableUtil.attributeClass());\n+        List<? extends AbstractAttr> attributes = getAttributes(schema, attributableUtil.attrClass());\n \n         Set<Long> attributeIds = new HashSet<Long>(attributes.size());\n         for (AbstractAttr attribute : attributes) {\n             attributeIds.add(attribute.getId());\n         }\n         for (Long attributeId : attributeIds) {\n-            attributeDAO.delete(attributeId, attributableUtil.attributeClass());\n+            attributeDAO.delete(attributeId, attributableUtil.attrClass());\n         }\n \n         resourceDAO.deleteMappings(name, attributableUtil.intMappingType());"},{"sha":"7e91275f67ac60fbc95bb5636a7c72921ca20d30","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/VirSchemaDAOImpl.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -61,29 +61,28 @@ public <T extends AbstractVirSchema> T save(final T virtualSchema) {\n     @Override\n     public void delete(final String name, final AttributableUtil attributableUtil) {\n \n-        final AbstractVirSchema virtualSchema = find(name, attributableUtil.virtualSchemaClass());\n+        final AbstractVirSchema virtualSchema = find(name, attributableUtil.virSchemaClass());\n \n         if (virtualSchema == null) {\n             return;\n         }\n \n-        List<? extends AbstractVirAttr> attributes = getAttributes(virtualSchema, attributableUtil\n-                .virtualAttributeClass());\n+        List<? extends AbstractVirAttr> attributes = getAttributes(virtualSchema, attributableUtil.virAttrClass());\n \n-        final Set<Long> virtualAttributeIds = new HashSet<Long>(attributes.size());\n+        final Set<Long> virAttrIds = new HashSet<Long>(attributes.size());\n \n         Class attributeClass = null;\n \n         for (AbstractVirAttr attribute : attributes) {\n-            virtualAttributeIds.add(attribute.getId());\n+            virAttrIds.add(attribute.getId());\n             attributeClass = attribute.getClass();\n         }\n \n-        for (Long virtualAttributeId : virtualAttributeIds) {\n+        for (Long virtualAttributeId : virAttrIds) {\n             virtualAttributeDAO.delete(virtualAttributeId, attributeClass);\n         }\n \n-        resourceDAO.deleteMappings(name, attributableUtil.virtualIntMappingType());\n+        resourceDAO.deleteMappings(name, attributableUtil.virIntMappingType());\n \n         entityManager.remove(virtualSchema);\n     }"},{"sha":"ceb3d135a748eb12dcd6c179c23be5806d65d6f4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/DerivedSchemaController.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -59,7 +59,7 @@ public DerivedSchemaTO create(final HttpServletResponse response,\n             throws SyncopeClientCompositeErrorException {\n \n         AbstractDerSchema derivedSchema = derivedSchemaDAO.save(\n-                derivedSchemaDataBinder.create(derivedSchemaTO, getAttributableUtil(kind).newDerivedSchema()));\n+                derivedSchemaDataBinder.create(derivedSchemaTO, getAttributableUtil(kind).newDerSchema()));\n \n         auditManager.audit(Category.schema, SchemaSubCategory.createDerived, Result.success,\n                 \"Successfully created derived schema: \" + kind + \"/\" + derivedSchema.getName());\n@@ -73,7 +73,7 @@ public DerivedSchemaTO create(final HttpServletResponse response,\n     public DerivedSchemaTO delete(@PathVariable(\"kind\") final String kind,\n             @PathVariable(\"schema\") final String derivedSchemaName) throws NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).derivedSchemaClass();\n+        Class reference = getAttributableUtil(kind).derSchemaClass();\n         AbstractDerSchema derivedSchema = derivedSchemaDAO.find(derivedSchemaName, reference);\n         if (derivedSchema == null) {\n             throw new NotFoundException(\"Derived schema '\" + derivedSchemaName + \"'\");\n@@ -91,7 +91,7 @@ public DerivedSchemaTO delete(@PathVariable(\"kind\") final String kind,\n \n     @RequestMapping(method = RequestMethod.GET, value = \"/{kind}/list\")\n     public List<DerivedSchemaTO> list(@PathVariable(\"kind\") final String kind) {\n-        Class reference = getAttributableUtil(kind).derivedSchemaClass();\n+        Class reference = getAttributableUtil(kind).derSchemaClass();\n         List<AbstractDerSchema> derivedAttributeSchemas = derivedSchemaDAO.findAll(reference);\n \n         List<DerivedSchemaTO> derivedSchemaTOs = new ArrayList<DerivedSchemaTO>(derivedAttributeSchemas.size());\n@@ -110,7 +110,7 @@ public List<DerivedSchemaTO> list(@PathVariable(\"kind\") final String kind) {\n     public DerivedSchemaTO read(@PathVariable(\"kind\") final String kind,\n             @PathVariable(\"derivedSchema\") final String derivedSchemaName) throws NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).derivedSchemaClass();\n+        Class reference = getAttributableUtil(kind).derSchemaClass();\n         AbstractDerSchema derivedSchema = derivedSchemaDAO.find(derivedSchemaName, reference);\n         if (derivedSchema == null) {\n             throw new NotFoundException(\"Derived schema '\" + derivedSchemaName + \"'\");\n@@ -127,7 +127,7 @@ public DerivedSchemaTO read(@PathVariable(\"kind\") final String kind,\n     public DerivedSchemaTO update(@RequestBody final DerivedSchemaTO derivedSchemaTO,\n             @PathVariable(\"kind\") final String kind) throws NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).derivedSchemaClass();\n+        Class reference = getAttributableUtil(kind).derSchemaClass();\n         AbstractDerSchema derivedSchema = derivedSchemaDAO.find(derivedSchemaTO.getName(), reference);\n         if (derivedSchema == null) {\n             throw new NotFoundException(\"Derived schema '\" + derivedSchemaTO.getName() + \"'\");"},{"sha":"3d11e9218cfab4a9aac53035418990dc23f855c1","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/VirtualSchemaController.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FVirtualSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FVirtualSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FVirtualSchemaController.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -59,7 +59,7 @@ public VirtualSchemaTO create(final HttpServletResponse response,\n             throws SyncopeClientCompositeErrorException {\n \n         AbstractVirSchema virtualSchema = virtualSchemaDAO.save(virtualSchemaDataBinder.create(\n-                virtualSchemaTO, getAttributableUtil(kind).newVirtualSchema(),\n+                virtualSchemaTO, getAttributableUtil(kind).newVirSchema(),\n                 getAttributableUtil(kind).schemaClass()));\n \n         auditManager.audit(Category.schema, SchemaSubCategory.createVirtual, Result.success,\n@@ -74,7 +74,7 @@ virtualSchemaTO, getAttributableUtil(kind).newVirtualSchema(),\n     public VirtualSchemaTO delete(@PathVariable(\"kind\") final String kind,\n             @PathVariable(\"schema\") final String virtualSchemaName) throws NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).virtualSchemaClass();\n+        Class reference = getAttributableUtil(kind).virSchemaClass();\n         AbstractVirSchema virtualSchema = virtualSchemaDAO.find(virtualSchemaName, reference);\n         if (virtualSchema == null) {\n             throw new NotFoundException(\"Virtual schema '\" + virtualSchemaName + \"'\");\n@@ -90,7 +90,7 @@ public VirtualSchemaTO delete(@PathVariable(\"kind\") final String kind,\n \n     @RequestMapping(method = RequestMethod.GET, value = \"/{kind}/list\")\n     public List<VirtualSchemaTO> list(@PathVariable(\"kind\") final String kind) {\n-        Class reference = getAttributableUtil(kind).virtualSchemaClass();\n+        Class reference = getAttributableUtil(kind).virSchemaClass();\n         List<AbstractVirSchema> virtualAttributeSchemas = virtualSchemaDAO.findAll(reference);\n \n         List<VirtualSchemaTO> virtualSchemaTOs = new ArrayList<VirtualSchemaTO>(virtualAttributeSchemas.size());\n@@ -109,7 +109,7 @@ public List<VirtualSchemaTO> list(@PathVariable(\"kind\") final String kind) {\n     public VirtualSchemaTO read(@PathVariable(\"kind\") final String kind,\n             @PathVariable(\"virtualSchema\") final String virtualSchemaName) throws NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).virtualSchemaClass();\n+        Class reference = getAttributableUtil(kind).virSchemaClass();\n         AbstractVirSchema virtualSchema = virtualSchemaDAO.find(virtualSchemaName, reference);\n         if (virtualSchema == null) {\n             throw new NotFoundException(\"Virtual schema '\" + virtualSchemaName + \"'\");\n@@ -126,7 +126,7 @@ public VirtualSchemaTO read(@PathVariable(\"kind\") final String kind,\n     public VirtualSchemaTO update(@RequestBody final VirtualSchemaTO virtualSchemaTO,\n             @PathVariable(\"kind\") final String kind) throws SyncopeClientCompositeErrorException, NotFoundException {\n \n-        Class reference = getAttributableUtil(kind).virtualSchemaClass();\n+        Class reference = getAttributableUtil(kind).virSchemaClass();\n         AbstractVirSchema virtualSchema = virtualSchemaDAO.find(virtualSchemaTO.getName(), reference);\n         if (virtualSchema == null) {\n             throw new NotFoundException(\"Virtual schema is null\");"},{"sha":"6a14616d8a740eeb86c91de663305885e1347cc5","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":81,"deletions":69,"changes":150,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -65,6 +65,7 @@\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.JexlUtil;\n import org.apache.syncope.types.AttributableType;\n+import org.apache.syncope.types.IntMappingType;\n import org.apache.syncope.types.PropagationOperation;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n \n@@ -85,13 +86,13 @@ public abstract class AbstractAttributableDataBinder {\n     protected SchemaDAO schemaDAO;\n \n     @Autowired\n-    protected DerSchemaDAO derivedSchemaDAO;\n+    protected DerSchemaDAO derSchemaDAO;\n \n     @Autowired\n-    protected VirSchemaDAO virtualSchemaDAO;\n+    protected VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    protected AttrDAO attributeDAO;\n+    protected AttrDAO attrDAO;\n \n     @Autowired\n     protected DerAttrDAO derAttrDAO;\n@@ -141,7 +142,7 @@ private <T extends AbstractDerSchema> T getDerivedSchema(final String derSchemaN\n \n         T derivedSchema = null;\n         if (StringUtils.isNotBlank(derSchemaName)) {\n-            derivedSchema = derivedSchemaDAO.find(derSchemaName, reference);\n+            derivedSchema = derSchemaDAO.find(derSchemaName, reference);\n             if (derivedSchema == null) {\n                 LOG.debug(\"Ignoring invalid derived schema {}\", derSchemaName);\n             }\n@@ -154,7 +155,7 @@ private <T extends AbstractVirSchema> T getVirtualSchema(final String virSchemaN\n \n         T virtualSchema = null;\n         if (StringUtils.isNotBlank(virSchemaName)) {\n-            virtualSchema = virtualSchemaDAO.find(virSchemaName, reference);\n+            virtualSchema = virSchemaDAO.find(virSchemaName, reference);\n \n             if (virtualSchema == null) {\n                 LOG.debug(\"Ignoring invalid virtual schema {}\", virSchemaName);\n@@ -202,42 +203,39 @@ protected void fillAttribute(final List<String> values, final AttributableUtil a\n     }\n \n     private boolean evaluateMandatoryCondition(final String mandatoryCondition,\n-            final List<? extends AbstractAttr> attributes) {\n+            final AbstractAttributable attributable) {\n \n         JexlContext jexlContext = new MapContext();\n-        jexlUtil.addAttrsToContext(attributes, jexlContext);\n+        jexlUtil.addAttrsToContext(attributable.getAttributes(), jexlContext);\n+        jexlUtil.addDerAttrsToContext(attributable.getDerivedAttributes(), attributable.getAttributes(), jexlContext);\n+        jexlUtil.addVirAttrsToContext(attributable.getVirtualAttributes(), jexlContext);\n \n         return Boolean.parseBoolean(jexlUtil.evaluate(mandatoryCondition, jexlContext));\n     }\n \n-    private boolean evaluateMandatoryCondition(final ExternalResource resource,\n-            final List<? extends AbstractAttr> attributes, final String intAttrName,\n-            final AttributableUtil attributableUtil) {\n+    private boolean evaluateMandatoryCondition(final ExternalResource resource, final AbstractAttributable attributable,\n+            final String intAttrName, final IntMappingType intMappingType) {\n \n         boolean result = false;\n \n-        for (Iterator<SchemaMapping> itor = resource.getMappings(intAttrName, attributableUtil.intMappingType()).\n-                iterator(); itor.hasNext() && !result;) {\n-\n-            SchemaMapping mapping = itor.next();\n-            result |= evaluateMandatoryCondition(mapping.getMandatoryCondition(), attributes);\n+        final Set<SchemaMapping> mappings = resource.getMappings(intAttrName, intMappingType);\n+        for (Iterator<SchemaMapping> itor = mappings.iterator(); itor.hasNext() && !result;) {\n+            final SchemaMapping mapping = itor.next();\n+            result |= evaluateMandatoryCondition(mapping.getMandatoryCondition(), attributable);\n         }\n \n         return result;\n     }\n \n-    private boolean evaluateMandatoryCondition(final Collection<ExternalResource> resources,\n-            final List<? extends AbstractAttr> attributes, final String intAttrName,\n-            final AttributableUtil attributableUtil) {\n+    private boolean evaluateMandatoryCondition(final AbstractAttributable attributable, final String intAttrName,\n+            final IntMappingType intMappingType) {\n \n         boolean result = false;\n \n-        ExternalResource resource;\n-        for (Iterator<ExternalResource> itor = resources.iterator(); itor.hasNext() && !result;) {\n-\n-            resource = itor.next();\n-            if (resource.isForceMandatoryConstraint()) {\n-                result |= evaluateMandatoryCondition(resource, attributes, intAttrName, attributableUtil);\n+        for (Iterator<ExternalResource> itor = attributable.getResources().iterator(); itor.hasNext() && !result;) {\n+            final ExternalResource resource = itor.next();\n+            if (resource.isEnforceMandatoryCondition()) {\n+                result |= evaluateMandatoryCondition(resource, attributable, intAttrName, intMappingType);\n             }\n         }\n \n@@ -247,28 +245,45 @@ private boolean evaluateMandatoryCondition(final Collection<ExternalResource> re\n     private SyncopeClientException checkMandatory(final AttributableUtil attributableUtil,\n             final AbstractAttributable attributable) {\n \n-        SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n+        SyncopeClientException reqValMissing = new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n         LOG.debug(\"Check mandatory constraint among resources {}\", attributable.getResources());\n-        // Check if there is some mandatory schema defined for which no value\n-        // has been provided\n-        List<AbstractSchema> allSchemas = schemaDAO.findAll(attributableUtil.schemaClass());\n \n-        for (AbstractSchema schema : allSchemas) {\n+        // Check if there is some mandatory schema defined for which no value has been provided\n+        for (AbstractSchema schema : schemaDAO.findAll(attributableUtil.schemaClass())) {\n             if (attributable.getAttribute(schema.getName()) == null\n                     && !schema.isReadonly()\n-                    && (evaluateMandatoryCondition(schema.getMandatoryCondition(), attributable.getAttributes()) || evaluateMandatoryCondition(\n-                    attributable.getResources(), attributable.getAttributes(), schema.getName(),\n-                    attributableUtil))) {\n+                    && (evaluateMandatoryCondition(schema.getMandatoryCondition(), attributable)\n+                    || evaluateMandatoryCondition(attributable, schema.getName(), attributableUtil.intMappingType()))) {\n \n                 LOG.error(\"Mandatory schema \" + schema.getName() + \" not provided with values\");\n-                \n-                requiredValuesMissing.addElement(schema.getName());\n+\n+                reqValMissing.addElement(schema.getName());\n             }\n         }\n+        for (AbstractDerSchema derSchema : derSchemaDAO.findAll(attributableUtil.derSchemaClass())) {\n+            if (attributable.getDerivedAttribute(derSchema.getName()) == null\n+                    && evaluateMandatoryCondition(\n+                    attributable, derSchema.getName(), attributableUtil.derIntMappingType())) {\n+\n+                LOG.error(\"Mandatory derived schema \" + derSchema.getName() + \" does not evaluate to any value\");\n \n-        return requiredValuesMissing;\n+                reqValMissing.addElement(derSchema.getName());\n+            }\n+        }\n+        for (AbstractVirSchema virSchema : virSchemaDAO.findAll(attributableUtil.virSchemaClass())) {\n+            if (attributable.getAttribute(virSchema.getName()) == null\n+                    && evaluateMandatoryCondition(\n+                    attributable, virSchema.getName(), attributableUtil.virIntMappingType())) {\n+\n+                LOG.error(\"Mandatory virtual schema \" + virSchema.getName() + \" not provided with values\");\n+\n+                reqValMissing.addElement(virSchema.getName());\n+            }\n+        }\n+\n+        return reqValMissing;\n     }\n \n     public PropagationByResource fillVirtual(final AbstractAttributable attributable,\n@@ -279,32 +294,29 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n \n         // 1. virtual attributes to be removed\n         for (String vAttrToBeRemoved : vAttrsToBeRemoved) {\n-            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeRemoved, attributableUtil.virtualSchemaClass());\n+            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeRemoved, attributableUtil.virSchemaClass());\n \n             if (virtualSchema != null) {\n-                AbstractVirAttr virtualAttribute = attributable.getVirtualAttribute(virtualSchema.getName());\n+                AbstractVirAttr virAttr = attributable.getVirtualAttribute(virtualSchema.getName());\n \n-                if (virtualAttribute == null) {\n+                if (virAttr == null) {\n                     LOG.debug(\"No virtual attribute found for schema {}\", virtualSchema.getName());\n                 } else {\n-                    attributable.removeVirtualAttribute(virtualAttribute);\n-                    virAttrDAO.delete(virtualAttribute);\n+                    attributable.removeVirtualAttribute(virAttr);\n+                    virAttrDAO.delete(virAttr);\n                 }\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (virtualSchema.getName().equals(mapping.getIntAttrName())\n-                            && mapping.getIntMappingType() == attributableUtil.virtualIntMappingType()\n+                            && mapping.getIntMappingType() == attributableUtil.virIntMappingType()\n                             && mapping.getResource() != null\n                             && attributable.getResources().contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE, mapping.getResource().getName());\n \n-                        // TODO: must be avoided to use virtual attribute as AccountId\n-                        if (mapping.isAccountid() && virtualAttribute != null\n-                                && !virtualAttribute.getValues().isEmpty()) {\n-\n-                            propByRes.addOldAccountId(mapping.getResource().getName(), virtualAttribute.getValues().get(\n-                                    0));\n+                        // TODO: using virtual attribute as AccountId must be avoided\n+                        if (mapping.isAccountid() && virAttr != null && !virAttr.getValues().isEmpty()) {\n+                            propByRes.addOldAccountId(mapping.getResource().getName(), virAttr.getValues().get(0));\n                         }\n                     }\n                 }\n@@ -315,13 +327,13 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n \n         // 2. virtual attributes to be updated\n         for (AttributeMod vAttrToBeUpdated : vAttrsToBeUpdated) {\n-            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeUpdated.getSchema(), attributableUtil.\n-                    virtualSchemaClass());\n+            AbstractVirSchema virtualSchema = getVirtualSchema(vAttrToBeUpdated.getSchema(),\n+                    attributableUtil.virSchemaClass());\n \n             if (virtualSchema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (virtualSchema.getName().equals(mapping.getIntAttrName())\n-                            && mapping.getIntMappingType() == attributableUtil.virtualIntMappingType()\n+                            && mapping.getIntMappingType() == attributableUtil.virIntMappingType()\n                             && mapping.getResource() != null\n                             && attributable.getResources().contains(mapping.getResource())) {\n \n@@ -332,7 +344,7 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                 AbstractVirAttr virtualAttribute = attributable.getVirtualAttribute(virtualSchema.getName());\n \n                 if (virtualAttribute == null) {\n-                    virtualAttribute = attributableUtil.newVirtualAttribute();\n+                    virtualAttribute = attributableUtil.newVirAttr();\n                     virtualAttribute.setVirtualSchema(virtualSchema);\n                     attributable.addVirtualAttribute(virtualAttribute);\n                 }\n@@ -415,7 +427,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                     if (!schema.isUniqueConstraint() || (!attribute.getUniqueValue().getStringValue().equals(newValue))) {\n \n                         attributable.removeAttribute(attribute);\n-                        attributeDAO.delete(attribute.getId(), attributableUtil.attributeClass());\n+                        attrDAO.delete(attribute.getId(), attributableUtil.attrClass());\n                     }\n                 }\n \n@@ -459,7 +471,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n                 attribute = attributable.getAttribute(schema.getName());\n                 if (attribute == null) {\n-                    attribute = attributableUtil.newAttribute();\n+                    attribute = attributableUtil.newAttr();\n                     attribute.setSchema(schema);\n                     attribute.setOwner(attributable);\n \n@@ -485,7 +497,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                     }\n                 }\n                 for (Long attributeValueId : valuesToBeRemoved) {\n-                    attributeValueDAO.delete(attributeValueId, attributableUtil.attributeValueClass());\n+                    attributeValueDAO.delete(attributeValueId, attributableUtil.attrValueClass());\n                 }\n \n                 // 1.2 add values\n@@ -500,7 +512,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n                 // if no values are in, the attribute can be safely removed\n                 if (attribute.getValuesAsStrings().isEmpty()) {\n-                    attributeDAO.delete(attribute);\n+                    attrDAO.delete(attribute);\n                 }\n             }\n         }\n@@ -514,7 +526,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         // 5. derived attributes to be removed\n         for (String derivedAttributeToBeRemoved : attributableMod.getDerivedAttributesToBeRemoved()) {\n \n-            derivedSchema = getDerivedSchema(derivedAttributeToBeRemoved, attributableUtil.derivedSchemaClass());\n+            derivedSchema = getDerivedSchema(derivedAttributeToBeRemoved, attributableUtil.derSchemaClass());\n \n             if (derivedSchema != null) {\n                 derivedAttribute = attributable.getDerivedAttribute(derivedSchema.getName());\n@@ -527,7 +539,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (derivedSchema.getName().equals(mapping.getIntAttrName())\n-                            && mapping.getIntMappingType() == attributableUtil.derivedIntMappingType()\n+                            && mapping.getIntMappingType() == attributableUtil.derIntMappingType()\n                             && mapping.getResource() != null\n                             && attributable.getResources().contains(mapping.getResource())) {\n \n@@ -549,20 +561,20 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         // 6. derived attributes to be added\n         for (String derivedAttributeToBeAdded : attributableMod.getDerivedAttributesToBeAdded()) {\n \n-            derivedSchema = getDerivedSchema(derivedAttributeToBeAdded, attributableUtil.derivedSchemaClass());\n+            derivedSchema = getDerivedSchema(derivedAttributeToBeAdded, attributableUtil.derSchemaClass());\n \n             if (derivedSchema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (derivedSchema.getName().equals(mapping.getIntAttrName())\n-                            && mapping.getIntMappingType() == attributableUtil.derivedIntMappingType()\n+                            && mapping.getIntMappingType() == attributableUtil.derIntMappingType()\n                             && mapping.getResource() != null\n                             && attributable.getResources().contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE, mapping.getResource().getName());\n                     }\n                 }\n \n-                derivedAttribute = attributableUtil.newDerivedAttribute();\n+                derivedAttribute = attributableUtil.newDerAttr();\n                 derivedAttribute.setDerivedSchema(derivedSchema);\n                 derivedAttribute.setOwner(attributable);\n                 attributable.addDerivedAttribute(derivedAttribute);\n@@ -606,11 +618,11 @@ public void fillVirtual(final AbstractAttributable attributable, final List<Attr\n             AbstractVirAttr virtualAttribute = attributable.getVirtualAttribute(attributeTO.getSchema());\n \n             if (virtualAttribute == null) {\n-                AbstractVirSchema virtualSchema = getVirtualSchema(attributeTO.getSchema(), attributableUtil.\n-                        virtualSchemaClass());\n+                AbstractVirSchema virtualSchema = getVirtualSchema(attributeTO.getSchema(),\n+                        attributableUtil.virSchemaClass());\n \n                 if (virtualSchema != null) {\n-                    virtualAttribute = attributableUtil.newVirtualAttribute();\n+                    virtualAttribute = attributableUtil.newVirAttr();\n                     virtualAttribute.setVirtualSchema(virtualSchema);\n                     virtualAttribute.setOwner(attributable);\n                     attributable.addVirtualAttribute(virtualAttribute);\n@@ -643,7 +655,7 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n                 if (schema != null) {\n                     attribute = attributable.getAttribute(schema.getName());\n                     if (attribute == null) {\n-                        attribute = attributableUtil.newAttribute();\n+                        attribute = attributableUtil.newAttr();\n                         attribute.setSchema(schema);\n                     }\n \n@@ -666,10 +678,10 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         AbstractDerAttr derivedAttribute;\n         for (AttributeTO attributeTO : attributableTO.getDerivedAttributes()) {\n \n-            derivedSchema = getDerivedSchema(attributeTO.getSchema(), attributableUtil.derivedSchemaClass());\n+            derivedSchema = getDerivedSchema(attributeTO.getSchema(), attributableUtil.derSchemaClass());\n \n             if (derivedSchema != null) {\n-                derivedAttribute = attributableUtil.newDerivedAttribute();\n+                derivedAttribute = attributableUtil.newDerAttr();\n                 derivedAttribute.setDerivedSchema(derivedSchema);\n                 derivedAttribute.setOwner(attributable);\n                 attributable.addDerivedAttribute(derivedAttribute);\n@@ -680,10 +692,10 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         if (AttributableType.USER == attributableUtil.getType()) {\n             for (AttributeTO vattrTO : attributableTO.getVirtualAttributes()) {\n                 AbstractVirSchema uVirSchema = getVirtualSchema(vattrTO.getSchema(),\n-                        attributableUtil.virtualSchemaClass());\n+                        attributableUtil.virSchemaClass());\n \n                 if (uVirSchema != null) {\n-                    AbstractVirAttr vattr = attributableUtil.newVirtualAttribute();\n+                    AbstractVirAttr vattr = attributableUtil.newVirAttr();\n                     vattr.setVirtualSchema(uVirSchema);\n                     vattr.setOwner(attributable);\n                     attributable.addVirtualAttribute(vattr);\n@@ -702,7 +714,7 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n                 attributable.addResource(resource);\n             }\n         }\n-        \n+\n         SyncopeClientException requiredValuesMissing = checkMandatory(attributableUtil, attributable);\n         if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);"},{"sha":"022099288066661f1638ad0f77e92919b4ebe340","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -95,7 +95,7 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n             }\n         }\n \n-        resource.setForceMandatoryConstraint(resourceTO.isForceMandatoryConstraint());\n+        resource.setEnforceMandatoryCondition(resourceTO.isEnforceMandatoryCondition());\n \n         resource.setPropagationPrimary(resourceTO.isPropagationPrimary());\n \n@@ -165,7 +165,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n \n         resourceTO.setAccountLink(resource.getAccountLink());\n \n-        resourceTO.setForceMandatoryConstraint(resource.isForceMandatoryConstraint());\n+        resourceTO.setEnforceMandatoryCondition(resource.isEnforceMandatoryCondition());\n \n         resourceTO.setPropagationPrimary(resource.isPropagationPrimary());\n "},{"sha":"8a56c361e78a807d4958de4a28ef7370e9f86bf6","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -80,7 +80,7 @@ public void update(final SchemaTO schemaTO, final AbstractSchema schema, final A\n \n         SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n-        List<AbstractAttr> attrs = schemaDAO.getAttributes(schema, attributableUtil.attributeClass());\n+        List<AbstractAttr> attrs = schemaDAO.getAttributes(schema, attributableUtil.attrClass());\n         if (!attrs.isEmpty()) {\n             if (schema.getType() != schemaTO.getType()) {\n                 SyncopeClientException e = new SyncopeClientException(SyncopeClientExceptionType.valueOf(\"Invalid\""},{"sha":"ffbbb6a0a73f14ba2860244c232cdf2fc6f89a4b","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -321,7 +321,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n                         attributeIds.add(attribute.getId());\n                     }\n                     for (Long attributeId : attributeIds) {\n-                        attributeDAO.delete(attributeId, MAttr.class);\n+                        attrDAO.delete(attributeId, MAttr.class);\n                     }\n                     attributeIds.clear();\n "},{"sha":"ad686ca62066bf297898cb0f8dbcdb96d7e1257b","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -91,7 +91,7 @@ public IntMappingType intMappingType() {\n         return result;\n     }\n \n-    public IntMappingType derivedIntMappingType() {\n+    public IntMappingType derIntMappingType() {\n         IntMappingType result;\n \n         switch (type) {\n@@ -110,7 +110,7 @@ public IntMappingType derivedIntMappingType() {\n         return result;\n     }\n \n-    public IntMappingType virtualIntMappingType() {\n+    public IntMappingType virIntMappingType() {\n         IntMappingType result;\n \n         switch (type) {\n@@ -165,7 +165,7 @@ public <T extends AbstractSchema> T newSchema() {\n         return result;\n     }\n \n-    public <T extends AbstractDerSchema> Class<T> derivedSchemaClass() {\n+    public <T extends AbstractDerSchema> Class<T> derSchemaClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -183,7 +183,7 @@ public <T extends AbstractDerSchema> Class<T> derivedSchemaClass() {\n         return result;\n     }\n \n-    public <T extends AbstractVirSchema> Class<T> virtualSchemaClass() {\n+    public <T extends AbstractVirSchema> Class<T> virSchemaClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -201,7 +201,7 @@ public <T extends AbstractVirSchema> Class<T> virtualSchemaClass() {\n         return result;\n     }\n \n-    public <T extends AbstractDerSchema> T newDerivedSchema() {\n+    public <T extends AbstractDerSchema> T newDerSchema() {\n         T result = null;\n \n         switch (type) {\n@@ -219,7 +219,7 @@ public <T extends AbstractDerSchema> T newDerivedSchema() {\n         return result;\n     }\n \n-    public <T extends AbstractAttr> Class<T> attributeClass() {\n+    public <T extends AbstractAttr> Class<T> attrClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -237,7 +237,7 @@ public <T extends AbstractAttr> Class<T> attributeClass() {\n         return result;\n     }\n \n-    public <T extends AbstractAttr> T newAttribute() {\n+    public <T extends AbstractAttr> T newAttr() {\n         T result = null;\n \n         switch (type) {\n@@ -255,7 +255,7 @@ public <T extends AbstractAttr> T newAttribute() {\n         return result;\n     }\n \n-    public <T extends AbstractDerAttr> Class<T> derivedAttributeClass() {\n+    public <T extends AbstractDerAttr> Class<T> derAttrClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -273,7 +273,7 @@ public <T extends AbstractDerAttr> Class<T> derivedAttributeClass() {\n         return result;\n     }\n \n-    public <T extends AbstractVirAttr> Class<T> virtualAttributeClass() {\n+    public <T extends AbstractVirAttr> Class<T> virAttrClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -291,7 +291,7 @@ public <T extends AbstractVirAttr> Class<T> virtualAttributeClass() {\n         return result;\n     }\n \n-    public <T extends AbstractDerAttr> T newDerivedAttribute() {\n+    public <T extends AbstractDerAttr> T newDerAttr() {\n         T result = null;\n \n         switch (type) {\n@@ -309,7 +309,7 @@ public <T extends AbstractDerAttr> T newDerivedAttribute() {\n         return result;\n     }\n \n-    public <T extends AbstractVirAttr> T newVirtualAttribute() {\n+    public <T extends AbstractVirAttr> T newVirAttr() {\n         T result = null;\n \n         switch (type) {\n@@ -327,7 +327,7 @@ public <T extends AbstractVirAttr> T newVirtualAttribute() {\n         return result;\n     }\n \n-    public <T extends AbstractVirSchema> T newVirtualSchema() {\n+    public <T extends AbstractVirSchema> T newVirSchema() {\n         T result = null;\n \n         switch (type) {\n@@ -345,7 +345,7 @@ public <T extends AbstractVirSchema> T newVirtualSchema() {\n         return result;\n     }\n \n-    public <T extends AbstractAttrValue> Class<T> attributeValueClass() {\n+    public <T extends AbstractAttrValue> Class<T> attrValueClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -363,7 +363,7 @@ public <T extends AbstractAttrValue> Class<T> attributeValueClass() {\n         return result;\n     }\n \n-    public <T extends AbstractAttrValue> T newAttributeValue() {\n+    public <T extends AbstractAttrValue> T newAttrValue() {\n         T result = null;\n \n         switch (type) {\n@@ -381,7 +381,7 @@ public <T extends AbstractAttrValue> T newAttributeValue() {\n         return result;\n     }\n \n-    public <T extends AbstractAttrValue> T newAttributeUniqueValue() {\n+    public <T extends AbstractAttrValue> T newAttrUniqueValue() {\n         T result = null;\n \n         switch (type) {"},{"sha":"b76e1c266edbc84b7cf9178eb2168d47f8abff73","filename":"core/src/main/java/org/apache/syncope/core/util/JexlUtil.java","status":"modified","additions":44,"deletions":22,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractBaseBean;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -128,15 +129,15 @@ public JexlContext addAttrsToContext(final Collection<? extends AbstractAttr> at\n                 ? new MapContext()\n                 : jexlContext;\n \n-        for (AbstractAttr attribute : attributes) {\n-            List<String> attributeValues = attribute.getValuesAsStrings();\n+        for (AbstractAttr attr : attributes) {\n+            List<String> attributeValues = attr.getValuesAsStrings();\n             String expressionValue = attributeValues.isEmpty()\n                     ? \"\"\n                     : attributeValues.get(0);\n \n-            LOG.debug(\"Add attribute {} with value {}\", attribute.getSchema().getName(), expressionValue);\n+            LOG.debug(\"Add attribute {} with value {}\", attr.getSchema().getName(), expressionValue);\n \n-            context.set(attribute.getSchema().getName(), expressionValue);\n+            context.set(attr.getSchema().getName(), expressionValue);\n         }\n \n         return context;\n@@ -163,40 +164,61 @@ public JexlContext addDerAttrsToContext(final Collection<? extends AbstractDerAt\n         return context;\n     }\n \n+    public JexlContext addVirAttrsToContext(final Collection<? extends AbstractVirAttr> virAttrs,\n+            final JexlContext jexlContext) {\n+\n+        JexlContext context = jexlContext == null\n+                ? new MapContext()\n+                : jexlContext;\n+\n+        for (AbstractVirAttr virAttr : virAttrs) {\n+            List<String> attributeValues = virAttr.getValues();\n+            String expressionValue = attributeValues.isEmpty()\n+                    ? \"\"\n+                    : attributeValues.get(0);\n+\n+            LOG.debug(\"Add virtual attribute {} with value {}\", virAttr.getVirtualSchema().getName(), expressionValue);\n+\n+            context.set(virAttr.getVirtualSchema().getName(), expressionValue);\n+        }\n+\n+        return context;\n+    }\n+\n     public String evaluate(final String expression, final AbstractAttributableTO attributableTO) {\n         final JexlContext context = new MapContext();\n \n         addFieldsToContext(attributableTO, context);\n \n-        for (AttributeTO attribute : attributableTO.getAttributes()) {\n-            List<String> attributeValues = attribute.getValues();\n-            String expressionValue = attributeValues.isEmpty()\n+        for (AttributeTO attr : attributableTO.getAttributes()) {\n+            List<String> values = attr.getValues();\n+            String expressionValue = values.isEmpty()\n                     ? \"\"\n-                    : attributeValues.get(0);\n+                    : values.get(0);\n \n-            LOG.debug(\"Add attribute {} with value {}\", attribute.getSchema(), expressionValue);\n+            LOG.debug(\"Add attribute {} with value {}\", attr.getSchema(), expressionValue);\n \n-            context.set(attribute.getSchema(), expressionValue);\n+            context.set(attr.getSchema(), expressionValue);\n         }\n-        for (AttributeTO attribute : attributableTO.getDerivedAttributes()) {\n-            List<String> attributeValues = attribute.getValues();\n-            String expressionValue = attributeValues.isEmpty()\n+        for (AttributeTO derAttr : attributableTO.getDerivedAttributes()) {\n+            List<String> values = derAttr.getValues();\n+            String expressionValue = values.isEmpty()\n                     ? \"\"\n-                    : attributeValues.get(0);\n+                    : values.get(0);\n \n-            LOG.debug(\"Add derived attribute {} with value {}\", attribute.getSchema(), expressionValue);\n+            LOG.debug(\"Add derived attribute {} with value {}\", derAttr.getSchema(), expressionValue);\n \n-            context.set(attribute.getSchema(), expressionValue);\n+            context.set(derAttr.getSchema(), expressionValue);\n         }\n-        for (AttributeTO attribute : attributableTO.getVirtualAttributes()) {\n-            List<String> attributeValues = attribute.getValues();\n-            String expressionValue = attributeValues.isEmpty()\n+        for (AttributeTO virAttr : attributableTO.getVirtualAttributes()) {\n+            List<String> values = virAttr.getValues();\n+            String expressionValue = values.isEmpty()\n                     ? \"\"\n-                    : attributeValues.get(0);\n+                    : values.get(0);\n \n-            LOG.debug(\"Add virtual attribute {} with value {}\", attribute.getSchema(), expressionValue);\n+            LOG.debug(\"Add virtual attribute {} with value {}\", virAttr.getSchema(), expressionValue);\n \n-            context.set(attribute.getSchema(), expressionValue);\n+            context.set(virAttr.getSchema(), expressionValue);\n         }\n \n         // Evaluate expression using the context prepared before"},{"sha":"e8b89535ac07f0d98ff686802f642632883f6731","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -123,7 +123,7 @@ public void issue42() {\n         resourceTO.setConnectorId(100L);\n         resourceTO.setMappings(schemaMappingTOs);\n         resourceTO.setPropagationMode(PropagationMode.ONE_PHASE);\n-        resourceTO.setForceMandatoryConstraint(true);\n+        resourceTO.setEnforceMandatoryCondition(true);\n \n         ExternalResource resource = resourceDataBinder.create(resourceTO);\n         resource = resourceDAO.save(resource);"},{"sha":"0c123a26a72779edd94d4d9522170317c9ebc735","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":36,"deletions":3,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -311,7 +311,7 @@ public void issue186() {\n     }\n \n     @Test\n-    public void testMandatoryContraintsUserCreation() {\n+    public void testEnforceMandatoryCondition() {\n         UserTO userTO = getSampleTO(\"issue183@apache.org\");\n         userTO.addResource(\"ws-target-resource-2\");\n         userTO.setPassword(\"newPassword\");\n@@ -339,6 +339,37 @@ public void testMandatoryContraintsUserCreation() {\n         assertNotNull(userTO);\n     }\n \n+    @Test\n+    public void testEnforceMandatoryConditionOnDerived() {\n+        ResourceTO resourceTO = restTemplate.getForObject(BASE_URL + \"/resource/read/{resourceName}.json\",\n+                ResourceTO.class, \"resource-csv\");\n+        assertNotNull(resourceTO);\n+        resourceTO.setName(\"resource-csv-enforcing\");\n+        resourceTO.setEnforceMandatoryCondition(true);\n+        resourceTO = restTemplate.postForObject(BASE_URL + \"resource/create.json\", resourceTO, ResourceTO.class);\n+        assertNotNull(resourceTO);\n+\n+        UserTO userTO = getSampleTO(\"syncope222@apache.org\");\n+        userTO.addResource(resourceTO.getName());\n+        userTO.setPassword(\"newPassword\");\n+\n+        SyncopeClientException sce = null;\n+        try {\n+            userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        } catch (SyncopeClientCompositeErrorException scce) {\n+            sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n+        }\n+        assertNotNull(sce);\n+\n+        AttributeTO derAttTO = new AttributeTO();\n+        derAttTO.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(derAttTO);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(Collections.singleton(\"resource-csv-enforcing\"), userTO.getResources());\n+    }\n+\n     @Test\n     public void issue147() {\n         // 1. create an user without role nor resources\n@@ -553,7 +584,8 @@ public void create() {\n         assertEquals(maxTaskExecutions, taskTO.getExecutions().size());\n \n         // 3. verify password\n-        Boolean verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=password123\",\n+        Boolean verify = restTemplate.\n+                getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=password123\",\n                 Boolean.class, newUserTO.getUsername());\n         assertTrue(verify);\n \n@@ -869,7 +901,8 @@ public void paginatedList() {\n             assertNotNull(user);\n         }\n \n-        users = Arrays.asList(restTemplate.getForObject(BASE_URL + \"user/list/{page}/{size}.json\", UserTO[].class, 2, 2));\n+        users = Arrays.\n+                asList(restTemplate.getForObject(BASE_URL + \"user/list/{page}/{size}.json\", UserTO[].class, 2, 2));\n \n         assertNotNull(users);\n         assertFalse(users.isEmpty());"},{"sha":"76f281153e1a22148c3ed695226f140168b09f26","filename":"core/src/test/resources/content.xml","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=b0fd21042ddf1afe7b12b2af6e45eeacbba72e1f","patch":"@@ -309,38 +309,38 @@ under the License.\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SYNC\"/>\n     \n-  <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"2\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n+  <ExternalResource name=\"resource-testdb\" connector_id=\"101\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"resource-testdb2\" connector_id=\"106\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n+  <ExternalResource name=\"resource-testdb2\" connector_id=\"106\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" propagationMode=\"ONE_PHASE\" syncPolicy_id=\"3\"\n+  <ExternalResource name=\"resource-csv\" connector_id=\"104\" enforceMandatoryCondition=\"0\" propagationMode=\"ONE_PHASE\" syncPolicy_id=\"3\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" serializedSyncToken=\"%3Corg.identityconnectors.framework.common.objects.SyncToken%2F%3E\"/>\n-  <ExternalResource name=\"resource-ldap\" connector_id=\"105\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n+  <ExternalResource name=\"resource-ldap\" connector_id=\"105\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     accountlink=\"&apos;uid=&apos; + username + &apos;,ou=people,o=isp&apos;\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n   \n   <!-- The following three resources has been added to verify the issue SYNCOPE-68 -->\n-  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n-  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n-  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n                     \n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-delete\" />"}]}