{"sha":"d0d69fea0e26beec600357db1439eca7519d7e46","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQwZDY5ZmVhMGUyNmJlZWM2MDAzNTdkYjE0MzllY2E3NTE5ZDdlNDY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-03T13:16:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-03T13:16:33Z"},"message":"Type management","tree":{"sha":"9beb042bf9ee198c2e0c3fe684672a797739b61f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9beb042bf9ee198c2e0c3fe684672a797739b61f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d0d69fea0e26beec600357db1439eca7519d7e46","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0d69fea0e26beec600357db1439eca7519d7e46","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d0d69fea0e26beec600357db1439eca7519d7e46","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0d69fea0e26beec600357db1439eca7519d7e46/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bfd44914e9eb2283d828a205e034f7a0f5617dcf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfd44914e9eb2283d828a205e034f7a0f5617dcf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfd44914e9eb2283d828a205e034f7a0f5617dcf"}],"stats":{"total":442,"additions":385,"deletions":57},"files":[{"sha":"3184701767f7c46c7a3c18be347603e1eef1f112","filename":"src/main/asciidoc/reference-guide/concepts/concepts.adoc","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -18,7 +18,19 @@\n //\n == Concepts\n \n-include::datamodel/datamodel.adoc[]\n+include::usersgroupsandanyobjects.adoc[]\n+\n+include::typemanagement.adoc[]\n+\n+=== External Resources\n+\n+==== Mapping\n+\n+=== Realms\n+\n+=== Roles\n+\n+=== Domains\n \n include::provisioning/provisioning.adoc[]\n "},{"sha":"4d67f5a27e338d8e7d98be7ff2f71db9c64395fd","filename":"src/main/asciidoc/reference-guide/concepts/datamodel/datamodel.adoc","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfd44914e9eb2283d828a205e034f7a0f5617dcf/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fdatamodel%2Fdatamodel.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfd44914e9eb2283d828a205e034f7a0f5617dcf/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fdatamodel%2Fdatamodel.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fdatamodel%2Fdatamodel.adoc?ref=bfd44914e9eb2283d828a205e034f7a0f5617dcf","patch":"@@ -1,43 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-=== Data Model\n-\n-include::usersgroupsandanyobjects.adoc[]\n-\n-==== Type Management\n-\n-===== Schema\n-\n-===== AnyTypeClass\n-\n-===== AnyType\n-\n-===== RelationshipType\n-\n-===== Type Extensions\n-\n-==== External Resources\n-\n-===== Mapping\n-\n-==== Realms\n-\n-==== Roles\n-\n-==== Domains"},{"sha":"773528bc306c24935562a6dc70e3d47453c52041","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/propagation.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpropagation.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpropagation.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpropagation.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -22,7 +22,7 @@ Whenever a change is performed via REST on users, groups or any objects:\n \n . a set of <<tasks-propagation,propagation tasks>> is generated, one for each associated external resource;\n . the generated propagation tasks are executed, e.g. the corresponding operations (create, update or delete) are sent\n-out, via connectors, to the configured identity repositories; the tasks can be saved for later re-execution.\n+out, via connectors, to the configured identity stores; the tasks can be saved for later re-execution.\n \n [TIP]\n .Which external resources?"},{"sha":"3409f5579d2ba9ef92dae52943d81d778ec4ffd4","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/provisioning.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fprovisioning.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -42,7 +42,7 @@ The provisioning operations can be initiated in several different ways:\n ==== Connectors and Resources\n \n ****\n-Connector Bundles:: The components able to connect to Identity Repositories; not specifically bound to Apache Syncope, \n+Connector Bundles:: The components able to connect to identity stores; not specifically bound to Apache Syncope, \n as they are part of the http://connid.tirasa.net[ConnId^] project. Custom connectors can also be \n https://connid.atlassian.net/wiki/display/BASE/Create+new+connector[made from scratch^].\n Connector Instances:: Instances of connector bundles, obtained by assigning values to the defined configuration "},{"sha":"48eae48196f2d9f67eb1a9a5617f6648e22cb1bf","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/pull.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -19,7 +19,7 @@\n [[provisioning-pull]]\n ==== Pull\n \n-Pull is the mechanism used to acquire identity data from identity repositories; for each external resource, one or more\n+Pull is the mechanism used to acquire identity data from identity stores; for each external resource, one or more\n <<tasks-pull,pull tasks>> can be defined, run and scheduled for period execution.\n \n Pull task execution involves querying the external resource and then processing each entity in an isolated transaction; \n@@ -53,7 +53,7 @@ by default, unmatching entities gets internally created, and matching updated.\n [TIP]\n .Pull Mode\n ====\n-The identity repository can be queried in different ways, depending on the _pull mode_ specified:\n+The identity store can be queried in different ways, depending on the _pull mode_ specified:\n \n ****\n FULL RECONCILIATION:: The complete list of entities available is processed."},{"sha":"bba13d0f9cd2674e5571966b14e43ddab50a2e8d","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/push.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpush.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpush.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpush.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -19,7 +19,7 @@\n [[provisioning-push]]\n ==== Push\n \n-With push, the matching set of internal entities can be sent to identity repositories - mainly for\n+With push, the matching set of internal entities can be sent to identity stores - mainly for\n (re)initialization purposes; for each external resource, one or more <<tasks-push,push tasks>> can be defined, run and \n scheduled for period execution.\n \n@@ -31,7 +31,7 @@ enclosing external resource;\n . _unmatching_ otherwise.\n \n Once assessed this, entities are processed according to the matching / unmatching rules specified for the push task:\n-by default, unmatching entities are pushed to identity repositories, and matching updated.\n+by default, unmatching entities are pushed to identity stores, and matching updated.\n \n .Matching Rules\n ****"},{"sha":"af8b783acaf037353552a85af17e67b1742f04f2","filename":"src/main/asciidoc/reference-guide/concepts/typemanagement.adoc","status":"added","additions":349,"deletions":0,"changes":349,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -0,0 +1,349 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+=== Type Management\n+\n+In order to manage which attributes can be owned by users, groups and any object, and which values can be provided,\n+Apache Syncope defines a simple yet powerful type management system, vaguely inspired by  the LDAP/X.500 information\n+model.\n+\n+==== Schema\n+\n+A schema instance describes the values that attributes with that schema will held; it can be defined plain, derived or\n+virtual.\n+\n+===== Plain\n+\n+Values for attributes with such schema kind are provided during user, group or any object create / update.\n+\n+When defining a plain schema, the following information is to be provided:\n+\n+* Type\n+** `String`\n+** `Long` - allows to specify a _conversion pattern_ to / from string, according to \n+http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n+** `Double` - allows to specify a _conversion pattern_ to / from string, according to \n+http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n+** `Boolean`\n+** `Date` - allows to specify a _conversion pattern_ to / from string, according to \n+http://docs.oracle.com/javase/7/docs/api/java/text/DateFormat.html[DateFormat^]\n+** `Enum` - requires to provide\n+*** enumeration values (mandatory)\n+*** enumeration labels (optional, values will be used alternatively)\n+** `Encrypted` - requires to provide\n+*** secret key\n+*** cipher algorithm\n+** `Binary` - requires to provide the declared mime type\n+* Validator class - (optional) Java class validating the value(s) provided for attributes, see \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/EmailAddressValidator.java[EmailAddressValidator^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/EmailAddressValidator.java[EmailAddressValidator^]\n+endif::[]\n+for reference\n+* Mandatory condition - http://commons.apache.org/proper/commons-jexl/[JEXL^] expression indicating whether values for \n+this schema must be necessarily provided or not; compared to simple boolean value, such condition allows to express\n+complex statements like as 'be mandatory only if this other attribute value is above 14', and so on\n+* Unique constraint - make sure that no duplicate value(s) for this schema are found\n+* Multivalue flag - whether single or multiple values are supported\n+* Read-only flag - whether value(s) for this schema are modifiable only via internal code (say workflow tasks) or \n+can be instead provided during ordinary <<provisioning,provisioning>>\n+\n+===== Derived\n+\n+Sometimes it is handful to obtain values as arbitrary combination of other attributes' values: for example, with \n+`firstname` and `surname` plain schemas, it is natural to think that `fullname` could be somehow defined as the \n+concatenation of `firstname` 's and `surname` 's values, separated by a blank space.\n+\n+Derived schemas are always read-only and require to specify a http://commons.apache.org/proper/commons-jexl/[JEXL^]\n+expression referencing plain schema(s). +\n+For the sample above, it would be\n+\n+ firstname + ' ' + surname\n+\n+With derived attributes, values are not stored into the <<persistence,internal storage>> but calculated on request, by\n+evaluating the related JEXL expression\n+\n+===== Virtual\n+\n+Virtual attributes are somehow linked from identity stores rather than kept internally.\n+\n+The typical use case is when attribute values can change on identity store without notice, and there is need of \n+having always access to the most recent available values.\n+\n+It can also be said that virtual schemas are for attributes whose ownership is not of Syncope but of identity stores;\n+the external resources for such identity stores are said to be the _linking resources_.\n+\n+[TIP]\n+As best practice, only attributes for which Apache Syncope retains ownership should be modeled as plain attributes;\n+others should be virtual, instead.\n+\n+When defining a virtual schema, the following information is to be provided:\n+\n+* External resource - linking resource\n+* External attribute - attribute to be linked on external resource\n+* Any Type - reference <<anytype,Any Type>> on external resource\n+* Read-only flag - whether the external attribute value(s) for this schema can only be read, or written too\n+\n+.Virtual Attribute Cache\n+****\n+For performance optimization, virtual attributes are managed by an internal cache to control the actual access to \n+the linked identity stores.\n+\n+The actual cache implements the \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/cache/VirAttrCache.java[VirAttrCache^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/cache/VirAttrCache.java[VirAttrCache^]\n+endif::[]\n+interface, and is configurable.\n+\n+Some implementations are provided by default - see table below - custom ones can be provided.\n+\n+[cols=\"1,2\"]\n+|===\n+\n+| \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/MemoryVirAttrCache.java[MemoryVirAttrCache^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/MemoryVirAttrCache.java[MemoryVirAttrCache^]\n+endif::[]\n+| Simple fixed-size in-memory cache, with configurable time-to-live.\n+\n+| \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/DisabledVirAttrCache.java[DisabledVirAttrCache^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/DisabledVirAttrCache.java[DisabledVirAttrCache^]\n+endif::[]\n+| Pass-through cache which actually does not provide any caching: use when actual access to identity store is required.\n+\n+|===\n+****\n+\n+==== AnyTypeClass\n+\n+Any type classes are aggregations of plain, derived and virtual schemas, provided with unique identifiers.\n+\n+Classes can be assigned to <<anytype, any types>> and are also available as auxiliary (hence to be specified on a\n+given user / group / any object instance) and for <<type-extensions,type extensions>>.\n+\n+==== AnyType\n+\n+Any types represent the type of identities that Apache Syncope is able to manage; besides the predefined `USER` and \n+`GROUP`, more types can be created to model workstations, printers, folders, sensors, services, ...\n+\n+For all any types defined, a set of <<anytypeclass, classes>> can be selected so that instances af a given any type will\n+be enabled to populate attributes for schemas in those classes.\n+\n+.Any types and attributes allowed for users, groups and any objects\n+====\n+Assuming that the following schemas are available:\n+\n+. plain: `firstname`, `surname`, `email`\n+. derived: `fullname`\n+. virtual: `enrollment`\n+\n+and that the following any type classes are defined:\n+\n+. `minimal` - containing `firstname`, `surname` and `fullname`\n+. `member` - containing `email` and `enrollment`\n+\n+and that the `USER` any type has only `minimal` assigned, then the following users are valid (details are simplified to\n+increase readability):\n+\n+[source,json]\n+----\n+{\n+  \"key\": \"74cd8ece-715a-44a4-a736-e17b46c4e7e6\",\n+  \"type\": \"USER\",\n+  \"realm\": \"/\",\n+  \"username\": \"verdi\",\n+  \"plainAttrs\": [\n+    {\n+      \"schema\": \"surname\",\n+      \"values\": [\n+        \"Verdi\"\n+      ]\n+    },\n+    {\n+      \"schema\": \"firstname\",\n+      \"values\": [\n+        \"Giuseppe\"\n+      ]\n+    }\n+  ],\n+  \"derAttrs\": [\n+    {\n+      \"schema\": \"fullname\",\n+      \"values\": [\n+        \"Giuseppe Verdi\"\n+      ]\n+    }\n+  ]\n+}\n+\n+{\n+  \"key\": \"1417acbe-cbf6-4277-9372-e75e04f97000\",\n+  \"type\": \"USER\",\n+  \"realm\": \"/\",\n+  \"username\": \"rossini\",\n+  \"auxClasses\": [ \"member\" ],\n+  \"plainAttrs\": [\n+    {\n+      \"schema\": \"surname\",\n+      \"values\": [\n+        \"Rossini\"\n+      ]\n+    },\n+    {\n+      \"schema\": \"firstname\",\n+      \"values\": [\n+        \"Gioacchino\"\n+      ]\n+    },\n+    {\n+      \"schema\": \"email\",\n+      \"values\": [\n+        \"gioacchino.rossini@syncope.apache.org\"\n+      ]\n+    }\n+  ],\n+  \"derAttrs\": [\n+    {\n+      \"schema\": \"fullname\",\n+      \"values\": [\n+        \"Gioacchino Rossini\"\n+      ]\n+    }\n+  ],\n+  \"virAttrs\": [\n+    {\n+      \"schema\": \"enrollment\",\n+      \"values\": [\n+        \"154322\"\n+      ]\n+    }\n+  ]\n+}\n+----\n+====\n+\n+==== RelationshipType\n+\n+Relationships allow to create a link between an user and an any object, or between two any objects; relationship types\n+define the available link types.\n+\n+.Relationship between any objects (printers)\n+====\n+The following any object of type `PRINTER` contains a relationship of type `neighborhood` with another `PRINTER`\n+(details are simplified to increase readability):\n+\n+[source,json]\n+----\n+{\n+  \"key\": \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\",\n+  \"type\": \"PRINTER\",\n+  \"realm\": \"/\",\n+  \"name\": \"HP LJ 1300n\",\n+  \"auxClasses\": [],\n+  \"plainAttrs\": [\n+    {\n+      \"schema\": \"model\",\n+      \"values\": [\n+        \"Canon MFC8030\"\n+      ]\n+    },\n+    {\n+      \"schema\": \"location\",\n+      \"values\": [\n+        \"1st floor\"\n+      ]\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"type\": \"neighborhood\",\n+      \"rightType\": \"PRINTER\",\n+      \"rightKey\": \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\"\n+    }\n+  ]\n+}\n+----\n+====\n+\n+==== Type Extensions\n+\n+When an user (or an any object) is part of a group, a _membership_ is defined.\n+\n+It is sometimes useful to define attributes which are bound to a particular membership: if, for example, the\n+`University A` and `University B` groups are available, a student might have different e-mail addresses for each\n+university. How can this be modeled?\n+\n+Type extensions define a set of <<anytypeclass,classes>> associated to a group, that can be automatically\n+assigned to a given user (or any object) when becoming member of such group.\n+\n+.Membership with type extension\n+====\n+With reference to the sample above (details are simplified to increase readability):\n+\n+[source,json]\n+----\n+{\n+  \"key\": \"c9b2dec2-00a7-4855-97c0-d854842b4b24\",\n+  \"type\": \"USER\",\n+  \"realm\": \"/\",\n+  \"username\": \"bellini\",\n+  \"memberships\": [\n+    {\n+      \"type\": \"Membership\",\n+      \"rightType\": \"GROUP\",\n+      \"rightKey\": \"bf825fe1-7320-4a54-bd64-143b5c18ab97\",\n+      \"groupName\": \"University A\",\n+      \"plainAttrs\": [\n+        {\n+          \"schema\": \"email\",\n+          \"values\": [\n+            \"bellini@university_a.net\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"type\": \"Membership\",\n+      \"rightType\": \"GROUP\",\n+      \"rightKey\": \"bf825fe1-7320-4a54-bd64-143b5c18ab96\",\n+      \"groupName\": \"University B\",\n+      \"plainAttrs\": [\n+        {\n+          \"schema\": \"email\",\n+          \"values\": [\n+            \"bellini@university_b.net\"\n+          ]\n+        }\n+      ]\n+    }\n+  ]\n+}\n+----\n+===="},{"sha":"90690cd5f10af476e8314cd26e27c0c44900c94a","filename":"src/main/asciidoc/reference-guide/concepts/usersgroupsandanyobjects.adoc","status":"renamed","additions":17,"deletions":7,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0d69fea0e26beec600357db1439eca7519d7e46/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fusersgroupsandanyobjects.adoc?ref=d0d69fea0e26beec600357db1439eca7519d7e46","patch":"@@ -16,14 +16,14 @@\n // specific language governing permissions and limitations\n // under the License.\n //\n-==== Users, Groups and Any Objects\n+=== Users, Groups and Any Objects\n \n Users, groups and any objects are definitely the key entities to manage: as explained <<introduction,above>>\n in fact, the whole identity management concept is literally about managing identity data.\n \n Starting with Apache Syncope 2.0, the following identities are supported:\n \n-* *Users* represent the virtual identity build up of account information fragmented throughout the associated external \n+* *Users* represent the virtual identities build up of account information fragmented across the associated external \n resources\n * *Groups* have the double purpose of representing entities on external resources supporting this concept (say LDAP or\n Active Directory) and putting together users or any objects for implementing group-based provisioning, e.g. to\n@@ -32,18 +32,27 @@ dynamically associate users or any objects to external resources\n \n For each of the identities above, Apache Syncope is capable of maintaining:\n \n-. name - string value uniquely identifying a specific user, group or any object instance;\n-. password (users only) - hashed or encrypted value, depending on the selected `password.cipher.algorithm` - see\n-<<configuration-parameters, below>> for details, which can be used for authentication;\n+. `name` (`username`, for users) - string value uniquely identifying a specific user, group or any object instance;\n+. `password` (users only) - hashed or encrypted value, depending on the selected `password.cipher.algorithm` - see\n+<<configuration-parameters, below>> for details - which can be used for authentication;\n . set of attributes, with each attribute being a `(key,values)` pair where\n \n- ** `key` is a string label (i.e. `surname`)\n+ ** `key` is a string label (i.e. `surname`);\n  ** `values` is a (possibly singleton) collection of data (i.e. `[Doe]` but also \n `[\\john.doe@syncope.apache.org, \\jdoe@gmail.com]`)\n  ; the type of values that can be assigned to each attribute is defined via the <<schema,schema>> matching the `key`\n value: being schema defined as _plain_, _derived_ and _virtual_, so can be attributes;\n . associations with <<external-resources,external resources>>, for <<provisioning,provisioning>>.\n \n+[IMPORTANT]\n+.Which schemas can be populated for a given user / group / any object?\n+====\n+Each user / group / any object will be able to hold values for all schemas:\n+\n+. defined in the <<AnyTypeClass,any type classes>> associated to their <<AnyType, any type>>;\n+. defined in the <<AnyTypeClass,any type classes>> configured as *_auxiliary_* for the specific instance.\n+====\n+\n Moreover, users and any objects can be part of groups, or associated to other any objects.\n \n [TIP]\n@@ -52,5 +61,6 @@ Moreover, users and any objects can be part of groups, or associated to other an\n When an user or an any object is assigned to a group, a *_membership_* is defined; the members of a group benefit\n of <<type-extensions,type extensions>>.\n \n-When an user or an any object is associated to another any object, a *_relationship_* is defined. \n+When an user or an any object is associated to another any object, a *_relationship_* is defined, of one of available\n+<<relationshiptype,relationship types>>.\n ====","previous_filename":"src/main/asciidoc/reference-guide/concepts/datamodel/usersgroupsandanyobjects.adoc"}]}