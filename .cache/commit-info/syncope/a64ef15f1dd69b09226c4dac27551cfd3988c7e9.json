{"sha":"a64ef15f1dd69b09226c4dac27551cfd3988c7e9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE2NGVmMTVmMWRkNjliMDkyMjZjNGRhYzI3NTUxY2ZkMzk4OGM3ZTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-05T16:04:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-05T16:04:33Z"},"message":"[SYNCOPE-666] Cleanup","tree":{"sha":"51d405e1f2adb92b9e0c8e845e7adae66d699ec2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/51d405e1f2adb92b9e0c8e845e7adae66d699ec2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a64ef15f1dd69b09226c4dac27551cfd3988c7e9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a64ef15f1dd69b09226c4dac27551cfd3988c7e9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a64ef15f1dd69b09226c4dac27551cfd3988c7e9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1da1ea4b532d2201f165cb91414de11c35cdab27","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1da1ea4b532d2201f165cb91414de11c35cdab27","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1da1ea4b532d2201f165cb91414de11c35cdab27"}],"stats":{"total":285,"additions":135,"deletions":150},"files":[{"sha":"9b696f8990e9871aa137904fac23e494f8855a55","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -33,7 +33,7 @@ public class AnyTypeClassTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -591757688607551266L;\n \n-    private String name;\n+    private String key;\n \n     private final List<String> plainSchemas = new ArrayList<>();\n \n@@ -42,11 +42,11 @@ public class AnyTypeClassTO extends AbstractBaseBean {\n     private final List<String> virSchemas = new ArrayList<>();\n \n     public String getKey() {\n-        return name;\n+        return key;\n     }\n \n     public void setKey(final String key) {\n-        this.name = key;\n+        this.key = key;\n     }\n \n     @XmlElementWrapper(name = \"plainSchemas\")"},{"sha":"3722b81c993981fc394b69e8265b3454818c2b3c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -34,18 +34,18 @@ public class AnyTypeTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 6771657557616874373L;\n \n-    private String name;\n+    private String key;\n \n     private AnyTypeKind kind;\n \n     private final List<String> classes = new ArrayList<>();\n \n     public String getKey() {\n-        return name;\n+        return key;\n     }\n \n     public void setKey(final String key) {\n-        this.name = key;\n+        this.key = key;\n     }\n \n     public AnyTypeKind getKind() {"},{"sha":"c562b69478ae12d0b041541f287883bb0466c186","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -38,7 +38,7 @@ public enum DefaultType {\n         ACCOUNT(\"__ACCOUNT__\"),\n         GROUP(\"__GROUP__\");\n \n-        private String specialName;\n+        private final String specialName;\n \n         private DefaultType(final String specialName) {\n             this.specialName = specialName;"},{"sha":"38a8da72841170efb26cd358e5ea95f21d90f4c1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationStatus.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -30,9 +30,6 @@\n @XmlType\n public class PropagationStatus extends AbstractBaseBean {\n \n-    /**\n-     * Serial version ID.\n-     */\n     private static final long serialVersionUID = 3921498450222857690L;\n \n     /**"},{"sha":"7fbac89957aecf87a23e4e849153f7d59c5cdee7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -40,10 +40,7 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private static final long serialVersionUID = -9193551354041698963L;\n \n-    /**\n-     * The resource identifier is the name.\n-     */\n-    private String name;\n+    private String key;\n \n     /**\n      * The resource type is identified by the associated connector.\n@@ -98,11 +95,11 @@ public ResourceTO() {\n     }\n \n     public String getKey() {\n-        return name;\n+        return key;\n     }\n \n     public void setKey(final String key) {\n-        this.name = key;\n+        this.key = key;\n     }\n \n     public boolean isEnforceMandatoryCondition() {"},{"sha":"3537bc52470da0c2ccdbd917af8d66bb47ddcfde","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/IntMappingType.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -38,7 +38,7 @@ public enum IntMappingType {\n     UserPlainSchema(AnyTypeKind.USER),\n     UserDerivedSchema(AnyTypeKind.USER),\n     UserVirtualSchema(AnyTypeKind.USER),\n-    UserId(AnyTypeKind.USER),\n+    UserKey(AnyTypeKind.USER),\n     Username(AnyTypeKind.USER),\n     Password(AnyTypeKind.USER),\n     // -------------------------\n@@ -47,7 +47,7 @@ public enum IntMappingType {\n     GroupPlainSchema(AnyTypeKind.GROUP),\n     GroupDerivedSchema(AnyTypeKind.GROUP),\n     GroupVirtualSchema(AnyTypeKind.GROUP),\n-    GroupId(AnyTypeKind.GROUP),\n+    GroupKey(AnyTypeKind.GROUP),\n     GroupName(AnyTypeKind.GROUP),\n     GroupOwnerSchema(AnyTypeKind.GROUP),\n     // -------------------------\n@@ -56,7 +56,7 @@ public enum IntMappingType {\n     AnyPlainSchema(AnyTypeKind.ANY_OBJECT),\n     AnyDerivedSchema(AnyTypeKind.ANY_OBJECT),\n     AnyVirtualSchema(AnyTypeKind.ANY_OBJECT),\n-    AnyId(AnyTypeKind.ANY_OBJECT);\n+    AnyKey(AnyTypeKind.ANY_OBJECT);\n \n     private final AnyTypeKind anyTypeKind;\n \n@@ -117,9 +117,9 @@ public static Set<IntMappingType> getAttributeTypes(final AnyTypeKind anyTypeKin\n     }\n \n     public static Set<IntMappingType> getEmbedded() {\n-        return EnumSet.of(IntMappingType.UserId, IntMappingType.Username, IntMappingType.Password,\n-                IntMappingType.GroupId, IntMappingType.GroupName, IntMappingType.GroupOwnerSchema,\n-                IntMappingType.AnyId);\n+        return EnumSet.of(IntMappingType.UserKey, IntMappingType.Username, IntMappingType.Password,\n+                IntMappingType.GroupKey, IntMappingType.GroupName, IntMappingType.GroupOwnerSchema,\n+                IntMappingType.AnyKey);\n     }\n \n     /**\n@@ -167,7 +167,7 @@ private enum UserMappingType {\n         UserPlainSchema,\n         UserDerivedSchema,\n         UserVirtualSchema,\n-        UserId,\n+        UserKey,\n         Username,\n         Password;\n \n@@ -181,7 +181,7 @@ private enum GroupMappingType {\n         GroupPlainSchema,\n         GroupDerivedSchema,\n         GroupVirtualSchema,\n-        GroupId,\n+        GroupKey,\n         GroupName,\n         GroupOwnerSchema;\n \n@@ -195,7 +195,7 @@ private enum AnyMappingType {\n         AnyPlainSchema,\n         AnyDerivedSchema,\n         AnyVirtualSchema,\n-        AnyId;\n+        AnyKey;\n \n     }\n }"},{"sha":"4d19e3102373353f83b703576fb21000d6ffed03","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/RESTHeaders.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -23,22 +23,13 @@\n  */\n public final class RESTHeaders {\n \n-    /**\n-     * UserId option key.\n-     */\n-    public static final String USER_ID = \"X-Syncope-User-Id\";\n+    public static final String USER_KEY = \"X-Syncope-User-Key\";\n \n-    /**\n-     * Username option key.\n-     */\n     public static final String USERNAME = \"X-Syncope-Username\";\n \n     public static final String OWNED_ENTITLEMENTS = \"X-Syncope-Entitlements\";\n \n-    /**\n-     * HTTP header key for object ID assigned to an object after its creation.\n-     */\n-    public static final String RESOURCE_ID = \"X-Syncope-Id\";\n+    public static final String RESOURCE_KEY = \"X-Syncope-Key\";\n \n     /**\n      * Declares the type of exception being raised."},{"sha":"ede49be58a65f103e166691b25c8aa812438bc60","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -63,56 +63,56 @@ public interface ConnectorService extends JAXRSService {\n     /**\n      * Returns configuration for given connector instance.\n      *\n-     * @param connInstanceKey connector instance id to read configuration from\n+     * @param key connector instance key to read configuration from\n      * @return configuration for given connector instance\n      */\n     @GET\n-    @Path(\"{connInstanceKey}/configuration\")\n+    @Path(\"{key}/configuration\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    List<ConnConfProperty> getConfigurationProperties(@NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey);\n+    List<ConnConfProperty> getConfigurationProperties(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n-     * Returns schema names for connector bundle matching the given connector instance id.\n+     * Returns schema names for connector bundle matching the given connector instance key.\n      *\n-     * @param connInstanceKey connector instance id to be used for schema lookup\n+     * @param key connector instance key to be used for schema lookup\n      * @param connInstanceTO connector instance object to provide special configuration properties\n      * @param includeSpecial if set to true, special schema names (like '__PASSWORD__') will be included;\n      * default is false\n-     * @return schema names for connector bundle matching the given connector instance id\n+     * @return schema names for connector bundle matching the given connector instance key\n      */\n     @POST\n-    @Path(\"{connInstanceKey}/schemaNames\")\n+    @Path(\"{key}/schemaNames\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    List<PlainSchemaTO> getSchemaNames(@NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey,\n+    List<PlainSchemaTO> getSchemaNames(@NotNull @PathParam(\"key\") Long key,\n             @NotNull ConnInstanceTO connInstanceTO,\n             @QueryParam(\"includeSpecial\") @DefaultValue(\"false\") boolean includeSpecial);\n \n     /**\n-     * Returns supported object classes for connector bundle matching the given connector instance id.\n+     * Returns supported object classes for connector bundle matching the given connector instance key.\n      *\n-     * @param connInstanceKey connector instance id to be used for schema lookup\n+     * @param key connector instance key to be used for schema lookup\n      * @param connInstanceTO connector instance object to provide special configuration properties\n-     * @return supported object classes for connector bundle matching the given connector instance id\n+     * @return supported object classes for connector bundle matching the given connector instance key\n      */\n     @POST\n-    @Path(\"{connInstanceKey}/supportedObjectClasses\")\n+    @Path(\"{key}/supportedObjectClasses\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ConnIdObjectClassTO> getSupportedObjectClasses(\n-            @NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey,\n+            @NotNull @PathParam(\"key\") Long key,\n             @NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n-     * Returns connector instance with matching id.\n+     * Returns connector instance with matching key.\n      *\n-     * @param connInstanceKey connector instance id to be read\n-     * @return connector instance with matching id\n+     * @param key connector instance key to be read\n+     * @return connector instance with matching key\n      */\n     @GET\n-    @Path(\"{connInstanceKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ConnInstanceTO read(@NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey);\n+    ConnInstanceTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Returns connector instance for matching resource.\n@@ -151,24 +151,24 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(\n     Response create(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n-     * Updates the connector instance matching the provided id.\n+     * Updates the connector instance matching the provided key.\n      *\n-     * @param connInstanceKey connector instance id to be updated\n+     * @param key connector instance key to be updated\n      * @param connInstanceTO connector instance to be stored\n      */\n     @PUT\n-    @Path(\"{connInstanceKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey, @NotNull ConnInstanceTO connInstanceTO);\n+    void update(@NotNull @PathParam(\"key\") Long key, @NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n-     * Deletes the connector instance matching the provided id.\n+     * Deletes the connector instance matching the provided key.\n      *\n-     * @param connInstanceKey connector instance id to be deleted\n+     * @param key connector instance key to be deleted\n      */\n     @DELETE\n-    @Path(\"{connInstanceKey}\")\n-    void delete(@NotNull @PathParam(\"connInstanceKey\") Long connInstanceKey);\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * @param connInstanceTO connector instance to be used for connection check\n@@ -190,7 +190,7 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(\n     /**\n      * Executes the provided bulk action.\n      *\n-     * @param bulkAction list of connector instance ids against which the bulk action will be performed.\n+     * @param bulkAction list of connector instance keys against which the bulk action will be performed.\n      * @return Bulk action result\n      */\n     @POST"},{"sha":"4656dce5574bdfc6bcce2e1ccc3865098c87485d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -49,27 +49,27 @@ public interface ResourceService extends JAXRSService {\n     /**\n      * Returns connector object from the external resource, for the given type and key.\n      *\n-     * @param resourceKey Name of resource to read connector object from\n+     * @param key Name of resource to read connector object from\n      * @param anyTypeKey any object type\n-     * @param key any object key\n+     * @param anyKey any object key\n      * @return connector object from the external resource, for the given type and key\n      */\n     @GET\n-    @Path(\"{resourceKey}/{anyTypeKey}/{key}\")\n+    @Path(\"{key}/{anyTypeKey}/{anyKey}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ConnObjectTO readConnObject(@NotNull @PathParam(\"resourceKey\") String resourceKey,\n-            @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey, @NotNull @PathParam(\"key\") Long key);\n+    ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey, @NotNull @PathParam(\"anyKey\") Long anyKey);\n \n     /**\n      * Returns the resource with matching name.\n      *\n-     * @param resourceKey Name of resource to be read\n+     * @param key Name of resource to be read\n      * @return resource with matching name\n      */\n     @GET\n-    @Path(\"{resourceKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ResourceTO read(@NotNull @PathParam(\"resourceKey\") String resourceKey);\n+    ResourceTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a list of all resources.\n@@ -97,23 +97,23 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"resourceKey\") String resourceKe\n     /**\n      * Updates the resource matching the given name.\n      *\n-     * @param resourceKey name of resource to be updated\n+     * @param key name of resource to be updated\n      * @param resourceTO resource to be stored\n      */\n     @PUT\n-    @Path(\"{resourceKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"resourceKey\") String resourceKey, @NotNull ResourceTO resourceTO);\n+    void update(@NotNull @PathParam(\"key\") String key, @NotNull ResourceTO resourceTO);\n \n     /**\n      * Deletes the resource matching the given name.\n      *\n-     * @param resourceKey name of resource to be deleted\n+     * @param key name of resource to be deleted\n      */\n     @DELETE\n-    @Path(\"{resourceKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void delete(@NotNull @PathParam(\"resourceKey\") String resourceKey);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established.\n@@ -129,7 +129,7 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"resourceKey\") String resourceKe\n     /**\n      * De-associate any objects from the given resource.\n      *\n-     * @param resourceKey name of resource\n+     * @param key name of resource\n      * @param anyTypeKey any object kind\n      * @param type resource de-association action type\n      * @param keys any object keys against which the bulk action will be performed\n@@ -140,10 +140,10 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"resourceKey\") String resourceKe\n                 value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{resourceKey}/bulkDeassociation/{anyTypeKey}/{type}\")\n+    @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    BulkActionResult bulkDeassociation(@NotNull @PathParam(\"resourceKey\") String resourceKey,\n+    BulkActionResult bulkDeassociation(@NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey,\n             @NotNull @PathParam(\"type\") ResourceDeassociationActionType type, @NotNull List<AnyKey> keys);\n "},{"sha":"c86ee7c9469746a7e8be7aef09c960e256b5edaa","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -204,8 +204,8 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n \n             AttrTO attrTO;\n             switch (item.getIntMappingType()) {\n-                case UserId:\n-                case GroupId:\n+                case UserKey:\n+                case GroupKey:\n                     break;\n \n                 case Password:"},{"sha":"97008d045941fbd60618590f0e9bd0fec1585fb1","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/MappingUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -528,9 +528,9 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n                 }\n                 break;\n \n-            case UserId:\n-            case GroupId:\n-            case AnyId:\n+            case UserKey:\n+            case GroupKey:\n+            case AnyKey:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n                     attrValue = anyUtils.newPlainAttrValue();"},{"sha":"2aa587fde6c717bbdb7644fbe2eaf7579311ad19","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -141,9 +141,9 @@ public String getIntAttrName() {\n         final String name;\n \n         switch (getIntMappingType()) {\n-            case UserId:\n-            case GroupId:\n-            case AnyId:\n+            case UserKey:\n+            case GroupKey:\n+            case AnyKey:\n                 name = \"id\";\n                 break;\n "},{"sha":"ee9a9f75e6c5bdd9b989b151ae1addbf2b38f594","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ResourceTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -120,7 +120,7 @@ public void save() {\n         MappingItem connObjectKey = entityFactory.newEntity(MappingItem.class);\n         connObjectKey.setExtAttrName(\"username\");\n         connObjectKey.setIntAttrName(\"fullname\");\n-        connObjectKey.setIntMappingType(IntMappingType.UserId);\n+        connObjectKey.setIntMappingType(IntMappingType.UserKey);\n         connObjectKey.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(connObjectKey);\n \n@@ -242,7 +242,7 @@ public void saveInvalidProvision() {\n         MappingItem connObjectKey = entityFactory.newEntity(MappingItem.class);\n         connObjectKey.setExtAttrName(\"username\");\n         connObjectKey.setIntAttrName(\"fullname\");\n-        connObjectKey.setIntMappingType(IntMappingType.UserId);\n+        connObjectKey.setIntMappingType(IntMappingType.UserKey);\n         connObjectKey.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(connObjectKey);\n "},{"sha":"8e1e554e6480c78fa9bfa854f9d4d935fe8d6eba","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FResourceTest.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -138,7 +138,7 @@ public void save() {\n         MappingItem connObjectKey = entityFactory.newEntity(MappingItem.class);\n         connObjectKey.setExtAttrName(\"username\");\n         connObjectKey.setIntAttrName(\"username\");\n-        connObjectKey.setIntMappingType(IntMappingType.UserId);\n+        connObjectKey.setIntMappingType(IntMappingType.UserKey);\n         connObjectKey.setPurpose(MappingPurpose.PROPAGATION);\n         mapping.setConnObjectKeyItem(connObjectKey);\n         connObjectKey.setMapping(mapping);"},{"sha":"b61cb95cb14076544d89b14130514bfc26507d4d","filename":"core/persistence-jpa/src/test/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -676,7 +676,7 @@ under the License.\n   <Provision id=\"15\" resource_name=\"ws-target-resource-1\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"15\" provision_id=\"15\"/>\n   <MappingItem id=\"99\" mapping_id=\"15\" extAttrName=\"userId\"\n-               intMappingType=\"UserId\" mandatoryCondition=\"true\"\n+               intMappingType=\"UserKey\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"100\" extAttrName=\"email\" mapping_id=\"15\"\n                intAttrName=\"email\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n@@ -907,7 +907,7 @@ under the License.\n   <Provision id=\"17\" resource_name=\"resource-db-virattr\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"17\" provision_id=\"17\"/>\n   <MappingItem id=\"331\" mapping_id=\"17\" connObjectKey=\"1\" password=\"0\"\n-               extAttrName=\"id\" intMappingType=\"UserId\" \n+               extAttrName=\"id\" intMappingType=\"UserKey\" \n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n   <MappingItem id=\"332\" mapping_id=\"17\" connObjectKey=\"0\" password=\"0\" \n                extAttrName=\"USERNAME\" intAttrName=\"virtualdata\" intMappingType=\"UserVirtualSchema\""},{"sha":"71ad31985495e898aae6a7cb0f66733a504ad3fd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -197,9 +197,9 @@ private List<Long> findByConnObjectKeyItem(\n                 }\n                 break;\n \n-            case UserId:\n-            case GroupId:\n-            case AnyId:\n+            case UserKey:\n+            case GroupKey:\n+            case AnyKey:\n                 Any<?, ?, ?> any = getAnyDAO(connObjectKeyItem).find(Long.parseLong(uid));\n                 if (any != null) {\n                     result.add(any.getKey());"},{"sha":"a594bace534242d101dac9f9411138218a1921ca","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -84,7 +84,7 @@ protected Preference getPreference() {\n     protected Response createResponse(final Object id, final Object entity) {\n         Response.ResponseBuilder builder = Response.\n                 created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(id)).build()).\n-                header(RESTHeaders.RESOURCE_ID, id);\n+                header(RESTHeaders.RESOURCE_KEY, id);\n \n         switch (getPreference()) {\n             case RETURN_NO_CONTENT:"},{"sha":"3683e613b7c4224c9de25235da7ff8a6a8b7ef16","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeClassServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -49,7 +49,7 @@ public Response create(final AnyTypeClassTO anyTypeTO) {\n         AnyTypeClassTO created = logic.create(anyTypeTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"bb3c6994d91925b817bf529c38a73b036f08ca4a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -49,7 +49,7 @@ public Response create(final AnyTypeTO anyTypeTO) {\n         AnyTypeTO created = logic.create(anyTypeTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"ac26aadfa281971cde12ec94db4fd40a43714906","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -48,13 +48,13 @@ public Response create(final ConnInstanceTO connInstanceTO) {\n         ConnInstanceTO connInstance = logic.create(connInstanceTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(connInstance.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, connInstance.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, connInstance.getKey()).\n                 build();\n     }\n \n     @Override\n-    public void delete(final Long connInstanceKey) {\n-        logic.delete(connInstanceKey);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n \n     @Override\n@@ -63,15 +63,15 @@ public List<ConnBundleTO> getBundles(final String lang) {\n     }\n \n     @Override\n-    public List<ConnConfProperty> getConfigurationProperties(final Long connInstanceKey) {\n-        return logic.getConfigurationProperties(connInstanceKey);\n+    public List<ConnConfProperty> getConfigurationProperties(final Long key) {\n+        return logic.getConfigurationProperties(key);\n     }\n \n     @Override\n-    public List<PlainSchemaTO> getSchemaNames(final Long connInstanceKey, final ConnInstanceTO connInstanceTO,\n+    public List<PlainSchemaTO> getSchemaNames(final Long key, final ConnInstanceTO connInstanceTO,\n             final boolean includeSpecial) {\n \n-        connInstanceTO.setKey(connInstanceKey);\n+        connInstanceTO.setKey(key);\n \n         return CollectionUtils.collect(logic.getSchemaNames(connInstanceTO, includeSpecial),\n                 new Transformer<String, PlainSchemaTO>() {\n@@ -86,10 +86,10 @@ public PlainSchemaTO transform(final String name) {\n     }\n \n     @Override\n-    public List<ConnIdObjectClassTO> getSupportedObjectClasses(final Long connInstanceKey,\n+    public List<ConnIdObjectClassTO> getSupportedObjectClasses(final Long key,\n             final ConnInstanceTO connInstanceTO) {\n \n-        connInstanceTO.setKey(connInstanceKey);\n+        connInstanceTO.setKey(key);\n \n         List<String> objectClasses = logic.getSupportedObjectClasses(connInstanceTO);\n         List<ConnIdObjectClassTO> result = new ArrayList<>(objectClasses.size());\n@@ -105,8 +105,8 @@ public List<ConnInstanceTO> list(final String lang) {\n     }\n \n     @Override\n-    public ConnInstanceTO read(final Long connInstanceKey) {\n-        return logic.read(connInstanceKey);\n+    public ConnInstanceTO read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -115,8 +115,8 @@ public ConnInstanceTO readByResource(final String resourceName) {\n     }\n \n     @Override\n-    public void update(final Long connInstanceKey, final ConnInstanceTO connInstanceTO) {\n-        connInstanceTO.setKey(connInstanceKey);\n+    public void update(final Long key, final ConnInstanceTO connInstanceTO) {\n+        connInstanceTO.setKey(key);\n         logic.update(connInstanceTO);\n     }\n "},{"sha":"017b0b3520dd6bbe4ea15efa589dbf611eeeda6b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/NotificationServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -39,7 +39,7 @@ public Response create(final NotificationTO notificationTO) {\n         NotificationTO created = logic.create(notificationTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"a61e7767b52eb29351481e32bc79e9219b03623c","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -43,7 +43,7 @@ public <T extends AbstractPolicyTO> Response create(final T policyTO) {\n         T policy = logic.create(policyTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(policy.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, policy.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, policy.getKey()).\n                 build();\n     }\n "},{"sha":"ecf372db43290b2ca0c972697243f9642ce8b01e","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RealmServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -51,7 +51,7 @@ public Response create(final String parentPath, final RealmTO realmTO) {\n         RealmTO created = logic.create(StringUtils.prependIfMissing(parentPath, SyncopeConstants.ROOT_REALM), realmTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getName()).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getFullPath()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getFullPath()).\n                 build();\n     }\n "},{"sha":"405e105be01c4f9bcf69f316b268ebcdccbe3033","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -52,7 +52,7 @@ public Response create(final ReportTO reportTO) {\n         ReportTO createdReportTO = logic.create(reportTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdReportTO.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, createdReportTO.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, createdReportTO.getKey()).\n                 build();\n     }\n "},{"sha":"48d64453ae6b0daff363b974e002180ca47f7e39","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -61,24 +61,24 @@ public Response create(final ResourceTO resourceTO) {\n         ResourceTO created = logic.create(resourceTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n \n     @Override\n-    public void update(final String resourceKey, final ResourceTO resourceTO) {\n-        resourceTO.setKey(resourceKey);\n+    public void update(final String key, final ResourceTO resourceTO) {\n+        resourceTO.setKey(key);\n         logic.update(resourceTO);\n     }\n \n     @Override\n-    public void delete(final String resourceKey) {\n-        logic.delete(resourceKey);\n+    public void delete(final String key) {\n+        logic.delete(key);\n     }\n \n     @Override\n-    public ResourceTO read(final String resourceKey) {\n-        return logic.read(resourceKey);\n+    public ResourceTO read(final String key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -87,8 +87,8 @@ public List<ResourceTO> list() {\n     }\n \n     @Override\n-    public ConnObjectTO readConnObject(final String resourceKey, final String anyTypeKey, final Long key) {\n-        return logic.readConnObject(resourceKey, anyTypeKey, key);\n+    public ConnObjectTO readConnObject(final String key, final String anyTypeKey, final Long anyKey) {\n+        return logic.readConnObject(key, anyTypeKey, anyKey);\n     }\n \n     @Override\n@@ -98,7 +98,7 @@ public boolean check(final ResourceTO resourceTO) {\n \n     @Override\n     public BulkActionResult bulkDeassociation(\n-            final String resourceKey, final String anyTypeKey, final ResourceDeassociationActionType type,\n+            final String key, final String anyTypeKey, final ResourceDeassociationActionType type,\n             final List<AnyKey> keys) {\n \n         AbstractResourceAssociator<? extends AnyTO> associator = anyTypeKey.equalsIgnoreCase(AnyTypeKind.USER.name())\n@@ -109,29 +109,29 @@ public BulkActionResult bulkDeassociation(\n \n         BulkActionResult result = new BulkActionResult();\n \n-        for (AnyKey key : keys) {\n-            Set<String> resources = Collections.singleton(resourceKey);\n+        for (AnyKey anyKey : keys) {\n+            Set<String> resources = Collections.singleton(key);\n             try {\n                 switch (type) {\n                     case DEPROVISION:\n-                        associator.deprovision(key.getElement(), resources);\n+                        associator.deprovision(anyKey.getElement(), resources);\n                         break;\n \n                     case UNASSIGN:\n-                        associator.unassign(key.getElement(), resources);\n+                        associator.unassign(anyKey.getElement(), resources);\n                         break;\n \n                     case UNLINK:\n-                        associator.unlink(key.getElement(), resources);\n+                        associator.unlink(anyKey.getElement(), resources);\n                         break;\n \n                     default:\n                 }\n \n-                result.getResults().put(String.valueOf(key.getElement()), BulkActionResult.Status.SUCCESS);\n+                result.getResults().put(String.valueOf(anyKey.getElement()), BulkActionResult.Status.SUCCESS);\n             } catch (Exception e) {\n-                LOG.warn(\"While executing {} on {} {}\", type, anyTypeKey, key.getElement(), e);\n-                result.getResults().put(String.valueOf(key.getElement()), BulkActionResult.Status.FAILURE);\n+                LOG.warn(\"While executing {} on {} {}\", type, anyTypeKey, anyKey.getElement(), e);\n+                result.getResults().put(String.valueOf(anyKey.getElement()), BulkActionResult.Status.FAILURE);\n             }\n         }\n "},{"sha":"d2efb3f255ca95bbcfaebc033560c563c9cdfae3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -49,7 +49,7 @@ public Response create(final RoleTO roleTO) {\n         RoleTO created = logic.create(roleTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"aa9925522022abdfdb724bca37b4a348378c2528","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -41,7 +41,7 @@ public <T extends AbstractSchemaTO> Response create(final SchemaType schemaType,\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"b094adcc3ff779c6bf1218fb7813d786688f09d0","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SecurityQuestionServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -50,7 +50,7 @@ public Response create(final SecurityQuestionTO securityQuestionTO) {\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, String.valueOf(created.getKey())).\n+                header(RESTHeaders.RESOURCE_KEY, String.valueOf(created.getKey())).\n                 build();\n     }\n "},{"sha":"29d4a0c357e417dfd714ed8fbdbf6371db9475ae","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -59,7 +59,7 @@ public <T extends SchedTaskTO> Response create(final T taskTO) {\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdTask.getKey())).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_ID, createdTask.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, createdTask.getKey()).\n                 build();\n     }\n "},{"sha":"74d58d19bb45c6b75773bd23649e4e8df8e13050","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -56,7 +56,7 @@ public Response create(final UserTO userTO, final boolean storePassword) {\n     public Response read() {\n         Pair<String, UserTO> self = logic.readSelf();\n         return Response.ok().\n-                header(RESTHeaders.RESOURCE_ID, self.getValue().getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, self.getValue().getKey()).\n                 header(RESTHeaders.OWNED_ENTITLEMENTS, self.getKey()).\n                 entity(self.getValue()).\n                 build();"},{"sha":"9ea1279dbb13d9ab7a58e2fc6183fcccf0aa53c8","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -62,7 +62,7 @@ public Response getUsername(final Long userKey) {\n     @Override\n     public Response getUserKey(final String username) {\n         return Response.ok().header(HttpHeaders.ALLOW, OPTIONS_ALLOW).\n-                header(RESTHeaders.USER_ID, logic.getKey(username)).\n+                header(RESTHeaders.USER_KEY, logic.getKey(username)).\n                 build();\n     }\n "},{"sha":"8cfec8bc4ef2854029a8760bcd9eb4c55b620009","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -280,7 +280,7 @@ protected UserTO createUser(final UserTO userTO, final boolean storePassword) {\n \n     protected UserTO readUser(final String username) {\n         return userService.read(Long.valueOf(\n-                userService.getUserKey(username).getHeaderString(RESTHeaders.USER_ID)));\n+                userService.getUserKey(username).getHeaderString(RESTHeaders.USER_KEY)));\n     }\n \n     protected UserTO updateUser(final UserMod userMod) {"},{"sha":"6cf1313c3f06cf9b77134fbbad58126d622b802c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -624,7 +624,7 @@ public void issueSYNCOPE632() {\n             mapping.setConnObjectLink(\"'cn=' + displayProperty + ',ou=groups,o=isp'\");\n \n             MappingItemTO description = new MappingItemTO();\n-            description.setIntMappingType(IntMappingType.GroupId);\n+            description.setIntMappingType(IntMappingType.GroupKey);\n             description.setExtAttrName(\"description\");\n             description.setPurpose(MappingPurpose.BOTH);\n             mapping.add(description);"},{"sha":"a6dd805eb556607376bb6f5e399547f4e8be0332","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ResourceITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a64ef15f1dd69b09226c4dac27551cfd3988c7e9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java?ref=a64ef15f1dd69b09226c4dac27551cfd3988c7e9","patch":"@@ -78,7 +78,7 @@ private ResourceTO buildResourceTO(final String resourceName) {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n \n@@ -137,7 +137,7 @@ public void createOverridingProps() {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n@@ -189,7 +189,7 @@ public void createWithSingleMappingItem() {\n         provisionTO.setMapping(mapping);\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setExtAttrName(\"userId\");\n         item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.PROPAGATION);\n@@ -203,7 +203,7 @@ public void createWithSingleMappingItem() {\n         mapping = new MappingTO();\n         provisionTO.setMapping(mapping);\n         item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.GroupId);\n+        item.setIntMappingType(IntMappingType.GroupKey);\n         item.setExtAttrName(\"groupId\");\n         item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.SYNCHRONIZATION);\n@@ -239,7 +239,7 @@ public void createWithInvalidMapping() {\n         provisionTO.setMapping(mapping);\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setExtAttrName(\"userId\");\n         item.setConnObjectKey(true);\n         mapping.setConnObjectKeyItem(item);\n@@ -275,7 +275,7 @@ public void createWithoutExtAttr() {\n         provisionTO.setMapping(mapping);\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setExtAttrName(\"userId\");\n         item.setConnObjectKey(true);\n         mapping.setConnObjectKeyItem(item);\n@@ -373,7 +373,7 @@ public void update() {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n@@ -597,7 +597,7 @@ public void issueSYNCOPE493() {\n         provisionTO.setMapping(mapping);\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.UserId);\n+        item.setIntMappingType(IntMappingType.UserKey);\n         item.setExtAttrName(\"userId\");\n         item.setConnObjectKey(true);\n         item.setPurpose(MappingPurpose.PROPAGATION);"}]}