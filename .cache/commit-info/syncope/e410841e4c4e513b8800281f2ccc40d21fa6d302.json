{"sha":"e410841e4c4e513b8800281f2ccc40d21fa6d302","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU0MTA4NDFlNGM0ZTUxM2I4ODAwMjgxZjJjY2M0MGQyMWZhNmQzMDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-30T11:26:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-30T11:26:19Z"},"message":"[SYNCOPE-425] Discussed changes and RESTful best practices applied\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1537047 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"116efc4b26aa8e0aeeac9e2d72ae9e69209ad573","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/116efc4b26aa8e0aeeac9e2d72ae9e69209ad573"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e410841e4c4e513b8800281f2ccc40d21fa6d302","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e410841e4c4e513b8800281f2ccc40d21fa6d302","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e410841e4c4e513b8800281f2ccc40d21fa6d302","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e410841e4c4e513b8800281f2ccc40d21fa6d302/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e18903cbe1f3cbbb6a101c55d50c728460765142","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e18903cbe1f3cbbb6a101c55d50c728460765142","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e18903cbe1f3cbbb6a101c55d50c728460765142"}],"stats":{"total":3918,"additions":1813,"deletions":2105},"files":[{"sha":"745a3505dc83e31d89d93f530f718ce156d91360","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientExceptionMapper.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -28,8 +28,8 @@\n import javax.ws.rs.ext.Provider;\r\n import javax.xml.ws.WebServiceException;\r\n import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;\r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.types.ClientExceptionType;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\r\n import org.apache.syncope.common.validation.SyncopeClientException;\r\n import org.slf4j.Logger;\r\n@@ -75,9 +75,9 @@ else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\n     }\r\n \r\n     private SyncopeClientCompositeException checkSyncopeClientCompositeException(final Response response) {\r\n-        List<Object> exTypesInHeaders = response.getHeaders().get(SyncopeConstants.REST_EXCEPTION_TYPE_HEADER);\r\n+        List<Object> exTypesInHeaders = response.getHeaders().get(RESTHeaders.EXCEPTION_TYPE.toString());\r\n         if (exTypesInHeaders == null) {\r\n-            LOG.debug(\"No \" + SyncopeConstants.REST_EXCEPTION_TYPE_HEADER + \" provided\");\r\n+            LOG.debug(\"No \" + RESTHeaders.EXCEPTION_TYPE + \" provided\");\r\n             return null;\r\n         }\r\n \r\n@@ -90,8 +90,7 @@ private SyncopeClientCompositeException checkSyncopeClientCompositeException(fin\n             try {\r\n                 exceptionType = ClientExceptionType.fromHeaderValue(exTypeAsString);\r\n             } catch (IllegalArgumentException e) {\r\n-                LOG.error(\"Unexpected value of \" + SyncopeConstants.REST_EXCEPTION_TYPE_HEADER + \": \"\r\n-                        + exTypeAsString, e);\r\n+                LOG.error(\"Unexpected value of \" + RESTHeaders.EXCEPTION_TYPE + \": \" + exTypeAsString, e);\r\n             }\r\n             if (exceptionType != null) {\r\n                 handledExceptions.add(exTypeAsString);\r"},{"sha":"9f2e5944ec2a305114808a0f6768183e855cf6c8","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientFactoryBean.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -25,12 +25,6 @@\n \n public class RestClientFactoryBean extends JAXRSClientFactoryBean {\n \n-    private String contentType;\n-\n-    public RestClientFactoryBean() {\n-        super();\n-    }\n-\n     public <T> T createServiceInstance(final Class<T> serviceClass, final MediaType mediaType) {\n         return createServiceInstance(serviceClass, mediaType, null, null);\n     }"},{"sha":"fa2b26410b0dd2f0bbbbde79fac484ae71c4344b","filename":"common/src/main/java/org/apache/syncope/common/AbstractWrappable.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FAbstractWrappable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FAbstractWrappable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FAbstractWrappable.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common;\n+\n+public abstract class AbstractWrappable extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 1712808704911635170L;\n+\n+    private String name;\n+\n+    public static <T extends AbstractWrappable> T getInstance(final Class<T> reference, final String name) {\n+        try {\n+            T instance = reference.newInstance();\n+            instance.setName(name);\n+            return instance;\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Could not instantiate \" + reference.getName(), e);\n+        }\n+    }\n+\n+    /**\n+     * @return the name\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * @param name the name to set\n+     */\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"34b350a148a9d1d66c0f19b3afd34118d11ed343","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -38,24 +38,6 @@ public class SyncopeConstants {\n \r\n     public static final String DEFAULT_DATE_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\r\n \r\n-    /**\r\n-     * HTTP header key for object ID assigned to an object after its creation;\r\n-     * HTTP Response after PUT operation should contain this key with resource id as its value.\r\n-     */\r\n-    public static final String REST_RESOURCE_ID_HEADER = \"org.apache.syncope.resource.id\";\r\n-\r\n-    /**\r\n-     * HTTP header key for exception type.\r\n-     */\r\n-    public static final String REST_EXCEPTION_TYPE_HEADER = \"Syncope.ExceptionType\";\r\n-\r\n-    /**\r\n-     * This constant is not defined in javax.ws.rs.core.HttpHeaders.\r\n-     *\r\n-     * @see javax.ws.rs.core.HttpHeaders\r\n-     */\r\n-    public static final String CONTENT_DISPOSITION_HEADER = \"Content-Disposition\";\r\n-\r\n     public static final String DEFAULT_ENCODING = \"UTF-8\";\r\n \r\n     public static final String ROOT_LOGGER = \"ROOT\";\r"},{"sha":"7efa7e02d9d4f316ce8e8c7565c6053a97871757","filename":"common/src/main/java/org/apache/syncope/common/mod/StatusMod.java","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FStatusMod.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.mod;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"statusMod\")\n+@XmlType\n+public class StatusMod extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 3230910033784302656L;\n+\n+    @XmlEnum\n+    @XmlType(name = \"statusModType\")\n+    public enum ModType {\n+\n+        ACTIVATE,\n+        SUSPEND,\n+        REACTIVATE;\n+\n+    }\n+\n+    /**\n+     * Id of user to for which status update is requested.\n+     */\n+    private long id;\n+\n+    private ModType type;\n+\n+    /**\n+     * Update token (if required).\n+     */\n+    private String token;\n+\n+    /**\n+     * Whether update should be performed on internal storage.\n+     */\n+    private boolean onSyncope = true;\n+\n+    /**\n+     * External resources for which update is needed to be propagated.\n+     */\n+    private final List<String> resourceNames = new ArrayList<String>();\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public ModType getType() {\n+        return type;\n+    }\n+\n+    public void setType(final ModType type) {\n+        this.type = type;\n+    }\n+\n+    public String getToken() {\n+        return token;\n+    }\n+\n+    public void setToken(final String token) {\n+        this.token = token;\n+    }\n+\n+    public boolean isOnSyncope() {\n+        return onSyncope;\n+    }\n+\n+    public void setOnSyncope(final boolean onSyncope) {\n+        this.onSyncope = onSyncope;\n+    }\n+\n+    public List<String> getResourceNames() {\n+        return resourceNames;\n+    }\n+\n+}"},{"sha":"ef0016ef4827ec677b32a8c4f55b608922e20f9f","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -26,7 +26,6 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-import org.apache.syncope.common.to.PropagationRequestTO;\r\n \r\n @XmlRootElement(name = \"userMod\")\r\n @XmlType\r\n@@ -42,7 +41,7 @@ public class UserMod extends AbstractAttributableMod {\n \r\n     private final Set<Long> membershipsToRemove;\r\n \r\n-    private PropagationRequestTO pwdPropRequest;\r\n+    private StatusMod pwdPropRequest;\r\n \r\n     public UserMod() {\r\n         super();\r\n@@ -81,11 +80,11 @@ public Set<Long> getMembershipsToRemove() {\n         return membershipsToRemove;\r\n     }\r\n \r\n-    public PropagationRequestTO getPwdPropRequest() {\r\n+    public StatusMod getPwdPropRequest() {\r\n         return pwdPropRequest;\r\n     }\r\n \r\n-    public void setPwdPropRequest(final PropagationRequestTO pwdPropRequest) {\r\n+    public void setPwdPropRequest(final StatusMod pwdPropRequest) {\r\n         this.pwdPropRequest = pwdPropRequest;\r\n     }\r\n \r"},{"sha":"6b908c60218e2df67b71ede6fc53027f6444b6ef","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,26 +19,30 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import java.util.Set;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n \r\n @Path(\"configurations\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ConfigurationService {\r\n \r\n     /**\r\n      * Creates a new configuration element.\r\n      *\r\n      * @param configurationTO Configuration to be stored.\r\n-     * @return Response containing URI location for created resource.\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created configuration\r\n      */\r\n     @POST\r\n     Response create(ConfigurationTO configurationTO);\r\n@@ -62,14 +66,14 @@ public interface ConfigurationService {\n      */\r\n     @GET\r\n     @Path(\"mailTemplates\")\r\n-    Set<MailTemplateTO> getMailTemplates();\r\n+    List<MailTemplateTO> getMailTemplates();\r\n \r\n     /**\r\n      * @return Returns a list of known validator names.\r\n      */\r\n     @GET\r\n     @Path(\"validators\")\r\n-    Set<ValidatorTO> getValidators();\r\n+    List<ValidatorTO> getValidators();\r\n \r\n     /**\r\n      * @return Returns a list of all configuration elements.\r"},{"sha":"b496358c2ecca1942090750760d0a91b720f80a7","filename":"common/src/main/java/org/apache/syncope/common/services/ConnectorService.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,14 +19,17 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n import javax.ws.rs.QueryParam;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n@@ -37,13 +40,15 @@\n import org.apache.syncope.common.types.ConnConfProperty;\r\n \r\n @Path(\"connectors\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ConnectorService {\r\n \r\n     /**\r\n      * Create a new connector instance.\r\n      *\r\n      * @param connInstanceTO connector instance to be created\r\n-     * @return response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\r\n      */\r\n     @POST\r\n     Response create(ConnInstanceTO connInstanceTO);\r\n@@ -144,5 +149,5 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(@PathParam(\"connInstanceId\")\n \r\n     @POST\r\n     @Path(\"bulk\")\r\n-    BulkActionRes bulkAction(BulkAction bulkAction);\r\n+    BulkActionRes bulk(BulkAction bulkAction);\r\n }\r"},{"sha":"99ee54409f23168195d16c62c309e914ce4bf6b8","filename":"common/src/main/java/org/apache/syncope/common/services/EntitlementService.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -18,26 +18,31 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import java.util.Set;\r\n+import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n \r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.Path;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n \r\n import org.apache.syncope.common.to.EntitlementTO;\r\n \r\n @Path(\"entitlements\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface EntitlementService {\r\n \r\n     /**\r\n      * @return Returns a collection of all known entitlements.\r\n      */\r\n     @GET\r\n-    Set<EntitlementTO> getAllEntitlements();\r\n+    List<EntitlementTO> getAllEntitlements();\r\n \r\n     /**\r\n      * @return Returns a collection of entitlements assigned to user making this request (Service Call).\r\n      */\r\n     @GET\r\n     @Path(\"own\")\r\n-    Set<EntitlementTO> getMyEntitlements();\r\n+    List<EntitlementTO> getOwnEntitlements();\r\n }\r"},{"sha":"e53feb3775f50a82f7d73d283354e0fd424516db","filename":"common/src/main/java/org/apache/syncope/common/services/LoggerService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,17 +19,22 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n \r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n \r\n import org.apache.syncope.common.to.LoggerTO;\r\n import org.apache.syncope.common.types.LoggerType;\r\n \r\n @Path(\"logger/{type}\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface LoggerService {\r\n \r\n     /**\r"},{"sha":"b5bd506f1ddd03d8c4f6893e8579355b07049a44","filename":"common/src/main/java/org/apache/syncope/common/services/NotificationService.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,22 +19,27 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n \r\n import org.apache.syncope.common.to.NotificationTO;\r\n \r\n @Path(\"notifications\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface NotificationService {\r\n \r\n     /**\r\n      * @param notificationTO Creates a new notification.\r\n-     * @return Response containing URI location for created resource.\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\r\n      */\r\n     @POST\r\n     Response create(NotificationTO notificationTO);\r"},{"sha":"2734093850e07ff9579a1257239d527e96a155f4","filename":"common/src/main/java/org/apache/syncope/common/services/PolicyService.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,25 +19,30 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import java.util.Set;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n+import javax.ws.rs.MatrixParam;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.CorrelationRuleClassTO;\r\n import org.apache.syncope.common.to.AbstractPolicyTO;\r\n import org.apache.syncope.common.types.PolicyType;\r\n \r\n @Path(\"policies\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface PolicyService {\r\n \r\n     /**\r\n      * @param policyTO Policy to be created (needs to match type)\r\n      * @param <T> response type (extending PolicyTO)\r\n-     * @return Response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\r\n      */\r\n     @POST\r\n     <T extends AbstractPolicyTO> Response create(T policyTO);\r\n@@ -56,8 +61,7 @@ public interface PolicyService {\n      * @return List of policies with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/list\")\r\n-    <T extends AbstractPolicyTO> List<T> list(@PathParam(\"type\") PolicyType type);\r\n+    <T extends AbstractPolicyTO> List<T> list(@MatrixParam(\"type\") PolicyType type);\r\n \r\n     /**\r\n      * @param policyId ID of requested policy\r\n@@ -74,8 +78,8 @@ public interface PolicyService {\n      * @return Global Policy for matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/0\")\r\n-    <T extends AbstractPolicyTO> T readGlobal(@PathParam(\"type\") PolicyType type);\r\n+    @Path(\"global\")\r\n+    <T extends AbstractPolicyTO> T readGlobal(@MatrixParam(\"type\") PolicyType type);\r\n \r\n     /**\r\n      * @param policyId ID of policy to be updated\r\n@@ -87,10 +91,9 @@ public interface PolicyService {\n     <T extends AbstractPolicyTO> void update(@PathParam(\"policyId\") Long policyId, T policyTO);\r\n \r\n     /**\r\n-     * @param type PolicyType (just SYNC is supported).\r\n      * @return correlation rules java classes\r\n      */\r\n     @GET\r\n     @Path(\"syncCorrelationRuleClasses\")\r\n-    Set<CorrelationRuleClassTO> getSyncCorrelationRuleClasses();\r\n+    List<CorrelationRuleClassTO> getSyncCorrelationRuleClasses();\r\n }\r"},{"sha":"8fddc5e3792fda5b59dfdb33f7036407f5cdb259","filename":"common/src/main/java/org/apache/syncope/common/services/ReportService.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,32 +20,30 @@\n \r\n import org.apache.syncope.common.types.ReportletConfClasses;\r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n import javax.ws.rs.QueryParam;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.ReportExecTO;\r\n import org.apache.syncope.common.to.ReportTO;\r\n import org.apache.syncope.common.types.ReportExecExportFormat;\r\n \r\n @Path(\"reports\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ReportService {\r\n \r\n-    /**\r\n-     * @return Returns number of existing reports\r\n-     */\r\n-    @GET\r\n-    @Path(\"count\")\r\n-    int count();\r\n-\r\n     /**\r\n      * @param reportTO Report to be created\r\n-     * @return Response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\r\n      */\r\n     @POST\r\n     Response create(ReportTO reportTO);\r\n@@ -95,6 +93,13 @@ Response exportExecutionResult(@PathParam(\"executionId\") Long executionId,\n     @GET\r\n     List<ReportTO> list();\r\n \r\n+    /**\r\n+     * @return Returns number of existing reports\r\n+     */\r\n+    @GET\r\n+    @Path(\"count\")\r\n+    int count();\r\n+\r\n     /**\r\n      * @param page selected page in relation to size\r\n      * @param size Number of items per page\r"},{"sha":"f729bb465a8b8f8a9b318f9990e1eeffd6638284","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,14 +19,16 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import java.util.Set;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.MatrixParam;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n@@ -37,6 +39,8 @@\n import org.apache.syncope.common.types.AttributableType;\r\n \r\n @Path(\"resources\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ResourceService {\r\n \r\n     /**\r\n@@ -49,7 +53,7 @@ public interface ResourceService {\n \r\n     /**\r\n      * @param resourceTO Resource to be created\r\n-     * @return Response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\r\n      */\r\n     @POST\r\n     Response create(ResourceTO resourceTO);\r\n@@ -77,7 +81,7 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n      */\r\n     @GET\r\n     @Path(\"propagationActionsClasses\")\r\n-    Set<PropagationActionClassTO> getPropagationActionsClasses();\r\n+    List<PropagationActionClassTO> getPropagationActionsClasses();\r\n \r\n     /**\r\n      * @return Returns list of all Resources\r\n@@ -110,15 +114,10 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n \r\n     @POST\r\n     @Path(\"bulk\")\r\n-    BulkActionRes bulkAction(BulkAction bulkAction);\r\n+    BulkActionRes bulk(BulkAction bulkAction);\r\n \r\n-    @PUT\r\n-    @Path(\"{resourceName}/users\")\r\n-    BulkActionRes usersBulkAssociationAction(\r\n-            @PathParam(\"resourceName\") String resourceName, BulkAssociationAction bulkAction);\r\n-\r\n-    @PUT\r\n-    @Path(\"{resourceName}/roles\")\r\n-    BulkActionRes rolesBulkAssociationAction(\r\n-            @PathParam(\"resourceName\") String resourceName, BulkAssociationAction bulkAction);\r\n+    @POST\r\n+    @Path(\"{resourceName}/bulkAssociation/{type}\")\r\n+    BulkActionRes bulkAssociation(@PathParam(\"resourceName\") String resourceName,\r\n+            BulkAssociationAction bulkAssociationAction, @PathParam(\"type\") AttributableType type);\r\n }\r"},{"sha":"1ffb81dd33e9512def290cc5c36f680ce1fde61e","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":28,"deletions":39,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,21 +19,27 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n import javax.ws.rs.QueryParam;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n \r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n-import org.apache.syncope.common.to.PropagationTargetsTO;\r\n+import org.apache.syncope.common.to.ResourceNameTO;\r\n import org.apache.syncope.common.to.RoleTO;\r\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n \r\n @Path(\"roles\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface RoleService {\r\n \r\n     /**\r\n@@ -53,19 +59,20 @@ public interface RoleService {\n \r\n     /**\r\n      * @param roleTO Role to be created\r\n-     * @return Response containing URI location for created role, as well as the role itself enriched with propagation\r\n-     * status information\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role as well as the role itself\r\n+     * enriched with propagation status information, as <tt>Entity</tt>\r\n      */\r\n     @POST\r\n     Response create(RoleTO roleTO);\r\n \r\n     /**\r\n      * @param roleId ID of role to be deleted\r\n-     * @return Returns deleted role, enriched with propagation status information\r\n+     * @return <tt>Response</tt> object featuring the deleted role enriched with propagation status information,\r\n+     * as <tt>Entity</tt>\r\n      */\r\n     @DELETE\r\n     @Path(\"{roleId}\")\r\n-    RoleTO delete(@PathParam(\"roleId\") Long roleId);\r\n+    Response delete(@PathParam(\"roleId\") Long roleId);\r\n \r\n     /**\r\n      * @return Returns list of all knwon roles\r\n@@ -100,7 +107,7 @@ public interface RoleService {\n     /**\r\n      * @param searchCondition Filter condition for role list\r\n      * @return Returns list of roles with matching filter conditions\r\n-     * @throws InvalidSearchConditionException\r\n+     * @throws InvalidSearchConditionException if given search condition is not valid\r\n      */\r\n     @POST\r\n     @Path(\"search\")\r\n@@ -111,7 +118,7 @@ public interface RoleService {\n      * @param page Page of roles in relation to size parameter\r\n      * @param size Number of roles to be displayed per page\r\n      * @return Returns paginated list of roles with matching filter conditions\r\n-     * @throws InvalidSearchConditionException\r\n+     * @throws InvalidSearchConditionException if given search condition is not valid\r\n      */\r\n     @POST\r\n     @Path(\"search\")\r\n@@ -121,7 +128,7 @@ List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     /**\r\n      * @param searchCondition Filter condition for role list\r\n      * @return Returns number of roles matching provided filter conditions\r\n-     * @throws InvalidSearchConditionException\r\n+     * @throws InvalidSearchConditionException if given search condition is not valid\r\n      */\r\n     @POST\r\n     @Path(\"search/count\")\r\n@@ -136,47 +143,29 @@ List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n      */\r\n     @GET\r\n     @Path(\"{roleId}/own\")\r\n-    RoleTO selfRead(@PathParam(\"roleId\") Long roleId);\r\n+    RoleTO readSelf(@PathParam(\"roleId\") Long roleId);\r\n \r\n     /**\r\n      * @param roleId ID of role to be updated\r\n      * @param roleMod Role object containing list of changes to be applied for selected role\r\n-     * @return Returns updated role, merged from existing role and provided roleMod\r\n+     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information,\r\n+     * as <tt>Entity</tt>\r\n      */\r\n     @POST\r\n     @Path(\"{roleId}\")\r\n-    RoleTO update(@PathParam(\"roleId\") Long roleId, RoleMod roleMod);\r\n+    Response update(@PathParam(\"roleId\") Long roleId, RoleMod roleMod);\r\n \r\n     /**\r\n-     * Unlinks role and the given external resources specified by <tt>propagationTargetsTO</tt> parameter.\r\n+     * Executes resource-related operations on given role.\r\n      *\r\n      * @param roleId role id.\r\n-     * @param propagationTargetsTO resource names.\r\n-     * @return updated role.\r\n+     * @param type resource association action type\r\n+     * @param resourceNames external resources to be used for propagation-related operations\r\n+     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information,\r\n+     * as <tt>Entity</tt>\r\n      */\r\n     @POST\r\n-    @Path(\"{roleId}/unlink\")\r\n-    RoleTO unlink(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n-\r\n-    /**\r\n-     * Unassigns resources to the given role (performs unlink + de-provision).\r\n-     *\r\n-     * @param roleId role id.\r\n-     * @param propagationTargetsTO resources to be unassigned.\r\n-     * @return updated role.\r\n-     */\r\n-    @POST\r\n-    @Path(\"{roleId}/unassign\")\r\n-    RoleTO unassign(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n-\r\n-    /**\r\n-     * De-provision role from the given resources without unlinking.\r\n-     *\r\n-     * @param roleId role id of the role to be de-provisioned.\r\n-     * @param propagationTargetsTO resource names.\r\n-     * @return updated role.\r\n-     */\r\n-    @POST\r\n-    @Path(\"{roleId}/deprovision\")\r\n-    RoleTO deprovision(@PathParam(\"roleId\") Long roleId, PropagationTargetsTO propagationTargetsTO);\r\n-}\n\\ No newline at end of file\n+    @Path(\"{roleId}/associate/{type}\")\r\n+    Response associate(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceAssociationActionType type,\r\n+            List<ResourceNameTO> resourceNames);\r\n+}\r"},{"sha":"530835b8b32175c54debd36d9179635ca8ec30bc","filename":"common/src/main/java/org/apache/syncope/common/services/SchemaService.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,32 +19,39 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.AbstractSchemaTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.SchemaType;\r\n \r\n @Path(\"schemas/{kind}/{type}\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface SchemaService {\r\n \r\n     /**\r\n+     * @param <T> actual SchemaTO\r\n      * @param attrType Kind for schema to be created\r\n      * @param schemaType Type for schema to be created\r\n      * @param schemaTO Schema to be created\r\n-     * @return Response containing URI location for created resource.\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\r\n      */\r\n     @POST\r\n     <T extends AbstractSchemaTO> Response create(@PathParam(\"kind\") AttributableType attrType,\r\n             @PathParam(\"type\") SchemaType schemaType, T schemaTO);\r\n \r\n     /**\r\n      * @param attrType Kind for schema to be deleted\r\n+     * @param schemaType Type for schema to be deleted\r\n      * @param schemaName Name of schema to be deleted\r\n      */\r\n     @DELETE\r\n@@ -53,6 +60,7 @@ void delete(@PathParam(\"kind\") AttributableType attrType, @PathParam(\"type\") Sch\n             @PathParam(\"name\") String schemaName);\r\n \r\n     /**\r\n+     * @param <T> actual SchemaTO\r\n      * @param attrType Kind for schemas to be listed\r\n      * @param schemaType Type for schemas to be listed\r\n      * @return List of schemas with matching kind and type\r\n@@ -62,6 +70,7 @@ <T extends AbstractSchemaTO> List<T> list(\n             @PathParam(\"kind\") AttributableType attrType, @PathParam(\"type\") SchemaType schemaType);\r\n \r\n     /**\r\n+     * @param <T> actual SchemaTO\r\n      * @param attrType Kind for schemas to be read\r\n      * @param schemaType Type for schemas to be read\r\n      * @param schemaName Name of schema to be read\r\n@@ -73,6 +82,7 @@ <T extends AbstractSchemaTO> T read(@PathParam(\"kind\") AttributableType attrType\n             @PathParam(\"type\") SchemaType schemaType, @PathParam(\"name\") String schemaName);\r\n \r\n     /**\r\n+     * @param <T> actual SchemaTO\r\n      * @param attrType Kind for schemas to be updated\r\n      * @param schemaType Type for schemas to be updated\r\n      * @param schemaName Name of schema to be updated\r"},{"sha":"552142ea05e9547e2fcef91c0bc6dd0d15cfae7a","filename":"common/src/main/java/org/apache/syncope/common/services/TaskService.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,16 +19,19 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import java.util.Set;\r\n+import javax.ws.rs.Consumes;\r\n \r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n+import javax.ws.rs.MatrixParam;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n import javax.ws.rs.QueryParam;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n@@ -42,20 +45,22 @@\n import org.apache.syncope.common.types.TaskType;\r\n \r\n @Path(\"tasks\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface TaskService {\r\n \r\n     /**\r\n      * @param taskType filter for task count\r\n      * @return Returns number of tasks with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/count\")\r\n-    int count(@PathParam(\"type\") TaskType taskType);\r\n+    @Path(\"count\")\r\n+    int count(@MatrixParam(\"type\") TaskType taskType);\r\n \r\n     /**\r\n      * @param taskTO Task to be created\r\n      * @param <T> type of taskTO\r\n-     * @return Response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\r\n      */\r\n     @POST\r\n     <T extends SchedTaskTO> Response create(T taskTO);\r\n@@ -88,23 +93,22 @@ public interface TaskService {\n      */\r\n     @GET\r\n     @Path(\"jobClasses\")\r\n-    Set<JobClassTO> getJobClasses();\r\n+    List<JobClassTO> getJobClasses();\r\n \r\n     /**\r\n      * @return Returns list of SyncActionClasses\r\n      */\r\n     @GET\r\n     @Path(\"syncActionsClasses\")\r\n-    Set<SyncActionClassTO> getSyncActionsClasses();\r\n+    List<SyncActionClassTO> getSyncActionsClasses();\r\n \r\n     /**\r\n      * @param taskType Type of tasks to be listed\r\n      * @param <T> type of taskTO\r\n      * @return Returns list of tasks with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/list\")\r\n-    <T extends AbstractTaskTO> List<T> list(@PathParam(\"type\") TaskType taskType);\r\n+    <T extends AbstractTaskTO> List<T> list(@MatrixParam(\"type\") TaskType taskType);\r\n \r\n     /**\r\n      * @param taskType Type of tasks to be listed\r\n@@ -114,8 +118,7 @@ public interface TaskService {\n      * @return Returns paginated list of task with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/list\")\r\n-    <T extends AbstractTaskTO> List<T> list(@PathParam(\"type\") TaskType taskType,\r\n+    <T extends AbstractTaskTO> List<T> list(@MatrixParam(\"type\") TaskType taskType,\r\n             @QueryParam(\"page\") int page, @QueryParam(\"size\") @DefaultValue(\"25\") int size);\r\n \r\n     /**\r\n@@ -153,5 +156,5 @@ <T extends AbstractTaskTO> List<T> list(@PathParam(\"type\") TaskType taskType,\n \r\n     @POST\r\n     @Path(\"bulk\")\r\n-    BulkActionRes bulkAction(BulkAction bulkAction);\r\n+    BulkActionRes bulk(BulkAction bulkAction);\r\n }\r"},{"sha":"4e5720f23dccd601979b795c305f8ff2849f3394","filename":"common/src/main/java/org/apache/syncope/common/services/UserRequestService.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,45 +19,39 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+import javax.ws.rs.Consumes;\r\n \r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n+import javax.ws.rs.MatrixParam;\r\n import javax.ws.rs.OPTIONS;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.mod.UserMod;\r\n \r\n import org.apache.syncope.common.to.UserRequestTO;\r\n import org.apache.syncope.common.to.UserTO;\r\n \r\n-@Path(\"requests/user\")\r\n+@Path(\"userrequests\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface UserRequestService {\r\n \r\n-    public static final String SYNCOPE_CREATE_ALLOWED = \"Syncope-Create-Allowed\";\r\n-\r\n     /**\r\n-     * This method is similar to {@link #isCreateAllowed()}, but follows RESTful best practices.\r\n-     *\r\n-     * @return Response contains special syncope HTTP header (SYNCOPE_CREATE_ALLOWED), indicating if user is allowed to\r\n+     * @return Response contains special syncope HTTP header indicating if user is allowed to\r\n      * make a create UserRequest\r\n+     * @see org.apache.syncope.common.SyncopeConstants.REST_USER_REQUEST_CREATE_ALLOWED\r\n      */\r\n     @OPTIONS\r\n     Response getOptions();\r\n \r\n-    /**\r\n-     * This method is similar to {@link #getOptions()}, but without following RESTful best practices.\r\n-     *\r\n-     * @return Returns true, if user is allowed to make user create requests\r\n-     */\r\n-    @GET\r\n-    @Path(\"create/allowed\")\r\n-    boolean isCreateAllowed();\r\n-\r\n     /**\r\n      * @param userRequestTO Request for user to be created\r\n-     * @return Response containing URI location for created resource\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user request\r\n      */\r\n     @POST\r\n     Response create(UserRequestTO userRequestTO);\r\n@@ -66,15 +60,14 @@ public interface UserRequestService {\n      * @return Returns list of all UserRequests.\r\n      */\r\n     @GET\r\n-    @Path(\"executed\")\r\n     List<UserRequestTO> list();\r\n \r\n     /**\r\n+     * @param username user name\r\n      * @return Returns list of all UserRequests of the given user.\r\n      */\r\n     @GET\r\n-    @Path(\"filter/{username}\")\r\n-    List<UserRequestTO> listByUsername(@PathParam(\"username\") String username);\r\n+    List<UserRequestTO> listByUsername(@MatrixParam(\"username\") String username);\r\n \r\n     /**\r\n      * @param requestId ID of UserRequest to be read\r\n@@ -96,14 +89,14 @@ public interface UserRequestService {\n     UserRequestTO claim(@PathParam(\"requestId\") Long requestId);\r\n \r\n     @POST\r\n-    @Path(\"create/execute/{requestId}\")\r\n+    @Path(\"execute/create/{requestId}\")\r\n     UserTO executeCreate(@PathParam(\"requestId\") Long requestId, UserTO reviewed);\r\n \r\n     @POST\r\n-    @Path(\"update/execute/{requestId}\")\r\n+    @Path(\"execute/update/{requestId}\")\r\n     UserTO executeUpdate(@PathParam(\"requestId\") Long requestId, UserMod changes);\r\n \r\n-    @DELETE\r\n-    @Path(\"delete/execute/{requestId}\")\r\n+    @POST\r\n+    @Path(\"execute/delete/{requestId}\")\r\n     UserTO executeDelete(@PathParam(\"requestId\") Long requestId);\r\n }\r"},{"sha":"d79322c091e483b7ca4d690a48d280bcfcc4733a","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":98,"deletions":325,"changes":423,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -23,8 +23,8 @@\n import javax.ws.rs.DELETE;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n+import javax.ws.rs.OPTIONS;\n import javax.ws.rs.POST;\n-import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n@@ -34,19 +34,28 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n-import org.apache.syncope.common.to.PropagationTargetsTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n \n @Path(\"users\")\n @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n public interface UserService {\n \n+    @OPTIONS\n+    @Path(\"{userId}/username\")\n+    Response getUsername(@PathParam(\"userId\") Long userId);\n+\n+    @OPTIONS\n+    @Path(\"{username}/userId\")\n+    Response getUserId(@PathParam(\"username\") String username);\n+\n     /**\n      * Reads the user matching the provided userId.\n      *\n@@ -62,31 +71,17 @@ public interface UserService {\n     UserTO read(@Description(\"id of user to be read\") @PathParam(\"userId\") Long userId);\n \n     /**\n-     * Returns a list of all existing users.\n-     *\n-     * @return A list of all existing users.\n-     */\n-    @GET\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Returns a list of all existing users\"),\n-        @Description(target = DocTarget.RETURN, value = \"A list of all existing users\")\n-    })\n-    List<UserTO> list();\n-\n-    /**\n-     * Returns a paged list of all existing users.\n+     * Reads data about the authenticated user.\n      *\n-     * @param page result page number\n-     * @param size number of entries per page\n-     * @return A list of all existing users matching page/size conditions.\n+     * @return Data about the authenticated user\n      */\n     @GET\n+    @Path(\"self\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Returns a paged list of all existing users\"),\n-        @Description(target = DocTarget.RETURN, value = \"A list of all existing users matching page/size conditions\")\n+        @Description(target = DocTarget.METHOD, value = \"Reads data about the authenticated user\"),\n+        @Description(target = DocTarget.RETURN, value = \"Data about the authenticated user\")\n     })\n-    List<UserTO> list(@Description(\"result page number\") @QueryParam(\"page\") int page,\n-            @Description(\"number of entries per page\") @QueryParam(\"size\") @DefaultValue(\"25\") int size);\n+    UserTO readSelf();\n \n     /**\n      * Returns the number of existing users.\n@@ -102,30 +97,49 @@ List<UserTO> list(@Description(\"result page number\") @QueryParam(\"page\") int pag\n     int count();\n \n     /**\n-     * Reads the user matching the provided username.\n+     * Returns a list of all existing users.\n      *\n-     * @param username username of user to be read\n-     * @return User matching the provided username\n+     * @return A list of all existing users.\n      */\n     @GET\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Reads the user matching the provided username\"),\n-        @Description(target = DocTarget.RETURN, value = \"User matching the provided username\")\n+        @Description(target = DocTarget.METHOD, value = \"Returns a list of all existing users\"),\n+        @Description(target = DocTarget.RETURN, value = \"A list of all existing users\")\n     })\n-    UserTO read(@Description(\"username of user to be read\") @QueryParam(\"username\") String username);\n+    List<UserTO> list();\n \n     /**\n-     * Reads data about the authenticated user.\n+     * Returns a paged list of all existing users.\n      *\n-     * @return Data about the authenticated user\n+     * @param page result page number\n+     * @param size number of entries per page\n+     * @return A list of all existing users matching page/size conditions.\n      */\n     @GET\n-    @Path(\"self\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Reads the user matching the provided username\"),\n-        @Description(target = DocTarget.RETURN, value = \"Data about the authenticated user\")\n+        @Description(target = DocTarget.METHOD, value = \"Returns a paged list of all existing users\"),\n+        @Description(target = DocTarget.RETURN, value = \"A list of all existing users matching page/size conditions\")\n     })\n-    UserTO readSelf();\n+    List<UserTO> list(@Description(\"result page number\") @QueryParam(\"page\") int page,\n+            @Description(\"number of entries per page\") @QueryParam(\"size\") @DefaultValue(\"25\") int size);\n+\n+    /**\n+     * Returns the number of users matching the provided search condition.\n+     *\n+     * @param searchCondition search condition\n+     * @return Number of users matching the provided search condition\n+     * @throws InvalidSearchConditionException if provided search condition is not valid\n+     */\n+    @POST\n+    @Path(\"search/count\")\n+    @Descriptions({\n+        @Description(target = DocTarget.METHOD,\n+                value = \"Returns the number of users matching the provided search condition\"),\n+        @Description(target = DocTarget.RETURN,\n+                value = \"Number of users matching the provided search condition\")\n+    })\n+    int searchCount(@Description(\"search condition\") NodeCond searchCondition)\n+            throws InvalidSearchConditionException;\n \n     /**\n      * Returns the list of users matching the given search condition.\n@@ -166,29 +180,12 @@ List<UserTO> search(@Description(\"search condition\") NodeCond searchCondition,\n             @Description(\"number of entries per page\") @QueryParam(\"size\") @DefaultValue(\"25\") int size)\n             throws InvalidSearchConditionException;\n \n-    /**\n-     * Returns the number of users matching the provided search condition.\n-     *\n-     * @param searchCondition search condition\n-     * @return Number of users matching the provided search condition\n-     * @throws InvalidSearchConditionException if provided search condition is not valid\n-     */\n-    @POST\n-    @Path(\"search/count\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns the number of users matching the provided search condition\"),\n-        @Description(target = DocTarget.RETURN,\n-                value = \"Number of users matching the provided search condition\")\n-    })\n-    int searchCount(@Description(\"search condition\") NodeCond searchCondition)\n-            throws InvalidSearchConditionException;\n-\n     /**\n      * Creates a new user.\n      *\n      * @param userTO user to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the user itself\n+     * enriched with propagation status information, as <tt>Entity</tt>\n      */\n     @POST\n     @Descriptions({\n@@ -205,310 +202,86 @@ int searchCount(@Description(\"search condition\") NodeCond searchCondition)\n      *\n      * @param userId id of user to be updated\n      * @param userMod modification to be applied to user matching the provided userId\n-     * @return Updated user.\n+     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n+     * as <tt>Entity</tt>\n      */\n     @POST\n     @Path(\"{userId}\")\n     @Descriptions({\n         @Description(target = DocTarget.METHOD, value = \"Updates user matching the provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"Updated user\")\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n+                + \"with propagation status information, as <tt>Entity</tt>\")\n     })\n-    UserTO update(@Description(\"id of user to be updated\") @PathParam(\"userId\") Long userId,\n+    Response update(@Description(\"id of user to be updated\") @PathParam(\"userId\") Long userId,\n             @Description(\"modification to be applied to user matching the provided userId\") UserMod userMod);\n \n     /**\n-     * Deletes user matching provided userId.\n+     * Performs a status update on user matching provided userId.\n      *\n-     * @param userId id of user to be deleted\n-     * @return Deleted user\n-     */\n-    @DELETE\n-    @Path(\"{userId}\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Deletes user matching provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"Deleted user\")\n-    })\n-    UserTO delete(@Description(\"id of user to be deleted\") @PathParam(\"userId\") Long userId);\n-\n-    /**\n-     * Executes the provided bulk action.\n-     *\n-     * @param bulkAction list of &lt;username, action&gt; pairs\n-     * @return Bulk action result.\n+     * @param userId id of user to be subjected to status update\n+     * @param statusMod status update details\n+     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n+     * as <tt>Entity</tt>\n      */\n     @POST\n-    @Path(\"bulk\")\n+    @Path(\"{userId}/status\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Executes the provided bulk action\"),\n-        @Description(target = DocTarget.RETURN, value = \"Bulk action result\")\n+        @Description(target = DocTarget.METHOD, value = \"Performs a status update on user matching provided userId\"),\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n+                + \"with propagation status information, as <tt>Entity</tt>\")\n     })\n-    BulkActionRes bulkAction(@Description(\"list of &lt;username, action&gt; pairs\") BulkAction bulkAction);\n+    Response status(@Description(\"id of user to be subjected to status update\") @PathParam(\"userId\") Long userId,\n+            @Description(\"status update details\") StatusMod statusMod);\n \n     /**\n-     * Activates user matching provided userId if provided token is valid.\n-     *\n-     * @param userId id of user to be activated\n-     * @param token validity token\n-     * @return Activated user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/activate\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Activates user matching provided userId if provided token is valid\"),\n-        @Description(target = DocTarget.RETURN, value = \"Activated user\")\n-    })\n-    UserTO activate(@Description(\"id of user to be activated\") @PathParam(\"userId\") Long userId,\n-            @Description(\"validity token\") @QueryParam(\"token\") String token);\n-\n-    /**\n-     * Activates user matching provided userId if provided token is valid and propagates this update\n-     * only to resources contained in the propagation request.\n-     *\n-     * @param userId id of user to be activated\n-     * @param token validity token\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Activated user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/activate/propagation\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Activates user matching provided userId if provided token is valid and propagates \"\n-                + \"this update only to resources contained in the propagation request.\"),\n-        @Description(target = DocTarget.RETURN, value = \"Activated user\")\n-    })\n-    UserTO activate(@Description(\"id of user to be activated\") @PathParam(\"userId\") Long userId,\n-            @Description(\"validity token\") @QueryParam(\"token\") String token,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Activates user matching provided username if provided token is valid.\n-     *\n-     * @param username username of user to be activated\n-     * @param token validity token\n-     * @return Activated user\n-     */\n-    @POST\n-    @Path(\"activateByUsername/{username}\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Activates user matching provided username if provided token is valid\"),\n-        @Description(target = DocTarget.RETURN, value = \"Activated user\")\n-    })\n-    UserTO activateByUsername(@Description(\"username of user to be activated\") @PathParam(\"username\") String username,\n-            @Description(\"validity token\") @QueryParam(\"token\") String token);\n-\n-    /**\n-     * Activates user matching provided username if provided token is valid and propagates this update\n-     * only to resources contained in the propagation request.\n-     *\n-     * @param username username of user to be activated\n-     * @param token validity token\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Activated user\n-     */\n-    @POST\n-    @Path(\"activateByUsername/{username}/propagation\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Activates user matching provided username if provided token is valid and propagates \"\n-                + \"this update only to resources contained in the propagation request.\"),\n-        @Description(target = DocTarget.RETURN, value = \"Activated user\")\n-    })\n-    UserTO activateByUsername(@Description(\"username of user to be activated\") @PathParam(\"username\") String username,\n-            @Description(\"validity token\") @QueryParam(\"token\") String token,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Suspends user matching provided userId.\n-     *\n-     * @param userId id of user to be suspended\n-     * @return Suspended user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/suspend\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Suspends user matching provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"Suspended user\")\n-    })\n-    UserTO suspend(@Description(\"id of user to be suspended\") @PathParam(\"userId\") Long userId);\n-\n-    /**\n-     * Suspend user matching provided userId and propagates this update only to resources contained in the\n-     * propagation request.\n-     *\n-     * @param userId id of user to be activated\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Suspended user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/suspend/propagation\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Suspend user matching provided userId and propagates this \"\n-                + \"update only to resources contained in the propagation request\"),\n-        @Description(target = DocTarget.RETURN, value = \"Suspended user\")\n-    })\n-    UserTO suspend(@Description(\"id of user to be suspended\") @PathParam(\"userId\") Long userId,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Suspends user matching provided username.\n-     *\n-     * @param username username of user to be suspended\n-     * @return Suspended user\n-     */\n-    @POST\n-    @Path(\"suspendByUsername/{username}\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Suspends user matching provided username\"),\n-        @Description(target = DocTarget.RETURN, value = \"Suspended user\")\n-    })\n-    UserTO suspendByUsername(@Description(\"username of user to be suspended\") @PathParam(\"username\") String username);\n-\n-    /**\n-     * Suspend user matching provided username and propagates this update only to resources contained in the\n-     * propagation request.\n-     *\n-     * @param username username of user to be activated\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Suspended user\n-     */\n-    @POST\n-    @Path(\"suspendByUsername/{username}/propagation\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Suspend user matching provided username and propagates this \"\n-                + \"update only to resources contained in the propagation request\"),\n-        @Description(target = DocTarget.RETURN, value = \"Suspended user\")\n-    })\n-    UserTO suspendByUsername(@Description(\"username of user to be suspended\") @PathParam(\"username\") String username,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Reactivates user matching provided userId.\n-     *\n-     * @param userId id of user to be reactivated\n-     * @return Reactivated user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/reactivate\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Reactivates user matching provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"Reactivated user\")\n-    })\n-    UserTO reactivate(@Description(\"id of user to be reactivated\") @PathParam(\"userId\") Long userId);\n-\n-    /**\n-     * Reactivates user matching provided userId and propagates this update only to resources contained in the\n-     * propagation request.\n-     *\n-     * @param userId id of user to be activated\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Reactivated user\n-     */\n-    @POST\n-    @Path(\"{userId}/status/reactivate/propagation\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Reactivates user matching provided userId and propagates this update only to resources \"\n-                + \"contained in the propagation request\"),\n-        @Description(target = DocTarget.RETURN, value = \"Reactivated user\")\n-    })\n-    UserTO reactivate(@Description(\"id of user to be reactivated\") @PathParam(\"userId\") Long userId,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Reactivates user matching provided username.\n+     * Deletes user matching provided userId.\n      *\n-     * @param username username of user to be reactivated\n-     * @return Reactivated user\n+     * @param userId id of user to be deleted\n+     * @return <tt>Response</tt> object featuring the deleted user enriched with propagation status information,\n+     * as <tt>Entity</tt>\n      */\n-    @POST\n-    @Path(\"reactivateByUsername/{username}\")\n+    @DELETE\n+    @Path(\"{userId}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Reactivates user matching provided username\"),\n-        @Description(target = DocTarget.RETURN, value = \"Reactivated user\")\n+        @Description(target = DocTarget.METHOD, value = \"Deletes user matching provided userId\"),\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the deleted user enriched \"\n+                + \"with propagation status information, as <tt>Entity</tt>\")\n     })\n-    UserTO reactivateByUsername(\n-            @Description(\"username of user to be reactivated\") @PathParam(\"username\") String username);\n+    Response delete(@Description(\"id of user to be deleted\") @PathParam(\"userId\") Long userId);\n \n     /**\n-     * Reactivates user matching provided username and propagates this update only to resources contained in the\n-     * propagation request.\n+     * Executes resource-related operations on given user.\n      *\n-     * @param username username of user to be activated\n-     * @param propagationRequestTO propagation request on internal storage or on 0+ external resources\n-     * @return Reactivated user\n+     * @param userId user id.\n+     * @param type resource association action type\n+     * @param resourceNames external resources to be used for propagation-related operations\n+     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n+     * as <tt>Entity</tt>\n      */\n     @POST\n-    @Path(\"reactivateByUsername/{username}/propagation\")\n+    @Path(\"{userId}/associate/{type}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Reactivates user matching provided username and propagates this update only to resources \"\n-                + \"contained in the propagation request\"),\n-        @Description(target = DocTarget.RETURN, value = \"Reactivated user\")\n+        @Description(target = DocTarget.METHOD, value = \"Executes resource-related operations on given user\"),\n+        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n+                + \"with propagation status information, as <tt>Entity</tt>\")\n     })\n-    UserTO reactivateByUsername(\n-            @Description(\"username of user to be reactivated\") @PathParam(\"username\") String username,\n-            @Description(\"propagation request on internal storage or on 0+ external resources\"\n-            ) PropagationRequestTO propagationRequestTO);\n-\n-    /**\n-     * Unlinks user from the given external resources.\n-     *\n-     * @param userId id of user to be unlinked\n-     * @param propagationTargetsTO external resources to be used for propagation-related operations\n-     * @return Updated user\n-     */\n-    @PUT\n-    @Path(\"{userId}/unlink\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Unlinks user from the given external resources\"),\n-        @Description(target = DocTarget.RETURN, value = \"Updated user\")\n-    })\n-    UserTO unlink(@Description(\"id of user to be unlinked\") @PathParam(\"userId\") Long userId,\n+    Response associate(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n+            @Description(\"resource association action type\") @PathParam(\"type\") ResourceAssociationActionType type,\n             @Description(\"external resources to be used for propagation-related operations\"\n-            ) PropagationTargetsTO propagationTargetsTO);\n+            ) List<ResourceNameTO> resourceNames);\n \n     /**\n-     * De-provision user from the given external resources without unlinking.\n-     *\n-     * @param userId id of user to be de-provisioned\n-     * @param propagationTargetsTO external resources to be used for propagation-related operations\n-     * @return Updated user\n-     */\n-    @PUT\n-    @Path(\"{userId}/deprovision\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"De-provision user from the given external resources without unlinking\"),\n-        @Description(target = DocTarget.RETURN, value = \"Updated user\")\n-    })\n-    UserTO deprovision(@Description(\"id of user to be de-provisioned\") @PathParam(\"userId\") Long userId,\n-            @Description(\"De-provision user from the given external resources without unlinking\"\n-            ) PropagationTargetsTO propagationTargetsTO);\n-\n-    /**\n-     * Unassigns (unlink + de-provision) user from the given external resources.\n+     * Executes the provided bulk action.\n      *\n-     * @param userId id of user to be unassigned\n-     * @param propagationTargetsTO external resources to be used for propagation-related operations\n-     * @return Updated user\n+     * @param bulkAction list of &lt;username, action&gt; pairs\n+     * @return Bulk action result.\n      */\n-    @PUT\n-    @Path(\"{userId}/unassign\")\n+    @POST\n+    @Path(\"bulk\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Unassigns (unlink + de-provision) user from the given external resources\"),\n-        @Description(target = DocTarget.RETURN, value = \"Updated user\")\n+        @Description(target = DocTarget.METHOD, value = \"Executes the provided bulk action\"),\n+        @Description(target = DocTarget.RETURN, value = \"Bulk action result\")\n     })\n-    UserTO unassign(@Description(\"id of user to be unassigned\") @PathParam(\"userId\") Long userId,\n-            @Description(\"De-provision user from the given external resources without unlinking\"\n-            ) PropagationTargetsTO propagationTargetsTO);\n+    BulkActionRes bulk(@Description(\"list of &lt;username, action&gt; pairs\") BulkAction bulkAction);\n \n }"},{"sha":"bbc00d0c3a4bbde619d9ae64adb8268df86fa579","filename":"common/src/main/java/org/apache/syncope/common/services/UserWorkflowService.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,16 +19,21 @@\n package org.apache.syncope.common.services;\n \n import java.util.List;\n+import javax.ws.rs.Consumes;\n \n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n \n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n \n @Path(\"userworkflow\")\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n public interface UserWorkflowService {\n \n     @POST\n@@ -53,5 +58,5 @@ public interface UserWorkflowService {\n \n     @POST\n     @Path(\"tasks/{taskId}/execute\")\n-    UserTO executeWorkflow(@PathParam(\"taskId\") String taskId, UserTO userTO);\n+    UserTO executeTask(@PathParam(\"taskId\") String taskId, UserTO userTO);\n }"},{"sha":"0f4d8a18d33d391b3b8fc2e343f74c5ee37a9e50","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -18,16 +18,21 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n+import javax.ws.rs.Consumes;\r\n import org.apache.syncope.common.types.WorkflowTasks;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.Produces;\r\n+import javax.ws.rs.core.MediaType;\r\n \r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n \r\n @Path(\"workflows/{kind}\")\r\n+@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface WorkflowService {\r\n \r\n     /**\r"},{"sha":"e11acca100a6e62ca6f737d39a17745c8e8cbc95","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAssociationAction.java","status":"modified","additions":4,"deletions":14,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,39 +24,29 @@\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.AbstractBaseBean;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n \n @XmlRootElement(name = \"bulkAssociationAction\")\n @XmlType\n public class BulkAssociationAction extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 1395353278878758961L;\n \n-    @XmlEnum\n-    @XmlType(name = \"bulkAssociationActionType\")\n-    public enum Type {\n-\n-        UNLINK,\n-        UNASSIGN,\n-        DEPROVISION\n-\n-    }\n-\n-    private Type operation;\n+    private ResourceAssociationActionType operation;\n \n     /**\n      * Serialized identifiers.\n      */\n     private final List<Long> targets = new ArrayList<Long>();\n \n-    public Type getOperation() {\n+    public ResourceAssociationActionType getOperation() {\n         return operation;\n     }\n \n-    public void setOperation(final Type operation) {\n+    public void setOperation(final ResourceAssociationActionType operation) {\n         this.operation = operation;\n     }\n "},{"sha":"68c688b55fc9c4e4213de04fcfc9d7a0bf0f4d4b","filename":"common/src/main/java/org/apache/syncope/common/to/CorrelationRuleClassTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FCorrelationRuleClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FCorrelationRuleClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FCorrelationRuleClassTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,33 +20,12 @@\n \r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"correlationRuleClass\")\r\n @XmlType\r\n-public class CorrelationRuleClassTO extends AbstractBaseBean {\r\n+public class CorrelationRuleClassTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = -6715106427060816725L;\r\n \r\n-    private String name;\r\n-\r\n-    public static CorrelationRuleClassTO instance(final String name) {\r\n-        CorrelationRuleClassTO instance = new CorrelationRuleClassTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"df32b0668e3016be5e34fe221a312073e0c5e8c6","filename":"common/src/main/java/org/apache/syncope/common/to/EntitlementTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEntitlementTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEntitlementTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEntitlementTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,12 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"entitlement\")\r\n @XmlType\r\n-public class EntitlementTO extends AbstractBaseBean {\r\n+public class EntitlementTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = 7133614577172038452L;\r\n \r\n-    private String name;\r\n-\r\n-    public static EntitlementTO instance(final String name) {\r\n-        EntitlementTO instance = new EntitlementTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"71885c85b1c0dbc1b1aba5d37fc081343b6ec05d","filename":"common/src/main/java/org/apache/syncope/common/to/JobClassTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FJobClassTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,12 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"jobClass\")\r\n @XmlType\r\n-public class JobClassTO extends AbstractBaseBean {\r\n+public class JobClassTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = -1953799905627918822L;\r\n \r\n-    private String name;\r\n-\r\n-    public static JobClassTO instance(final String name) {\r\n-        JobClassTO instance = new JobClassTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"3bc39581b6016464ae412404d769597ff18f3085","filename":"common/src/main/java/org/apache/syncope/common/to/MailTemplateTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMailTemplateTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,12 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"mailTemplate\")\r\n @XmlType\r\n-public class MailTemplateTO extends AbstractBaseBean {\r\n+public class MailTemplateTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = 7232619557172031478L;\r\n \r\n-    private String name;\r\n-\r\n-    public static MailTemplateTO instance(final String name) {\r\n-        MailTemplateTO templateTO = new MailTemplateTO();\r\n-        templateTO.setName(name);\r\n-        return templateTO;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"2eccac1cfe4b15ca9b31e08ad7aca582fd3d4f82","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationActionClassTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationActionClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationActionClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationActionClassTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,12 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"propagationActionClass\")\r\n @XmlType\r\n-public class PropagationActionClassTO extends AbstractBaseBean {\r\n+public class PropagationActionClassTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = 2187654394121198308L;\r\n \r\n-    private String name;\r\n-\r\n-    public static PropagationActionClassTO instance(final String name) {\r\n-        PropagationActionClassTO instance = new PropagationActionClassTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"edac3297ee11866001e810246bc3054b0b1de34a","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationTargetsTO.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationTargetsTO.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -1,56 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.to;\n-\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.HashSet;\n-import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.AbstractBaseBean;\n-\n-/**\n- * External resources to be used for propagation-related operations.\n- */\n-@XmlRootElement(name = \"propagationTargets\")\n-@XmlType\n-public class PropagationTargetsTO extends AbstractBaseBean {\n-\n-    private static final long serialVersionUID = -2410740018092105778L;\n-\n-    /**\n-     * External resources propagation is requested to.\n-     */\n-    private final Set<String> resources;\n-\n-    public PropagationTargetsTO() {\n-        super();\n-\n-        this.resources = new HashSet<String>();\n-    }\n-\n-    @XmlElementWrapper(name = \"resources\")\n-    @XmlElement(name = \"resource\")\n-    @JsonProperty(\"resources\")\n-    public Set<String> getResources() {\n-        return resources;\n-    }\n-}"},{"sha":"5858818ace1897a4b625d73f51b5a1118d824692","filename":"common/src/main/java/org/apache/syncope/common/to/ResourceNameTO.java","status":"renamed","additions":4,"deletions":22,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceNameTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceNameTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceNameTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,30 +20,12 @@\n \n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractWrappable;\n \n-/**\n- * Propagation request on internal storage or on 0+ external resources.\n- */\n-@XmlRootElement(name = \"propagationRequest\")\n+@XmlRootElement(name = \"resourceName\")\n @XmlType\n-public class PropagationRequestTO extends PropagationTargetsTO {\n-\n-    private static final long serialVersionUID = 7601716025754543004L;\n-\n-    /**\n-     * Whether update should be performed on internal storage.\n-     */\n-    private boolean onSyncope;\n-\n-    public PropagationRequestTO() {\n-        super();\n-    }\n+public class ResourceNameTO extends AbstractWrappable {\n \n-    public boolean isOnSyncope() {\n-        return onSyncope;\n-    }\n+    private static final long serialVersionUID = -175720097924079573L;\n \n-    public void setOnSyncope(final boolean onSyncope) {\n-        this.onSyncope = onSyncope;\n-    }\n }","previous_filename":"common/src/main/java/org/apache/syncope/common/to/PropagationRequestTO.java"},{"sha":"89bb3f62f0b9fa52c3628a4cf172b8c4b5f538d6","filename":"common/src/main/java/org/apache/syncope/common/to/SyncActionClassTO.java","status":"modified","additions":2,"deletions":25,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FSyncActionClassTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,10 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"syncActionClass\")\r\n @XmlType\r\n-public class SyncActionClassTO extends AbstractBaseBean {\r\n+public class SyncActionClassTO extends AbstractWrappable {\r\n \r\n-    private static final long serialVersionUID = -3379629287646343560L;\r\n-\r\n-    private String name;\r\n-\r\n-    public static SyncActionClassTO instance(final String name) {\r\n-        SyncActionClassTO instance = new SyncActionClassTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"5c02d91716d691fc1d6b66e88e16c7c50b5b5745","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -42,7 +42,7 @@ public class UserTO extends AbstractAttributableTO {\n \r\n     private String password;\r\n \r\n-    private List<MembershipTO> memberships = new ArrayList<MembershipTO>();\r\n+    private final List<MembershipTO> memberships = new ArrayList<MembershipTO>();\r\n \r\n     private String status;\r\n \r"},{"sha":"f9766085afe941c588775df29f876d4d94ec95df","filename":"common/src/main/java/org/apache/syncope/common/to/ValidatorTO.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FValidatorTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FValidatorTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FValidatorTO.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,33 +21,12 @@\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n \r\n @XmlRootElement(name = \"validator\")\r\n @XmlType\r\n-public class ValidatorTO extends AbstractBaseBean {\r\n+public class ValidatorTO extends AbstractWrappable {\r\n \r\n     private static final long serialVersionUID = 7233619557177034453L;\r\n \r\n-    private String name;\r\n-\r\n-    public static ValidatorTO instance(final String name) {\r\n-        ValidatorTO instance = new ValidatorTO();\r\n-        instance.setName(name);\r\n-        return instance;\r\n-    }\r\n-\r\n-    /**\r\n-     * @return the name\r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * @param name the name to set\r\n-     */\r\n-    public void setName(final String name) {\r\n-        this.name = name;\r\n-    }\r\n }\r"},{"sha":"cd76ab9c8d4572532e03b62511b7448ba8def0ce","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.common.types;\r\n \r\n import javax.ws.rs.core.Response;\r\n-import javax.xml.bind.annotation.XmlEnum;\r\n \r\n public enum ClientExceptionType {\r\n \r"},{"sha":"2da595319222a4e1661fefc933dedc0d0a53d09c","filename":"common/src/main/java/org/apache/syncope/common/types/RESTHeaders.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FRESTHeaders.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.types;\n+\n+/**\n+ * Custom HTTP headers in use with REST services.\n+ */\n+public enum RESTHeaders {\n+\n+    /**\n+     * UserId option key.\n+     */\n+    USER_ID(\"Syncope.UserId\"),\n+    /**\n+     * Username option key.\n+     */\n+    USERNAME(\"Syncope.Username\"),\n+    /**\n+     * Option key stating if user request create is allowed or not.\n+     */\n+    USERREQUEST_CREATE_ALLOWED(\"Syncope.UserRequestCreate.Allowed\"),\n+    /**\n+     * HTTP header key for object ID assigned to an object after its creation.\n+     */\n+    RESOURCE_ID(\"Syncope.Id\"),\n+    /**\n+     * Declares the type of exception being raised.\n+     */\n+    EXCEPTION_TYPE(\"Syncope.ExceptionType\"),\n+    /**\n+     * Not (yet) defined in <tt>javax.ws.rs.core.HttpHeaders</tt>.\n+     *\n+     * @see javax.ws.rs.core.HttpHeaders\n+     */\n+    CONTENT_DISPOSITION(\"Content-Disposition\");\n+\n+    private final String name;\n+\n+    private RESTHeaders(final String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+}"},{"sha":"6d06eb5c0a121ebb510d29d980f4b1c16f0d47ce","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceAssociationActionType.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceAssociationActionType.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum ResourceAssociationActionType {\n+\n+    /**\n+     * Remove association between user/role on Syncope and external resource(s).\n+     */\n+    UNLINK,\n+    /**\n+     * Remove user/role from external resource(s).\n+     */\n+    DEPROVISION,\n+    /**\n+     * Unassign (unlink + deprovision) external resource(s) from user/role.\n+     */\n+    UNASSIGN\n+\n+}"},{"sha":"578a065442bcb006f90f5cecdd7413d59c1adae0","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":16,"deletions":111,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,17 +20,10 @@\n \r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n-import java.util.HashSet;\r\n+import java.util.Collections;\r\n import java.util.List;\r\n-import java.util.Set;\r\n-import org.apache.syncope.common.to.CorrelationRuleClassTO;\r\n-import org.apache.syncope.common.to.EntitlementTO;\r\n-import org.apache.syncope.common.to.JobClassTO;\r\n+import org.apache.syncope.common.AbstractWrappable;\r\n import org.apache.syncope.common.to.LoggerTO;\r\n-import org.apache.syncope.common.to.MailTemplateTO;\r\n-import org.apache.syncope.common.to.PropagationActionClassTO;\r\n-import org.apache.syncope.common.to.SyncActionClassTO;\r\n-import org.apache.syncope.common.to.ValidatorTO;\r\n import org.apache.syncope.common.types.AuditLoggerName;\r\n import org.apache.syncope.common.types.LoggerLevel;\r\n \r\n@@ -40,52 +33,28 @@ private CollectionWrapper() {\n         // empty constructor for static utility class\r\n     }\r\n \r\n-    public static Set<EntitlementTO> wrap(final Collection<String> collection) {\r\n-        Set<EntitlementTO> respons = new HashSet<EntitlementTO>();\r\n-        for (String e : collection) {\r\n-            respons.add(EntitlementTO.instance(e));\r\n-        }\r\n-        return respons;\r\n-    }\r\n+    public static <T extends AbstractWrappable> List<T> wrap(\r\n+            final String element, final Class<T> reference) {\r\n \r\n-    public static Set<String> unwrap(final Collection<EntitlementTO> collection) {\r\n-        Set<String> respons = new HashSet<String>();\r\n-        for (EntitlementTO e : collection) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n+        return Collections.singletonList(AbstractWrappable.getInstance(reference, element));\r\n     }\r\n \r\n-    public static Set<MailTemplateTO> wrapMailTemplates(final Collection<String> collection) {\r\n-        Set<MailTemplateTO> respons = new HashSet<MailTemplateTO>();\r\n-        for (String e : collection) {\r\n-            respons.add(MailTemplateTO.instance(e));\r\n-        }\r\n-        return respons;\r\n-    }\r\n+    public static <T extends AbstractWrappable> List<T> wrap(\r\n+            final Collection<String> collection, final Class<T> reference) {\r\n \r\n-    public static List<String> unwrapMailTemplates(final Collection<MailTemplateTO> collection) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (MailTemplateTO e : collection) {\r\n-            respons.add(e.getName());\r\n+        List<T> response = new ArrayList<T>();\r\n+        for (String element : collection) {\r\n+            response.add(AbstractWrappable.getInstance(reference, element));\r\n         }\r\n-        return respons;\r\n+        return response;\r\n     }\r\n \r\n-    public static Set<ValidatorTO> wrapValidators(final Collection<String> validators) {\r\n-        Set<ValidatorTO> respons = new HashSet<ValidatorTO>();\r\n-        for (String validator : validators) {\r\n-            respons.add(ValidatorTO.instance(validator));\r\n+    public static <T extends AbstractWrappable> List<String> unwrap(final Collection<T> collection) {\r\n+        List<String> response = new ArrayList<String>();\r\n+        for (T e : collection) {\r\n+            response.add(e.getName());\r\n         }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static List<String> unwrapValidator(final Collection<ValidatorTO> collection) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (ValidatorTO e : collection) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n+        return response;\r\n     }\r\n \r\n     public static List<AuditLoggerName> wrapLogger(final Collection<LoggerTO> logger) {\r\n@@ -110,68 +79,4 @@ public static List<LoggerTO> unwrapLogger(final Collection<AuditLoggerName> audi\n         }\r\n         return respons;\r\n     }\r\n-\r\n-    public static Set<JobClassTO> wrapJobClasses(final Collection<String> classes) {\r\n-        Set<JobClassTO> respons = new HashSet<JobClassTO>();\r\n-        for (String cl : classes) {\r\n-            respons.add(JobClassTO.instance(cl));\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static List<String> unwrapJobClasses(final Collection<JobClassTO> jobClasses) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (JobClassTO e : jobClasses) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static Set<SyncActionClassTO> wrapSyncActionClasses(final Collection<String> classes) {\r\n-        Set<SyncActionClassTO> respons = new HashSet<SyncActionClassTO>();\r\n-        for (String cl : classes) {\r\n-            respons.add(SyncActionClassTO.instance(cl));\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static List<String> unwrapSyncActionClasses(final Collection<SyncActionClassTO> actions) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (SyncActionClassTO e : actions) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static Set<PropagationActionClassTO> wrapPropagationActionClasses(final Collection<String> classes) {\r\n-        Set<PropagationActionClassTO> respons = new HashSet<PropagationActionClassTO>();\r\n-        for (String cl : classes) {\r\n-            respons.add(PropagationActionClassTO.instance(cl));\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static List<String> unwrapPropagationActionClasses(final Collection<PropagationActionClassTO> actions) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (PropagationActionClassTO e : actions) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static Set<CorrelationRuleClassTO> wrapSyncCorrelationRuleClasses(final Collection<String> classes) {\r\n-        Set<CorrelationRuleClassTO> respons = new HashSet<CorrelationRuleClassTO>();\r\n-        for (String cl : classes) {\r\n-            respons.add(CorrelationRuleClassTO.instance(cl));\r\n-        }\r\n-        return respons;\r\n-    }\r\n-\r\n-    public static List<String> unwrapSyncCorrelationRuleClasses(final Collection<CorrelationRuleClassTO> actions) {\r\n-        List<String> respons = new ArrayList<String>();\r\n-        for (CorrelationRuleClassTO e : actions) {\r\n-            respons.add(e.getName());\r\n-        }\r\n-        return respons;\r\n-    }\r\n }\r"},{"sha":"7af46384c6afb2410c07987f3b42d35de7db9003","filename":"common/src/test/java/org/apache/syncope/common/JSONTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -40,7 +40,7 @@\n public class JSONTest {\n \n     @Test\n-    public void testSearchCondition() throws IOException {\n+    public void searchCondition() throws IOException {\n         final AttributeCond usernameCond = new AttributeCond(AttributeCond.Type.LIKE);\n         usernameCond.setSchema(\"username\");\n         usernameCond.setExpression(\"%o%\");\n@@ -63,7 +63,7 @@ public void testSearchCondition() throws IOException {\n     }\n \n     @Test\n-    public void testLists() throws IOException {\n+    public void lists() throws IOException {\n         List<ConfigurationTO> confList = new ArrayList<ConfigurationTO>();\n         ConfigurationTO configuration = new ConfigurationTO();\n         configuration.setKey(\"key1\");\n@@ -87,7 +87,7 @@ public void testLists() throws IOException {\n     }\n \n     @Test\n-    public void testMap() throws IOException {\n+    public void map() throws IOException {\n         WorkflowFormPropertyTO prop = new WorkflowFormPropertyTO();\n         prop.getEnumValues().put(\"key1\", \"value1\");\n         prop.getEnumValues().put(\"key2\", \"value2\");\n@@ -102,7 +102,7 @@ public void testMap() throws IOException {\n     }\n \n     @Test\n-    public void testReportletConfImplementations() throws IOException {\n+    public void reportletConfImplementations() throws IOException {\n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\");\n         report.getReportletConfs().add(new UserReportletConf(\"first\"));"},{"sha":"7ae5e0aaf1241439fe1c830f8978531bdbecd1a7","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,7 +24,9 @@\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import javax.ws.rs.core.MediaType;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.wicket.Session;\n@@ -43,7 +45,7 @@ public class SyncopeSession extends WebSession {\n     private static final long serialVersionUID = 7743446298924805872L;\n \n     public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[] {\n-        Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")});\n+        Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\") });\n \n     private String username;\n \n@@ -64,8 +66,8 @@ public static SyncopeSession get() {\n     public SyncopeSession(final Request request) {\n         super(request);\n \n-        final ApplicationContext applicationContext =\n-                WebApplicationContextUtils.getWebApplicationContext(WebApplication.get().getServletContext());\n+        final ApplicationContext applicationContext = WebApplicationContextUtils.\n+                getWebApplicationContext(WebApplication.get().getServletContext());\n \n         clientFactory = applicationContext.getBean(SyncopeClientFactoryBean.class);\n     }\n@@ -82,6 +84,10 @@ public <T> T getService(final Class<T> serviceClass, final String username, fina\n \n         if (!clients.containsKey(clientKey)) {\n             clients.put(clientKey, clientFactory.create(username, password));\n+\n+            // force JSON\n+            WebClient.client(clients.get(clientKey).getService(serviceClass)).\n+                    accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON);\n         }\n \n         return clients.get(clientKey).getService(serviceClass);"},{"sha":"c7af5e15fa85a98d9ffb06dd4ba42e02bac40815","filename":"console/src/main/java/org/apache/syncope/console/commons/AttributableDataProvider.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -33,17 +33,18 @@\n import org.slf4j.LoggerFactory;\n \n public class AttributableDataProvider extends SortableDataProvider<AbstractAttributableTO, String> {\n-    private static final Logger LOG = LoggerFactory.getLogger(AttributableDataProvider.class);\n \n     private static final long serialVersionUID = 6267494272884913376L;\n \n+    private static final Logger LOG = LoggerFactory.getLogger(AttributableDataProvider.class);\n+\n     private final SortableAttributableProviderComparator comparator;\n \n     private NodeCond filter = null;\n \n     private final int paginatorRows;\n \n-    private final boolean filtered ;\n+    private final boolean filtered;\n \n     private final AbstractAttributableRestClient restClient;\n \n@@ -68,7 +69,7 @@ public void setSearchCond(final NodeCond searchCond) {\n \n     @Override\n     public Iterator<? extends AbstractAttributableTO> iterator(final long first, final long count) {\n-        final List<? extends AbstractAttributableTO> result;\n+        List<? extends AbstractAttributableTO> result;\n \n         if (filtered) {\n             try {\n@@ -77,7 +78,7 @@ public Iterator<? extends AbstractAttributableTO> iterator(final long first, fin\n                         : restClient.search(filter, ((int) first / paginatorRows) + 1, paginatorRows);\n             } catch (InvalidSearchConditionException e) {\n                 LOG.error(e.getMessage(), e);\n-                return Collections.<AbstractAttributableTO>emptyList().iterator();\n+                result = Collections.<AbstractAttributableTO>emptyList();\n             }\n         } else {\n             result = restClient.list(((int) first / paginatorRows) + 1, paginatorRows);\n@@ -89,18 +90,22 @@ public Iterator<? extends AbstractAttributableTO> iterator(final long first, fin\n \n     @Override\n     public long size() {\n+        long result;\n+\n         if (filtered) {\n             try {\n-                return filter == null\n+                result = filter == null\n                         ? 0\n                         : restClient.searchCount(filter);\n             } catch (InvalidSearchConditionException e) {\n                 LOG.error(e.getMessage(), e);\n-                return 0;\n+                result = 0;\n             }\n         } else {\n-            return restClient.count();\n+            result = restClient.count();\n         }\n+\n+        return result;\n     }\n \n     @Override"},{"sha":"79432ee93cc80fa43e05824441ea6f23b8af91dd","filename":"console/src/main/java/org/apache/syncope/console/commons/HttpResourceStream.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -26,7 +26,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.http.HttpStatus;\n-import org.apache.syncope.common.SyncopeConstants;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.wicket.util.lang.Bytes;\n import org.apache.wicket.util.resource.AbstractResourceStream;\n import org.apache.wicket.util.resource.IFixedLocationResourceStream;\n@@ -47,7 +47,7 @@ public HttpResourceStream(final Response response) {\n         if (response.getStatus() == HttpStatus.SC_OK && (entity instanceof InputStream)) {\n             this.inputStream = (InputStream) entity;\n             this.contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n-            String contentDisposition = response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER);\n+            String contentDisposition = response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString());\n             if (StringUtils.isNotBlank(contentDisposition)) {\n                 String[] splitted = contentDisposition.split(\"=\");\n                 if (splitted != null && splitted.length > 1) {"},{"sha":"e533dc134609f95c913952cb3bc6a8d9e4c704e3","filename":"console/src/main/java/org/apache/syncope/console/commons/status/AbstractStatusBeanProvider.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.commons.status;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class AbstractStatusBeanProvider extends SortableDataProvider<StatusBean, String> {\n+\n+    private static final long serialVersionUID = 4287357360778016173L;\n+\n+    private SortableDataProviderComparator<StatusBean> comparator;\n+\n+    public AbstractStatusBeanProvider(final String sort) {\n+        //Default sorting\n+        setSort(sort, SortOrder.ASCENDING);\n+        comparator = new SortableDataProviderComparator<StatusBean>(this);\n+    }\n+\n+    @Override\n+    public Iterator<StatusBean> iterator(final long first, final long count) {\n+        List<StatusBean> list = getStatusBeans();\n+        Collections.sort(list, comparator);\n+        return list.subList((int) first, (int) first + (int) count).iterator();\n+    }\n+\n+    @Override\n+    public long size() {\n+        return getStatusBeans().size();\n+    }\n+\n+    @Override\n+    public IModel<StatusBean> model(final StatusBean resource) {\n+        return new AbstractReadOnlyModel<StatusBean>() {\n+\n+            private static final long serialVersionUID = -7802635613997243712L;\n+\n+            @Override\n+            public StatusBean getObject() {\n+                return resource;\n+            }\n+        };\n+    }\n+\n+    public abstract List<StatusBean> getStatusBeans();\n+\n+}"},{"sha":"540fd62225662543a09bb41949bbba78d667c382","filename":"console/src/main/java/org/apache/syncope/console/commons/status/ConnObjectWrapper.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FConnObjectWrapper.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.commons.status;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.ConnObjectTO;\n+\n+public class ConnObjectWrapper implements Serializable {\n+\n+    private static final long serialVersionUID = 9083721948999924299L;\n+\n+    private final AbstractAttributableTO attributable;\n+\n+    private final String resourceName;\n+\n+    private final ConnObjectTO connObjectTO;\n+\n+    public ConnObjectWrapper(final AbstractAttributableTO attributable, final String resourceName,\n+            final ConnObjectTO connObjectTO) {\n+\n+        this.attributable = attributable;\n+        this.resourceName = resourceName;\n+        this.connObjectTO = connObjectTO;\n+    }\n+\n+    public AbstractAttributableTO getAttributable() {\n+        return attributable;\n+    }\n+\n+    public String getResourceName() {\n+        return resourceName;\n+    }\n+\n+    public ConnObjectTO getConnObjectTO() {\n+        return connObjectTO;\n+    }\n+\n+}"},{"sha":"762de4e686e986157e4667a3940f9caa7aa3305a","filename":"console/src/main/java/org/apache/syncope/console/commons/status/Status.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatus.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.commons.status;\n+\n+public enum Status {\n+\n+    NOT_YET_SUBMITTED(\"\"),\n+    CREATED(\"created\"),\n+    ACTIVE(\"active\"),\n+    SUSPENDED(\"inactive\"),\n+    UNDEFINED(\"undefined\"),\n+    OBJECT_NOT_FOUND(\"objectnotfound\");\n+\n+    public boolean isActive() {\n+        return this == ACTIVE;\n+    }\n+\n+    private Status(final String name) {\n+        this.name = name;\n+    }\n+\n+    private final String name;\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+}"},{"sha":"8441bed9c977787cd92aea7722e820fd7c962687","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusBean.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.commons;\n+package org.apache.syncope.console.commons.status;\n \n import java.io.Serializable;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n@@ -37,7 +37,7 @@ public class StatusBean implements Serializable {\n \n     private String accountLink = null;\n \n-    private StatusUtils.Status status = StatusUtils.Status.OBJECT_NOT_FOUND;\n+    private Status status = Status.OBJECT_NOT_FOUND;\n \n     public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n         this.attributableId = attributable.getId();\n@@ -58,11 +58,11 @@ public String getResourceName() {\n         return resourceName;\n     }\n \n-    public StatusUtils.Status getStatus() {\n+    public Status getStatus() {\n         return status;\n     }\n \n-    public void setStatus(final StatusUtils.Status status) {\n+    public void setStatus(final Status status) {\n         this.status = status;\n     }\n ","previous_filename":"console/src/main/java/org/apache/syncope/console/commons/StatusBean.java"},{"sha":"58600ecbb1d11fea3eae65f190ed02e8bc0a06c0","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusUtils.java","status":"renamed","additions":39,"deletions":152,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,90 +16,58 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.commons;\n+package org.apache.syncope.console.commons.status;\n \n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n-import org.apache.syncope.common.to.PropagationTargetsTO;\n+import org.apache.syncope.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.panels.ImagePanel;\n import org.apache.syncope.console.pages.panels.StatusPanel;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n-import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n public class StatusUtils implements Serializable {\n \n     private static final long serialVersionUID = 7238009174387184309L;\n \n-    public static final String IMG_STATUES = \"../statuses/\";\n-\n-    public enum Status {\n-\n-        NOT_YET_SUBMITTED(\"\"),\n-        CREATED(\"created\"),\n-        ACTIVE(\"active\"),\n-        SUSPENDED(\"inactive\"),\n-        UNDEFINED(\"undefined\"),\n-        OBJECT_NOT_FOUND(\"objectnotfound\");\n-\n-        public boolean isActive() {\n-            return this == ACTIVE;\n-        }\n-\n-        private Status(final String name) {\n-            this.name = name;\n-        }\n-\n-        private final String name;\n-\n-        @Override\n-        public String toString() {\n-            return name;\n-        }\n-    }\n-\n     /**\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(StatusUtils.class);\n \n+    public static final String IMG_STATUES = \"../statuses/\";\n+\n     private final AbstractAttributableRestClient restClient;\n \n     public StatusUtils(final AbstractAttributableRestClient restClient) {\n         this.restClient = restClient;\n     }\n \n-    public List<ConnObjectWrapper> getConnectorObjects(final Collection<AbstractAttributableTO> attributables) {\n+    public List<ConnObjectWrapper> getConnectorObjects(final AbstractAttributableTO attributable) {\n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n-\n-        for (AbstractAttributableTO attributableTO : attributables) {\n-            objects.addAll(getConnectorObjects(attributableTO, attributableTO.getResources()));\n-        }\n-\n+        objects.addAll(getConnectorObjects(attributable, attributable.getResources()));\n         return objects;\n     }\n \n     public List<ConnObjectWrapper> getConnectorObjects(\n             final Collection<AbstractAttributableTO> attributables, final Collection<String> resources) {\n+\n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n \n         for (AbstractAttributableTO attributableTO : attributables) {\n@@ -110,18 +78,19 @@ public List<ConnObjectWrapper> getConnectorObjects(\n     }\n \n     private List<ConnObjectWrapper> getConnectorObjects(\n-            final AbstractAttributableTO attributableTO, final Collection<String> resources) {\n+            final AbstractAttributableTO attributable, final Collection<String> resources) {\n+\n         final List<ConnObjectWrapper> objects = new ArrayList<ConnObjectWrapper>();\n \n         for (String resourceName : resources) {\n             ConnObjectTO objectTO = null;\n             try {\n-                objectTO = restClient.getConnectorObject(resourceName, attributableTO.getId());\n+                objectTO = restClient.getConnectorObject(resourceName, attributable.getId());\n             } catch (Exception e) {\n-                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributableTO.getId(), resourceName);\n+                LOG.warn(\"ConnObject '{}' not found on resource '{}'\", attributable.getId(), resourceName);\n             }\n \n-            objects.add(new ConnObjectWrapper(attributableTO, resourceName, objectTO));\n+            objects.add(new ConnObjectWrapper(attributable, resourceName, objectTO));\n         }\n \n         return objects;\n@@ -137,11 +106,11 @@ public StatusBean getStatusBean(\n         if (objectTO != null) {\n             final Boolean enabled = isEnabled(objectTO);\n \n-            final StatusUtils.Status status = enabled == null\n-                    ? (isRole ? StatusUtils.Status.ACTIVE : StatusUtils.Status.UNDEFINED)\n+            final Status status = enabled == null\n+                    ? (isRole ? Status.ACTIVE : Status.UNDEFINED)\n                     : enabled\n-                    ? StatusUtils.Status.ACTIVE\n-                    : StatusUtils.Status.SUSPENDED;\n+                    ? Status.ACTIVE\n+                    : Status.SUSPENDED;\n \n             final String accountLink = getAccountLink(objectTO);\n \n@@ -174,40 +143,28 @@ private String getAccountLink(final ConnObjectTO objectTO) {\n                 : null;\n     }\n \n-    public static PropagationRequestTO buildPropagationRequestTO(final Collection<StatusBean> statuses) {\n-        return buildPropagationRequestTO(statuses, null);\n+    public static StatusMod buildStatusMod(final Collection<StatusBean> statuses) {\n+        return buildStatusMod(statuses, null);\n     }\n \n-    public static PropagationRequestTO buildPropagationRequestTO(final Collection<StatusBean> statuses,\n-            final Boolean enable) {\n-\n-        PropagationRequestTO propagationRequestTO = new PropagationRequestTO();\n+    public static StatusMod buildStatusMod(final Collection<StatusBean> statuses, final Boolean enable) {\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setOnSyncope(false);\n \n         for (StatusBean status : statuses) {\n             if (enable == null\n                     || (enable && !status.getStatus().isActive()) || (!enable && status.getStatus().isActive())) {\n \n                 if (\"Syncope\".equals(status.getResourceName())) {\n-                    propagationRequestTO.setOnSyncope(true);\n+                    statusMod.setOnSyncope(true);\n                 } else {\n-                    propagationRequestTO.getResources().add(status.getResourceName());\n+                    statusMod.getResourceNames().add(status.getResourceName());\n                 }\n \n             }\n         }\n \n-        return propagationRequestTO;\n-    }\n-\n-    public static PropagationTargetsTO buildPropagationTargetsTO(final Collection<StatusBean> statuses) {\n-\n-        final PropagationTargetsTO propagationTargetsTO = new PropagationTargetsTO();\n-\n-        for (StatusBean status : statuses) {\n-            propagationTargetsTO.getResources().add(status.getResourceName());\n-        }\n-\n-        return propagationTargetsTO;\n+        return statusMod;\n     }\n \n     public static void update(\n@@ -230,7 +187,7 @@ public static void update(\n                         statusBean = statusPanel.getInitialStatusBeanMap().get(resourceName);\n                     } else {\n                         statusBean = new StatusBean(attributable, resourceName);\n-                        statusBean.setStatus(StatusUtils.Status.NOT_YET_SUBMITTED);\n+                        statusBean.setStatus(Status.NOT_YET_SUBMITTED);\n                     }\n \n                     statusMap.put(statusBean.getResourceName(), statusBean);\n@@ -250,8 +207,9 @@ public ConnObjectTO getConnObjectTO(\n             final Long attributableId, final String resourceName, final List<ConnObjectWrapper> objects) {\n \n         for (ConnObjectWrapper object : objects) {\n-            if (attributableId.equals(object.getAttributable())\n+            if (attributableId.equals(object.getAttributable().getId())\n                     && resourceName.equalsIgnoreCase(object.getResourceName())) {\n+\n                 return object.getConnObjectTO();\n             }\n         }\n@@ -265,31 +223,31 @@ public Image getStatusImage(final String componentId, final Status status) {\n         switch (status) {\n \n             case NOT_YET_SUBMITTED:\n-                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Not yet submitted\";\n                 break;\n \n             case ACTIVE:\n-                statusName = StatusUtils.Status.ACTIVE.toString();\n+                statusName = Status.ACTIVE.toString();\n                 alt = \"active icon\";\n                 title = \"Enabled\";\n                 break;\n \n             case UNDEFINED:\n-                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Undefined status\";\n                 break;\n \n             case OBJECT_NOT_FOUND:\n-                statusName = StatusUtils.Status.OBJECT_NOT_FOUND.toString();\n+                statusName = Status.OBJECT_NOT_FOUND.toString();\n                 alt = \"notfound icon\";\n                 title = \"Not found\";\n                 break;\n \n             default:\n-                statusName = StatusUtils.Status.SUSPENDED.toString();\n+                statusName = Status.SUSPENDED.toString();\n                 alt = \"inactive icon\";\n                 title = \"Disabled\";\n         }\n@@ -316,31 +274,31 @@ public ImagePanel getStatusImagePanel(final String componentId, final Status sta\n         switch (status) {\n \n             case NOT_YET_SUBMITTED:\n-                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Not yet submitted\";\n                 break;\n \n             case ACTIVE:\n-                statusName = StatusUtils.Status.ACTIVE.toString();\n+                statusName = Status.ACTIVE.toString();\n                 alt = \"active icon\";\n                 title = \"Enabled\";\n                 break;\n \n             case UNDEFINED:\n-                statusName = StatusUtils.Status.UNDEFINED.toString();\n+                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Undefined status\";\n                 break;\n \n             case OBJECT_NOT_FOUND:\n-                statusName = StatusUtils.Status.OBJECT_NOT_FOUND.toString();\n+                statusName = Status.OBJECT_NOT_FOUND.toString();\n                 alt = \"notfound icon\";\n                 title = \"Not found\";\n                 break;\n \n             default:\n-                statusName = StatusUtils.Status.SUSPENDED.toString();\n+                statusName = Status.SUSPENDED.toString();\n                 alt = \"inactive icon\";\n                 title = \"Disabled\";\n         }\n@@ -359,75 +317,4 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n \n         return imagePanel;\n     }\n-\n-    public static class ConnObjectWrapper implements Serializable {\n-\n-        private static final long serialVersionUID = 9083721948999924299L;\n-\n-        private final AbstractAttributableTO attributable;\n-\n-        private final String resourceName;\n-\n-        private final ConnObjectTO connObjectTO;\n-\n-        public ConnObjectWrapper(AbstractAttributableTO attributable, String resourceName, ConnObjectTO connObjectTO) {\n-            this.attributable = attributable;\n-            this.resourceName = resourceName;\n-            this.connObjectTO = connObjectTO;\n-        }\n-\n-        public AbstractAttributableTO getAttributable() {\n-            return attributable;\n-        }\n-\n-        public String getResourceName() {\n-            return resourceName;\n-        }\n-\n-        public ConnObjectTO getConnObjectTO() {\n-            return connObjectTO;\n-        }\n-    }\n-\n-    public static abstract class StatusBeanProvider extends SortableDataProvider<StatusBean, String> {\n-\n-        private static final long serialVersionUID = 4287357360778016173L;\n-\n-        private SortableDataProviderComparator<StatusBean> comparator;\n-\n-        public StatusBeanProvider(final String sort) {\n-            //Default sorting\n-            setSort(sort, SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<StatusBean>(this);\n-        }\n-\n-        @Override\n-        public Iterator<StatusBean> iterator(final long first, final long count) {\n-            List<StatusBean> list = getStatusBeans();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return getStatusBeans().size();\n-        }\n-\n-        @Override\n-        public IModel<StatusBean> model(final StatusBean resource) {\n-            return new AbstractReadOnlyModel<StatusBean>() {\n-\n-                private static final long serialVersionUID = -7802635613997243712L;\n-\n-                @Override\n-                public StatusBean getObject() {\n-                    return resource;\n-                }\n-            };\n-        }\n-\n-        public abstract List<StatusBean> getStatusBeans();\n-    }\n }","previous_filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java"},{"sha":"363991edf9a5f9bf4dd587b188def6d15e110630","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractStatusModalPage.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -15,7 +15,7 @@\n  */\n package org.apache.syncope.console.pages;\n \n-public class AbstractStatusModlaPage extends BaseModalPage {\n+public class AbstractStatusModalPage extends BaseModalPage {\n \n     protected static final long serialVersionUID = 6633408683036028540L;\n ","previous_filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractStatusModlaPage.java"},{"sha":"323b7e41815fbf1703bb3bc22aa3698cc0f90ec4","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.AttributableOperations;\n-import org.apache.syncope.console.commons.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.pages.panels.AccountInformationPanel;\n import org.apache.syncope.console.pages.panels.MembershipsPanel;\n import org.apache.syncope.console.pages.panels.ResourcesPanel;\n@@ -85,7 +85,7 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n             final UserMod userMod = AttributableOperations.diff(updatedUserTO, initialUserTO);\n \n             if (statusPanel != null) {\n-                userMod.setPwdPropRequest(statusPanel.getPropagationRequestTO());\n+                userMod.setPwdPropRequest(statusPanel.getStatusMod());\n             }\n \n             // update user just if it is changed"},{"sha":"0f96427dee896bab2b7c733da2b8730949188d3d","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":8,"deletions":19,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,20 +19,19 @@\n package org.apache.syncope.console.pages;\n \n import java.security.AccessControlException;\n+import java.util.List;\n import java.util.Locale;\n-import java.util.Set;\n import org.apache.http.HttpResponse;\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.util.EntityUtils;\n import org.apache.syncope.common.services.EntitlementService;\n-import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.to.EntitlementTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.rest.UserRequestRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.console.wicket.markup.html.form.LinkPanel;\n import org.apache.wicket.Page;\n@@ -83,6 +82,9 @@ public class Login extends WebPage {\n     @SpringBean(name = \"anonymousKey\")\n     private String anonymousKey;\n \n+    @SpringBean\n+    private UserRequestRestClient userReqRestClient;\n+\n     private Form<Void> form;\n \n     private TextField<String> userIdField;\n@@ -143,7 +145,7 @@ public void onSubmit() {\n         add(editProfileModalWin);\n \n         Fragment selfRegFrag;\n-        if (isSelfRegistrationAllowed()) {\n+        if (userReqRestClient.isSelfRegistrationAllowed()) {\n             selfRegFrag = new Fragment(\"selfRegistration\", \"selfRegAllowed\", this);\n \n             final AjaxLink<Void> selfRegLink = new ClearIndicatingAjaxLink<Void>(\"link\", getPageReference()) {\n@@ -191,28 +193,15 @@ public void onClose(final AjaxRequestTarget target) {\n     }\n \n     private void authenticate(final String username, final String password) {\n-        Set<EntitlementTO> entitlements = SyncopeSession.get().\n-                getService(EntitlementService.class, username, password).getMyEntitlements();\n+        List<EntitlementTO> entitlements = SyncopeSession.get().\n+                getService(EntitlementService.class, username, password).getOwnEntitlements();\n \n         SyncopeSession.get().setUsername(username);\n         SyncopeSession.get().setPassword(password);\n         SyncopeSession.get().setEntitlements(CollectionWrapper.unwrap(entitlements).toArray(new String[0]));\n         SyncopeSession.get().setVersion(getSyncopeVersion());\n     }\n \n-    private boolean isSelfRegistrationAllowed() {\n-        Boolean result = null;\n-        try {\n-            result = SyncopeSession.get().getService(UserRequestService.class).isCreateAllowed();\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While seeking if self registration is allowed\", e);\n-        }\n-\n-        return result == null\n-                ? false\n-                : result.booleanValue();\n-    }\n-\n     private String getSyncopeVersion() {\n         String version = \"\";\n         try {"},{"sha":"73f0f75caf486fa1588be3b0cdf12cec26baaf00","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":40,"deletions":33,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -31,10 +31,12 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.commons.StatusUtils;\n-import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n+import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n+import org.apache.syncope.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n@@ -49,7 +51,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class ProvisioningModalPage<T extends AbstractAttributableTO> extends AbstractStatusModlaPage {\n+public class ProvisioningModalPage<T extends AbstractAttributableTO> extends AbstractStatusModalPage {\n \n     private static final long serialVersionUID = 4114026480146090961L;\n \n@@ -82,31 +84,36 @@ public ProvisioningModalPage(\n \n         final List<IColumn<StatusBean, String>> columns = new ArrayList<IColumn<StatusBean, String>>();\n         columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"id\", this, null, \"Attributable id\"), \"attributableId\", \"attributableId\"));\n+                new StringResourceModel(\"id\", this, null, \"Attributable id\"),\n+                \"attributableId\", \"attributableId\"));\n         columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"name\", this, null, \"Attributable name\"), \"attributableName\", \"attributableName\"));\n+                new StringResourceModel(\"name\", this, null, \"Attributable name\"),\n+                \"attributableName\", \"attributableName\"));\n         columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\", \"resourceName\"));\n+                new StringResourceModel(\"resourceName\", this, null, \"Resource name\"),\n+                \"resourceName\", \"resourceName\"));\n         columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"accountLink\", this, null, \"Account link\"), \"accountLink\", \"accountLink\"));\n+                new StringResourceModel(\"accountLink\", this, null, \"Account link\"),\n+                \"accountLink\", \"accountLink\"));\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+                    private static final long serialVersionUID = -3503023501954863131L;\n \n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+                    @Override\n+                    public String getCssClass() {\n+                        return \"action\";\n+                    }\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n-                cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-            }\n-        });\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+                                cellItem.\n+                                add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+                            }\n+                });\n \n         final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n@@ -124,7 +131,7 @@ public void populateItem(\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, BulkAssociationAction.Type.UNLINK, table, columns);\n+                    bulkAssociationAction(target, ResourceAssociationActionType.UNLINK, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unlinkink resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -140,7 +147,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, BulkAssociationAction.Type.DEPROVISION, table, columns);\n+                    bulkAssociationAction(target, ResourceAssociationActionType.DEPROVISION, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error de-provisioning user\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -156,7 +163,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, BulkAssociationAction.Type.UNASSIGN, table, columns);\n+                    bulkAssociationAction(target, ResourceAssociationActionType.UNASSIGN, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unassigning resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -170,7 +177,7 @@ public void onClick(final AjaxRequestTarget target) {\n         add(table);\n     }\n \n-    private class StatusBeanProvider extends StatusUtils.StatusBeanProvider {\n+    private class StatusBeanProvider extends AbstractStatusBeanProvider {\n \n         private static final long serialVersionUID = 4287357360778016173L;\n \n@@ -200,8 +207,8 @@ public List<StatusBean> getStatusBeans() {\n                     (List<AbstractAttributableTO>) attributables, Collections.<String>singleton(resourceTO.getName()));\n \n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n-            final LinkedHashMap<String, StatusBean> initialStatusBeanMap =\n-                    new LinkedHashMap<String, StatusBean>(connObjects.size());\n+            final LinkedHashMap<String, StatusBean> initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(\n+                    connObjects.size());\n \n             for (ConnObjectWrapper entry : connObjects) {\n                 final StatusBean statusBean = statusUtils.getStatusBean(\n@@ -220,7 +227,7 @@ public List<StatusBean> getStatusBeans() {\n \n     private void bulkAssociationAction(\n             final AjaxRequestTarget target,\n-            final BulkAssociationAction.Type type,\n+            final ResourceAssociationActionType type,\n             final ActionDataTablePanel<StatusBean, String> table,\n             final List<IColumn<StatusBean, String>> columns) {\n \n@@ -233,16 +240,16 @@ private void bulkAssociationAction(\n             bulkAction.getTargets().add(bean.getAttributableId());\n         }\n \n-        if (!beans.isEmpty()) {\n-            final BulkActionRes res =\n-                    resourceRestClient.bulkAssociationAction(resourceTO.getName(), bulkAction, typeRef);\n+        if (beans.isEmpty()) {\n+            window.close(target);\n+        } else {\n+            final BulkActionRes res = resourceRestClient.bulkAssociationAction(\n+                    resourceTO.getName(), bulkAction, typeRef);\n \n             ((BasePage) pageRef.getPage()).setModalResult(true);\n \n             setResponsePage(new BulkActionResultModalPage<StatusBean, String>(\n                     window, beans, columns, res, \"attributableId\"));\n-        } else {\n-            window.close(target);\n         }\n     }\n }"},{"sha":"cf3ebc35be9e8db053396a29ae79cdcaf8e5d422","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -40,7 +40,8 @@\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.status.Status;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -187,7 +188,7 @@ public void onClick(AjaxRequestTarget target) {\n                         case SUCCESS:\n                         case SUBMITTED:\n                         case CREATED:\n-                            image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.ACTIVE.toString()\n+                            image = new Image(\"icon\", IMG_STATUSES + Status.ACTIVE.toString()\n                                     + Constants.PNG_EXT);\n                             alt = \"success icon\";\n                             title = \"success\";\n@@ -196,7 +197,7 @@ public void onClick(AjaxRequestTarget target) {\n                             break;\n \n                         default:\n-                            image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.SUSPENDED.toString()\n+                            image = new Image(\"icon\", IMG_STATUSES + Status.SUSPENDED.toString()\n                                     + Constants.PNG_EXT);\n                             alt = \"failure icon\";\n                             title = \"failure\";\n@@ -392,14 +393,14 @@ private Fragment getStatusIcon(final String id, final String resourceName, final\n                 attributable, resourceName, objectTO, this.attributable instanceof RoleTO).getStatus()) {\n \n             case ACTIVE:\n-                image = new Image(\"status\", IMG_STATUSES + StatusUtils.Status.ACTIVE.toString()\n+                image = new Image(\"status\", IMG_STATUSES + Status.ACTIVE.toString()\n                         + Constants.PNG_EXT);\n                 alt = \"active icon\";\n                 title = \"Enabled\";\n                 break;\n \n             case SUSPENDED:\n-                image = new Image(\"status\", IMG_STATUSES + StatusUtils.Status.SUSPENDED.toString()\n+                image = new Image(\"status\", IMG_STATUSES + Status.SUSPENDED.toString()\n                         + Constants.PNG_EXT);\n                 alt = \"inactive icon\";\n                 title = \"Disabled\";"},{"sha":"eb953d0b91fce24eb000ca27b996b999549d8efa","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.panels.RolePanel;\n-import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -36,25 +35,21 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n  * Modal window with Role form.\n  */\n public class RoleModalPage extends BaseModalPage {\n \n+    private static final long serialVersionUID = -1732493223434085205L;\n+\n     public enum Mode {\n \n         ADMIN,\n         TEMPLATE;\n \n     }\n \n-    private static final long serialVersionUID = -1732493223434085205L;\n-\n-    @SpringBean\n-    private RoleRestClient roleRestClient;\n-\n     protected final PageReference pageRef;\n \n     protected final ModalWindow window;\n@@ -71,7 +66,7 @@ public RoleModalPage(final PageReference pageRef, final ModalWindow window, fina\n         this(pageRef, window, roleTO, Mode.ADMIN);\n     }\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public RoleModalPage(final PageReference pageRef, final ModalWindow window, final RoleTO roleTO, final Mode mode) {\n         super();\n \n@@ -90,8 +85,8 @@ public RoleModalPage(final PageReference pageRef, final ModalWindow window, fina\n \n         form.setModel(new CompoundPropertyModel(roleTO));\n \n-        this.rolePanel = new RolePanel.Builder(\"rolePanel\").form(form).roleTO(roleTO).roleModalPageMode(mode)\n-                .pageRef(getPageReference()).build();\n+        this.rolePanel = new RolePanel.Builder(\"rolePanel\").form(form).roleTO(roleTO).\n+                roleModalPageMode(mode).pageRef(getPageReference()).build();\n         form.add(rolePanel);\n \n         final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {"},{"sha":"6ad7ad4fb5c4bb0311e85b87106549c64028f222","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":28,"deletions":30,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,17 +20,16 @@\n \n import static org.apache.syncope.console.pages.AbstractBasePage.LOG;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.commons.StatusUtils;\n-import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n-import org.apache.syncope.console.commons.StatusUtils.Status;\n-import org.apache.syncope.console.commons.StatusUtils.StatusBeanProvider;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n+import org.apache.syncope.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.console.commons.status.Status;\n+import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n import org.apache.syncope.console.pages.panels.ActionDataTablePanel;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n@@ -45,7 +44,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class StatusModalPage<T extends AbstractAttributableTO> extends AbstractStatusModlaPage {\n+public class StatusModalPage<T extends AbstractAttributableTO> extends AbstractStatusModalPage {\n \n     private static final long serialVersionUID = 4114026480146090961L;\n \n@@ -85,22 +84,23 @@ public StatusModalPage(\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+                    private static final long serialVersionUID = -3503023501954863131L;\n \n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+                    @Override\n+                    public String getCssClass() {\n+                        return \"action\";\n+                    }\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n \n-                cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-            }\n-        });\n+                                cellItem.\n+                                add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n+                            }\n+                });\n \n         final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n@@ -109,13 +109,13 @@ public void populateItem(\n                 rowsPerPage,\n                 pageRef) {\n \n-            private static final long serialVersionUID = 6510391461033818316L;\n+                    private static final long serialVersionUID = 6510391461033818316L;\n \n-            @Override\n-            public boolean isElementEnabled(final StatusBean element) {\n-                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n-            }\n-        };\n+                    @Override\n+                    public boolean isElementEnabled(final StatusBean element) {\n+                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+                    }\n+                };\n \n         final String pageId = attributableTO instanceof RoleTO ? \"Roles\" : \"Users\";\n \n@@ -248,7 +248,7 @@ public void onClick(final AjaxRequestTarget target) {\n         add(table);\n     }\n \n-    class AttributableStatusProvider extends StatusBeanProvider {\n+    private class AttributableStatusProvider extends AbstractStatusBeanProvider {\n \n         private static final long serialVersionUID = 4586969457669796621L;\n \n@@ -259,9 +259,7 @@ public AttributableStatusProvider() {\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public List<StatusBean> getStatusBeans() {\n-\n-            final List<ConnObjectWrapper> connObjects =\n-                    statusUtils.getConnectorObjects(Collections.<AbstractAttributableTO>singleton(attributableTO));\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(attributableTO);\n \n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n "},{"sha":"c07ec1de82c8a490115c141bc793a9b70f55f7da","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.commons.RoleTreeBuilder;\n import org.apache.syncope.console.commons.RoleUtils;\n-import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.syncope.console.pages.MembershipModalPage;\n import org.apache.syncope.console.pages.UserModalPage;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;"},{"sha":"19d81fc8ee91bd8987f9fd857d3be102b6bb7e94","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.console.commons.RoleTreeBuilder;\n import org.apache.syncope.console.commons.RoleUtils;\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n-import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.console.wicket.markup.html.form.NonI18nPalette;"},{"sha":"e7a06c73f7b76fb349eb6f2cc2f297bb8cf4bee2","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RolePanel.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -27,12 +27,10 @@\n import java.util.List;\n \n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.console.commons.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.RoleModalPage;\n import org.apache.syncope.console.rest.AuthRestClient;\n-import org.apache.syncope.console.rest.RoleRestClient;\n-import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.wicket.PageReference;\n@@ -51,9 +49,6 @@ public class RolePanel extends Panel {\n     @SpringBean\n     private AuthRestClient authRestClient;\n \n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n@@ -77,22 +72,22 @@ public Builder(final String id) {\n             this.id = id;\n         }\n \n-        public RolePanel.Builder form(final Form form) {\n+        public Builder form(final Form form) {\n             this.form = form;\n             return this;\n         }\n \n-        public RolePanel.Builder roleTO(final RoleTO roleTO) {\n+        public Builder roleTO(final RoleTO roleTO) {\n             this.roleTO = roleTO;\n             return this;\n         }\n \n-        public RolePanel.Builder roleModalPageMode(final RoleModalPage.Mode mode) {\n+        public Builder roleModalPageMode(final RoleModalPage.Mode mode) {\n             this.mode = mode;\n             return this;\n         }\n \n-        public RolePanel.Builder pageRef(final PageReference pageReference) {\n+        public Builder pageRef(final PageReference pageReference) {\n             this.pageReference = pageReference;\n             return this;\n         }"},{"sha":"4368f7bf4a531537710fb006836d05d298ae8ad4","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":22,"deletions":17,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,20 +20,19 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.commons.StatusUtils;\n-import org.apache.syncope.console.commons.StatusUtils.ConnObjectWrapper;\n-import org.apache.syncope.console.commons.StatusUtils.Status;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n+import org.apache.syncope.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.console.commons.status.Status;\n import org.apache.syncope.console.markup.html.list.AltListView;\n import org.apache.syncope.console.pages.ConnObjectModalPage;\n import org.apache.syncope.console.rest.RoleRestClient;\n@@ -109,7 +108,7 @@ public <T extends AbstractAttributableTO> StatusPanel(\n \n         statusUtils = new StatusUtils(attributable instanceof RoleTO ? roleRestClient : userRestClient);\n \n-        connObjects = statusUtils.getConnectorObjects(Collections.<AbstractAttributableTO>singleton(attributable));\n+        connObjects = statusUtils.getConnectorObjects(attributable);\n \n         final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n         initialStatusBeanMap = new LinkedHashMap<String, StatusBean>(connObjects.size() + 1);\n@@ -154,13 +153,17 @@ public <T extends AbstractAttributableTO> StatusPanel(\n             private static final long serialVersionUID = -151291731388673682L;\n \n             @Override\n-            protected void onUpdate(AjaxRequestTarget target) {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 // ignore\n             }\n         });\n         add(checkGroup);\n \n-        add(new CheckGroupSelector(\"groupselector\", checkGroup));\n+        CheckGroupSelector groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n+        if (attributable instanceof RoleTO) {\n+            groupSelector.setVisible(false);\n+        }\n+        add(groupSelector);\n \n         statusBeansListView = new AltListView<StatusBean>(\"resources\", statusBeans) {\n \n@@ -171,6 +174,9 @@ protected void populateItem(final ListItem<StatusBean> item) {\n                 item.add(statusUtils.getStatusImage(\"icon\", item.getModelObject().getStatus()));\n \n                 final Check<StatusBean> check = new Check<StatusBean>(\"check\", item.getModel(), checkGroup);\n+                if (attributable instanceof RoleTO) {\n+                    check.setVisible(false);\n+                }\n                 item.add(check);\n \n                 item.add(new Label(\"resource\", new ResourceModel(item.getModelObject().getResourceName(), item\n@@ -188,8 +194,9 @@ protected void populateItem(final ListItem<StatusBean> item) {\n                         item.getModelObject().getResourceName(),\n                         connObjects);\n \n-                if (pageref != null && connObjectTO != null) {\n-\n+                if (pageref == null || connObjectTO == null) {\n+                    item.add(new Label(\"connObject\", new Model<String>()));\n+                } else {\n                     final ActionLinksPanel connObject = new ActionLinksPanel(\"connObject\", new Model(), pageref);\n \n                     connObject.add(new ActionLink() {\n@@ -213,21 +220,19 @@ public Page createPage() {\n                     }, ActionLink.ActionType.SEARCH, \"Resources\", \"getConnectorObject\");\n \n                     item.add(connObject);\n-                } else {\n-                    item.add(new Label(\"connObject\", new Model<String>()));\n                 }\n             }\n         };\n         statusBeansListView.setReuseItems(true);\n         checkGroup.add(statusBeansListView);\n     }\n \n-    public PropagationRequestTO getPropagationRequestTO() {\n-        PropagationRequestTO result = null;\n+    public StatusMod getStatusMod() {\n+        StatusMod result = null;\n \n         Collection<StatusBean> statusBeans = checkGroup.getModel().getObject();\n         if (statusBeans != null && !statusBeans.isEmpty()) {\n-            result = StatusUtils.buildPropagationRequestTO(statusBeans);\n+            result = StatusUtils.buildStatusMod(statusBeans);\n \n         }\n \n@@ -249,7 +254,7 @@ public void updateStatusBeans(final List<StatusBean> statusBeans) {\n \n         for (StatusBean statusBean : statusBeans) {\n             if (!checkGroup.getModelObject().contains(statusBean)\n-                    && statusBean.getStatus() == StatusUtils.Status.NOT_YET_SUBMITTED) {\n+                    && statusBean.getStatus() == Status.NOT_YET_SUBMITTED) {\n \n                 checkGroup.getModelObject().add(statusBean);\n             }"},{"sha":"e291c0e36fc26d22c6c9e15fbfd8a403611e6dc3","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -88,7 +88,7 @@ public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id,\n     @Override\n     protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n         final List<IColumn<AbstractAttributableTO, String>> columns =\n-                new ArrayList<IColumn<AbstractAttributableTO, String>>();\n+                 new ArrayList<IColumn<AbstractAttributableTO, String>>();\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n             final Field field = ReflectionUtils.findField(UserTO.class, name);"},{"sha":"711857d5cdfdf9d28add84a38586cacebd864b67","filename":"console/src/main/java/org/apache/syncope/console/rest/AuthRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -50,6 +50,6 @@ public List<String> getAllEntitlements() {\n      */\n     public List<String> getOwnedEntitlements() {\n         return new ArrayList<String>(\n-                CollectionWrapper.unwrap(getService(EntitlementService.class).getMyEntitlements()));\n+                CollectionWrapper.unwrap(getService(EntitlementService.class).getOwnEntitlements()));\n     }\n }"},{"sha":"66c55930d2030ab235fbb99bdcd882ac849c8a19","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -210,6 +210,6 @@ public void reload() {\n     }\n \n     public BulkActionRes bulkAction(final BulkAction action) {\n-        return getService(ConnectorService.class).bulkAction(action);\n+        return getService(ConnectorService.class).bulk(action);\n     }\n }"},{"sha":"67138b0046b84074c8ebc30478ce0d748495fcc9","filename":"console/src/main/java/org/apache/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -56,8 +56,8 @@ public void deleteNotification(final Long id) {\n     }\n \n     public List<String> getMailTemplates() {\n-        return CollectionWrapper.unwrapMailTemplates(new ArrayList<MailTemplateTO>(getService(\n-                ConfigurationService.class).getMailTemplates()));\n+        return CollectionWrapper.unwrap(\n+                new ArrayList<MailTemplateTO>(getService(ConfigurationService.class).getMailTemplates()));\n     }\n \n     public List<String> getEvents() {"},{"sha":"89f59c65dd661c92b854382ef10c330830c807c7","filename":"console/src/main/java/org/apache/syncope/console/rest/PolicyRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -84,8 +84,7 @@ public List<String> getCorrelationRuleClasses() {\n         List<String> rules = null;\n \n         try {\n-            rules = CollectionWrapper.unwrapSyncCorrelationRuleClasses(\n-                    getService(PolicyService.class).getSyncCorrelationRuleClasses());\n+            rules = CollectionWrapper.unwrap(getService(PolicyService.class).getSyncCorrelationRuleClasses());\n         } catch (Exception e) {\n             LOG.error(\"While getting all correlation rule classes\", e);\n         }"},{"sha":"5c5cc970efa0f1540cf4585007f28d7b82b84b89","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,15 +19,14 @@\n package org.apache.syncope.console.rest;\n \n import java.util.List;\n-import java.util.Set;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.BulkAssociationAction;\n-import org.apache.syncope.common.to.PropagationActionClassTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n@@ -44,8 +43,7 @@ public List<String> getPropagationActionsClasses() {\n         List<String> actions = null;\n \n         try {\n-            Set<PropagationActionClassTO> response = getService(ResourceService.class).getPropagationActionsClasses();\n-            actions = CollectionWrapper.unwrapPropagationActionClasses(response);\n+            actions = CollectionWrapper.unwrap(getService(ResourceService.class).getPropagationActionsClasses());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all propagation actions classes\", e);\n         }\n@@ -88,15 +86,14 @@ public void delete(final String name) {\n     }\n \n     public BulkActionRes bulkAction(final BulkAction action) {\n-        return getService(ResourceService.class).bulkAction(action);\n+        return getService(ResourceService.class).bulk(action);\n     }\n \n     public BulkActionRes bulkAssociationAction(\n-            String resourceName, BulkAssociationAction bulkAction, Class<? extends AbstractAttributableTO> typeRef) {\n-        if (UserTO.class.isAssignableFrom(typeRef)) {\n-            return getService(ResourceService.class).usersBulkAssociationAction(resourceName, bulkAction);\n-        } else {\n-            return getService(ResourceService.class).rolesBulkAssociationAction(resourceName, bulkAction);\n-        }\n+            final String resourceName, final BulkAssociationAction bulkAssociationAction,\n+            final Class<? extends AbstractAttributableTO> typeRef) {\n+\n+        return getService(ResourceService.class).bulkAssociation(resourceName, bulkAssociationAction,\n+                UserTO.class.isAssignableFrom(typeRef) ? AttributableType.USER : AttributableType.ROLE);\n     }\n }"},{"sha":"ba7e94e19bdf10b53e34fc139c54ebb6ea0538e4","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":19,"deletions":9,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -30,10 +30,13 @@\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -85,12 +88,12 @@ public RoleTO read(final Long id) {\n     }\n \n     public RoleTO update(final RoleMod roleMod) {\n-        return getService(RoleService.class).update(roleMod.getId(), roleMod);\n+        return getService(RoleService.class).update(roleMod.getId(), roleMod).readEntity(RoleTO.class);\n     }\n \n     @Override\n     public RoleTO delete(final Long id) {\n-        return getService(RoleService.class).delete(id);\n+        return getService(RoleService.class).delete(id).readEntity(RoleTO.class);\n     }\n \n     @Override\n@@ -99,14 +102,21 @@ public BulkActionRes bulkAction(final BulkAction action) {\n     }\n \n     public RoleTO unlink(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).unlink(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n     }\n \n-    public RoleTO unassign(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).unassign(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    public RoleTO deprovision(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n     }\n \n-    public RoleTO deprovision(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).deprovision(roleId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    public RoleTO unassign(final long roleId, final List<StatusBean> statuses) {\n+        return getService(RoleService.class).associate(roleId, ResourceAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n     }\n+\n }"},{"sha":"75ce026a9565cd57f87b88257357d46719baee2d","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -313,9 +313,8 @@ public List<String> getAllValidatorClasses() {\n         List<String> response = null;\n \n         try {\n-            List<ValidatorTO> validators = new ArrayList<ValidatorTO>(getService(ConfigurationService.class)\n-                    .getValidators());\n-            response = CollectionWrapper.unwrapValidator(validators);\n+            response = CollectionWrapper.unwrap(\n+                    new ArrayList<ValidatorTO>(getService(ConfigurationService.class).getValidators()));\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all validators\", e);\n         }"},{"sha":"d8a34f0fd47896c02307ccbb3801df3998dc6f45","filename":"console/src/main/java/org/apache/syncope/console/rest/TaskRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -56,7 +56,7 @@ public List<String> getJobClasses() {\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all job classes\", e);\n         }\n-        return CollectionWrapper.unwrapJobClasses(jobClasses);\n+        return CollectionWrapper.unwrap(jobClasses);\n     }\n \n     public List<String> getSyncActionsClasses() {\n@@ -67,7 +67,7 @@ public List<String> getSyncActionsClasses() {\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all sync actions classes\", e);\n         }\n-        return CollectionWrapper.unwrapSyncActionClasses(actions);\n+        return CollectionWrapper.unwrap(actions);\n     }\n \n     /**\n@@ -167,6 +167,6 @@ public void updateSyncTask(final SyncTaskTO taskTO) {\n     }\n \n     public BulkActionRes bulkAction(final BulkAction action) {\n-        return getService(TaskService.class).bulkAction(action);\n+        return getService(TaskService.class).bulk(action);\n     }\n }"},{"sha":"ad9b01acf0159464d98fc91f13fcdc6e04decbbc","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRequestRestClient.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,14 +24,30 @@\n import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.UserRequestType;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n @Component\n public class UserRequestRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 171408947099311191L;\n \n+    public boolean isSelfRegistrationAllowed() {\n+        Boolean result = null;\n+        try {\n+            result = Boolean.valueOf(getService(UserRequestService.class).getOptions().\n+                    getHeaderString(RESTHeaders.USERREQUEST_CREATE_ALLOWED.toString()));\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While seeking if self registration is allowed\", e);\n+        }\n+\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n+    }\n+\n     public List<UserRequestTO> list() {\n         return getService(UserRequestService.class).list();\n     }"},{"sha":"9192d4d8b44ab74625662562c2b1ee0370ecc9c7","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":27,"deletions":25,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -28,11 +29,14 @@\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.commons.StatusUtils;\n+import org.apache.syncope.console.commons.status.StatusBean;\n+import org.apache.syncope.console.commons.status.StatusUtils;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -66,12 +70,12 @@ public UserTO create(final UserTO userTO) {\n     }\n \n     public UserTO update(final UserMod userModTO) {\n-        return getService(UserService.class).update(userModTO.getId(), userModTO);\n+        return getService(UserService.class).update(userModTO.getId(), userModTO).readEntity(UserTO.class);\n     }\n \n     @Override\n     public UserTO delete(final Long id) {\n-        return getService(UserService.class).delete(id);\n+        return getService(UserService.class).delete(id).readEntity(UserTO.class);\n     }\n \n     public UserTO read(final Long id) {\n@@ -84,16 +88,6 @@ public UserTO read(final Long id) {\n         return userTO;\n     }\n \n-    public UserTO read(final String username) {\n-        UserTO userTO = null;\n-        try {\n-            userTO = getService(UserService.class).read(username);\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While reading a user\", e);\n-        }\n-        return userTO;\n-    }\n-\n     public UserTO readSelf() {\n         return getService(UserService.class).readSelf();\n     }\n@@ -115,28 +109,36 @@ public ConnObjectTO getConnectorObject(final String resourceName, final Long id)\n         return getService(ResourceService.class).getConnectorObject(resourceName, AttributableType.USER, id);\n     }\n \n-    public UserTO suspend(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).suspend(userId, StatusUtils.buildPropagationRequestTO(statuses, false));\n+    public void suspend(final long userId, final List<StatusBean> statuses) {\n+        StatusMod statusMod = StatusUtils.buildStatusMod(statuses, false);\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        getService(UserService.class).status(userId, statusMod);\n     }\n \n-    public UserTO reactivate(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).reactivate(userId, StatusUtils.buildPropagationRequestTO(statuses, true));\n+    public void reactivate(final long userId, final List<StatusBean> statuses) {\n+        StatusMod statusMod = StatusUtils.buildStatusMod(statuses, true);\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        getService(UserService.class).status(userId, statusMod);\n     }\n \n     @Override\n     public BulkActionRes bulkAction(final BulkAction action) {\n-        return getService(UserService.class).bulkAction(action);\n+        return getService(UserService.class).bulk(action);\n     }\n \n-    public UserTO unlink(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).unlink(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    public void unlink(final long userId, final List<StatusBean> statuses) {\n+        getService(UserService.class).associate(userId, ResourceAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class));\n     }\n \n-    public UserTO unassign(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).unassign(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    public void deprovision(final long userId, final List<StatusBean> statuses) {\n+        getService(UserService.class).associate(userId, ResourceAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class));\n     }\n \n-    public UserTO deprovision(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).deprovision(userId, StatusUtils.buildPropagationTargetsTO(statuses));\n+    public void unassign(final long userId, final List<StatusBean> statuses) {\n+        getService(UserService.class).associate(userId, ResourceAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceNameTO.class));\n     }\n+\n }"},{"sha":"b8277e68911e55ede426ab7fad029bea48f3300d","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -27,9 +27,9 @@ operation_succeeded=Operation executed successfully\n operation_error=Error occurred during the requested operation\n alert=Alert:\n confirmDelete=Do you really want to delete the selected item?\n-confirmUnlink=Do you really want to remove the link between user(s) and resource?\n-confirmUnassign=Do you really want to remove the assignment between user(s) and resource?\n-confirmDeprovision=Do you really want to de-provision user(s)?\n+confirmUnlink=Do you really want to remove the link between the selected item(s) and the resource?\n+confirmUnassign=Do you really want to remove the assignment between the selected item(s) and the resource?\n+confirmDeprovision=Do you really want to de-provision the selected item(s)?\n \n \n unauthorizedInstantiationException=Missing authorization."},{"sha":"04b20e76a47d6355c508cfdaa5dd9b5548002ca0","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -27,9 +27,9 @@ operation_succeeded=Operazione eseguita con successo\n operation_error=Attenzione si \\u00e8 verificato un errore durante l'esecuzione dell'operazione richiesta\n alert=Attenzione:\n confirmDelete=Vuoi davvero procedere con la cancellazione?\n-confirmUnlink=Vuoi davvero procedere rimuovendo il link tra utente/i e risorsa?\n-confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento tra utente/i e risorsa?\n-confirmDeprovision=Vuoi davvero procedere con il de-provisioning dell'utente?\n+confirmUnlink=Vuoi davvero procedere rimuovendo il link con la risorsa?\n+confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento sulla risorsa?\n+confirmDeprovision=Vuoi davvero procedere con il de-provisioning?\n \n unauthorizedInstantiationException=Autorizzazione mancante.\n accessControlException=Autorizzazione mancante durante la comunicazione con Syncope core."},{"sha":"86ba39b7d3b889363345da11ca597bf880352416","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -27,9 +27,9 @@ operation_succeeded=Opera\\u00e7\\u00e3o executada com sucesso\n operation_error=Um erro ocorreu ao executar esta opera\\u00e7\\u00e3o\n alert=Alerta:\n confirmDelete=Voc\\u00ea realmente deseja apagar este item selecionado?\n-confirmUnlink=Voc\\u00ea realmente deseja apagar o v\\u00ednculo entre o usu\\u00e1rio e de recursos?\n-confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o usu\\u00e1rio e de recursos?\n-confirmDeprovision=Voc\\u00ea realmente de-provision usu\\u00e1rio?\n+confirmUnlink=Voc\\u00ea realmente deseja apagar o v\\u00ednculo entre o item e de recursos?\n+confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o item e de recursos?\n+confirmDeprovision=Voc\\u00ea realmente de-provision item?\n \n unauthorizedInstantiationException=Falta de autoriza\\u00e7\\u00e3o para concluir.\n accessControlException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core."},{"sha":"0bbea911fa5d3da4dec72383bc26173419a08f10","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage.html","status":"renamed","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,24 +16,26 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n-  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n-  <style>\n-    #dataTableSpan{\n-      display:  block;\n-      clear:  both;\n-      float: none;\n-      margin: 10px;\n-      padding-top: 10px;\n-    }\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+    <style>\n+      #dataTableSpan{\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        margin: 10px;\n+        padding-top: 10px;\n+      }\n \n-    #dataTableSpan table{\n-      width: 100%;\n-    }\n-  </style>\n-</wicket:head>\n-<wicket:extend>\n-  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-  <span wicket:id=\"resourceDatatable\" id=\"dataTableSpan\">[resources]</span>\n-  <wicket:child />\n-</wicket:extend>\n+      #dataTableSpan table{\n+        width: 100%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+    <span wicket:id=\"resourceDatatable\" id=\"dataTableSpan\">[resources]</span>\n+    <wicket:child />\n+  </wicket:extend>\n+</html>","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage.html"},{"sha":"16b74ccaab9d1ee4bb1cd4365be3a9dc8c88536f","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage.properties"},{"sha":"9d477bd5dc6d8c0b7c5d6e9fc378b2c82bc961da","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage_it.properties"},{"sha":"6301e36fe12972aa12917ecb1bedf276dbca728d","filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModalPage_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","previous_filename":"console/src/main/resources/org/apache/syncope/console/pages/AbstractStatusModlaPage_pt_BR.properties"},{"sha":"0ddebcc10b35572eff1a3c19721144f5278bb46d","filename":"console/src/main/resources/org/apache/syncope/console/pages/ApprovalModalPage.html","status":"modified","additions":29,"deletions":27,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,35 +16,37 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:extend>\n-  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-<div style=\"margin:10px\">\n-  <form wicket:id=\"form\">\n-    <div id=\"formtable\">\n-      <div class=\"tablerow\" wicket:id=\"propView\">\n-        <div class=\"tablecolumn_label medium_dynamicsize\">\n-          <span wicket:id=\"key\">[key]</span>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+    <div style=\"margin:10px\">\n+      <form wicket:id=\"form\">\n+        <div id=\"formtable\">\n+          <div class=\"tablerow\" wicket:id=\"propView\">\n+            <div class=\"tablecolumn_label medium_dynamicsize\">\n+              <span wicket:id=\"key\">[key]</span>\n+            </div>\n+            <div class=\"tablecolumn_field medium_dynamicsize\">\n+              <span wicket:id=\"value\">[value]</span>\n+\n+            </div>\n+          </div>\n         </div>\n-        <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"value\">[value]</span>\n \n+        <div style=\"margin: 20px 0\">\n+          <input type=\"button\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"userDetails\"/>\n+          <input type=\"submit\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"apply\"/>\n+          <input type=\"button\"\n+                 accept=\"\"class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"cancel\"/>\n         </div>\n-      </div>\n-    </div>\n \n-    <div style=\"margin: 20px 0\">\n-      <input type=\"button\"\n-             class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-             wicket:id=\"userDetails\"/>\n-      <input type=\"submit\"\n-             class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-             wicket:id=\"apply\"/>\n-      <input type=\"button\"\n-             accept=\"\"class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-             wicket:id=\"cancel\"/>\n+      </form>\n+      <div wicket:id=\"editUserWin\">[Show modal window for editing user under approval]</div>\n     </div>\n-\n-  </form>\n-  <div wicket:id=\"editUserWin\">[Show modal window for editing user under approval]</div>\n-</div>\n-</wicket:extend>\n+  </wicket:extend>\n+</html>"},{"sha":"9e5d497e632a1a0a67966bb214d62d3a707378ae","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionModalPage.html","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,28 +16,30 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n-  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n-</wicket:head>\n-<wicket:extend>\n-  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+  </wicket:head>\n+  <wicket:extend>\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n \n-<div id=\"selectedObjects\">\n-  <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n+    <div id=\"selectedObjects\">\n+      <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n \n-  <div id=\"actionRow\" class=\"pageRowElement\">\n-    <div id=\"actions\">\n-      <div id=\"actionPanel\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-        <span wicket:id=\"actions\">[Actions]</span>\n-      </div>\n+      <div id=\"actionRow\" class=\"pageRowElement\">\n+        <div id=\"actions\">\n+          <div id=\"actionPanel\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <span wicket:id=\"actions\">[Actions]</span>\n+          </div>\n \n-      <div id=\"cancelBtmForm\">\n-        <form wicket:id=\"form\">\n-          <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n-        </form>\n+          <div id=\"cancelBtmForm\">\n+            <form wicket:id=\"form\">\n+              <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n+                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n+            </form>\n+          </div>\n+        </div>\n       </div>\n     </div>\n-  </div>\n-</div>\n-</wicket:extend>\n+  </wicket:extend>\n+</html>"},{"sha":"6e44d6b07b29d142352bab6b705f1e8e5e399728","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleSummaryPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -26,7 +26,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"rootPanel\">\n-      <div style=\"float:left; width:65%;\">\n+      <div style=\"float:left; width:70%;\">\n         <p style=\"height:15px; margin-top: 0px;\" class=\"ui-widget ui-corner-all ui-widget-header\">\n           <span wicket:id=\"actionLink\"/>\n         </p>"},{"sha":"a169d31e64e66471d6c18ecd79971aaa68482ba5","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel.html","status":"modified","additions":34,"deletions":32,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,39 +16,41 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <div style=\"float:left; width:65%;\">\n-    <p style=\"height:15px; margin-top: 0px;\" class=\"ui-widget ui-corner-all ui-widget-header\">\n-    <wicket:message key=\"title\"/>\n-    <span wicket:id=\"displayName\"/>\n-    <span wicket:id=\"actionLink\"/>\n-    </p>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div style=\"float:left; width:70%;\">\n+      <p style=\"height:15px; margin-top: 0px;\" class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <wicket:message key=\"title\"/>\n+        <span wicket:id=\"displayName\"/>\n+        <span wicket:id=\"actionLink\"/>\n+      </p>\n \n-    <form wicket:id=\"roleForm\">\n-      <div id=\"tabs\" style=\"margin: 0px;\">\n-        <ul>\n-          <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n-          <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n-          <li><a href=\"#attrs\"><span><wicket:message key=\"attrs\"/></span></a></li>\n-          <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n-          <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n-          <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n-          <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n-          <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n-          <li><a href=\"#users\"><span><wicket:message key=\"users\"/></span></a></li>\n-        </ul>\n-        <div wicket:id=\"rolePanel\">\n-        </div>\n-        <div id=\"users\">\n-          <div wicket:id=\"userListContainer\">\n-            <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                   wicket:id=\"search\"/>\n-            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n-              <span wicket:id=\"userList\"> [userList] </span>\n+      <form wicket:id=\"roleForm\">\n+        <div id=\"tabs\" style=\"margin: 0px;\">\n+          <ul>\n+            <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n+            <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n+            <li><a href=\"#attrs\"><span><wicket:message key=\"attrs\"/></span></a></li>\n+            <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n+            <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n+            <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n+            <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n+            <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n+            <li><a href=\"#users\"><span><wicket:message key=\"users\"/></span></a></li>\n+          </ul>\n+          <div wicket:id=\"rolePanel\">\n+          </div>\n+          <div id=\"users\">\n+            <div wicket:id=\"userListContainer\">\n+              <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                     wicket:id=\"search\"/>\n+              <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n+                <span wicket:id=\"userList\"> [userList] </span>\n+              </div>\n             </div>\n           </div>\n         </div>\n-      </div>\n-    </form>\n-  </div>\n-</wicket:panel>\n+      </form>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"e558a615f27d9a17e9e06f26cb55708da3da2a8e","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/StatusPanel.html","status":"modified","additions":91,"deletions":90,"changes":181,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -16,114 +16,115 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n-  <style>\n-    div.group{\n-      width:100%;\n-    }\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      div.group{\n+        width:100%;\n+      }\n \n-    div#check{\n-      width:8%;\n-      height: 25px;\n-      float:left;\n-    }\n+      div#check{\n+        height: 25px;\n+        float:left;\n+      }\n \n-    div#resource{\n-      margin-top: 3px;\n-      margin-left: 5px;\n-      width: 35%;\n-      height: 25px;\n-      float:left;\n-    }\n+      div#resource{\n+        margin-top: 3px;\n+        margin-left: 5px;\n+        width: 35%;\n+        height: 25px;\n+        float:left;\n+      }\n \n-    div#accountLink{\n-      margin-top: 3px;\n-      width:45%;\n-      height: 25px;\n-      float:left\n-    }\n+      div#accountLink{\n+        margin-top: 3px;\n+        width:45%;\n+        height: 25px;\n+        float:left\n+      }\n \n-    div#status{\n-      margin-top: 3px;\n-      height: 25px;\n-      width: 5%;\n-      float: left;\n-      text-align: center;\n-    }\n+      div#status{\n+        margin-top: 3px;\n+        height: 25px;\n+        width: 5%;\n+        float: left;\n+        text-align: center;\n+      }\n \n-    div#connObject{\n-      margin-top: 3px;\n-      height: 25px;\n-      width: 5%;\n-      float: left;\n-      text-align: center;\n-    }\n+      div#connObject{\n+        margin-top: 3px;\n+        height: 25px;\n+        width: 5%;\n+        float: left;\n+        text-align: center;\n+      }\n \n-    div.assignment {\n-      display: inline-table;\n-      width: 100%\n-    }\n+      div.assignment {\n+        display: inline-table;\n+        width: 100%\n+      }\n \n-    div.assignments {\n-      margin-top: 5px;\n-      display: inline-table;\n-      width: 100%;\n-      border: 1px solid #DDDDDD;\n-      color: #555555;\n-    }\n-  </style>\n-</wicket:head>\n-<wicket:panel>\n-  <div class=\"assignments\">\n-    <div class=\"group\">\n-      <div>\n-        <div id=\"check\">\n-          <input type=\"checkbox\" wicket:id=\"groupselector\" />\n-        </div>\n-\n-        <div id=\"resource\">\n-          <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n-            <wicket:message key=\"resourceheader\"/>\n-          </span>\n-        </div>\n-        <div id=\"accountLink\">\n-          <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n-            <wicket:message key=\"accountlinkheader\"/>\n-          </span>\n-        </div>\n-        <div id=\"status\">\n-          <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n-            <wicket:message key=\"statusheader\"/>\n-          </span>\n-        </div>\n-        <div id=\"connObject\">\n-        </div>\n-      </div>\n-\n-      <span wicket:id=\"group\">\n-\n-        <div wicket:id=\"resources\" class=\"assignment\">\n+      div.assignments {\n+        margin-top: 5px;\n+        display: inline-table;\n+        width: 100%;\n+        border: 1px solid #DDDDDD;\n+        color: #555555;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div class=\"assignments\">\n+      <div class=\"group\">\n+        <div>\n           <div id=\"check\">\n-            <input type=\"checkbox\" wicket:id=\"check\"/>\n+            <input type=\"checkbox\" wicket:id=\"groupselector\" />\n           </div>\n \n           <div id=\"resource\">\n-            <span wicket:id=\"resource\">[resource name]</span>\n+            <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+              <wicket:message key=\"resourceheader\"/>\n+            </span>\n           </div>\n           <div id=\"accountLink\">\n-            <span wicket:id=\"accountLink\">[accountLink]</span>\n+            <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+              <wicket:message key=\"accountlinkheader\"/>\n+            </span>\n           </div>\n           <div id=\"status\">\n-            <img wicket:id=\"icon\"/>\n+            <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+              <wicket:message key=\"statusheader\"/>\n+            </span>\n           </div>\n           <div id=\"connObject\">\n-            <span wicket:id=\"connObject\">[connObject]</span>\n           </div>\n         </div>\n-      </span>\n-    </div>\n \n-  </div>\n+        <span wicket:id=\"group\">\n+\n+          <div wicket:id=\"resources\" class=\"assignment\">\n+            <div id=\"check\">\n+              <input type=\"checkbox\" wicket:id=\"check\"/>\n+            </div>\n+\n+            <div id=\"resource\">\n+              <span wicket:id=\"resource\">[resource name]</span>\n+            </div>\n+            <div id=\"accountLink\">\n+              <span wicket:id=\"accountLink\">[accountLink]</span>\n+            </div>\n+            <div id=\"status\">\n+              <img wicket:id=\"icon\"/>\n+            </div>\n+            <div id=\"connObject\">\n+              <span wicket:id=\"connObject\">[connObject]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </div>\n+\n+    </div>\n \n-  <div wicket:id=\"connObjectWin\">[Show modal window for showing connector object]</div>\n-</wicket:panel>\n+    <div wicket:id=\"connObjectWin\">[Show modal window for showing connector object]</div>\n+  </wicket:panel>\n+</html>"},{"sha":"9e92600239267dfb0c50c7916cc02602366611cc","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationByResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -110,7 +110,7 @@ public final boolean add(final ResourceOperation type, final String resourceName\n      * @param resourceNames target resources\n      * @return whether the operation was successful or not\n      */\n-    public boolean addAll(final ResourceOperation type, final Set<String> resourceNames) {\n+    public boolean addAll(final ResourceOperation type, final Collection<String> resourceNames) {\n         Set<String> set;\n         switch (type) {\n             case CREATE:"},{"sha":"45194cbeebeee75f794e1fc660afa4ba1d188d46","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -64,7 +64,7 @@\n /**\n  * Manage the data propagation to external resources.\n  */\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class PropagationManager {\n \n     /**\n@@ -267,7 +267,7 @@ public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry\n      */\n     public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry<Long, Boolean>> wfResult,\n             final String password, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n-            final Set<String> noPropResourceNames)\n+            final Collection<String> noPropResourceNames)\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(wfResult.getResult().getKey());\n@@ -316,7 +316,7 @@ public List<PropagationTask> getRoleUpdateTaskIds(final WorkflowResult<Long> wfR\n     protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attributable,\n             final String password, final Boolean enable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n-            final PropagationByResource propByRes, final Set<String> noPropResourceNames)\n+            final PropagationByResource propByRes, final Collection<String> noPropResourceNames)\n             throws NotFoundException {\n \n         AbstractAttributableDataBinder binder = attributable instanceof SyncopeUser"},{"sha":"149f254f8e333e6b1e50af1d0812f4995647d7be","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/AbstractResourceAssociator.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractResourceAssociator.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.controller;\n+\n+import java.util.Collection;\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+\n+public abstract class AbstractResourceAssociator<T extends AbstractAttributableTO> {\n+\n+    public abstract T unlink(Long id, Collection<String> resources);\n+\n+    public abstract T unassign(Long id, Collection<String> resources);\n+\n+    public abstract T deprovision(Long userId, Collection<String> resources);\n+}"},{"sha":"891eea1cfbbdd994c454acce68e8162696fc44be","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnectorController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -363,8 +363,8 @@ public void reload() {\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE\")\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n-        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n \n         BulkActionRes res = new BulkActionRes();\n "},{"sha":"a2b25e75b419edd7148b378847baca2270ab404e","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/EntitlementController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FEntitlementController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FEntitlementController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FEntitlementController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -41,7 +41,7 @@ public class EntitlementController extends AbstractController {\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n-    public List<String> listEntitlements() {\n+    public List<String> getAll() {\n         List<Entitlement> entitlements = entitlementDAO.findAll();\n         List<String> result = new ArrayList<String>(entitlements.size());\n         for (Entitlement entitlement : entitlements) {\n@@ -51,7 +51,7 @@ public List<String> listEntitlements() {\n         return result;\n     }\n \n-    public Set<String> getEntitlements() {\n+    public Set<String> getOwn() {\n         Set<String> result = EntitlementUtil.getOwnedEntitlementNames();\n \n         auditManager.audit(Category.authentication, AuthenticationSubCategory.getEntitlements, Result.success,"},{"sha":"396d0bdc0c8b4d695cbde1b75b9e165a45c5daa4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":4,"deletions":59,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n-import java.lang.reflect.Method;\n-import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.EntityExistsException;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n-import org.apache.syncope.common.to.BulkAssociationAction;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -38,7 +33,6 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -92,12 +86,6 @@ public class ResourceController extends AbstractController {\n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n \n-    @Autowired\n-    private UserController userController;\n-\n-    @Autowired\n-    private RoleController roleController;\n-\n     /**\n      * ConnectorObject util.\n      */\n@@ -244,8 +232,8 @@ public ConnObjectTO getConnectorObject(final String resourceName, final Attribut\n             throw new NotFoundException(\"AccountId mapping for \" + type + \" \" + id + \" on resource '\" + resourceName\n                     + \"'\");\n         }\n-        final String accountIdValue =\n-                MappingUtil.getAccountIdValue(attributable, resource, attrUtil.getAccountIdItem(resource));\n+        final String accountIdValue = MappingUtil.getAccountIdValue(\n+                attributable, resource, attrUtil.getAccountIdItem(resource));\n \n         final ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n \n@@ -298,8 +286,8 @@ public boolean check(final ResourceTO resourceTO) {\n     }\n \n     @PreAuthorize(\"hasRole('RESOURCE_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE\")\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n-        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n \n         BulkActionRes res = new BulkActionRes();\n \n@@ -316,47 +304,4 @@ public BulkActionRes bulkAction(final BulkAction bulkAction) {\n \n         return res;\n     }\n-\n-    public BulkActionRes usersBulkAssociationAction(\n-            final String resourceName, final BulkAssociationAction bulkAction) {\n-        return bulkAssociationActionDelegate(userController, bulkAction, resourceName);\n-    }\n-\n-    public BulkActionRes rolesBulkAssociationAction(\n-            final String resourceName, final BulkAssociationAction bulkAction) {\n-        return bulkAssociationActionDelegate(roleController, bulkAction, resourceName);\n-    }\n-\n-    private BulkActionRes bulkAssociationActionDelegate(\n-            final Object obj,\n-            final BulkAssociationAction bulkAction,\n-            final String resourceName) {\n-\n-        final String methodName = bulkAction.getOperation().name().toLowerCase();\n-\n-        try {\n-            final Method method = obj.getClass().getMethod(methodName, Long.class, Collection.class);\n-\n-            final BulkActionRes res = new BulkActionRes();\n-\n-            for (Long id : bulkAction.getTargets()) {\n-                try {\n-                    // audit is delegated to the called userController method ...\n-                    method.invoke(obj, id, Collections.<String>singleton(resourceName));\n-                    res.add(id, BulkActionRes.Status.SUCCESS);\n-                } catch (Exception e) {\n-                    LOG.warn(\"Error performing {} of user {}\", methodName, id, e);\n-                    res.add(id, BulkActionRes.Status.FAILURE);\n-                }\n-            }\n-\n-            return res;\n-        } catch (Exception e) {\n-            LOG.error(\"Error retrieving {} method\", methodName, e);\n-\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(\"Operation execution failed\");\n-            throw sce;\n-        }\n-    }\n }"},{"sha":"eb5981decc1254532808e4421b512c052570e082","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,7 +24,6 @@\n import java.util.List;\n import java.util.Set;\n import javax.annotation.Resource;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -35,7 +34,6 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.RoleSubCategory;\n import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n@@ -65,7 +63,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class RoleController {\n+public class RoleController extends AbstractResourceAssociator<RoleTO> {\n \n     /**\n      * Logger.\n@@ -122,7 +120,7 @@ public RoleTO read(final Long roleId) {\n     @PreAuthorize(\"isAuthenticated() \"\n             + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     @Transactional(readOnly = true)\n-    public RoleTO selfRead(final Long roleId) {\n+    public RoleTO readSelf(final Long roleId) {\n         // Explicit search instead of using binder.getRoleFromId() in order to bypass auth checks - will do here\n         SyncopeRole role = roleDAO.find(roleId);\n         if (role == null) {\n@@ -390,6 +388,7 @@ public RoleTO delete(final Long roleId) {\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n     @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to unlink role({}) and resources {}\", roleId, resources);\n \n@@ -412,6 +411,7 @@ public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n     @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to unassign role({}) and resources {}\", roleId, resources);\n \n@@ -424,6 +424,7 @@ public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n     @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public RoleTO deprovision(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to deprovision role({}) from resources {}\", roleId, resources);\n "},{"sha":"027f685ce5fd0884e55978c9e40336d155b13ccc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -391,8 +391,8 @@ public TaskExecTO deleteExecution(final Long executionId) {\n             + \"(hasRole('TASK_EXECUTE') and \"\n             + \"(#bulkAction.operation == #bulkAction.operation.EXECUTE or \"\n             + \"#bulkAction.operation == #bulkAction.operation.DRYRUN))\")\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n-        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n \n         BulkActionRes res = new BulkActionRes();\n "},{"sha":"d18f52635325f5b20b4ec15c444053c66884b215","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":78,"deletions":169,"changes":247,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -25,22 +25,21 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.BulkActionRes.Status;\n import org.apache.syncope.common.to.MembershipTO;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.UserSubCategory;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.ClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.notification.NotificationManager;\n@@ -76,7 +75,7 @@\n  * @see AbstractController\n  */\n @Component\n-public class UserController {\n+public class UserController extends AbstractResourceAssociator<UserTO> {\n \n     /**\n      * Logger.\n@@ -113,14 +112,24 @@ public class UserController {\n     @Autowired\n     protected NotificationManager notificationManager;\n \n+    @PreAuthorize(\"hasRole('USER_READ')\")\n+    public String getUsername(final Long userId) {\n+        return binder.getUserTO(userId).getUsername();\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_READ')\")\n+    public Long getUserId(final String username) {\n+        return binder.getUserTO(username).getId();\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public int count() {\n         return userDAO.count(EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public int searchCount(final NodeCond searchCondition) throws InvalidSearchConditionException {\n         if (!searchCondition.isValid()) {\n             LOG.error(\"Invalid search condition: {}\", searchCondition);\n@@ -132,10 +141,10 @@ public int searchCount(final NodeCond searchCondition) throws InvalidSearchCondi\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> list() {\n-        List<SyncopeUser> users =\n-                userDAO.findAll(EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n+        List<SyncopeUser> users = userDAO.findAll(\n+                EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n \n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n@@ -149,7 +158,7 @@ public List<UserTO> list() {\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> list(final int page, final int size) {\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n \n@@ -166,7 +175,7 @@ public List<UserTO> list(final int page, final int size) {\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public UserTO read(final Long userId) {\n         UserTO result = binder.getUserTO(userId);\n \n@@ -176,21 +185,10 @@ public UserTO read(final Long userId) {\n         return result;\n     }\n \n-    @PreAuthorize(\"#username == authentication.name or hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public UserTO read(final String username) {\n-        UserTO result = binder.getUserTO(username);\n-\n-        auditManager.audit(Category.user, UserSubCategory.read, Result.success,\n-                \"Successfully read user: \" + username);\n-\n-        return result;\n-    }\n-\n     @PreAuthorize(\"isAuthenticated() \"\n             + \"and not(hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n     @Transactional(readOnly = true)\n-    public UserTO read() {\n+    public UserTO readSelf() {\n         UserTO userTO = binder.getAuthenticatedUserTO();\n \n         auditManager.audit(Category.user, UserSubCategory.read, Result.success,\n@@ -200,15 +198,15 @@ public UserTO read() {\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> search(final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n         return search(searchCondition, -1, -1);\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> search(final NodeCond searchCondition, final int page, final int size)\n             throws InvalidSearchConditionException {\n \n@@ -255,13 +253,12 @@ public UserTO create(final UserTO userTO) {\n         /*\n          * Actual operations: workflow, propagation, notification\n          */\n-\n         WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(actual);\n \n         List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n                 created, actual.getPassword(), actual.getVirAttrs());\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -310,7 +307,7 @@ public UserTO update(final UserMod userMod) {\n             final PropagationByResource origPropByRes = new PropagationByResource();\n             origPropByRes.merge(updated.getPropByRes());\n \n-            Set<String> pwdResourceNames = actual.getPwdPropRequest().getResources();\n+            List<String> pwdResourceNames = actual.getPwdPropRequest().getResourceNames();\n             SyncopeUser user = binder.getUserFromId(updated.getResult().getKey());\n             pwdResourceNames.retainAll(user.getResourceNames());\n             final PropagationByResource pwdPropByRes = new PropagationByResource();\n@@ -347,8 +344,8 @@ public UserTO update(final UserMod userMod) {\n             updated.setPropByRes(origPropByRes);\n         }\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -371,137 +368,48 @@ public UserTO update(final UserMod userMod) {\n         return updatedTO;\n     }\n \n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO activate(final Long userId, final String token) {\n-        return activate(userId, token, null);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO activate(final Long userId, final String token, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to activate \" + userId);\n-\n-        SyncopeUser user = binder.getUserFromId(userId);\n-\n-        return setStatus(user, token, propagationRequestTO, true, \"activate\");\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO activate(final String username, final String token) {\n-        return activate(username, token, null);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO activate(final String username, final String token, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to activate \" + username);\n-\n-        SyncopeUser user = binder.getUserFromUsername(username);\n-\n-        return setStatus(user, token, propagationRequestTO, true, \"activate\");\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO suspend(final Long userId) {\n-        return suspend(userId, null);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO suspend(final Long userId, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to suspend \" + userId);\n-\n-        SyncopeUser user = binder.getUserFromId(userId);\n-\n-        return setStatus(user, null, propagationRequestTO, false, \"suspend\");\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO suspend(final String username) {\n-        return suspend(username, null);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO suspend(final String username, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to suspend \" + username);\n-\n-        SyncopeUser user = binder.getUserFromUsername(username);\n-\n-        return setStatus(user, null, propagationRequestTO, false, \"suspend\");\n-    }\n+    protected WorkflowResult<Long> setStatusOnWfAdapter(final SyncopeUser user, final StatusMod statusMod) {\n+        WorkflowResult<Long> updated;\n \n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO reactivate(final Long userId) {\n-        return reactivate(userId, null);\n-    }\n+        switch (statusMod.getType()) {\n+            case SUSPEND:\n+                updated = uwfAdapter.suspend(user.getId());\n+                break;\n \n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO reactivate(final Long userId, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to reactivate \" + userId);\n+            case REACTIVATE:\n+                updated = uwfAdapter.reactivate(user.getId());\n+                break;\n \n-        SyncopeUser user = binder.getUserFromId(userId);\n+            case ACTIVATE:\n+            default:\n+                updated = uwfAdapter.activate(user.getId(), statusMod.getToken());\n+                break;\n \n-        return setStatus(user, null, propagationRequestTO, true, \"reactivate\");\n-    }\n+        }\n \n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO reactivate(final String username) {\n-        return reactivate(username, null);\n+        return updated;\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public UserTO reactivate(final String username, final PropagationRequestTO propagationRequestTO) {\n-        LOG.debug(\"About to reactivate \" + username);\n-\n-        SyncopeUser user = binder.getUserFromUsername(username);\n+    @Transactional(rollbackFor = { Throwable.class })\n+    public UserTO status(final StatusMod statusMod) {\n+        LOG.debug(\"About to mod status {}\", statusMod);\n \n-        return setStatus(user, null, propagationRequestTO, true, \"reactivate\");\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_DELETE')\")\n-    public UserTO delete(final Long userId) {\n-        LOG.debug(\"User delete called with {}\", userId);\n-\n-        return doDelete(userId);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_DELETE')\")\n-    public UserTO delete(final String username) {\n-        LOG.debug(\"User delete called with {}\", username);\n-\n-        UserTO result = binder.getUserTO(username);\n-        long userId = result.getId();\n-\n-        return doDelete(userId);\n-    }\n-\n-    protected UserTO setStatus(final SyncopeUser user, final String token,\n-            final PropagationRequestTO propagationRequestTO, final boolean status, final String task) {\n-\n-        LOG.debug(\"About to set 'enabled:{}' status to {}\", user, status);\n+        SyncopeUser user = binder.getUserFromId(statusMod.getId());\n \n         WorkflowResult<Long> updated;\n-        if (propagationRequestTO == null || propagationRequestTO.isOnSyncope()) {\n-            updated = setStatusOnWfAdapter(user, token, task);\n+        if (statusMod.isOnSyncope()) {\n+            updated = setStatusOnWfAdapter(user, statusMod);\n         } else {\n-            updated = new WorkflowResult<Long>(user.getId(), null, task);\n+            updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n         }\n \n         // Resources to exclude from propagation\n         Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n-        if (propagationRequestTO != null) {\n-            resourcesToBeExcluded.removeAll(propagationRequestTO.getResources());\n-        }\n+        resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, status, resourcesToBeExcluded);\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                user, statusMod.getType() != StatusMod.ModType.SUSPEND, resourcesToBeExcluded);\n         taskExecutor.execute(tasks);\n \n         notificationManager.createTasks(updated.getResult(), updated.getPerformedTasks());\n@@ -516,19 +424,8 @@ protected UserTO setStatus(final SyncopeUser user, final String token,\n         return savedTO;\n     }\n \n-    protected WorkflowResult<Long> setStatusOnWfAdapter(final SyncopeUser user, final String token, final String task) {\n-        WorkflowResult<Long> updated;\n-        if (\"suspend\".equals(task)) {\n-            updated = uwfAdapter.suspend(user.getId());\n-        } else if (\"reactivate\".equals(task)) {\n-            updated = uwfAdapter.reactivate(user.getId());\n-        } else {\n-            updated = uwfAdapter.activate(user.getId(), token);\n-        }\n-        return updated;\n-    }\n-\n-    protected UserTO doDelete(final Long userId) {\n+    @PreAuthorize(\"hasRole('USER_DELETE')\")\n+    public UserTO delete(final Long userId) {\n         LOG.debug(\"User delete called for {}\", userId);\n \n         List<SyncopeRole> ownedRoles = roleDAO.findOwned(binder.getUserFromId(userId));\n@@ -558,8 +455,8 @@ protected UserTO doDelete(final Long userId) {\n         final UserTO userTO = new UserTO();\n         userTO.setId(userId);\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -583,50 +480,60 @@ protected UserTO doDelete(final Long userId) {\n             + \"(hasRole('USER_UPDATE') and \"\n             + \"(#bulkAction.operation == #bulkAction.operation.REACTIVATE or \"\n             + \"#bulkAction.operation == #bulkAction.operation.SUSPEND))\")\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n-        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n \n         BulkActionRes res = new BulkActionRes();\n \n         switch (bulkAction.getOperation()) {\n             case DELETE:\n                 for (String userId : bulkAction.getTargets()) {\n                     try {\n-                        res.add(doDelete(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                        res.add(delete(Long.valueOf(userId)).getId(), Status.SUCCESS);\n                     } catch (Exception e) {\n                         LOG.error(\"Error performing delete for user {}\", userId, e);\n                         res.add(userId, Status.FAILURE);\n                     }\n                 }\n                 break;\n+\n             case SUSPEND:\n                 for (String userId : bulkAction.getTargets()) {\n+                    StatusMod statusMod = new StatusMod();\n+                    statusMod.setId(Long.valueOf(userId));\n+                    statusMod.setType(StatusMod.ModType.SUSPEND);\n                     try {\n-                        res.add(suspend(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                        res.add(status(statusMod).getId(), Status.SUCCESS);\n                     } catch (Exception e) {\n                         LOG.error(\"Error performing suspend for user {}\", userId, e);\n                         res.add(userId, Status.FAILURE);\n                     }\n                 }\n                 break;\n+\n             case REACTIVATE:\n                 for (String userId : bulkAction.getTargets()) {\n+                    StatusMod statusMod = new StatusMod();\n+                    statusMod.setId(Long.valueOf(userId));\n+                    statusMod.setType(StatusMod.ModType.REACTIVATE);\n                     try {\n-                        res.add(reactivate(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                        res.add(status(statusMod).getId(), Status.SUCCESS);\n                     } catch (Exception e) {\n                         LOG.error(\"Error performing reactivate for user {}\", userId, e);\n                         res.add(userId, Status.FAILURE);\n                     }\n                 }\n                 break;\n+\n             default:\n         }\n \n         return res;\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public UserTO unlink(final Long userId, final Collection<String> resources) {\n         LOG.debug(\"About to unlink user({}) and resources {}\", userId, resources);\n \n@@ -648,7 +555,8 @@ public UserTO unlink(final Long userId, final Collection<String> resources) {\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public UserTO unassign(final Long userId, final Collection<String> resources) {\n         LOG.debug(\"About to unassign user({}) and resources {}\", userId, resources);\n \n@@ -660,7 +568,8 @@ public UserTO unassign(final Long userId, final Collection<String> resources) {\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n     public UserTO deprovision(final Long userId, final Collection<String> resources) {\n         LOG.debug(\"About to deprovision user({}) from resources {}\", userId, resources);\n \n@@ -670,8 +579,8 @@ public UserTO deprovision(final Long userId, final Collection<String> resources)\n         noPropResourceName.removeAll(resources);\n \n         final List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId, noPropResourceName);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {"},{"sha":"eb8e9585019bebd4cf4df26d7f300240b860d8b2","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserRequestController.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n+import javax.annotation.Resource;\n import javax.persistence.RollbackException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.UserMod;"},{"sha":"460eaaac3779f42cd318ec2b1b6c4610e23d5905","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -61,11 +61,12 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n     private static final String[] IGNORE_USER_PROPERTIES = {\n-        \"memberships\", \"attrs\", \"derAttrs\", \"virAttrs\", \"resources\"};\n+        \"memberships\", \"attrs\", \"derAttrs\", \"virAttrs\", \"resources\"\n+    };\n \n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n@@ -179,8 +180,8 @@ private void setPassword(final SyncopeUser user, final String password,\n         try {\n             user.setPassword(password, getPredefinedCipherAlgoritm(), passwordHistorySize);\n         } catch (NotFoundException e) {\n-            final SyncopeClientException invalidCiperAlgorithm =\n-                    SyncopeClientException.build(ClientExceptionType.NotFound);\n+            final SyncopeClientException invalidCiperAlgorithm = SyncopeClientException.build(\n+                    ClientExceptionType.NotFound);\n             invalidCiperAlgorithm.getElements().add(e.getMessage());\n             scce.addException(invalidCiperAlgorithm);\n "},{"sha":"5a501947ea3444810adcd5ddcf1cd858508108cf","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -30,10 +30,10 @@\n import javax.ws.rs.ext.ExceptionMapper;\r\n import javax.ws.rs.ext.Provider;\r\n import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;\r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.InvalidSearchConditionException;\r\n import org.apache.syncope.common.types.EntityViolationType;\r\n import org.apache.syncope.common.types.ClientExceptionType;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\r\n import org.apache.syncope.common.validation.SyncopeClientException;\r\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\r\n@@ -121,8 +121,7 @@ public Exception fromResponse(final Response r) {\n \r\n     private Response getSyncopeClientExceptionResponse(final SyncopeClientException ex) {\r\n         ResponseBuilder responseBuilder = Response.status(ex.getType().getResponseStatus());\r\n-        responseBuilder.header(\r\n-                SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, ex.getType().getHeaderValue());\r\n+        responseBuilder.header(RESTHeaders.EXCEPTION_TYPE.toString(), ex.getType().getHeaderValue());\r\n \r\n         for (Object element : ex.getElements()) {\r\n             responseBuilder.header(ex.getType().getElementHeaderName(), element);\r\n@@ -138,8 +137,7 @@ private Response getSyncopeClientCompositeExceptionResponse(final SyncopeClientC\n \r\n         ResponseBuilder responseBuilder = Response.status(Response.Status.BAD_REQUEST);\r\n         for (SyncopeClientException sce : ex.getExceptions()) {\r\n-            responseBuilder.header(\r\n-                    SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, sce.getType().getHeaderValue());\r\n+            responseBuilder.header(RESTHeaders.EXCEPTION_TYPE.toString(), sce.getType().getHeaderValue());\r\n \r\n             for (Object element : sce.getElements()) {\r\n                 responseBuilder.header(sce.getType().getElementHeaderName(), element);\r\n@@ -178,7 +176,7 @@ private Response processInvalidEntityExceptions(final Exception ex) {\n \r\n             ClientExceptionType exType = ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\r\n \r\n-            builder.header(SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, exType.getHeaderValue());\r\n+            builder.header(RESTHeaders.EXCEPTION_TYPE.toString(), exType.getHeaderValue());\r\n \r\n             for (Map.Entry<Class<?>, Set<EntityViolationType>> violation : iee.getViolations().entrySet()) {\r\n                 for (EntityViolationType violationType : violation.getValue()) {\r\n@@ -225,8 +223,7 @@ private Response processBadRequestExceptions(final Exception ex) {\n     private Response buildResponse(final ResponseBuilder responseBuilder, final ClientExceptionType hType,\r\n             final String msg) {\r\n \r\n-        return responseBuilder.header(\r\n-                SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, hType.getHeaderValue()).\r\n+        return responseBuilder.header(RESTHeaders.EXCEPTION_TYPE.toString(), hType.getHeaderValue()).\r\n                 header(hType.getElementHeaderName(), msg).\r\n                 build();\r\n     }\r"},{"sha":"828d969ebacff8c2e4d3b757a0805e80b1acee6a","filename":"core/src/main/java/org/apache/syncope/core/services/AbstractServiceImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,9 +19,16 @@\n package org.apache.syncope.core.services;\n \n import javax.ws.rs.core.UriInfo;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n abstract class AbstractServiceImpl implements ContextAware {\n \n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractServiceImpl.class);\n+\n     protected UriInfo uriInfo;\n \n     @Override"},{"sha":"157416e7b025842159a739047bd6b3b904256c9f","filename":"core/src/main/java/org/apache/syncope/core/services/ConfigurationServiceImpl.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -22,17 +22,16 @@\n import java.io.OutputStream;\r\n import java.net.URI;\r\n import java.util.List;\r\n-import java.util.Set;\r\n \r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import javax.ws.rs.core.StreamingOutput;\r\n \r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConfigurationService;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\r\n import org.apache.syncope.core.rest.controller.ConfigurationController;\r\n@@ -50,7 +49,7 @@ public Response create(final ConfigurationTO configurationTO) {\n         ConfigurationTO created = controller.create(configurationTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\r\n         return Response.created(location).\r\n-                header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getKey()).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), created.getKey()).\r\n                 build();\r\n     }\r\n \r\n@@ -63,11 +62,10 @@ public void write(final OutputStream os) throws IOException {\n                 controller.export(os);\r\n             }\r\n         };\r\n-        return Response.ok(sout)\r\n-                .type(MediaType.TEXT_XML)\r\n-                .header(SyncopeConstants.CONTENT_DISPOSITION_HEADER,\r\n-                \"attachment; filename=\" + ContentLoader.CONTENT_XML)\r\n-                .build();\r\n+        return Response.ok(sout).\r\n+                type(MediaType.TEXT_XML).\r\n+                header(RESTHeaders.CONTENT_DISPOSITION.toString(), \"attachment; filename=\" + ContentLoader.CONTENT_XML).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -77,14 +75,14 @@ public void delete(final String key) {\n \r\n     @Override\r\n     @SuppressWarnings(\"unchecked\")\r\n-    public Set<MailTemplateTO> getMailTemplates() {\r\n-        return CollectionWrapper.wrapMailTemplates(controller.getMailTemplates());\r\n+    public List<MailTemplateTO> getMailTemplates() {\r\n+        return CollectionWrapper.wrap(controller.getMailTemplates(), MailTemplateTO.class);\r\n     }\r\n \r\n     @Override\r\n     @SuppressWarnings(\"unchecked\")\r\n-    public Set<ValidatorTO> getValidators() {\r\n-        return CollectionWrapper.wrapValidators(controller.getValidators());\r\n+    public List<ValidatorTO> getValidators() {\r\n+        return CollectionWrapper.wrap(controller.getValidators(), ValidatorTO.class);\r\n     }\r\n \r\n     @Override\r"},{"sha":"93fd118321044274241ebe53c0b827db95472a17","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -22,7 +22,6 @@\n import java.util.ArrayList;\r\n import java.util.List;\r\n import javax.ws.rs.core.Response;\r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConnectorService;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n@@ -31,6 +30,7 @@\n import org.apache.syncope.common.to.ConnInstanceTO;\r\n import org.apache.syncope.common.to.SchemaTO;\r\n import org.apache.syncope.common.types.ConnConfProperty;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.core.rest.controller.ConnectorController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n@@ -45,7 +45,9 @@ public class ConnectorServiceImpl extends AbstractServiceImpl implements Connect\n     public Response create(final ConnInstanceTO connInstanceTO) {\r\n         ConnInstanceTO connInstance = controller.create(connInstanceTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(connInstance.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, connInstance.getId()).build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), connInstance.getId()).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -120,7 +122,7 @@ public void reload() {\n     }\r\n \r\n     @Override\r\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n-        return controller.bulkAction(bulkAction);\r\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\r\n+        return controller.bulk(bulkAction);\r\n     }\r\n }\r"},{"sha":"438746b91ff3d2b14a6aa8a80b04b20152102d49","filename":"core/src/main/java/org/apache/syncope/core/services/EntitlementServiceImpl.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FEntitlementServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FEntitlementServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FEntitlementServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -18,8 +18,7 @@\n  */\r\n package org.apache.syncope.core.services;\r\n \r\n-import java.util.HashSet;\r\n-import java.util.Set;\r\n+import java.util.List;\r\n \r\n import org.apache.syncope.common.services.EntitlementService;\r\n import org.apache.syncope.common.to.EntitlementTO;\r\n@@ -35,14 +34,12 @@ public class EntitlementServiceImpl extends AbstractServiceImpl implements Entit\n     private EntitlementController controller;\r\n \r\n     @Override\r\n-    public Set<EntitlementTO> getAllEntitlements() {\r\n-        Set<String> entitlements = new HashSet<String>(controller.listEntitlements());\r\n-        return CollectionWrapper.wrap(entitlements);\r\n+    public List<EntitlementTO> getAllEntitlements() {\r\n+        return CollectionWrapper.wrap(controller.getAll(), EntitlementTO.class);\r\n     }\r\n \r\n     @Override\r\n-    public Set<EntitlementTO> getMyEntitlements() {\r\n-        Set<String> entitlements = controller.getEntitlements();\r\n-        return CollectionWrapper.wrap(entitlements);\r\n+    public List<EntitlementTO> getOwnEntitlements() {\r\n+        return CollectionWrapper.wrap(controller.getOwn(), EntitlementTO.class);\r\n     }\r\n }\r"},{"sha":"eeccd745a7ccb5eaabafb22a5e1ea43f0f01d47c","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -23,9 +23,9 @@\n \n import javax.ws.rs.core.Response;\n \n-import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.services.NotificationService;\n import org.apache.syncope.common.to.NotificationTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.core.rest.controller.NotificationController;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n@@ -40,9 +40,9 @@ public class NotificationServiceImpl extends AbstractServiceImpl implements Noti\n     public Response create(final NotificationTO notificationTO) {\n         NotificationTO createdNotificationTO = controller.create(notificationTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdNotificationTO.getId())).build();\n-        return Response.created(location)\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdNotificationTO.getId())\n-                .build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_ID.toString(), createdNotificationTO.getId()).\n+                build();\n     }\n \n     @Override"},{"sha":"e1e5d891116fce089b4daa99216c1f3368c2e5cb","filename":"core/src/main/java/org/apache/syncope/core/services/PolicyServiceImpl.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,16 +20,15 @@\n \r\n import java.net.URI;\r\n import java.util.List;\r\n-import java.util.Set;\r\n import javax.ws.rs.BadRequestException;\r\n import javax.ws.rs.core.Response;\r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.PolicyService;\r\n import org.apache.syncope.common.to.AccountPolicyTO;\r\n import org.apache.syncope.common.to.CorrelationRuleClassTO;\r\n import org.apache.syncope.common.to.PasswordPolicyTO;\r\n import org.apache.syncope.common.to.AbstractPolicyTO;\r\n import org.apache.syncope.common.to.SyncPolicyTO;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.types.PolicyType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.rest.controller.PolicyController;\r\n@@ -46,7 +45,9 @@ public class PolicyServiceImpl extends AbstractServiceImpl implements PolicyServ\n     public <T extends AbstractPolicyTO> Response create(final T policyTO) {\r\n         AbstractPolicyTO policy = policyController.create(policyTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(policy.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, policy.getId()).build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), policy.getId()).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -116,7 +117,7 @@ public <T extends AbstractPolicyTO> void update(final Long policyId, final T pol\n     }\r\n \r\n     @Override\r\n-    public Set<CorrelationRuleClassTO> getSyncCorrelationRuleClasses() {\r\n-        return CollectionWrapper.wrapSyncCorrelationRuleClasses(policyController.getSyncCorrelationRuleClasses());\r\n+    public List<CorrelationRuleClassTO> getSyncCorrelationRuleClasses() {\r\n+        return CollectionWrapper.wrap(policyController.getSyncCorrelationRuleClasses(), CorrelationRuleClassTO.class);\r\n     }\r\n }\r"},{"sha":"88d8040b89a541d2125070f568a231180c0b77fd","filename":"core/src/main/java/org/apache/syncope/core/services/ReportServiceImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,11 +24,11 @@\n import java.util.List;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n-import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.services.ReportService;\n import org.apache.syncope.common.types.ReportletConfClasses;\n import org.apache.syncope.common.to.ReportExecTO;\n import org.apache.syncope.common.to.ReportTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n import org.apache.syncope.core.persistence.beans.ReportExec;\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n@@ -49,9 +49,9 @@ public class ReportServiceImpl extends AbstractServiceImpl implements ReportServ\n     public Response create(final ReportTO reportTO) {\n         ReportTO createdReportTO = controller.create(reportTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdReportTO.getId())).build();\n-        return Response.created(location)\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdReportTO.getId())\n-                .build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_ID.toString(), createdReportTO.getId()).\n+                build();\n     }\n \n     @Override\n@@ -102,9 +102,9 @@ public void write(final OutputStream os) throws IOException {\n         };\n         String disposition = \"attachment; filename=\" + reportExec.getReport().getName() + \".\" + format.name().\n                 toLowerCase();\n-        return Response.ok(sout)\n-                .header(SyncopeConstants.CONTENT_DISPOSITION_HEADER, disposition)\n-                .build();\n+        return Response.ok(sout).\n+                header(RESTHeaders.CONTENT_DISPOSITION.toString(), disposition).\n+                build();\n     }\n \n     @Override"},{"sha":"847103fdbf367b600ad3a7cfc42007dfa3573607","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":62,"deletions":16,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -19,22 +19,28 @@\n package org.apache.syncope.core.services;\r\n \r\n import java.net.URI;\r\n+import java.util.Collections;\r\n import java.util.List;\r\n import java.util.Set;\r\n+import javax.ws.rs.BadRequestException;\r\n \r\n import javax.ws.rs.core.Response;\r\n \r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ResourceService;\r\n+import org.apache.syncope.common.to.AbstractAttributableTO;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.BulkAssociationAction;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n+import org.apache.syncope.core.rest.controller.AbstractResourceAssociator;\r\n import org.apache.syncope.core.rest.controller.ResourceController;\r\n+import org.apache.syncope.core.rest.controller.RoleController;\r\n+import org.apache.syncope.core.rest.controller.UserController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n@@ -44,13 +50,19 @@ public class ResourceServiceImpl extends AbstractServiceImpl implements Resource\n     @Autowired\r\n     private ResourceController controller;\r\n \r\n+    @Autowired\r\n+    private UserController userController;\r\n+\r\n+    @Autowired\r\n+    private RoleController roleController;\r\n+\r\n     @Override\r\n     public Response create(final ResourceTO resourceTO) {\r\n-        ResourceTO resource = controller.create(resourceTO);\r\n-        URI location = uriInfo.getAbsolutePathBuilder().path(resource.getName()).build();\r\n-        return Response.created(location)\r\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, resource.getName())\r\n-                .build();\r\n+        ResourceTO created = controller.create(resourceTO);\r\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getName()).build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), created.getName()).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -69,8 +81,8 @@ public ResourceTO read(final String resourceName) {\n     }\r\n \r\n     @Override\r\n-    public Set<PropagationActionClassTO> getPropagationActionsClasses() {\r\n-        return CollectionWrapper.wrapPropagationActionClasses(controller.getPropagationActionsClasses());\r\n+    public List<PropagationActionClassTO> getPropagationActionsClasses() {\r\n+        return CollectionWrapper.wrap(controller.getPropagationActionsClasses(), PropagationActionClassTO.class);\r\n     }\r\n \r\n     @Override\r\n@@ -94,17 +106,51 @@ public boolean check(final ResourceTO resourceTO) {\n     }\r\n \r\n     @Override\r\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n-        return controller.bulkAction(bulkAction);\r\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\r\n+        return controller.bulk(bulkAction);\r\n     }\r\n \r\n     @Override\r\n-    public BulkActionRes usersBulkAssociationAction(final String resourceName, final BulkAssociationAction bulkAction) {\r\n-        return controller.usersBulkAssociationAction(resourceName, bulkAction);\r\n+    public BulkActionRes bulkAssociation(final String resourceName,\r\n+            final BulkAssociationAction bulkAssociationAction, final AttributableType type) {\r\n+\r\n+        if (bulkAssociationAction.getOperation() == null || type == AttributableType.MEMBERSHIP) {\r\n+            throw new BadRequestException();\r\n+        }\r\n+\r\n+        AbstractResourceAssociator<? extends AbstractAttributableTO> associator = type == AttributableType.USER\r\n+                ? userController\r\n+                : roleController;\r\n+\r\n+        final BulkActionRes res = new BulkActionRes();\r\n+\r\n+        for (Long id : bulkAssociationAction.getTargets()) {\r\n+            final Set<String> resources = Collections.singleton(resourceName);\r\n+            try {\r\n+                switch (bulkAssociationAction.getOperation()) {\r\n+                    case DEPROVISION:\r\n+                        associator.deprovision(id, resources);\r\n+                        break;\r\n+\r\n+                    case UNASSIGN:\r\n+                        associator.unassign(id, resources);\r\n+                        break;\r\n+\r\n+                    case UNLINK:\r\n+                        associator.unlink(id, resources);\r\n+                        break;\r\n+\r\n+                    default:\r\n+                }\r\n+\r\n+                res.add(id, BulkActionRes.Status.SUCCESS);\r\n+            } catch (Exception e) {\r\n+                LOG.warn(\"While executing {} on {} {}\", bulkAssociationAction.getOperation(), type, id, e);\r\n+                res.add(id, BulkActionRes.Status.FAILURE);\r\n+            }\r\n+        }\r\n+\r\n+        return res;\r\n     }\r\n \r\n-    @Override\r\n-    public BulkActionRes rolesBulkAssociationAction(final String resourceName, final BulkAssociationAction bulkAction) {\r\n-        return controller.rolesBulkAssociationAction(resourceName, bulkAction);\r\n-    }\r\n }\r"},{"sha":"2bca777fa7cc699c1574f6109968716ec12f6816","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":40,"deletions":23,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -24,13 +24,15 @@\n import javax.ws.rs.ServiceUnavailableException;\r\n import javax.ws.rs.core.Response;\r\n \r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.services.InvalidSearchConditionException;\r\n import org.apache.syncope.common.services.RoleService;\r\n-import org.apache.syncope.common.to.PropagationTargetsTO;\r\n+import org.apache.syncope.common.to.ResourceNameTO;\r\n import org.apache.syncope.common.to.RoleTO;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n+import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.rest.controller.RoleController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n@@ -55,15 +57,17 @@ public int count() {\n     public Response create(final RoleTO roleTO) {\r\n         RoleTO created = controller.create(roleTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\r\n-        return Response.created(location)\r\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getId())\r\n-                .entity(created)\r\n-                .build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), created.getId()).\r\n+                entity(created).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n-    public RoleTO delete(final Long roleId) {\r\n-        return controller.delete(roleId);\r\n+    public Response delete(final Long roleId) {\r\n+        RoleTO deleted = controller.delete(roleId);\r\n+        return Response.ok(deleted).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -104,28 +108,41 @@ public int searchCount(final NodeCond searchCondition) throws InvalidSearchCondi\n     }\r\n \r\n     @Override\r\n-    public RoleTO selfRead(final Long roleId) {\r\n-        return controller.selfRead(roleId);\r\n+    public RoleTO readSelf(final Long roleId) {\r\n+        return controller.readSelf(roleId);\r\n     }\r\n \r\n     @Override\r\n-    public RoleTO update(final Long roleId, final RoleMod roleMod) {\r\n-        roleMod.setId(roleId);\r\n-        return controller.update(roleMod);\r\n+    public Response update(final Long roleId, final RoleMod roleMod) {\r\n+        RoleTO updated = controller.update(roleMod);\r\n+        return Response.ok(updated).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n-    public RoleTO unlink(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n-        return controller.unlink(roleId, propagationTargetsTO.getResources());\r\n-    }\r\n+    public Response associate(final Long roleId, final ResourceAssociationActionType type,\r\n+            final List<ResourceNameTO> resourceNames) {\r\n \r\n-    @Override\r\n-    public RoleTO unassign(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n-        return controller.unassign(roleId, propagationTargetsTO.getResources());\r\n-    }\r\n+        RoleTO updated = null;\r\n \r\n-    @Override\r\n-    public RoleTO deprovision(final Long roleId, final PropagationTargetsTO propagationTargetsTO) {\r\n-        return controller.deprovision(roleId, propagationTargetsTO.getResources());\r\n+        switch (type) {\r\n+            case UNLINK:\r\n+                updated = controller.unlink(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n+\r\n+            case UNASSIGN:\r\n+                updated = controller.unassign(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n+\r\n+            case DEPROVISION:\r\n+                updated = controller.deprovision(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n+\r\n+            default:\r\n+                updated = controller.read(roleId);\r\n+        }\r\n+\r\n+        return Response.ok(updated).\r\n+                build();\r\n     }\r\n }\r"},{"sha":"02b690cef9318876c9b4e4d1a41b41497b72486b","filename":"core/src/main/java/org/apache/syncope/core/services/SchemaServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -23,10 +23,10 @@\n \r\n import javax.ws.rs.core.Response;\r\n \r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.SchemaService;\r\n import org.apache.syncope.common.to.AbstractSchemaTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.types.SchemaType;\r\n import org.apache.syncope.core.rest.controller.SchemaController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n@@ -45,9 +45,9 @@ public <T extends AbstractSchemaTO> Response create(final AttributableType attrT\n         T response = controller.create(attrType, schemaType, schemaTO);\r\n \r\n         URI location = uriInfo.getAbsolutePathBuilder().path(response.getName()).build();\r\n-        return Response.created(location)\r\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, response.getName())\r\n-                .build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), response.getName()).\r\n+                build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"ec9cd205c3413b91d47485c45334856298bfe6ef","filename":"core/src/main/java/org/apache/syncope/core/services/TaskServiceImpl.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -20,10 +20,8 @@\n \r\n import java.net.URI;\r\n import java.util.List;\r\n-import java.util.Set;\r\n import javax.ws.rs.BadRequestException;\r\n import javax.ws.rs.core.Response;\r\n-import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.TaskService;\r\n import org.apache.syncope.common.to.BulkAction;\r\n import org.apache.syncope.common.to.BulkActionRes;\r\n@@ -34,6 +32,7 @@\n import org.apache.syncope.common.to.SyncTaskTO;\r\n import org.apache.syncope.common.to.TaskExecTO;\r\n import org.apache.syncope.common.to.AbstractTaskTO;\r\n+import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\r\n import org.apache.syncope.common.types.TaskType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n@@ -62,7 +61,9 @@ public <T extends SchedTaskTO> Response create(final T taskTO) {\n         }\r\n \r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdTask.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdTask.getId()).build();\r\n+        return Response.created(location).\r\n+                header(RESTHeaders.RESOURCE_ID.toString(), createdTask.getId()).\r\n+                build();\r\n     }\r\n \r\n     @Override\r\n@@ -81,13 +82,13 @@ public TaskExecTO execute(final Long taskId, final boolean dryRun) {\n     }\r\n \r\n     @Override\r\n-    public Set<JobClassTO> getJobClasses() {\r\n-        return CollectionWrapper.wrapJobClasses(controller.getJobClasses());\r\n+    public List<JobClassTO> getJobClasses() {\r\n+        return CollectionWrapper.wrap(controller.getJobClasses(), JobClassTO.class);\r\n     }\r\n \r\n     @Override\r\n-    public Set<SyncActionClassTO> getSyncActionsClasses() {\r\n-        return CollectionWrapper.wrapSyncActionClasses(controller.getSyncActionsClasses());\r\n+    public List<SyncActionClassTO> getSyncActionsClasses() {\r\n+        return CollectionWrapper.wrap(controller.getSyncActionsClasses(), SyncActionClassTO.class);\r\n     }\r\n \r\n     @Override\r\n@@ -128,7 +129,7 @@ public void update(final Long taskId, final AbstractTaskTO taskTO) {\n     }\r\n \r\n     @Override\r\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n-        return controller.bulkAction(bulkAction);\r\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\r\n+        return controller.bulk(bulkAction);\r\n     }\r\n }\r"},{"sha":"104b7f931f9c58e479e1cd248428f9714172d92b","filename":"core/src/main/java/org/apache/syncope/core/services/UserRequestServiceImpl.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -23,11 +23,11 @@\n \n import javax.ws.rs.core.Response;\n \n-import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.core.rest.controller.UserRequestController;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n@@ -40,16 +40,11 @@ public class UserRequestServiceImpl extends AbstractServiceImpl implements UserR\n \n     @Override\n     public Response getOptions() {\n-        return Response.ok().header(\"Allow\", \"GET,POST,OPTIONS,HEAD\")\n-                .header(SYNCOPE_CREATE_ALLOWED, controller.isCreateAllowed()).\n+        return Response.ok().header(\"Allow\", \"GET,POST,OPTIONS,HEAD\").\n+                header(RESTHeaders.USERREQUEST_CREATE_ALLOWED.toString(), controller.isCreateAllowed()).\n                 build();\n     }\n \n-    @Override\n-    public boolean isCreateAllowed() {\n-        return controller.isCreateAllowed();\n-    }\n-\n     @Override\n     public Response create(final UserRequestTO userRequestTO) {\n         UserRequestTO outUserRequestTO;\n@@ -69,9 +64,9 @@ public Response create(final UserRequestTO userRequestTO) {\n         }\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(outUserRequestTO.getId())).build();\n-        return Response.created(location)\n-                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, outUserRequestTO.getId())\n-                .build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_ID.toString(), outUserRequestTO.getId()).\n+                build();\n     }\n \n     @Override"},{"sha":"2121d4e21f72c689875fc354d7078e224ad5afbd","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":53,"deletions":78,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -21,16 +21,18 @@\n import java.net.URI;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.SyncopeConstants;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n-import org.apache.syncope.common.to.PropagationTargetsTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.core.rest.controller.UserController;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n@@ -42,24 +44,17 @@ public class UserServiceImpl extends AbstractServiceImpl implements UserService,\n     private UserController controller;\n \n     @Override\n-    public UserTO activate(final Long userId, final String token) {\n-        return controller.activate(userId, token);\n+    public Response getUsername(final Long userId) {\n+        return Response.ok().header(\"Allow\", \"GET,POST,OPTIONS,HEAD\").\n+                header(RESTHeaders.USERNAME.toString(), controller.getUsername(userId)).\n+                build();\n     }\n \n     @Override\n-    public UserTO activate(final Long userId, final String token, final PropagationRequestTO propagationRequestTO) {\n-        return controller.activate(userId, token, propagationRequestTO);\n-    }\n-\n-    @Override\n-    public UserTO activateByUsername(final String username, final String token) {\n-        return controller.activate(username, token);\n-    }\n-\n-    @Override\n-    public UserTO activateByUsername(final String username, final String token,\n-            final PropagationRequestTO propagationRequestTO) {\n-        return controller.activate(username, token, propagationRequestTO);\n+    public Response getUserId(final String username) {\n+        return Response.ok().header(\"Allow\", \"GET,POST,OPTIONS,HEAD\").\n+                header(RESTHeaders.USER_ID.toString(), controller.getUserId(username)).\n+                build();\n     }\n \n     @Override\n@@ -72,14 +67,16 @@ public Response create(final UserTO userTO) {\n         UserTO created = controller.create(userTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\n         return Response.created(location).\n-                header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getId()).\n-                entity(created)\n-                .build();\n+                header(RESTHeaders.RESOURCE_ID.toString(), created.getId()).\n+                entity(created).\n+                build();\n     }\n \n     @Override\n-    public UserTO delete(final Long userId) {\n-        return controller.delete(userId);\n+    public Response delete(final Long userId) {\n+        UserTO deleted = controller.delete(userId);\n+        return Response.ok(deleted).\n+                build();\n     }\n \n     @Override\n@@ -92,39 +89,14 @@ public List<UserTO> list(final int page, final int size) {\n         return controller.list(page, size);\n     }\n \n-    @Override\n-    public UserTO reactivate(final Long userId) {\n-        return controller.reactivate(userId);\n-    }\n-\n-    @Override\n-    public UserTO reactivate(final Long userId, final PropagationRequestTO propagationRequestTO) {\n-        return controller.reactivate(userId, propagationRequestTO);\n-    }\n-\n-    @Override\n-    public UserTO reactivateByUsername(final String username) {\n-        return controller.reactivate(username);\n-    }\n-\n-    @Override\n-    public UserTO reactivateByUsername(final String username, final PropagationRequestTO propagationRequestTO) {\n-        return controller.reactivate(username, propagationRequestTO);\n-    }\n-\n     @Override\n     public UserTO read(final Long userId) {\n         return controller.read(userId);\n     }\n \n-    @Override\n-    public UserTO read(final String username) {\n-        return controller.read(username);\n-    }\n-\n     @Override\n     public UserTO readSelf() {\n-        return controller.read();\n+        return controller.readSelf();\n     }\n \n     @Override\n@@ -135,6 +107,7 @@ public List<UserTO> search(final NodeCond searchCondition) throws InvalidSearchC\n     @Override\n     public List<UserTO> search(final NodeCond searchCondition, final int page, final int size)\n             throws InvalidSearchConditionException {\n+\n         return controller.search(searchCondition, page, size);\n     }\n \n@@ -144,48 +117,50 @@ public int searchCount(final NodeCond searchCondition) throws InvalidSearchCondi\n     }\n \n     @Override\n-    public UserTO suspend(final Long userId) {\n-        return controller.suspend(userId);\n+    public Response update(final Long userId, final UserMod userMod) {\n+        userMod.setId(userId);\n+        UserTO updated = controller.update(userMod);\n+        return Response.ok(updated).\n+                build();\n     }\n \n     @Override\n-    public UserTO suspend(final Long userId, final PropagationRequestTO propagationRequestTO) {\n-        return controller.suspend(userId, propagationRequestTO);\n+    public Response status(final Long userId, final StatusMod statusMod) {\n+        statusMod.setId(userId);\n+        UserTO updated = controller.status(statusMod);\n+        return Response.ok(updated).\n+                build();\n     }\n \n     @Override\n-    public UserTO suspendByUsername(final String username) {\n-        return controller.suspend(username);\n+    public BulkActionRes bulk(final BulkAction bulkAction) {\n+        return controller.bulk(bulkAction);\n     }\n \n     @Override\n-    public UserTO suspendByUsername(final String username, final PropagationRequestTO propagationRequestTO) {\n-        return controller.suspend(username, propagationRequestTO);\n-    }\n+    public Response associate(final Long userId, final ResourceAssociationActionType type,\n+            final List<ResourceNameTO> resourceNames) {\n \n-    @Override\n-    public UserTO update(final Long userId, final UserMod userMod) {\n-        userMod.setId(userId);\n-        return controller.update(userMod);\n-    }\n+        UserTO updated = null;\n \n-    @Override\n-    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n-        return controller.bulkAction(bulkAction);\n-    }\n+        switch (type) {\n+            case UNLINK:\n+                updated = controller.unlink(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-    @Override\n-    public UserTO unlink(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n-        return controller.unlink(userId, propagationTargetsTO.getResources());\n-    }\n+            case UNASSIGN:\n+                updated = controller.unassign(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-    @Override\n-    public UserTO unassign(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n-        return controller.unassign(userId, propagationTargetsTO.getResources());\n-    }\n+            case DEPROVISION:\n+                updated = controller.deprovision(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-    @Override\n-    public UserTO deprovision(final Long userId, final PropagationTargetsTO propagationTargetsTO) {\n-        return controller.deprovision(userId, propagationTargetsTO.getResources());\n+            default:\n+                updated = controller.read(userId);\n+        }\n+\n+        return Response.ok(updated).\n+                build();\n     }\n }"},{"sha":"2d5d29fdf54099a162e4d8e2eb86c9833b4ab84f","filename":"core/src/main/java/org/apache/syncope/core/services/UserWorkflowServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -39,7 +39,7 @@ public WorkflowFormTO claimForm(final String taskId) {\n     }\n \n     @Override\n-    public UserTO executeWorkflow(final String taskId, final UserTO userTO) {\n+    public UserTO executeTask(final String taskId, final UserTO userTO) {\n         return controller.executeWorkflow(userTO, taskId);\n     }\n "},{"sha":"8642ac668741c996ac5e3c6173c68f70cdd8e0b7","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -33,6 +33,8 @@\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.syncope.common.mod.AttributeMod;\n+import org.apache.syncope.common.mod.RoleMod;\n+import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.ConfigurationService;\n import org.apache.syncope.common.services.ConnectorService;\n import org.apache.syncope.common.services.EntitlementService;\n@@ -55,6 +57,7 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.core.util.PasswordEncoder;\n import org.junit.BeforeClass;\n@@ -66,7 +69,7 @@\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:testJDBCContext.xml\"})\n+@ContextConfiguration(locations = { \"classpath:testJDBCContext.xml\" })\n public abstract class AbstractTest {\n \n     /**\n@@ -199,6 +202,19 @@ protected UserTO createUser(final UserTO userTO) {\n         return response.readEntity(UserTO.class);\n     }\n \n+    protected UserTO readUser(final String username) {\n+        return userService.read(Long.valueOf(\n+                userService.getUserId(username).getHeaderString(RESTHeaders.USER_ID.toString())));\n+    }\n+\n+    protected UserTO updateUser(final UserMod userMod) {\n+        return userService.update(userMod.getId(), userMod).readEntity(UserTO.class);\n+    }\n+\n+    protected UserTO deleteUser(final Long id) {\n+        return userService.delete(id).readEntity(UserTO.class);\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     protected <T extends AbstractSchemaTO> T createSchema(final AttributableType kind,\n             final SchemaType type, final T schemaTO) {\n@@ -214,7 +230,7 @@ protected <T extends AbstractSchemaTO> T createSchema(final AttributableType kin\n         return (T) adminClient.getObject(response.getLocation(), SchemaService.class, schemaTO.getClass());\n     }\n \n-    protected RoleTO createRole(final RoleService roleService, final RoleTO newRoleTO) {\n+    protected RoleTO createRole(final RoleTO newRoleTO) {\n         Response response = roleService.create(newRoleTO);\n         if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n@@ -225,6 +241,14 @@ protected RoleTO createRole(final RoleService roleService, final RoleTO newRoleT\n         return adminClient.getObject(response.getLocation(), RoleService.class, RoleTO.class);\n     }\n \n+    protected RoleTO updateRole(final RoleMod roleMod) {\n+        return roleService.update(roleMod.getId(), roleMod).readEntity(RoleTO.class);\n+    }\n+\n+    protected RoleTO deleteRole(final Long id) {\n+        return roleService.delete(id).readEntity(RoleTO.class);\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     protected <T extends AbstractPolicyTO> T createPolicy(final T policy) {\n         Response response = policyService.create(policy);"},{"sha":"408afb2d777feaf7a09d785300864731ee326647","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -31,6 +31,7 @@\n \n import javax.ws.rs.core.Response;\n import org.apache.http.HttpStatus;\n+import org.apache.syncope.common.mod.StatusMod;\n \n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.NodeCond;\n@@ -47,6 +48,7 @@\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -58,14 +60,15 @@ public class AuthenticationTestITCase extends AbstractTest {\n     @Test\n     public void testAdminEntitlements() {\n         // 1. as anonymous, read all available entitlements\n-        Set<EntitlementTO> allEntitlements = entitlementService.getAllEntitlements();\n+        List<EntitlementTO> allEntitlements = entitlementService.getAllEntitlements();\n         assertNotNull(allEntitlements);\n         assertFalse(allEntitlements.isEmpty());\n \n         // 2. as admin, read own entitlements\n-        Set<EntitlementTO> adminEntitlements = entitlementService.getMyEntitlements();\n+        List<EntitlementTO> adminEntitlements = entitlementService.getOwnEntitlements();\n \n-        assertEquals(allEntitlements, adminEntitlements);\n+        assertEquals(new HashSet<String>(CollectionWrapper.unwrap(allEntitlements)),\n+                new HashSet<String>(CollectionWrapper.unwrap(adminEntitlements)));\n     }\n \n     @Test\n@@ -76,7 +79,7 @@ public void testUserSchemaAuthorization() {\n         authRoleTO.setParent(8L);\n         authRoleTO.getEntitlements().add(\"SCHEMA_READ\");\n \n-        authRoleTO = createRole(roleService, authRoleTO);\n+        authRoleTO = createRole(authRoleTO);\n         assertNotNull(authRoleTO);\n \n         String schemaName = \"authTestSchema\" + getUUIDString();\n@@ -262,7 +265,8 @@ public void checkUserSuspension() {\n         assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").\n+                getService(UserService.class);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n@@ -284,7 +288,9 @@ public void checkUserSuspension() {\n         userService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n         assertReadFails(userService2, userId);\n \n-        userTO = userService.reactivate(userTO.getId());\n+        StatusMod reactivate = new StatusMod();\n+        reactivate.setType(StatusMod.ModType.REACTIVATE);\n+        userTO = userService.status(userTO.getId(), reactivate).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n@@ -301,15 +307,15 @@ public void issueSYNCOPE48() {\n         parentRole.getEntitlements().add(\"ROLE_1\");\n         parentRole.setParent(1L);\n \n-        parentRole = createRole(roleService, parentRole);\n+        parentRole = createRole(parentRole);\n         assertNotNull(parentRole);\n \n         // Child role, with no entitlements\n         RoleTO childRole = new RoleTO();\n         childRole.setName(\"childAdminRole\");\n         childRole.setParent(parentRole.getId());\n \n-        childRole = createRole(roleService, childRole);\n+        childRole = createRole(childRole);\n         assertNotNull(childRole);\n \n         // User with child role, created by admin"},{"sha":"a2015128dbda209d7cf2ed04d0fa26f6cc43feff","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -124,7 +125,7 @@ public void dbExport() throws IOException {\n         assertEquals(HttpStatus.SC_OK, response.getStatus());\n         String contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n         assertTrue(contentType.contains(\"xml\"));\n-        String contentDisposition = response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER);\n+        String contentDisposition = response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString());\n         assertNotNull(contentDisposition);\n \n         Object entity = response.getEntity();"},{"sha":"b1f5fdf909a0253362336ff6047ae3a9e0fb2a8b","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -690,7 +690,7 @@ public void bulkAction() {\n         assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n         assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n \n-        connectorService.bulkAction(bulkAction);\n+        connectorService.bulk(bulkAction);\n \n         iter = bulkAction.getTargets().iterator();\n "},{"sha":"8019e9f432aa301dd0d575b0c21843937a85f500","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.common.types.ReportletConfClasses;\n import org.apache.syncope.common.to.ReportExecTO;\n import org.apache.syncope.common.to.ReportTO;\n+import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n import org.apache.syncope.common.types.ReportExecStatus;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -150,8 +151,8 @@ private void checkExport(final Long execId, final ReportExecExportFormat fmt) th\n         final Response response = reportService.exportExecutionResult(execId, fmt);\n         assertNotNull(response);\n         assertEquals(HttpStatus.SC_OK, response.getStatus());\n-        assertNotNull(response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER));\n-        assertTrue(response.getHeaderString(SyncopeConstants.CONTENT_DISPOSITION_HEADER).\n+        assertNotNull(response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString()));\n+        assertTrue(response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString()).\n                 endsWith(\".\" + fmt.name().toLowerCase()));\n \n         Object entity = response.getEntity();"},{"sha":"67ad3cf2130b26cdb38ef6a9ab84da0381fb8d53","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -91,7 +91,7 @@ private ResourceTO buildResourceTO(final String resourceName) {\n \n     @Test\n     public void getPropagationActionsClasses() {\n-        Set<PropagationActionClassTO> actions = resourceService.getPropagationActionsClasses();\n+        List<PropagationActionClassTO> actions = resourceService.getPropagationActionsClasses();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }\n@@ -456,7 +456,7 @@ public void bulkAction() {\n         bulkAction.getTargets().add(String.valueOf(\"forBulk1\"));\n         bulkAction.getTargets().add(String.valueOf(\"forBulk2\"));\n \n-        resourceService.bulkAction(bulkAction);\n+        resourceService.bulk(bulkAction);\n \n         try {\n             resourceService.read(\"forBulk1\");"},{"sha":"48bb95652fff558a7705a3a1827947451481dc8f","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":42,"deletions":43,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -32,13 +32,15 @@\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.to.PropagationTargetsTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -83,7 +85,7 @@ public void createWithException() {\n         newRoleTO.getAttrs().add(attributeTO(\"attr1\", \"value1\"));\n \n         try {\n-            createRole(roleService, newRoleTO);\n+            createRole(newRoleTO);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidSyncopeRole, e.getType());\n@@ -97,7 +99,7 @@ public void create() {\n         roleTO.getVirAttrs().add(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n         roleTO.setRoleOwner(8L);\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n \n         assertNotNull(roleTO.getVirAttrMap());\n@@ -125,7 +127,7 @@ public void createWithPasswordPolicy() {\n         roleTO.setParent(8L);\n         roleTO.setPasswordPolicy(4L);\n \n-        RoleTO actual = createRole(roleService, roleTO);\n+        RoleTO actual = createRole(roleTO);\n         assertNotNull(actual);\n \n         actual = roleService.read(actual.getId());\n@@ -148,10 +150,10 @@ public void delete() {\n \n         roleTO.getResources().add(\"resource-ldap\");\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n \n-        RoleTO deletedRole = roleService.delete(roleTO.getId());\n+        RoleTO deletedRole = deleteRole(roleTO.getId());\n         assertNotNull(deletedRole);\n \n         try {\n@@ -199,13 +201,13 @@ public void selfRead() {\n         RoleService roleService2 = clientFactory.create(\"rossini\", ADMIN_PWD).getService(RoleService.class);\n \n         try {\n-            roleService2.selfRead(3L);\n+            roleService2.readSelf(3L);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.UnauthorizedRole, e.getType());\n         }\n \n-        RoleTO roleTO = roleService2.selfRead(1L);\n+        RoleTO roleTO = roleService2.readSelf(1L);\n         assertNotNull(roleTO);\n         assertNotNull(roleTO.getAttrs());\n         assertFalse(roleTO.getAttrs().isEmpty());\n@@ -215,7 +217,7 @@ public void selfRead() {\n     public void update() {\n         RoleTO roleTO = buildRoleTO(\"latestRole\" + getUUIDString());\n         roleTO.getRAttrTemplates().add(\"show\");\n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n \n         assertEquals(1, roleTO.getAttrs().size());\n \n@@ -234,7 +236,7 @@ public void update() {\n         // change password policy inheritance\n         roleMod.setInheritPasswordPolicy(Boolean.FALSE);\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n+        roleTO = updateRole(roleMod);\n \n         assertEquals(modName, roleTO.getName());\n         assertEquals(2, roleTO.getAttrs().size());\n@@ -253,7 +255,7 @@ public void updateRemovingVirAttribute() {\n         roleTO.getRVirAttrTemplates().add(\"rvirtualdata\");\n         roleTO.getVirAttrs().add(attributeTO(\"rvirtualdata\", null));\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getVirAttrs().size());\n@@ -262,8 +264,7 @@ public void updateRemovingVirAttribute() {\n         roleMod.setId(roleTO.getId());\n         roleMod.getVirAttrsToRemove().add(\"rvirtualdata\");\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n-\n+        roleTO = updateRole(roleMod);\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getVirAttrs().isEmpty());\n     }\n@@ -274,7 +275,7 @@ public void updateRemovingDerAttribute() {\n         roleTO.getRDerAttrTemplates().add(\"rderivedschema\");\n         roleTO.getDerAttrs().add(attributeTO(\"rderivedschema\", null));\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getDerAttrs().size());\n@@ -283,8 +284,7 @@ public void updateRemovingDerAttribute() {\n         roleMod.setId(roleTO.getId());\n         roleMod.getDerAttrsToRemove().add(\"rderivedschema\");\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n-\n+        roleTO = updateRole(roleMod);\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getDerAttrs().isEmpty());\n     }\n@@ -320,7 +320,7 @@ public void updateAsRoleOwner() {\n         // 4. update as puccini, owner of role 7 because owner of role 6 with inheritance - success\n         RoleService roleService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(RoleService.class);\n \n-        roleTO = roleService3.update(roleMod.getId(), roleMod);\n+        roleTO = roleService3.update(roleMod.getId(), roleMod).readEntity(RoleTO.class);\n         assertEquals(\"Managing Director\", roleTO.getName());\n \n         // issue SYNCOPE-15\n@@ -342,7 +342,7 @@ public void issue178() {\n         String roleName = \"torename\" + getUUIDString();\n         roleTO.setName(roleName);\n \n-        RoleTO actual = createRole(roleService, roleTO);\n+        RoleTO actual = createRole(roleTO);\n \n         assertNotNull(actual);\n         assertEquals(roleName, actual.getName());\n@@ -353,8 +353,7 @@ public void issue178() {\n         String renamedRole = \"renamed\" + getUUIDString();\n         roleMod.setName(renamedRole);\n \n-        actual = roleService.update(roleMod.getId(), roleMod);\n-\n+        actual = updateRole(roleMod);\n         assertNotNull(actual);\n         assertEquals(renamedRole, actual.getName());\n         assertEquals(0L, actual.getParent());\n@@ -366,7 +365,7 @@ public void issueSYNCOPE228() {\n         roleTO.getEntitlements().add(\"USER_READ\");\n         roleTO.getEntitlements().add(\"SCHEMA_READ\");\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n         assertNotNull(roleTO.getEntitlements());\n         assertFalse(roleTO.getEntitlements().isEmpty());\n@@ -377,7 +376,7 @@ public void issueSYNCOPE228() {\n         roleMod.setId(roleTO.getId());\n         roleMod.setInheritDerAttrs(Boolean.TRUE);\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n+        roleTO = updateRole(roleMod);\n         assertNotNull(roleTO);\n         assertEquals(entitlements, roleTO.getEntitlements());\n \n@@ -386,22 +385,22 @@ public void issueSYNCOPE228() {\n         roleMod.setModEntitlements(true);\n         roleMod.getEntitlements().clear();\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n+        roleTO = updateRole(roleMod);\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getEntitlements().isEmpty());\n     }\n \n     @Test\n     public void unlink() {\n-        RoleTO actual = createRole(roleService, buildRoleTO(\"unlink\"));\n+        RoleTO actual = createRole(buildRoleTO(\"unlink\"));\n         assertNotNull(actual);\n \n         assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(\"resource-ldap\");\n-\n-        actual = roleService.unlink(actual.getId(), res);\n+        actual = roleService.associate(actual.getId(),\n+                ResourceAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(\"resource-ldap\", ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n@@ -415,15 +414,15 @@ public void unlink() {\n \n     @Test\n     public void unassign() {\n-        RoleTO actual = createRole(roleService, buildRoleTO(\"unassign\"));\n+        RoleTO actual = createRole(buildRoleTO(\"unassign\"));\n         assertNotNull(actual);\n \n         assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(\"resource-ldap\");\n-\n-        actual = roleService.unassign(actual.getId(), res);\n+        actual = roleService.associate(actual.getId(),\n+                ResourceAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(\"resource-ldap\", ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n@@ -435,21 +434,21 @@ public void unassign() {\n             readConnectorObject(\"resource-ldap\", actual.getId());\n             fail();\n         } catch (Exception e) {\n-            // ignore\n+            assertNotNull(e);\n         }\n     }\n \n     @Test\n     public void deprovision() {\n-        RoleTO actual = createRole(roleService, buildRoleTO(\"deprovision\"));\n+        RoleTO actual = createRole(buildRoleTO(\"deprovision\"));\n         assertNotNull(actual);\n \n         assertNotNull(readConnectorObject(\"resource-ldap\", actual.getId()));\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(\"resource-ldap\");\n-\n-        actual = roleService.deprovision(actual.getId(), res);\n+        actual = roleService.associate(actual.getId(),\n+                ResourceAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(\"resource-ldap\", ResourceNameTO.class)).\n+                readEntity(RoleTO.class);\n         assertNotNull(actual);\n         assertFalse(actual.getResources().isEmpty());\n \n@@ -461,7 +460,7 @@ public void deprovision() {\n             readConnectorObject(\"resource-ldap\", actual.getId());\n             fail();\n         } catch (Exception e) {\n-            // ignore\n+            assertNotNull(e);\n         }\n     }\n \n@@ -476,7 +475,7 @@ public void createWithMandatorySchemaNotTemplate() {\n         // 2. create a role *without* an attribute for that schema: it works\n         RoleTO roleTO = buildRoleTO(\"lastRole\");\n         assertFalse(roleTO.getAttrMap().containsKey(badge.getName()));\n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n         assertFalse(roleTO.getAttrMap().containsKey(badge.getName()));\n \n@@ -488,7 +487,7 @@ public void createWithMandatorySchemaNotTemplate() {\n         roleMod.getRAttrTemplates().add(\"badge\");\n \n         try {\n-            roleService.update(roleMod.getId(), roleMod);\n+            updateRole(roleMod);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n@@ -497,7 +496,7 @@ public void createWithMandatorySchemaNotTemplate() {\n         // 4. also add an actual attribute for badge - it will work        \n         roleMod.getAttrsToUpdate().add(attributeMod(badge.getName(), \"xxxxxxxxxx\"));\n \n-        roleTO = roleService.update(roleMod.getId(), roleMod);\n+        roleTO = updateRole(roleMod);\n         assertNotNull(roleTO);\n         assertTrue(roleTO.getAttrMap().containsKey(badge.getName()));\n     }"},{"sha":"25a41d159e55ab91fe062ffe41d5166f9446491b","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -217,7 +217,7 @@ public void issue259() {\n \n         UserMod userMod = AttributableOperations.diff(newUserTO, userTO);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = userService.update(userMod.getId(), userMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n     }\n "},{"sha":"604fc2e2b8d0d6c25a90b3ed18a5c7826130a713","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":32,"deletions":34,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -27,7 +27,6 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.http.HttpStatus;\n import org.apache.syncope.common.mod.UserMod;\n@@ -76,16 +75,31 @@ public class TaskTestITCase extends AbstractTest {\n \n     private static final Long SYNC_TASK_ID = 4L;\n \n+    /**\n+     * Remove initial and synchronized users to make test re-runnable.\n+     */\n+    public void removeTestUsers() {\n+        for (int i = 0; i < 10; i++) {\n+            String cUserName = \"test\" + i;\n+            try {\n+                UserTO cUserTO = readUser(cUserName);\n+                userService.delete(cUserTO.getId());\n+            } catch (Exception e) {\n+                // Ignore\n+            }\n+        }\n+    }\n+\n     @Test\n     public void getJobClasses() {\n-        Set<JobClassTO> jobClasses = taskService.getJobClasses();\n+        List<JobClassTO> jobClasses = taskService.getJobClasses();\n         assertNotNull(jobClasses);\n         assertFalse(jobClasses.isEmpty());\n     }\n \n     @Test\n     public void getSyncActionsClasses() {\n-        Set<SyncActionClassTO> actions = taskService.getSyncActionsClasses();\n+        List<SyncActionClassTO> actions = taskService.getSyncActionsClasses();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }\n@@ -290,7 +304,7 @@ public void sync() {\n             assertTrue(Integer.valueOf(userTO.getAttrMap().get(\"fullname\").getValues().get(0)) <= 10);\n \n             // check for user template\n-            userTO = userService.read(\"test7\");\n+            userTO = readUser(\"test7\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_OTHER\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n             assertEquals(2, userTO.getResources().size());\n@@ -299,7 +313,7 @@ public void sync() {\n             assertEquals(1, userTO.getMemberships().size());\n             assertTrue(userTO.getMemberships().get(0).getAttrMap().containsKey(\"subscriptionDate\"));\n \n-            userTO = userService.read(\"test8\");\n+            userTO = readUser(\"test8\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_8\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n \n@@ -311,12 +325,11 @@ public void sync() {\n             // Check for issue 215:\n             // * expected disabled user test1\n             // * expected enabled user test2\n-\n-            userTO = userService.read(\"test1\");\n+            userTO = readUser(\"test1\");\n             assertNotNull(userTO);\n             assertEquals(\"suspended\", userTO.getStatus());\n \n-            userTO = userService.read(\"test3\");\n+            userTO = readUser(\"test3\");\n             assertNotNull(userTO);\n             assertEquals(\"active\", userTO.getStatus());\n \n@@ -353,7 +366,7 @@ public void reconcileFromDB() {\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n-        UserTO userTO = userService.read(\"testuser1\");\n+        UserTO userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n         assertEquals(\"reconciled@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n         assertEquals(\"suspended\", userTO.getStatus());\n@@ -367,14 +380,15 @@ public void reconcileFromDB() {\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n-        userTO = userService.read(\"testuser1\");\n+        userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n     }\n \n     @Test\n     public void reconcileFromLDAP()\n             throws InvalidSearchConditionException {\n+\n         // Update sync task\n         SyncTaskTO task = taskService.read(11L);\n         assertNotNull(task);\n@@ -626,13 +640,13 @@ public void issueSYNCOPE68() {\n             assertNotNull(status);\n             assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n \n-            userTO = userService.read(\"testuser2\");\n+            userTO = readUser(\"testuser2\");\n             assertNotNull(userTO);\n             assertEquals(\"testuser2@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n             assertEquals(2, userTO.getMemberships().size());\n             assertEquals(4, userTO.getResources().size());\n         } finally {\n-            UserTO dUserTO = userService.delete(userTO.getId());\n+            UserTO dUserTO = deleteUser(userTO.getId());\n             assertNotNull(dUserTO);\n         }\n     }\n@@ -671,7 +685,7 @@ public void issueSYNCOPE230() {\n         execSyncTask(10L, 20, false);\n \n         // 3. read e-mail address for user created by the SyncTask first execution\n-        UserTO userTO = userService.read(\"issuesyncope230\");\n+        UserTO userTO = readUser(\"issuesyncope230\");\n         assertNotNull(userTO);\n         String email = userTO.getAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n@@ -684,7 +698,7 @@ public void issueSYNCOPE230() {\n         execSyncTask(10L, 20, false);\n \n         // 6. verify that the e-mail was updated\n-        userTO = userService.read(\"issuesyncope230\");\n+        userTO = readUser(\"issuesyncope230\");\n         assertNotNull(userTO);\n         email = userTO.getAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n@@ -744,7 +758,6 @@ public void issueSYNCOPE272() {\n             assertNotNull(task);\n \n             // add user template\n-\n             AttributeTO newAttrTO = new AttributeTO();\n             newAttrTO.setSchema(\"firstname\");\n             newAttrTO.getValues().add(\"\");\n@@ -770,7 +783,7 @@ public void issueSYNCOPE272() {\n             assertNotNull(taskExecTO.getStatus());\n             assertTrue(PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()).isSuccessful());\n \n-            userTO = userService.read(userTO.getUsername());\n+            userTO = userService.read(userTO.getId());\n             assertNotNull(userTO);\n             assertNotNull(userTO.getAttrMap().get(\"firstname\").getValues().get(0));\n         } finally {\n@@ -819,7 +832,7 @@ public void issueSYNCOPE258() {\n         userMod.getAttrsToRemove().add(\"email\");\n         userMod.getAttrsToUpdate().add(attributeMod(\"email\", \"s258@apache.org\"));\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userService.update(userMod.getId(), userMod);\n \n         execSyncTask(actual.getId(), 50, false);\n \n@@ -906,23 +919,8 @@ public void bulkAction() {\n             bulkAction.getTargets().add(String.valueOf(taskTO.getId()));\n         }\n \n-        taskService.bulkAction(bulkAction);\n+        taskService.bulk(bulkAction);\n \n         assertFalse(taskService.list(TaskType.PROPAGATION).containsAll(after));\n     }\n-\n-    /**\n-     * Remove initial and synchronized users to make test re-runnable.\n-     */\n-    public void removeTestUsers() {\n-        for (int i = 0; i < 10; i++) {\n-            String cUserName = \"test\" + i;\n-            try {\n-                UserTO cUserTO = userService.read(cUserName);\n-                userService.delete(cUserTO.getId());\n-            } catch (Exception e) {\n-                // Ignore\n-            }\n-        }\n-    }\n-}\n\\ No newline at end of file\n+}"},{"sha":"76892b94aabd8dd645d172d43b37188221b605e1","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":28,"deletions":29,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -44,7 +44,6 @@\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.UserRequestType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n-import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -70,15 +69,15 @@ public void create() throws InvalidSearchConditionException {\n         Response response = configurationService.create(configurationTO);\n         assertNotNull(response);\n         assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n-        configurationTO =\n-                adminClient.getObject(response.getLocation(), ConfigurationService.class, ConfigurationTO.class);\n+        configurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n+                ConfigurationTO.class);\n         assertNotNull(configurationTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"selfcreate@syncope.apache.org\");\n \n         // 2. get unauthorized when trying to request user create\n-        UserRequestService anonymousUserRequestService =\n-                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n+        UserRequestService anonymousUserRequestService = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).\n+                getService(UserRequestService.class);\n         try {\n             createUserRequest(anonymousUserRequestService, new UserRequestTO(userTO));\n             fail();\n@@ -92,8 +91,8 @@ public void create() throws InvalidSearchConditionException {\n         response = configurationService.create(configurationTO);\n         assertNotNull(response);\n         assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n-        configurationTO =\n-                adminClient.getObject(response.getLocation(), ConfigurationService.class, ConfigurationTO.class);\n+        configurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n+                ConfigurationTO.class);\n         assertNotNull(configurationTO);\n \n         // 4. as anonymous, request user create works\n@@ -134,8 +133,8 @@ public void update() {\n         }\n \n         // 3. auth as user just created\n-        UserRequestService userRequestService2 =\n-                clientFactory.create(userTO.getUsername(), initialPassword).getService(UserRequestService.class);\n+        UserRequestService userRequestService2 = clientFactory.create(userTO.getUsername(), initialPassword).getService(\n+                UserRequestService.class);\n \n         // 4. update with same password: not matching password policy\n         try {\n@@ -150,8 +149,8 @@ public void update() {\n         createUserRequest(userRequestService2, new UserRequestTO(userMod));\n \n         // 6. user password has not changed yet\n-        UserService userService1 =\n-                clientFactory.create(userTO.getUsername(), userMod.getPassword()).getService(UserService.class);\n+        UserService userService1 = clientFactory.create(userTO.getUsername(), userMod.getPassword()).getService(\n+                UserService.class);\n         try {\n             userService1.readSelf();\n             fail(\"Credentials are not updated yet, thus request should raise AccessControlException\");\n@@ -160,12 +159,12 @@ public void update() {\n         }\n \n         // 7. actually update user\n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = userService.update(userMod.getId(), userMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n \n         // 8. user password has now changed\n-        UserService userService2 =\n-                clientFactory.create(userTO.getUsername(), userMod.getPassword()).getService(UserService.class);\n+        UserService userService2 = clientFactory.create(userTO.getUsername(), userMod.getPassword()).getService(\n+                UserService.class);\n         try {\n             UserTO user = userService2.readSelf();\n             assertNotNull(user);\n@@ -192,8 +191,8 @@ public void delete() {\n         }\n \n         // 3. auth as user just created\n-        UserRequestService userRequestService2 =\n-                clientFactory.create(userTO.getUsername(), initialPassword).getService(UserRequestService.class);\n+        UserRequestService userRequestService2 = clientFactory.create(userTO.getUsername(), initialPassword).getService(\n+                UserRequestService.class);\n \n         // 4. now request user delete works\n         createUserRequest(userRequestService2, new UserRequestTO(userTO.getId()));\n@@ -220,12 +219,12 @@ public void execute() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(USERNAME);\n         final String initialPassword = userTO.getPassword();\n \n-        UserRequestService selfservice =\n-                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n+        UserRequestService selfservice = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(\n+                UserRequestService.class);\n         Response response = createUserRequest(selfservice, new UserRequestTO(userTO));\n \n-        UserRequestTO userRequest =\n-                adminClient.getObject(response.getLocation(), UserRequestService.class, UserRequestTO.class);\n+        UserRequestTO userRequest = adminClient.getObject(response.getLocation(), UserRequestService.class,\n+                UserRequestTO.class);\n         assertNotNull(userRequest);\n         assertEquals(UserRequestType.CREATE, userRequest.getType());\n         assertTrue(userRequest.getUsername().endsWith(USERNAME));\n@@ -234,7 +233,7 @@ public void execute() {\n         assertNull(userRequest.getExecutionDate());\n \n         try {\n-            userService.read(userTO.getUsername());\n+            userService.read(userTO.getId());\n             fail();\n         } catch (Exception ignore) {\n             assertNotNull(ignore);\n@@ -248,7 +247,8 @@ public void execute() {\n         assertNotNull(userRequest.getClaimDate());\n         assertNull(userRequest.getExecutionDate());\n \n-        assertNotNull(userRequestService.executeCreate(userRequest.getId(), userTO));\n+        userTO = userRequestService.executeCreate(userRequest.getId(), userTO);\n+        assertNotNull(userTO);\n \n         userRequest = userRequestService.read(userRequest.getId());\n         assertTrue(userRequest.isExecuted());\n@@ -261,7 +261,7 @@ public void execute() {\n             assertFalse(userRequestTO.isExecuted());\n         }\n \n-        userTO = userService.read(userTO.getUsername());\n+        userTO = userService.read(userTO.getId());\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n@@ -293,7 +293,7 @@ public void execute() {\n             assertFalse(userRequestTO.isExecuted());\n         }\n \n-        assertNotNull(userService.read(userTO.getUsername()));\n+        assertNotNull(userService.read(userTO.getId()));\n \n         try {\n             clientFactory.create(userTO.getUsername(), \"new\" + initialPassword).\n@@ -305,8 +305,7 @@ public void execute() {\n \n         assertNotNull(clientFactory.create(userTO.getUsername(), newpwd).getService(UserService.class).readSelf());\n \n-        selfservice =\n-                clientFactory.create(userTO.getUsername(), newpwd).getService(UserRequestService.class);\n+        selfservice = clientFactory.create(userTO.getUsername(), newpwd).getService(UserRequestService.class);\n         response = createUserRequest(selfservice, new UserRequestTO(userTO.getId()));\n \n         userRequest = adminClient.getObject(response.getLocation(), UserRequestService.class, UserRequestTO.class);\n@@ -325,7 +324,7 @@ public void execute() {\n         }\n \n         try {\n-            userService.read(userTO.getUsername());\n+            userService.read(userTO.getId());\n             fail();\n         } catch (Exception ignore) {\n             assertNotNull(ignore);\n@@ -338,8 +337,8 @@ public void execute() {\n     public void executeNoClaim() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"reqnoclaim@syncope.apache.org\");\n \n-        final UserRequestService selfservice =\n-                clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(UserRequestService.class);\n+        final UserRequestService selfservice = clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(\n+                UserRequestService.class);\n \n         final UserRequestTO userRequest = adminClient.getObject(\n                 createUserRequest(selfservice, new UserRequestTO(userTO)).getLocation(),"},{"sha":"ea66cd1f4f228e4203ab155e5798d00c105f93a9","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":106,"deletions":148,"changes":254,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e410841e4c4e513b8800281f2ccc40d21fa6d302/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e410841e4c4e513b8800281f2ccc40d21fa6d302","patch":"@@ -39,6 +39,7 @@\n \n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n+import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.PolicyService;\n import org.apache.syncope.common.services.ResourceService;\n@@ -54,10 +55,9 @@\n import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n-import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.PropagationStatusTO;\n-import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.PropagationTaskTO;\n+import org.apache.syncope.common.to.ResourceNameTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -70,8 +70,10 @@\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.AttributableOperations;\n+import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n@@ -235,7 +237,7 @@ public void issue186() {\n         userMod.getResourcesToAdd().add(\"ws-target-resource-2\");\n \n         try {\n-            userTO = userService.update(userMod.getId(), userMod);\n+            userTO = updateUser(userMod);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n@@ -248,7 +250,7 @@ public void issue186() {\n         userMod.setPassword(\"newPassword\");\n         userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n \n         // 4. update assigning a resource NOT forcing mandatory constraints\n@@ -259,7 +261,7 @@ public void issue186() {\n         userMod.getResourcesToAdd().add(\"resource-db\");\n \n         try {\n-            userTO = userService.update(userMod.getId(), userMod);\n+            updateUser(userMod);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidSyncopeUser, e.getType());\n@@ -679,7 +681,7 @@ public void createWithApproval() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"anotherPassword123\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n     }\n \n@@ -700,7 +702,7 @@ public void delete() {\n \n         long id = userTO.getId();\n \n-        userTO = userService.delete(id);\n+        userTO = deleteUser(id);\n \n         assertNotNull(userTO);\n         assertEquals(id, userTO.getId());\n@@ -728,7 +730,7 @@ public void deleteByUsername() {\n \n         long id = userTO.getId();\n         userTO = userService.read(id);\n-        userTO = userService.delete(userTO.getId());\n+        userTO = deleteUser(userTO.getId());\n \n         assertNotNull(userTO);\n         assertEquals(id, userTO.getId());\n@@ -798,7 +800,7 @@ public void read() {\n     @Test\n     public void readWithMailAddressAsUserName() {\n         UserTO userTO = createUser(getUniqueSampleTO(\"mail@domain.org\"));\n-        userTO = userService.read(userTO.getUsername());\n+        userTO = userService.read(userTO.getId());\n         assertNotNull(userTO);\n     }\n \n@@ -814,7 +816,7 @@ public void updateWithouPassword() {\n         userMod.setId(userTO.getId());\n         userMod.getDerAttrsToRemove().add(\"cn\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getDerAttrMap());\n@@ -883,7 +885,7 @@ public void update() {\n         userMod.getMembershipsToAdd().add(membershipMod);\n         userMod.getMembershipsToRemove().add(userTO.getMemberships().iterator().next().getId());\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n         // issue SYNCOPE-15\n@@ -927,7 +929,7 @@ public void updatePasswordOnly() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword123\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n \n         // check for changePwdDate\n         assertNotNull(userTO.getChangePwdDate());\n@@ -989,7 +991,7 @@ public void verifyTaskRegistration() {\n \n         userMod.getAttrsToUpdate().add(attributeMod(\"surname\", \"surname\"));\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n \n         assertNotNull(userTO);\n \n@@ -1042,39 +1044,14 @@ public void createActivate() {\n \n         assertEquals(\"created\", userTO.getStatus());\n \n-        userTO = userService.activate(userTO.getId(), userTO.getToken());\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.ACTIVATE);\n+        statusMod.setToken(userTO.getToken());\n+        userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n \n         assertNotNull(userTO);\n         assertNull(userTO.getToken());\n         assertNull(userTO.getTokenExpireTime());\n-\n-        assertEquals(\"active\", userTO.getStatus());\n-    }\n-\n-    @Test\n-    public void createActivateByUsername() {\n-        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n-\n-        UserTO userTO = getUniqueSampleTO(\"createActivateByUsername@syncope.apache.org\");\n-\n-        MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(11L);\n-        userTO.getMemberships().add(membershipTO);\n-\n-        userTO = createUser(userTO);\n-\n-        assertNotNull(userTO);\n-        assertNotNull(userTO.getToken());\n-        assertNotNull(userTO.getTokenExpireTime());\n-\n-        assertEquals(\"created\", userTO.getStatus());\n-\n-        userTO = userService.activateByUsername(userTO.getUsername(), userTO.getToken());\n-\n-        assertNotNull(userTO);\n-        assertNull(userTO.getToken());\n-        assertNull(userTO.getTokenExpireTime());\n-\n         assertEquals(\"active\", userTO.getStatus());\n     }\n \n@@ -1093,39 +1070,15 @@ public void suspendReactivate() {\n                 ? \"active\"\n                 : \"created\", userTO.getStatus());\n \n-        userTO = userService.suspend(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertEquals(\"suspended\", userTO.getStatus());\n-\n-        userTO = userService.reactivate(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertEquals(\"active\", userTO.getStatus());\n-    }\n-\n-    @Test\n-    public void suspendReactivateByUsername() {\n-        UserTO userTO = getUniqueSampleTO(\"suspendReactivateByUsername@syncope.apache.org\");\n-\n-        MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7L);\n-        userTO.getMemberships().add(membershipTO);\n-\n-        userTO = createUser(userTO);\n-\n-        assertNotNull(userTO);\n-        assertEquals(ActivitiDetector.isActivitiEnabledForUsers()\n-                ? \"active\"\n-                : \"created\", userTO.getStatus());\n-\n-        userTO = userService.suspendByUsername(userTO.getUsername());\n-\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        userTO = userService.reactivateByUsername(userTO.getUsername());\n-\n+        statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n     }\n@@ -1152,11 +1105,12 @@ public void suspendReactivateOnResource() {\n         long userId = userTO.getId();\n \n         // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources\n-        PropagationRequestTO propagationRequestTO = new PropagationRequestTO();\n-        propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.getResources().add(RESOURCE_NAME_TESTDB);\n-        propagationRequestTO.getResources().add(RESOURCE_NAME_LDAP);\n-        userTO = userService.suspend(userId, propagationRequestTO);\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        statusMod.setOnSyncope(true);\n+        statusMod.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        statusMod.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        userTO = userService.status(userId, statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n@@ -1167,23 +1121,26 @@ public void suspendReactivateOnResource() {\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n-        propagationRequestTO = new PropagationRequestTO();\n-        propagationRequestTO.setOnSyncope(false);\n-        propagationRequestTO.getResources().add(RESOURCE_NAME_LDAP);\n-        userTO = userService.suspend(userId, propagationRequestTO);\n-        userTO = userService.reactivate(userId, propagationRequestTO);\n+        statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        statusMod.setOnSyncope(false);\n+        statusMod.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        userService.status(userId, statusMod);\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        userTO = userService.status(userId, statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n-        propagationRequestTO = new PropagationRequestTO();\n-        propagationRequestTO.setOnSyncope(true);\n-        propagationRequestTO.getResources().add(RESOURCE_NAME_TESTDB);\n+        statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        statusMod.setOnSyncope(true);\n+        statusMod.getResourceNames().add(RESOURCE_NAME_TESTDB);\n \n-        userTO = userService.reactivate(userId, propagationRequestTO);\n+        userTO = userService.status(userId, statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n@@ -1212,7 +1169,7 @@ public void updateMultivalueAttribute() {\n         userMod.setId(userTO.getId());\n         userMod.getAttrsToUpdate().add(loginDateMod);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n         loginDate = userTO.getAttrMap().get(\"loginDate\");\n@@ -1241,8 +1198,7 @@ public void issue213() {\n         userMod.setId(userTO.getId());\n         userMod.getResourcesToRemove().add(RESOURCE_NAME_TESTDB);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n-\n+        userTO = updateUser(userMod);\n         assertTrue(userTO.getResources().isEmpty());\n \n         jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n@@ -1261,10 +1217,8 @@ public void issue234() {\n         userMod.setId(userTO.getId());\n         userMod.setUsername(\"1\" + userTO.getUsername());\n \n-        userTO = userService.update(userMod.getId(), userMod);\n-\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n-\n         assertEquals(\"1\" + inUserTO.getUsername(), userTO.getUsername());\n     }\n \n@@ -1291,8 +1245,7 @@ public void issue270() {\n \n         assertNotNull(userMod);\n \n-        toBeUpdated = userService.update(userMod.getId(), userMod);\n-\n+        toBeUpdated = updateUser(userMod);\n         assertNotNull(toBeUpdated);\n \n         assertFalse(toBeUpdated.getVirAttrs().isEmpty());\n@@ -1316,7 +1269,7 @@ public final void issue280() {\n         userMod.setPassword(\"123password\");\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n         final List<PropagationStatusTO> propagations = userTO.getPropagationStatusTOs();\n@@ -1445,7 +1398,7 @@ public void issueSYNCOPE16() {\n         userMod.getVirAttrsToUpdate().add(attributeMod(\"virtualdata\", \"virtualupdated\"));\n \n         // 3. update virtual attribute\n-        actual = userService.update(userMod.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n \n         // 4. check for virtual attribute value\n@@ -1491,7 +1444,7 @@ public void issueSYNCOPE108() {\n \n         userMod.getMembershipsToRemove().add(actual.getMemberships().get(0).getId());\n \n-        actual = userService.update(userMod.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n@@ -1507,7 +1460,7 @@ public void issueSYNCOPE108() {\n \n         userMod.getResourcesToRemove().add(actual.getResources().iterator().next());\n \n-        actual = userService.update(userMod.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n@@ -1524,7 +1477,7 @@ public void issueSYNCOPE108() {\n \n         userMod.getMembershipsToRemove().add(actual.getMemberships().get(0).getId());\n \n-        actual = userService.update(userMod.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n         assertTrue(actual.getMemberships().isEmpty());\n         assertTrue(actual.getResources().isEmpty());\n@@ -1586,7 +1539,7 @@ public void issueSYNCOPE111() {\n \n         userMod.getMembershipsToRemove().add(membershipTO.getId());\n \n-        actual = userService.update(userMod.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n@@ -1691,7 +1644,7 @@ public void issueSYNCOPE260() {\n \n         userMod.getVirAttrsToUpdate().add(attrMod);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n@@ -1705,15 +1658,19 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         // suspend/reactivate user and check virtual attribute value (unchanged)\n         // ----------------------------------\n-        userTO = userService.suspend(userTO.getId());\n+        StatusMod statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.SUSPEND);\n+        userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n \n-        userTO = userService.reactivate(userTO.getId());\n+        statusMod = new StatusMod();\n+        statusMod.setType(StatusMod.ModType.REACTIVATE);\n+        userTO = userService.status(userTO.getId(), statusMod).readEntity(UserTO.class);\n         assertEquals(\"active\", userTO.getStatus());\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n@@ -1735,7 +1692,7 @@ public void issueSYNCOPE260() {\n \n         userMod.getAttrsToUpdate().add(attrMod);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n@@ -1757,7 +1714,7 @@ public void issueSYNCOPE260() {\n         userMod.setId(userTO.getId());\n         userMod.getVirAttrsToRemove().add(\"virtualdata\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n         assertTrue(userTO.getVirAttrs().isEmpty());\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n@@ -1814,7 +1771,7 @@ public void issueSYNCOPE266() {\n         // this resource has not a mapping for Password\n         userMod.getResourcesToAdd().add(\"ws-target-resource-update\");\n \n-        userTO = userService.update(userTO.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n     }\n \n@@ -1864,11 +1821,12 @@ public void issueSYNCOPE122() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(getUUIDString());\n-        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n+        StatusMod pwdPropRequest = new StatusMod();\n+        pwdPropRequest.setOnSyncope(false);\n+        pwdPropRequest.getResourceNames().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n \n         // 3a. Chech that only a single propagation took place\n         assertNotNull(userTO.getPropagationStatusTOs());\n@@ -1909,15 +1867,15 @@ public void isseSYNCOPE136AES() {\n         UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n         userTO.getResources().clear();\n \n-        userTO = userService.create(userTO).readEntity(UserTO.class);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // 4. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n         // 5. verify that propagation was successful\n@@ -1940,15 +1898,15 @@ public void isseSYNCOPE136Random() {\n         UserTO userTO = getUniqueSampleTO(\"syncope136_Random@apache.org\");\n         userTO.getResources().clear();\n \n-        userTO = userService.create(userTO).readEntity(UserTO.class);\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // 2. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_LDAP);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n         // 3. verify that propagation was successful\n@@ -2017,7 +1975,7 @@ public void virAttrCache() {\n         userMod.getVirAttrsToUpdate().add(virtualdata);\n \n         // 3. update virtual attribute\n-        actual = userService.update(actual.getId(), userMod);\n+        actual = updateUser(userMod);\n         assertNotNull(actual);\n \n         // 4. check for virtual attribute value\n@@ -2057,7 +2015,7 @@ public void issueSYNCOPE265() {\n             userMod.getAttrsToRemove().add(\"type\");\n             userMod.getAttrsToUpdate().add(attributeMod);\n \n-            UserTO userTO = userService.update(i, userMod);\n+            UserTO userTO = updateUser(userMod);\n             assertEquals(\"a type\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n         }\n     }\n@@ -2077,21 +2035,21 @@ public void bulkActions() {\n         assertEquals(11, bulkAction.getTargets().size());\n \n         bulkAction.setOperation(BulkAction.Type.SUSPEND);\n-        BulkActionRes res = userService.bulkAction(bulkAction);\n+        BulkActionRes res = userService.bulk(bulkAction);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n         assertEquals(\"suspended\", userService.read(\n                 Long.parseLong(res.getResultByStatus(Status.SUCCESS).get(3).toString())).getStatus());\n \n         bulkAction.setOperation(BulkAction.Type.REACTIVATE);\n-        res = userService.bulkAction(bulkAction);\n+        res = userService.bulk(bulkAction);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n         assertEquals(\"active\", userService.read(\n                 Long.parseLong(res.getResultByStatus(Status.SUCCESS).get(3).toString())).getStatus());\n \n         bulkAction.setOperation(BulkAction.Type.DELETE);\n-        res = userService.bulkAction(bulkAction);\n+        res = userService.bulk(bulkAction);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n     }\n@@ -2113,7 +2071,7 @@ public void issueSYNCOPE354() {\n         roleTO.setParent(8L);\n         roleTO.getResources().add(RESOURCE_NAME_LDAP);\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n \n         // 2. create user with LDAP resource and membership of the above role\n@@ -2138,7 +2096,7 @@ public void issueSYNCOPE354() {\n         userMod.setId(userTO.getId());\n         userMod.getMembershipsToRemove().add(userTO.getMemberships().iterator().next().getId());\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         // 5. read role on resource, check that user DN was removed from uniqueMember\n@@ -2164,7 +2122,7 @@ public void issueSYNCOPE357() {\n         roleTO.setParent(8L);\n         roleTO.getResources().add(RESOURCE_NAME_LDAP);\n \n-        roleTO = createRole(roleService, roleTO);\n+        roleTO = createRole(roleTO);\n         assertNotNull(roleTO);\n \n         // 2. create user with membership of the above role\n@@ -2211,7 +2169,7 @@ public void issueSYNCOPE383() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n@@ -2220,11 +2178,11 @@ public void issueSYNCOPE383() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(getUUIDString());\n-        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n+        StatusMod pwdPropRequest = new StatusMod();\n+        pwdPropRequest.getResourceNames().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n     }\n@@ -2287,13 +2245,13 @@ public void issueSYNCOPE397() {\n         userMod.getVirAttrsToUpdate().add(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n         // check Syncope change password\n \n-        PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n-        //change pwd on Syncope\n-        pwdPropRequest.getResources().add(\"ws-target-resource-2\");\n+        StatusMod pwdPropRequest = new StatusMod();\n+        //change pwd on external resource\n+        pwdPropRequest.getResourceNames().add(\"ws-target-resource-2\");\n         //change pwd on Syncope\n         pwdPropRequest.setOnSyncope(true);\n         userMod.setPwdPropRequest(pwdPropRequest);\n-        toBeUpdated = userService.update(userMod.getId(), userMod);\n+        toBeUpdated = updateUser(userMod);\n         assertNotNull(toBeUpdated);\n         assertEquals(\"test@testoneone.com\", toBeUpdated.getVirAttrs().get(0).getValues().get(0));\n         // check if propagates correctly with assertEquals on size of tasks list\n@@ -2324,7 +2282,7 @@ public void issueSYNCOPE402() {\n         userMod.setPassword(\"newPassword\");\n         userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n         userMod.getResourcesToAdd().add(\"resource-testdb\");\n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(1).getFailureReason());\n         assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(1).getStatus());\n@@ -2410,14 +2368,14 @@ public void issueSYNCOPE15() {\n             userService.read(userTO.getId());\n             fail();\n         } catch (Exception ignore) {\n-            // ignore\n+            assertNotNull(ignore);\n         }\n \n         try {\n             userWorkflowService.getFormsByName(userTO.getId(), \"Create approval\");\n             fail();\n         } catch (Exception ignore) {\n-            // ignore\n+            assertNotNull(ignore);\n         }\n     }\n \n@@ -2437,10 +2395,10 @@ public void unlink() {\n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(RESOURCE_NAME_CSV);\n-\n-        actual = userService.unlink(actual.getId(), res);\n+        actual = userService.associate(actual.getId(),\n+                ResourceAssociationActionType.UNLINK,\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceNameTO.class)).\n+                readEntity(UserTO.class);\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n@@ -2469,10 +2427,10 @@ public void unassign() {\n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(RESOURCE_NAME_CSV);\n-\n-        actual = userService.unassign(actual.getId(), res);\n+        actual = userService.associate(actual.getId(),\n+                ResourceAssociationActionType.UNASSIGN,\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceNameTO.class)).\n+                readEntity(UserTO.class);\n         assertNotNull(actual);\n         assertTrue(actual.getResources().isEmpty());\n \n@@ -2484,7 +2442,7 @@ public void unassign() {\n             readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n             fail();\n         } catch (Exception e) {\n-            // ignore\n+            assertNotNull(e);\n         }\n     }\n \n@@ -2504,10 +2462,10 @@ public void deprovision() {\n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n \n-        PropagationTargetsTO res = new PropagationTargetsTO();\n-        res.getResources().add(RESOURCE_NAME_CSV);\n-\n-        actual = userService.deprovision(actual.getId(), res);\n+        actual = userService.associate(actual.getId(),\n+                ResourceAssociationActionType.DEPROVISION,\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceNameTO.class)).\n+                readEntity(UserTO.class);\n         assertNotNull(actual);\n         assertFalse(actual.getResources().isEmpty());\n \n@@ -2519,7 +2477,7 @@ public void deprovision() {\n             readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n             fail();\n         } catch (Exception e) {\n-            // ignore\n+            assertNotNull(e);\n         }\n     }\n \n@@ -2536,7 +2494,7 @@ public void issueSYNCOPE420() {\n         userMod.getAttrsToRemove().add(\"makeItDouble\");\n         userMod.getAttrsToUpdate().add(attributeMod(\"makeItDouble\", \"7\"));\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userTO = updateUser(userMod);\n         assertEquals(\"14\", userTO.getAttrMap().get(\"makeItDouble\").getValues().get(0));\n     }\n \n@@ -2548,7 +2506,7 @@ public void issueSYNCOPE426() {\n \n         UserMod userMod = new UserMod();\n         userMod.setPassword(\"anotherPassword123\");\n-        userTO = userService.update(userTO.getId(), userMod);\n+        userTO = userService.update(userTO.getId(), userMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n     }\n "}]}