{"sha":"9dd0b6603a305d2c3e3155aad6177057e4a62a1c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlkZDBiNjYwM2EzMDVkMmMzZTMxNTVhYWQ2MTc3MDU3ZTRhNjJhMWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-05T08:52:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-05T08:53:24Z"},"message":"[SYNCOPE-1369] Improving FlowableTaskService as JavaDelegate","tree":{"sha":"136d63db5148fae833cdd6d4f6fe5efe7d6c9e4e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/136d63db5148fae833cdd6d4f6fe5efe7d6c9e4e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9dd0b6603a305d2c3e3155aad6177057e4a62a1c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9dd0b6603a305d2c3e3155aad6177057e4a62a1c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9dd0b6603a305d2c3e3155aad6177057e4a62a1c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"394530c1bc00e6ed49890035c3af767f9f39bda4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/394530c1bc00e6ed49890035c3af767f9f39bda4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/394530c1bc00e6ed49890035c3af767f9f39bda4"}],"stats":{"total":230,"additions":109,"deletions":121},"files":[{"sha":"e02f017cd985396ec20bd1997e06317caa0a6ef0","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableRuntimeUtils.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -209,14 +209,12 @@ public static void saveForFormSubmit(\n     }\n \n     public static void throwException(final FlowableException e, final String defaultMessage) {\n-        if (e.getCause() != null) {\n-            if (e.getCause().getCause() instanceof SyncopeClientException) {\n-                throw (SyncopeClientException) e.getCause().getCause();\n-            } else if (e.getCause().getCause() instanceof ParsingValidationException) {\n-                throw (ParsingValidationException) e.getCause().getCause();\n-            } else if (e.getCause().getCause() instanceof InvalidEntityException) {\n-                throw (InvalidEntityException) e.getCause().getCause();\n-            }\n+        if (e.getCause() instanceof SyncopeClientException) {\n+            throw (SyncopeClientException) e.getCause();\n+        } else if (e.getCause() instanceof ParsingValidationException) {\n+            throw (ParsingValidationException) e.getCause();\n+        } else if (e.getCause() instanceof InvalidEntityException) {\n+            throw (InvalidEntityException) e.getCause();\n         }\n \n         throw new WorkflowException(defaultMessage, e);"},{"sha":"3164e526ceda3bf50c15c306ab492a182a9909cf","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/AutoActivate.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FAutoActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FAutoActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FAutoActivate.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -25,11 +25,12 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class AutoActivate extends AbstractFlowableServiceTask {\n+public class AutoActivate extends FlowableServiceTask {\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -38,11 +39,9 @@ public class AutoActivate extends AbstractFlowableServiceTask {\n     private UserDAO userDAO;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n-        UserTO userTO = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER_TO, UserTO.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n+        UserTO userTO = execution.getVariable(FlowableRuntimeUtils.USER_TO, UserTO.class);\n         if (userTO != null && userTO.getKey() != null && user.getKey() != null) {\n             user = userDAO.save(user);\n \n@@ -52,9 +51,9 @@ protected void doExecute(final String executionId) {\n \n             dataBinder.update(user, userPatch);\n \n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n+            execution.setVariable(FlowableRuntimeUtils.USER, user);\n         }\n \n-        engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.PROPAGATE_ENABLE, Boolean.TRUE);\n+        execution.setVariable(FlowableRuntimeUtils.PROPAGATE_ENABLE, Boolean.TRUE);\n     }\n }"},{"sha":"f3bd848b81c8f7064a9a9822802995aab56976e6","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Create.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FCreate.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -23,11 +23,12 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class Create extends AbstractFlowableServiceTask {\n+public class Create extends FlowableServiceTask {\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -36,20 +37,16 @@ public class Create extends AbstractFlowableServiceTask {\n     private EntityFactory entityFactory;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        UserTO userTO = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER_TO, UserTO.class);\n-        Boolean storePassword = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.STORE_PASSWORD, Boolean.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        UserTO userTO = execution.getVariable(FlowableRuntimeUtils.USER_TO, UserTO.class);\n+        Boolean storePassword = execution.getVariable(FlowableRuntimeUtils.STORE_PASSWORD, Boolean.class);\n \n         // create user\n         User user = entityFactory.newEntity(User.class);\n         dataBinder.create(user, userTO, storePassword == null ? true : storePassword);\n \n         // report user as result\n-        engine.getRuntimeService().\n-                setVariable(executionId, FlowableRuntimeUtils.USER, user);\n-        engine.getRuntimeService().\n-                setVariable(executionId, FlowableRuntimeUtils.USER_TO, dataBinder.getUserTO(user, true));\n+        execution.setVariable(FlowableRuntimeUtils.USER, user);\n+        execution.setVariable(FlowableRuntimeUtils.USER_TO, dataBinder.getUserTO(user, true));\n     }\n }"},{"sha":"8d7bef7d4e053b17b446f13dfb161f789603d291","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Delete.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FDelete.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -20,22 +20,22 @@\n \n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class Delete extends AbstractFlowableServiceTask {\n+public class Delete extends FlowableServiceTask {\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n \n         // Do something with user...\n         if (user != null) {\n             user.checkToken(\"\");\n         }\n \n         // remove user variable\n-        engine.getRuntimeService().removeVariable(executionId, FlowableRuntimeUtils.USER);\n+        execution.removeVariable(FlowableRuntimeUtils.USER);\n     }\n }"},{"sha":"b83b2a1cc08e94e4fa056fa2cb786faa05da388e","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/FlowableServiceTask.java","status":"renamed","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FFlowableServiceTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FFlowableServiceTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FFlowableServiceTask.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -18,28 +18,26 @@\n  */\n package org.apache.syncope.core.flowable.task;\n \n-import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.delegate.DelegateExecution;\n+import org.flowable.engine.delegate.JavaDelegate;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Abstract base class for Flowable's service tasks in Syncope, with Spring support.\n  */\n @Component\n-public abstract class AbstractFlowableServiceTask {\n+public abstract class FlowableServiceTask implements JavaDelegate {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(AbstractFlowableServiceTask.class);\n-\n-    @Autowired\n-    protected ProcessEngine engine;\n+    protected static final Logger LOG = LoggerFactory.getLogger(FlowableServiceTask.class);\n \n     @Transactional(rollbackFor = { Throwable.class })\n-    public void execute(final String executionId) {\n-        doExecute(executionId);\n+    @Override\n+    public void execute(final DelegateExecution execution) {\n+        doExecute(execution);\n     }\n \n-    protected abstract void doExecute(final String executionId);\n+    protected abstract void doExecute(final DelegateExecution execution);\n }","previous_filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/AbstractFlowableServiceTask.java"},{"sha":"2ecb0d5b8b0f5a62cb7ce97332fb422350280703","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/GenerateToken.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FGenerateToken.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -21,24 +21,24 @@\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class GenerateToken extends AbstractFlowableServiceTask {\n+public class GenerateToken extends FlowableServiceTask {\n \n     @Autowired\n     private ConfDAO confDAO;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n \n         user.generateToken(\n                 confDAO.find(\"token.length\", 256L).intValue(),\n                 confDAO.find(\"token.expireTime\", 60L).intValue());\n \n-        engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n+        execution.setVariable(FlowableRuntimeUtils.USER, user);\n     }\n }"},{"sha":"14ee9c243eef162076ef570b12b2db56671e4a61","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Notify.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FNotify.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FNotify.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FNotify.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -24,6 +24,7 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n@@ -33,19 +34,16 @@\n  * An {@code event} workflow variable needs to be provided as well.\n  */\n @Component\n-public class Notify extends AbstractFlowableServiceTask {\n+public class Notify extends FlowableServiceTask {\n \n     @Autowired\n     private NotificationManager notificationManager;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n-        UserTO userTO = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER_TO, UserTO.class);\n-        String event = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.EVENT, String.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n+        UserTO userTO = execution.getVariable(FlowableRuntimeUtils.USER_TO, UserTO.class);\n+        String event = execution.getVariable(FlowableRuntimeUtils.EVENT, String.class);\n \n         if (StringUtils.isNotBlank(event)) {\n             notificationManager.createTasks("},{"sha":"b1bb3a6062f7084e5178a1ff9c2b1ad111b29bbe","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/PasswordReset.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FPasswordReset.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -26,11 +26,12 @@\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class PasswordReset extends AbstractFlowableServiceTask {\n+public class PasswordReset extends FlowableServiceTask {\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -39,13 +40,10 @@ public class PasswordReset extends AbstractFlowableServiceTask {\n     private UserDataBinder dataBinder;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n-        String token = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.TOKEN, String.class);\n-        String password = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.PASSWORD, String.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n+        String token = execution.getVariable(FlowableRuntimeUtils.TOKEN, String.class);\n+        String password = execution.getVariable(FlowableRuntimeUtils.PASSWORD, String.class);\n \n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n@@ -63,8 +61,8 @@ protected void doExecute(final String executionId) {\n         PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n         // report updated user and propagation by resource as result\n-        engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n-        engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER_PATCH, userPatch);\n-        engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n+        execution.setVariable(FlowableRuntimeUtils.USER, user);\n+        execution.setVariable(FlowableRuntimeUtils.USER_PATCH, userPatch);\n+        execution.setVariable(FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n     }\n }"},{"sha":"ab3799bbf9b1f74b7914a5f5bbb937dbb20c4f8d","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Reactivate.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FReactivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FReactivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FReactivate.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.core.flowable.task;\n \n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class Reactivate extends AbstractFlowableServiceTask {\n+public class Reactivate extends FlowableServiceTask {\n \n     @Override\n-    protected void doExecute(final String executionId) {\n+    protected void doExecute(final DelegateExecution execution) {\n     }\n }"},{"sha":"0a6a85a353560940b2bd2707d70885e74483bf31","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Suspend.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FSuspend.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FSuspend.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FSuspend.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.core.flowable.task;\n \n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class Suspend extends AbstractFlowableServiceTask {\n+public class Suspend extends FlowableServiceTask {\n \n     @Override\n-    protected void doExecute(final String executionId) {\n+    protected void doExecute(final DelegateExecution execution) {\n     }\n }"},{"sha":"0c931e40823243b4c440ae854d35365cdd08c4a8","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/Update.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Ftask%2FUpdate.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -24,11 +24,12 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class Update extends AbstractFlowableServiceTask {\n+public class Update extends FlowableServiceTask {\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -37,22 +38,20 @@ public class Update extends AbstractFlowableServiceTask {\n     private UserDAO userDAO;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        UserPatch userPatch = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER_PATCH, UserPatch.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        UserPatch userPatch = execution.getVariable(FlowableRuntimeUtils.USER_PATCH, UserPatch.class);\n         if (userPatch == null || userPatch.isEmpty()) {\n             LOG.warn(\"No actual update is to be performed: null patch\");\n         } else {\n-            User user = engine.getRuntimeService().\n-                    getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n+            User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n \n             user = userDAO.save(user);\n \n             PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n             // report updated user and propagation by resource as result\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n+            execution.setVariable(FlowableRuntimeUtils.USER, user);\n+            execution.setVariable(FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n         }\n     }\n }"},{"sha":"8325733f9b29c47a5b142c6e9933a7ee864a7b15","filename":"ext/flowable/flowable-bpmn/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -30,7 +30,7 @@ under the License.\n   <process id=\"userWorkflow\" name=\"User Workflow\" isExecutable=\"true\">\n     <startEvent id=\"theStart\"/>\n     <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"/>\n-    <serviceTask id=\"create\" name=\"Create\" flowable:expression=\"#{create.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"create\" name=\"Create\" flowable:delegateExpression=\"${create}\"/>\n     <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"activate\"/>\n     <scriptTask id=\"activate\" name=\"Activate\" scriptFormat=\"groovy\" flowable:autoStoreVariables=\"false\">\n       <script><![CDATA[execution.setVariable(\"propagateEnable\", Boolean.TRUE);]]></script>\n@@ -54,9 +54,9 @@ under the License.\n     <sequenceFlow id=\"active2ConfirmPasswordReset\" sourceRef=\"activeGw\" targetRef=\"checkToken4ConfirmPasswordReset\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'confirmPasswordReset'}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"update\" name=\"Update\" flowable:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"update\" name=\"Update\" flowable:delegateExpression=\"${update}\"/>\n     <sequenceFlow id=\"sid-EA22026A-25F0-4ED0-AB6E-9CE9CE74623C\" sourceRef=\"update\" targetRef=\"active\"/>\n-    <serviceTask id=\"suspend\" name=\"Suspend\" flowable:expression=\"#{suspend.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"suspend\" name=\"Suspend\" flowable:delegateExpression=\"${suspend}\"/>\n     <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n     <userTask id=\"suspended\" name=\"Suspended\"/>\n     <sequenceFlow id=\"flow11\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n@@ -67,17 +67,17 @@ under the License.\n     <sequenceFlow id=\"suspended2Delete\" sourceRef=\"suspendedGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"reactivate\" name=\"Reactivate\" flowable:expression=\"#{reactivate.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"reactivate\" name=\"Reactivate\" flowable:delegateExpression=\"${reactivate}\"/>\n     <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n-    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate Token\" flowable:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate Token\" flowable:delegateExpression=\"${generateToken}\"/>\n     <sequenceFlow id=\"sid-7F78CE07-A7A1-467F-BB4B-40FB234AEFF7\" sourceRef=\"generateToken4PasswordReset\" targetRef=\"notify4RequestPasswordReset\"/>\n-    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" flowable:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" flowable:delegateExpression=\"${notify}\"/>\n     <sequenceFlow id=\"sid-CF9ACA40-7750-47C3-A508-7250D24D4F1F\" sourceRef=\"notify4RequestPasswordReset\" targetRef=\"active\"/>\n-    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" flowable:expression=\"#{passwordReset.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" flowable:delegateExpression=\"${passwordReset}\"/>\n     <sequenceFlow id=\"sid-3E9FE01D-CC60-4A95-B356-CA0DC000FAD6\" sourceRef=\"checkToken4ConfirmPasswordReset\" targetRef=\"notify4ConfirmPasswordReset\"/>\n-    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" flowable:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" flowable:delegateExpression=\"${notify}\"/>\n     <sequenceFlow id=\"sid-A37806A7-6B7B-48A2-BB37-DAE640231144\" sourceRef=\"notify4ConfirmPasswordReset\" targetRef=\"active\"/>\n-    <serviceTask id=\"delete\" name=\"Delete\" flowable:expression=\"#{delete.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"delete\" name=\"Delete\" flowable:delegateExpression=\"${delete}\"/>\n     <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n     <endEvent id=\"theEnd\"/>\n   </process>"},{"sha":"07de2f390c0107691e08ede4635602ba6fe7814e","filename":"fit/core-reference/src/main/java-all/org/apache/syncope/fit/core/reference/flowable/AssignDirectorGroup.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FAssignDirectorGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FAssignDirectorGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FAssignDirectorGroup.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -21,16 +21,17 @@\n import org.apache.syncope.common.lib.patch.MembershipPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n-import org.apache.syncope.core.flowable.task.AbstractFlowableServiceTask;\n+import org.apache.syncope.core.flowable.task.FlowableServiceTask;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class AssignDirectorGroup extends AbstractFlowableServiceTask {\n+public class AssignDirectorGroup extends FlowableServiceTask {\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -39,12 +40,11 @@ public class AssignDirectorGroup extends AbstractFlowableServiceTask {\n     private UserDAO userDAO;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.getVariable(FlowableRuntimeUtils.USER, User.class);\n \n-        Boolean secondLevelApprove = engine.getRuntimeService().\n-                getVariable(executionId, \"secondLevelApprove\", Boolean.class);\n+        Boolean secondLevelApprove = execution.\n+                getVariable(\"secondLevelApprove\", Boolean.class);\n         if (Boolean.TRUE.equals(secondLevelApprove)) {\n             user = userDAO.save(user);\n \n@@ -56,8 +56,8 @@ protected void doExecute(final String executionId) {\n             PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n             // report updated user and propagation by resource as result\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n+            execution.setVariable(FlowableRuntimeUtils.USER, user);\n+            execution.setVariable(FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n         } else {\n             LOG.info(\"Second level was not approved, not assigning the director group to \" + user.getUsername());\n         }"},{"sha":"aa00fe433433b01fc1bf798e79a17e321eb2e6b5","filename":"fit/core-reference/src/main/java-all/org/apache/syncope/fit/core/reference/flowable/CreateARelationship.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FCreateARelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FCreateARelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava-all%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2Fflowable%2FCreateARelationship.java?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -22,16 +22,17 @@\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n-import org.apache.syncope.core.flowable.task.AbstractFlowableServiceTask;\n+import org.apache.syncope.core.flowable.task.FlowableServiceTask;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n+import org.flowable.engine.delegate.DelegateExecution;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class CreateARelationship extends AbstractFlowableServiceTask {\n+public class CreateARelationship extends FlowableServiceTask {\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -40,17 +41,15 @@ public class CreateARelationship extends AbstractFlowableServiceTask {\n     private UserDAO userDAO;\n \n     @Override\n-    protected void doExecute(final String executionId) {\n-        User user = engine.getRuntimeService().\n-                getVariable(executionId, FlowableRuntimeUtils.USER, User.class);\n+    protected void doExecute(final DelegateExecution execution) {\n+        User user = execution.\n+                getVariable(FlowableRuntimeUtils.USER, User.class);\n \n-        Boolean approve = engine.getRuntimeService().\n-                getVariable(executionId, \"approve\", Boolean.class);\n+        Boolean approve = execution.getVariable(\"approve\", Boolean.class);\n         if (Boolean.TRUE.equals(approve)) {\n             user = userDAO.save(user);\n \n-            String printer = engine.getRuntimeService().\n-                    getVariable(executionId, \"printer\", String.class);\n+            String printer = execution.getVariable(\"printer\", String.class);\n \n             UserPatch userPatch = new UserPatch();\n             userPatch.setKey(user.getKey());\n@@ -62,8 +61,8 @@ protected void doExecute(final String executionId) {\n             PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n             // report updated user and propagation by resource as result\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.USER, user);\n-            engine.getRuntimeService().setVariable(executionId, FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n+            execution.setVariable(FlowableRuntimeUtils.USER, user);\n+            execution.setVariable(FlowableRuntimeUtils.PROP_BY_RESOURCE, propByRes);\n         } else {\n             LOG.info(\"Printer assignment to \" + user.getUsername() + \" was not approved\");\n         }"},{"sha":"4b67f8983f333d14642b83fa796d1af27e29a865","filename":"fit/core-reference/src/main/resources/assignPrinterRequest.bpmn20.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FassignPrinterRequest.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FassignPrinterRequest.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FassignPrinterRequest.bpmn20.xml?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -50,7 +50,7 @@ under the License.\n       </extensionElements>\n     </userTask>\n     <sequenceFlow id=\"sid-D7047714-8E57-46B8-B6D4-4844DE330329\" sourceRef=\"selectPrinter\" targetRef=\"approvePrinter\"/>\n-    <serviceTask id=\"createARelationship\" name=\"Create ARelationship\" flowable:expression=\"#{createARelationship.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"createARelationship\" name=\"Create ARelationship\" flowable:delegateExpression=\"${createARelationship}\"/>\n     <sequenceFlow id=\"sid-33880AE7-35C6-4A39-8E5B-12D8BA53F042\" sourceRef=\"approvePrinter\" targetRef=\"createARelationship\"/>\n     <sequenceFlow id=\"sid-831E1896-EDF9-4F7D-AA42-E86CC1F8C5D3\" sourceRef=\"createARelationship\" targetRef=\"endevent1\"/>\n   </process>"},{"sha":"605d230f550de46a9b7543acd8e08e2a852272d6","filename":"fit/core-reference/src/main/resources/directorGroupRequest.bpmn20.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FdirectorGroupRequest.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FdirectorGroupRequest.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FdirectorGroupRequest.bpmn20.xml?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -44,7 +44,7 @@ under the License.\n         <flowable:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\" variable=\"rejectReason\"/>\n       </extensionElements>\n     </userTask>\n-    <serviceTask id=\"assignDirectorGroup\" name=\"Assign director group\" flowable:expression=\"#{assignDirectorGroup.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"assignDirectorGroup\" name=\"Assign director group\" flowable:delegateExpression=\"${assignDirectorGroup}\"/>\n     <exclusiveGateway id=\"sid-1E2454BD-FAE9-4A15-B169-D41843A39C15\" default=\"sid-338A4B20-89E9-46B2-8AB3-36291455051B\"/>\n     <sequenceFlow id=\"sid-A7C20EB5-AAE6-4CF3-A151-F1A9FA9207A0\" sourceRef=\"firstApproval\" targetRef=\"sid-1E2454BD-FAE9-4A15-B169-D41843A39C15\"/>\n     <sequenceFlow id=\"sid-92E7D60C-09E7-465A-8115-C60ACD06E955\" sourceRef=\"secondApproval\" targetRef=\"assignDirectorGroup\"/>"},{"sha":"79e4b3971db948a899e719bfad7a0bce253be1ea","filename":"fit/core-reference/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9dd0b6603a305d2c3e3155aad6177057e4a62a1c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=9dd0b6603a305d2c3e3155aad6177057e4a62a1c","patch":"@@ -30,7 +30,7 @@ under the License.\n   <process id=\"userWorkflow\" name=\"User Workflow\" isExecutable=\"true\">\n     <startEvent id=\"theStart\"/>\n     <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"/>\n-    <serviceTask id=\"create\" name=\"Create\" flowable:expression=\"#{create.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"create\" name=\"Create\" flowable:delegateExpression=\"${create}\"/>\n     <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"createGW\"/>\n     <exclusiveGateway id=\"createGW\" default=\"create2Activate\"/>\n     <userTask id=\"createApproval\" name=\"Create approval\" flowable:candidateGroups=\"managingDirector\" flowable:formKey=\"createApproval\">\n@@ -75,9 +75,9 @@ try {\n     <sequenceFlow id=\"enableGW2Suspended\" sourceRef=\"enableGW\" targetRef=\"suspend\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${!enabled}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"activate\" name=\"Activate\" flowable:expression=\"#{autoActivate.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"activate\" name=\"Activate\" flowable:delegateExpression=\"${autoActivate}\"/>\n     <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"/>\n-    <serviceTask id=\"generateToken\" name=\"Generate token\" flowable:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"generateToken\" name=\"Generate token\" flowable:delegateExpression=\"${generateToken}\"/>\n     <sequenceFlow id=\"flow5\" sourceRef=\"generateToken\" targetRef=\"created\"/>\n     <userTask id=\"created\" name=\"Created\"/>\n     <sequenceFlow id=\"flow6\" sourceRef=\"created\" targetRef=\"optinGW\"/>\n@@ -164,9 +164,9 @@ try {\n       ]]></script>\n     </scriptTask>\n     <sequenceFlow id=\"flow8ter\" sourceRef=\"rejectUpdate\" targetRef=\"active\"/>\n-    <serviceTask id=\"update\" name=\"Update\" flowable:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"update\" name=\"Update\" flowable:delegateExpression=\"${update}\"/>\n     <sequenceFlow id=\"flow9\" sourceRef=\"update\" targetRef=\"active\"/>\n-    <serviceTask id=\"suspend\" name=\"Suspend\" flowable:expression=\"#{suspend.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"suspend\" name=\"Suspend\" flowable:delegateExpression=\"${suspend}\"/>\n     <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n     <userTask id=\"suspended\" name=\"Suspended\"/>\n     <sequenceFlow id=\"flow11\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n@@ -177,7 +177,7 @@ try {\n     <sequenceFlow id=\"suspended2Delete\" sourceRef=\"suspendedGw\" targetRef=\"delete\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"reactivate\" name=\"Reactivate\" flowable:expression=\"#{reactivate.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"reactivate\" name=\"Reactivate\" flowable:delegateExpression=\"${reactivate}\"/>\n     <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n     <scriptTask id=\"reject\" name=\"Reject\" scriptFormat=\"groovy\" flowable:autoStoreVariables=\"false\">\n       <script><![CDATA[\n@@ -216,18 +216,18 @@ try {\n       ]]></script>\n     </scriptTask>\n     <sequenceFlow id=\"flow14ter\" sourceRef=\"rejectDelete\" targetRef=\"active\"/>\n-    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate token\" flowable:expression=\"#{generateToken.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"generateToken4PasswordReset\" name=\"Generate token\" flowable:delegateExpression=\"${generateToken}\"/>\n     <sequenceFlow id=\"flow15\" sourceRef=\"generateToken4PasswordReset\" targetRef=\"notify4RequestPasswordReset\"/>\n-    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" flowable:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"notify4RequestPasswordReset\" name=\"Notification\" flowable:delegateExpression=\"${notify}\"/>\n     <sequenceFlow id=\"flow16\" sourceRef=\"notify4RequestPasswordReset\" targetRef=\"active\"/>\n-    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" flowable:expression=\"#{passwordReset.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"checkToken4ConfirmPasswordReset\" name=\"Check token, remove and update password\" flowable:delegateExpression=\"${passwordReset}\"/>\n     <sequenceFlow id=\"flow17\" sourceRef=\"checkToken4ConfirmPasswordReset\" targetRef=\"notify4ConfirmPasswordReset\"/>\n-    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" flowable:expression=\"#{notify.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"notify4ConfirmPasswordReset\" name=\"Notification\" flowable:delegateExpression=\"${notify}\"/>\n     <sequenceFlow id=\"flow18\" sourceRef=\"notify4ConfirmPasswordReset\" targetRef=\"active\"/>\n-    <serviceTask id=\"delete\" name=\"Delete\" flowable:expression=\"#{delete.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"delete\" name=\"Delete\" flowable:delegateExpression=\"${delete}\"/>\n     <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n     <endEvent id=\"theEnd\"/>\n-    <serviceTask id=\"updateWhilePendingCreateApproval\" name=\"Update\" flowable:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"updateWhilePendingCreateApproval\" name=\"Update\" flowable:delegateExpression=\"${update}\"/>\n     <sequenceFlow id=\"sid-76B82B68-099D-4729-B8CF-D028386FE900\" sourceRef=\"createApprovalGW\" targetRef=\"createApproval\"/>\n     <sequenceFlow id=\"sid-B2EEC511-2924-4A95-B0B8-E35DA268DD58\" sourceRef=\"createApprovalGW\" targetRef=\"rejectedGw\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${task == 'delete'}]]></conditionExpression>\n@@ -246,7 +246,7 @@ try {\n     <sequenceFlow id=\"createAsAnonymous2Approval\" sourceRef=\"createGW\" targetRef=\"createApproval\">\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${wfExecutor == 'anonymous' || flowableUtils.isUserIngroup(userTO, 'groupForWorkflowApproval')}]]></conditionExpression>\n     </sequenceFlow>\n-    <serviceTask id=\"updateWhilePendingUpdateApproval\" name=\"Update\" flowable:expression=\"#{update.execute(execution.processInstanceId)}\"/>\n+    <serviceTask id=\"updateWhilePendingUpdateApproval\" name=\"Update\" flowable:delegateExpression=\"${update}\"/>\n     <exclusiveGateway id=\"sid-4C9C9117-26DB-4326-A12B-EEDA42EADF07\" default=\"sid-12E29B94-C369-45C1-BCEF-C165AFDA525A\"/>\n     <sequenceFlow id=\"sid-930DADF1-C361-43DD-A240-582F21DEB9B6\" sourceRef=\"createApproval\" targetRef=\"sid-8CFA3152-19AA-4878-AD2C-96B63F6E98C7\"/>\n     <sequenceFlow id=\"sid-A2BDF803-688C-4A4D-9D33-6D859C029245\" sourceRef=\"updateApproval\" targetRef=\"sid-4C9C9117-26DB-4326-A12B-EEDA42EADF07\"/>"}]}