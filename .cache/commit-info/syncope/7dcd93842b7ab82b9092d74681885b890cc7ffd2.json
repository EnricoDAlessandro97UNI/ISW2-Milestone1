{"sha":"7dcd93842b7ab82b9092d74681885b890cc7ffd2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdkY2Q5Mzg0MmI3YWI4MmI5MDkyZDc0NjgxODg1Yjg5MGNjN2ZmZDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-05T07:36:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-05T07:43:44Z"},"message":"White noise","tree":{"sha":"02250f86a68146c5f177fd687bb752b17c6d322a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/02250f86a68146c5f177fd687bb752b17c6d322a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7dcd93842b7ab82b9092d74681885b890cc7ffd2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7dcd93842b7ab82b9092d74681885b890cc7ffd2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7dcd93842b7ab82b9092d74681885b890cc7ffd2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7dcd93842b7ab82b9092d74681885b890cc7ffd2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bec0a2718694d18b932e8777d4b51927a17ea15d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bec0a2718694d18b932e8777d4b51927a17ea15d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bec0a2718694d18b932e8777d4b51927a17ea15d"}],"stats":{"total":18,"additions":10,"deletions":8},"files":[{"sha":"31c3a12e06736740a09507d1ebb7955b4c409143","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2IdPLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7dcd93842b7ab82b9092d74681885b890cc7ffd2/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7dcd93842b7ab82b9092d74681885b890cc7ffd2/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java?ref=7dcd93842b7ab82b9092d74681885b890cc7ffd2","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.core.provisioning.api.data.SAML2IdPDataBinder;\n import org.apache.wss4j.common.saml.OpenSAMLUtil;\n import org.opensaml.saml.common.xml.SAMLConstants;\n+import org.opensaml.saml.saml2.core.NameID;\n import org.opensaml.saml.saml2.metadata.EntitiesDescriptor;\n import org.opensaml.saml.saml2.metadata.EntityDescriptor;\n import org.opensaml.saml.saml2.metadata.IDPSSODescriptor;\n@@ -149,7 +150,7 @@ private List<SAML2IdPTO> importIdPs(final InputStream input) throws Exception {\n \n             ItemTO connObjectKeyItem = new ItemTO();\n             connObjectKeyItem.setIntAttrName(\"username\");\n-            connObjectKeyItem.setExtAttrName(\"NameID\");\n+            connObjectKeyItem.setExtAttrName(NameID.DEFAULT_ELEMENT_LOCAL_NAME);\n             idpTO.setConnObjectKeyItem(connObjectKeyItem);\n \n             SAML2IdPEntity idp = cache.put(idpEntityDescriptor, idpTO);"},{"sha":"de8eb2fc34fb6c284c5f274519a9b3e725817ac7","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7dcd93842b7ab82b9092d74681885b890cc7ffd2/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7dcd93842b7ab82b9092d74681885b890cc7ffd2/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=7dcd93842b7ab82b9092d74681885b890cc7ffd2","patch":"@@ -27,6 +27,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -438,12 +439,12 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n         Assertion assertion = validatorResponse.getOpensamlAssertion();\n         NameID nameID = assertion.getSubject().getNameID();\n         if (nameID == null) {\n-            throw new IllegalArgumentException(\"NameID not found\");\n+            throw new IllegalArgumentException(NameID.DEFAULT_ELEMENT_LOCAL_NAME + \" not found\");\n         }\n \n         String keyValue = null;\n         if (StringUtils.isNotBlank(nameID.getValue())\n-                && idp.getConnObjectKeyItem().getExtAttrName().equals(\"NameID\")) {\n+                && idp.getConnObjectKeyItem().getExtAttrName().equals(NameID.DEFAULT_ELEMENT_LOCAL_NAME)) {\n \n             keyValue = nameID.getValue();\n         }\n@@ -472,11 +473,11 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n                         }\n                     }\n \n-                    Attr attrTO = new Attr();\n-                    attrTO.setSchema(attrName);\n-                    attr.getAttributeValues().stream().\n-                            filter(value -> value.getDOM() != null).\n-                            forEachOrdered(value -> attrTO.getValues().add(value.getDOM().getTextContent()));\n+                    Attr attrTO = new Attr.Builder(attrName).\n+                            values(attr.getAttributeValues().stream().\n+                                    filter(value -> value.getDOM() != null).\n+                                    map(value -> value.getDOM().getTextContent()).\n+                                    collect(Collectors.toList())).build();\n                     responseTO.getAttrs().add(attrTO);\n                 }\n             }"}]}