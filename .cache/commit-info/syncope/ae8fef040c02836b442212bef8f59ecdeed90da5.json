{"sha":"ae8fef040c02836b442212bef8f59ecdeed90da5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFlOGZlZjA0MGMwMjgzNmI0NDIyMTJiZWY4ZjU5ZWNkZWVkOTBkYTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-16T13:11:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-16T13:11:31Z"},"message":"[SYNCOPE-1358] BooleanUtils to the resce","tree":{"sha":"f324043260d8e59a26ce4098ab3316412279b751","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f324043260d8e59a26ce4098ab3316412279b751"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ae8fef040c02836b442212bef8f59ecdeed90da5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae8fef040c02836b442212bef8f59ecdeed90da5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ae8fef040c02836b442212bef8f59ecdeed90da5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae8fef040c02836b442212bef8f59ecdeed90da5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"842a0fb9d8a1c8f5a1dd4e5259b56dc8af3cf7a3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/842a0fb9d8a1c8f5a1dd4e5259b56dc8af3cf7a3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/842a0fb9d8a1c8f5a1dd4e5259b56dc8af3cf7a3"}],"stats":{"total":37,"additions":30,"deletions":7},"files":[{"sha":"1c8f5777e1f6589109b647c974182c2ccf36abd0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":30,"deletions":7,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae8fef040c02836b442212bef8f59ecdeed90da5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae8fef040c02836b442212bef8f59ecdeed90da5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=ae8fef040c02836b442212bef8f59ecdeed90da5","patch":"@@ -25,6 +25,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.regex.Pattern;\n+import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.cxf.jaxrs.ext.search.ConditionType;\n@@ -40,7 +41,6 @@\n import org.apache.syncope.common.lib.search.SyncopeProperty;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -264,11 +264,23 @@ public static String buildFIQL(\n                         if (StringUtils.isNotBlank(clause.getProperty())) {\n                             boolean isLong = false;\n                             boolean isDouble = false;\n+                            boolean isBoolean = false;\n                             if (availableSchemaTypes.get(clause.getProperty()) != null) {\n-                                isLong = availableSchemaTypes.get(clause.getProperty()).getType()\n-                                        == AttrSchemaType.Long;\n-                                isDouble = availableSchemaTypes.get(clause.getProperty()).getType()\n-                                        == AttrSchemaType.Double;\n+                                switch (availableSchemaTypes.get(clause.getProperty()).getType()) {\n+                                    case Long:\n+                                        isLong = true;\n+                                        break;\n+\n+                                    case Double:\n+                                        isDouble = true;\n+                                        break;\n+\n+                                    case Boolean:\n+                                        isBoolean = true;\n+                                        break;\n+\n+                                    default:\n+                                }\n                             }\n \n                             SyncopeProperty property = builder.is(clause.getProperty());\n@@ -314,16 +326,27 @@ public static String buildFIQL(\n                                     break;\n \n                                 case NOT_EQUALS:\n-                                    condition = property.notEqualTolIgnoreCase(value);\n+                                    condition = isLong\n+                                            ? property.notEqualTo(NumberUtils.toLong(value))\n+                                            : isDouble\n+                                                    ? property.notEqualTo(NumberUtils.toDouble(value))\n+                                                    : isBoolean\n+                                                            ? property.notEqualTo(BooleanUtils.toStringTrueFalse(\n+                                                                    BooleanUtils.toBoolean(value)))\n+                                                            : property.notEqualTolIgnoreCase(value);\n                                     break;\n \n                                 case EQUALS:\n                                     condition = isLong\n                                             ? property.equalTo(NumberUtils.toLong(value))\n                                             : isDouble\n                                                     ? property.equalTo(NumberUtils.toDouble(value))\n-                                                    : property.equalToIgnoreCase(value);\n+                                                    : isBoolean\n+                                                            ? property.equalTo(BooleanUtils.toStringTrueFalse(\n+                                                                    BooleanUtils.toBoolean(value)))\n+                                                            : property.equalToIgnoreCase(value);\n                                     break;\n+\n                                 default:\n                                     condition = property.equalToIgnoreCase(value);\n                                     break;"}]}