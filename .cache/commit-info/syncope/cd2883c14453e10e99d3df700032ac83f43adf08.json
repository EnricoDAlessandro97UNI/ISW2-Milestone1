{"sha":"cd2883c14453e10e99d3df700032ac83f43adf08","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNkMjg4M2MxNDQ1M2UxMGU5OWQzZGY3MDAwMzJhYzgzZjQzYWRmMDg=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:13:27Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:13:27Z"},"message":"sonar: fix unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332754 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"969b3a08167a8c49f4c609bf2aed9a785ccc8075","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/969b3a08167a8c49f4c609bf2aed9a785ccc8075"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cd2883c14453e10e99d3df700032ac83f43adf08","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cd2883c14453e10e99d3df700032ac83f43adf08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cd2883c14453e10e99d3df700032ac83f43adf08","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cd2883c14453e10e99d3df700032ac83f43adf08/comments","author":null,"committer":null,"parents":[{"sha":"8230ff66f6e04a42a99bab0f2348859f2e5e7ff3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8230ff66f6e04a42a99bab0f2348859f2e5e7ff3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8230ff66f6e04a42a99bab0f2348859f2e5e7ff3"}],"stats":{"total":16,"additions":12,"deletions":4},"files":[{"sha":"9af1efb2b3ba77dc0f3402bf442017fd5ef37543","filename":"console/src/main/java/org/apache/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cd2883c14453e10e99d3df700032ac83f43adf08/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cd2883c14453e10e99d3df700032ac83f43adf08/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=cd2883c14453e10e99d3df700032ac83f43adf08","patch":"@@ -47,7 +47,6 @@\n public class PolicyModalPage<T extends PolicyTO> extends BaseModalPage {\n \n     private static final long serialVersionUID = -7325772767481076679L;\n-\n     @SpringBean\n     private PolicyRestClient policyRestClient;\n \n@@ -77,17 +76,17 @@ public PolicyModalPage(final ModalWindow window, final T policyTO) {\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT }));\n+                type.setChoices(Arrays.asList(new PolicyType[]{PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT}));\n                 break;\n \n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD }));\n+                type.setChoices(Arrays.asList(new PolicyType[]{PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD}));\n                 break;\n \n             case GLOBAL_SYNC:\n             case SYNC:\n-                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_SYNC, PolicyType.SYNC }));\n+                type.setChoices(Arrays.asList(new PolicyType[]{PolicyType.GLOBAL_SYNC, PolicyType.SYNC}));\n \n             default:\n         }\n@@ -170,16 +169,25 @@ private void setPolicySpecification(final PolicyTO policyTO, final AbstractPolic\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n+                if (!(specification instanceof AccountPolicySpec))  {\n+                    throw new ClassCastException(\"policy is type Account, but spec is not: \" + specification.getClass().getName());\n+                }\n                 ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) specification);\n                 break;\n \n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n+                if (!(specification instanceof PasswordPolicySpec))  {\n+                    throw new ClassCastException(\"policy is type Password, but spec is not: \" + specification.getClass().getName());\n+                }\n                 ((PasswordPolicyTO) policyTO).setSpecification((PasswordPolicySpec) specification);\n                 break;\n \n             case GLOBAL_SYNC:\n             case SYNC:\n+                if (!(specification instanceof SyncPolicySpec))  {\n+                    throw new ClassCastException(\"policy is type Sync, but spec is not: \" + specification.getClass().getName());\n+                }\n                 ((SyncPolicyTO) policyTO).setSpecification((SyncPolicySpec) specification);\n \n             default:"}]}