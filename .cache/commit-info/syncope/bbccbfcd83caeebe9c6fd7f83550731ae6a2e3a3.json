{"sha":"bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJiY2NiZmNkODNjYWVlYmU5YzZmZDdmODM1NTA3MzFhZTZhMmUzYTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-04-08T10:14:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-04-08T11:28:44Z"},"message":"Upgrading PDFBox","tree":{"sha":"0c9b982db06baf8c0942e98e26b058926e753538","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0c9b982db06baf8c0942e98e26b058926e753538"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6b42a8f609930f10c27058604ff9fbdc1e6a8bcc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b42a8f609930f10c27058604ff9fbdc1e6a8bcc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6b42a8f609930f10c27058604ff9fbdc1e6a8bcc"}],"stats":{"total":159,"additions":72,"deletions":87},"files":[{"sha":"abcd893529c131d9ed6c1379b41bc75423fb74f9","filename":"client/idrepo/common-ui/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fpom.xml?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -95,6 +95,11 @@ under the License.\n       <artifactId>wicket-bootstrap-extensions</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.pdfbox</groupId>\n+      <artifactId>pdfbox</artifactId>\n+    </dependency>\n+      \n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>\n       <artifactId>syncope-common-keymaster-client-api</artifactId>"},{"sha":"1b2ed20e36340037a590db2ea9d4fd1d0ea6f27d","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/BinaryCertPreviewer.java","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -16,9 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+package org.apache.syncope.client.ui.commons.markup.html.form.preview;\n \n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.io.ByteArrayInputStream;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;\n@@ -32,7 +31,7 @@\n import org.apache.wicket.model.Model;\n \n @BinaryPreview(mimeTypes = { \"application/x-x509-ca-cert\", \"application/x-x509-user-cert\", \"application/pkix-cert\" })\n-public class BinaryCertPreviewer extends AbstractBinaryPreviewer {\n+public class BinaryCertPreviewer extends BinaryPreviewer {\n \n     private static final long serialVersionUID = -5843835939538055110L;\n ","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java"},{"sha":"c720cf1f48c09bdb8fb73d48c2a049d4de832bbf","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/BinaryImagePreviewer.java","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -16,9 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+package org.apache.syncope.client.ui.commons.markup.html.form.preview;\n \n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n@@ -27,7 +26,7 @@\n import org.apache.wicket.request.resource.IResource;\n \n @BinaryPreview(mimeTypes = { \"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/x-png\", \"image/vnd.wap.wbmp\" })\n-public class BinaryImagePreviewer extends AbstractBinaryPreviewer {\n+public class BinaryImagePreviewer extends BinaryPreviewer {\n \n     private static final long serialVersionUID = 3338812359368457349L;\n ","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java"},{"sha":"d41b0c5a8583b447ba30b5f21be523e6ef80c3a7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/BinaryPDFPreviewer.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -16,9 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+package org.apache.syncope.client.ui.commons.markup.html.form.preview;\n \n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.awt.Graphics2D;\n import java.awt.RenderingHints;\n import java.awt.image.BufferedImage;\n@@ -27,6 +26,7 @@\n import java.io.InputStream;\n import java.io.Serializable;\n import java.time.Instant;\n+import org.apache.pdfbox.Loader;\n import org.apache.pdfbox.cos.COSObject;\n import org.apache.pdfbox.io.MemoryUsageSetting;\n import org.apache.pdfbox.pdmodel.DefaultResourceCache;\n@@ -43,7 +43,7 @@\n import org.apache.wicket.request.resource.IResource;\n \n @BinaryPreview(mimeTypes = { \"application/pdf\" })\n-public class BinaryPDFPreviewer extends AbstractBinaryPreviewer {\n+public class BinaryPDFPreviewer extends BinaryPreviewer {\n \n     private static final long serialVersionUID = -6606409541566687016L;\n \n@@ -64,7 +64,7 @@ public Component preview(final byte[] uploadedBytes) {\n         firstPage = null;\n \n         try (InputStream bais = new ByteArrayInputStream(uploadedBytes);\n-                PDDocument document = PDDocument.load(bais, MemoryUsageSetting.setupTempFileOnly())) {\n+                PDDocument document = Loader.loadPDF(bais, MemoryUsageSetting.setupTempFileOnly())) {\n \n             document.setResourceCache(new DefaultResourceCache() {\n ","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryPDFPreviewer.java"},{"sha":"29f79f93955da968d76ef1037372d931cd724678","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/BinaryPreviewer.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -24,15 +24,15 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractBinaryPreviewer extends Panel {\n+public abstract class BinaryPreviewer extends Panel {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBinaryPreviewer.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(BinaryPreviewer.class);\n \n     private static final long serialVersionUID = -2482706463911903025L;\n \n     protected final String mimeType;\n \n-    public AbstractBinaryPreviewer(final String id, final String mimeType) {\n+    public BinaryPreviewer(final String id, final String mimeType) {\n         super(id);\n         this.mimeType = mimeType;\n     }","previous_filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/AbstractBinaryPreviewer.java"},{"sha":"5632ceaf0c408492fc7f62b7357845a3181c2977","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/BinaryTextPreviewer.java","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -16,9 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n+package org.apache.syncope.client.ui.commons.markup.html.form.preview;\n \n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -34,7 +33,7 @@\n import org.apache.wicket.util.io.IOUtils;\n \n @BinaryPreview(mimeTypes = { \"application/json\", \"application/xml\" })\n-public class BinaryTextPreviewer extends AbstractBinaryPreviewer {\n+public class BinaryTextPreviewer extends BinaryPreviewer {\n \n     private static final long serialVersionUID = 3808379310090668773L;\n ","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryTextPreviewer.java"},{"sha":"bf7e13bd3b667e7723a4d05054f6ec8f9c223688","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/preview/DefaultPreviewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -22,7 +22,7 @@\n import org.apache.wicket.Component;\n \n @BinaryPreview(mimeTypes = {})\n-public class DefaultPreviewer extends AbstractBinaryPreviewer {\n+public class DefaultPreviewer extends BinaryPreviewer {\n \n     private static final long serialVersionUID = 3338812359368457349L;\n "},{"sha":"db7815822be9861b4008854cc5a0620c69db8b9b","filename":"client/idrepo/console/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -69,11 +69,6 @@ under the License.\n       <artifactId>nimbus-jose-jwt</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.apache.pdfbox</groupId>\n-      <artifactId>pdfbox</artifactId>\n-    </dependency>\n-      \n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>font-awesome</artifactId>"},{"sha":"e1785a726bc3773eda3999effd37c76c779ee9f8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -20,33 +20,35 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.ClassUtils;\n \n public class PreviewUtils {\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(PreviewUtils.class);\n+\n     @Autowired\n     private ClassPathScanImplementationLookup lookup;\n \n-    public static AbstractBinaryPreviewer getDefaultPreviewer(final String mimeType) {\n-        return new DefaultPreviewer(\"previewer\", mimeType);\n-    }\n-\n-    public AbstractBinaryPreviewer getPreviewer(final String mimeType) {\n+    public BinaryPreviewer getPreviewer(final String mimeType) {\n         if (StringUtils.isBlank(mimeType)) {\n-            return null;\n+            return new DefaultPreviewer(\"previewer\", mimeType);\n         }\n \n-        Class<? extends AbstractBinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n+        Class<? extends BinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n         try {\n             return previewer == null\n-                    ? null\n+                    ? new DefaultPreviewer(\"previewer\", mimeType)\n                     : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class).\n                             newInstance(new Object[] { \"previewer\", mimeType });\n         } catch (Exception e) {\n-            return null;\n+            LOG.error(\"While getting BinaryPreviewer for {}\", mimeType, e);\n+\n+            return new DefaultPreviewer(\"previewer\", mimeType);\n         }\n     }\n }"},{"sha":"65df3a8107d109dfefbb5f40ccdd9af1e0faf890","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.console.widgets.BaseExtWidget;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n@@ -120,7 +120,7 @@ protected ClassPathScanningCandidateComponentProvider scanner() {\n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n \n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(BinaryPreviewer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(UserFormFinalizer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtWidget.class));\n@@ -186,8 +186,8 @@ public void load() {\n                         } else {\n                             idRepoPages.add((Class<? extends BasePage>) clazz);\n                         }\n-                    } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n-                        addClass(AbstractBinaryPreviewer.class.getName(), clazz);\n+                    } else if (BinaryPreviewer.class.isAssignableFrom(clazz)) {\n+                        addClass(BinaryPreviewer.class.getName(), clazz);\n                     } else if (UserFormFinalizer.class.isAssignableFrom(clazz)) {\n                         addClass(UserFormFinalizer.class.getName(), clazz);\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n@@ -260,11 +260,11 @@ public <T> List<Class<? extends T>> getClasses(final Class<T> reference) {\n                 collect(Collectors.toList());\n     }\n \n-    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+    public Class<? extends BinaryPreviewer> getPreviewerClass(final String mimeType) {\n         LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n \n-        Class<? extends AbstractBinaryPreviewer> previewer = null;\n-        for (Class<? extends AbstractBinaryPreviewer> candidate : getClasses(AbstractBinaryPreviewer.class)) {\n+        Class<? extends BinaryPreviewer> previewer = null;\n+        for (Class<? extends BinaryPreviewer> candidate : getClasses(BinaryPreviewer.class)) {\n             LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n             if (candidate.isAnnotationPresent(BinaryPreview.class)\n                     && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {"},{"sha":"bc48ae05ad719c9608d8e83cc424ff5cea34476c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -29,6 +29,7 @@\n import java.util.ArrayList;\n import java.util.Base64;\n import java.util.Locale;\n+import java.util.Optional;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n@@ -39,7 +40,7 @@\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.BaseBinaryFieldPanel;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n@@ -84,7 +85,7 @@ public class BinaryFieldPanel extends BaseBinaryFieldPanel {\n \n     private final BinaryFieldDownload fileDownload;\n \n-    private final AbstractBinaryPreviewer previewer;\n+    private final BinaryPreviewer previewer;\n \n     private final IndicatingAjaxLink<Void> resetLink;\n \n@@ -280,16 +281,7 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n         String modelObj = model.getObject();\n \n         if (StringUtils.isNotBlank(modelObj)) {\n-            final Component panelPreview;\n-            if (previewer == null) {\n-                panelPreview = PreviewUtils.getDefaultPreviewer(mimeType);\n-            } else {\n-                panelPreview = previewer.preview(modelObj);\n-            }\n-\n-            if (panelPreview != null) {\n-                changePreviewer(panelPreview);\n-            }\n+            Optional.ofNullable(previewer.preview(modelObj)).ifPresent(this::changePreviewer);\n         }\n \n         downloadLink.setEnabled(StringUtils.isNotBlank(modelObj));"},{"sha":"c0dbe05082b06c94b8552b46f7c0503a8f337f4b","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/commons/PreviewUtils.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -20,33 +20,35 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.ClassUtils;\n \n public class PreviewUtils {\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(PreviewUtils.class);\n+\n     @Autowired\n     private ClassPathScanImplementationLookup lookup;\n \n-    public static AbstractBinaryPreviewer getDefaultPreviewer(final String mimeType) {\n-        return new DefaultPreviewer(\"previewer\", mimeType);\n-    }\n-\n-    public AbstractBinaryPreviewer getPreviewer(final String mimeType) {\n+    public BinaryPreviewer getPreviewer(final String mimeType) {\n         if (StringUtils.isBlank(mimeType)) {\n-            return null;\n+            return new DefaultPreviewer(\"previewer\", mimeType);\n         }\n \n-        Class<? extends AbstractBinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n+        Class<? extends BinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n         try {\n             return previewer == null\n-                    ? null\n+                    ? new DefaultPreviewer(\"previewer\", mimeType)\n                     : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class).\n                             newInstance(new Object[] { \"previewer\", mimeType });\n         } catch (Exception e) {\n-            return null;\n+            LOG.error(\"While getting BinaryPreviewer for {}\", mimeType, e);\n+\n+            return new DefaultPreviewer(\"previewer\", mimeType);\n         }\n     }\n }"},{"sha":"c89afff7ffbd527af5dd6293cd808ffc96c7242b","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/init/ClassPathScanImplementationLookup.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.syncope.client.ui.commons.annotations.ExtPage;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.slf4j.Logger;\n@@ -48,7 +48,7 @@ public class ClassPathScanImplementationLookup {\n \n     private List<Class<? extends AbstractResource>> resources;\n \n-    private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n+    private List<Class<? extends BinaryPreviewer>> previewers;\n \n     private List<Class<? extends BaseExtPage>> extPages;\n \n@@ -75,7 +75,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractResource.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseSSOLoginFormPanel.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(BinaryPreviewer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseEnduserWebPage.class));\n \n         scanner.findCandidateComponents(getBasePackage()).forEach(bd -> {\n@@ -98,8 +98,8 @@ public void load() {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n                                     Resource.class.getName(), clazz.getName());\n                         }\n-                    } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n-                        previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                    } else if (BinaryPreviewer.class.isAssignableFrom(clazz)) {\n+                        previewers.add((Class<? extends BinaryPreviewer>) clazz);\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n                         ssoLoginFormPanels.add((Class<? extends BaseSSOLoginFormPanel>) clazz);\n                     } else if (BaseEnduserWebPage.class.isAssignableFrom(clazz)) {\n@@ -122,10 +122,10 @@ public void load() {\n         LOG.debug(\"Wicket Resources found: {}\", resources);\n     }\n \n-    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+    public Class<? extends BinaryPreviewer> getPreviewerClass(final String mimeType) {\n         LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n-        Class<? extends AbstractBinaryPreviewer> previewer = null;\n-        for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n+        Class<? extends BinaryPreviewer> previewer = null;\n+        for (Class<? extends BinaryPreviewer> candidate : previewers) {\n             LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n             if (candidate.isAnnotationPresent(BinaryPreview.class)\n                     && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {"},{"sha":"512283df7ad879bd483b6b4694d9412f06441e10","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -29,6 +29,7 @@\n import java.util.ArrayList;\n import java.util.Base64;\n import java.util.Locale;\n+import java.util.Optional;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n@@ -39,7 +40,7 @@\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.BaseBinaryFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.BinaryPreviewer;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.Component;\n@@ -83,7 +84,7 @@ public class BinaryFieldPanel extends BaseBinaryFieldPanel {\n \n     private final AjaxDownload fileDownload;\n \n-    private final AbstractBinaryPreviewer previewer;\n+    private final BinaryPreviewer previewer;\n \n     private final IndicatingAjaxLink<Void> resetLink;\n \n@@ -279,16 +280,7 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n         String modelObj = model.getObject();\n \n         if (StringUtils.isNotBlank(modelObj)) {\n-            final Component panelPreview;\n-            if (previewer == null) {\n-                panelPreview = PreviewUtils.getDefaultPreviewer(mimeType);\n-            } else {\n-                panelPreview = previewer.preview(modelObj);\n-            }\n-\n-            if (panelPreview != null) {\n-                changePreviewer(panelPreview);\n-            }\n+            Optional.ofNullable(previewer.preview(modelObj)).ifPresent(this::changePreviewer);\n         }\n \n         downloadLink.setEnabled(StringUtils.isNotBlank(modelObj));"},{"sha":"5b4a196fc6784fe44b443abeeca90f6c2381eb85","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/NewBpmnProcess.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n+import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.io.IOUtils;\n-import org.apache.pdfbox.util.Charsets;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.BpmnProcessRestClient;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n@@ -60,7 +60,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                     BpmnProcessRestClient.setDefinition(MediaType.APPLICATION_XML_TYPE, key.getModelObject(),\n                             IOUtils.toString(\n                                     NewBpmnProcess.class.getResourceAsStream(\"empty.bpmn20.xml\"),\n-                                    Charsets.UTF_8.name()).replaceAll(\"%KEY%\", key.getModelObject()));\n+                                    StandardCharsets.UTF_8).replaceAll(\"%KEY%\", key.getModelObject()));\n \n                     key.getModel().setObject(null);\n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n@@ -70,12 +70,12 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                     LOG.error(\"While creating new BPMN process\", e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target) {\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         });\n     }"},{"sha":"fba2ab3420f861b8e6f9bcc6bb562f9a60d33de3","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=bbccbfcd83caeebe9c6fd7f83550731ae6a2e3a3","patch":"@@ -1888,7 +1888,7 @@ under the License.\n       <dependency>\n         <groupId>org.apache.pdfbox</groupId>\n         <artifactId>pdfbox</artifactId>\n-        <version>2.0.23</version>\n+        <version>3.0.0-RC1</version>\n       </dependency>\n \n       <dependency>"}]}