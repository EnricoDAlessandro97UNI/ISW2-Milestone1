{"sha":"fd3cf4cc90dab0decdb8285bb41d2340c3718b79","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZkM2NmNGNjOTBkYWIwZGVjZGI4Mjg1YmI0MWQyMzQwYzM3MThiNzk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-13T15:34:11Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-13T15:34:11Z"},"message":"Fixes 2, with very basic REST calls; maven-jetty-plugin used in the integration phase\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1245956 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"17936144a7c884e9c2b96535af500a42ab71c5a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/17936144a7c884e9c2b96535af500a42ab71c5a0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fd3cf4cc90dab0decdb8285bb41d2340c3718b79","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fd3cf4cc90dab0decdb8285bb41d2340c3718b79","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fd3cf4cc90dab0decdb8285bb41d2340c3718b79","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/comments","author":null,"committer":null,"parents":[{"sha":"097c2fd30866533851d914908f559cdf0f7177e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/097c2fd30866533851d914908f559cdf0f7177e4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/097c2fd30866533851d914908f559cdf0f7177e4"}],"stats":{"total":462,"additions":438,"deletions":24},"files":[{"sha":"e41196a3263c4dd4130b5d58ec697136c2468302","filename":"pom.xml","status":"modified","additions":34,"deletions":8,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -101,10 +101,12 @@\n \n         <wicket.version>1.4.7</wicket.version>\n \n-        <jersey-version>1.2</jersey-version>\n+        <jersey.version>1.2</jersey.version>\n \n         <junit.version>4.8.1</junit.version>\n \n+        <jetty.version>6.1.24</jetty.version>\n+\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \n     </properties>\n@@ -163,17 +165,17 @@\n             <dependency>\n                 <groupId>com.sun.jersey</groupId>\n                 <artifactId>jersey-server</artifactId>\n-                <version>${jersey-version}</version>\n+                <version>${jersey.version}</version>\n             </dependency>\n             <dependency>\n                 <groupId>com.sun.jersey</groupId>\n                 <artifactId>jersey-json</artifactId>\n-                <version>${jersey-version}</version>\n+                <version>${jersey.version}</version>\n             </dependency>\n             <dependency>\n                 <groupId>com.sun.jersey.contribs</groupId>\n                 <artifactId>jersey-spring</artifactId>\n-                <version>${jersey-version}</version>\n+                <version>${jersey.version}</version>\n             </dependency>\n             <!-- /Jersey -->\n \n@@ -187,7 +189,13 @@\n             <dependency>\n                 <groupId>com.sun.jersey</groupId>\n                 <artifactId>jersey-client</artifactId>\n-                <version>${jersey-version}</version>\n+                <version>${jersey.version}</version>\n+                <scope>test</scope>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.mortbay.jetty</groupId>\n+                <artifactId>jetty</artifactId>\n+                <version>${jetty.version}</version>\n                 <scope>test</scope>\n             </dependency>\n             <!-- /TEST -->\n@@ -248,8 +256,8 @@\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-compiler-plugin</artifactId>\n                     <configuration>\n-                        <source>1.5</source>\n-                        <target>1.5</target>\n+                        <source>1.6</source>\n+                        <target>1.6</target>\n                     </configuration>\n                 </plugin>\n                 <plugin>\n@@ -270,6 +278,24 @@\n                         <locales>en,it</locales>\n                     </configuration>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>failsafe-maven-plugin</artifactId>\n+                    <version>2.4.3-alpha-1</version>\n+                    <executions>\n+                        <execution>\n+                            <goals>\n+                                <goal>integration-test</goal>\n+                                <goal>verify</goal>\n+                            </goals>\n+                        </execution>\n+                    </executions>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.mortbay.jetty</groupId>\n+                    <artifactId>maven-jetty-plugin</artifactId>\n+                    <version>${jetty.version}</version>\n+                </plugin>\n             </plugins>\n         </pluginManagement>\n     </build>\n@@ -297,8 +323,8 @@\n \n     <modules>\n         <module>core</module>\n-        <module>console</module>\n         <module>rest</module>\n+        <module>console</module>\n     </modules>\n \n </project>"},{"sha":"46c85b255230e8f6e3eec0c296fc9dac454ce2f0","filename":"rest/pom.xml","status":"modified","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fpom.xml?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -30,6 +30,10 @@\n     <artifactId>syncope-rest</artifactId>\n     <packaging>war</packaging>\n \n+    <properties>\n+        <jetty.port>8080</jetty.port>\n+    </properties>\n+\n     <dependencies>\n \n         <dependency>\n@@ -62,6 +66,11 @@\n             <artifactId>jersey-client</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.mortbay.jetty</groupId>\n+            <artifactId>jetty</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n         <!-- /TEST -->\n \n     </dependencies>\n@@ -70,11 +79,65 @@\n         <finalName>${artifactId}</finalName>\n \n         <plugins>\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>failsafe-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>integration-test</goal>\n+                            <goal>verify</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <encoding>utf-8</encoding>\n+                </configuration>\n+            </plugin>\n             <plugin>\n                 <groupId>org.mortbay.jetty</groupId>\n                 <artifactId>maven-jetty-plugin</artifactId>\n+                <configuration>\n+                    <scanIntervalSeconds>10</scanIntervalSeconds>\n+                    <stopKey>foo</stopKey>\n+                    <stopPort>9999</stopPort>\n+                    <connectors>\n+                        <connector implementation=\"org.mortbay.jetty.nio.SelectChannelConnector\">\n+                            <port>${jetty.port}</port>\n+                            <maxIdleTime>60000</maxIdleTime>\n+                        </connector>\n+                    </connectors>\n+\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>start-jetty</id>\n+                        <phase>pre-integration-test</phase>\n+                        <goals>\n+                            <goal>run</goal>\n+                        </goals>\n+                        <configuration>\n+                            <scanIntervalSeconds>0</scanIntervalSeconds>\n+                            <daemon>true</daemon>\n+                        </configuration>\n+                    </execution>\n+                    <execution>\n+                        <id>stop-jetty</id>\n+                        <phase>post-integration-test</phase>\n+                        <goals>\n+                            <goal>stop</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n             </plugin>\n         </plugins>\n+\n+        <testResources>\n+            <testResource>\n+                <directory>src/test/resources</directory>\n+                <filtering>true</filtering>\n+            </testResource>\n+        </testResources>\n     </build>\n \n </project>"},{"sha":"79d096b65c7c7f6118ff3ef48d6f80090900ebf5","filename":"rest/src/main/java/org/syncope/rest/user/Create.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -18,15 +18,18 @@\n \n import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.Attributes;\n \n-@Path(\"/user/create\")\n+@Path(\"/user/create/{userId}\")\n @Component\n @Scope(\"request\")\n public class Create {\n@@ -39,9 +42,15 @@ public class Create {\n     @PUT\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.TEXT_PLAIN)\n-    public String createUser(Attributes userAttributes) {\n+    public String createUser(@PathParam(\"userId\") String userId,\n+            Attributes userAttributes,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n-        logger.info(\"searchUser() called with attributes \" + userAttributes);\n+        if (test) {\n+            return userId;\n+        }\n+\n+        logger.info(\"createUser() called with attributes \" + userAttributes);\n \n         return \"userId\";\n     }"},{"sha":"5fc14709611cefd266e77745b25eef2372b190f6","filename":"rest/src/main/java/org/syncope/rest/user/Delete.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -18,9 +18,11 @@\n \n import java.util.logging.Logger;\n import javax.ws.rs.DELETE;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n import org.springframework.context.annotation.Scope;\n@@ -38,12 +40,18 @@ public class Delete {\n      */\n     @DELETE\n     @Produces(MediaType.APPLICATION_JSON)\n-    public String deleteUser(@PathParam(\"userId\") String userId) {\n+    public String deleteUser(@PathParam(\"userId\") String userId,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n+\n         if (\"error\".equals(userId)) {\n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n         }\n \n+        if (test) {\n+            return Boolean.TRUE.toString();\n+        }\n+\n         logger.info(\"deleteUser() called for \" + userId);\n \n         return Boolean.TRUE.toString();"},{"sha":"2d6e86e1b1e6c762aec9f10689a1fcf0ce52abd0","filename":"rest/src/main/java/org/syncope/rest/user/PasswordReset.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -17,6 +17,7 @@\n package org.syncope.rest.user;\n \n import java.util.logging.Logger;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n@@ -35,13 +36,18 @@ public class PasswordReset {\n \n     final static Logger logger = Logger.getLogger(PasswordReset.class.getName());\n \n+    public static String getTestValue() {\n+        return \"passwordResetTokenId\";\n+    }\n+\n     /**\n      * TODO: call syncope-core\n      */\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String getPasswordResetToken(@PathParam(\"userId\") String userId,\n-            @QueryParam(\"passwordResetFormURL\") String passwordResetFormURL) {\n+            @QueryParam(\"passwordResetFormURL\") String passwordResetFormURL,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n             logger.severe(\"Entered in the error condition, going ahead...\");\n@@ -50,6 +56,10 @@ public String getPasswordResetToken(@PathParam(\"userId\") String userId,\n                     new Exception(\"Wrong userId: \" + userId));\n         }\n \n+        if (test) {\n+            return getTestValue();\n+        }\n+\n         logger.info(\"getPasswordResetToken called: \" + passwordResetFormURL);\n \n         return \"passwordResetTokenId\";\n@@ -62,7 +72,8 @@ public String getPasswordResetToken(@PathParam(\"userId\") String userId,\n     @Produces(MediaType.APPLICATION_JSON)\n     public String passwordReset(@QueryParam(\"tokenId\") String tokenId,\n             @PathParam(\"userId\") String userId,\n-            @QueryParam(\"newPassword\") String newPassword) {\n+            @QueryParam(\"newPassword\") String newPassword,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n             logger.severe(\"Entered in the error condition, going ahead...\");\n@@ -71,6 +82,10 @@ public String passwordReset(@QueryParam(\"tokenId\") String tokenId,\n                     new Exception(\"Wrong userId: \" + userId));\n         }\n \n+        if (test) {\n+            return Boolean.valueOf(tokenId.equals(getTestValue())).toString();\n+        }\n+\n         logger.info(\"passwordReset called: \" + tokenId + \" / \" + newPassword);\n \n         return Boolean.TRUE.toString();"},{"sha":"aa4fd3acdb8f6ec1d745e34d71622eefa0c20051","filename":"rest/src/main/java/org/syncope/rest/user/Read.java","status":"modified","additions":18,"deletions":1,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -18,10 +18,12 @@\n \n import java.util.Collections;\n import java.util.logging.Logger;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n import org.springframework.context.annotation.Scope;\n@@ -36,19 +38,34 @@ public class Read {\n \n     final static Logger logger = Logger.getLogger(Read.class.getName());\n \n+    public static Attributes getTestValue(String userId) {\n+        Attributes attributes = new Attributes();\n+\n+        attributes.addUserAttribute(\"userId\",\n+                new AttributeValues(Collections.singleton(userId)));\n+\n+        return attributes;\n+    }\n+\n     /**\n      * TODO: read actual values for the corresponding userId via syncope-core\n      */\n     @GET\n     @Produces(MediaType.APPLICATION_JSON)\n-    public Attributes readUser(@PathParam(\"userId\") String userId) {\n+    public Attributes readUser(@PathParam(\"userId\") String userId,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n+\n         if (\"error\".equals(userId)) {\n             logger.severe(\"Entered in the error condition, going ahead...\");\n \n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n         }\n \n+        if (test) {\n+            return getTestValue(userId);\n+        }\n+\n         logger.info(\"readUser called\");\n \n         Attributes attributes = new Attributes();"},{"sha":"4166e1c136562ab5316a686a46fa3aaef0340445","filename":"rest/src/main/java/org/syncope/rest/user/Search.java","status":"modified","additions":22,"deletions":7,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -16,17 +16,18 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.SearchParameters;\n+import org.syncope.rest.user.jaxb.SearchResults;\n \n @Path(\"/user/search\")\n @Component\n@@ -35,20 +36,34 @@ public class Search {\n \n     final static Logger logger = Logger.getLogger(Search.class.getName());\n \n+    public static SearchResults getTestValue() {\n+        SearchResults searchResults = new SearchResults();\n+        searchResults.addResult(\"user1\");\n+        searchResults.addResult(\"user2\");\n+        searchResults.addResult(\"user3\");\n+\n+        return searchResults;\n+    }\n+\n     /**\n      * TODO: call syncope-core\n      */\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n-    public List<String> searchUser(SearchParameters searchParameters) {\n+    public SearchResults searchUser(SearchParameters searchParameters,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         logger.info(\"searchUser() called with parameters \" + searchParameters);\n \n-        List<String> searchResults = new ArrayList<String>();\n-        searchResults.add(\"user1\");\n-        searchResults.add(\"user2\");\n-        searchResults.add(\"user3\");\n+        if (test) {\n+            return getTestValue();\n+        }\n+\n+        SearchResults searchResults = new SearchResults();\n+        searchResults.addResult(\"user1\");\n+        searchResults.addResult(\"user2\");\n+        searchResults.addResult(\"user3\");\n \n         return searchResults;\n     }"},{"sha":"0f4aa210c501383f92aa59b130323da4220551e6","filename":"rest/src/main/java/org/syncope/rest/user/Update.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -18,10 +18,12 @@\n \n import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n import org.springframework.context.annotation.Scope;\n@@ -42,13 +44,18 @@ public class Update {\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n     public String updateUser(@PathParam(\"userId\") String userId,\n-            Attributes userAttributes) {\n+            Attributes userAttributes,\n+            @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n         }\n \n+        if (test) {\n+            return Boolean.TRUE.toString();\n+        }\n+\n         logger.info(\"searchUser() called with userId \" + userId\n                 + \" and attributes \" + userAttributes);\n "},{"sha":"ea39f3aa8965696dd5a9a7079c4dbd7b8f7930f1","filename":"rest/src/main/java/org/syncope/rest/user/config/JAXBContextResolver.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -27,14 +27,15 @@\n import org.syncope.rest.user.jaxb.AttributeValues;\n import org.syncope.rest.user.jaxb.Attributes;\n import org.syncope.rest.user.jaxb.SearchParameters;\n+import org.syncope.rest.user.jaxb.SearchResults;\n \n @Provider\n public final class JAXBContextResolver implements ContextResolver<JAXBContext> {\n \n     private final JAXBContext context;\n     private final Set<Class> types;\n     private final Class[] cTypes = {AttributeValues.class,\n-        Attributes.class, SearchParameters.class};\n+        Attributes.class, SearchParameters.class, SearchResults.class};\n \n     public JAXBContextResolver() throws Exception {\n         this.types = new HashSet(Arrays.asList(cTypes));"},{"sha":"f82b197664a83b13a40749fb439be04f69c7f5d6","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/AttributeValues.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -58,4 +58,19 @@ public void setElements(Set<String> elements) {\n     public String toString() {\n         return elements.toString();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (!(obj instanceof AttributeValues)) {\n+            return false;\n+        }\n+\n+        AttributeValues other = (AttributeValues) obj;\n+        return elements.equals(other.elements);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return elements.hashCode();\n+    }\n }"},{"sha":"6d88692b3771310a544da2bb072e0d3f3b880832","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/Attributes.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -45,8 +45,27 @@ public void addUserAttribute(String name, AttributeValues values) {\n         elements.put(name, values);\n     }\n \n+    public AttributeValues getAttributeValues(String name) {\n+        return elements.get(name);\n+    }\n+\n     @Override\n     public String toString() {\n         return elements.toString();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (!(obj instanceof Attributes)) {\n+            return false;\n+        }\n+\n+        Attributes other = (Attributes) obj;\n+        return elements.equals(other.elements);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return elements.hashCode();\n+    }\n }"},{"sha":"567214b942897968bb796c8ec36418ba6dfe510f","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/SearchResults.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchResults.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchResults.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchResults.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user.jaxb;\n+\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+\n+/**\n+ * TODO: implement\n+ */\n+@XmlRootElement\n+public class SearchResults implements Iterable<String> {\n+\n+    @XmlElement(name = \"result\")\n+    private Set<String> elements;\n+\n+    public SearchResults() {\n+        elements = new HashSet<String>();\n+    }\n+\n+    public void addResult(String result) {\n+        elements.add(result);\n+    }\n+\n+    @Override\n+    public Iterator<String> iterator() {\n+        return elements.iterator();\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (!(obj instanceof SearchResults)) {\n+            return false;\n+        }\n+\n+        SearchResults other = (SearchResults) obj;\n+        return elements.equals(other.elements);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return elements.hashCode();\n+    }\n+}"},{"sha":"503825adb123c22e58579a128c762c0a22efdc26","filename":"rest/src/test/java/org/syncope/rest/user/ConnectionTestITCase.java","status":"added","additions":157,"deletions":0,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FConnectionTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FConnectionTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FConnectionTestITCase.java?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -0,0 +1,157 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import static org.junit.Assert.*;\n+import com.sun.jersey.api.client.Client;\n+import com.sun.jersey.api.client.WebResource;\n+import com.sun.jersey.core.util.MultivaluedMapImpl;\n+import java.io.IOException;\n+import java.lang.String;\n+import java.net.URL;\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.syncope.rest.user.jaxb.Attributes;\n+import org.syncope.rest.user.jaxb.SearchParameters;\n+import org.syncope.rest.user.jaxb.SearchResults;\n+\n+public class ConnectionTestITCase {\n+\n+    final private static String userId = \"test\";\n+    final static Logger logger = Logger.getLogger(ConnectionTestITCase.class.getName());\n+    private static String BASE_URL;\n+    private static Client jerseyClient;\n+\n+    static {\n+        URL fromMavenPropertiesURL =\n+                ConnectionTestITCase.class.getClassLoader().getResource(\"from_maven.properties\");\n+        Properties fromMavenProperties = new Properties();\n+        try {\n+            fromMavenProperties.load(fromMavenPropertiesURL.openStream());\n+        } catch (IOException e) {\n+            logger.log(Level.SEVERE, \"When reading properties file\", e);\n+        }\n+\n+        String jettyPort = fromMavenProperties.getProperty(\"jetty.port\", \"8080\");\n+        BASE_URL = \"http://localhost:\" + jettyPort + \"/syncope-rest/user/\";\n+    }\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        jerseyClient = Client.create();\n+    }\n+\n+    @AfterClass\n+    public static void tearDown() {\n+        jerseyClient.destroy();\n+    }\n+\n+    @Test\n+    public void create() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"create/\" + userId + \"?test=TRUE\");\n+\n+        Attributes userAttributes = new Attributes();\n+        userAttributes.addUserAttribute(\"userId\", Collections.singleton(userId));\n+\n+        String result = webResource.type(MediaType.APPLICATION_JSON).put(\n+                String.class, userAttributes);\n+\n+        assertEquals(userId, result);\n+    }\n+\n+    @Test\n+    public void delete() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"delete/\" + userId + \"?test=TRUE\");\n+\n+        String result = webResource.delete(String.class);\n+\n+        assertTrue(Boolean.valueOf(result));\n+    }\n+\n+    @Test\n+    public void passwordReset() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"passwordReset/\" + userId\n+                + \"?passwordResetFormURL=http%3A%2F%2Fcode.google.com\"\n+                + \"%2Fp%2Fsyncope%2F&test=TRUE\");\n+\n+        String reference1 = PasswordReset.getTestValue();\n+        String result1 = webResource.get(String.class);\n+\n+        assertEquals(reference1, result1);\n+\n+        MultivaluedMap formData = new MultivaluedMapImpl();\n+        formData.add(\"tokenId\", result1);\n+        formData.add(\"newPassword\", \"newPassword\");\n+        formData.add(\"test\", \"TRUE\");\n+\n+        webResource = jerseyClient.resource(\n+                BASE_URL + \"passwordReset/\" + userId);\n+\n+        String result2 = webResource.type(\n+                MediaType.APPLICATION_FORM_URLENCODED).post(\n+                String.class, formData);\n+\n+        assertTrue(Boolean.valueOf(result2));\n+    }\n+\n+    @Test\n+    public void read() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"read/\" + userId + \"?test=TRUE\");\n+\n+        Attributes reference = Read.getTestValue(userId);\n+        Attributes result = webResource.get(Attributes.class);\n+\n+        assertEquals(reference, result);\n+    }\n+\n+    @Test\n+    public void search() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"search/?test=TRUE\");\n+\n+        SearchResults reference = Search.getTestValue();\n+        SearchResults result = webResource.type(MediaType.APPLICATION_JSON).post(\n+                SearchResults.class, new SearchParameters());\n+\n+        assertEquals(reference, result);\n+    }\n+\n+    @Test\n+    public void update() {\n+        WebResource webResource = jerseyClient.resource(\n+                BASE_URL + \"update/\" + userId + \"?test=TRUE\");\n+\n+        Attributes userAttributes = new Attributes();\n+        userAttributes.addUserAttribute(\"userId\", Collections.singleton(userId));\n+\n+        String result = webResource.type(MediaType.APPLICATION_JSON).post(\n+                String.class, userAttributes);\n+\n+        assertTrue(Boolean.valueOf(result));\n+    }\n+}"},{"sha":"bb3c165c3e77ea4960f76f4db9bb5ed47afdbf8a","filename":"rest/src/test/resources/from_maven.properties","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Ftest%2Fresources%2Ffrom_maven.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fd3cf4cc90dab0decdb8285bb41d2340c3718b79/rest%2Fsrc%2Ftest%2Fresources%2Ffrom_maven.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Ftest%2Fresources%2Ffrom_maven.properties?ref=fd3cf4cc90dab0decdb8285bb41d2340c3718b79","patch":"@@ -0,0 +1 @@\n+jetty.port=${jetty.port}"}]}