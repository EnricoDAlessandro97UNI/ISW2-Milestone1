{"sha":"d3d95746b4ce73d1f696667a88378aa5fff606f0","node_id":"C_kwDOJfYA1toAKGQzZDk1NzQ2YjRjZTczZDFmNjk2NjY3YTg4Mzc4YWE1ZmZmNjA2ZjA","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-12-26T10:15:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-12-26T10:15:30Z"},"message":"Fixing flaky SearchITCase#searchConnObjectsBrowsePagedResult","tree":{"sha":"e775eef555a733a1de5512b96b82734bc7a4df42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e775eef555a733a1de5512b96b82734bc7a4df42"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d3d95746b4ce73d1f696667a88378aa5fff606f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d3d95746b4ce73d1f696667a88378aa5fff606f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d3d95746b4ce73d1f696667a88378aa5fff606f0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d3d95746b4ce73d1f696667a88378aa5fff606f0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4b90e387b66468fe2c4c686a95437c6fc0a87db0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4b90e387b66468fe2c4c686a95437c6fc0a87db0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4b90e387b66468fe2c4c686a95437c6fc0a87db0"}],"stats":{"total":40,"additions":16,"deletions":24},"files":[{"sha":"c63988102fcede1538ad240035efe3c699daa946","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":16,"deletions":24,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d3d95746b4ce73d1f696667a88378aa5fff606f0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d3d95746b4ce73d1f696667a88378aa5fff606f0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=d3d95746b4ce73d1f696667a88378aa5fff606f0","patch":"@@ -26,7 +26,6 @@\n import static org.junit.jupiter.api.Assertions.fail;\n \n import java.util.ArrayList;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n@@ -35,7 +34,6 @@\n import org.apache.commons.lang3.RandomStringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.batch.BatchRequest;\n-import org.apache.syncope.client.ui.commons.ConnIdSpecialName;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -509,35 +507,29 @@ public void orderBy() {\n     @Test\n     public void searchConnObjectsBrowsePagedResult() {\n         List<String> groupKeys = new ArrayList<>();\n-        for (int i = 0; i < 10; i++) {\n+        for (int i = 0; i < 11; i++) {\n             GroupCR groupCR = GroupITCase.getSample(\"group\");\n             groupCR.getResources().add(RESOURCE_NAME_LDAP);\n             GroupTO group = createGroup(groupCR).getEntity();\n             groupKeys.add(group.getKey());\n         }\n \n-        int totalRead = 0;\n-        Set<String> read = new HashSet<>();\n-        try {\n-            ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().size(10);\n-            PagedConnObjectResult matches;\n-            do {\n-                matches = RESOURCE_SERVICE.searchConnObjects(\n-                        RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), builder.build());\n-                assertNotNull(matches);\n-\n-                totalRead += matches.getResult().size();\n-                read.addAll(matches.getResult().stream().\n-                        map(input -> input.getAttr(ConnIdSpecialName.NAME).get().getValues().get(0)).\n-                        collect(Collectors.toList()));\n-\n-                if (matches.getPagedResultsCookie() != null) {\n-                    builder.pagedResultsCookie(matches.getPagedResultsCookie());\n-                }\n-            } while (matches.getPagedResultsCookie() != null);\n+        ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().size(10);\n \n-            assertEquals(totalRead, read.size());\n-            assertTrue(totalRead >= groupKeys.size());\n+        try {\n+            PagedConnObjectResult matches = RESOURCE_SERVICE.searchConnObjects(\n+                    RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), builder.build());\n+            assertNotNull(matches);\n+            assertNotNull(matches.getPagedResultsCookie());\n+            int firstRound = matches.getResult().size();\n+\n+            builder.pagedResultsCookie(matches.getPagedResultsCookie());\n+            matches = RESOURCE_SERVICE.searchConnObjects(\n+                    RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), builder.build());\n+            assertNotNull(matches);\n+            int secondRound = matches.getResult().size();\n+\n+            assertTrue(firstRound + secondRound >= groupKeys.size());\n         } finally {\n             BatchRequest batchRequest = ADMIN_CLIENT.batch();\n             GroupService batchGroupService = batchRequest.getService(GroupService.class);"}]}