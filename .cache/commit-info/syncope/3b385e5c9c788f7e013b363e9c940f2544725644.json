{"sha":"3b385e5c9c788f7e013b363e9c940f2544725644","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNiMzg1ZTVjOWM3ODhmN2UwMTNiMzYzZTljOTQwZjI1NDQ3MjU2NDQ=","commit":{"author":{"name":"dayash","email":"dima.ayash@tirasa.net","date":"2018-05-11T10:28:52Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2018-05-11T13:01:54Z"},"message":"[SYNCOPE-1018] self registration for OpenID Connect - This closes #76","tree":{"sha":"214f1fa9a34ad4a458319a2b8bd19d40a80b9c9f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/214f1fa9a34ad4a458319a2b8bd19d40a80b9c9f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3b385e5c9c788f7e013b363e9c940f2544725644","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b385e5c9c788f7e013b363e9c940f2544725644","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3b385e5c9c788f7e013b363e9c940f2544725644","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b385e5c9c788f7e013b363e9c940f2544725644/comments","author":{"login":"DimaAy","id":19169906,"node_id":"MDQ6VXNlcjE5MTY5OTA2","avatar_url":"https://avatars.githubusercontent.com/u/19169906?v=4","gravatar_id":"","url":"https://api.github.com/users/DimaAy","html_url":"https://github.com/DimaAy","followers_url":"https://api.github.com/users/DimaAy/followers","following_url":"https://api.github.com/users/DimaAy/following{/other_user}","gists_url":"https://api.github.com/users/DimaAy/gists{/gist_id}","starred_url":"https://api.github.com/users/DimaAy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimaAy/subscriptions","organizations_url":"https://api.github.com/users/DimaAy/orgs","repos_url":"https://api.github.com/users/DimaAy/repos","events_url":"https://api.github.com/users/DimaAy/events{/privacy}","received_events_url":"https://api.github.com/users/DimaAy/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3f0c52c468893e6f00502a2c629c961206cff490","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3f0c52c468893e6f00502a2c629c961206cff490","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3f0c52c468893e6f00502a2c629c961206cff490"}],"stats":{"total":530,"additions":516,"deletions":14},"files":[{"sha":"3adec2848be3a516d44be8fa494eda6e6ed3de78","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/pages/HomePage.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -40,6 +40,8 @@ public HomePage(final PageParameters parameters) {\n             appendMessage(redirectUrl, parameters.get(\"successMessage\").toString());\n         } else if (!parameters.get(\"saml2SPUserAttrs\").isNull()) {\n             redirectUrl.append(\"#!self-saml2sp\");\n+        } else if (!parameters.get(\"oidcClientUserAttrs\").isNull()) {\n+            redirectUrl.append(\"#!self-oidcclient\");\n         }\n         throw new NonResettingRestartException(redirectUrl.toString());\n     }"},{"sha":"3aa57f53a108a853b0d2cb4890598758681d8a8b","filename":"client/enduser/src/main/resources/META-INF/resources/app/index.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -102,10 +102,12 @@\n   <script src=\"js/services/saml2IdPService.js\"></script>\n   <script src=\"js/services/oidcProviderService.js\"></script>\n   <script src=\"js/services/saml2SPService.js\"></script>\n+  <script src=\"js/services/oidcClientService.js\"></script>\n   <!--controllers-->\n   <script src=\"js/controllers/HomeController.js\"></script>\n   <script src=\"js/controllers/LoginController.js\"></script>\n   <script src=\"js/controllers/SAML2SPController.js\"></script>\n+  <script src=\"js/controllers/OIDCClientController.js\"></script>\n   <script src=\"js/controllers/UserController.js\"></script>\n   <!--directives-->\n   <script src=\"js/directives/dynamicPlainAttribute.js\"></script>"},{"sha":"475f74bafadfa791f812d94c860117ce61a08ec8","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -86,6 +86,20 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n               }\n             })\n             /* </Extensions> */\n+            \n+            /* <Extensions> */\n+            .state('self-oidcclient', {\n+              url: '/self-oidcclient',\n+              templateUrl: 'views/self.html',\n+              controller: 'OIDCClientController',\n+              resolve: {\n+                'userAttrs': ['OIDCClientService',\n+                  function (OIDCClientService) {\n+                    return OIDCClientService.getOIDCClientUserAttrs();\n+                  }]\n+              }\n+            })\n+            /* </Extensions> */\n             .state('user-self-update', {\n               url: '/user-self-update',\n               templateUrl: 'views/home.html',"},{"sha":"f3eab688a434f9fb38369a3bf471fbd89d78b8c4","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/OIDCClientController.js","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FOIDCClientController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FOIDCClientController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FOIDCClientController.js?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,29 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+angular.module(\"login\").controller(\"OIDCClientController\", function ($scope, $rootScope, $location, userAttrs) {\n+  $scope.selfCreate = function () {\n+    $location.path(\"/self/create\");\n+  };\n+\n+  $rootScope.oidcops.userAttrs = userAttrs;\n+\n+  $scope.selfCreate();\n+});"},{"sha":"629c90dc101e3a6c091c942e8bb236d393162b4f","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":27,"deletions":1,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -45,6 +45,8 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n     /* <Extensions> */\n     $scope.loadFromSAML2AuthSelfReg = $rootScope.saml2idps.userAttrs && $rootScope.saml2idps.userAttrs.length;\n+\n+    $scope.loadFromOIDCAuthSelfReg = $rootScope.oidcops.userAttrs && $rootScope.oidcops.userAttrs.length;\n     /* </Extensions> */\n \n     $scope.initUser = function () {\n@@ -71,6 +73,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n                 ? found[0].values : [];\n       };\n \n+      var findLoadedOIDCAttrValue = function (schemaKey) {\n+        var found = $filter('filter')($rootScope.oidcops.userAttrs, {\"schema\": schemaKey}, true);\n+        return (found && found.length && found[0].values && found[0].values.length)\n+                ? found[0].values : [];\n+      };\n+\n       var initUserSchemas = function (anyTypeClass, group) {\n         // initialization is done here synchronously to have all schema fields populated correctly\n         var schemaService;\n@@ -127,6 +135,10 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             if ($scope.loadFromSAML2AuthSelfReg) {\n               $scope.user.plainAttrs[plainSchemaKey].values = findLoadedSAML2AttrValue(plainSchemaKey);\n             }\n+            \n+            if ($scope.loadFromOIDCAuthSelfReg) {\n+              $scope.user.plainAttrs[plainSchemaKey].values = findLoadedOIDCAttrValue(plainSchemaKey);\n+            }\n \n             if (schemas.plainSchemas[i].multivalue) {\n               // initialize multivalue schema and support table: create mode, default multivalues\n@@ -181,6 +193,10 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             if ($scope.loadFromSAML2AuthSelfReg) {\n               $scope.user.virAttrs[virSchemaKey].values = findLoadedSAML2AttrValue(virSchemaKey);\n             }\n+            \n+             if ($scope.loadFromOIDCAuthSelfReg) {\n+              $scope.user.virAttrs[virSchemaKey].values = findLoadedOIDCAttrValue(virSchemaKey);\n+            }\n \n             // initialize multivalue attribute and support table: create mode, only first value\n             $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n@@ -205,6 +221,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n         //clean SAML Self Reg user attributes variable\n         delete $rootScope.saml2idps.userAttrs;\n+        \n+        //clean OIDC Self Reg user attributes variable\n+        delete $rootScope.oidcops.userAttrs;\n       };\n \n       var initSecurityQuestions = function () {\n@@ -450,7 +469,14 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           if (username.length) {\n             $scope.user.username = username[0];\n           }\n-        }\n+        } \n+        \n+        if ($scope.loadFromOIDCAuthSelfReg) {\n+          var username = findLoadedOIDCAttrValue(\"username\");\n+          if (username.length) {\n+            $scope.user.username = username[0];\n+          }\n+        } \n       } else {\n         // read user from syncope core\n         readUser();"},{"sha":"9e8cbc0f79e57b8b74fe4197e73267b4bbb59c78","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/oidcClientService.js","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FoidcClientService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FoidcClientService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FoidcClientService.js?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,42 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+\n+angular.module('self')\n+        .factory('OIDCClientService', ['$q', '$http',\n+          function ($q, $http) {\n+\n+            var oidcClientService = {};\n+\n+            oidcClientService.getOIDCClientUserAttrs = function () {\n+              return $http.get(\"../api/OIDCClients/userAttrs\")\n+                      .then(function (response) {\n+                        return response.data;\n+                      }, function (response) {\n+                        console.error(\"Something went wrong while getting oidc user attributes, exit with status: \",\n+                                response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n+\n+            return oidcClientService;\n+          }]);\n+\n+"},{"sha":"7bb26c181c80a2cf9e073f35e43c6cedcf358742","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/CodeConsumer.java","status":"modified","additions":32,"deletions":9,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.ext.oidcclient.agent;\n \n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n@@ -29,6 +31,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.OIDCConstants;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n import org.apache.syncope.common.rest.api.service.OIDCClientService;\n import org.slf4j.Logger;\n@@ -41,6 +44,9 @@ public class CodeConsumer extends HttpServlet {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(CodeConsumer.class);\n \n+    private static final ObjectMapper MAPPER =\n+            new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n+\n     @Override\n     protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n             throws ServletException, IOException {\n@@ -59,17 +65,34 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                         request.getRequestURL().toString(),\n                         authorizationCode,\n                         request.getSession().getAttribute(OIDCConstants.OP).toString());\n-                request.getSession().setAttribute(\n-                        Constants.OIDCCLIENTJWT, responseTO.getAccessToken());\n-                request.getSession().setAttribute(\n-                        Constants.OIDCCLIENTJWT_EXPIRE, responseTO.getAccessTokenExpiryTime());\n+                if (responseTO.isSelfReg()) {\n+                    responseTO.getAttrs().add(\n+                            new AttrTO.Builder().schema(\"username\").values(responseTO.getUsername()).build());\n+                    request.getSession(true).\n+                            setAttribute(Constants.OIDCCLIENT_USER_ATTRS, MAPPER.writeValueAsString(responseTO.\n+                                    getAttrs()));\n \n-                String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_SUCCESS_URL);\n-                if (successURL == null) {\n-                    request.setAttribute(\"responseTO\", responseTO);\n-                    request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                    String selfRegRedirectURL =\n+                            getServletContext().getInitParameter(Constants.CONTEXT_PARAM_REDIRECT_SELFREG_URL);\n+                    if (selfRegRedirectURL == null) {\n+                        request.setAttribute(\"responseTO\", responseTO);\n+                        request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                    } else {\n+                        response.sendRedirect(selfRegRedirectURL);\n+                    }\n                 } else {\n-                    response.sendRedirect(successURL + \"?logoutSupported=\" + responseTO.isLogoutSupported());\n+                    request.getSession().setAttribute(\n+                            Constants.OIDCCLIENTJWT, responseTO.getAccessToken());\n+                    request.getSession().setAttribute(\n+                            Constants.OIDCCLIENTJWT_EXPIRE, responseTO.getAccessTokenExpiryTime());\n+\n+                    String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_SUCCESS_URL);\n+                    if (successURL == null) {\n+                        request.setAttribute(\"responseTO\", responseTO);\n+                        request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                    } else {\n+                        response.sendRedirect(successURL + \"?logoutSupported=\" + responseTO.isLogoutSupported());\n+                    }\n                 }\n             } else {\n                 throw new IllegalArgumentException(\"Invalid \" + OIDCConstants.STATE + \" provided\");"},{"sha":"62e00c02ae071f7d84dd7b02549079424c7e7b17","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Constants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FConstants.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -34,10 +34,14 @@ public final class Constants {\n \n     public static final String CONTEXT_PARAM_LOGOUT_ERROR_URL = \"oidcclient.logout.error.url\";\n \n+    public static final String CONTEXT_PARAM_REDIRECT_SELFREG_URL = \"oidcclient.redirect.selfreg\";\n+\n     public static final String OIDCCLIENTJWT = \"oidcclient.jwt\";\n \n     public static final String OIDCCLIENTJWT_EXPIRE = \"oidcclient.jwt.expire\";\n \n+    public static final String OIDCCLIENT_USER_ATTRS = \"oidcclient.userattrs\";\n+\n     private Constants() {\n         // private constructor for static utility class\n     }"},{"sha":"db29dce4abae57d3f37372787b91a5fe32689c19","filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/pages/OIDCClientSelfReg.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FOIDCClientSelfReg.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class OIDCClientSelfReg extends WebPage {\n+\n+    private static final long serialVersionUID = 864538706654644353L;\n+\n+    private static final String OIDC_ACCESS_ERROR =\n+            \"OpenID Connect error - Admin Console does not support Self Registration\";\n+\n+    public OIDCClientSelfReg(final PageParameters parameters) {\n+        super(parameters);\n+\n+        PageParameters params = new PageParameters();\n+        params.add(\"errorMessage\", OIDC_ACCESS_ERROR);\n+        setResponsePage(Login.class, params);\n+    }\n+}"},{"sha":"680746dea1aa4edd5b37f2e5efa643f6f57ca5cb","filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -135,6 +135,11 @@ public OP(final OIDCProviderTO opTO) {\n                     false);\n             add(createUnmatching);\n \n+            AjaxCheckBoxPanel selfRegUnmatching = new AjaxCheckBoxPanel(\n+                    \"selfRegUnmatching\", \"selfRegUnmatching\", new PropertyModel<Boolean>(opTO, \"selfRegUnmatching\"),\n+                    false);\n+            add(selfRegUnmatching);\n+\n             AjaxCheckBoxPanel updateMatching = new AjaxCheckBoxPanel(\n                     \"updateMatching\", \"updateMatching\", new PropertyModel<Boolean>(opTO, \"updateMatching\"), false);\n             add(updateMatching);"},{"sha":"cfe5df7e7452afa35e08e59be90e23b61332c6f1","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.html?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -22,6 +22,7 @@\n     <div class=\"form-group\"><span wicket:id=\"clientID\">[clientID]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"clientSecret\">[clientSecret]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"createUnmatching\">[createUnmatching]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"selfRegUnmatching\">[selfRegUnmatching]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"updateMatching\">[updateMatching]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"actionsClassNames\">[actionsClassNames]</span></div>\n   </wicket:panel>"},{"sha":"123372f7f62da8ba48688aa9a668b006820f555f","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP.properties?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -18,6 +18,7 @@ name=Name\n clientID=Client ID\n clientSecret=Client Secret\n createUnmatching=Create unmatching users\n+selfRegUnmatching=OIDC-initiated self-registration\n updateMatching=Update matching users\n actionsClassNames=Actions\n "},{"sha":"123372f7f62da8ba48688aa9a668b006820f555f","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_it.properties?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -18,6 +18,7 @@ name=Name\n clientID=Client ID\n clientSecret=Client Secret\n createUnmatching=Create unmatching users\n+selfRegUnmatching=OIDC-initiated self-registration\n updateMatching=Update matching users\n actionsClassNames=Actions\n "},{"sha":"123372f7f62da8ba48688aa9a668b006820f555f","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_pt_BR.properties?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -18,6 +18,7 @@ name=Name\n clientID=Client ID\n clientSecret=Client Secret\n createUnmatching=Create unmatching users\n+selfRegUnmatching=OIDC-initiated self-registration\n updateMatching=Update matching users\n actionsClassNames=Actions\n "},{"sha":"123372f7f62da8ba48688aa9a668b006820f555f","filename":"ext/oidcclient/client-console/src/main/resources/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder$OP_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder%24OP_ru.properties?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -18,6 +18,7 @@ name=Name\n clientID=Client ID\n clientSecret=Client Secret\n createUnmatching=Create unmatching users\n+selfRegUnmatching=OIDC-initiated self-registration\n updateMatching=Update matching users\n actionsClassNames=Actions\n "},{"sha":"68bbc7b3c86245bdb4b1db5dc6e29a2f5b36450e","filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientSelfReg.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.syncope.ext.oidcclient.agent.Constants;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class OIDCClientSelfReg extends WebPage {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(OIDCClientSelfReg.class);\n+\n+    private static final long serialVersionUID = -2533879075075645461L;\n+\n+    private static final String OIDC_ACCESS_ERROR = \"OpenID Connect error - while getting user attributes\";\n+\n+    public OIDCClientSelfReg(final PageParameters parameters) {\n+        super(parameters);\n+\n+        PageParameters params = new PageParameters();\n+        try {\n+            params.add(\"oidcClientUserAttrs\", ((ServletWebRequest) getRequest()).getContainerRequest().\n+                    getSession().getAttribute(Constants.OIDCCLIENT_USER_ATTRS));\n+        } catch (Exception e) {\n+            LOG.error(\"While extracting user attributes\", e);\n+\n+            params.add(\"errorMessage\", OIDC_ACCESS_ERROR);\n+        }\n+        setResponsePage(getApplication().getHomePage(), params);\n+    }\n+}"},{"sha":"29dfa3c8ec42ad62d3e83da58606c07bbd1caafb","filename":"ext/oidcclient/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/OIDCClientUserAttrsResource.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FOIDCClientUserAttrsResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FOIDCClientUserAttrsResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FOIDCClientUserAttrsResource.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.ext.oidcclient.agent.Constants;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+\n+@Resource(key = \"OIDCClients\", path = \"/api/OIDCClients/userAttrs\")\n+public class OIDCClientUserAttrsResource extends BaseResource {\n+\n+    private static final long serialVersionUID = 7273151109078469253L;\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n+        ResourceResponse response = new ResourceResponse();\n+        response.setContentType(MediaType.APPLICATION_JSON);\n+\n+        try {\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n+            response.setWriteCallback(new AbstractResource.WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(\n+                            (CharSequence) ((HttpServletRequest) RequestCycle.get().getRequest().\n+                                    getContainerRequest()).getSession().getAttribute(Constants.OIDCCLIENT_USER_ATTRS));\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving oidc user attributes\", e);\n+            response.setError(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+\n+        return response;\n+    }\n+}"},{"sha":"78e4dd62d907292a315d9ad45b601ebbe3c7dc2d","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginResponseTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -40,6 +40,8 @@ public class OIDCLoginResponseTO extends AbstractBaseBean {\n \n     private boolean logoutSupported;\n \n+    private boolean selfReg;\n+\n     private String accessToken;\n \n     private Date accessTokenExpiryTime;\n@@ -62,6 +64,14 @@ public void setLogoutSupported(final boolean logoutSupported) {\n         this.logoutSupported = logoutSupported;\n     }\n \n+    public boolean isSelfReg() {\n+        return selfReg;\n+    }\n+\n+    public void setSelfReg(final boolean selfReg) {\n+        this.selfReg = selfReg;\n+    }\n+\n     public String getAccessToken() {\n         return accessToken;\n     }"},{"sha":"7669d22f39118c2a6071ee4a73dfc930a4332f4f","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCProviderTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -64,6 +64,8 @@ public class OIDCProviderTO extends AbstractBaseBean implements EntityTO, ItemCo\n \n     private boolean updateMatching;\n \n+    private boolean selfRegUnmatching;\n+\n     private final List<ItemTO> items = new ArrayList<>();\n \n     private final Set<String> actionsClassNames = new HashSet<>();\n@@ -183,6 +185,14 @@ public void setUpdateMatching(final boolean updateMatching) {\n         this.updateMatching = updateMatching;\n     }\n \n+    public boolean isSelfRegUnmatching() {\n+        return selfRegUnmatching;\n+    }\n+\n+    public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n+        this.selfRegUnmatching = selfRegUnmatching;\n+    }\n+\n     @Override\n     public ItemTO getConnObjectKeyItem() {\n         return getItems().stream().filter(ItemTO::isConnObjectKey).findFirst().get();"},{"sha":"12ca5fa46ce46c914d6cc99317284fc86b5fb906","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -52,6 +52,7 @@\n import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -314,6 +315,21 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n                 final String emailValue = userInfo.getEmail();\n                 username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n                         () -> userManager.create(op, responseTO, emailValue));\n+            } else if (op.isSelfRegUnmatching()) {\n+                UserTO userTO = new UserTO();\n+\n+                userManager.fill(op, responseTO, userTO);\n+\n+                responseTO.getAttrs().clear();\n+                responseTO.getAttrs().addAll(userTO.getPlainAttrs());\n+                responseTO.getAttrs().addAll(userTO.getVirAttrs());\n+                if (StringUtils.isNotBlank(userTO.getUsername())) {\n+                    responseTO.setUsername(userTO.getUsername());\n+                }\n+\n+                responseTO.setSelfReg(true);\n+\n+                return responseTO;\n             } else {\n                 throw new NotFoundException(keyValue == null\n                         ? \"User marching the provided claims\""},{"sha":"ad960523394b6eb2d68718259902eee31399a6f0","filename":"ext/oidcclient/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/OIDCProvider.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FOIDCProvider.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -55,7 +55,7 @@ public interface OIDCProvider extends Entity {\n     String getUserinfoEndpoint();\n \n     void setUserinfoEndpoint(String userinfoEndpoint);\n-    \n+\n     String getEndSessionEndpoint();\n \n     void setEndSessionEndpoint(String endSessionEndpoint);\n@@ -68,6 +68,10 @@ public interface OIDCProvider extends Entity {\n \n     void setCreateUnmatching(boolean createUnmatching);\n \n+    boolean isSelfRegUnmatching();\n+\n+    void setSelfRegUnmatching(boolean selfRegUnmatching);\n+\n     boolean isUpdateMatching();\n \n     void setUpdateMatching(boolean updateMatching);"},{"sha":"b1612412d8cce5ec0b69dc9bd739171a7a960297","filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCProvider.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -39,10 +39,12 @@\n import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.OIDCProviderCheck;\n \n @Entity\n @Table(name = JPAOIDCProvider.TABLE)\n @Cacheable\n+@OIDCProviderCheck\n public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCProvider {\n \n     public static final String TABLE = \"OIDCProvider\";\n@@ -72,7 +74,7 @@ public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCP\n \n     @Column(nullable = true)\n     private String userinfoEndpoint;\n-    \n+\n     @Column(nullable = true)\n     private String endSessionEndpoint;\n \n@@ -90,6 +92,11 @@ public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCP\n     @Column(nullable = false)\n     private Integer createUnmatching;\n \n+    @Min(0)\n+    @Max(1)\n+    @Column(nullable = false)\n+    private Integer selfRegUnmatching;\n+\n     @Min(0)\n     @Max(1)\n     @Column(nullable = false)\n@@ -181,7 +188,7 @@ public String getUserinfoEndpoint() {\n     public void setUserinfoEndpoint(final String userinfoEndpoint) {\n         this.userinfoEndpoint = userinfoEndpoint;\n     }\n-    \n+\n     @Override\n     public String getEndSessionEndpoint() {\n         return endSessionEndpoint;\n@@ -212,6 +219,16 @@ public void setCreateUnmatching(final boolean createUnmatching) {\n         this.createUnmatching = getBooleanAsInteger(createUnmatching);\n     }\n \n+    @Override\n+    public boolean isSelfRegUnmatching() {\n+        return isBooleanAsInteger(selfRegUnmatching);\n+    }\n+\n+    @Override\n+    public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n+        this.selfRegUnmatching = getBooleanAsInteger(selfRegUnmatching);\n+    }\n+\n     @Override\n     public boolean isUpdateMatching() {\n         return isBooleanAsInteger(updateMatching);"},{"sha":"2f96a33991fe7e1d795cf3794e610b84e590c06f","filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCProviderCheck.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderCheck.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = OIDCProviderValidator.class)\n+@Documented\n+public @interface OIDCProviderCheck {\n+\n+    String message() default \"{org.apache.syncope.core.persistence.validation.oidcprovider}\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+}"},{"sha":"730f5e1e30b6e33dcb097644a4302bbaf253f137","filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/OIDCProviderValidator.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FOIDCProviderValidator.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import static org.apache.syncope.core.persistence.jpa.validation.entity.AbstractValidator.LOG;\n+\n+import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n+import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n+import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n+\n+public class OIDCProviderValidator extends AbstractValidator<OIDCProviderCheck, OIDCProvider> {\n+\n+    @Override\n+    public boolean isValid(final OIDCProvider value, final ConstraintValidatorContext context) {\n+\n+        if (value.isSelfRegUnmatching() && value.isCreateUnmatching()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.Standard,\n+                            \"Either selfRegUnmatching or createUnmatching, not both\")).\n+                    addPropertyNode(\"selfRegUnmatching\").\n+                    addPropertyNode(\"createUnmatching\").addConstraintViolation();\n+            return false;\n+        }\n+\n+        long connObjectKeys = value.getItems().stream().filter(item -> item.isConnObjectKey()).count();\n+        if (!value.getItems().isEmpty() && connObjectKeys != 1) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, \"Single ConnObjectKey mapping is required\")).\n+                    addPropertyNode(\"connObjectKey.size\").addConstraintViolation();\n+            return false;\n+        }\n+\n+        final boolean[] isValid = new boolean[] { true };\n+\n+        long passwords = value.getItems().stream().filter(item -> item.isPassword()).count();\n+        if (passwords > 0) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, \"No password mapping is allowed\")).\n+                    addPropertyNode(\"password.size\").addConstraintViolation();\n+            isValid[0] = false;\n+        }\n+\n+        value.getItems().forEach(item -> {\n+            item.getTransformers().stream().\n+                    filter(transformer -> transformer.getEngine() == ImplementationEngine.JAVA).\n+                    forEach(transformer -> {\n+\n+                        Class<?> actionsClass = null;\n+                        boolean isAssignable = false;\n+                        try {\n+                            actionsClass = Class.forName(transformer.getBody());\n+                            isAssignable = ItemTransformer.class.isAssignableFrom(actionsClass);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Invalid ItemTransformer specified: {}\", transformer.getBody(), e);\n+                        }\n+\n+                        if (actionsClass == null || !isAssignable) {\n+                            context.buildConstraintViolationWithTemplate(\n+                                    getTemplate(EntityViolationType.InvalidMapping,\n+                                            \"Invalid item trasformer class name\")).\n+                                    addPropertyNode(\"itemTransformers\").addConstraintViolation();\n+                            isValid[0] = false;\n+                        }\n+                    });\n+        });\n+\n+        return isValid[0];\n+    }\n+\n+}"},{"sha":"888d7a5ae463915a69791a1c62d8aef29b6d823b","filename":"ext/oidcclient/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/OIDCProviderDataBinderImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCProviderDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/ext%2Foidcclient%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCProviderDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCProviderDataBinderImpl.java?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -181,6 +181,7 @@ public OIDCProvider update(final OIDCProvider op, final OIDCProviderTO opTO) {\n         op.setEndSessionEndpoint(opTO.getEndSessionEndpoint());\n         op.setHasDiscovery(opTO.getHasDiscovery());\n         op.setCreateUnmatching(opTO.isCreateUnmatching());\n+        op.setSelfRegUnmatching(opTO.isSelfRegUnmatching());\n         op.setUpdateMatching(opTO.isUpdateMatching());\n \n         if (opTO.getUserTemplate() == null) {\n@@ -245,6 +246,7 @@ public OIDCProviderTO getOIDCProviderTO(final OIDCProvider op) {\n         opTO.setEndSessionEndpoint(op.getEndSessionEndpoint());\n         opTO.setHasDiscovery(op.getHasDiscovery());\n         opTO.setCreateUnmatching(op.isCreateUnmatching());\n+        opTO.setSelfRegUnmatching(op.isSelfRegUnmatching());\n         opTO.setUpdateMatching(op.isUpdateMatching());\n \n         if (op.getUserTemplate() != null) {"},{"sha":"7497b2e82562c590aa8c90b201bf2f057dc0d010","filename":"fit/console-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -71,6 +71,11 @@ under the License.\n     <param-name>oidcclient.logout.error.url</param-name>\n     <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n   </context-param>\n+  \n+  <context-param>\n+    <param-name>oidcclient.redirect.selfreg</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.OIDCClientSelfReg</param-value>\n+  </context-param>\n \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>"},{"sha":"24b263ac0fbea04239993aa65f89bbe3da480f66","filename":"fit/enduser-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3b385e5c9c788f7e013b363e9c940f2544725644/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3b385e5c9c788f7e013b363e9c940f2544725644/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=3b385e5c9c788f7e013b363e9c940f2544725644","patch":"@@ -71,7 +71,11 @@ under the License.\n     <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.HomePage</param-value>\n   </context-param>\n \n-\n+  <context-param>\n+    <param-name>oidcclient.redirect.selfreg</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.OIDCClientSelfReg</param-value>\n+  </context-param>\n+  \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>\n     <session-timeout>30</session-timeout>"}]}