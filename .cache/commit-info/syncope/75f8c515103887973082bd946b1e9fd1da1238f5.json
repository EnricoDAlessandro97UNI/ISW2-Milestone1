{"sha":"75f8c515103887973082bd946b1e9fd1da1238f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1ZjhjNTE1MTAzODg3OTczMDgyYmQ5NDZiMWU5ZmQxZGExMjM4ZjU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-15T17:38:11Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-15T17:38:11Z"},"message":"Minor fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246794 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"499d14932ab36a76a99b2eee72c9d85280e9841a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/499d14932ab36a76a99b2eee72c9d85280e9841a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/75f8c515103887973082bd946b1e9fd1da1238f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75f8c515103887973082bd946b1e9fd1da1238f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75f8c515103887973082bd946b1e9fd1da1238f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75f8c515103887973082bd946b1e9fd1da1238f5/comments","author":null,"committer":null,"parents":[{"sha":"ab1970c2524f1f32f9e83e2a452f976f0a76c986","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ab1970c2524f1f32f9e83e2a452f976f0a76c986","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ab1970c2524f1f32f9e83e2a452f976f0a76c986"}],"stats":{"total":55,"additions":43,"deletions":12},"files":[{"sha":"abced7cdadfa8132ae4e8258ea8c4240aa41f0fb","filename":"client/src/main/java/org/syncope/client/to/DerivedSchemaTO.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,8 +21,11 @@\n public class DerivedSchemaTO extends AbstractBaseBean {\n \n     private String name;\n+\n     private String expression;\n+\n     private Set<String> schemas;\n+\n     private int derivedAttributes;\n \n     public DerivedSchemaTO() {"},{"sha":"8ceaea78476a95462b201a54b38f0915ee52310c","filename":"client/src/main/java/org/syncope/client/to/SchemaTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -22,15 +22,25 @@\n public class SchemaTO extends AbstractBaseBean {\n \n     private String name;\n+\n     private SchemaType type;\n+\n     private boolean virtual;\n+\n     private String mandatoryCondition;\n+\n     private boolean multivalue;\n+\n     private boolean uniqueConstraint;\n+\n     private boolean readonly;\n+\n     private String conversionPattern;\n+\n     private String validatorClass;\n+\n     private Set<String> derivedSchemas;\n+\n     private int attributes;\n \n     public SchemaTO() {"},{"sha":"2cb6f738c3090af374ca51b0e0ec65449f597930","filename":"console/src/main/java/org/syncope/console/commons/PreferenceManager.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -135,12 +135,12 @@ public void set(final WebRequest request, final WebResponse response,\n         Cookie prefCookie = request.getCookie(Constants.PREFS_COOKIE_NAME);\n         if (prefCookie == null) {\n             prefCookie = new Cookie(Constants.PREFS_COOKIE_NAME, \"\");\n-            prefCookie.setMaxAge(ONE_YEAR_TIME);\n         }\n \n         Map<String, String> prefs;\n         try {\n-            prefs = getPrefs(prefCookie.getValue());\n+            prefs = getPrefs(new String(Base64.decodeBase64(\n+                    prefCookie.getValue().getBytes())));\n         } catch (IOException e) {\n             LOG.error(\"Could not get preferences from \"\n                     + prefCookie.getValue(), e);\n@@ -156,6 +156,7 @@ public void set(final WebRequest request, final WebResponse response,\n             LOG.error(\"Could not set preferences from \" + prefs);\n         }\n \n+        prefCookie.setMaxAge(ONE_YEAR_TIME);\n         response.addCookie(prefCookie);\n     }\n "},{"sha":"ba80b00fc0d1e64188c75572ea7dfe47c3df0c20","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -60,13 +60,16 @@ public class Schema extends BasePage {\n \n     private enum SchemaType {\n \n-        RoleSchema, UserSchema, MembershipSchema\n+        RoleSchema,\n+        UserSchema,\n+        MembershipSchema\n \n     };\n \n     private enum SchemaDerivedType {\n \n-        RoleDerivedSchema, UserDerivedSchema,\n+        RoleDerivedSchema,\n+        UserDerivedSchema,\n         MembershipDerivedSchema\n \n     };"},{"sha":"26df3e639f9b1fb3c60001fe9cdd72d71995b67a","filename":"core/src/main/java/org/syncope/core/persistence/dao/SchemaDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -29,6 +29,9 @@ public interface SchemaDAO extends DAO {\n     <T extends AbstractAttr> List<T> getAttributes(\n             AbstractSchema schema, Class<T> reference);\n \n+    <T extends AbstractAttr> Number getAttributeCount(\n+            AbstractSchema schema, Class<T> reference);\n+\n     <T extends AbstractSchema> T save(T schema)\n             throws InvalidEntityException;\n "},{"sha":"f261bb43e386f6570b691e31301714d914e8e231","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -68,6 +68,18 @@ public <T extends AbstractAttr> List<T> getAttributes(\n         return query.getResultList();\n     }\n \n+    @Override\n+    public <T extends AbstractAttr> Number getAttributeCount(\n+            final AbstractSchema schema, final Class<T> reference) {\n+\n+        Query query = entityManager.createQuery(\n+                \"SELECT COUNT(e) FROM \" + reference.getSimpleName() + \" e\"\n+                + \" WHERE e.schema=:schema\");\n+        query.setParameter(\"schema\", schema);\n+\n+        return (Number) query.getSingleResult();\n+    }\n+\n     @Override\n     public <T extends AbstractSchema> T save(final T schema) {\n         return entityManager.merge(schema);"},{"sha":"f56b197cf37fc045c022b5b745f2371960e8af6a","filename":"core/src/main/java/org/syncope/core/rest/data/DerivedSchemaDataBinder.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -127,7 +127,6 @@ public <T extends AbstractDerSchema> DerivedSchemaTO getDerivedSchemaTO(\n                 ignoreDerivedSchemaProperties);\n \n         for (AbstractSchema schema : derivedSchema.getSchemas()) {\n-\n             derivedSchemaTO.addSchema(schema.getName());\n         }\n         derivedSchemaTO.setDerivedAttributes("},{"sha":"3091d35a7b032f97b297c6556ee518a50f17635b","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75f8c515103887973082bd946b1e9fd1da1238f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=75f8c515103887973082bd946b1e9fd1da1238f5","patch":"@@ -44,7 +44,7 @@ public class SchemaDataBinder {\n     private static final Logger LOG = LoggerFactory.getLogger(\n             SchemaDataBinder.class);\n \n-    private static final String[] ignoreSchemaProperties = {\n+    private static final String[] IGNORE_SCHEMA_PROPERTIES = {\n         \"derivedSchemas\", \"attributes\"};\n \n     @Autowired\n@@ -91,7 +91,7 @@ private <T extends AbstractDerSchema> AbstractSchema populate(\n             throw scce;\n         }\n \n-        BeanUtils.copyProperties(schemaTO, schema, ignoreSchemaProperties);\n+        BeanUtils.copyProperties(schemaTO, schema, IGNORE_SCHEMA_PROPERTIES);\n \n         AbstractDerSchema abstractDerivedSchema;\n         for (String derivedSchema : schemaTO.getDerivedSchemas()) {\n@@ -170,13 +170,13 @@ public <T extends AbstractSchema> SchemaTO getSchemaTO(T schema,\n             final AttributableUtil attributableUtil) {\n \n         SchemaTO schemaTO = new SchemaTO();\n-        BeanUtils.copyProperties(schema, schemaTO, ignoreSchemaProperties);\n+        BeanUtils.copyProperties(schema, schemaTO, IGNORE_SCHEMA_PROPERTIES);\n \n         for (AbstractDerSchema derivedSchema : schema.getDerivedSchemas()) {\n             schemaTO.addDerivedSchema(derivedSchema.getName());\n         }\n-        schemaTO.setAttributes(schemaDAO.getAttributes(\n-                schema, attributableUtil.attributeClass()).size());\n+        schemaTO.setAttributes(schemaDAO.getAttributeCount(\n+                schema, attributableUtil.attributeClass()).intValue());\n \n         return schemaTO;\n     }"}]}