{"sha":"1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","node_id":"C_kwDOJfYA1toAKDFjNzU0OGM0YjE0YTY1ZTMzZTc0MThkOWEwODczMDg5ZjllYzRiZDE","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2022-09-28T07:12:22Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-09-28T07:12:22Z"},"message":"SYNCOPE-1695 audit view improvements (#376)\n\n* [SYNCOPE-1695] refactored audit view, added possibility to move across versions","tree":{"sha":"b2b00dc46147ad110fece1b1e1c72e6e4ff610a4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b2b00dc46147ad110fece1b1e1c72e6e4ff610a4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjM/PWCRBK7hj4Ov3rIwAAy28IADmuCYJIml+aHcf9hAEV/zeI\nWR4fDWqTfmpzwip4J7TQ9N4cSvf29c/b0248UbTHg+LxIP7nGA/CxDDnDQ03Pabk\nTh+I87e/G8BDHCamMckGcyGoFWLEznLlmY+C/GuH7F1VLNgbDje4sc7/8QqSUN/O\nVWXEPMEKk/pfCugO+DZPXfNI1vqI6TAcfihrmRbVqOYFB63nOhydXis6yfv557HT\n1VoPoPQfW3CNRaZNUNUH/ZPkItoHbmhTLqpTWZeinqITiPZChWTFcEA980qN8gf0\n6AFNEM7WEOORQ8CLEn6w7tEYRVYGLbWmZX49zM2QKoOjoX28kPk7wkCJyM6Yw9A=\n=9j1k\n-----END PGP SIGNATURE-----\n","payload":"tree b2b00dc46147ad110fece1b1e1c72e6e4ff610a4\nparent 75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003\nauthor Andrea Patricelli <andreapatricelli@apache.org> 1664349142 +0200\ncommitter GitHub <noreply@github.com> 1664349142 +0200\n\nSYNCOPE-1695 audit view improvements (#376)\n\n* [SYNCOPE-1695] refactored audit view, added possibility to move across versions"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003"}],"stats":{"total":726,"additions":370,"deletions":356},"files":[{"sha":"915995d2b2dc9395f98c59c55e550c2b0cf211fc","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDirectoryPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -188,12 +188,10 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n               ConnInstanceTO modelObject = ConnectorRestClient.read(((ConnInstanceTO) model.getObject()).getKey());\n             \n               target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                      altDefaultModal,\n                       AuditElements.EventCategoryType.LOGIC,\n                       \"ConnectorLogic\",\n                       modelObject,\n-                      IdMEntitlement.CONNECTOR_UPDATE,\n-                      pageRef) {\n+                      IdMEntitlement.CONNECTOR_UPDATE) {\n             \n                   private static final long serialVersionUID = -3225348282675513648L;\n "},{"sha":"81cd889938abb5f6fe79e55f44ae669336d90574","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -303,12 +303,10 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 ResourceTO modelObject = ResourceRestClient.read(((ResourceTO) model.getObject()).getKey());\n \n                 target.add(historyModal.setContent(new AuditHistoryModal<>(\n-                        historyModal,\n                         AuditElements.EventCategoryType.LOGIC,\n                         \"ResourceLogic\",\n                         modelObject,\n-                        IdMEntitlement.RESOURCE_UPDATE,\n-                        pageRef) {\n+                        IdMEntitlement.RESOURCE_UPDATE) {\n \n                     private static final long serialVersionUID = -3712506022627033811L;\n "},{"sha":"a45072f82ccb92fee73955c0d243bb8002f344e6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -313,8 +313,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         build(BaseModal.CONTENT_ID,\n                                 SyncopeConsoleSession.get().\n                                         owns(IdMEntitlement.CONNECTOR_UPDATE, connInstance.getAdminRealm())\n-                                ? AjaxWizard.Mode.EDIT\n-                                : AjaxWizard.Mode.READONLY)));\n+                                        ? AjaxWizard.Mode.EDIT\n+                                        : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(\n                         new Model<>(MessageFormat.format(getString(\"connector.edit\"), connInstance.getDisplayName())));\n@@ -338,12 +338,10 @@ public void onClick(final AjaxRequestTarget target) {\n                 ConnInstanceTO modelObject = ConnectorRestClient.read(node.getKey());\n \n                 target.add(historyModal.setContent(new AuditHistoryModal<>(\n-                        historyModal,\n                         AuditElements.EventCategoryType.LOGIC,\n                         \"ConnectorLogic\",\n                         modelObject,\n-                        IdMEntitlement.CONNECTOR_UPDATE,\n-                        pageRef) {\n+                        IdMEntitlement.CONNECTOR_UPDATE) {\n \n                     private static final long serialVersionUID = -3225348282675513648L;\n \n@@ -421,8 +419,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         build(BaseModal.CONTENT_ID,\n                                 SyncopeConsoleSession.get().\n                                         owns(IdMEntitlement.RESOURCE_UPDATE, connInstance.getAdminRealm())\n-                                ? AjaxWizard.Mode.EDIT\n-                                : AjaxWizard.Mode.READONLY)));\n+                                        ? AjaxWizard.Mode.EDIT\n+                                        : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n                 modal.show(true);\n@@ -583,12 +581,10 @@ public void onClick(final AjaxRequestTarget target) {\n                 ResourceTO modelObject = ResourceRestClient.read(node.getKey());\n \n                 target.add(historyModal.setContent(new AuditHistoryModal<>(\n-                        historyModal,\n                         AuditElements.EventCategoryType.LOGIC,\n                         \"ResourceLogic\",\n                         modelObject,\n-                        IdMEntitlement.RESOURCE_UPDATE,\n-                        pageRef) {\n+                        IdMEntitlement.RESOURCE_UPDATE) {\n \n                     private static final long serialVersionUID = -3712506022627033811L;\n "},{"sha":"713727c8f2d4345ff54ec16ce13fe622b039114d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"modified","additions":175,"deletions":38,"changes":213,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -28,35 +28,70 @@\n import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n import java.io.IOException;\n import java.io.Serializable;\n-import java.time.OffsetDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Set;\n import java.util.SortedSet;\n import java.util.TreeMap;\n import java.util.TreeSet;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.rest.AuditRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxEventBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.audit.AuditEntry;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AuditHistoryDetails<T extends Serializable> extends MultilevelPanel.SecondLevel {\n+public abstract class AuditHistoryDetails<T extends Serializable> extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = -7400543686272100483L;\n \n     private static final Logger LOG = LoggerFactory.getLogger(AuditHistoryDetails.class);\n \n+    private static final List<String> EVENTS = List.of(\"create\", \"update\", \"matchingrule_update\",\n+            \"unmatchingrule_assign\", \"unmatchingrule_provision\");\n+\n+    private static final SortParam<String> REST_SORT = new SortParam<>(\"event_date\", false);\n+\n+    private EntityTO currentEntity;\n+    private AuditElements.EventCategoryType type;\n+\n+    private String category;\n+\n+    private Class<T> reference;\n+\n+    private List<AuditEntry> auditEntries = new ArrayList<>();\n+\n+    private AuditEntry latestAuditEntry;\n+\n+    private AuditEntry after;\n+\n+    private AjaxDropDownChoicePanel<AuditEntry> beforeVersionsPanel;\n+\n+    private AjaxDropDownChoicePanel<AuditEntry> afterVersionsPanel;\n+\n+    private AjaxLink<Void> restore;\n+\n     private static class SortingNodeFactory extends JsonNodeFactory {\n \n         private static final long serialVersionUID = 1870252010670L;\n@@ -118,74 +153,176 @@ private static <T> Class<T> cast(final Class<?> aClass) {\n \n     private static final ObjectMapper MAPPER = JsonMapper.builder().\n             nodeFactory(new SortingNodeFactory()).build().\n-            registerModule(new SimpleModule().addSerializer(new SortedSetJsonSerializer(cast(Set.class))));\n+            registerModule(new SimpleModule().addSerializer(new SortedSetJsonSerializer(cast(Set.class)))).\n+            registerModule(new JavaTimeModule());\n \n     public AuditHistoryDetails(\n-            final MultilevelPanel mlp,\n-            final AuditEntry selected,\n+            final String id,\n             final EntityTO currentEntity,\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n             final String auditRestoreEntitlement) {\n \n-        super();\n+        super(id);\n \n-        AuditEntry current = new AuditEntry();\n-        if (currentEntity instanceof AnyTO) {\n-            current.setWho(((AnyTO) currentEntity).getCreator());\n-            current.setDate(((AnyTO) currentEntity).getCreationDate());\n-        } else {\n-            current.setWho(SyncopeConsoleSession.get().getSelfTO().getUsername());\n-            current.setDate(OffsetDateTime.now());\n-        }\n-        try {\n-            current.setBefore(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(currentEntity));\n-        } catch (JsonProcessingException e) {\n-            LOG.error(\"While serializing current entity\", e);\n-            throw new WicketRuntimeException(e);\n-        }\n+        this.setOutputMarkupId(true);\n+        this.reference = (Class<T>) currentEntity.getClass();\n+        this.currentEntity = currentEntity;\n+        this.type = type;\n+        this.category = category;\n \n-        add(new Label(\"current\", getString(\"current\")));\n-        add(new Label(\"previous\", getString(\"previous\")));\n+        IChoiceRenderer<AuditEntry> choiceRenderer = new IChoiceRenderer<>() {\n \n-        @SuppressWarnings(\"unchecked\")\n-        Class<T> reference = (Class<T>) currentEntity.getClass();\n-        add(new JsonDiffPanel(null, toJSON(current, reference), toJSON(selected, reference), null) {\n+            private static final long serialVersionUID = -3724971416312135885L;\n \n-            private static final long serialVersionUID = 2087989787864619493L;\n+            @Override\n+            public String getDisplayValue(final AuditEntry value) {\n+                return SyncopeConsoleSession.get().getDateFormat().format(value.getDate());\n+            }\n \n             @Override\n-            public void onSubmit(final AjaxRequestTarget target) {\n-                modal.close(target);\n+            public String getIdValue(final AuditEntry value, final int i) {\n+                return Long.toString(value.getDate().toInstant().toEpochMilli());\n+            }\n+\n+            @Override\n+            public AuditEntry getObject(final String id, final IModel<? extends List<? extends AuditEntry>> choices) {\n+                return choices.getObject().stream()\n+                        .filter(c -> StringUtils.isNotBlank(id)\n+                                && Long.valueOf(id) == c.getDate().toInstant().toEpochMilli()).findFirst()\n+                        .orElse(null);\n+            }\n+        };\n+        // add also select to choose with which version compare\n+\n+        beforeVersionsPanel =\n+                new AjaxDropDownChoicePanel<>(\"beforeVersions\", getString(\"beforeVersions\"), new Model<>(), true);\n+        beforeVersionsPanel.setChoiceRenderer(choiceRenderer);\n+        beforeVersionsPanel.add(new IndicatorAjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -6383712635009760397L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                AuditEntry beforeEntry = beforeVersionsPanel.getModelObject() == null\n+                        ? latestAuditEntry\n+                        : beforeVersionsPanel.getModelObject();\n+                AuditEntry afterEntry = afterVersionsPanel.getModelObject() == null\n+                        ? after\n+                        : buildAfterAuditEntry(beforeEntry);\n+                AuditHistoryDetails.this.addOrReplace(new JsonDiffPanel(toJSON(beforeEntry, reference),\n+                        toJSON(afterEntry, reference)));\n+                // change after audit entries in order to match only the ones newer than the current after one\n+                afterVersionsPanel.setChoices(auditEntries.stream().filter(ae ->\n+                                ae.getDate().isAfter(beforeEntry.getDate())\n+                                        || ae.getDate().isEqual(beforeEntry.getDate()))\n+                        .collect(Collectors.toList()));\n+                // set the new after entry\n+                afterVersionsPanel.setModelObject(afterEntry);\n+                target.add(AuditHistoryDetails.this);\n+            }\n+        });\n+        afterVersionsPanel =\n+                new AjaxDropDownChoicePanel<>(\"afterVersions\", getString(\"afterVersions\"), new Model<>(),\n+                        true);\n+        afterVersionsPanel.setChoiceRenderer(choiceRenderer);\n+        afterVersionsPanel.add(new IndicatorAjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -6383712635009760397L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                AuditHistoryDetails.this.addOrReplace(\n+                        new JsonDiffPanel(toJSON(beforeVersionsPanel.getModelObject() == null\n+                                ? latestAuditEntry\n+                                : beforeVersionsPanel.getModelObject(), reference),\n+                                toJSON(afterVersionsPanel.getModelObject() == null\n+                                        ? after\n+                                        : buildAfterAuditEntry(afterVersionsPanel.getModelObject()), reference)));\n+                target.add(AuditHistoryDetails.this);\n             }\n         });\n+        add(beforeVersionsPanel.setOutputMarkupId(true));\n+        add(afterVersionsPanel.setOutputMarkupId(true));\n \n-        AjaxLink<Void> restore = new AjaxLink<>(\"restore\") {\n+        restore = new AjaxLink<>(\"restore\") {\n \n             private static final long serialVersionUID = -817438685948164787L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    String json = selected.getBefore() == null\n-                            ? MAPPER.readTree(selected.getOutput()).get(\"entity\").toPrettyString()\n-                            : selected.getBefore();\n+                    AuditEntry before = beforeVersionsPanel.getModelObject() == null\n+                            ? latestAuditEntry\n+                            : beforeVersionsPanel.getModelObject();\n+                    String json = before.getBefore() == null\n+                            ? MAPPER.readTree(before.getOutput()).get(\"entity\") == null\n+                            ? MAPPER.readTree(before.getOutput()).toPrettyString()\n+                            : MAPPER.readTree(before.getOutput()).get(\"entity\").toPrettyString()\n+                            : before.getBefore();\n                     restore(json, target);\n-\n-                    mlp.prev(target);\n                 } catch (JsonProcessingException e) {\n                     throw new WicketRuntimeException(e);\n                 }\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(restore, ENABLE, auditRestoreEntitlement);\n         add(restore);\n+        \n+        initDiff();\n     }\n \n     protected abstract void restore(String json, AjaxRequestTarget target);\n \n+    protected void initDiff() {\n+        // audit fetch size is fixed, for the moment... \n+        this.auditEntries.clear();\n+        this.auditEntries.addAll(new AuditRestClient().search(\n+                currentEntity.getKey(),\n+                1,\n+                50,\n+                type,\n+                category,\n+                EVENTS,\n+                AuditElements.Result.SUCCESS,\n+                REST_SORT));\n+\n+        // the default selected is the newest one, if any\n+        this.latestAuditEntry = auditEntries.isEmpty() ? null : auditEntries.get(0);\n+        this.after = latestAuditEntry == null ? null : buildAfterAuditEntry(latestAuditEntry);\n+        // add default diff panel\n+        addOrReplace(new JsonDiffPanel(toJSON(latestAuditEntry, reference), toJSON(after, reference)));\n+\n+        beforeVersionsPanel.setChoices(auditEntries);\n+        afterVersionsPanel.setChoices(auditEntries.stream().filter(ae ->\n+                ae.getDate().isAfter(after.getDate()) || ae.getDate().isEqual(after.getDate())).collect(\n+                Collectors.toList()));\n+\n+        beforeVersionsPanel.setModelObject(latestAuditEntry);\n+        afterVersionsPanel.setModelObject(after);\n+\n+        restore.setEnabled(!auditEntries.isEmpty());\n+    }\n+\n+    private AuditEntry buildAfterAuditEntry(final AuditEntry input) {\n+        AuditEntry output = new AuditEntry();\n+        output.setWho(input.getWho());\n+        output.setDate(input.getDate());\n+        // current by default is the output of the selected event\n+        output.setOutput(input.getOutput());\n+        output.setThrowable(input.getThrowable());\n+        return output;\n+    }\n+\n     private Model<String> toJSON(final AuditEntry auditEntry, final Class<T> reference) {\n         try {\n+            if (auditEntry == null) {\n+                return Model.of();\n+            }\n             String content = auditEntry.getBefore() == null\n-                    ? MAPPER.readTree(auditEntry.getOutput()).get(\"entity\").toPrettyString()\n+                    ? MAPPER.readTree(auditEntry.getOutput()).get(\"entity\") == null\n+                    ? MAPPER.readTree(auditEntry.getOutput()).toPrettyString()\n+                    : MAPPER.readTree(auditEntry.getOutput()).get(\"entity\").toPrettyString()\n                     : auditEntry.getBefore();\n \n             T entity = MAPPER.reader()."},{"sha":"a12138b5b543701c0c5fd6d174ba9a3682e29c5d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDirectoryPanel.java","status":"removed","additions":0,"deletions":192,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java?ref=75b3b07a0f6d0b1aa75ca0bc2fe090abc37c6003","patch":"@@ -1,192 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.audit;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.commons.IdRepoConstants;\n-import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n-import org.apache.syncope.client.console.panels.DirectoryPanel;\n-import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.rest.AuditRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.audit.AuditEntry;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.types.AuditElements;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public abstract class AuditHistoryDirectoryPanel<T extends Serializable> extends DirectoryPanel<\n-        AuditEntry, AuditEntry, AuditHistoryDirectoryPanel<T>.AuditHistoryProvider, AuditRestClient>\n-        implements ModalPanel {\n-\n-    private static final long serialVersionUID = -8248734710505211261L;\n-\n-    private static final List<String> EVENTS = List.of(\"create\", \"update\");\n-\n-    private static final SortParam<String> REST_SORT = new SortParam<>(\"event_date\", false);\n-\n-    private final BaseModal<?> baseModal;\n-\n-    private final MultilevelPanel mlp;\n-\n-    private final AuditElements.EventCategoryType type;\n-\n-    private final String category;\n-\n-    private final EntityTO entity;\n-\n-    private final String auditRestoreEntitlement;\n-\n-    public AuditHistoryDirectoryPanel(\n-            final BaseModal<?> baseModal,\n-            final MultilevelPanel mlp,\n-            final AuditElements.EventCategoryType type,\n-            final String category,\n-            final EntityTO entity,\n-            final String auditRestoreEntitlement,\n-            final PageReference pageRef) {\n-\n-        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef);\n-        disableCheckBoxes();\n-\n-        this.baseModal = baseModal;\n-        this.mlp = mlp;\n-        this.type = type;\n-        this.category = category;\n-        this.entity = entity;\n-        this.auditRestoreEntitlement = auditRestoreEntitlement;\n-        this.pageRef = pageRef;\n-\n-        this.restClient = new AuditRestClient();\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected AuditHistoryDirectoryPanel<T>.AuditHistoryProvider dataProvider() {\n-        return new AuditHistoryProvider(rows);\n-    }\n-\n-    @Override\n-    protected String paginatorRowsKey() {\n-        return IdRepoConstants.PREF_AUDIT_HISTORY_PAGINATOR_ROWS;\n-    }\n-\n-    @Override\n-    protected List<IColumn<AuditEntry, String>> getColumns() {\n-        List<IColumn<AuditEntry, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\"who\", this), \"who\"));\n-        columns.add(new DatePropertyColumn<>(new StringResourceModel(\"date\", this), null, \"date\"));\n-        return columns;\n-    }\n-\n-    @Override\n-    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<AuditEntry, String> resultTableBuilder) {\n-        resultTableBuilder.setMultiLevelPanel(baseModal, mlp);\n-    }\n-\n-    protected abstract void restore(String json, AjaxRequestTarget target);\n-\n-    @Override\n-    protected ActionsPanel<AuditEntry> getActions(final IModel<AuditEntry> model) {\n-        final ActionsPanel<AuditEntry> panel = super.getActions(model);\n-\n-        panel.add(new ActionLink<>() {\n-\n-            private static final long serialVersionUID = -6745431735457245600L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AuditEntry modelObject) {\n-                AuditHistoryDirectoryPanel.this.getTogglePanel().close(target);\n-\n-                mlp.next(\n-                    new StringResourceModel(\"audit.diff.view\", AuditHistoryDirectoryPanel.this).getObject(),\n-                    new AuditHistoryDetails<T>(mlp, modelObject, entity, auditRestoreEntitlement) {\n-\n-                        private static final long serialVersionUID = -5311898419151367494L;\n-\n-                        @Override\n-                        protected void restore(final String json, final AjaxRequestTarget target) {\n-                            AuditHistoryDirectoryPanel.this.restore(json, target);\n-                        }\n-                    }, target);\n-\n-                target.add(modal);\n-            }\n-        }, ActionLink.ActionType.VIEW, IdRepoEntitlement.AUDIT_READ);\n-\n-        return panel;\n-    }\n-\n-    @Override\n-    protected Collection<ActionLink.ActionType> getBatches() {\n-        return List.of();\n-    }\n-\n-    protected class AuditHistoryProvider extends DirectoryDataProvider<AuditEntry> {\n-\n-        private static final long serialVersionUID = 415113175628260864L;\n-\n-        AuditHistoryProvider(final int paginatorRows) {\n-            super(paginatorRows);\n-            setSort(\"date\", SortOrder.DESCENDING);\n-        }\n-\n-        @Override\n-        public long size() {\n-            return restClient.count(entity.getKey(), type, category, EVENTS, AuditElements.Result.SUCCESS);\n-        }\n-\n-        @Override\n-        public Iterator<AuditEntry> iterator(final long first, final long count) {\n-            int page = ((int) first / paginatorRows);\n-            return restClient.search(\n-                    entity.getKey(),\n-                    (page < 0 ? 0 : page) + 1,\n-                    paginatorRows,\n-                    type,\n-                    category,\n-                    EVENTS,\n-                    AuditElements.Result.SUCCESS,\n-                    REST_SORT).\n-                    iterator();\n-        }\n-\n-        @Override\n-        public IModel<AuditEntry> model(final AuditEntry auditEntryBean) {\n-            return new CompoundPropertyModel<>(auditEntryBean);\n-        }\n-    }\n-}"},{"sha":"ccbf968ddf573c136c1d6af0fdf40470f50b72eb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryModal.java","status":"modified","additions":9,"deletions":15,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.client.console.audit;\n \n-import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.panel.Panel;\n \n@@ -32,33 +30,29 @@\n     private static final long serialVersionUID = 1066124171682570080L;\n \n     public AuditHistoryModal(\n-            final BaseModal<?> baseModal,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final T entity,\n-            final String auditRestoreEntitlement,\n-            final PageReference pageRef) {\n+            final String auditRestoreEntitlement) {\n \n         super(BaseModal.CONTENT_ID);\n \n-        MultilevelPanel mlp = new MultilevelPanel(\"history\");\n-        mlp.setOutputMarkupId(true);\n-        add(mlp.setFirstLevel(new AuditHistoryDirectoryPanel<T>(\n-                baseModal,\n-                mlp,\n+        add(new AuditHistoryDetails(\n+                \"history\",\n+                entity,\n                 type,\n                 category,\n-                entity,\n-                auditRestoreEntitlement,\n-                pageRef) {\n+                auditRestoreEntitlement) {\n \n-            private static final long serialVersionUID = 1952220682903768286L;\n+            private static final long serialVersionUID = -5311898419151367494L;\n \n             @Override\n             protected void restore(final String json, final AjaxRequestTarget target) {\n                 AuditHistoryModal.this.restore(json, target);\n+                this.initDiff();\n+                target.add(this);\n             }\n-        }));\n+        });\n     }\n \n     protected abstract void restore(String json, AjaxRequestTarget target);"},{"sha":"f09645b7abe523a69479a9bf6ad9142fb27f616d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -170,12 +170,10 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n             public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 model.setObject(restClient.read(model.getObject().getKey()));\n                 target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                        altDefaultModal,\n                         AuditElements.EventCategoryType.LOGIC,\n                         \"AnyObjectLogic\",\n                         model.getObject(),\n-                        AnyEntitlement.UPDATE.getFor(type),\n-                        pageRef) {\n+                        AnyEntitlement.UPDATE.getFor(type)) {\n \n                     private static final long serialVersionUID = -7440902560249531201L;\n "},{"sha":"a9fd3d357fcbf67e0a92d80b2734655c9f24f567","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -339,12 +339,10 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 model.setObject(restClient.read(model.getObject().getKey()));\n                 target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                        altDefaultModal,\n                         AuditElements.EventCategoryType.LOGIC,\n                         \"GroupLogic\",\n                         model.getObject(),\n-                        IdRepoEntitlement.GROUP_UPDATE,\n-                        pageRef) {\n+                        IdRepoEntitlement.GROUP_UPDATE) {\n \n                     private static final long serialVersionUID = -5819724478921691835L;\n "},{"sha":"a9e968436eac54abad06102feb3c441aa22dc517","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -52,7 +52,6 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.PageReference;\n@@ -269,12 +268,10 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     model.setObject(restClient.read(model.getObject().getKey()));\n                     target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n-                            altDefaultModal,\n-                            AuditElements.EventCategoryType.LOGIC,\n-                            \"UserLogic\",\n+                            null,\n+                            null,\n                             model.getObject(),\n-                            IdRepoEntitlement.USER_UPDATE,\n-                            pageRef) {\n+                            IdRepoEntitlement.USER_UPDATE) {\n \n                         private static final long serialVersionUID = 959378158400669867L;\n "},{"sha":"9daf2ee279a6aeb7a50ddae67f019c1c2e19f6d0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/JsonDiffPanel.java","status":"modified","additions":14,"deletions":19,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -18,25 +18,19 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnLoadHeaderItem;\n import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n \n-public class JsonDiffPanel extends AbstractModalPanel<String> {\n+public class JsonDiffPanel extends Panel {\n \n     private static final long serialVersionUID = -5110368813584745668L;\n \n-    public JsonDiffPanel(\n-            final BaseModal<String> modal,\n-            final IModel<String> first,\n-            final IModel<String> second,\n-            final PageReference pageRef) {\n+    public JsonDiffPanel(final IModel<String> first, final IModel<String> second) {\n \n-        super(modal, pageRef);\n+        super(\"jsonDiffPanel\");\n \n         TextArea<String> jsonEditorInfoDefArea1 = new TextArea<>(\"jsonEditorInfo1\", first);\n         jsonEditorInfoDefArea1.setMarkupId(\"jsonEditorInfo1\").setOutputMarkupPlaceholderTag(true);\n@@ -52,14 +46,15 @@ public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n         response.render(OnLoadHeaderItem.forScript(\n                 \"CodeMirror.MergeView(document.getElementById('jsonDiffEditorInfoDefForm'), {\"\n-                + \"  value: document.getElementById('jsonEditorInfo1').innerHTML, \"\n-                + \"  orig: document.getElementById('jsonEditorInfo2').innerHTML, \"\n-                + \"  lineNumbers: true, \"\n-                + \"  mode: \\\"application/json\\\",\"\n-                + \"  highlightDifferences: true,\"\n-                + \"  showDifferences: true,\"\n-                + \"  readOnly: true,\"\n-                + \"  revertButtons: false\"\n-                + \"});\"));\n+                        + \"  value: document.getElementById('jsonEditorInfo1').innerHTML, \"\n+                        + \"  orig: document.getElementById('jsonEditorInfo2').innerHTML, \"\n+                        + \"  lineNumbers: true, \"\n+                        + \"  mode: \\\"application/json\\\",\"\n+                        + \"  highlightDifferences: true,\"\n+                        + \"  showDifferences: true,\"\n+                        + \"  readOnly: true,\"\n+                        + \"  revertButtons: false,\"\n+                        + \"  autoRefresh: true\"\n+                        + \"});\"));\n     }\n }"},{"sha":"6d62576586b65d6ef124365f0e83567e321df06f","filename":"client/idrepo/console/src/main/resources/META-INF/resources/css/syncopeConsole.scss","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -22,7 +22,6 @@ $background_console_dark: #00a65a;\n $background_console_white: #eee;\n \n \n-\n /* SCSS Methods\n ============================================================================= */\n \n@@ -34,8 +33,6 @@ $background_console_white: #eee;\n }\n \n \n-\n-\n /* General\n ============================================================================= */\n \n@@ -73,6 +70,7 @@ body {\n       background-color: $background_console_dark;\n     }\n   }\n+\n   &.btn-sso {\n     &:hover, &:active, &:focus {\n       background-color: $background_console_dark;\n@@ -85,7 +83,7 @@ body {\n \n #mcp_wrapper {\n \n-  .form-control{\n+  .form-control {\n     margin-bottom: 10px\n   }\n \n@@ -97,3 +95,17 @@ body {\n     padding: 2% 2% 0 2%;\n   }\n }\n+\n+.json-diff-header {\n+  text-align: center;\n+  \n+  display: table;\n+  width: 100%;\n+  table-layout: fixed;\n+  border-spacing: 10px;\n+}\n+\n+.json-diff-item {\n+  display: table-cell;\n+  vertical-align: middle;\n+}"},{"sha":"f5b81b16aa1f0ccd8bc72c56d6b752c4eb47c8ce","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails.html","status":"modified","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -17,15 +17,19 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n+<wicket:panel>\n \n-    <div style=\"padding-left: 1%;padding-right: 1%;text-align: center;\">\n-      <div class=\"float-left\"><strong><span wicket:id=\"current\"/></strong></div>\n-      <a href=\"#\" wicket:id=\"restore\" wicket:message=\"title:restore\"><i class=\"fa fa-history fa-2x\"></i></a>\n-      <div class=\"float-right\"><strong><span wicket:id=\"previous\"/></strong></div>\n+    <div class=\"json-diff-header\">\n+        <div class=\"json-diff-item\" wicket:id=\"beforeVersions\"></div>\n+        <div class=\"json-diff-item\">\n+            <a href=\"#\" wicket:id=\"restore\" wicket:message=\"title:restore\">\n+                <i class=\"fa fa-history fa-2x\"></i>\n+            </a>\n+        </div>\n+        <div class=\"json-diff-item\" wicket:id=\"afterVersions\"></div>\n     </div>\n \n-    <div wicket:id=\"content\"></div>\n+    <div wicket:id=\"jsonDiffPanel\"></div>\n \n-  </wicket:panel>\n+</wicket:panel>\n </html>"},{"sha":"6db8a35d723da137e7274a90fb6dfeae79ab6285","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Current\n+current=After\n previous=Previous\n restore=Restore\n+beforeVersions=Versions of the previous\n+afterVersions=Versions of the after"},{"sha":"6e98ebcb1cb4dec0923503687565307242d78dc9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_fr_CA.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Courant\n-previous=Pr\\u00e9c\\u00e9dent\n+current=Apr\\uFFFDs\n+previous=Pr\\u00E9c\\u00E9dent\n restore=Restaurer\n+beforeVersions=Versions of the previous\n+afterVersions=Versions of the after\n+"},{"sha":"7285b7a8c718cdad29207306d3f2e6cc6a7ee226","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_it.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Attuale\n-previous=Precedente\n+current=Dopo\n+previous=Prima\n restore=Ripristina\n+beforeVersions=Versioni del precedente\n+afterVersions=Versioni del successivo\n+"},{"sha":"81df9a2f38d4c2710a529444c465ba1119af7234","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_ja.properties","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Current\n-previous=Previous\n-restore=Restore\n+current=\\u73FE\\u6642\\u70B9\\u306E\n+previous=\\u524D\n+restore=\\u30EA\\u30B9\\u30C8\\u30A2\n+beforeVersions=\\u4EE5\\u524D\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\n+afterVersions=\\u4EE5\\u964D\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\n+"},{"sha":"8c4a3510f4da017e282291222c45761c84f2b422","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_pt_BR.properties","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Current\n-previous=Previous\n-restore=Restore\n+current=Ap\\uFFFDs\n+previous=Anterior\n+restore=Restaurar\n+beforeVersions=Vers\\u00F5es do anterior\n+afterVersions=Vers\\u00F5es do depois"},{"sha":"9eb86bb5f9ad62ad681d489550dc00537a223cd9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_ru.properties","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-current=Current\n-previous=Previous\n-restore=Restore\n+current=\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439\n+previous=\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\n+restore=\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\n+beforeVersions=\\u0412\\u0435\\u0440\\u0441\\u0438\\u0438 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0435\\u0433\\u043E\n+afterVersions=\\u0412\\u0435\\u0440\\u0441\\u0438\\u0438 \\u043F\\u043E\\u0441\\u043B\\u0435"},{"sha":"b3a336611a673adede0d78a005636d496a675743","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AuditElements.java","status":"modified","additions":8,"deletions":18,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -30,24 +30,14 @@ public final class AuditElements implements BaseBean {\n \n     public enum EventCategoryType {\n \n-        LOGIC(\"LOGIC\"),\n-        WA(\"WA\"),\n-        TASK(\"TASK\"),\n-        PROPAGATION(\"PropagationTask\"),\n-        PULL(\"PullTask\"),\n-        PUSH(\"PushTask\"),\n-        CUSTOM(\"CUSTOM\");\n-\n-        private final String value;\n-\n-        EventCategoryType(final String value) {\n-            this.value = value;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return value;\n-        }\n+        LOGIC,\n+        WA,\n+        TASK,\n+        PROPAGATION,\n+        PULL,\n+        PUSH,\n+        CUSTOM;\n+\n     }\n \n     public enum Result {"},{"sha":"5750fcd9dd6c00caf8ca09761c4fda7b4fcd8a02","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -165,11 +165,11 @@ public static Pair<EventCategory, Result> parseEventCategory(final String event)\n             } else {\n                 EventCategoryType type;\n \n-                if (EventCategoryType.PROPAGATION.toString().equals(elements[0])) {\n+                if (EventCategoryType.PROPAGATION.name().equals(elements[0])) {\n                     type = EventCategoryType.PROPAGATION;\n-                } else if (EventCategoryType.PULL.toString().equals(elements[0])) {\n+                } else if (EventCategoryType.PULL.name().equals(elements[0])) {\n                     type = EventCategoryType.PULL;\n-                } else if (EventCategoryType.PUSH.toString().equals(elements[0])) {\n+                } else if (EventCategoryType.PUSH.name().equals(elements[0])) {\n                     type = EventCategoryType.PUSH;\n                 } else {\n                     try {\n@@ -219,7 +219,7 @@ public static String buildEvent(\n \n         eventBuilder.append('[');\n         if (type != null) {\n-            eventBuilder.append(type.toString());\n+            eventBuilder.append(type.name());\n         }\n         eventBuilder.append(\"]:[\");\n         if (StringUtils.isNotBlank(category)) {"},{"sha":"18d31d2664c1ac9b9c8fda89b3f605803ce4da52","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AuditLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -213,11 +213,11 @@ public List<EventCategory> events() {\n                     EventCategory pullEventCategory = new EventCategory(EventCategoryType.PULL);\n                     EventCategory pushEventCategory = new EventCategory(EventCategoryType.PUSH);\n \n-                    propEventCategory.setCategory(anyTypeKind.name().toLowerCase());\n+                    propEventCategory.setCategory(anyTypeKind.name());\n                     propEventCategory.setSubcategory(resource.getKey());\n \n-                    pullEventCategory.setCategory(anyTypeKind.name().toLowerCase());\n-                    pushEventCategory.setCategory(anyTypeKind.name().toLowerCase());\n+                    pullEventCategory.setCategory(anyTypeKind.name());\n+                    pushEventCategory.setCategory(anyTypeKind.name());\n                     pullEventCategory.setSubcategory(resource.getKey());\n                     pushEventCategory.setSubcategory(resource.getKey());\n "},{"sha":"7911d3529e58e13eabe3a4a395b6df0ac42b4069","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -300,13 +300,13 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n \n             boolean notificationsAvailable = notificationManager.notificationsAvailable(\n                     AuditElements.EventCategoryType.PUSH,\n-                    any.getType().getKind().name().toLowerCase(),\n+                    any.getType().getKind().name(),\n                     profile.getTask().getResource().getKey(),\n                     operation);\n             boolean auditRequested = auditManager.auditRequested(\n                     AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.PUSH,\n-                    any.getType().getKind().name().toLowerCase(),\n+                    any.getType().getKind().name(),\n                     profile.getTask().getResource().getKey(),\n                     operation);\n \n@@ -488,7 +488,7 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n                             AuthContextUtils.getWho(),\n                             AuditElements.EventCategoryType.PUSH,\n-                            any.getType().getKind().name().toLowerCase(),\n+                            any.getType().getKind().name(),\n                             profile.getTask().getResource().getKey(),\n                             operation,\n                             resultStatus,"},{"sha":"d7a990f6aa33157daffab40d30e3bb7db9d4131d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"modified","additions":82,"deletions":8,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -46,15 +46,20 @@\n import java.util.function.Function;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.audit.AuditEntry;\n import org.apache.syncope.common.lib.audit.EventCategory;\n+import org.apache.syncope.common.lib.request.AttrPatch;\n+import org.apache.syncope.common.lib.request.ResourceDR;\n+import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AuditConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -64,6 +69,7 @@\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.MatchingRule;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n@@ -320,7 +326,7 @@ public void listAuditEvents() {\n \n         found = false;\n         for (EventCategory eventCategoryTO : events) {\n-            if (AnyTypeKind.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n+            if (AnyTypeKind.USER.name().equals(eventCategoryTO.getCategory())) {\n                 if (RESOURCE_NAME_LDAP.equals(eventCategoryTO.getSubcategory())\n                         && AuditElements.EventCategoryType.PULL == eventCategoryTO.getType()) {\n \n@@ -333,7 +339,7 @@ public void listAuditEvents() {\n \n         found = false;\n         for (EventCategory eventCategoryTO : events) {\n-            if (AnyTypeKind.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n+            if (AnyTypeKind.USER.name().equals(eventCategoryTO.getCategory())) {\n                 if (RESOURCE_NAME_CSV.equals(eventCategoryTO.getSubcategory())\n                         && AuditElements.EventCategoryType.PROPAGATION == eventCategoryTO.getType()) {\n \n@@ -455,15 +461,15 @@ public void customAuditAppender() throws IOException, InterruptedException {\n                     auditFilePath,\n                     content -> content.contains(\n                             \"DEBUG Master.syncope.audit.[LOGIC]:[ResourceLogic]:[]:[update]:[SUCCESS]\"\n-                            + \" - This is a static test message\"),\n+                                    + \" - This is a static test message\"),\n                     10);\n \n             // nothing expected in audit_for_Master_norewrite_file.log instead\n             checkLogFileFor(\n                     auditNoRewriteFilePath,\n                     content -> !content.contains(\n                             \"DEBUG Master.syncope.audit.[LOGIC]:[ResourceLogic]:[]:[update]:[SUCCESS]\"\n-                            + \" - This is a static test message\"),\n+                                    + \" - This is a static test message\"),\n                     10);\n         } catch (IOException e) {\n             fail(\"Unable to read/write log files\", e);\n@@ -485,25 +491,25 @@ public void issueSYNCOPE976() {\n     public void issueSYNCOPE1446() {\n         AuditLoggerName createSuccess = new AuditLoggerName(\n                 AuditElements.EventCategoryType.PROPAGATION,\n-                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                AnyTypeKind.ANY_OBJECT.name(),\n                 RESOURCE_NAME_DBSCRIPTED,\n                 \"create\",\n                 AuditElements.Result.SUCCESS);\n         AuditLoggerName createFailure = new AuditLoggerName(\n                 AuditElements.EventCategoryType.PROPAGATION,\n-                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                AnyTypeKind.ANY_OBJECT.name(),\n                 RESOURCE_NAME_DBSCRIPTED,\n                 \"create\",\n                 AuditElements.Result.FAILURE);\n         AuditLoggerName updateSuccess = new AuditLoggerName(\n                 AuditElements.EventCategoryType.PROPAGATION,\n-                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                AnyTypeKind.ANY_OBJECT.name(),\n                 RESOURCE_NAME_DBSCRIPTED,\n                 \"update\",\n                 AuditElements.Result.SUCCESS);\n         AuditLoggerName updateFailure = new AuditLoggerName(\n                 AuditElements.EventCategoryType.PROPAGATION,\n-                AnyTypeKind.ANY_OBJECT.name().toLowerCase(),\n+                AnyTypeKind.ANY_OBJECT.name(),\n                 RESOURCE_NAME_DBSCRIPTED,\n                 \"update\",\n                 AuditElements.Result.FAILURE);\n@@ -557,4 +563,72 @@ public void issueSYNCOPE1446() {\n             }\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1695() {\n+        // add audit conf for pull\n+        AUDIT_SERVICE.set(\n+                buildAuditConf(\"syncope.audit.[PULL]:[USER]:[resource-ldap]:[matchingrule_update]:[SUCCESS]\", true));\n+        AUDIT_SERVICE.set(\n+                buildAuditConf(\"syncope.audit.[PULL]:[USER]:[resource-ldap]:[unmatchingrule_assign]:[SUCCESS]\", true));\n+        AUDIT_SERVICE.set(\n+                buildAuditConf(\"syncope.audit.[PULL]:[USER]:[resource-ldap]:[unmatchingrule_provision]:[SUCCESS]\",\n+                        true));\n+        UserTO pullFromLDAP = null;\n+        try {\n+            // pull from resource-ldap -> generates an audit entry\n+            PullTaskTO pullTaskTO = new PullTaskTO();\n+            pullTaskTO.setPerformCreate(true);\n+            pullTaskTO.setPerformUpdate(true);\n+            pullTaskTO.getActions().add(\"LDAPMembershipPullActions\");\n+            pullTaskTO.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n+            pullTaskTO.setMatchingRule(MatchingRule.UPDATE);\n+            pullTaskTO.setUnmatchingRule(UnmatchingRule.ASSIGN);\n+            RECONCILIATION_SERVICE.pull(\n+                    new ReconQuery.Builder(AnyTypeKind.USER.name(), RESOURCE_NAME_LDAP).fiql(\"uid==pullFromLDAP\")\n+                            .build(),\n+                    pullTaskTO);\n+            // update pullTaskTO -> another audit entry\n+            pullFromLDAP = updateUser(new UserUR.Builder(USER_SERVICE.read(\"pullFromLDAP\").getKey())\n+                    .plainAttr(new AttrPatch.Builder(new Attr.Builder(\"ctype\").value(\"abcdef\").build()).build())\n+                    .build()).getEntity();\n+            // search by empty type and category events and get both events on testfromLDAP\n+            assertEquals(2,\n+                    AUDIT_SERVICE.search(new AuditQuery.Builder()\n+                            .entityKey(pullFromLDAP.getKey())\n+                            .page(1)\n+                            .size(10)\n+                            .events(List.of(\"create\", \"update\", \"matchingrule_update\", \"unmatchingrule_assign\",\n+                                    \"unmatchingrule_provision\"))\n+                            .result(AuditElements.Result.SUCCESS)\n+                            .build()).getTotalCount());\n+        } finally {\n+            if (pullFromLDAP != null) {\n+                USER_SERVICE.deassociate(new ResourceDR.Builder()\n+                        .key(pullFromLDAP.getKey())\n+                        .resource(RESOURCE_NAME_LDAP)\n+                        .action(ResourceDeassociationAction.UNLINK)\n+                        .build());\n+                USER_SERVICE.delete(pullFromLDAP.getKey());\n+\n+                // restore previous audit\n+                AUDIT_SERVICE.set(\n+                        buildAuditConf(\"syncope.audit.[PULL]:[USER]:[resource-ldap]:[matchingrule_update]:[SUCCESS]\",\n+                                false));\n+                AUDIT_SERVICE.set(\n+                        buildAuditConf(\"syncope.audit.[PULL]:[USER]:[resource-ldap]:[unmatchingrule_assign]:[SUCCESS]\",\n+                                false));\n+                AUDIT_SERVICE.set(buildAuditConf(\n+                        \"syncope.audit.[PULL]:[USER]:[resource-ldap]:[unmatchingrule_provision]:[SUCCESS]\",\n+                        false));\n+            }\n+        }\n+    }\n+\n+    private static AuditConfTO buildAuditConf(final String auditLoggerName, final boolean active) {\n+        AuditConfTO auditConfTO = new AuditConfTO();\n+        auditConfTO.setActive(active);\n+        auditConfTO.setKey(auditLoggerName);\n+        return auditConfTO;\n+    }\n }"},{"sha":"b650fda655016cc17941d01f00363c2df4b24492","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -463,8 +463,8 @@ public void issueSYNCOPE648() {\n         // 2. Create notification\n         NotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n-        notification.getEvents().add(\"[PushTask]:[group]:[resource-ldap]:[matchingrule_ignore]:[SUCCESS]\");\n-        notification.getEvents().add(\"[PushTask]:[group]:[resource-ldap]:[unmatchingrule_ignore]:[SUCCESS]\");\n+        notification.getEvents().add(\"[PUSH]:[GROUP]:[resource-ldap]:[matchingrule_ignore]:[SUCCESS]\");\n+        notification.getEvents().add(\"[PUSH]:[GROUP]:[resource-ldap]:[unmatchingrule_ignore]:[SUCCESS]\");\n \n         notification.getStaticRecipients().add(\"issueyncope648@syncope.apache.org\");\n         notification.setSelfAsRecipient(false);"},{"sha":"30723baf684a5282544c2915c7de07c8ce4b859b","filename":"src/main/asciidoc/reference-guide/concepts/notifications.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fnotifications.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c7548c4b14a65e33e7418d9a0873089f9ec4bd1/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fnotifications.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fnotifications.adoc?ref=1c7548c4b14a65e33e7418d9a0873089f9ec4bd1","patch":"@@ -83,7 +83,7 @@ An event is uniquely identified by a string of the following form:\n \n Some samples:\n \n-* `[PushTask]:[group]:[resource-db-scripted]:[matchingrule_deprovision]:[SUCCESS]` +\n+* `[PUSH]:[GROUP]:[resource-db-scripted]:[matchingrule_deprovision]:[SUCCESS]` +\n successful Group <<provisioning-push,push>> to the external resource `resource-db-scripted`, when deprovisioning\n matching entities\n * `[LOGIC]:[RealmLogic]:[]:[create]:[FAILURE]` +"}]}