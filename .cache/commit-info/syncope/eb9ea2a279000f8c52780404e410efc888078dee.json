{"sha":"eb9ea2a279000f8c52780404e410efc888078dee","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmViOWVhMmEyNzkwMDBmOGM1Mjc4MDQwNGU0MTBlZmM4ODgwNzhkZWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-21T09:29:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-21T09:29:57Z"},"message":"[SYNCOPE-119] Better integration with changes from SYNCOPE-654","tree":{"sha":"bfd89eff4f4d9fa6841af8075d0d48c803d3c9ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bfd89eff4f4d9fa6841af8075d0d48c803d3c9ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/eb9ea2a279000f8c52780404e410efc888078dee","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb9ea2a279000f8c52780404e410efc888078dee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb9ea2a279000f8c52780404e410efc888078dee","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb9ea2a279000f8c52780404e410efc888078dee/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4115c57b93135ec0881cd99aa317440d0ae3f5c8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4115c57b93135ec0881cd99aa317440d0ae3f5c8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4115c57b93135ec0881cd99aa317440d0ae3f5c8"}],"stats":{"total":15,"additions":11,"deletions":4},"files":[{"sha":"754a745ab0a9f17088253369e051fcead9382b03","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/RestClientFactoryBean.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb9ea2a279000f8c52780404e410efc888078dee/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb9ea2a279000f8c52780404e410efc888078dee/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java?ref=eb9ea2a279000f8c52780404e410efc888078dee","patch":"@@ -28,6 +28,8 @@\n  */\n public class RestClientFactoryBean extends JAXRSClientFactoryBean {\n \n+    public static final String HEADER_SPLIT_PROPERTY = \"org.apache.cxf.http.header.split\";\n+\n     /**\n      * Creates an anonymous instance of the given service class, for the given content type.\n      *\n@@ -63,7 +65,7 @@ public <T> T createServiceInstance(\n         final T serviceInstance = create(serviceClass);\n         WebClient.client(serviceInstance).type(mediaType).accept(mediaType);\n         WebClient.getConfig(WebClient.client(serviceInstance)).\n-                getRequestContext().put(\"org.apache.cxf.http.header.split\", true);\n+                getRequestContext().put(HEADER_SPLIT_PROPERTY, true);\n         return serviceInstance;\n     }\n }"},{"sha":"494974001961b95f1b816dcd4b92e92f6e5c7a15","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb9ea2a279000f8c52780404e410efc888078dee/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb9ea2a279000f8c52780404e410efc888078dee/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=eb9ea2a279000f8c52780404e410efc888078dee","patch":"@@ -110,7 +110,12 @@ public <T> T getService(final Class<T> serviceClass) {\n \n     @SuppressWarnings(\"unchecked\")\n     public Pair<Map<Entitlement, Set<String>>, UserTO> self() {\n-        Response response = getService(UserSelfService.class).read();\n+        // Explicitly disable header value split because it interferes with JSON deserialization below\n+        UserSelfService serviceInstance = getService(UserSelfService.class);\n+        WebClient.getConfig(WebClient.client(serviceInstance)).\n+                getRequestContext().put(RestClientFactoryBean.HEADER_SPLIT_PROPERTY, false);\n+\n+        Response response = serviceInstance.read();\n         if (response.getStatusInfo().getStatusCode() != Response.Status.OK.getStatusCode()) {\n             Exception ex = exceptionMapper.fromResponse(response);\n             if (ex != null) {\n@@ -121,7 +126,7 @@ public Pair<Map<Entitlement, Set<String>>, UserTO> self() {\n         try {\n             return new ImmutablePair<>(\n                     (Map<Entitlement, Set<String>>) new ObjectMapper().readValue(\n-                            response.getHeaderString(RESTHeaders.OWNED_ENTITLEMENTS).replaceAll(\"%2C\", \",\"),\n+                            response.getHeaderString(RESTHeaders.OWNED_ENTITLEMENTS),\n                             new TypeReference<HashMap<Entitlement, Set<String>>>() {\n                             }),\n                     response.readEntity(UserTO.class));"},{"sha":"4929d621ede0585cd8ef7943a7599b78496b2c51","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb9ea2a279000f8c52780404e410efc888078dee/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb9ea2a279000f8c52780404e410efc888078dee/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=eb9ea2a279000f8c52780404e410efc888078dee","patch":"@@ -140,7 +140,7 @@ public UserTO transform(final User input) {\n     @Transactional(readOnly = true)\n     public Pair<String, UserTO> readSelf() {\n         return ImmutablePair.of(\n-                POJOHelper.serialize(AuthContextUtils.getAuthorizations()).replaceAll(\",\", \"%2C\"),\n+                POJOHelper.serialize(AuthContextUtils.getAuthorizations()),\n                 binder.getAuthenticatedUserTO());\n     }\n "}]}