{"sha":"edfa956032ee2aee3a8ee693f90132754955c29e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkZmE5NTYwMzJlZTJhZWUzYThlZTY5M2Y5MDEzMjc1NDk1NWMyOWU=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2021-07-29T06:22:45Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-07-29T06:22:45Z"},"message":"simplify optional call chains (#284)","tree":{"sha":"50309de43fc8ca545a33072d80dd544e0d1e6eb6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/50309de43fc8ca545a33072d80dd544e0d1e6eb6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/edfa956032ee2aee3a8ee693f90132754955c29e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAkk1CRBK7hj4Ov3rIwAAVucIACqvm+DEdwVXpHjLWvKhGuY3\nXVTanIlyFJyu78B/RmA1SOa7934eGq/EQyEY+Y+G+9AzmHgqpAtNk1GPeOZwp+Lf\n3J2asfiwXUtaWwkm4usoSVSvHY8W0qaSleOjKlAoWRl9RLKEzRRqJAYSV9sohFSe\n9KmjdvWmQgJek9v5ItXs8BK1bLMUrVossnTEWm8wumnbB4hubiH+f9mw0gCuRX9H\ncoDdc97PGMMOvhYXmqS7qP92JcNZdjcNRA5NUjioRVuAjDJVBUzIgZjTpWI30GfE\nOvae0ykLqmJw40+BmLdgwKjL0BCFBawSTjxEA1cmUYf3Yiv04aKl4340smcr2io=\n=nC1E\n-----END PGP SIGNATURE-----\n","payload":"tree 50309de43fc8ca545a33072d80dd544e0d1e6eb6\nparent fb388a0c2d572e55e98f3f76ad9b1c43883e5e15\nauthor Misagh Moayyed <mm1844@gmail.com> 1627539765 +0400\ncommitter GitHub <noreply@github.com> 1627539765 +0400\n\nsimplify optional call chains (#284)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfa956032ee2aee3a8ee693f90132754955c29e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/edfa956032ee2aee3a8ee693f90132754955c29e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfa956032ee2aee3a8ee693f90132754955c29e/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"fb388a0c2d572e55e98f3f76ad9b1c43883e5e15","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb388a0c2d572e55e98f3f76ad9b1c43883e5e15","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fb388a0c2d572e55e98f3f76ad9b1c43883e5e15"}],"stats":{"total":143,"additions":58,"deletions":85},"files":[{"sha":"31e933ea2fd24be8f6e8e0d54298898a685b23a8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -102,10 +102,8 @@ public static List<String> getExtAttrNames(\n                 filter(object -> object.getType().equalsIgnoreCase(objectClass)).\n                 findAny();\n \n-        return connIdObjectClass.isPresent()\n-                ? connIdObjectClass.get().getAttributes().stream().\n-                        map(PlainSchemaTO::getKey).collect(Collectors.toList())\n-                : List.of();\n+        return connIdObjectClass.map(connIdObjectClassTO -> connIdObjectClassTO.getAttributes().stream().\n+            map(PlainSchemaTO::getKey).collect(Collectors.toList())).orElseGet(List::of);\n     }\n \n     /**"},{"sha":"16904b043b8fc624cb5b49d34d9292449d021105","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/LinkedAccountStatusPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FLinkedAccountStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FLinkedAccountStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FLinkedAccountStatusPanel.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -59,8 +59,6 @@ public LinkedAccountStatusPanel(\n     protected Pair<ConnObjectTO, ConnObjectTO> getConnObjectTOs() {\n         Optional<ReconStatus> status = ReconStatusUtils.getReconStatus(anyTypeKey, connObjectKeyValue, resource);\n \n-        return status.isPresent()\n-                ? Pair.of(status.get().getOnSyncope(), status.get().getOnResource())\n-                : null;\n+        return status.map(reconStatus -> Pair.of(reconStatus.getOnSyncope(), reconStatus.getOnResource())).orElse(null);\n     }\n }"},{"sha":"e4cdef84e5ea6eeafcc6aef0ad5be1242fa6e0ca","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -252,7 +252,7 @@ protected void populateItem(final ListItem<Attr> item) {\n                     AbstractFieldPanel<?> panel = setPanel(\n                         schemas,\n                         item,\n-                        !linkedAccountTO.getPlainAttr(attrTO.getSchema()).isPresent());\n+                        linkedAccountTO.getPlainAttr(attrTO.getSchema()).isEmpty());\n \n                     panel.showExternAction(checkboxToggle(attrTO, panel, isMultivalue));\n                 }"},{"sha":"e6fb80415c91dd0b28d62251d5859d0ab7483e09","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -93,13 +93,12 @@ public ResourceProvisionPanel(\n             protected ResourceProvision getActualItem(\n                 final ResourceProvision item, final List<ResourceProvision> list) {\n \n-                return Optional.ofNullable(item)\n-                    .map(resourceProvision -> list.stream()\n-                        .filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n-                            || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n-                            && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n-                            || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n-                            findAny().orElse(null)).orElse(null);\n+                return Optional.ofNullable(item).flatMap(resourceProvision -> list.stream()\n+                    .filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n+                        || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n+                        && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n+                        || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n+                    findAny()).orElse(null);\n             }\n \n             @Override"},{"sha":"72bab8c9e7e49f7e84239377049e8a7c7cd61b08","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":7,"deletions":18,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -217,25 +217,18 @@ public void onEvent(final IEvent<?> event) {\n                     fragment.add(Component.class.cast(modalPanel));\n                     container.addOrReplace(fragment);\n                 }\n-                if (target.isPresent()) {\n-                    customActionCallback(target.get());\n-                }\n+                target.ifPresent(this::customActionCallback);\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent) {\n                 if (wizardInModal) {\n-                    if (target.isPresent()) {\n-                        modal.close(target.get());\n-                    }\n+                    target.ifPresent(modal::close);\n                 } else {\n                     container.addOrReplace(initialFragment);\n                 }\n-                if (target.isPresent()) {\n-                    customActionOnCancelCallback(target.get());\n-                }\n+                target.ifPresent(this::customActionOnCancelCallback);\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                if (target.isPresent()) {\n-                    ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target.get());\n-                }\n+                target.ifPresent(ajaxRequestTarget ->\n+                    ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n \n                 if (wizardInModal && showResultPage) {\n                     modal.setContent(new ResultPage<>(\n@@ -256,15 +249,11 @@ protected Panel customResultBody(final String id, final T item, final Serializab\n                     });\n                     target.ifPresent(t -> t.add(modal.getForm()));\n                 } else if (wizardInModal) {\n-                    if (target.isPresent()) {\n-                        modal.close(target.get());\n-                    }\n+                    target.ifPresent(modal::close);\n                 } else {\n                     container.addOrReplace(initialFragment);\n                 }\n-                if (target.isPresent()) {\n-                    customActionOnFinishCallback(target.get());\n-                }\n+                target.ifPresent(this::customActionOnFinishCallback);\n             }\n \n             if (containerAutoRefresh) {"},{"sha":"083ef4af678786ea28076d981ab48fdcd3667472","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrsWizardStep.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -425,7 +425,7 @@ protected void setExternalAction(final Attr attr, final AbstractFieldPanel<?> pa\n                     ? Optional.empty()\n                     : previousObject.getPlainAttr(attr.getSchema());\n             if (previousObject != null\n-                    && ((!prevAttr.isPresent() && attr.getValues().stream().anyMatch(StringUtils::isNotBlank))\n+                    && ((prevAttr.isEmpty() && attr.getValues().stream().anyMatch(StringUtils::isNotBlank))\n                     || (prevAttr.isPresent() && !ListUtils.isEqualList(\n                     prevAttr.get().getValues().stream().\n                             filter(StringUtils::isNotBlank).collect(Collectors.toList()),"},{"sha":"1edd67122dc208b222fec538627bf8a6597b267f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -186,10 +186,10 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n                     forEach(oMemb -> GroupableRelatableTO.class.cast(updated).getMembership(oMemb.getGroupKey()).\n                     ifPresent(uMemb -> {\n                         oMemb.getPlainAttrs().stream().\n-                                filter(attr -> !uMemb.getPlainAttr(attr.getSchema()).isPresent()).\n+                                filter(attr -> uMemb.getPlainAttr(attr.getSchema()).isEmpty()).\n                                 forEach(attr -> uMemb.getPlainAttrs().add(attr));\n                         oMemb.getVirAttrs().stream().\n-                                filter(attr -> !uMemb.getVirAttr(attr.getSchema()).isPresent()).\n+                                filter(attr -> uMemb.getVirAttr(attr.getSchema()).isEmpty()).\n                                 forEach(attr -> uMemb.getVirAttrs().add(attr));\n                     }));\n         }"},{"sha":"e48cf22017a2244fa604435302ff411bdfc3a5f5","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/AnyFormPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FAnyFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FAnyFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FAnyFormPanel.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -142,12 +142,12 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n         // re-add to the updated object any missing plain or virtual attribute (compared to original): this to cope with\n         // form layout, which might have not included some plain or virtual attributes\n         for (Attr plainAttr : original.getPlainAttrs()) {\n-            if (!updated.getPlainAttr(plainAttr.getSchema()).isPresent()) {\n+            if (updated.getPlainAttr(plainAttr.getSchema()).isEmpty()) {\n                 updated.getPlainAttrs().add(plainAttr);\n             }\n         }\n         for (Attr virAttr : original.getVirAttrs()) {\n-            if (!updated.getVirAttr(virAttr.getSchema()).isPresent()) {\n+            if (updated.getVirAttr(virAttr.getSchema()).isEmpty()) {\n                 updated.getVirAttrs().add(virAttr);\n             }\n         }\n@@ -159,11 +159,11 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n                         .cast(updated).getMembership(oMemb.getGroupKey()).ifPresent(uMemb -> {\n                     oMemb.getPlainAttrs()\n                             .stream().\n-                            filter(attr -> !uMemb.getPlainAttr(attr.getSchema()).isPresent()).\n+                            filter(attr -> uMemb.getPlainAttr(attr.getSchema()).isEmpty()).\n                             forEach(attr -> uMemb.getPlainAttrs().add(attr));\n                     oMemb.getVirAttrs()\n                             .stream().\n-                            filter(attr -> !uMemb.getVirAttr(attr.getSchema()).isPresent()).\n+                            filter(attr -> uMemb.getVirAttr(attr.getSchema()).isEmpty()).\n                             forEach(attr -> uMemb.getVirAttrs().add(attr));\n                 }\n                 );"},{"sha":"b33cb8122d5c11bb95ab5f88dabd0379297ff65f","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -468,7 +468,7 @@ public List<ProvisioningReport> pull(\n \n         Any<?> any = getAny(provision, anyKey);\n \n-        if (!provision.getMapping().getConnObjectKeyItem().isPresent()) {\n+        if (provision.getMapping().getConnObjectKeyItem().isEmpty()) {\n             throw new NotFoundException(\n                     \"ConnObjectKey cannot be determined for mapping \" + provision.getMapping().getKey());\n         }"},{"sha":"8e833d45d33107dead35bd8f20f13c8af11cfefb","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -139,7 +139,7 @@ protected void addParameters(final List<Parameter> parameters) {\n \n         Optional<Parameter> delegatedByHeaderParameter = parameters.stream().\n                 filter(p -> p instanceof HeaderParameter && RESTHeaders.DELEGATED_BY.equals(p.getName())).findFirst();\n-        if (!delegatedByHeaderParameter.isPresent()) {\n+        if (delegatedByHeaderParameter.isEmpty()) {\n             HeaderParameter parameter = new HeaderParameter();\n             parameter.setName(RESTHeaders.DELEGATED_BY);\n             parameter.setRequired(false);"},{"sha":"a822bb1aad469e58a5db25b601b4f66bf24e77bd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/FilterVisitor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FFilterVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FFilterVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FFilterVisitor.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -83,7 +83,7 @@ private Filter visitPrimitive(final SearchCondition<SearchBean> sc) {\n         switch (ct) {\n             case EQUALS:\n             case NOT_EQUALS:\n-                if (!specialAttrName.isPresent()) {\n+                if (specialAttrName.isEmpty()) {\n                     if (specialAttrValue.isPresent() && specialAttrValue.get() == SpecialAttr.NULL) {\n                         Filter empty = FilterBuilder.startsWith(AttributeBuilder.build(name, StringUtils.EMPTY));\n                         if (ct == ConditionType.NOT_EQUALS) {"},{"sha":"1d316014a75cb1c4ca624c418017e4751571a4a6","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/SearchCondVisitor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -128,7 +128,7 @@ protected SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n         switch (ct) {\n             case EQUALS:\n             case NOT_EQUALS:\n-                if (!specialAttrName.isPresent()) {\n+                if (specialAttrName.isEmpty()) {\n                     if (specialAttrValue.isPresent() && specialAttrValue.get() == SpecialAttr.NULL) {\n                         attrCond.setType(AttrCond.Type.ISNULL);\n                         attrCond.setExpression(null);"},{"sha":"d6c398aa58e958f998e2bdb5336ee115e497a325","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyMatchDAO.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyMatchDAO.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -165,13 +165,9 @@ public <T extends Any<?>> boolean matches(final T any, final SearchCond cond) {\n \n                 if (match == null) {\n                     Optional<AnyCond> anyCond = cond.getLeaf(AnyCond.class);\n-                    if (anyCond.isPresent()) {\n-                        match = matches(any, anyCond.get(), not);\n-                    } else {\n-                        match = cond.getLeaf(AttrCond.class).\n-                                map(leaf -> matches(any, leaf, not)).\n-                                orElse(null);\n-                    }\n+                    match = anyCond.map(value -> matches(any, value, not)).orElseGet(() -> cond.getLeaf(AttrCond.class).\n+                        map(leaf -> matches(any, leaf, not)).\n+                        orElse(null));\n                 }\n \n                 if (match == null) {"},{"sha":"f32826a7a6362a62fcd4d59504acbb5430d95b1f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/DefaultNotificationManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -343,7 +343,7 @@ public List<NotificationTask> createTasks(\n                 if (!notification.getEvents().contains(currentEvent)) {\n                     LOG.debug(\"No events found about {}\", any);\n                 } else if (anyType == null || any == null\n-                        || !notification.getAbout(anyType).isPresent()\n+                        || notification.getAbout(anyType).isEmpty()\n                         || anyMatchDAO.matches(any, SearchCondConverter.convert(\n                                 searchCondVisitor, notification.getAbout(anyType).get().get()))) {\n "},{"sha":"9636e31d84460c1e732715253b803812708edc19","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -345,7 +345,7 @@ public TaskExec execute(\n             provision = task.getResource().getProvision(new ObjectClass(task.getObjectClassName())).orElse(null);\n             orgUnit = task.getResource().getOrgUnit();\n \n-            if (taskInfo.getBeforeObj() == null || !taskInfo.getBeforeObj().isPresent()) {\n+            if (taskInfo.getBeforeObj() == null || taskInfo.getBeforeObj().isEmpty()) {\n                 // Try to read remote object BEFORE any actual operation\n                 beforeObj = provision == null && orgUnit == null\n                         ? null"},{"sha":"2edba4109e1a22b002e1b399d65ef4c87460d19e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -455,8 +455,7 @@ protected List<PropagationTaskInfo> createTasks(\n         propByRes.asMap().forEach((resourceKey, operation) -> {\n             ExternalResource resource = resourceDAO.find(resourceKey);\n             Provision provision = Optional.ofNullable(resource).\n-                    map(externalResource -> externalResource.getProvision(any.getType()).\n-                    orElse(null)).orElse(null);\n+                flatMap(externalResource -> externalResource.getProvision(any.getType())).orElse(null);\n             Stream<? extends Item> mappingItems = provision == null\n                     ? Stream.empty()\n                     : MappingUtils.getPropagationItems(provision.getMapping().getItems().stream());"},{"sha":"11cd1ba4900444ed7e64cdf261a3747ef24f8102","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -478,7 +478,7 @@ protected Optional<ProvisioningReport> update(\n                     attrsToRemove.add(connObjectAttr.getSchema());\n                 } else {\n                     Optional<Attr> updateAttr = update.getPlainAttr(connObjectAttr.getSchema());\n-                    if (!updateAttr.isPresent() || !updateAttr.get().getValues().equals(connObjectAttr.getValues())) {\n+                    if (updateAttr.isEmpty() || !updateAttr.get().getValues().equals(connObjectAttr.getValues())) {\n                         attrsToRemove.add(connObjectAttr.getSchema());\n                         update.getPlainAttrs().add(connObjectAttr);\n                     }"},{"sha":"7a64b72e93cf2b5c67a8c7669192f710fd09471b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPushResultHandler.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -224,17 +224,16 @@ protected void doHandle(final LinkedAccount account, final Provision provision)\n \n         // Try to read remote object BEFORE any actual operation\n         Optional<ConnectorObject> connObj = MappingUtils.getConnObjectKeyItem(provision).\n-                map(connObjectKeyItem -> outboundMatcher.matchByConnObjectKeyValue(\n-                profile.getConnector(),\n-                connObjectKeyItem,\n-                account.getConnObjectKeyValue(),\n-                provision,\n-                Optional.empty(),\n-                Optional.empty())).\n-                orElse(Optional.empty());\n+            flatMap(connObjectKeyItem -> outboundMatcher.matchByConnObjectKeyValue(\n+            profile.getConnector(),\n+            connObjectKeyItem,\n+            account.getConnObjectKeyValue(),\n+            provision,\n+            Optional.empty(),\n+            Optional.empty()));\n         LOG.debug(\"Match found for linked account {} as {}: {}\", account, provision.getObjectClass(), connObj);\n \n-        ConnectorObject beforeObj = connObj.isPresent() ? connObj.get() : null;\n+        ConnectorObject beforeObj = connObj.orElse(null);\n \n         if (profile.isDryRun()) {\n             if (beforeObj == null) {"},{"sha":"76f5d8a749747995fb42bcb5767cc9620a553a9f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/InboundMatcher.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -174,9 +174,7 @@ public boolean handle(final ConnectorObject connectorObject) {\n                     }\n \n                     result = matches.stream().filter(match -> match.getAny() != null).findFirst();\n-                    if (result.isPresent()) {\n-                        virAttrHandler.setValues(result.get().getAny(), connObj);\n-                    }\n+                    result.ifPresent(pullMatch -> virAttrHandler.setValues(pullMatch.getAny(), connObj));\n                 }\n             } catch (IllegalArgumentException e) {\n                 LOG.warn(e.getMessage());"},{"sha":"5a90641a54d65cc096af968dc225d73a24fb591f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/OutboundMatcher.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -128,14 +128,13 @@ public List<ConnectorObject> match(\n                         Optional.of(moreAttrsToGet.toArray(new String[0])),\n                         Optional.empty()));\n             } else {\n-                MappingUtils.getConnObjectKeyItem(provision).ifPresent(connObjectKeyItem -> matchByConnObjectKeyValue(\n-                        connector,\n-                        connObjectKeyItem,\n-                        connObjectKeyValue,\n-                        provision,\n-                        Optional.of(moreAttrsToGet.toArray(new String[0])),\n-                        Optional.empty()).\n-                        ifPresent(result::add));\n+                MappingUtils.getConnObjectKeyItem(provision).flatMap(connObjectKeyItem -> matchByConnObjectKeyValue(\n+                    connector,\n+                    connObjectKeyItem,\n+                    connObjectKeyValue,\n+                    provision,\n+                    Optional.of(moreAttrsToGet.toArray(new String[0])),\n+                    Optional.empty())).ifPresent(result::add);\n             }\n         } catch (RuntimeException e) {\n             LOG.error(\"Could not match {} with any existing {}\", any, provision.getObjectClass(), e);\n@@ -167,7 +166,7 @@ public List<ConnectorObject> match(\n             }\n         });\n         Optional<String[]> effectiveMATG = Optional.of(Stream.concat(\n-                moreAttrsToGet.map(Stream::of).orElse(Stream.empty()),\n+            moreAttrsToGet.stream().flatMap(Stream::of),\n                 matgFromPropagationActions.stream()).toArray(String[]::new));\n \n         Optional<PushCorrelationRule> rule = rule(provision);"},{"sha":"cb0a3b08d13ab569ab11822a781683c3687a384b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/TemplateUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -125,14 +125,14 @@ private static void fill(final RealmMember realmMember, final RealmMember templa\n \n     private static void fillRelationships(final GroupableRelatableTO any, final GroupableRelatableTO template) {\n         template.getRelationships().stream().\n-                filter(relationship -> !any.getRelationship(\n-                relationship.getOtherEndKey(), relationship.getOtherEndKey()).isPresent()).\n+                filter(relationship -> any.getRelationship(\n+                relationship.getOtherEndKey(), relationship.getOtherEndKey()).isEmpty()).\n                 forEachOrdered(relationship -> any.getRelationships().add(relationship));\n     }\n \n     private static void fillMemberships(final GroupableRelatableTO any, final GroupableRelatableTO template) {\n         template.getMemberships().stream().\n-                filter(membership -> !any.getMembership(membership.getGroupKey()).isPresent()).\n+                filter(membership -> any.getMembership(membership.getGroupKey()).isEmpty()).\n                 forEachOrdered(membership -> any.getMemberships().add(membership));\n     }\n "},{"sha":"e6ecf64f107455b4a60a991088a1e5d840cf6dea","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2ClientCache.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ClientCache.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -66,9 +66,7 @@ public class SAML2ClientCache {\n     public static Optional<String> getSPMetadataPath(final String spEntityID) {\n         String entityIDPath = StringUtils.replaceChars(\n                 StringUtils.removeStart(StringUtils.removeStart(spEntityID, \"https://\"), \"http://\"), \":/\", \"__\");\n-        return Optional.ofNullable(METADATA_PATH).\n-                map(path -> Optional.of(path.resolve(entityIDPath).toAbsolutePath().toString())).\n-                orElse(Optional.empty());\n+        return Optional.ofNullable(METADATA_PATH).map(path -> path.resolve(entityIDPath).toAbsolutePath().toString());\n     }\n \n     private final List<SAML2Client> cache = Collections.synchronizedList(new ArrayList<>());"},{"sha":"b671f8e9f663d976f99c876a53436933d443a086","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/UserServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -136,7 +136,7 @@ public User authenticate(final String username, final String password) {\n                 filter(meta -> !meta.isDeleted() && username.equals(meta.getUser().getUsername())).\n                 findFirst().map(UserMetadata::getUser);\n \n-        if (!user.isPresent()) {\n+        if (user.isEmpty()) {\n             throw new NotFoundException(username);\n         }\n         if (!password.equals(user.get().getPassword())) {"},{"sha":"498693daa207474206dd895f966836d4af4c9a26","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfa956032ee2aee3a8ee693f90132754955c29e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfa956032ee2aee3a8ee693f90132754955c29e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=edfa956032ee2aee3a8ee693f90132754955c29e","patch":"@@ -595,7 +595,7 @@ public void searchConnObjectsWithFilter() {\n                         SyncopeClient.getConnObjectTOFiqlSearchConditionBuilder().\n                                 is(\"homePhone\").nullValue().query()).build());\n         assertTrue(matches.getResult().stream().\n-                anyMatch(connObject -> !connObject.getAttr(\"homePhone\").isPresent()));\n+                anyMatch(connObject -> connObject.getAttr(\"homePhone\").isEmpty()));\n     }\n \n     @Test"}]}