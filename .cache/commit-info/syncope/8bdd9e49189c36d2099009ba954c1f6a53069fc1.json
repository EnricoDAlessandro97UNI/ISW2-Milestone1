{"sha":"8bdd9e49189c36d2099009ba954c1f6a53069fc1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiZGQ5ZTQ5MTg5YzM2ZDIwOTkwMDliYTk1NGMxZjZhNTMwNjlmYzE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-06T15:51:03Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-06T15:51:03Z"},"message":"(Fixes issue #42)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246467 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3c232f2bfce5a2ba40b33365c28507fd12ad158b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3c232f2bfce5a2ba40b33365c28507fd12ad158b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8bdd9e49189c36d2099009ba954c1f6a53069fc1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8bdd9e49189c36d2099009ba954c1f6a53069fc1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8bdd9e49189c36d2099009ba954c1f6a53069fc1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8bdd9e49189c36d2099009ba954c1f6a53069fc1/comments","author":null,"committer":null,"parents":[{"sha":"144dd71cb42681586dc3ec9c13858e7b6b506798","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/144dd71cb42681586dc3ec9c13858e7b6b506798","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/144dd71cb42681586dc3ec9c13858e7b6b506798"}],"stats":{"total":509,"additions":223,"deletions":286},"files":[{"sha":"0e87100ead3ec7cae36e2e4d77127dda0c3d0cf1","filename":"client/src/main/java/org/syncope/types/SchemaType.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -26,7 +26,6 @@ public enum SchemaType {\n     \"AccountId\"),\n     Password(\n     \"Password\");\n-\n     final private String className;\n \n     SchemaType(String className) {\n@@ -37,7 +36,7 @@ public String getClassName() {\n         return className;\n     }\n \n-    public Class getSchemaType() {\n+    public Class getSchemaClass() {\n         try {\n             return Class.forName(getClassName());\n         } catch (ClassNotFoundException e) {"},{"sha":"e29e02708b82ce71c2173cba0d223a64d1047668","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.persistence.Basic;\n-import javax.persistence.CascadeType;\n import static javax.persistence.EnumType.STRING;\n \n import javax.persistence.Column;\n@@ -46,9 +45,7 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n     /**\n      * All the mappings of the attribute schema.\n      */\n-    @OneToMany(targetEntity = SchemaMapping.class,\n-    cascade = {CascadeType.MERGE, CascadeType.REFRESH},\n-    fetch = FetchType.EAGER)\n+    @OneToMany(fetch = FetchType.EAGER)\n     private List<SchemaMapping> mappings;\n     /**\n      * Specify if the attribute should be stored on the local repository."},{"sha":"dfd43f9d060fbc552d4316f4e02096301c5cdfcf","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -43,7 +43,7 @@ public class SchemaMapping extends AbstractBaseBean {\n      * Target resource that has fields to be mapped over user attribute schemas.\n      */\n     @ManyToOne(fetch = FetchType.EAGER,\n-    cascade = {CascadeType.REFRESH, CascadeType.MERGE})\n+    cascade = {CascadeType.MERGE, CascadeType.REFRESH})\n     private TargetResource resource;\n     /**\n      * Target resource's field to be mapped."},{"sha":"b77f6edf9b84c137463de1af9790d96765a67b77","filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -56,8 +56,7 @@ public class TargetResource extends AbstractBaseBean {\n     /**\n      * Attribute mappings.\n      */\n-    @OneToMany(cascade = {CascadeType.MERGE, CascadeType.REFRESH},\n-    mappedBy = \"resource\")\n+    @OneToMany(mappedBy = \"resource\")\n     private List<SchemaMapping> mappings;\n     @Column(nullable = false)\n     @Basic"},{"sha":"399f61a245b672c5c8d34368688951e46e6587d4","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -143,7 +143,7 @@ public void removeMapping(Long mappingId) {\n \n         try {\n             // check for schema type\n-            schemaType.getSchemaType().asSubclass(AbstractSchema.class);\n+            schemaType.getSchemaClass().asSubclass(AbstractSchema.class);\n \n             /**\n              * Schema type could be:\n@@ -155,7 +155,7 @@ public void removeMapping(Long mappingId) {\n                 log.debug(\"Schema type \" + schemaType.getClassName());\n             }\n             AbstractSchema schema = find(schemaName,\n-                    schemaType.getSchemaType());\n+                    schemaType.getSchemaClass());\n \n             if (schema != null) {\n                 schema.removeMapping(mapping);"},{"sha":"f075c1f79f82336bfd3d7324b926144d26852865","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -294,10 +294,10 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n \n                 try {\n                     // check for schema or constants (AccountId/Password)\n-                    schemaType.getSchemaType().asSubclass(AbstractSchema.class);\n+                    schemaType.getSchemaClass().asSubclass(AbstractSchema.class);\n \n                     schema = schemaDAO.find(schemaName,\n-                            schemaType.getSchemaType());\n+                            schemaType.getSchemaClass());\n                 } catch (ClassCastException e) {\n                     // ignore exception ... check for AccountId or Password\n                     if (LOG.isDebugEnabled()) {"},{"sha":"158c9d7d6345d438cb165900994f58f68d309f93","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":43,"deletions":116,"changes":159,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -38,7 +38,6 @@\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n@@ -52,38 +51,34 @@ public class ResourceController extends AbstractController {\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n-\n     @Autowired\n     private SchemaDAO schemaDAO;\n-\n     @Autowired\n     private SyncopeRoleDAO syncopeRoleDAO;\n-\n     @Autowired\n-    ConnectorInstanceDAO connectorInstanceDAO;\n+    private ResourceDataBinder binder;\n \n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n     public ResourceTO create(HttpServletResponse response,\n             @RequestBody ResourceTO resourceTO)\n-            throws SyncopeClientCompositeErrorException {\n+            throws SyncopeClientCompositeErrorException, NotFoundException {\n \n         if (log.isDebugEnabled()) {\n             log.debug(\"Creation request received\");\n         }\n \n+        SyncopeClientCompositeErrorException compositeErrorException =\n+                new SyncopeClientCompositeErrorException(\n+                HttpStatus.BAD_REQUEST);\n+\n         if (resourceTO == null) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Missing resource\");\n-            }\n+            log.error(\"Missing resource\");\n \n-            throw new NullPointerException(\"Missing resource\");\n+            throw new NotFoundException(\"Missing resource\");\n         }\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n-        TargetResource actual = null;\n+        TargetResource resource = null;\n \n         try {\n             if (log.isDebugEnabled()) {\n@@ -95,63 +90,41 @@ public ResourceTO create(HttpServletResponse response,\n                         SyncopeClientExceptionType.AlreadyExists);\n \n                 ex.addElement(resourceTO.getName());\n+                compositeErrorException.addException(ex);\n \n-                throw ex;\n+                throw compositeErrorException;\n             }\n \n             if (log.isDebugEnabled()) {\n                 log.debug(\"Resource data binder ..\");\n             }\n \n-            TargetResource resource = binder.getResource(resourceTO);\n-\n-            if (log.isInfoEnabled()) {\n-                log.info(\"Create resource \" + resource.getName());\n-            }\n-\n-            actual = resourceDAO.save(resource);\n-\n-            if (actual == null) {\n-                if (log.isErrorEnabled()) {\n-                    log.error(\"Resource creation failed\");\n-                }\n+            resource = binder.getResource(resourceTO);\n+            if (resource == null) {\n+                log.error(\"Resource creation failed\");\n \n                 SyncopeClientException ex = new SyncopeClientException(\n                         SyncopeClientExceptionType.Unknown);\n \n-                throw ex;\n-            }\n-\n-        } catch (SyncopeClientException ex) {\n-\n-            SyncopeClientCompositeErrorException compositeErrorException =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n-            compositeErrorException.addException(ex);\n-\n-            throw compositeErrorException;\n+                compositeErrorException.addException(ex);\n \n+                throw compositeErrorException;\n+            }\n         } catch (Throwable t) {\n-\n             if (log.isErrorEnabled()) {\n                 log.error(\"Unknown exception\", t);\n             }\n \n             SyncopeClientException ex = new SyncopeClientException(\n                     SyncopeClientExceptionType.Unknown);\n \n-            SyncopeClientCompositeErrorException compositeErrorException =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n             compositeErrorException.addException(ex);\n \n             throw compositeErrorException;\n         }\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return binder.getResourceTO(actual);\n+        return binder.getResourceTO(resource);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,\n@@ -171,17 +144,14 @@ public ResourceTO update(HttpServletResponse response,\n         }\n \n         if (resource == null) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Missing resource\");\n-            }\n+            log.error(\"Missing resource\");\n \n             throw new NotFoundException(resourceTO.getName());\n         }\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n-        TargetResource actual;\n+        SyncopeClientCompositeErrorException compositeErrorException =\n+                new SyncopeClientCompositeErrorException(\n+                HttpStatus.BAD_REQUEST);\n \n         try {\n             if (log.isDebugEnabled()) {\n@@ -194,60 +164,37 @@ public ResourceTO update(HttpServletResponse response,\n                 mapping.setResource(null);\n                 schemaDAO.removeMapping(mapping.getId());\n             }\n+            resource.getMappings().clear();\n \n             if (log.isDebugEnabled()) {\n                 log.debug(\"Resource data binder ..\");\n             }\n \n             resource = binder.getResource(resource, resourceTO);\n-\n-            if (log.isInfoEnabled()) {\n-                log.info(\"Update resource \" + resource.getName());\n-            }\n-\n-            actual = resourceDAO.save(resource);\n-\n-            if (actual == null) {\n+            if (resource == null) {\n                 if (log.isErrorEnabled()) {\n                     log.error(\"Resource creation failed\");\n                 }\n \n                 SyncopeClientException ex = new SyncopeClientException(\n                         SyncopeClientExceptionType.Unknown);\n \n-                throw ex;\n+                compositeErrorException.addException(ex);\n+                throw compositeErrorException;\n             }\n-\n-        } catch (SyncopeClientException ex) {\n-\n-            SyncopeClientCompositeErrorException compositeErrorException =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n-            compositeErrorException.addException(ex);\n-\n-            throw compositeErrorException;\n-\n         } catch (Throwable t) {\n-\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Unknown exception\", t);\n-            }\n+            log.error(\"Unknown exception\", t);\n \n             SyncopeClientException ex = new SyncopeClientException(\n                     SyncopeClientExceptionType.Unknown);\n \n-            SyncopeClientCompositeErrorException compositeErrorException =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n             compositeErrorException.addException(ex);\n \n             throw compositeErrorException;\n         }\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return binder.getResourceTO(actual);\n+        return binder.getResourceTO(resource);\n     }\n \n     @RequestMapping(method = RequestMethod.DELETE,\n@@ -279,16 +226,9 @@ public ResourceTO read(HttpServletResponse response,\n             @PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n         TargetResource resource = resourceDAO.find(resourceName);\n-\n         if (resource == null) {\n-\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Could not find resource '\" + resourceName + \"'\");\n-            }\n+            log.error(\"Could not find resource '\" + resourceName + \"'\");\n \n             throw new NotFoundException(resourceName);\n         }\n@@ -298,20 +238,15 @@ public ResourceTO read(HttpServletResponse response,\n \n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    public ResourceTOs list(HttpServletResponse response) {\n-\n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n+    public ResourceTOs list(HttpServletResponse response)\n+            throws NotFoundException {\n \n         List<TargetResource> resources = resourceDAO.findAll();\n \n         if (resources == null) {\n+            log.error(\"No resource found\");\n \n-            if (log.isErrorEnabled()) {\n-                log.error(\"No resource found\");\n-            }\n-\n-            throw new NullPointerException(\"No resource found\");\n+            throw new NotFoundException(\"No resource found\");\n         }\n \n         return binder.getResourceTOs(resources);\n@@ -326,9 +261,6 @@ public SchemaMappingTOs createMappings(HttpServletResponse response,\n \n         Set<SchemaMapping> actuals = new HashSet<SchemaMapping>();\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n         try {\n \n             TargetResource resource = null;\n@@ -395,7 +327,7 @@ public SchemaMappingTOs createMappings(HttpServletResponse response,\n \n                 try {\n                     // check for schema type\n-                    schemaType.getSchemaType().asSubclass(AbstractSchema.class);\n+                    schemaType.getSchemaClass().asSubclass(AbstractSchema.class);\n \n                     /**\n                      * Schema type could be:\n@@ -408,10 +340,11 @@ public SchemaMappingTOs createMappings(HttpServletResponse response,\n                     }\n \n                     AbstractSchema schema = schemaDAO.find(\n-                            schemaName, schemaType.getSchemaType());\n+                            schemaName, schemaType.getSchemaClass());\n \n-                    if (schema != null)\n+                    if (schema != null) {\n                         schema.removeMapping(schemaMapping);\n+                    }\n \n                 } catch (ClassCastException e) {\n                     /**\n@@ -420,8 +353,8 @@ public SchemaMappingTOs createMappings(HttpServletResponse response,\n                      * * Password\n                      */\n                     if (log.isDebugEnabled()) {\n-                        log.debug(\"Wrong schema type \" +\n-                                schemaType.getClassName());\n+                        log.debug(\"Wrong schema type \"\n+                                + schemaType.getClassName());\n                     }\n                 }\n                 // --------------------------------------\n@@ -530,9 +463,6 @@ public SchemaMappingTOs getResourceMapping(HttpServletResponse response,\n \n         // resource.getMappings() can never return a null value\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n         return binder.getSchemaMappingTOs(schemaMappings);\n     }\n \n@@ -571,9 +501,6 @@ public SchemaMappingTOs getRoleResourcesMapping(\n \n         Set<TargetResource> resources = role.getTargetResources();\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n         SchemaMappingTOs resourceMappings = null;\n \n         for (TargetResource resource : resources) {\n@@ -584,15 +511,15 @@ public SchemaMappingTOs getRoleResourcesMapping(\n             List<SchemaMapping> schemaMappings = resource.getMappings();\n \n             if (log.isDebugEnabled()) {\n-                log.debug(\"The mappings of '\" + resource + \"' are '\" +\n-                        schemaMappings + \"'\");\n+                log.debug(\"The mappings of '\" + resource + \"' are '\"\n+                        + schemaMappings + \"'\");\n             }\n \n             resourceMappings = binder.getSchemaMappingTOs(schemaMappings);\n \n             if (log.isDebugEnabled()) {\n-                log.debug(\"The mappings TO of '\" + resource + \"' are '\" +\n-                        resourceMappings.getMappings() + \"'\");\n+                log.debug(\"The mappings TO of '\" + resource + \"' are '\"\n+                        + resourceMappings.getMappings() + \"'\");\n             }\n \n             roleMappings.getMappings().addAll(resourceMappings.getMappings());"},{"sha":"cc1832218eea914f31be9fa9ae44eea59b8cc4ad","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":32,"deletions":32,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -57,7 +57,7 @@\n @Transactional(rollbackFor = {Throwable.class})\n public abstract class AbstractAttributableDataBinder {\n \n-    protected static final Logger log = LoggerFactory.getLogger(\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n     @Autowired\n     protected SyncopeRoleDAO syncopeRoleDAO;\n@@ -86,14 +86,14 @@ private <T extends AbstractSchema> T getSchema(\n         // safely ignore invalid schemas from AttributeTO\n         // see http://code.google.com/p/syncope/issues/detail?id=17\n         if (schema == null) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Ignoring invalid schema \" + schemaName);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Ignoring invalid schema \" + schemaName);\n             }\n         } else if (schema.isVirtual() || schema.isReadonly()) {\n             schema = null;\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n             }\n         }\n \n@@ -105,8 +105,8 @@ private <T extends AbstractDerivedSchema> T getDerivedSchema(\n \n         T derivedSchema = derivedSchemaDAO.find(derivedSchemaName, reference);\n \n-        if (derivedSchema == null && log.isDebugEnabled()) {\n-            log.debug(\"Ignoring invalid derivedschema \"\n+        if (derivedSchema == null && LOG.isDebugEnabled()) {\n+            LOG.debug(\"Ignoring invalid derivedschema \"\n                     + derivedSchemaName);\n         }\n \n@@ -117,8 +117,8 @@ private TargetResource getResource(String resourceName) {\n         TargetResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Ignoring invalid resource \" + resourceName);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Ignoring invalid resource \" + resourceName);\n             }\n         }\n \n@@ -144,8 +144,8 @@ private void fillAttribute(Set<String> values,\n \n         for (String value : valuesProvided) {\n             if (value == null || value.length() == 0) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Null value for \" + schema.getName()\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Null value for \" + schema.getName()\n                             + \", ignoring\");\n                 }\n             } else {\n@@ -155,7 +155,7 @@ private void fillAttribute(Set<String> values,\n                     attributeValue = attribute.addValue(value,\n                             attributeValue);\n                 } catch (ValidationException e) {\n-                    log.error(\"Invalid value for attribute \"\n+                    LOG.error(\"Invalid value for attribute \"\n                             + schema.getName() + \": \" + value, e);\n \n                     invalidValues.addElement(value);\n@@ -176,8 +176,8 @@ private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n         resources.addAll(attributable.getTargetResources());\n         resources.addAll(attributable.getInheritedTargetResources());\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Check mandatory constraint among resources \"\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Check mandatory constraint among resources \"\n                     + resources);\n         }\n \n@@ -191,7 +191,7 @@ private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n                     && (schema.isMandatory()\n                     || schemaDAO.isMandatoryOnResource(schema, resources))) {\n \n-                log.error(\"Mandatory schema \" + schema.getName()\n+                LOG.error(\"Mandatory schema \" + schema.getName()\n                         + \" not provided with values\");\n \n                 requiredValuesMissing.addElement(schema.getName());\n@@ -236,8 +236,8 @@ protected ResourceOperations fill(\n \n                 attribute = attributable.getAttribute(schema.getName());\n                 if (attribute == null) {\n-                    if (log.isDebugEnabled()) {\n-                        log.debug(\"No attribute found for schema \"\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"No attribute found for schema \"\n                                 + schema.getName());\n                     }\n                 } else {\n@@ -249,8 +249,8 @@ protected ResourceOperations fill(\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About attributes to be removed:\\n\" + resourceOperations);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About attributes to be removed:\\n\" + resourceOperations);\n         }\n \n         // 2. attributes to be updated\n@@ -318,8 +318,8 @@ protected ResourceOperations fill(\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About attributes to be updated:\\n\" + resourceOperations);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About attributes to be updated:\\n\" + resourceOperations);\n         }\n \n         // 3. derived attributes to be removed\n@@ -339,8 +339,8 @@ protected ResourceOperations fill(\n                 derivedAttribute = attributable.getDerivedAttribute(\n                         derivedSchema.getName());\n                 if (derivedAttribute == null) {\n-                    if (log.isDebugEnabled()) {\n-                        log.debug(\"No derived attribute found for schema \"\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"No derived attribute found for schema \"\n                                 + derivedSchema.getName());\n                     }\n                 } else {\n@@ -349,8 +349,8 @@ protected ResourceOperations fill(\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About derived attributes to be removed:\\n\"\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About derived attributes to be removed:\\n\"\n                     + resourceOperations);\n         }\n \n@@ -375,8 +375,8 @@ protected ResourceOperations fill(\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About derived attributes to be added:\\n\"\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About derived attributes to be added:\\n\"\n                     + resourceOperations);\n         }\n \n@@ -401,8 +401,8 @@ protected ResourceOperations fill(\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About resources to be removed:\\n\" + resourceOperations);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About resources to be removed:\\n\" + resourceOperations);\n         }\n \n         // 6. resources to be added\n@@ -425,8 +425,8 @@ protected ResourceOperations fill(\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"About resources to be added:\\n\" + resourceOperations);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"About resources to be added:\\n\" + resourceOperations);\n         }\n \n         // Throw composite exception if there is at least one element set\n@@ -578,7 +578,7 @@ public void checkUniqueness(AbstractAttributable attributable)\n                         && attributeValueDAO.nonUniqueAttributeValue(\n                         attributeValue)) {\n \n-                    log.error(\"Unique value schema \"\n+                    LOG.error(\"Unique value schema \"\n                             + attribute.getSchema().getName()\n                             + \" with no unique value: \"\n                             + attributeValue.getValueAsString());"},{"sha":"8302a55879e310cce3ebffef5482562c90bd1c25","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":59,"deletions":76,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -23,6 +23,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.ResourceTOs;\n import org.syncope.client.to.SchemaMappingTO;\n@@ -36,37 +37,29 @@\n import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.validation.MultiUniqueValueException;\n-import org.syncope.types.SchemaType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n+@Transactional(rollbackFor = {Throwable.class})\n public class ResourceDataBinder {\n \n-    private static final Logger log = LoggerFactory.getLogger(\n+    private static final Logger LOG = LoggerFactory.getLogger(\n             ResourceDataBinder.class);\n-\n     private static final String[] ignoreMappingProperties = {\n         \"id\", \"resource\"};\n-\n+    @Autowired\n     private SchemaDAO schemaDAO;\n-\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n-\n     @Autowired\n-    public ResourceDataBinder(\n-            SchemaDAO schemaDAO, ConnectorInstanceDAO connectorInstanceDAO) {\n-\n-        this.schemaDAO = schemaDAO;\n-        this.connectorInstanceDAO = connectorInstanceDAO;\n-    }\n+    private ConnectorInstanceDAO connectorInstanceDAO;\n \n     public TargetResource getResource(ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n         return getResource(new TargetResource(), resourceTO);\n     }\n \n-    public TargetResource getResource(TargetResource resource, ResourceTO resourceTO)\n+    public TargetResource getResource(TargetResource resource,\n+            ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeClientCompositeErrorException compositeErrorException =\n@@ -77,7 +70,9 @@ public TargetResource getResource(TargetResource resource, ResourceTO resourceTO\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n-        if (resourceTO == null) return null;\n+        if (resourceTO == null) {\n+            return null;\n+        }\n \n         if (resourceTO.getName() == null) {\n             requiredValuesMissing.addElement(\"name\");\n@@ -110,16 +105,45 @@ public TargetResource getResource(TargetResource resource, ResourceTO resourceTO\n \n         resource.setForceMandatoryConstraint(\n                 resourceTO.isForceMandatoryConstraint());\n-        \n-        resource.setMappings(\n-                getSchemaMappings(resource, resourceTO.getMappings()));\n+\n+        List<SchemaMapping> mappings =\n+                getSchemaMappings(resource, resourceTO.getMappings());\n+\n+        for (SchemaMapping mapping : mappings) {\n+            mapping = schemaDAO.saveMapping(mapping);\n+            resource.addMapping(mapping);\n+\n+            try {\n+                mapping.getSchemaType().getSchemaClass().asSubclass(\n+                        AbstractSchema.class);\n+\n+                // search for the attribute schema\n+                AbstractSchema schema = schemaDAO.find(\n+                        mapping.getSchemaName(),\n+                        mapping.getSchemaType().getSchemaClass());\n+                if (schema != null) {\n+                    schema.addMapping(mapping);\n+                    schemaDAO.save(schema);\n+                }\n+            } catch (ClassCastException e) {\n+                // no real schema provided\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Wrong schema type \"\n+                            + mapping.getSchemaType().getClassName());\n+                }\n+            } catch (MultiUniqueValueException mve) {\n+                LOG.error(\"Error during schema persistence\", mve);\n+            }\n+        }\n \n         return resource;\n     }\n \n     public ResourceTOs getResourceTOs(Collection<TargetResource> resources) {\n \n-        if (resources == null) return null;\n+        if (resources == null) {\n+            return null;\n+        }\n \n         ResourceTOs resourceTOs = new ResourceTOs();\n \n@@ -132,7 +156,9 @@ public ResourceTOs getResourceTOs(Collection<TargetResource> resources) {\n \n     public ResourceTO getResourceTO(TargetResource resource) {\n \n-        if (resource == null) return null;\n+        if (resource == null) {\n+            return null;\n+        }\n \n         ResourceTO resourceTO = new ResourceTO();\n \n@@ -158,20 +184,19 @@ public List<SchemaMapping> getSchemaMappings(\n             TargetResource resource,\n             SchemaMappingTOs mappings) {\n \n-        if (mappings == null) return null;\n+        if (mappings == null) {\n+            return null;\n+        }\n \n         List<SchemaMapping> schemaMappings = new ArrayList<SchemaMapping>();\n-\n         for (SchemaMappingTO mapping : mappings) {\n-\n             schemaMappings.add(getSchemaMapping(resource, mapping));\n-\n         }\n \n         return schemaMappings;\n     }\n \n-    public SchemaMapping getSchemaMapping(\n+    private SchemaMapping getSchemaMapping(\n             TargetResource resource,\n             SchemaMappingTO mapping)\n             throws SyncopeClientCompositeErrorException {\n@@ -185,9 +210,7 @@ public SchemaMapping getSchemaMapping(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n         if (mapping == null) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Provided null mapping\");\n-            }\n+            LOG.error(\"Provided null mapping\");\n \n             return null;\n         }\n@@ -226,68 +249,30 @@ public SchemaMapping getSchemaMapping(\n \n         schemaMapping.setResource(resource);\n \n-        if (log.isInfoEnabled()) {\n-            log.info(\"Save mapping \" + mapping);\n-        }\n-\n-        schemaDAO.saveMapping(schemaMapping);\n-\n-        SchemaType schemaType = mapping.getSchemaType();\n-\n-        try {\n-            schemaType.getSchemaType().asSubclass(AbstractSchema.class);\n-\n-\n-            // search for the attribute schema\n-            AbstractSchema schema = schemaDAO.find(\n-                    mapping.getSchemaName(),\n-                    mapping.getSchemaType().getSchemaType());\n-\n-            if (schema != null)\n-                schema.addMapping(schemaMapping);\n-\n-\n-            if (log.isInfoEnabled()) {\n-                log.info(\"Merge schema \" + schema);\n-            }\n-\n-            schemaDAO.save(schema);\n-\n-        } catch (ClassCastException e) {\n-            // no real schema provided\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Wrong schema type \" + schemaType.getClassName());\n-            }\n-        } catch (MultiUniqueValueException e) {\n-            log.error(\"Error during schema persistence\", e);\n-        }\n-\n         return schemaMapping;\n     }\n \n     public SchemaMappingTOs getSchemaMappingTOs(\n             Collection<SchemaMapping> mappings) {\n \n         if (mappings == null) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"No mapping provided.\");\n-            }\n+            LOG.error(\"No mapping provided.\");\n \n             return null;\n         }\n \n         SchemaMappingTOs schemaMappingTOs = new SchemaMappingTOs();\n \n         for (SchemaMapping mapping : mappings) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Ask for \" + mapping + \" TO\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Ask for \" + mapping + \" TO\");\n             }\n \n             schemaMappingTOs.addMapping(getSchemaMappingTO(mapping));\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Collected TOs \" + schemaMappingTOs.getMappings());\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Collected TOs \" + schemaMappingTOs.getMappings());\n         }\n \n         return schemaMappingTOs;\n@@ -296,9 +281,7 @@ public SchemaMappingTOs getSchemaMappingTOs(\n     public SchemaMappingTO getSchemaMappingTO(\n             SchemaMapping schemaMapping) {\n         if (schemaMapping == null) {\n-            if (log.isErrorEnabled()) {\n-                log.error(\"Provided null mapping\");\n-            }\n+            LOG.error(\"Provided null mapping\");\n \n             return null;\n         }\n@@ -310,8 +293,8 @@ public SchemaMappingTO getSchemaMappingTO(\n \n         schemaMappingTO.setId(schemaMapping.getId());\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Obtained TO \" + schemaMappingTO);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Obtained TO \" + schemaMappingTO);\n         }\n \n         return schemaMappingTO;"},{"sha":"f3bf3ff2a23a6da7d5c3b7470f471ed65f4c68c0","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -45,7 +45,7 @@ public SyncopeRole create(RoleTO roleTO)\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidRoles);\n         if (roleTO.getName() == null) {\n-            log.error(\"No name specified for this role\");\n+            LOG.error(\"No name specified for this role\");\n \n             invalidRoles.addElement(\"No name specified for this role\");\n         } else {\n@@ -54,7 +54,7 @@ public SyncopeRole create(RoleTO roleTO)\n         Long parentRoleId = null;\n         SyncopeRole parentRole = syncopeRoleDAO.find(roleTO.getParent());\n         if (parentRole == null) {\n-            log.error(\"Could not find role with id \" + roleTO.getParent());\n+            LOG.error(\"Could not find role with id \" + roleTO.getParent());\n \n             invalidRoles.addElement(String.valueOf(roleTO.getParent()));\n             scce.addException(invalidRoles);\n@@ -66,7 +66,7 @@ public SyncopeRole create(RoleTO roleTO)\n         SyncopeRole otherRole = syncopeRoleDAO.find(\n                 roleTO.getName(), parentRoleId);\n         if (otherRole != null) {\n-            log.error(\"Another role exists with the same name \"\n+            LOG.error(\"Another role exists with the same name \"\n                     + \"and the same parent role: \" + otherRole);\n \n             invalidRoles.addElement(roleTO.getName());\n@@ -94,7 +94,7 @@ public ResourceOperations update(SyncopeRole role, RoleMod roleMod)\n                     roleMod.getName(), role.getParent().getId());\n \n             if (otherRole != null) {\n-                log.error(\"Another role exists with the same name \"\n+                LOG.error(\"Another role exists with the same name \"\n                         + \"and the same parent role: \" + otherRole);\n \n                 invalidRoles.addElement(roleMod.getName());"},{"sha":"9683f8422a354ffe23287e42dc49b592e994438d","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -60,7 +60,7 @@ public SyncopeUser create(UserTO userTO)\n         } else {\n             user = syncopeUserDAO.find(userTO.getId());\n             if (user == null) {\n-                log.error(\"Could not find user '\" + userTO.getId() + \"'\");\n+                LOG.error(\"Could not find user '\" + userTO.getId() + \"'\");\n \n                 throw new NotFoundException(String.valueOf(userTO.getId()));\n             }\n@@ -78,7 +78,7 @@ public SyncopeUser create(UserTO userTO)\n         if (userTO.getPassword() == null ||\n                 userTO.getPassword().length() == 0) {\n \n-            log.error(\"No password provided\");\n+            LOG.error(\"No password provided\");\n \n             invalidPassword.addElement(\"Null password\");\n         } else {\n@@ -95,8 +95,8 @@ public SyncopeUser create(UserTO userTO)\n             role = syncopeRoleDAO.find(membershipTO.getRole());\n \n             if (role == null) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Ignoring invalid role \" +\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Ignoring invalid role \" +\n                             membershipTO.getRole());\n                 }\n             } else {\n@@ -152,15 +152,15 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n         for (Long membershipToBeRemovedId :\n                 userMod.getMembershipsToBeRemoved()) {\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Membership to be removed: \" +\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Membership to be removed: \" +\n                         membershipToBeRemovedId);\n             }\n \n             membership = membershipDAO.find(membershipToBeRemovedId);\n             if (membership == null) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\n                             \"Invalid membership id specified to be removed: \" +\n                             membershipToBeRemovedId);\n                 }\n@@ -189,15 +189,15 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n         for (MembershipMod membershipMod :\n                 userMod.getMembershipsToBeAdded()) {\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Membership to be added: role(\" +\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Membership to be added: role(\" +\n                         membershipMod.getRole() + \")\");\n             }\n \n             role = syncopeRoleDAO.find(membershipMod.getRole());\n             if (role == null) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Ignoring invalid role \" +\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Ignoring invalid role \" +\n                             membershipMod.getRole());\n                 }\n             } else {\n@@ -236,10 +236,10 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n             if (currentSteps != null && !currentSteps.isEmpty()) {\n                 status = currentSteps.iterator().next().getStatus();\n             } else {\n-                log.error(\"Could not find status information for \" + user);\n+                LOG.error(\"Could not find status information for \" + user);\n             }\n         } catch (EntityNotFoundException e) {\n-            log.error(\"Could not find workflow entry with id \" +\n+            LOG.error(\"Could not find workflow entry with id \" +\n                     user.getWorkflowId());\n         }\n         userTO.setStatus(status);"},{"sha":"1aa0d3b56c8f5d4818da457bd9f72abe2344def3","filename":"core/src/test/java/org/syncope/core/test/persistence/AbstractTest.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -20,7 +20,6 @@\n import java.sql.ResultSetMetaData;\n import java.sql.SQLException;\n import java.sql.Statement;\n-import javax.persistence.EntityManager;\n import javax.sql.DataSource;\n import org.dbunit.database.DatabaseConfig;\n import org.dbunit.database.DatabaseConnection;\n@@ -42,11 +41,9 @@\n @ContextConfiguration(locations = {\"classpath:persistenceContext.xml\"})\n public abstract class AbstractTest {\n \n-    protected static final Logger log = LoggerFactory.getLogger(\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractTest.class);\n     @Autowired\n-    protected EntityManager entityManager;\n-    @Autowired\n     private DataSource dataSource;\n     @Autowired\n     private DefaultDataTypeFactory dbUnitDataTypeFactory;\n@@ -61,19 +58,19 @@ private void logTableContent(Connection conn, String tableName)\n \n             rs = stmt.executeQuery(\"SELECT * FROM \" + tableName);\n             ResultSetMetaData metaData = rs.getMetaData();\n-            log.debug(\"Table: \" + tableName);\n+            LOG.debug(\"Table: \" + tableName);\n             StringBuilder row = new StringBuilder();\n             while (rs.next()) {\n                 for (int i = 0; i < metaData.getColumnCount(); i++) {\n                     row.append(metaData.getColumnLabel(i + 1)).append(\"=\").\n                             append(rs.getString(i + 1)).append(\" \");\n                 }\n \n-                log.debug(row.toString());\n+                LOG.debug(row.toString());\n                 row.delete(0, row.length());\n             }\n         } catch (SQLException sqle) {\n-            log.error(\"While dumping \" + tableName + \"content\", sqle);\n+            LOG.error(\"While dumping \" + tableName + \"content\", sqle);\n         } finally {\n             rs.close();\n             stmt.close();\n@@ -96,12 +93,12 @@ public void setUpTestDataWithinTransaction() throws Exception {\n         try {\n             DatabaseOperation.CLEAN_INSERT.execute(dbUnitConn, dataSet);\n         } catch (Throwable t) {\n-            log.error(\"While executing tests\", t);\n+            LOG.error(\"While executing tests\", t);\n         } finally {\n             DataSourceUtils.releaseConnection(conn, dataSource);\n         }\n \n-        if (log.isDebugEnabled()) {\n+        if (LOG.isDebugEnabled()) {\n             conn = DataSourceUtils.getConnection(dataSource);\n \n             DatabaseMetaData dbm = conn.getMetaData();"},{"sha":"f4052be45af0b7268a7aaf1d0657068efb1624dd","filename":"core/src/test/java/org/syncope/core/test/persistence/AttributeDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAttributeDAOTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -67,7 +67,7 @@ public final void save() throws ClassNotFoundException {\n             attribute.addValue(\"mario.rossi@gmail.com\",\n                     new UserAttributeValue());\n         } catch (ValidationException e) {\n-            log.error(\"Unexpected exception\", e);\n+            LOG.error(\"Unexpected exception\", e);\n             thrown = e;\n         }\n         assertNull(\"no validation exception expected here \", thrown);"},{"sha":"eca4ff62f340b102ca6f9aef7f7b6d777ee1653e","filename":"core/src/test/java/org/syncope/core/test/persistence/SchemaDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -69,7 +69,7 @@ public final void save() {\n         try {\n             schemaDAO.save(attributeSchema);\n         } catch (MultiUniqueValueException e) {\n-            log.error(\"Unexpected exception\", e);\n+            LOG.error(\"Unexpected exception\", e);\n         }\n \n         UserSchema actual = schemaDAO.find(\"secondaryEmail\", UserSchema.class);"},{"sha":"d8927d524b0543bf82b4c1b3c9e2b55f1fc0d568","filename":"core/src/test/java/org/syncope/core/test/persistence/SchemaMappingDAOTest.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -44,16 +44,16 @@ public class SchemaMappingDAOTest extends AbstractTest {\n     public final void checkBeforeForStoredData() {\n         List<SchemaMapping> mappings = schemaDAO.findAllMappings();\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Found \" + mappings);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Found \" + mappings);\n         }\n \n         assertNotNull(mappings);\n         assertFalse(mappings.isEmpty());\n \n         for (SchemaMapping mapping : mappings) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Check for schema mapping \" + mapping);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Check for schema mapping \" + mapping);\n             }\n \n             String name = mapping.getSchemaName();\n@@ -65,8 +65,8 @@ public final void checkBeforeForStoredData() {\n             TargetResource resource = mapping.getResource();\n             assertNotNull(resource);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\n                         \"\\nRelated schema name: \" + name +\n                         \"\\nRelated schema type: \" + type.toString() +\n                         \"\\nRelated resource name: \" + resource.getName() +\n@@ -77,22 +77,22 @@ public final void checkBeforeForStoredData() {\n \n             schema = schemaDAO.find(name, UserSchema.class);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Brothers in UserSchema: \" +\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Brothers in UserSchema: \" +\n                         (schema != null ? ((UserSchema)schema).getMappings() : \"\"));\n             }\n \n             schema = schemaDAO.find(name, RoleSchema.class);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Brothers in RoleSchema: \" +\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Brothers in RoleSchema: \" +\n                         (schema != null ? ((RoleSchema)schema).getMappings() : \"\"));\n             }\n \n             schema = schemaDAO.find(name, MembershipSchema.class);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Brothers in MembershipSchema: \" +\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Brothers in MembershipSchema: \" +\n                         (schema != null ? ((MembershipSchema)schema).getMappings() : \"\"));\n             }\n         }"},{"sha":"2fd5567b20bcf8f6a001e47d10ea9f819d622541","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/PropagationManagerTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -56,7 +56,7 @@ public final void create() {\n         try {\n             provisioned = propagationManager.create(user);\n         } catch (PropagationException e) {\n-            log.error(\"While provisioning\", e);\n+            LOG.error(\"While provisioning\", e);\n         }\n \n         assertNotNull(provisioned);\n@@ -80,7 +80,7 @@ public final void update() {\n             provisioned = propagationManager.update(\n                     user, resourceOperations, null);\n         } catch (PropagationException e) {\n-            log.error(\"While updating\", e);\n+            LOG.error(\"While updating\", e);\n         }\n \n         assertNotNull(provisioned);"},{"sha":"3ee7a934794ac45e2605ec0193c0184d1e49f1e2","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/ResourceTest.java","status":"modified","additions":40,"deletions":5,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -25,6 +25,9 @@\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.to.SchemaMappingTO;\n+import org.syncope.client.to.SchemaMappingTOs;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n@@ -34,6 +37,7 @@\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n+import org.syncope.core.rest.data.ResourceDataBinder;\n import org.syncope.core.test.persistence.AbstractTest;\n import org.syncope.types.SchemaType;\n \n@@ -42,15 +46,45 @@ public class ResourceTest extends AbstractTest {\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n-\n     @Autowired\n     private SchemaDAO schemaDAO;\n-\n     @Autowired\n     private ConnectorInstanceDAO connectorInstanceDAO;\n-\n     @Autowired\n     private SyncopeUserDAO syncopeUserDAO;\n+    @Autowired\n+    private ResourceDataBinder resourceDataBinder;\n+\n+    /**\n+     * @see http://code.google.com/p/syncope/issues/detail?id=42\n+     */\n+    @Test\n+    public final void issue42() {\n+        SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n+        schemaMappingTO.setSchemaName(\"userId\");\n+        schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n+        schemaMappingTO.setField(\"campo1\");\n+        schemaMappingTO.setAccountid(true);\n+        schemaMappingTO.setPassword(false);\n+        schemaMappingTO.setNullable(false);\n+\n+        SchemaMappingTOs schemaMappingTOs = new SchemaMappingTOs();\n+        schemaMappingTOs.addMapping(schemaMappingTO);\n+\n+        ResourceTO resourceTO = new ResourceTO();\n+        resourceTO.setName(\"resource-issue42\");\n+        resourceTO.setConnectorId(100L);\n+        resourceTO.setMappings(schemaMappingTOs);\n+        resourceTO.setForceMandatoryConstraint(true);\n+\n+        TargetResource resource = resourceDataBinder.getResource(resourceTO);\n+\n+        resourceDAO.flush();\n+\n+        TargetResource actual = resourceDAO.find(\"resource-issue42\");\n+\n+        assertEquals(resource, actual);\n+    }\n \n     @Test\n     public final void save() throws ClassNotFoundException {\n@@ -82,6 +116,8 @@ public final void save() throws ClassNotFoundException {\n             mapping.setSchemaType(SchemaType.UserSchema);\n \n             mapping.setResource(resource);\n+            \n+            mapping = schemaDAO.saveMapping(mapping);\n             resource.addMapping(mapping);\n \n             mappings.add(mapping);\n@@ -126,8 +162,7 @@ public final void save() throws ClassNotFoundException {\n         List<SchemaMapping> schemaMappings = resource.getMappings();\n \n         assertNotNull(schemaMappings);\n-\n-        assertTrue(schemaMappings.size() == 3);\n+        assertEquals(3,schemaMappings.size());\n     }\n \n     @Test"},{"sha":"a9bce3c172e6078c9c6cc6c1f1db8887ee4c16a0","filename":"core/src/test/java/org/syncope/core/test/rest/ResourceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8bdd9e49189c36d2099009ba954c1f6a53069fc1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java?ref=8bdd9e49189c36d2099009ba954c1f6a53069fc1","patch":"@@ -140,7 +140,7 @@ public void update() {\n \n         assertNotNull(mappings);\n \n-        assertTrue(mappings.getMappings().size() == 3);\n+        assertEquals(3, mappings.getMappings().size());\n     }\n \n     @Test"}]}