{"sha":"0b545de8de3acdd54951354639e4d55da73ac699","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiNTQ1ZGU4ZGUzYWNkZDU0OTUxMzU0NjM5ZTRkNTVkYTczYWM2OTk=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2021-07-27T08:32:45Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2021-07-27T08:34:54Z"},"message":"Incremental pull remediation improvements (#283)\n\n* do not stop on first error while pulling in incremental mode","tree":{"sha":"a37feda29d284809db3ffcfc02303081be966343","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a37feda29d284809db3ffcfc02303081be966343"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0b545de8de3acdd54951354639e4d55da73ac699","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b545de8de3acdd54951354639e4d55da73ac699","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b545de8de3acdd54951354639e4d55da73ac699","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b545de8de3acdd54951354639e4d55da73ac699/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"9c8a69cdda0314c1211c5f2bb63d40f2af993463","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c8a69cdda0314c1211c5f2bb63d40f2af993463","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c8a69cdda0314c1211c5f2bb63d40f2af993463"}],"stats":{"total":13,"additions":11,"deletions":2},"files":[{"sha":"67d245d18292bf9ff54876f45e874c216d3f7e24","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b545de8de3acdd54951354639e4d55da73ac699/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b545de8de3acdd54951354639e4d55da73ac699/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=0b545de8de3acdd54951354639e4d55da73ac699","patch":"@@ -250,9 +250,10 @@ protected List<ProvisioningReport> provision(\n                 result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                 LOG.error(\"Could not create {} {} \", provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                 output = e;\n-                resultStatus = Result.FAILURE;\n \n                 if (profile.getTask().isRemediation()) {\n+                    // set to SUCCESS to let the incremental flow go on in case of errors\n+                    resultStatus = Result.SUCCESS;\n                     Remediation entity = entityFactory.newEntity(Remediation.class);\n                     entity.setAnyType(provision.getAnyType());\n                     entity.setOperation(ResourceOperation.CREATE);\n@@ -265,6 +266,8 @@ protected List<ProvisioningReport> provision(\n                     }\n \n                     remediationDAO.save(entity);\n+                } else {\n+                    resultStatus = Result.FAILURE;\n                 }\n             }\n \n@@ -375,9 +378,11 @@ protected List<ProvisioningReport> update(\n                         LOG.error(\"Could not update {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n-                        resultStatus = Result.FAILURE;\n \n                         if (profile.getTask().isRemediation()) {\n+                            // set to SUCCESS to let the incremental flow go on in case of errors\n+                            resultStatus = Result.SUCCESS;\n+\n                             Remediation entity = entityFactory.newEntity(Remediation.class);\n                             entity.setAnyType(provision.getAnyType());\n                             entity.setOperation(ResourceOperation.UPDATE);\n@@ -388,6 +393,8 @@ protected List<ProvisioningReport> update(\n                             entity.setPullTask(profile.getTask());\n \n                             remediationDAO.save(entity);\n+                        } else {\n+                            resultStatus = Result.FAILURE;\n                         }\n                     }\n                 }\n@@ -680,6 +687,8 @@ protected List<ProvisioningReport> delete(\n                         output = e;\n \n                         if (profile.getTask().isRemediation()) {\n+                            // set to SUCCESS to let the incremental flow go on in case of errors\n+                            resultStatus = Result.SUCCESS;\n                             Remediation entity = entityFactory.newEntity(Remediation.class);\n                             entity.setAnyType(provision.getAnyType());\n                             entity.setOperation(ResourceOperation.DELETE);"}]}