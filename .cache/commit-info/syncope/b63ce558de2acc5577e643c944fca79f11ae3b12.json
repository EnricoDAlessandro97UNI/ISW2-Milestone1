{"sha":"b63ce558de2acc5577e643c944fca79f11ae3b12","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI2M2NlNTU4ZGUyYWNjNTU3N2U2NDNjOTQ0ZmNhNzlmMTFhZTNiMTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-09T15:57:14Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-09T15:57:14Z"},"message":"[SYNCOPE-474] Allowing self-read via username (even with roles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1556848 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"893437f6fd382001ae3a2d3d8f96b526b1111061","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/893437f6fd382001ae3a2d3d8f96b526b1111061"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b63ce558de2acc5577e643c944fca79f11ae3b12","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b63ce558de2acc5577e643c944fca79f11ae3b12","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b63ce558de2acc5577e643c944fca79f11ae3b12","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b63ce558de2acc5577e643c944fca79f11ae3b12/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"907983e586194622e921dbf9d24f70ce07cc8dda","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/907983e586194622e921dbf9d24f70ce07cc8dda","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/907983e586194622e921dbf9d24f70ce07cc8dda"}],"stats":{"total":59,"additions":29,"deletions":30},"files":[{"sha":"a02352f883cb3704dfee0c8a0b5f5bf7fdfbc362","filename":"console/src/main/java/org/apache/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b63ce558de2acc5577e643c944fca79f11ae3b12/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b63ce558de2acc5577e643c944fca79f11ae3b12/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=b63ce558de2acc5577e643c944fca79f11ae3b12","patch":"@@ -47,7 +47,7 @@ public class UserRequestModalPage extends UserModalPage {\n     public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO,\n             final Mode mode) {\n \n-        super(callerPageRef, window, userTO, mode, false);\n+        super(callerPageRef, window, userTO, mode, true);\n \n         setupEditPanel();\n     }"},{"sha":"eb81dcabf20e9dd27f425e214d6e308dabe1c66e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b63ce558de2acc5577e643c944fca79f11ae3b12/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b63ce558de2acc5577e643c944fca79f11ae3b12/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=b63ce558de2acc5577e643c944fca79f11ae3b12","patch":"@@ -113,7 +113,6 @@ public UserDetailsPanel(final String id, final UserTO userTO, final Form form, f\n \n             @Override\n             public void onComponentTag(final Component component, final ComponentTag tag) {\n-\n                 if (userTO.getId() > 0) {\n                     tag.put(\"style\", \"display:none;\");\n                 }"},{"sha":"00b8c674dfb64d657a07f08dadf74068f47fc4d3","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":28,"deletions":28,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b63ce558de2acc5577e643c944fca79f11ae3b12/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b63ce558de2acc5577e643c944fca79f11ae3b12/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=b63ce558de2acc5577e643c944fca79f11ae3b12","patch":"@@ -75,6 +75,15 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n+    private void checkPermissions(final SyncopeUser user) {\n+        Set<Long> roleIds = user.getRoleIds();\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+        roleIds.removeAll(adminRoleIds);\n+        if (!roleIds.isEmpty()) {\n+            throw new UnauthorizedRoleException(roleIds);\n+        }\n+    }\n+\n     @Transactional(readOnly = true)\n     public SyncopeUser getUserFromId(final Long userId) {\n         if (userId == null) {\n@@ -87,12 +96,25 @@ public SyncopeUser getUserFromId(final Long userId) {\n         }\n \n         if (!user.getUsername().equals(EntitlementUtil.getAuthenticatedUsername())) {\n-            Set<Long> roleIds = user.getRoleIds();\n-            Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-            roleIds.removeAll(adminRoleIds);\n-            if (!roleIds.isEmpty()) {\n-                throw new UnauthorizedRoleException(roleIds);\n-            }\n+            checkPermissions(user);\n+        }\n+\n+        return user;\n+    }\n+\n+    @Transactional(readOnly = true)\n+    public SyncopeUser getUserFromUsername(final String username) {\n+        if (username == null) {\n+            throw new NotFoundException(\"Null username\");\n+        }\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        if (!username.equals(EntitlementUtil.getAuthenticatedUsername())) {\n+            checkPermissions(user);\n         }\n \n         return user;\n@@ -125,28 +147,6 @@ public boolean verifyPassword(final SyncopeUser user, final String password) {\n         return PasswordEncoder.verify(password, user.getCipherAlgorithm(), user.getPassword());\n     }\n \n-    @Transactional(readOnly = true)\n-    public SyncopeUser getUserFromUsername(final String username) {\n-        if (username == null) {\n-            throw new NotFoundException(\"Null username\");\n-        }\n-\n-        SyncopeUser user = userDAO.find(username);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + username);\n-        }\n-\n-        Set<Long> roleIds = user.getRoleIds();\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n-        }\n-\n-        return user;\n-    }\n-\n     /**\n      * Get predefined password cipher algorithm from SyncopeConf.\n      *"}]}