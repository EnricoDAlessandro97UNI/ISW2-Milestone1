{"sha":"a4f351196912442cd54b2e4329d952cd9855ea34","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE0ZjM1MTE5NjkxMjQ0MmNkNTRiMmU0MzI5ZDk1MmNkOTg1NWVhMzQ=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-22T15:33:25Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-22T15:33:25Z"},"message":"[SYNCOPE-1117] - Add a \"DefaultCredentialChecker\" to log a warning if the default JWS key is being used","tree":{"sha":"1a0c1462d7df52db617b048ee612445b7844bf5f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1a0c1462d7df52db617b048ee612445b7844bf5f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a4f351196912442cd54b2e4329d952cd9855ea34","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a4f351196912442cd54b2e4329d952cd9855ea34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a4f351196912442cd54b2e4329d952cd9855ea34","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a4f351196912442cd54b2e4329d952cd9855ea34/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"24f3eebf53aed4c380d142a879ee4bc98d702d35","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24f3eebf53aed4c380d142a879ee4bc98d702d35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/24f3eebf53aed4c380d142a879ee4bc98d702d35"}],"stats":{"total":78,"additions":78,"deletions":0},"files":[{"sha":"13a5b93ba2cc7627c6ab5b56ba03cf435c7ff5d5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AccessTokenDataBinderImpl.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java?ref=a4f351196912442cd54b2e4329d952cd9855ea34","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.spring.BeanUtils;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.DefaultCredentialChecker;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -77,10 +78,15 @@ public class AccessTokenDataBinderImpl implements AccessTokenDataBinder {\n     @Autowired\n     private EntityFactory entityFactory;\n \n+    @Autowired\n+    private DefaultCredentialChecker credentialChecker;\n+\n     @Override\n     public Triple<String, String, Date> generateJWT(\n             final String subject, final int duration, final Map<String, Object> claims) {\n \n+        credentialChecker.checkIsDefaultJWSKeyInUse();\n+\n         Date now = new Date();\n         Date expiry = new Date(now.getTime() + 60L * 1000L * duration);\n \n@@ -156,6 +162,8 @@ public Pair<String, Date> create(\n     public Pair<String, Date> update(final AccessToken accessToken) {\n         JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(accessToken.getBody());\n \n+        credentialChecker.checkIsDefaultJWSKeyInUse();\n+\n         Date now = new Date();\n         int duration = confDAO.find(\"jwt.lifetime.minutes\", \"120\").getValues().get(0).getLongValue().intValue();\n         Date expiry = new Date(now.getTime() + 60L * 1000L * duration);"},{"sha":"53fb6d95ddbe7f2e0be435f99e656920649a5846","filename":"core/provisioning-java/src/test/resources/provisioningTest.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml?ref=a4f351196912442cd54b2e4329d952cd9855ea34","patch":"@@ -56,5 +56,9 @@ under the License.\n       <value type=\"org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm\">HS512</value>\n     </constructor-arg>\n   </bean>\n+  <bean id=\"credentialChecker\" class=\"org.apache.syncope.core.spring.security.DefaultCredentialChecker\">\n+      <constructor-arg value=\"${jwsKey}\" index=\"0\"/>\n+      <constructor-arg value=\"${adminPassword}\" index=\"1\"/>\n+  </bean>\n   \n </beans>"},{"sha":"3dc0ea0cc2ef790eb3077be30f7e5b32f03f1caa","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/DefaultCredentialChecker.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDefaultCredentialChecker.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDefaultCredentialChecker.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDefaultCredentialChecker.java?ref=a4f351196912442cd54b2e4329d952cd9855ea34","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.spring.security;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This class provides some methods to check whether default credentials are being used, and\n+ * logs a warning if they are.\n+ */\n+public class DefaultCredentialChecker {\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultCredentialChecker.class);\n+\n+    private static final String DEFAULT_JWS_KEY = \"ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f\";\n+    private static final String DEFAULT_ADMIN_PASSWORD = \"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\";\n+    private final boolean defaultAdminPasswordInUse;\n+    private final boolean defaultJwsKeyInUse;\n+\n+    public DefaultCredentialChecker(final String jwsKey, final String adminPassword) {\n+        defaultJwsKeyInUse = DEFAULT_JWS_KEY.equals(jwsKey);\n+        defaultAdminPasswordInUse = DEFAULT_ADMIN_PASSWORD.equals(adminPassword);\n+    }\n+\n+    public void checkIsDefaultJWSKeyInUse() {\n+        if (defaultJwsKeyInUse) {\n+            LOG.warn(\"The default jwsKey property is being used. \"\n+                     + \"This must be changed to avoid a security breach!\");\n+        }\n+    }\n+\n+    public void checkIsDefaultAdminPasswordInUse() {\n+        if (defaultAdminPasswordInUse) {\n+            LOG.warn(\"The default adminPassword property is being used. \"\n+                     + \"This must be changed to avoid a security breach!\");\n+        }\n+    }\n+\n+}"},{"sha":"05b46f04a8ff42ed5c47a54ae5c74b72b2d78642","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationFilter.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationFilter.java?ref=a4f351196912442cd54b2e4329d952cd9855ea34","patch":"@@ -55,6 +55,9 @@ public class JWTAuthenticationFilter extends OncePerRequestFilter {\n     @Autowired\n     private JwsSignatureVerifier jwsSignatureVerifier;\n \n+    @Autowired\n+    private DefaultCredentialChecker credentialChecker;\n+\n     public void setAuthenticationEntryPoint(final AuthenticationEntryPoint authenticationEntryPoint) {\n         this.authenticationEntryPoint = authenticationEntryPoint;\n     }\n@@ -91,6 +94,8 @@ protected void doFilterInternal(\n \n         JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(stringToken);\n         try {\n+            credentialChecker.checkIsDefaultJWSKeyInUse();\n+\n             if (!consumer.verifySignatureWith(jwsSignatureVerifier)) {\n                 throw new BadCredentialsException(\"Invalid signature found in JWT\");\n             }"},{"sha":"c9016fa2431ef42313dd938c5133f5b0aec8df05","filename":"core/spring/src/main/resources/securityContext.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4f351196912442cd54b2e4329d952cd9855ea34/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=a4f351196912442cd54b2e4329d952cd9855ea34","patch":"@@ -48,6 +48,12 @@ under the License.\n   <bean id=\"jwsKey\" class=\"java.lang.String\">\n     <constructor-arg value=\"${jwsKey}\"/>\n   </bean>\n+\n+  <bean id=\"credentialChecker\" class=\"org.apache.syncope.core.spring.security.DefaultCredentialChecker\">\n+      <constructor-arg value=\"${jwsKey}\" index=\"0\"/>\n+      <constructor-arg value=\"${adminPassword}\" index=\"1\"/>\n+  </bean>\n+\n   <bean id=\"jwsSignatureVerifier\" class=\"org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureVerifier\">\n     <constructor-arg value=\"#{jwsKey.getBytes()}\" index=\"0\"/>\n     <constructor-arg index=\"1\">"}]}