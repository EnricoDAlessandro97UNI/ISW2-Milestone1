{"sha":"02d62e07e558ca921b095f77335534b6000964f7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAyZDYyZTA3ZTU1OGNhOTIxYjA5NWY3NzMzNTUzNGI2MDAwOTY0Zjc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-08-01T13:50:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-08-01T13:50:28Z"},"message":"Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1367996 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2602ce842246a6fd322c0d91587bccfd8830b00a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2602ce842246a6fd322c0d91587bccfd8830b00a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/02d62e07e558ca921b095f77335534b6000964f7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02d62e07e558ca921b095f77335534b6000964f7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/02d62e07e558ca921b095f77335534b6000964f7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02d62e07e558ca921b095f77335534b6000964f7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7643c685777069765ed7e7baf006dbb817fb1d20","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7643c685777069765ed7e7baf006dbb817fb1d20","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7643c685777069765ed7e7baf006dbb817fb1d20"}],"stats":{"total":74,"additions":38,"deletions":36},"files":[{"sha":"2feb9ae20aa0ee1e72f61f3314efc606d3f95832","filename":"core/src/main/java/org/apache/syncope/core/scheduling/DefaultSyncJobActions.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FDefaultSyncJobActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FDefaultSyncJobActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FDefaultSyncJobActions.java?ref=02d62e07e558ca921b095f77335534b6000964f7","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.core.scheduling;\n \n import java.util.List;\n-import org.identityconnectors.framework.common.objects.SyncDelta;\n-import org.quartz.JobExecutionException;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.quartz.JobExecutionException;\n \n /**\n  * Default (empty) implementation of SyncJobActions.\n@@ -53,9 +53,8 @@ public SyncDelta beforeDelete(final SyncDelta delta, final UserTO user) throws J\n     }\n \n     @Override\n-    public SyncDelta after(final SyncDelta delta, final UserTO user, final SyncResult result)\n+    public void after(final SyncDelta delta, final UserTO user, final SyncResult result)\n             throws JobExecutionException {\n-        return delta;\n     }\n \n     @Override"},{"sha":"91c01af9454b434b3dca84f0110ec98ff8b7baa8","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SyncJob.java","status":"modified","additions":25,"deletions":26,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=02d62e07e558ca921b095f77335534b6000964f7","patch":"@@ -24,21 +24,6 @@\n import java.util.List;\n import java.util.Map;\n import javassist.NotFoundException;\n-import org.identityconnectors.framework.common.objects.Attribute;\n-import org.identityconnectors.framework.common.objects.AttributeUtil;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-import org.identityconnectors.framework.common.objects.SyncDelta;\n-import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n-import org.quartz.JobExecutionException;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n-import org.springframework.security.core.GrantedAuthority;\n-import org.springframework.security.core.authority.SimpleGrantedAuthority;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.core.userdetails.User;\n-import org.springframework.security.core.userdetails.UserDetails;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.search.AttributeCond;\n import org.apache.syncope.client.search.NodeCond;\n@@ -74,6 +59,21 @@\n import org.apache.syncope.types.ConflictResolutionAction;\n import org.apache.syncope.types.SyncPolicySpec;\n import org.apache.syncope.types.TraceLevel;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeUtil;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.quartz.JobExecutionException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n \n /**\n  * Job for executing synchronization tasks.\n@@ -352,7 +352,7 @@ private SyncResult createUser(SyncDelta delta, final boolean dryRun) throws JobE\n             }\n         }\n \n-        delta = actions.after(delta, userTO, result);\n+        actions.after(delta, userTO, result);\n \n         return result;\n     }\n@@ -405,7 +405,7 @@ private void updateUsers(SyncDelta delta, final List<Long> users, final boolean\n                     LOG.error(\"Could not update user \" + delta.getUid().getUidValue(), e);\n                 }\n \n-                delta = actions.after(delta, userTO, result);\n+                actions.after(delta, userTO, result);\n                 results.add(result);\n             } catch (NotFoundException e) {\n                 LOG.error(\"Could not find user {}\", userId, e);\n@@ -457,7 +457,7 @@ private void deleteUsers(SyncDelta delta, final List<Long> users, final boolean\n                     }\n                 }\n \n-                delta = actions.after(delta, userTO, result);\n+                actions.after(delta, userTO, result);\n                 results.add(result);\n             } catch (NotFoundException e) {\n                 LOG.error(\"Could not find user {}\", userId, e);\n@@ -642,9 +642,8 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n                     @Override\n                     public boolean handle(final SyncDelta delta) {\n                         try {\n-\n-                            return results.addAll(handleDelta(syncTask, delta, conflictResolutionAction, dryRun));\n-\n+                            results.addAll(handleDelta(syncTask, delta, conflictResolutionAction, dryRun));\n+                            return true;\n                         } catch (JobExecutionException e) {\n                             LOG.error(\"Reconciliation failed\", e);\n                             return false;\n@@ -658,8 +657,8 @@ public boolean handle(final SyncDelta delta) {\n                     public boolean handle(final SyncDelta delta) {\n                         try {\n \n-                            return results.addAll(handleDelta(syncTask, delta, conflictResolutionAction, dryRun));\n-\n+                            results.addAll(handleDelta(syncTask, delta, conflictResolutionAction, dryRun));\n+                            return true;\n                         } catch (JobExecutionException e) {\n                             LOG.error(\"Synchronization failed\", e);\n                             return false;\n@@ -707,12 +706,12 @@ protected final List<SyncResult> handleDelta(final SyncTask syncTask, final Sync\n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n         LOG.debug(\"Process '{}' for '{}'\", delta.getDeltaType(), delta.getUid().getUidValue());\n-\n+        \n         final List<Long> users = findExistingUsers(delta);\n-\n+        \n         switch (delta.getDeltaType()) {\n             case CREATE_OR_UPDATE:\n-                if (users.isEmpty()) {\n+                if (users.isEmpty()) { \n                     if (syncTask.isPerformCreate()) {\n                         results.add(createUser(delta, dryRun));\n                     } else {"},{"sha":"8e5e5cd3c875d4866f0edea13e57766926b6ae7b","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SyncJobActions.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJobActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJobActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJobActions.java?ref=02d62e07e558ca921b095f77335534b6000964f7","patch":"@@ -19,11 +19,11 @@\n package org.apache.syncope.core.scheduling;\n \n import java.util.List;\n-import org.identityconnectors.framework.common.objects.SyncDelta;\n-import org.quartz.JobExecutionException;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.quartz.JobExecutionException;\n \n /**\n  * Interface for actions to be performed during SyncJob execution.\n@@ -41,7 +41,7 @@ public interface SyncJobActions {\n     /**\n      * Action to be executed before to create a synchronized user locally.\n      *\n-     * @param delta rerieved synchronization information.\n+     * @param delta retrieved synchronization information.\n      * @param user user to be created.\n      * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure.\n@@ -74,12 +74,11 @@ SyncDelta beforeUpdate(final SyncDelta delta, final UserTO user, final UserMod u\n      * Action to be executed after each local user synchronization.\n      *\n      * @param delta retrieved synchronization information (may be modified by 'beforeCreate/beforeUpdate/beforeDelete').\n-     * @param user synchronizad local user.\n+     * @param user synchronized local user.\n      * @param result global synchronization results at the current synchronization step.\n-     * @return synchronization information.\n      * @throws JobExecutionException in case of generic failure.\n      */\n-    SyncDelta after(final SyncDelta delta, final UserTO user, final SyncResult result) throws JobExecutionException;\n+    void after(final SyncDelta delta, final UserTO user, final SyncResult result) throws JobExecutionException;\n \n     /**\n      * Action to be executed after the synchronization task completion."},{"sha":"fc516f0f1c60289223314c9caf4e5f87edd4aa9e","filename":"core/src/main/resources/logback.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02d62e07e558ca921b095f77335534b6000964f7/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=02d62e07e558ca921b095f77335534b6000964f7","patch":"@@ -101,6 +101,11 @@ under the License.\n     <appender-ref ref=\"main\"/>\n   </logger>\n \n+  <logger name=\"org.apache.syncope.core.scheduling\" additivity=\"false\">\n+    <level value=\"INFO\"/>\n+    <appender-ref ref=\"main\"/>\n+  </logger>\n+  \n   <logger name=\"org.apache.syncope.core.rest\" additivity=\"false\">\n     <level value=\"INFO\"/>\n     <appender-ref ref=\"rest\"/>"}]}