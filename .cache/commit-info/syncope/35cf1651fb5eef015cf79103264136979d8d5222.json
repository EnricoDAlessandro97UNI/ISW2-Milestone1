{"sha":"35cf1651fb5eef015cf79103264136979d8d5222","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM1Y2YxNjUxZmI1ZWVmMDE1Y2Y3OTEwMzI2NDEzNjk3OWQ4ZDUyMjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-23T12:17:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-23T12:54:53Z"},"message":"[SYNCOPE-1508] PushActions","tree":{"sha":"565ad77fa2c6862f1e417a2a3d33bf07365d42e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/565ad77fa2c6862f1e417a2a3d33bf07365d42e4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/35cf1651fb5eef015cf79103264136979d8d5222","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/35cf1651fb5eef015cf79103264136979d8d5222","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/35cf1651fb5eef015cf79103264136979d8d5222","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/35cf1651fb5eef015cf79103264136979d8d5222/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"62d1b00618d252c7a073daef2613e6b30a23a0af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62d1b00618d252c7a073daef2613e6b30a23a0af","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/62d1b00618d252c7a073daef2613e6b30a23a0af"}],"stats":{"total":69,"additions":47,"deletions":22},"files":[{"sha":"6661345c8f7333a1cf9547b4a9f95f979ea89486","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -149,7 +149,7 @@ public List<MembershipTO> execute(final String filter) {\n                             : groupRestClient.search(\n                                     anyTO.getRealm(),\n                                     SyncopeClient.getGroupSearchConditionBuilder().\n-                                            isAssignable().and().is(\"name\").equalTo(filter).query(),\n+                                            isAssignable().and().is(\"name\").equalToIgnoreCase(filter).query(),\n                                     1, Constants.MAX_GROUP_LIST_SIZE,\n                                     new SortParam<>(\"name\", true),\n                                     null)).stream().map(input -> new MembershipTO.Builder(input.getKey())"},{"sha":"e11a478d462a2c7160b0fe448b34c4c7389c4143","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullActions.groovy","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullActions.groovy?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -151,4 +151,4 @@ class MyPullActions implements PullActions {\n \n     return null;\n   }\n-}\n\\ No newline at end of file\n+}"},{"sha":"a73ce9934cfdc0e9e9e62b5a41d437e38fcc16b4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPushActions.groovy","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPushActions.groovy?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -18,6 +18,7 @@\n  * under the License.\n  */\n import groovy.transform.CompileStatic\n+import java.util.Set\n import org.apache.syncope.core.persistence.api.entity.Entity\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport\n@@ -27,6 +28,11 @@ import org.quartz.JobExecutionException\n @CompileStatic\n class MyPushActions implements PushActions {\n   \n+  @Override\n+  Set<String> moreAttrsToGet(ProvisioningProfile profile, Entity entity) {\n+    return Set.of();\n+  }\n+\n   @Override \n   Entity beforeAssign(\n     ProvisioningProfile profile,\n@@ -109,4 +115,4 @@ class MyPushActions implements PushActions {\n \n     // do nothing\n   }\n-}\n\\ No newline at end of file\n+}"},{"sha":"0697adaf6098d14800fe9eca67b9e290cd973fa6","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -257,7 +257,7 @@ public ReconStatus status(final ReconQuery query) {\n             status.setOnSyncope(getOnSyncope(any, connObjectKeyItem, provision));\n \n             List<ConnectorObject> connObjs = outboundMatcher.match(\n-                    connFactory.getConnector(provision.getResource()), any, provision);\n+                    connFactory.getConnector(provision.getResource()), any, provision, Optional.empty());\n             if (!connObjs.isEmpty()) {\n                 status.setOnResource(ConnObjectUtils.getConnObjectTO(connObjs.get(0).getAttributes()));\n "},{"sha":"08d3df0366bb2d985ab1f1d21fab4c131102faad","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -323,7 +323,7 @@ public ConnObjectTO readConnObjectByAnyKey(\n \n         // 2. find on resource\n         List<ConnectorObject> connObjs = outboundMatcher.match(\n-                connFactory.getConnector(provision.getResource()), any, provision);\n+                connFactory.getConnector(provision.getResource()), any, provision, Optional.empty());\n         if (connObjs.isEmpty()) {\n             throw new NotFoundException(\n                     \"Object \" + any + \" with class \" + provision.getObjectClass()"},{"sha":"aed56efe60535e6415d188047ca4a64b2585a1a5","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PushActions.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n+import java.util.Collections;\n+import java.util.Set;\n import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.quartz.JobExecutionException;\n@@ -28,6 +30,17 @@\n  */\n public interface PushActions extends ProvisioningActions {\n \n+    /**\n+     * Return additional attributes to include in the result from the underlying connector.\n+     *\n+     * @param profile profile of the pull being executed.\n+     * @param entity entity\n+     * @return additional attributes to include in the result from the underlying connector\n+     */\n+    default Set<String> moreAttrsToGet(ProvisioningProfile<?, ?> profile, Entity entity) {\n+        return Collections.emptySet();\n+    }\n+\n     /**\n      * Action to be executed before to assign (link &amp; provision) a pushed entity to the resource.\n      *"},{"sha":"9ac22f266642d7be10a6fe792edcf0dcf22cb518","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -22,6 +22,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Stream;\n import org.apache.syncope.core.persistence.api.dao.AllowedSchemas;\n@@ -121,6 +122,7 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n                     connFactory.getConnector(provision.getResource()),\n                     any,\n                     provision,\n+                    Optional.empty(),\n                     schemasToRead.stream().map(VirSchema::asLinkingMappingItem).toArray(LinkingMappingItem[]::new)).\n                     forEach(connObj -> schemasToRead.forEach(schema -> {\n "},{"sha":"a0105be56a47e74da06651afda3448aa7b9ca754","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -20,9 +20,11 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n@@ -255,7 +257,10 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n                 any.getType().getKind(), any.getKey(), profile.getTask().getResource());\n \n         // Try to read remote object BEFORE any actual operation\n-        List<ConnectorObject> connObjs = outboundMatcher.match(profile.getConnector(), any, provision);\n+        Set<String> moreAttrsToGet = new HashSet<>();\n+        profile.getActions().forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, provision)));\n+        List<ConnectorObject> connObjs = outboundMatcher.match(\n+                profile.getConnector(), any, provision, Optional.of(moreAttrsToGet.toArray(new String[0])));\n         LOG.debug(\"Match(es) found for {} as {}: {}\", any, provision.getObjectClass(), connObjs);\n \n         if (connObjs.size() > 1) {\n@@ -448,7 +453,8 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n \n                 if (notificationsAvailable || auditRequested) {\n                     resultStatus = AuditElements.Result.SUCCESS;\n-                    output = outboundMatcher.match(profile.getConnector(), any, provision);\n+                    output = outboundMatcher.match(\n+                            profile.getConnector(), any, provision, Optional.of(moreAttrsToGet.toArray(new String[0])));\n                 }\n             } catch (IgnoreProvisionException e) {\n                 throw e;"},{"sha":"f899bcdaff375cd90591bf79dbdc20e5d0e50087","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/OutboundMatcher.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FOutboundMatcher.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -119,16 +119,16 @@ public List<ConnectorObject> match(\n                         connector,\n                         rule.get().getFilter(any, provision),\n                         provision,\n-                        Optional.empty(),\n-                        Optional.of(moreAttrsToGet.toArray(new String[0]))));\n+                        Optional.of(moreAttrsToGet.toArray(new String[0])),\n+                        Optional.empty()));\n             } else {\n                 MappingUtils.getConnObjectKeyItem(provision).ifPresent(connObjectKeyItem -> matchByConnObjectKeyValue(\n                         connector,\n                         connObjectKeyItem,\n                         connObjectKeyValue,\n                         provision,\n-                        Optional.empty(),\n-                        Optional.of(moreAttrsToGet.toArray(new String[0]))).\n+                        Optional.of(moreAttrsToGet.toArray(new String[0])),\n+                        Optional.empty()).\n                         ifPresent(result::add));\n             }\n         } catch (RuntimeException e) {\n@@ -147,6 +147,7 @@ public List<ConnectorObject> match(\n             final Connector connector,\n             final Any<?> any,\n             final Provision provision,\n+            final Optional<String[]> moreAttrsToGet,\n             final LinkingMappingItem... linkingItems) {\n \n         Optional<PushCorrelationRule> rule = rule(provision);\n@@ -158,9 +159,9 @@ public List<ConnectorObject> match(\n                         connector,\n                         rule.get().getFilter(any, provision),\n                         provision,\n+                        moreAttrsToGet,\n                         ArrayUtils.isEmpty(linkingItems)\n-                        ? Optional.empty() : Optional.of(List.of(linkingItems)),\n-                        Optional.empty()));\n+                        ? Optional.empty() : Optional.of(List.of(linkingItems))));\n             } else {\n                 Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n                 Optional<String> connObjectKeyValue = mappingManager.getConnObjectKeyValue(any, provision);\n@@ -171,9 +172,9 @@ public List<ConnectorObject> match(\n                             connObjectKeyItem.get(),\n                             connObjectKeyValue.get(),\n                             provision,\n+                            moreAttrsToGet,\n                             ArrayUtils.isEmpty(linkingItems)\n-                            ? Optional.empty() : Optional.of(List.of(linkingItems)),\n-                            Optional.empty()).\n+                            ? Optional.empty() : Optional.of(List.of(linkingItems))).\n                             ifPresent(result::add);\n                 }\n             }\n@@ -192,8 +193,8 @@ private List<ConnectorObject> matchByCorrelationRule(\n             final Connector connector,\n             final Filter filter,\n             final Provision provision,\n-            final Optional<Collection<LinkingMappingItem>> linkingItems,\n-            final Optional<String[]> moreAttrsToGet) {\n+            final Optional<String[]> moreAttrsToGet,\n+            final Optional<Collection<LinkingMappingItem>> linkingItems) {\n \n         Stream<MappingItem> items = Stream.concat(\n                 provision.getMapping().getItems().stream(),\n@@ -232,8 +233,8 @@ public Optional<ConnectorObject> matchByConnObjectKeyValue(\n             final MappingItem connObjectKeyItem,\n             final String connObjectKeyValue,\n             final Provision provision,\n-            final Optional<Collection<LinkingMappingItem>> linkingItems,\n-            final Optional<String[]> moreAttrsToGet) {\n+            final Optional<String[]> moreAttrsToGet,\n+            final Optional<Collection<LinkingMappingItem>> linkingItems) {\n \n         Stream<MappingItem> items = Stream.concat(\n                 provision.getMapping().getItems().stream(),"},{"sha":"9e1c7fb6f97e10d2c76b4e284077824e53810849","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/35cf1651fb5eef015cf79103264136979d8d5222/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=35cf1651fb5eef015cf79103264136979d8d5222","patch":"@@ -225,7 +225,6 @@ protected String doExecuteProvisioning(\n \n             Set<String> moreAttrsToGet = new HashSet<>();\n             actions.forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, orgUnit)));\n-\n             OperationOptions options = MappingUtils.buildOperationOptions(\n                     MappingUtils.getPullItems(orgUnit.getItems().stream()), moreAttrsToGet.toArray(new String[0]));\n \n@@ -310,11 +309,9 @@ protected String doExecuteProvisioning(\n             try {\n                 Set<String> moreAttrsToGet = new HashSet<>();\n                 actions.forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, provision)));\n-\n                 Stream<? extends Item> mapItems = Stream.concat(\n                         MappingUtils.getPullItems(provision.getMapping().getItems().stream()),\n                         virSchemaDAO.findByProvision(provision).stream().map(VirSchema::asLinkingMappingItem));\n-\n                 OperationOptions options = MappingUtils.buildOperationOptions(\n                         mapItems, moreAttrsToGet.toArray(new String[0]));\n "}]}