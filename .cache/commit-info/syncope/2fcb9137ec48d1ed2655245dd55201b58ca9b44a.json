{"sha":"2fcb9137ec48d1ed2655245dd55201b58ca9b44a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJmY2I5MTM3ZWM0OGQxZWQyNjU1MjQ1ZGQ1NTIwMWI1OGNhOWI0NGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-09T14:28:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-09T14:28:11Z"},"message":"[SYNCOPE-468] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1556814 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"307d295ad6a613aec9a88eaf87520d33d0e693e8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/307d295ad6a613aec9a88eaf87520d33d0e693e8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2fcb9137ec48d1ed2655245dd55201b58ca9b44a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2fcb9137ec48d1ed2655245dd55201b58ca9b44a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2fcb9137ec48d1ed2655245dd55201b58ca9b44a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"19a39b108e5ec656fba7ea4f6a841704b73f79e9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19a39b108e5ec656fba7ea4f6a841704b73f79e9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/19a39b108e5ec656fba7ea4f6a841704b73f79e9"},{"sha":"5e34f44b824e1209095195b3fc082634adde622d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5e34f44b824e1209095195b3fc082634adde622d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5e34f44b824e1209095195b3fc082634adde622d"}],"stats":{"total":820,"additions":642,"deletions":178},"files":[{"sha":"1029840b318e7a87de0e69a4ba92c1b6d8cb32db","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractPolicyTO.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractPolicyTO.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -18,7 +18,13 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import com.fasterxml.jackson.annotation.JsonProperty;\r\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlSeeAlso;\r\n import javax.xml.bind.annotation.XmlType;\r\n@@ -40,6 +46,10 @@ public abstract class AbstractPolicyTO extends AbstractBaseBean {\n \r\n     private PolicyType type;\r\n \r\n+    private final List<String> usedByResources = new ArrayList<String>();\r\n+\r\n+    private final List<Long> usedByRoles = new ArrayList<Long>();\r\n+\r\n     public long getId() {\r\n         return id;\r\n     }\r\n@@ -63,4 +73,19 @@ public PolicyType getType() {\n     public void setType(final PolicyType type) {\r\n         this.type = type;\r\n     }\r\n+\r\n+    @XmlElementWrapper(name = \"usedByResources\")\r\n+    @XmlElement(name = \"resource\")\r\n+    @JsonProperty(\"usedByResources\")\r\n+    public List<String> getUsedByResources() {\r\n+        return usedByResources;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"usedByRoles\")\r\n+    @XmlElement(name = \"role\")\r\n+    @JsonProperty(\"usedByRoles\")\r\n+    public List<Long> getUsedByRoles() {\r\n+        return usedByRoles;\r\n+    }\r\n+\r\n }\r"},{"sha":"21edd961cc2e3a75279820b4add809632b1f9adb","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -47,11 +47,7 @@\n public final class AttributableOperations {\r\n \r\n     private AttributableOperations() {\r\n-    }\r\n-\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public static <T extends AbstractAttributableTO> T clone(final T original) {\r\n-        return (T) SerializationUtils.clone(original);\r\n+        // empty constructor for static utility classes\r\n     }\r\n \r\n     private static void populate(final Map<String, AttributeTO> updatedAttrs,\r\n@@ -464,7 +460,7 @@ public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n             throw new IllegalArgumentException(\"UserTO and UserMod ids must be the same\");\r\n         }\r\n \r\n-        UserTO result = clone(userTO);\r\n+        UserTO result = SerializationUtils.clone(userTO);\r\n         apply(userTO, userMod, result);\r\n \r\n         // 1. password\r"},{"sha":"0dea6849d3444633faa3790e016631adda7d539f","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console.pages;\n \n import java.util.ArrayList;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.AttributableOperations;\n@@ -51,7 +52,7 @@ public class EditUserModalPage extends UserModalPage {\n     public EditUserModalPage(final PageReference pageRef, final ModalWindow window, final UserTO userTO) {\n         super(pageRef, window, userTO, Mode.ADMIN, true);\n \n-        this.initialUserTO = AttributableOperations.clone(userTO);\n+        this.initialUserTO = SerializationUtils.clone(userTO);\n \n         form = setupEditPanel();\n "},{"sha":"b85028271012e25778cc350daddc03951143faf5","filename":"console/src/main/java/org/apache/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":216,"deletions":4,"changes":220,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -18,10 +18,15 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.AbstractPolicyTO;\n+import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.types.AbstractPolicySpec;\n import org.apache.syncope.common.types.AccountPolicySpec;\n@@ -31,16 +36,33 @@\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.panels.PolicyBeanPanel;\n import org.apache.syncope.console.rest.PolicyRestClient;\n+import org.apache.syncope.console.rest.ResourceRestClient;\n+import org.apache.syncope.console.rest.RoleRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n@@ -50,9 +72,19 @@\n \n     private static final long serialVersionUID = -7325772767481076679L;\n \n+    private static final int WIN_HEIGHT = 600;\n+\n+    private static final int WIN_WIDTH = 1100;\n+\n     @SpringBean\n     private PolicyRestClient policyRestClient;\n \n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n     public PolicyModalPage(final ModalWindow window, final T policyTO) {\n         super();\n \n@@ -78,17 +110,17 @@ public PolicyModalPage(final ModalWindow window, final T policyTO) {\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                type.setChoices(Arrays.asList(new PolicyType[] {PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT }));\n                 break;\n \n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                type.setChoices(Arrays.asList(new PolicyType[] {PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD }));\n                 break;\n \n             case GLOBAL_SYNC:\n             case SYNC:\n-                type.setChoices(Arrays.asList(new PolicyType[] {PolicyType.GLOBAL_SYNC, PolicyType.SYNC}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_SYNC, PolicyType.SYNC }));\n \n             default:\n         }\n@@ -102,6 +134,187 @@ public PolicyModalPage(final ModalWindow window, final T policyTO) {\n \n         form.add(new PolicyBeanPanel(\"panel\", policy));\n \n+        final ModalWindow mwindow = new ModalWindow(\"metaEditModalWin\");\n+        mwindow.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        mwindow.setInitialHeight(WIN_HEIGHT);\n+        mwindow.setInitialWidth(WIN_WIDTH);\n+        mwindow.setCookieName(\"meta-edit-modal\");\n+        add(mwindow);\n+\n+        List<IColumn<String, String>> resColumns = new ArrayList<IColumn<String, String>>();\n+        resColumns.add(new AbstractColumn<String, String>(new StringResourceModel(\"name\", this, null, \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<String>> cellItem,\n+                    final String componentId, final IModel<String> rowModel) {\n+\n+                cellItem.add(new Label(componentId, rowModel.getObject()));\n+            }\n+        });\n+        resColumns.add(new AbstractColumn<String, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<String>> cellItem, final String componentId,\n+                    final IModel<String> model) {\n+\n+                final String resource = model.getObject();\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        mwindow.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new ResourceModalPage(PolicyModalPage.this.getPageReference(),\n+                                        mwindow, resourceRestClient.read(resource), false);\n+                            }\n+                        });\n+\n+                        mwindow.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, \"Resources\");\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+        ISortableDataProvider<String, String> resDataProvider = new SortableDataProvider<String, String>() {\n+\n+            private static final long serialVersionUID = 8263758912838836438L;\n+\n+            @Override\n+            public Iterator<? extends String> iterator(final long first, final long count) {\n+                return policyTO.getId() == 0\n+                        ? Collections.<String>emptyList().iterator()\n+                        : policyRestClient.getPolicy(policyTO.getId()).\n+                        getUsedByResources().subList((int) first, (int) first + (int) count).iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return policyTO.getId() == 0\n+                        ? 0\n+                        : policyRestClient.getPolicy(policyTO.getId()).\n+                        getUsedByResources().size();\n+            }\n+\n+            @Override\n+            public IModel<String> model(final String object) {\n+                return new Model<String>(object);\n+            }\n+        };\n+        final AjaxFallbackDefaultDataTable<String, String> resources =\n+                new AjaxFallbackDefaultDataTable<String, String>(\"resources\", resColumns, resDataProvider, 10);\n+        form.add(resources);\n+\n+        List<IColumn<RoleTO, String>> roleColumns = new ArrayList<IColumn<RoleTO, String>>();\n+        roleColumns.add(new PropertyColumn<RoleTO, String>(new ResourceModel(\"id\", \"id\"), \"id\", \"id\"));\n+        roleColumns.add(new PropertyColumn<RoleTO, String>(new ResourceModel(\"name\", \"name\"), \"name\", \"name\"));\n+        roleColumns.add(new AbstractColumn<RoleTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<RoleTO>> cellItem, final String componentId,\n+                    final IModel<RoleTO> model) {\n+\n+                final RoleTO role = model.getObject();\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        mwindow.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new RoleModalPage(PolicyModalPage.this.getPageReference(), mwindow, role);\n+                            }\n+                        });\n+\n+                        mwindow.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, \"Roles\");\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+        ISortableDataProvider<RoleTO, String> roleDataProvider = new SortableDataProvider<RoleTO, String>() {\n+\n+            private static final long serialVersionUID = 8263758912838836438L;\n+\n+            @Override\n+            public Iterator<? extends RoleTO> iterator(final long first, final long count) {\n+                List<RoleTO> roles = new ArrayList<RoleTO>();\n+\n+                if (policyTO.getId() > 0) {\n+                    for (Long roleId : policyRestClient.getPolicy(policyTO.getId()).\n+                            getUsedByRoles().subList((int) first, (int) first + (int) count)) {\n+\n+                        roles.add(roleRestClient.read(roleId));\n+                    }\n+                }\n+\n+                return roles.iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return policyTO.getId() == 0\n+                        ? 0\n+                        : policyRestClient.getPolicy(policyTO.getId()).\n+                        getUsedByRoles().size();\n+            }\n+\n+            @Override\n+            public IModel<RoleTO> model(final RoleTO object) {\n+                return new Model<RoleTO>(object);\n+            }\n+        };\n+        final AjaxFallbackDefaultDataTable<RoleTO, String> roles =\n+                new AjaxFallbackDefaultDataTable<RoleTO, String>(\"roles\", roleColumns, roleDataProvider, 10);\n+        form.add(roles);\n+        mwindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(resources);\n+                target.add(roles);\n+                if (isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(feedbackPanel);\n+                    setModalResult(false);\n+                }\n+            }\n+        });\n+\n         final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(APPLY)) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n@@ -182,7 +395,6 @@ private AbstractPolicySpec getPolicySpecification(final AbstractPolicyTO policyT\n     }\n \n     private void setPolicySpecification(final AbstractPolicyTO policyTO, final AbstractPolicySpec specification) {\n-\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:"},{"sha":"0e233c1b76aea63ec698b0362c60499a868fa179","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -61,8 +61,8 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n                 ? \"\"\n                 : resourceTO.getName()));\n \n-        final Form form = new Form(FORM);\n-        form.setModel(new CompoundPropertyModel(resourceTO));\n+        final Form<ResourceTO> form = new Form<ResourceTO>(FORM);\n+        form.setModel(new CompoundPropertyModel<ResourceTO>(resourceTO));\n \n         //--------------------------------\n         // Resource details panel\n@@ -137,7 +137,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                             resourceRestClient.update(resourceTO);\n                         }\n \n-                        ((Resources) pageRef.getPage()).setModalResult(true);\n+                        if (pageRef != null && pageRef.getPage() instanceof AbstractBasePage) {\n+                            ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n+                        }\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Failure managing resource {}\", resourceTO, e);"},{"sha":"5f91b29244332c01b7de161bd119b6e7c107d1aa","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -241,17 +241,16 @@ public String getCssClass() {\n             @Override\n             public void populateItem(final Item<ICellPopulator<ResourceTO>> cellItem, final String componentId,\n                     final IModel<ResourceTO> model) {\n+\n                 final ResourceTO resourceTO = model.getObject();\n \n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n-\n                 panel.add(new ActionLink() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-\n                         statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n \n                             private static final long serialVersionUID = -7834632442532690940L;\n@@ -302,9 +301,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                ResourceModalPage form = new ResourceModalPage(Resources.this.getPageReference(),\n+                                return new ResourceModalPage(Resources.this.getPageReference(),\n                                         editResourceWin, resourceTO, false);\n-                                return form;\n                             }\n                         });\n \n@@ -319,7 +317,6 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-\n                             resourceRestClient.delete(resourceTO.getName());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException e) {"},{"sha":"88e8e0b90cd3592887fc17dbf41a3e67b9cc5fcb","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.util.AttributableOperations;\n@@ -76,14 +77,14 @@ public RoleModalPage(final PageReference pageRef, final ModalWindow window, fina\n \n         this.createFlag = roleTO.getId() == 0;\n         if (!createFlag) {\n-            originalRoleTO = AttributableOperations.clone(roleTO);\n+            originalRoleTO = SerializationUtils.clone(roleTO);\n         }\n \n-        final Form form = new Form(\"RoleForm\");\n+        final Form<RoleTO> form = new Form<RoleTO>(\"RoleForm\");\n \n         add(new Label(\"displayName\", roleTO.getId() == 0 ? \"\" : roleTO.getDisplayName()));\n \n-        form.setModel(new CompoundPropertyModel(roleTO));\n+        form.setModel(new CompoundPropertyModel<RoleTO>(roleTO));\n \n         this.rolePanel = new RolePanel.Builder(\"rolePanel\").form(form).roleTO(roleTO).\n                 roleModalPageMode(mode).pageRef(getPageReference()).build();"},{"sha":"f0947c4f2321311e331ce7b4b37a7188141c590a","filename":"console/src/main/java/org/apache/syncope/console/pages/UserSelfModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserSelfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserSelfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserSelfModalPage.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.AttributableOperations;\n@@ -43,7 +44,7 @@ public class UserSelfModalPage extends UserModalPage {\n     public UserSelfModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO) {\n         super(callerPageRef, window, userTO, Mode.SELF, userTO.getId() != 0);\n \n-        this.initialUserTO = AttributableOperations.clone(userTO);\n+        this.initialUserTO = SerializationUtils.clone(userTO);\n         setupEditPanel();\n     }\n "},{"sha":"c01aff355152ee8b04fd66cde536d67142ee3615","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -71,11 +71,11 @@ public class PoliciesPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(PoliciesPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(PoliciesPanel.class);\n \n-    private final static int MODAL_WIN_HEIGHT = 400;\n+    private static final int MODAL_WIN_HEIGHT = 400;\n \n-    private final static int MODAL_WIN_WIDTH = 1000;\n+    private static final int MODAL_WIN_WIDTH = 1000;\n \n     private static final long serialVersionUID = -6804066913177804275L;\n \n@@ -88,7 +88,7 @@ public class PoliciesPanel extends Panel {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n-    final private int paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_POLICY_PAGINATOR_ROWS);\n+    private final int paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_POLICY_PAGINATOR_ROWS);\n \n     protected boolean modalResult = false;\n "},{"sha":"8425c29d338ef08f9fa004796ea579061ab33bc5","filename":"console/src/main/java/org/apache/syncope/console/rest/PolicyRestClient.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -44,6 +44,16 @@ public <T extends AbstractPolicyTO> T getGlobalPolicy(final PolicyType type) {\n         return policy;\n     }\n \n+    public <T extends AbstractPolicyTO> T getPolicy(final Long id) {\n+        T policy = null;\n+        try {\n+            policy = getService(PolicyService.class).read(id);\n+        } catch (Exception e) {\n+            LOG.warn(\"No policy found for id {}\", id, e);\n+        }\n+        return policy;\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public <T extends AbstractPolicyTO> List<T> getPolicies(final PolicyType type, final boolean includeGlobal) {\n         final List<T> res = new ArrayList<T>();"},{"sha":"be336ad4111e396441241f58a96e5eff8e8d8ca9","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.html","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -26,6 +26,8 @@\n           <ul>\n             <li class=\"tabs-selected\"><a href=\"#description\"><span><wicket:message key=\"policyDescription\"/></span></a></li>\n             <li><a href=\"#specification\"><span><wicket:message key=\"policySpecification\"/></span></a></li>\n+            <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n+            <li><a href=\"#roles\"><span><wicket:message key=\"roles\"/></span></a></li>\n           </ul>\n \n           <div id=\"description\">\n@@ -62,6 +64,18 @@\n           <div id=\"specification\">\n             <span wicket:id=\"panel\">[password policy panel]</span>\n           </div>\n+\n+          <div id=\"resources\">\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit;\">\n+              <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"resources\"/>\n+            </div>\n+          </div>\n+\n+          <div id=\"roles\">\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit;\">\n+              <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"roles\"/>\n+            </div>\n+          </div>\n         </div>\n \n         <div style=\"margin: 20px 10px 0\">\n@@ -74,5 +88,7 @@\n         </div>\n       </form>\n     </div>\n+\n+    <div wicket:id=\"metaEditModalWin\">[Show modal window for meta editing (resources, roles)]</div>    \n   </wicket:extend>\n </html>"},{"sha":"65d7b06963e0e95baa9c32a942850b4c31e060c3","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.properties","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -20,8 +20,8 @@ description=Description\n type=Type\n apply=Save\n \n-policyDescription = Policy Description\n-policySpecification = Policy Specification\n+policyDescription = Info\n+policySpecification = Specification\n \n #-----------------------------\n # Password policy specification properties\n@@ -82,3 +82,5 @@ GLOBAL_PASSWORD=Global Password Policy\n SYNC=Synchronization Policy\n GLOBAL_SYNC=Global Synchronization Policy\n #-----------------------------\n+resources=Resources\n+roles=Roles"},{"sha":"11e446fee02c0cf796ed71f6056073cddbc19f3e","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_it.properties","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -20,8 +20,8 @@ description=Descrizione\n type=Tipo\n apply=Salva\n \n-policyDescription = Descrizione Policy\n-policySpecification = Specifica Policy\n+policyDescription = Info\n+policySpecification = Specifica\n \n #-----------------------------\n # Password policy specification properties\n@@ -79,5 +79,8 @@ GLOBAL_SYNC=Policy globale di sincronizzazione\n #-----------------------------\n nonAlphanumericRequired=Carattere non alfanumerico richiesto\n alphanumericRequired=Carattere alfanumerico richiesto\n-rAltSearchSchemas=Attributi alternativi per ricerca locale (ruolii)\n-ttributi alternativi per ricerca locale (ruolii)\n+rAltSearchSchemas=Attributi alternativi per ricerca locale (ruoli)\n+userJavaRule=Regola di correlazione (utenti)\n+roleJavaRule=Regola di correlazione (ruoli)\n+resources=Risorse\n+roles=Ruoli"},{"sha":"d68418579bf78b8c33886ce21f4547cc1a462641","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_pt_BR.properties","status":"modified","additions":45,"deletions":44,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -14,71 +14,72 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Gerenciamento de Pol\\u00EDtica\n+title=Gerenciamento de Pol\\u00edtica\n \n-description=Descri\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n type=Tipo\n apply=Salvar\n \n-policyDescription = Descri\\u00E7\\u00E3o da Pol\\u00EDtica\n-policySpecification = Especifica\\u00E7\\u00E3o da Pol\\u00EDtica\n+policyDescription = Info\n+policySpecification = Especifica\\u00e7\\u00e3o\n \n #-----------------------------\n # Password policy specification properties\n #-----------------------------\n-minLength=Tamanho m\\u00EDnimo\n-maxLength=Tamanho M\\u00E1ximo\n-historyLength=Tamanho do Hist\\u00F3rico\n-prefixesNotPermitted=Prefixos n\\u00E3o permitidos\n-suffixesNotPermitted=sufixos n\\u00E3o permitidos\n-wordsNotPermitted=Substrings n\\u00E3o permitidas\n-schemasNotPermitted=N\\u00E3o deve conter valores dos seguintes atributos\n-digitRequired=Precisa possuir um ou mais d\\u00EDgitos\n-nonAlphanumericRequired=Caractere n\\u00E3o alfanum\\u00E9rico requerido\n-alphanumericRequired=Caractere alfanum\\u00E9rico requerido\n-lowercaseRequired=Requerido em letra min\\u00FAscula\n-uppercaseRequired=Requerido em letra mai\\u00FAscula\n-mustStartWithDigit=Precisa come\\u00E7ar com um d\\u00EDgito\n-mustntStartWithDigit=N\\u00E3o deve come\\u00E7\\u00E3r com um d\\u00EDgito\n-mustEndWithDigit=Precisa terminar com um d\\u00EDgito\n-mustntEndWithDigit=N\\u00E3o deve terminar com um d\\u00EDgito\n-mustStartWithNonAlpha=Precisa come\\u00E7ar com um caractere n\\u00E3o alfanum\\u00E9rico\n-mustStartWithAlpha=Precisa come\\u00E7ar com um caracter alfanum\\u00E9rico\n-mustntStartWithNonAlpha=N\\u00E3o deve come\\u00E7ar com um caractere n\\u00E3o alfanum\\u00E9rico\n-mustntStartWithAlpha=N\\u00E3o deve come\\u00E7ar com um caractere alfanum\\u00E9rico\n-mustEndWithNonAlpha=Precisa terminar com um caractere n\\u00E3o alfanum\\u00E9rico\n-mustEndWithAlpha=Precisa terminar com um caractere alfanum\\u00E9rico\n-mustntEndWithNonAlpha=N\\u00E3o deve terminar com um caractere n\\u00E3o alfanum\\u00E9rico\n-mustntEndWithAlpha=N\\u00E3o precisa terminar com um caracter alfanum\\u00E9rico\n+minLength=Tamanho m\\u00ednimo\n+maxLength=Tamanho M\\u00e1ximo\n+historyLength=Tamanho do Hist\\u00f3rico\n+prefixesNotPermitted=Prefixos n\\u00e3o permitidos\n+suffixesNotPermitted=sufixos n\\u00e3o permitidos\n+wordsNotPermitted=Substrings n\\u00e3o permitidas\n+schemasNotPermitted=N\\u00e3o deve conter valores dos seguintes atributos\n+digitRequired=Precisa possuir um ou mais d\\u00edgitos\n+nonAlphanumericRequired=Caractere n\\u00e3o alfanum\\u00e9rico requerido\n+alphanumericRequired=Caractere alfanum\\u00e9rico requerido\n+lowercaseRequired=Requerido em letra min\\u00fascula\n+uppercaseRequired=Requerido em letra mai\\u00fascula\n+mustStartWithDigit=Precisa come\\u00e7ar com um d\\u00edgito\n+mustntStartWithDigit=N\\u00e3o deve come\\u00e7\\u00e3r com um d\\u00edgito\n+mustEndWithDigit=Precisa terminar com um d\\u00edgito\n+mustntEndWithDigit=N\\u00e3o deve terminar com um d\\u00edgito\n+mustStartWithNonAlpha=Precisa come\\u00e7ar com um caractere n\\u00e3o alfanum\\u00e9rico\n+mustStartWithAlpha=Precisa come\\u00e7ar com um caracter alfanum\\u00e9rico\n+mustntStartWithNonAlpha=N\\u00e3o deve come\\u00e7ar com um caractere n\\u00e3o alfanum\\u00e9rico\n+mustntStartWithAlpha=N\\u00e3o deve come\\u00e7ar com um caractere alfanum\\u00e9rico\n+mustEndWithNonAlpha=Precisa terminar com um caractere n\\u00e3o alfanum\\u00e9rico\n+mustEndWithAlpha=Precisa terminar com um caractere alfanum\\u00e9rico\n+mustntEndWithNonAlpha=N\\u00e3o deve terminar com um caractere n\\u00e3o alfanum\\u00e9rico\n+mustntEndWithAlpha=N\\u00e3o precisa terminar com um caracter alfanum\\u00e9rico\n #-----------------------------\n \n #-----------------------------\n # Account policy specification properties\n #-----------------------------\n-allUpperCase=Todos em letras mai\\u00FAsculas\n-allLowerCase=todos em letras min\\u00FAsculas\n+allUpperCase=Todos em letras mai\\u00fasculas\n+allLowerCase=todos em letras min\\u00fasculas\n pattern=Pattern (regex)\n-propagateSuspension=Suspender propaga\\u00E7\\u00E3o\n-permittedLoginRetries=N\\u00FAmero m\\u00E1ximo de subsequentes falhas de login\n+propagateSuspension=Suspender propaga\\u00e7\\u00e3o\n+permittedLoginRetries=N\\u00famero m\\u00e1ximo de subsequentes falhas de login\n #-----------------------------\n \n #-----------------------------\n # Sync policy specification properties\n #-----------------------------\n-uAltSearchSchemas=Atributos alternativos para busca local (usu\\u00E1rios)\n-rAltSearchSchemas=Atributos alternativos para busca local (fun\\u00E7\\u00F5es)\n-userJavaRule=Regra customizada de correla\\u00E7\\u00E3o de usu\\u00E1rio\n-roleJavaRule=Regra de correla\\u00E7\\u00E3o de fun\\u00E7\\u00E3o customizada\n-conflictResolutionAction= A\\u00E7\\u00E3o de resolu\\u00E7\\u00E3o de conflito\n+uAltSearchSchemas=Atributos alternativos para busca local (usu\\u00e1rios)\n+rAltSearchSchemas=Atributos alternativos para busca local (fun\\u00e7\\u00f5es)\n+userJavaRule=Regra customizada de correla\\u00e7\\u00e3o de usu\\u00e1rio\n+roleJavaRule=Regra de correla\\u00e7\\u00e3o de fun\\u00e7\\u00e3o customizada\n+conflictResolutionAction= A\\u00e7\\u00e3o de resolu\\u00e7\\u00e3o de conflito\n #-----------------------------\n \n #-----------------------------\n # Policy Type\n #-----------------------------\n-ACCOUNT=Pol\\u00EDtica de Conta\n-GLOBAL_ACCOUNT=Pol\\u00EDtica Global de Conta\n-PASSWORD=Plo\\u00EDtica de Senha\n-GLOBAL_PASSWORD=Pol\\u00EDtica Global de Senha\n-SYNC=Pol\\u00EDtica de Sincroniza\\u00E7\\u00E3o\n-GLOBAL_SYNC=Pol\\u00EDtica Global de sincroniza\\u00E7\\u00E3o\n-#-----------------------------\n+ACCOUNT=Pol\\u00edtica de Conta\n+GLOBAL_ACCOUNT=Pol\\u00edtica Global de Conta\n+PASSWORD=Plo\\u00edtica de Senha\n+GLOBAL_PASSWORD=Pol\\u00edtica Global de Senha\n+SYNC=Pol\\u00edtica de Sincroniza\\u00e7\\u00e3o\n+GLOBAL_SYNC=Pol\\u00edtica Global de sincroniza\\u00e7\\u00e3o\n+resources=Recursos\n+roles=Fun\\u00e7\\u00f5es"},{"sha":"68cec92793bdc1548c429bdea906f1c54899c6e8","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/NotificationTasks.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,11 +16,11 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n       <span wicket:id=\"container\">\n-        <span wicket:id=\"datatable\">[datatabel]</span>\n+        <span wicket:id=\"datatable\">[datatable]</span>\n       </span>\n \n       <span style=\"float:right\">"},{"sha":"b9df63eb05b02ea19fe3d541e4ffc102a8204ec9","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PolicyBeanPanel.html","status":"modified","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,22 +16,24 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n \n-  <div id=\"policyBeanTable\">\n-    <div class=\"tablerow\" wicket:id=\"policies\">\n-      <div class=\"tablecolumn_check\">\n-        <span wicket:id=\"check\">[check]</span>\n-      </div>\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <label for=\"label\">\n-          <span wicket:id=\"label\">[label]</span>\n-        </label>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"field\">[field]</span>\n+    <div id=\"policyBeanTable\">\n+      <div class=\"tablerow\" wicket:id=\"policies\">\n+        <div class=\"tablecolumn_check\">\n+          <span wicket:id=\"check\">[check]</span>\n+        </div>\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"label\">\n+            <span wicket:id=\"label\">[label]</span>\n+          </label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"field\">[field]</span>\n+        </div>\n       </div>\n     </div>\n-  </div>\n \n-</wicket:panel>\n+  </wicket:panel>\n+</html>"},{"sha":"cb8a56418bc6b5a50ed79616697f0836291e955f","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PropagationTasks.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,11 +16,11 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n       <span wicket:id=\"container\">\n-        <span wicket:id=\"datatable\">[datatabel]</span>\n+        <span wicket:id=\"datatable\">[datatable]</span>\n       </span>\n       <span style=\"float:right\">\n         <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n@@ -34,4 +34,4 @@\n       [Show modal window for viewing task]\n     </div>\n   </wicket:panel>\n-</html>\n+</html>\n\\ No newline at end of file"},{"sha":"d4b0e16817dcca7d2ad9315fa303985ac8707ef3","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceConnConfPanel.html","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,24 +16,26 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <span wicket:id=\"connectorPropertiesContainer\">\n-    <div id=\"formtable\">\n-      <div class=\"tablerow\" wicket:id=\"connectorProperties\">\n-        <div class=\"tablecolumn_label medium_fixedsize\">\n-          <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n-        </div>\n-        <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"panel\">[connPropAttrValue]</span>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"connectorPropertiesContainer\">\n+      <div id=\"formtable\">\n+        <div class=\"tablerow\" wicket:id=\"connectorProperties\">\n+          <div class=\"tablecolumn_label medium_fixedsize\">\n+            <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n+          </div>\n+          <div class=\"tablecolumn_field medium_dynamicsize\">\n+            <span wicket:id=\"panel\">[connPropAttrValue]</span>\n+          </div>\n         </div>\n       </div>\n-    </div>\n \n-    <div>\n-      <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n-        <img src=\"img/ping.png\"width=\"30\" height=\"30\"\n-             alt=\"ping\" title=\"title\" wicket:message=\"title:check\"/>\n-      </a>\n-    </div>\n-  </span>\n-</wicket:panel>\n+      <div>\n+        <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n+          <img src=\"img/ping.png\"width=\"30\" height=\"30\"\n+               alt=\"ping\" title=\"title\" wicket:message=\"title:check\"/>\n+        </a>\n+      </div>\n+    </span>\n+  </wicket:panel>\n+</html>"},{"sha":"ddabe0517c3efe0cfe044f0116cfbadf16846a5e","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceSecurityPanel.html","status":"modified","additions":32,"deletions":30,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,39 +16,41 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <div id=\"formtable\" wicket:id=\"security\">\n-    <div class=\"tablerow alt\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <label for=\"passwordPolicy\"><wicket:message key=\"passwordPolicy\"/></label>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"formtable\" wicket:id=\"security\">\n+      <div class=\"tablerow alt\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"passwordPolicy\"><wicket:message key=\"passwordPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"passwordPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n       </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"passwordPolicy\">\n-          [panel for dynamic input type markup]\n-        </span>\n-      </div>\n-    </div>\n \n-    <div class=\"tablerow\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <label for=\"accountPolicy\"><wicket:message key=\"accountPolicy\"/></label>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"accountPolicy\">\n-          [panel for dynamic input type markup]\n-        </span>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"accountPolicy\"><wicket:message key=\"accountPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"accountPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n       </div>\n-    </div>\n \n-    <div class=\"tablerow alt\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <label for=\"syncPolicy\"><wicket:message key=\"syncPolicy\"/></label>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"syncPolicy\">\n-          [panel for dynamic input type markup]\n-        </span>\n+      <div class=\"tablerow alt\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"syncPolicy\"><wicket:message key=\"syncPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"syncPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n       </div>\n     </div>\n-  </div>\n-</wicket:panel>\n\\ No newline at end of file\n+  </wicket:panel>\n+</html>"},{"sha":"d5d155a253db908eba55a23c9b5fae9bb07e96ca","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourcesPanel.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,8 +16,8 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n-    <wicket:panel>\n-        <span wicket:id=\"resourcesPalette\">[palette]</span>\n-    </wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"resourcesPalette\">[palette]</span>\n+  </wicket:panel>\n </html>"},{"sha":"61b609e4598128d91be02663cb3a76accd981a84","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleSecurityPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,7 +16,7 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div id=\"formtable\" wicket:id=\"security\">\n       <div class=\"tablerow\">"},{"sha":"b9868e35a91893c8ed5f004480b0d86dfb566f2c","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,11 +16,11 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n       <span wicket:id=\"container\">\n-        <span wicket:id=\"datatable\">[datatabel]</span>\n+        <span wicket:id=\"datatable\">[datatable]</span>\n       </span>\n \n       <span style=\"float:right\">\n@@ -39,4 +39,4 @@\n       <wicket:message key=\"create_task\"/>\n     </a>\n   </wicket:panel>\n-</html>\n+</html>\n\\ No newline at end of file"},{"sha":"b9868e35a91893c8ed5f004480b0d86dfb566f2c","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SyncTasks.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -16,7 +16,7 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n       <span wicket:id=\"container\">\n@@ -39,4 +39,4 @@\n       <wicket:message key=\"create_task\"/>\n     </a>\n   </wicket:panel>\n-</html>\n+</html>\n\\ No newline at end of file"},{"sha":"e91f6dec3bea9d2bf4629a3c7fb2b38ccba829d3","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -72,7 +72,7 @@ public class ExternalResource extends AbstractSysInfo {\n     /**\n      * The resource type is identified by the associated connector.\n      */\n-    @ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.MERGE})\n+    @ManyToOne(fetch = FetchType.EAGER, cascade = { CascadeType.MERGE })\n     @NotNull\n     private ConnInstance connector;\n "},{"sha":"67b8f24776dcfe48f73ca30ab02fe938c25f359b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -62,7 +62,8 @@\n import org.apache.syncope.core.persistence.validation.entity.SyncopeRoleCheck;\n \n @Entity\n-@Table(uniqueConstraints = @UniqueConstraint(columnNames = {\"name\", \"parent_id\"}))\n+@Table(uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"name\", \"parent_id\" }))\n @Cacheable\n @SyncopeRoleCheck\n public class SyncopeRole extends AbstractAttributable {\n@@ -283,7 +284,7 @@ public void setInheritTemplates(final boolean inheritAttrTemplates) {\n         this.inheritTemplates = getBooleanAsInteger(inheritAttrTemplates);\n     }\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public <T extends AbstractAttrTemplate> List<T> getAttrTemplates(final Class<T> reference) {\n         List<T> result = null;\n "},{"sha":"9269556dbed889e7e75688b6c466a3b0afd85a5f","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -21,14 +21,20 @@\n import java.util.List;\n \n import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface ResourceDAO extends DAO {\n \n     ExternalResource find(String name);\n \n+    List<ExternalResource> findByPolicy(Policy policy);\n+\n+    List<ExternalResource> findWithoutPolicy(PolicyType type);\n+\n     List<ExternalResource> findAll();\n \n     List<ExternalResource> findAllByPriority();"},{"sha":"9b42c008f9ad770292d6f7a7e3fef325f4cd2c18","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -20,8 +20,10 @@\n \n import java.util.List;\n \n+import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -40,7 +42,11 @@ public interface RoleDAO extends AttributableDAO {\n \n     List<SyncopeRole> findOwnedByRole(Long roleId);\n \n-    List<SyncopeRole> findByEntitlement(final Entitlement entitlement);\n+    List<SyncopeRole> findByEntitlement(Entitlement entitlement);\n+\n+    List<SyncopeRole> findByPolicy(Policy policy);\n+\n+    List<SyncopeRole> findWithoutPolicy(PolicyType type);\n \n     List<SyncopeRole> findAncestors(SyncopeRole role);\n "},{"sha":"0f66afa23923e389d4635fc793530ba53409200d","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":49,"deletions":8,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -24,9 +24,11 @@\n import javax.persistence.NoResultException;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -58,7 +60,7 @@ public class ResourceDAOImpl extends AbstractDAOImpl implements ResourceDAO {\n \n     @Override\n     public ExternalResource find(final String name) {\n-        TypedQuery<ExternalResource> query = entityManager.createQuery(\"SELECT e \" + \"FROM \"\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\"SELECT e FROM \"\n                 + ExternalResource.class.getSimpleName() + \" e \" + \"WHERE e.name = :name\", ExternalResource.class);\n         query.setParameter(\"name\", name);\n \n@@ -72,19 +74,58 @@ public ExternalResource find(final String name) {\n         return result;\n     }\n \n+    private StringBuilder getByPolicyQuery(final PolicyType type) {\n+        StringBuilder query = new StringBuilder(\"SELECT e FROM \").append(ExternalResource.class.getSimpleName()).\n+                append(\" e WHERE e.\");\n+        switch (type) {\n+            case ACCOUNT:\n+            case GLOBAL_ACCOUNT:\n+                query.append(\"accountPolicy\");\n+                break;\n+\n+            case PASSWORD:\n+            case GLOBAL_PASSWORD:\n+                query.append(\"passwordPolicy\");\n+                break;\n+\n+            case SYNC:\n+            case GLOBAL_SYNC:\n+                query.append(\"syncPolicy\");\n+                break;\n+\n+            default:\n+                break;\n+        }\n+        return query;\n+    }\n+\n+    @Override\n+    public List<ExternalResource> findByPolicy(final Policy policy) {\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\n+                getByPolicyQuery(policy.getType()).append(\" = :policy\").toString(), ExternalResource.class);\n+        query.setParameter(\"policy\", policy);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<ExternalResource> findWithoutPolicy(final PolicyType type) {\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\n+                getByPolicyQuery(type).append(\" IS NULL\").toString(), ExternalResource.class);\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public List<ExternalResource> findAll() {\n-        TypedQuery<ExternalResource> query =\n-                entityManager.createQuery(\"SELECT e \" + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e\",\n-                ExternalResource.class);\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\n+                \"SELECT e FROM  \" + ExternalResource.class.getSimpleName() + \" e\", ExternalResource.class);\n         return query.getResultList();\n     }\n \n     @Override\n     public List<ExternalResource> findAllByPriority() {\n-        TypedQuery<ExternalResource> query =\n-                entityManager.createQuery(\"SELECT e \" + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e \"\n-                + \"ORDER BY e.propagationPriority\", ExternalResource.class);\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\n+                \"SELECT e FROM  \" + ExternalResource.class.getSimpleName() + \" e ORDER BY e.propagationPriority\",\n+                ExternalResource.class);\n         return query.getResultList();\n     }\n \n@@ -97,7 +138,7 @@ public List<ExternalResource> findAllByPriority() {\n      * @return the same entity, updated\n      */\n     @Override\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public ExternalResource save(final ExternalResource resource) {\n         ExternalResource merged = entityManager.merge(resource);\n         try {"},{"sha":"fe6029e72ea9c46428b649bb82f12f5f8a89d00b","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":80,"deletions":5,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -18,14 +18,17 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n+import java.util.AbstractMap;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n \n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -34,6 +37,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.membership.MAttr;\n import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n@@ -203,6 +207,77 @@ public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n         return query.getResultList();\n     }\n \n+    private Map.Entry<String, String> getPolicyFields(final PolicyType type) {\n+        String policyField;\n+        String inheritPolicyField;\n+        if (type == PolicyType.GLOBAL_ACCOUNT || type == PolicyType.ACCOUNT) {\n+            policyField = \"accountPolicy\";\n+            inheritPolicyField = \"inheritAccountPolicy\";\n+        } else {\n+            policyField = \"passwordPolicy\";\n+            inheritPolicyField = \"inheritPasswordPolicy\";\n+        }\n+\n+        return new AbstractMap.SimpleEntry<String, String>(policyField, inheritPolicyField);\n+    }\n+\n+    private List<SyncopeRole> findSamePolicyChildren(final SyncopeRole role, final PolicyType type) {\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n+\n+        for (SyncopeRole child : findChildren(role)) {\n+            boolean inherit = type == PolicyType.GLOBAL_ACCOUNT || type == PolicyType.ACCOUNT\n+                    ? child.isInheritAccountPolicy()\n+                    : child.isInheritPasswordPolicy();\n+            if (inherit) {\n+                result.add(child);\n+                result.addAll(findSamePolicyChildren(child, type));\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findByPolicy(final Policy policy) {\n+        if (policy.getType() == PolicyType.GLOBAL_SYNC || policy.getType() == PolicyType.SYNC) {\n+            return Collections.<SyncopeRole>emptyList();\n+        }\n+\n+        Map.Entry<String, String> policyFields = getPolicyFields(policy.getType());\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n+                append(SyncopeRole.class.getSimpleName()).append(\" e WHERE e.\").\n+                append(policyFields.getKey()).append(\" = :policy AND (e.\").\n+                append(policyFields.getValue()).append(\" IS NULL OR e.\").\n+                append(policyFields.getValue()).append(\" = 0)\");\n+\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(queryString.toString(), SyncopeRole.class);\n+        query.setParameter(\"policy\", policy);\n+\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n+        for (SyncopeRole role : query.getResultList()) {\n+            result.add(role);\n+            result.addAll(findSamePolicyChildren(role, policy.getType()));\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findWithoutPolicy(final PolicyType type) {\n+        if (type == PolicyType.GLOBAL_SYNC || type == PolicyType.SYNC) {\n+            return Collections.<SyncopeRole>emptyList();\n+        }\n+\n+        Map.Entry<String, String> policyFields = getPolicyFields(type);\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n+                append(SyncopeRole.class.getSimpleName()).append(\" e WHERE e.\").\n+                append(policyFields.getKey()).append(\" IS NULL AND (e.\").\n+                append(policyFields.getValue()).append(\" IS NULL OR e.\").\n+                append(policyFields.getValue()).append(\" = 0)\");\n+\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(queryString.toString(), SyncopeRole.class);\n+        return query.getResultList();\n+    }\n+\n     private void findAncestors(final List<SyncopeRole> result, final SyncopeRole role) {\n         if (role.getParent() != null && !result.contains(role.getParent())) {\n             result.add(role.getParent());\n@@ -219,8 +294,8 @@ public List<SyncopeRole> findAncestors(final SyncopeRole role) {\n \n     @Override\n     public List<SyncopeRole> findChildren(final SyncopeRole role) {\n-        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \"\n-                + \"r.parent=:role\", SyncopeRole.class);\n+        TypedQuery<SyncopeRole> query =\n+                entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE r.parent=:role\", SyncopeRole.class);\n         query.setParameter(\"role\", role);\n \n         return query.getResultList();\n@@ -300,9 +375,9 @@ public List<SyncopeRole> findAll(final int page, final int itemsPerPage, final L\n \n     @Override\n     public List<Membership> findMemberships(final SyncopeRole role) {\n-        TypedQuery<Membership> query = entityManager.createQuery(\n-                \"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\" + \" WHERE e.syncopeRole=:role\",\n-                Membership.class);\n+        TypedQuery<Membership> query =\n+                entityManager.createQuery(\"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\"\n+                        + \" WHERE e.syncopeRole=:role\", Membership.class);\n         query.setParameter(\"role\", role);\n \n         return query.getResultList();"},{"sha":"a2b04755939e8e1b3b7e88ee75e09a537641ffc4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UnresolvedReferenceException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUnresolvedReferenceException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUnresolvedReferenceException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUnresolvedReferenceException.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -29,7 +29,7 @@ public UnresolvedReferenceException() {\n         super();\n     }\n \n-    public UnresolvedReferenceException(Throwable cause) {\n+    public UnresolvedReferenceException(final Throwable cause) {\n         super(cause);\n     }\n }"},{"sha":"e2bea6c7e21d5576572a7011be86d5cc36ae04c0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -29,14 +29,25 @@\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.SyncPolicy;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.persistence.dao.ResourceDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class PolicyDataBinder {\n \n+    @Autowired\n+    private ResourceDAO resourceDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     private boolean isGlobalPolicy(final PolicyType policyType) {\n         boolean isGlobal;\n         switch (policyType) {\n@@ -101,6 +112,23 @@ public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n         policyTO.setId(policy.getId());\n         policyTO.setDescription(policy.getDescription());\n \n+        for (ExternalResource resource : resourceDAO.findByPolicy(policy)) {\n+            policyTO.getUsedByResources().add(resource.getName());\n+        }\n+        if (isGlobal) {\n+            for (ExternalResource resource : resourceDAO.findWithoutPolicy(policy.getType())) {\n+                policyTO.getUsedByResources().add(resource.getName());\n+            }\n+        }\n+        for (SyncopeRole role : roleDAO.findByPolicy(policy)) {\n+            policyTO.getUsedByRoles().add(role.getId());\n+        }\n+        if (isGlobal) {\n+            for (SyncopeRole role : roleDAO.findWithoutPolicy(policy.getType())) {\n+                policyTO.getUsedByRoles().add(role.getId());\n+            }\n+        }\n+\n         return policyTO;\n     }\n "},{"sha":"b7ec00cf403105863111df896f021162854e2424","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":37,"deletions":4,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -21,8 +21,10 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.util.Arrays;\n import java.util.List;\n import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n@@ -61,10 +63,37 @@ public void listByType() {\n     }\n \n     @Test\n-    public void read() {\n+    public void getAccountPolicy() {\n+        AccountPolicyTO policyTO = policyService.read(6L);\n+\n+        assertNotNull(policyTO);\n+        assertTrue(policyTO.getUsedByResources().isEmpty());\n+        assertEquals(Arrays.asList(6L, 7L, 10L, 14L), policyTO.getUsedByRoles());\n+    }\n+\n+    @Test\n+    public void getPasswordPolicy() {\n+        PasswordPolicyTO policyTO = policyService.read(4L);\n+\n+        assertNotNull(policyTO);\n+        assertTrue(policyTO.getUsedByResources().contains(RESOURCE_NAME_NOPROPAGATION));\n+        assertEquals(Arrays.asList(6L, 7L, 10L, 8L), policyTO.getUsedByRoles());\n+    }\n+\n+    @Test\n+    public void getSyncPolicy() {\n         SyncPolicyTO policyTO = policyService.read(1L);\n \n         assertNotNull(policyTO);\n+        assertTrue(policyTO.getUsedByRoles().isEmpty());\n+    }\n+\n+    @Test\n+    public void getGlobalAccountPolicy() {\n+        AccountPolicyTO policyTO = policyService.readGlobal(PolicyType.ACCOUNT);\n+\n+        assertNotNull(policyTO);\n+        assertEquals(PolicyType.GLOBAL_ACCOUNT, policyTO.getType());\n     }\n \n     @Test\n@@ -74,14 +103,18 @@ public void getGlobalPasswordPolicy() {\n         assertNotNull(policyTO);\n         assertEquals(PolicyType.GLOBAL_PASSWORD, policyTO.getType());\n         assertEquals(8, policyTO.getSpecification().getMinLength());\n+        assertFalse(policyTO.getUsedByResources().contains(RESOURCE_NAME_NOPROPAGATION));\n     }\n \n     @Test\n-    public void getGlobalAccountPolicy() {\n-        AccountPolicyTO policyTO = policyService.readGlobal(PolicyType.ACCOUNT);\n+    public void getGlobalSyncPolicy() {\n+        SyncPolicyTO policyTO = policyService.readGlobal(PolicyType.SYNC);\n \n         assertNotNull(policyTO);\n-        assertEquals(PolicyType.GLOBAL_ACCOUNT, policyTO.getType());\n+        assertEquals(PolicyType.GLOBAL_SYNC, policyTO.getType());\n+        assertFalse(policyTO.getUsedByResources().contains(RESOURCE_NAME_CSV));\n+        assertFalse(policyTO.getUsedByResources().contains(RESOURCE_NAME_WS2));\n+        assertTrue(policyTO.getUsedByRoles().isEmpty());\n     }\n \n     @Test"},{"sha":"b5f73d05f55f0b08e54b200d013071afc0741021","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2fcb9137ec48d1ed2655245dd55201b58ca9b44a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=2fcb9137ec48d1ed2655245dd55201b58ca9b44a","patch":"@@ -28,6 +28,7 @@\n import java.security.AccessControlException;\n import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.SerializationUtils;\n \n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.SchemaService;\n@@ -210,7 +211,7 @@ public void issue259() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserTO newUserTO = AttributableOperations.clone(userTO);\n+        UserTO newUserTO = SerializationUtils.clone(userTO);\n         MembershipTO membership = new MembershipTO();\n         membership.setRoleId(2L);\n         newUserTO.getMemberships().add(membership);"}]}