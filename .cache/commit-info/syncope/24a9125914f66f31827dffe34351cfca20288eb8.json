{"sha":"24a9125914f66f31827dffe34351cfca20288eb8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI0YTkxMjU5MTRmNjZmMzE4MjdkZmZlMzQzNTFjZmNhMjAyODhlYjg=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-30T14:57:40Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-30T14:57:40Z"},"message":"error log, SYNCOPE-158","tree":{"sha":"a4594537a0584238f15fc9514646335d9c1b4909","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a4594537a0584238f15fc9514646335d9c1b4909"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/24a9125914f66f31827dffe34351cfca20288eb8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24a9125914f66f31827dffe34351cfca20288eb8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/24a9125914f66f31827dffe34351cfca20288eb8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24a9125914f66f31827dffe34351cfca20288eb8/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"d29be2af7d68b8d726b28d441b2fa1f6b12e89ce","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d29be2af7d68b8d726b28d441b2fa1f6b12e89ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d29be2af7d68b8d726b28d441b2fa1f6b12e89ce"}],"stats":{"total":577,"additions":543,"deletions":34},"files":[{"sha":"7f09c686415a4c8bf32ec85c7d892655dcd2e9f6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -27,7 +27,7 @@\n public final class SyncopeAdm {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeAdm.class);\n-    \n+\n     private static final ResultManager RESULT_MANAGER = new ResultManager();\n \n     public static void main(final String[] args) {\n@@ -55,6 +55,7 @@ public static void main(final String[] args) {\n                 System.out.println(helpMessage());\n             }\n         } catch (final ProcessingException e) {\n+            LOG.error(\"Error in main\", e);\n             RESULT_MANAGER.genericError(\"Syncope server offline\");\n             RESULT_MANAGER.genericError(e.getCause().getMessage());\n         }\n@@ -74,6 +75,7 @@ private static String helpMessage() {\n                 helpMessageBuilder.append(\"\\n\");\n             }\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n+            LOG.error(\"Error in main\", ex);\n             RESULT_MANAGER.genericError(ex.getMessage());\n         }\n "},{"sha":"423139b69186199f64fc1392438f454755be1485","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationDelete.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConfigurationDelete extends AbstractConfigurationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"configuration --delete {CONF-NAME} {CONF-NAME} [...]\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void delete() {\n                     configurationSyncopeOperations.delete(parameter);\n                     configurationResultManager.deletedMessage(\"Configuration\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error deleting configuration\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {"},{"sha":"880f1f70a68184d4a864f24d2dc68c40249134fa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationExport.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -27,10 +27,14 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.xml.sax.SAXException;\n \n public class ConfigurationExport extends AbstractConfigurationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationExport.class);\n+\n     private static final String EXPORT_HELP_MESSAGE = \"configuration --export {WHERE-DIR}\";\n \n     private static final String EXPORT_FILE_NAME = \"/content.xml\";\n@@ -50,18 +54,22 @@ public void export() {\n                 configurationResultManager.genericMessage(\n                         input.firstParameter() + EXPORT_FILE_NAME + \" successfully created\");\n             } catch (final IOException ex) {\n+                LOG.error(\"Error exporting configuration\", ex);\n                 configurationResultManager.genericError(ex.getMessage());\n             } catch (ParserConfigurationException | SAXException | TransformerConfigurationException ex) {\n+                LOG.error(\"Error exporting configuration\", ex);\n                 configurationResultManager.genericError(\n                         \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n             } catch (final TransformerException ex) {\n+                LOG.error(\"Error exporting configuration\", ex);\n                 if (ex.getCause() instanceof FileNotFoundException) {\n                     configurationResultManager.genericError(\"Permission denied on \" + input.firstParameter());\n                 } else {\n                     configurationResultManager.genericError(\n                             \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n                 }\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error exporting configuration\", ex);\n                 configurationResultManager.genericError(\"Error calling configuration service \" + ex.getMessage());\n             }\n         } else {"},{"sha":"300cd17593a9bc8ba5ff6c2f2e2e5ac9dc1ffa0b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationGet.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import java.util.LinkedList;\n import org.apache.syncope.client.cli.Input;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConfigurationGet extends AbstractConfigurationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationGet.class);\n+\n     private static final String GET_HELP_MESSAGE = \"configuration --get\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void get() {\n             try {\n                 configurationResultManager.fromGet(new LinkedList<>(configurationSyncopeOperations.list()));\n             } catch (final Exception ex) {\n+                LOG.error(\"Error getting configuration\", ex);\n                 configurationResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"0ad21c735b44c48683ff7782fbecb6fffabbd20d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationRead.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConfigurationRead extends AbstractConfigurationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"configuration --read {CONF-NAME} {CONF-NAME} [...]\";\n \n     private final Input input;\n@@ -42,6 +46,7 @@ public void read() {\n                 try {\n                     attrList.add(configurationSyncopeOperations.get(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading configuration\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else {"},{"sha":"4ec152c93b3a6f12419f5ecd975e4cface4a1c6a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConfigurationUpdate extends AbstractConfigurationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationUpdate.class);\n+\n     private static final String UPDATE_HELP_MESSAGE\n             = \"configuration --update {CONF-NAME}={CONF-VALUE} {CONF-NAME}={CONF-VALUE} [...]\";\n \n@@ -50,11 +54,13 @@ public void update() {\n                     configurationSyncopeOperations.set(attrTO);\n                     attrList.add(attrTO);\n                 } catch (final IllegalArgumentException ex) {\n+                    LOG.error(\"Error updating configuration\", ex);\n                     configurationResultManager.genericError(ex.getMessage());\n                     configurationResultManager.genericError(UPDATE_HELP_MESSAGE);\n                     failed = true;\n                     break;\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error updating configuration\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", pairParameter.getKey());\n                     } else if (ex.getMessage().startsWith(\"InvalidValues\")) {"},{"sha":"2abc5ba26fd0f7f9513ed3f8be2edf598571aee5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorDelete extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"connector --delete {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n \n     private final Input input;\n@@ -45,7 +49,9 @@ public void delete() {\n                 } catch (final NumberFormatException ex) {\n                     connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error deleting connector\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        LOG.error(\"Error deleting connector\", ex);\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {\n                         connectorResultManager.genericError(ex.getMessage());"},{"sha":"dee5e7afd76297486ec200f821bced629f5a7e21","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDetails.java","status":"modified","additions":42,"deletions":32,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,12 +22,17 @@\n import java.util.Map;\n import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorDetails extends AbstractConnectorCommand {\n \n-    private static final String LIST_HELP_MESSAGE = \"connector --details\";\n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDetails.class);\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"connector --details\";\n \n     private final Input input;\n \n@@ -37,40 +42,45 @@ public ConnectorDetails(final Input input) {\n \n     public void details() {\n         if (input.parameterNumber() == 0) {\n-            final Map<String, String> details = new LinkedMap<>();\n-            final List<ConnInstanceTO> connInstanceTOs = connectorSyncopeOperations.list();\n-            int withCreateCapability = 0;\n-            int withDeleteCapability = 0;\n-            int withSearchCapability = 0;\n-            int withSyncCapability = 0;\n-            int withUpdateCapability = 0;\n-            for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n-                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.CREATE)) {\n-                    withCreateCapability++;\n-                }\n-                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.DELETE)) {\n-                    withDeleteCapability++;\n-                }\n-                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n-                    withSearchCapability++;\n-                }\n-                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SYNC)) {\n-                    withSyncCapability++;\n-                }\n-                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n-                    withUpdateCapability++;\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<ConnInstanceTO> connInstanceTOs = connectorSyncopeOperations.list();\n+                int withCreateCapability = 0;\n+                int withDeleteCapability = 0;\n+                int withSearchCapability = 0;\n+                int withSyncCapability = 0;\n+                int withUpdateCapability = 0;\n+                for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n+                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.CREATE)) {\n+                        withCreateCapability++;\n+                    }\n+                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.DELETE)) {\n+                        withDeleteCapability++;\n+                    }\n+                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n+                        withSearchCapability++;\n+                    }\n+                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SYNC)) {\n+                        withSyncCapability++;\n+                    }\n+                    if (connInstanceTO.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n+                        withUpdateCapability++;\n+                    }\n                 }\n+                details.put(\"Total number\", String.valueOf(connInstanceTOs.size()));\n+                details.put(\"With create capability\", String.valueOf(withCreateCapability));\n+                details.put(\"With delete capability\", String.valueOf(withDeleteCapability));\n+                details.put(\"With search capability\", String.valueOf(withSearchCapability));\n+                details.put(\"With sync capability\", String.valueOf(withSyncCapability));\n+                details.put(\"With update capability\", String.valueOf(withUpdateCapability));\n+                details.put(\"Bundles number\", String.valueOf(connectorSyncopeOperations.getBundles().size()));\n+                connectorResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about connector\", ex);\n+                connectorResultManager.genericError(ex.getMessage());\n             }\n-            details.put(\"Total number\", String.valueOf(connInstanceTOs.size()));\n-            details.put(\"With create capability\", String.valueOf(withCreateCapability));\n-            details.put(\"With delete capability\", String.valueOf(withDeleteCapability));\n-            details.put(\"With search capability\", String.valueOf(withSearchCapability));\n-            details.put(\"With sync capability\", String.valueOf(withSyncCapability));\n-            details.put(\"With update capability\", String.valueOf(withUpdateCapability));\n-            details.put(\"Bundles number\", String.valueOf(connectorSyncopeOperations.getBundles().size()));\n-            connectorResultManager.printDetails(details);\n         } else {\n-            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+            connectorResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"19d81a4e20d5a02196037c6858f4540b2b4628e4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorList extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"connector --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 connectorResultManager.printConnectors(connectorSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listening connector\", ex);\n                 connectorResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"1327120c5d15ea37f1adaa44047d9e819cda1dc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListBundles.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorListBundles extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorListBundles.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"connector --list-bundles\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 connectorResultManager.printBundles(connectorSyncopeOperations.getBundles());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listening connector\", ex);\n                 connectorResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"da54e4ac12df2ca6a5e87c9baef66684ed919664","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListConfigurationProperties.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorListConfigurationProperties extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorListConfigurationProperties.class);\n+\n     private static final String LIST_CONFIGURATION_HELP_MESSAGE\n             = \"connector --list-configuration-properties {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n \n@@ -40,8 +44,10 @@ public void list() {\n                     connectorResultManager.printConfigurationProperties(\n                             connectorSyncopeOperations.read(parameter).getConf());\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error listening connector\", ex);\n                     connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error listening connector\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {"},{"sha":"c33250570e5bd8d023fbb17efe078ea48c580515","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorRead extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"connector --read {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n \n     private final Input input;\n@@ -38,8 +42,10 @@ public void read() {\n                 try {\n                     connectorResultManager.printConnector(connectorSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading connector\", ex);\n                     connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading connector\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {"},{"sha":"1dba6f1cb7f712fdcadc02268d444d96855aa0db","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorReadByResource.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ConnectorReadByResource extends AbstractConnectorCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorReadByResource.class);\n+\n     private static final String READ_HELP_MESSAGE\n             = \"connector --read-by-resource {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n \n@@ -39,6 +43,7 @@ public void read() {\n                 try {\n                     connectorResultManager.printConnector(connectorSyncopeOperations.readByResource(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading connector\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Resource\", parameter);\n                     } else {"},{"sha":"d666301f18adb1323f7690756986e52a05b46e92","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDelete.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DomainDelete extends AbstractDomainCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(DomainDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"domain --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n \n     private final Input input;\n@@ -38,6 +42,7 @@ public void delete() {\n                     domainSyncopeOperations.delete(parameter);\n                     domainResultManager.deletedMessage(\"Domain\", parameter);\n                 } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting domain\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         domainResultManager.notFoundError(\"Domain\", parameter);\n                     } else {"},{"sha":"9e280d8dd5b5054e9d5ae9d7989373bd36a44973","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,9 +22,13 @@\n import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DomainDetails extends AbstractDomainCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(DomainDetails.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"domain --details\";\n \n     private final Input input;\n@@ -40,6 +44,7 @@ public void details() {\n                 details.put(\"Total number\", String.valueOf(domainSyncopeOperations.list().size()));\n                 domainResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about domain\", ex);\n                 domainResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"aa4a0f8920d57f2e2c51cc12505e798a9ad42980","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DomainList extends AbstractDomainCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(DomainList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"domain --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 domainResultManager.printDomains(domainSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing domain\", ex);\n                 domainResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"015bf06f8ac8f19a88674f931bd98d751c383563","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainRead.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DomainRead extends AbstractDomainCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(DomainRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"domain --read {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n \n     private final Input input;\n@@ -37,6 +41,7 @@ public void read() {\n                 try {\n                     domainResultManager.printDomain(domainSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error reading domain\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         domainResultManager.notFoundError(\"Domain\", parameter);\n                     } else {"},{"sha":"575208f5865ec6bd5caeaf5c0765e65955ee493a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementListRole.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RoleTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class EntitlementListRole extends AbstractEntitlementCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(EntitlementListRole.class);\n+\n     private static final String READ_HELP_MESSAGE = \"entitlement --list-role {ENTITLEMENT-NAME}\";\n \n     private final Input input;\n@@ -46,12 +50,14 @@ public void list() {\n                     entitlementResultManager.genericMessage(\"No roles found for entitlement \" + input.firstParameter());\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error reading entitlement\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n                     entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error reading entitlement\", ex);\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n             }\n         } else {"},{"sha":"51bc6023db9b4b55459422b6a1ffbb34a4395aef","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUserId.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class EntitlementReadByUserId extends AbstractEntitlementCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(EntitlementReadByUserId.class);\n+\n     private static final String READ_HELP_MESSAGE = \"entitlement --read-by-userid {USER-ID}\";\n \n     private final Input input;\n@@ -38,12 +42,14 @@ public void read() {\n                 entitlementResultManager.toView(\n                         entitlementSyncopeOperations.userIdEntitlements(input.firstParameter()));\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error reading entitlement\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n                     entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error reading entitlement\", ex);\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n             }\n         } else {"},{"sha":"8e77d7ec5e22d4b0e2cd629732fe8d4dc1ab7c27","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUsername.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class EntitlementReadByUsername extends AbstractEntitlementCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(EntitlementReadByUsername.class);\n+\n     private static final String READ_HELP_MESSAGE = \"entitlement --read-by-username {USERNAME}\";\n \n     private final Input input;\n@@ -39,11 +43,13 @@ public void read() {\n                         entitlementSyncopeOperations.usernameEntitlements(input.firstParameter()));\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    LOG.error(\"Error reading username\", ex);\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n                     entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error reading username\", ex);\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n             }\n         } else {"},{"sha":"fec995ccafbad02b1b566a340d73c6699c5cee2d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSearchByRole.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class EntitlementSearchByRole extends AbstractEntitlementCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(EntitlementSearchByRole.class);\n+\n     private static final String READ_HELP_MESSAGE = \"entitlement --search-by-role {ROLE-ID}\";\n \n     private final Input input;\n@@ -38,12 +42,14 @@ public void search() {\n                 entitlementResultManager.toView(\n                         entitlementSyncopeOperations.entitlementsPerRole(input.firstParameter()));\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error searching entitlement\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n                     entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error searching entitlement\", ex);\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n             }\n         } else {"},{"sha":"41f908bb8445629f4d40d048977acb2c32d65111","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/Help.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class Help {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(Help.class);\n+\n     private final HelpResultManager helpResultManager = new HelpResultManager();\n \n     public void help() {\n@@ -39,6 +43,7 @@ public void help() {\n             }\n             helpResultManager.toView(generalHelpBuilder.toString());\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException e) {\n+            LOG.error(\"Error helping\", e);\n             helpResultManager.genericMessage(e.getMessage());\n         }\n     }"},{"sha":"a1f6956567719e25b3b2e37a39c84de0cca4b0d3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class Info {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(Info.class);\n+\n     private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).info();\n \n     private final InfoResultManager infoResultManager = new InfoResultManager();\n@@ -32,6 +36,7 @@ public void version() {\n         try {\n             infoResultManager.printVersion(syncopeTO.getVersion());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -40,6 +45,7 @@ public void pwdResetAllowed() {\n         try {\n             infoResultManager.printPwdResetAllowed(syncopeTO.isPwdResetAllowed());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -48,6 +54,7 @@ public void resetWithSecurityQuestion() {\n         try {\n             infoResultManager.printPwdResetRequiringSecurityQuestions(syncopeTO.isPwdResetRequiringSecurityQuestions());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -56,6 +63,7 @@ public void selfRegistrationAllowed() {\n         try {\n             infoResultManager.printSelfRegistrationAllowed(syncopeTO.isSelfRegAllowed());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -67,6 +75,7 @@ public void provisioningManager() {\n                     syncopeTO.getUserProvisioningManager(),\n                     syncopeTO.getGroupProvisioningManager());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -78,6 +87,7 @@ public void workflowAdapter() {\n                     syncopeTO.getUserWorkflowAdapter(),\n                     syncopeTO.getGroupWorkflowAdapter());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -86,6 +96,7 @@ public void accountRules() {\n         try {\n             infoResultManager.printAccountRules(syncopeTO.getAccountRules());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -94,6 +105,7 @@ public void connidLocation() {\n         try {\n             infoResultManager.printConnidLocations(syncopeTO.getConnIdLocations());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -102,6 +114,7 @@ public void logicActions() {\n         try {\n             infoResultManager.printLogicActions(syncopeTO.getLogicActions());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -110,6 +123,7 @@ public void mailTemplates() {\n         try {\n             infoResultManager.printMailTemplates(syncopeTO.getMailTemplates());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -118,6 +132,7 @@ public void mappingItemTransformers() {\n         try {\n             infoResultManager.printMappingItemTransformers(syncopeTO.getMappingItemTransformers());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -126,6 +141,7 @@ public void passwordRules() {\n         try {\n             infoResultManager.printPasswordRules(syncopeTO.getPasswordRules());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -134,6 +150,7 @@ public void propagationActions() {\n         try {\n             infoResultManager.printPropagationActions(syncopeTO.getPropagationActions());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -142,6 +159,7 @@ public void pushActions() {\n         try {\n             infoResultManager.printPushActions(syncopeTO.getPushActions());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -150,6 +168,7 @@ public void pushCorrelationActions() {\n         try {\n             infoResultManager.printCorrelationActions(syncopeTO.getPushCorrelationRules());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -158,6 +177,7 @@ public void reportlets() {\n         try {\n             infoResultManager.printReportlets(syncopeTO.getReportlets());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -166,6 +186,7 @@ public void syncActions() {\n         try {\n             infoResultManager.printSyncActions(syncopeTO.getSyncActions());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -174,6 +195,7 @@ public void syncCorrelationRules() {\n         try {\n             infoResultManager.printCorrelationRules(syncopeTO.getSyncCorrelationRules());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -182,6 +204,7 @@ public void taskJobs() {\n         try {\n             infoResultManager.printJobs(syncopeTO.getTaskJobs());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -190,6 +213,7 @@ public void validators() {\n         try {\n             infoResultManager.printValidators(syncopeTO.getValidators());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -198,6 +222,7 @@ public void passwordGenerators() {\n         try {\n             infoResultManager.printPasswordGenerator(syncopeTO.getPasswordGenerator());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }\n@@ -206,6 +231,7 @@ public void virAttrCache() {\n         try {\n             infoResultManager.printVirtualAttributeCacheClass(syncopeTO.getVirAttrCache());\n         } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n         }\n     }"},{"sha":"7c12f3bbcf7186048a6230ef9791a08928792cc0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,10 +23,14 @@\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n @Command(name = \"install\")\n public class InstallCommand extends AbstractCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(InstallCommand.class);\n+\n     private final InstallResultManager installResultManager = new InstallResultManager();\n \n     private static final String HELP_MESSAGE = \"\\nUsage: install [options]\\n\"\n@@ -45,6 +49,7 @@ public void execute(final Input input) {\n                 try {\n                     new InstallSetup().setup();\n                 } catch (final FileNotFoundException | IllegalAccessException ex) {\n+                    LOG.error(\"Error installing CLI\", ex);\n                     installResultManager.genericError(ex.getMessage());\n                     break;\n                 }"},{"sha":"003540ee4dc7321307753c58f49cf961dd27e163","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -27,9 +27,13 @@\n import org.apache.syncope.client.cli.util.FileSystemUtils;\n import org.apache.syncope.client.cli.util.JasyptUtils;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class InstallSetup {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(InstallSetup.class);\n+\n     private final InstallResultManager installResultManager = new InstallResultManager();\n \n     private String syncopeAdminUser;\n@@ -167,8 +171,10 @@ public void setup() throws FileNotFoundException, IllegalAccessException {\n             final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n             installResultManager.installationSuccessful(syncopeService.info().getVersion());\n         } catch (final ProcessingException ex) {\n+            LOG.error(\"Error installing CLI\", ex);\n             installResultManager.manageProcessingException(ex);\n         } catch (final Exception e) {\n+            LOG.error(\"Error installing CLI\", e);\n             installResultManager.manageException(e);\n         }\n     }"},{"sha":"1ba755e4c04bd52ada7cd1d578eed705cd72a25e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -25,9 +25,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerCreate extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerCreate.class);\n+\n     private static final String CREATE_HELP_MESSAGE\n             = \"logger --create {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n \n@@ -52,6 +56,7 @@ public void create() {\n                     loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n+                    LOG.error(\"Error creating logger\", ex);\n                     loggerResultManager.typeNotValidError(\n                             \"logger level\", input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));\n                     failed = true;"},{"sha":"15038c3f30c3ce86d9b428ca01777a6d65b7bb47","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerDelete extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"logger --delete {LOG-NAME} {LOG-NAME} [...]\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void delete() {\n                     loggerSyncopeOperations.delete(parameter);\n                     loggerResultManager.deletedMessage(\"Logger\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting logger\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {"},{"sha":"f10e4ea55511a9089d2f204ebda977e9fab7d1ce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerDetails extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerDetails.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"logger --details\";\n \n     private final Input input;\n@@ -84,6 +88,7 @@ public void details() {\n                 details.put(\"Set to WARN\", String.valueOf(warnLevel));\n                 loggerResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about logger\", ex);\n                 loggerResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"6f936fb2e7c474b6f47e17cc4b2a6512ff5a1d94","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import java.util.LinkedList;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerList extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"logger --list\";\n \n     private final Input input;\n@@ -37,6 +41,7 @@ public void list() {\n             try {\n                 loggerResultManager.fromList(new LinkedList<>(loggerSyncopeOperations.list()));\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing logger\", ex);\n                 loggerResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"634652258268ac963c1cd985b1faa1407202c542","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerRead extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"logger --read {LOG-NAME} {LOG-NAME} [...]\";\n \n     private final Input input;\n@@ -42,6 +46,7 @@ public void read() {\n                 try {\n                     loggerTOs.add(loggerSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading logger\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {"},{"sha":"590d5e25139fc2f68f802db1ba7bc91403e1cd9d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -25,9 +25,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerUpdate extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerUpdate.class);\n+\n     private static final String UPDATE_HELP_MESSAGE\n             = \"logger --update {LOG-NAME}={LOG-LEVEL} {LOG-NAME}={LOG-LEVEL} [...]\";\n \n@@ -51,6 +55,7 @@ public void update() {\n                     loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n+                    LOG.error(\"Error updating logger\", ex);\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n                         loggerResultManager.typeNotValidError(\n                                 \"logger level\","},{"sha":"69f28fea67ab5a7898bb5d554c4d5eb9f24ed767","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -25,9 +25,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LoggerUpdateAll extends AbstractLoggerCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerUpdateAll.class);\n+\n     private static final String UPDATE_ALL_HELP_MESSAGE = \"logger --update-all {LOG-LEVEL}\";\n \n     private final Input input;\n@@ -46,6 +50,7 @@ public void updateAll() {\n                     loggerSyncopeOperations.update(loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n+                    LOG.error(\"Error updating logger\", ex);\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n                         loggerResultManager.typeNotValidError(\n                                 \"logger level\","},{"sha":"0909ff9b06d1e8ebc78f5342f9df36c879331a02","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationDelete.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class NotificationDelete extends AbstractNotificationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(NotificationDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"notification --delete {NOTIFICATION-ID} {NOTIFICATION-ID} [...]\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void delete() {\n                     notificationSyncopeOperations.delete(parameter);\n                     notificationResultManager.deletedMessage(\"Notification\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting notification\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         notificationResultManager.notFoundError(\"Notification\", parameter);\n                     } else {"},{"sha":"463d8e9f12e3c8d2b4a83446f4f2bd27177c3f81","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class NotificationList extends AbstractNotificationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(NotificationList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"notification --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 notificationResultManager.printNotifications(notificationSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing notification\", ex);\n                 notificationResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"7c45e86925029f41f1c57147b0566870630b7f68","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class NotificationRead extends AbstractNotificationCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(NotificationRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"notification --read {NOTIFICATION-ID} {NOTIFICATION-ID} [...]\";\n \n     private final Input input;\n@@ -38,8 +42,10 @@ public void read() {\n                 try {\n                     notificationResultManager.printNotification(notificationSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading notification\", ex);\n                     notificationResultManager.notBooleanDeletedError(\"notification\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error reading notification\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         notificationResultManager.notFoundError(\"Notification\", parameter);\n                     } else {"},{"sha":"b73b770e75471fff58b40cab4fbe200ecc1f8108","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class PolicyDelete extends AbstractPolicyCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(PolicyDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"policy --delete {POLICY-ID} {POLICY-ID} [...]\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void delete() {\n                     policySyncopeOperations.delete(parameter);\n                     policyResultManager.deletedMessage(\"Policy\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting policy\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         policyResultManager.notFoundError(\"Policy\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -47,6 +52,7 @@ public void delete() {\n                         policyResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting policy\", ex);\n                     policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n                 }\n             }"},{"sha":"bb4fdb6d53f56c782a8c97c8052d8e2c2f73efc3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,9 +22,13 @@\n import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class PolicyDetails extends AbstractPolicyCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(PolicyDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"policy --details\";\n \n     private final Input input;\n@@ -51,6 +55,7 @@ public void details() {\n                 details.put(\"push policies\", String.valueOf(pushPolicySize));\n                 policyResultManager.printDetails(details);\n             } catch (final Exception ex) {\n+                LOG.error(\"Error reading details about policy\", ex);\n                 policyResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"9720abfd88a640b4e181efa61cb1f01dac78cce5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class PolicyList extends AbstractPolicyCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(PolicyList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"policy --list-policy {POLICY-TYPE}\\n\"\n             + \"   Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\";\n \n@@ -46,8 +50,10 @@ public void list() {\n                 }\n                 policyResultManager.printPoliciesByType(policyType, policyTOs);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing policy\", ex);\n                 policyResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error listing policy\", ex);\n                 policyResultManager.typeNotValidError(\n                         \"policy\", input.firstParameter(), CommandUtils.fromEnumToArray(PolicyType.class));\n             }"},{"sha":"21874920a4be133ff8a27b148dacaf134734a63b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class PolicyRead extends AbstractPolicyCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(PolicyRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"policy --read {POLICY-ID} {POLICY-ID} [...]\";\n \n     private final Input input;\n@@ -41,8 +45,10 @@ public void read() {\n                 try {\n                     policyTOs.add(policySyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading policy\", ex);\n                     policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error reading policy\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         policyResultManager.notFoundError(\"Policy\", parameter);\n                     } else {"},{"sha":"460f4a6c1949bcf273bf9e858d270da20fb527df","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class QuestionDelete extends AbstractQuestionCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(QuestionDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"question --delete {QUESTION-ID} {QUESTION-ID} [...]\";\n \n     private final Input input;\n@@ -39,13 +43,15 @@ public void delete() {\n                     questionSyncopeOperations.delete(parameter);\n                     questionResultManager.deletedMessage(\"security question\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error deleting question\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         questionResultManager.notFoundError(\"Security question\", parameter);\n                     } else {\n                         questionResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting question\", ex);\n                     questionResultManager.numberFormatException(\"security question\", parameter);\n                 }\n             }"},{"sha":"081d4185b50720b4c235288fcac4bf50c28c8e8c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class QuestionList extends AbstractQuestionCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(QuestionList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"question --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 questionResultManager.printQuestions(questionSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing question\", ex);\n                 questionResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"cfc99a50d17cf6d37b83b1d15315e011fbc33cae","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class QuestionRead extends AbstractQuestionCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(QuestionRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"question --read {QUESTION-ID} {QUESTION-ID} [...]\";\n \n     private final Input input;\n@@ -42,13 +46,15 @@ public void read() {\n                 try {\n                     questionTOs.add(questionSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading question\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         questionResultManager.notFoundError(\"Security question\", parameter);\n                     } else {\n                         questionResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading question\", ex);\n                     questionResultManager.numberFormatException(\"security question\", parameter);\n                 }\n             }"},{"sha":"b1007c21d64d7b32ad9afb227a7cfe8eb8da2906","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,9 +22,13 @@\n import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RealmDetails extends AbstractRealmCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RealmDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"realm --details\";\n \n     private final Input input;\n@@ -40,6 +44,7 @@ public void details() {\n                 details.put(\"Total number\", String.valueOf(realmSyncopeOperations.list().size()));\n                 realmResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about realm\", ex);\n                 realmResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"8a444ac06c02a53a4f6b65d8721ced820d428fc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RealmList extends AbstractRealmCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RealmList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"realm --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 realmResultManager.printRealms(realmSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing realm\", ex);\n                 realmResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"c20ccc21c044358f9159b23dd299d7e7bc9dad8d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportDelete extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"report --delete {REPORT-ID} {REPORT-ID} [...]\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void delete() {\n                     reportSyncopeOperations.delete(parameter);\n                     reportResultManager.deletedMessage(\"Report\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting report\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -47,6 +52,7 @@ public void delete() {\n                         reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting report\", ex);\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }"},{"sha":"653a475415d1dd61bb7db5e67ee64f15feaac92a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDeleteExecution.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportDeleteExecution extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportDeleteExecution.class);\n+\n     private static final String DELETE_EXECUTION_HELP_MESSAGE\n             = \"report --delete-execution {EXECUTION-ID} {EXECUTION-ID} [...]\";\n \n@@ -40,6 +44,7 @@ public void delete() {\n                     reportSyncopeOperations.deleteExecution(parameter);\n                     reportResultManager.deletedMessage(\"Report execution\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting execution\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -48,6 +53,7 @@ public void delete() {\n                         reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting execution\", ex);\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }"},{"sha":"e7cff761ae93dc31aab2bac47b7ce99f0950b098","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportDetails extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportDetails.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"report --details\";\n \n     private final Input input;\n@@ -50,6 +54,7 @@ public void details() {\n                 details.put(\"Never executed\", String.valueOf(withoutExecutions));\n                 reportResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about report\", ex);\n                 reportResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"284ede183fefcdb5451ef4a92f0e394cbd9176da","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExecute.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportExecute extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportExecute.class);\n+\n     private static final String EXECUTE_HELP_MESSAGE = \"report --execute {REPORT-ID}\";\n \n     private final Input input;\n@@ -44,6 +48,7 @@ public void execute() {\n                 final ReportExecTO lastExecution = executionList.get(executionList.size() - 1);\n                 reportResultManager.printReportExecution(Arrays.asList(lastExecution));\n             } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error executin report\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     reportResultManager.notFoundError(\"Report\", input.firstParameter());\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -52,6 +57,7 @@ public void execute() {\n                     reportResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error executin report\", ex);\n                 reportResultManager.numberFormatException(\"report\", input.firstParameter());\n             }\n         } else {"},{"sha":"eadcbbcdb619967cbbdb68c70eee380159e4f548","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExportExecution.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -29,10 +29,14 @@\n import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.xml.sax.SAXException;\n \n public class ReportExportExecution extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportExportExecution.class);\n+\n     private static final String EXPORT_EXECUTION_HELP_MESSAGE\n             = \"report --export-execution-result {EXECUTION-ID} {EXECUTION-ID} [...] {FORMAT}\\n\"\n             + \"          Format: CSV / HTML / PDF / XML / RTF\";\n@@ -74,17 +78,21 @@ public void export() {\n                             break;\n                     }\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error exporting execution\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n                         reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error exporting execution\", ex);\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 } catch (IOException | ParserConfigurationException | SAXException | TransformerException e) {\n+                    LOG.error(\"Error exporting execution\", e);\n                     reportResultManager.genericError(\n                             \" - Error creating \" + \"export_\" + parameter + \" \" + e.getMessage());\n                 } catch (final IllegalArgumentException ex) {\n+                    LOG.error(\"Error exporting execution\", ex);\n                     reportResultManager.typeNotValidError(\n                             \"format\", input.firstParameter(),\n                             CommandUtils.fromEnumToArray(ReportExecExportFormat.class));"},{"sha":"719e1dcc99d0d36a49a06a0a8dc486f7c69b8643","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportList extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"report --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 reportResultManager.printReports(reportSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing report\", ex);\n                 reportResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"d9ce4754ccedb3ba8fdcfeb03382d6165b728d6a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportListJobs.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.JobStatusType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportListJobs extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportListJobs.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"report --list-jobs\";\n \n     private final Input input;\n@@ -39,6 +43,7 @@ public void list() {\n                     reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType));\n                 }\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing report\", ex);\n                 reportResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"9ccebc8686f68798fb14e8eb9e979fc00272bee2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportRead extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"report --read {REPORT-ID} {REPORT-ID} [...]\";\n \n     private final Input input;\n@@ -42,8 +46,10 @@ public void read() {\n                 try {\n                     reportTOs.add(reportSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading report\", ex);\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error reading report\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {"},{"sha":"2c1ec07a28133554bffe0d436d82439ab9e892c5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportReadExecution.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ReportReadExecution extends AbstractReportCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ReportReadExecution.class);\n+\n     private static final String READ_EXECUTION_HELP_MESSAGE\n             = \"report --read-execution {EXECUTION-ID} {EXECUTION-ID} [...]\";\n \n@@ -43,12 +47,14 @@ public void read() {\n                 try {\n                     reportExecTOs.add(reportSyncopeOperations.readExecution(parameter));\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error reading report execution\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n                         reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading report execution\", ex);\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 }\n             }"},{"sha":"a36ec6c4a545319965bd16dc7a0464eaaf66ae72","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDelete.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -17,12 +17,17 @@\n  * under the License.\n  */\n package org.apache.syncope.client.cli.commands.resource;\n+\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ResourceDelete extends AbstractResourceCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"resource --delete {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n \n     private final Input input;\n@@ -38,8 +43,10 @@ public void delete() {\n                     resourceSyncopeOperations.delete(parameter);\n                     resourceResultManager.deletedMessage(\"resource\", parameter);\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting resource\", ex);\n                     resourceResultManager.numberFormatException(\"resource\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error deleting resource\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);\n                     } else {"},{"sha":"5d0f90b307b074f0049c35340f1c516d6c74f835","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ResourceDetails extends AbstractResourceCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"resource --details\";\n \n     private final Input input;\n@@ -43,6 +47,7 @@ public void details() {\n                 details.put(\"Total numbers\", String.valueOf(resourceTOs.size()));\n                 resourceResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about resource\", ex);\n                 resourceResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"203254333df6103e2b348ec3954973dfdeddd8b9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ResourceList extends AbstractResourceCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"resource --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 resourceResultManager.printResources(resourceSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing resource\", ex);\n                 resourceResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"fb0f133e2527edc363fe268cadb4a5ef07fa27c8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceRead.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -17,15 +17,20 @@\n  * under the License.\n  */\n package org.apache.syncope.client.cli.commands.resource;\n+\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ResourceRead extends AbstractResourceCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"resource --read {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n \n     private final Input input;\n@@ -41,8 +46,10 @@ public void read() {\n                 try {\n                     resourceTOs.add(resourceSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading resource\", ex);\n                     resourceResultManager.numberFormatException(\"resource\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading resource\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);\n                     } else {"},{"sha":"a16392c761117cf22a3900c805ef47456d171db3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RoleDelete extends AbstractRoleCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RoleDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"role --delete {ROLE-ID} {ROLE-ID} [...]\";\n \n     private final Input input;\n@@ -39,13 +43,15 @@ public void delete() {\n                     roleSyncopeOperations.delete(parameter);\n                     roleResultManager.deletedMessage(\"role\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error deleting role\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         roleResultManager.notFoundError(\"Role\", parameter);\n                     } else {\n                         roleResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting role\", ex);\n                     roleResultManager.numberFormatException(\"role\", parameter);\n                 }\n             }"},{"sha":"1206adf4d7f996b5ac4a7638b38b54ae3a71d591","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RoleTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RoleDetails extends AbstractRoleCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RoleDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"role --details\";\n \n     private final Input input;\n@@ -50,6 +54,7 @@ public void details() {\n                 details.put(\"Without entitlements\", String.valueOf(withoutEntitlements));\n                 roleResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about role\", ex);\n                 roleResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"9aaabab7c4808281a86ed085f9615af61d8abadb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RoleList extends AbstractRoleCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RoleList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"role --list\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 roleResultManager.printRoles(roleSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing role\", ex);\n                 roleResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"75ecc7670fb7851aee41e51bfe31d7233aef3e3e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RoleTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class RoleRead extends AbstractRoleCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(RoleRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"role --read {ROLE-ID} {ROLE-ID} [...]\";\n \n     private final Input input;\n@@ -42,13 +46,15 @@ public void read() {\n                 try {\n                     roleTOs.add(roleSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading role\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         roleResultManager.notFoundError(\"Role\", parameter);\n                     } else {\n                         roleResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading role\", ex);\n                     roleResultManager.numberFormatException(\"user\", parameter);\n                 }\n             }"},{"sha":"5b33f93ebda8871c1672be30cac65c12fd1b1eb5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaDelete extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"schema --delete {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n             + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n \n@@ -45,6 +49,7 @@ public void delete() {\n                     schemaResultManager.deletedMessage(\"Schema\", parameter);\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error deleting schema\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -53,6 +58,7 @@ public void delete() {\n                     schemaResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error deleting schema\", ex);\n                 schemaResultManager.typeNotValidError(\n                         \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n             }"},{"sha":"bfdcdd6573407a0c0450984b040721a7b9849a54","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaDetails extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"schema --details\";\n \n     private final Input input;\n@@ -49,6 +53,7 @@ public void details() {\n                 details.put(\"virtual schema\", String.valueOf(virtualSchemaSize));\n                 schemaResultManager.printDetails(details);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error reading details about schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"3b2bc83cff90f801df41dc521feafa27917d7638","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaList.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaList extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"schema --list {SCHEMA-TYPE}\\n\"\n             + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n \n@@ -58,8 +62,10 @@ public void list() {\n                         break;\n                 }\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.typeNotValidError(\n                         \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n             }"},{"sha":"490eab08b03c4262317e4f5a0bc87ca4e64b217e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListAll.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaListAll extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaListAll.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"schema --list-all\";\n \n     private final Input input;\n@@ -58,6 +62,7 @@ public void listAll() {\n                     }\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"c47af9f6ee931037a0feb758af99ac0a4eaedfa6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListDerived.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaListDerived extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaListDerived.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"schema --list-derived\";\n \n     private final Input input;\n@@ -43,6 +47,7 @@ public void listDerived() {\n                 }\n                 schemaResultManager.fromListDerived(schemaTOs);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"cbb6f77d98e01bf992b62baa037b79d6448fd809","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListPlain.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaListPlain extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaListPlain.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"schema --list-plain\";\n \n     private final Input input;\n@@ -43,6 +47,7 @@ public void listPlain() {\n                 }\n                 schemaResultManager.printSchemas(schemaTOs);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"31d3657a9717e81a73ee083c5879cc689ad2f6e7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListVirtual.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaListVirtual extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaListVirtual.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"schema --list-virtual\";\n \n     private final Input input;\n@@ -43,6 +47,7 @@ public void listVirtual() {\n                 }\n                 schemaResultManager.fromListVirtual(schemaTOs);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"599148e8298d0537d5adbbd5d82fa8cec0ddc06f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -26,9 +26,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class SchemaRead extends AbstractSchemaCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SchemaRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"schema --read {SCHEMA-TYPE} {SCHEMA-KEY}\\n\"\n             + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n \n@@ -61,12 +65,14 @@ public void read() {\n                         break;\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n                 } else {\n                     schemaResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n                 schemaResultManager.typeNotValidError(\n                         \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n             }"},{"sha":"b21abf39bcc0835d342cb97db7d7cad26f717170","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/AbstractWorkflowCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands.self;\n \n-public class AbstractWorkflowCommand {\n+public abstract class AbstractWorkflowCommand {\n \n     protected final WorkflowResultManager workflowResultManager = new WorkflowResultManager();\n "},{"sha":"25d326adf1588ed29403b99a13701eeb8aae869b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDefinition.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class WorkflowExportDefinition extends AbstractWorkflowCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(WorkflowExportDefinition.class);\n+\n     private static final String EXPORT_HELP_MESSAGE = \"workflow --export-definition {ANY-TYPE-KIND}\\n\";\n \n     private final Input input;\n@@ -40,12 +44,14 @@ public void export() {\n                 final AnyTypeKind anyTypeKind = AnyTypeKind.valueOf(input.firstParameter());\n                 System.out.println(\" > > > > \" + workflowSyncopeOperations.exportDefinition(anyTypeKind).getEntity());\n             } catch (final SyncopeClientException | WebServiceException ex) {\n+                LOG.error(\"Error\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     workflowResultManager.notFoundError(\"Workflow\", input.firstParameter());\n                 } else {\n                     workflowResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error\", ex);\n                 workflowResultManager.typeNotValidError(\n                         \"workflow\", input.firstParameter(), CommandUtils.fromEnumToArray(AnyTypeKind.class));\n             }"},{"sha":"d5fbfef4fba80bd5762f8e4877b9c81b63ef099d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskDelete extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"task --delete {TASK-ID} {TASK-ID} [...]\";\n \n     private final Input input;\n@@ -40,6 +44,7 @@ public void delete() {\n                     taskSyncopeOperations.delete(parameter);\n                     taskResultManager.deletedMessage(\"Task\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting task\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -48,6 +53,7 @@ public void delete() {\n                         taskResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting task\", ex);\n                     taskResultManager.notBooleanDeletedError(\"task\", parameter);\n                 }\n             }"},{"sha":"e4a325edd2cc3bae33f917eed4387a2638813a68","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -32,9 +32,13 @@\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskDetails extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskDetails.class);\n+\n     private static final String DETAILS_HELP_MESSAGE = \"task --details\";\n \n     private final Input input;\n@@ -125,8 +129,10 @@ public void details() {\n                 details.put(\"scheduled jobs\", String.valueOf(scheduledJobsSize));\n                 taskResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about task\", ex);\n                 taskResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading details about task\", ex);\n                 taskResultManager.typeNotValidError(\n                         \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n             }"},{"sha":"7c97de45159d911d4cd44cab595cb65b63e07464","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecute.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,9 +22,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskExecute extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskExecute.class);\n+\n     private static final String EXECUTE_HELP_MESSAGE = \"task --execute {TASK-ID} {DRY-RUN}\\n\"\n             + \"          Dry run: true / false\";\n \n@@ -48,6 +52,7 @@ public void execute() {\n                 taskResultManager.printTaskExecTO(Arrays.asList(\n                         taskSyncopeOperations.execute(input.firstParameter(), dryRun)));\n             } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error executing task\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     taskResultManager.notFoundError(\"Task\", input.firstParameter());\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -56,6 +61,7 @@ public void execute() {\n                     taskResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n+                LOG.error(\"Error executing task\", ex);\n                 taskResultManager.notBooleanDeletedError(\"task\", input.firstParameter());\n             }\n         } else {"},{"sha":"a39ba6a9fdcf150d1f228ccc9c43eb1a73872f43","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskExecutionDelete extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskExecutionDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"task --delete-execution \"\n             + \"{TASK-EXEC-ID} {TASK-EXEC-ID} [...]\";\n \n@@ -40,6 +44,7 @@ public void delete() {\n                     taskSyncopeOperations.deleteExecution(parameter);\n                     taskResultManager.deletedMessage(\"Task execution\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting execution\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task execution\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n@@ -48,6 +53,7 @@ public void delete() {\n                         taskResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting execution\", ex);\n                     taskResultManager.notBooleanDeletedError(\"task execution\", parameter);\n                 }\n             }"},{"sha":"be17d25a34c269cf4c114655dd683eb18b338fd5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -22,9 +22,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskExecutionRead extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskExecutionRead.class);\n+\n     private static final String EXECUTION_READ_HELP_MESSAGE = \"task --read-execution {TASK-ID} {TASK-ID} [...]\";\n \n     private final Input input;\n@@ -40,8 +44,10 @@ public void read() {\n                     taskResultManager.printTaskExecTO(\n                             Arrays.asList(taskSyncopeOperations.readExecution(parameter)));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading task\", ex);\n                     taskResultManager.notBooleanDeletedError(\"task execution\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading task\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task execution\", parameter);\n                     } else {"},{"sha":"699b28781367c688135c9e5fe4a6376c361954e3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskList extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"task --list-task {TASK-TYPE}\\n\"\n             + \"   Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\";\n \n@@ -46,8 +50,10 @@ public void list() {\n                 }\n                 taskResultManager.printTasksType(taskType, taskTOs);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing task\", ex);\n                 taskResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error listing task\", ex);\n                 taskResultManager.typeNotValidError(\n                         \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n             }"},{"sha":"928af359391610355a4750237eb5eb0b949b7224","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskListRunningJobs.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskListRunningJobs extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskListRunningJobs.class);\n+\n     private static final String READ_HELP_MESSAGE = \"task --list-running-jobs\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 taskResultManager.printTaskExecTO(taskSyncopeOperations.listRunningJobs());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing jobs\", ex);\n                 taskResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"1710d7947feaaecf3fd2d2f413976e87d41088ea","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskListScheduledJobs.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskListScheduledJobs extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskListScheduledJobs.class);\n+\n     private static final String READ_HELP_MESSAGE = \"task --list-scheduled-jobs\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void list() {\n             try {\n                 taskResultManager.printTaskExecTO(taskSyncopeOperations.listScheduledJobs());\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing task\", ex);\n                 taskResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"f50f1f789c25db68b0ff4ec4006c1a84c42bb190","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -23,9 +23,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class TaskRead extends AbstractTaskCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(TaskRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"task --read {TASK-ID} {TASK-ID} [...]\";\n \n     private final Input input;\n@@ -41,8 +45,10 @@ public void read() {\n                 try {\n                     taskTOs.add(taskSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading task\", ex);\n                     taskResultManager.notBooleanDeletedError(\"task\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading task\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task\", parameter);\n                     } else {"},{"sha":"f3388443f4dec78fce44e6f1a6937d16b838bfb6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDelete.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -21,9 +21,13 @@\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserDelete extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserDelete.class);\n+\n     private static final String DELETE_HELP_MESSAGE = \"user --delete {USER-ID} {USER-ID} [...]\";\n \n     private final Input input;\n@@ -39,12 +43,14 @@ public void delete() {\n                     userSyncopeOperations.delete(parameter);\n                     userResultManager.deletedMessage(\"User\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting user\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         userResultManager.notFoundError(\"User\", parameter);\n                     } else {\n                         userResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error deleting user\", ex);\n                     userResultManager.numberFormatException(\"user\", parameter);\n                 }\n             }"},{"sha":"c4df03e559ef6848527027b4b26d40ad08f5d551","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDetails.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserDetails extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserDetails.class);\n+\n     private static final String COUNT_HELP_MESSAGE = \"user --details\";\n \n     private final Input input;\n@@ -64,6 +68,7 @@ public void details() {\n                 details.put(\"Without roles\", String.valueOf(withoutRole));\n                 userResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"ed46ad1eacc7dd7b9ed43b530c746213b864930c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetKey.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserGetKey extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserGetKey.class);\n+\n     private static final String GET_HELP_MESSAGE = \"user --get-user-key {USERNAME}\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void get() {\n             try {\n                 userResultManager.genericMessage(userSyncopeOperations.getIdFromUsername(input.firstParameter()));\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error getting user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"d705a83830d354049f2be088a43ddc951a8d234d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetUsername.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -20,9 +20,13 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserGetUsername extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserGetUsername.class);\n+\n     private static final String GET_HELP_MESSAGE = \"user --get-username {USER-ID}\";\n \n     private final Input input;\n@@ -36,6 +40,7 @@ public void get() {\n             try {\n                 userResultManager.genericMessage(userSyncopeOperations.getUsernameFromId(input.firstParameter()));\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error getting user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"e49874795647d6f870b21565baf0f1636aee52d6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserList.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserList extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserList.class);\n+\n     private static final String LIST_HELP_MESSAGE = \"user --list\";\n \n     private final Input input;\n@@ -52,6 +56,7 @@ public void list() {\n                     userResultManager.genericError(\"Invalid parameter, please use [yes/no]\");\n                 }\n             } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n             }\n         } else {"},{"sha":"6192135571d72080954a0fc6a3063fdc2c98cf65","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserRead.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserRead extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserRead.class);\n+\n     private static final String READ_HELP_MESSAGE = \"user --read {USER-ID} {USER-ID} [...]\";\n \n     private final Input input;\n@@ -42,13 +46,15 @@ public void read() {\n                 try {\n                     userTOs.add(userSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n+                    LOG.error(\"Error reading user\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         userResultManager.notFoundError(\"User\", parameter);\n                     } else {\n                         userResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n+                    LOG.error(\"Error reading user\", ex);\n                     userResultManager.numberFormatException(\"user\", parameter);\n                 }\n             }"},{"sha":"874c6a4d22c429904bb275554a7346f877b19729","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserSearchByAttribute extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByAttribute.class);\n+\n     private static final String SEARCH_HELP_MESSAGE = \"user --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\";\n \n     private final Input input;\n@@ -55,12 +59,14 @@ public void search() {\n                     userResultManager.printUsers(userTOs);\n                 }\n             } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error searching user\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n                 } else {\n                     userResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error searching user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }"},{"sha":"0fb7b9f66e84971d394cfc02abd4f25933b0feea","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByResource.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -25,9 +25,13 @@\n import org.apache.syncope.client.cli.commands.resource.ResourceSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserSearchByResource extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByResource.class);\n+\n     private static final String SEARCH_HELP_MESSAGE = \"user --search {REALM} {RESOURCE-NAME}\";\n \n     private final Input input;\n@@ -59,6 +63,7 @@ public void search() {\n                     userResultManager.printUsers(userTOs);\n                 }\n             } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error searching user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }"},{"sha":"861c9e9270ea8acb4e0b4f73177223cf9b43d4d5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByRole.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a9125914f66f31827dffe34351cfca20288eb8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java?ref=24a9125914f66f31827dffe34351cfca20288eb8","patch":"@@ -24,9 +24,13 @@\n import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class UserSearchByRole extends AbstractUserCommand {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(UserSearchByRole.class);\n+\n     private static final String SEARCH_HELP_MESSAGE = \"user --search {REALM} {ROLE-ID}\";\n \n     private final Input input;\n@@ -53,6 +57,7 @@ public void search() {\n                     userResultManager.printUsers(userTOs);\n                 }\n             } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error searching user\", ex);\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }"}]}