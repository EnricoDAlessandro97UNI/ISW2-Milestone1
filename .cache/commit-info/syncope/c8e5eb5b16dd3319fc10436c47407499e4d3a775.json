{"sha":"c8e5eb5b16dd3319fc10436c47407499e4d3a775","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM4ZTVlYjViMTZkZDMzMTlmYzEwNDM2YzQ3NDA3NDk5ZTRkM2E3NzU=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-01-03T08:07:36Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-03-07T14:21:51Z"},"message":"[SYNCOPE-1421] first working release of enduser 3.0, added ui-commons module","tree":{"sha":"aaa8b902e230ee734a8cb21912205b078ee3ae90","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/aaa8b902e230ee734a8cb21912205b078ee3ae90"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c8e5eb5b16dd3319fc10436c47407499e4d3a775","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c8e5eb5b16dd3319fc10436c47407499e4d3a775","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c8e5eb5b16dd3319fc10436c47407499e4d3a775","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c8e5eb5b16dd3319fc10436c47407499e4d3a775/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"431c351342e06aaf21a2984488b0259c891ff612","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/431c351342e06aaf21a2984488b0259c891ff612","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/431c351342e06aaf21a2984488b0259c891ff612"}],"stats":{"total":16588,"additions":15211,"deletions":1377},"files":[{"sha":"9e84c74374867e3947de50f1eda69f31a74e195a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"961c6676ede7691e3258d3d6284f55ee695e26bd","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyWizardBuilderAdditionalSteps.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyWizardBuilderAdditionalSteps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyWizardBuilderAdditionalSteps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyWizardBuilderAdditionalSteps.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n-import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n-import org.apache.syncope.client.console.layout.AnyForm;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.Resources;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.extensions.wizard.WizardModel;"},{"sha":"557d18266457dbd63f99beb699a973a2da5a4d5e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMStatusProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.status.ReconStatusUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;"},{"sha":"dae1ba6036933deee4e81896e0f5e8505a776801","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.commons.status;\n \n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;"},{"sha":"ca8940329408bdbaa5417e03e8ff412ce5aacef8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnInstanceHistoryConfDirectoryPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;"},{"sha":"f0ff98caaae7edaab1b44d1f0316fc7d98b1b05c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,8 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;"},{"sha":"bc64d5de2e3380d6dd58cf681671c9435953192c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/HistoryConfDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n import org.apache.syncope.common.lib.to.AbstractHistoryConf;"},{"sha":"b4f4125cb90611d947847710b052628f76429699","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/HistoryConfList.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;"},{"sha":"891202ff7958309e3fc3064aa5e739baa0f72102","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ProvisionAuxClassesPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FProvisionAuxClassesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.EntityTO;"},{"sha":"b0d01fcf9e7c8f21ea60ae4e16760c1dd1bf5714","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/RemediationDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -46,9 +46,9 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n import org.apache.syncope.common.lib.AnyOperations;"},{"sha":"59e27678bb10e2919b0e2f8e0fd42d1eb89ccc2f","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ResourceHistoryConfDirectoryPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;"},{"sha":"1e339452f8b9ced5c18407e1c608679499aca690","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -29,10 +29,10 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.EntityTO;"},{"sha":"72e946f01747ddee5cbd8f0cd69cadeb6f262c0e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -65,14 +65,17 @@ public ConnInstanceTO create(final ConnInstanceTO connectorTO) {\n \n     public List<String> getObjectClasses(final String connectorKey) {\n         List<String> result = new ArrayList<>();\n-\n-        ConnectorService service = getService(ConnectorService.class);\n-        ConnInstanceTO connInstance = service.read(connectorKey, SyncopeConsoleSession.get().getLocale().getLanguage());\n-        if (connInstance != null) {\n-            result.addAll(service.buildObjectClassInfo(connInstance, true).stream().\n-                    map(input -> input.getType()).collect(Collectors.toList()));\n+        try {\n+            ConnectorService service = getService(ConnectorService.class);\n+            ConnInstanceTO connInstance = service.read(connectorKey, SyncopeConsoleSession.get().getLocale().\n+                    getLanguage());\n+            if (connInstance != null) {\n+                result.addAll(service.buildObjectClassInfo(connInstance, true).stream().\n+                        map(input -> input.getType()).collect(Collectors.toList()));\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"While reading object classes for connector {}\", connectorKey, e);\n         }\n-\n         return result;\n     }\n "},{"sha":"e3389e60142b7a374d3189e491de4f46cb78c356","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,12 +28,11 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n-import org.apache.syncope.client.console.commons.status.Status;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.Status;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n@@ -43,6 +42,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.EntityTO;"},{"sha":"265beddf92056d1646ec94a341cd1a41d6320f28","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.status;\n \n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;"},{"sha":"31cb9b8ab4858d29303f1d4c2c40c98d055ee5a3","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ReconTaskPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,9 +28,9 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReconciliationRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;"},{"sha":"2747a38fd37ef2fc10bc1bfda73777d1cc615ede","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,11 +26,10 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n@@ -40,6 +39,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;"},{"sha":"dbfdf0071f909fd43911db8d10c7f531e38fb738","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusModal.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,13 +22,13 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.PageReference;"},{"sha":"b617e16cbe1c0856e4f06aff79ffcd7ecb8da15e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/StatusModal.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.client.console.status;\n \n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.panel.Panel;"},{"sha":"b1669e90505500ed6be94f39daa4b2aa8870a745","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.client.console.tasks.PullTasks;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.resources.AbstractResourceWizardBuilder;\n import org.apache.syncope.client.console.wizards.resources.ResourceProvision;\n import org.apache.syncope.client.console.wizards.resources.ResourceProvisionPanel;"},{"sha":"97d4cc4e2eaadda40698d23ef9f8b94d6cbd4386","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,14 +25,14 @@\n import org.apache.commons.lang3.ClassUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.ComponentTag;"},{"sha":"864df83086319dba7eb7fe59e4b42793be3f05cb","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/AbstractMappingPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractMappingPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -29,11 +29,11 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n import org.apache.syncope.client.console.widgets.JEXLTransformerWidget;\n import org.apache.syncope.client.console.widgets.ItemTransformerWidget;"},{"sha":"59f4d9f04002bece174bbcbcf079847232126240","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/AbstractResourceWizardBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractResourceWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractResourceWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractResourceWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,7 +21,7 @@\n import java.io.Serializable;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.ModalEvent;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n \n@@ -30,7 +30,8 @@\n  *\n  * @param <T> model object type\n  */\n-public abstract class AbstractResourceWizardBuilder<T extends Serializable> extends AjaxWizardBuilder<Serializable> {\n+public abstract class AbstractResourceWizardBuilder<T extends Serializable>\n+        extends BaseAjaxWizardBuilder<Serializable> {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n "},{"sha":"760c38bf824e5929b99ddc3d2a8d0c427f3036e6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/CapabilitiesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FCapabilitiesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FCapabilitiesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FCapabilitiesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,7 +20,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"5341c696c4e3e79bf498e560c1682947b23c418a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorDetailsPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,10 +24,10 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;"},{"sha":"1e812e5980e31388819233fbb7001d1d81a44d08","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,7 +25,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.topology.TopologyNode;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.wicket.PageReference;"},{"sha":"89050164a6adde17f7ee2ad460f70d5098cc7e64","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ItemTransformersTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FItemTransformersTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,7 +25,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.types.ImplementationType;"},{"sha":"9b4a05f564ed94bea5aa01e753b45e2e025a5398","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/JEXLTransformersTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,7 +21,7 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.panels.TogglePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"131f33fb0df177739336a3a37c737f8088b999ce","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ObjectTypeTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.TogglePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;"},{"sha":"d06f2669c1ab896b6abdf0524357c69bb7ae4617","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,10 +26,10 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ProvisionAuxClassesPanel;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n@@ -45,7 +45,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class ProvisionWizardBuilder extends AjaxWizardBuilder<ResourceProvision> {\n+public class ProvisionWizardBuilder extends BaseAjaxWizardBuilder<ResourceProvision> {\n \n     private static final long serialVersionUID = 3739399543837732640L;\n "},{"sha":"5d6d7cf30d7178042a434e831d769b2f13fc07f6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceConnCapabilitiesPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnCapabilitiesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,8 +20,8 @@\n \n import java.util.Set;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"6d4020950ff39ca362d4424e201f90ba68089823","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,11 +22,11 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ImplementationType;"},{"sha":"123eedb8f0b5add9ea392cc1c58b1f831c0521f2","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,7 +25,7 @@\n import java.util.Set;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;"},{"sha":"7982f49bb563c83b53073e76e6e36bc716de1694","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"d8793c3f3c5db64a71d22418b7617921524e4677","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceSecurityPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.to.ResourceTO;"},{"sha":"fff254a2d465d6bcba6a4acb82508161cdd0494a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.topology.TopologyNode;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"6a0b471535f75cce11dcdb73254de0f234313860","filename":"client/idrepo/console/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -92,6 +92,12 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.syncope.client.idrepo</groupId>\n+      <artifactId>syncope-client-idrepo-ui-commons</artifactId>      \n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-security-jose</artifactId>"},{"sha":"a9356b9671b039b014b1d2fba5cc61c007250722","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":23,"deletions":2,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.client.console.annotations.Resource;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.Dashboard;\n@@ -72,7 +71,11 @@\n import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.ui.commons.SyncopeUIRequestCycleListener;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.wicket.request.component.IRequestablePage;\n import org.apache.wicket.request.cycle.IRequestCycleListener;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n@@ -231,7 +234,25 @@ protected void init() {\n         if (BooleanUtils.toBoolean(csrf)) {\n             getRequestCycleListeners().add(new WebSocketAwareCsrfPreventionRequestCycleListener());\n         }\n-        getRequestCycleListeners().add(new SyncopeConsoleRequestCycleListener());\n+\n+        getRequestCycleListeners().add(new SyncopeUIRequestCycleListener() {\n+\n+            @Override\n+            protected boolean isSignedIn() {\n+                return SyncopeConsoleSession.get().isSignedIn();\n+            }\n+\n+            @Override\n+            protected void invalidateSession() {\n+                SyncopeConsoleSession.get().invalidate();\n+            }\n+\n+            @Override\n+            protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n+                return new Login(errorParameters);\n+            }\n+        });\n+\n         getRequestCycleListeners().add(new IRequestCycleListener() {\n \n             @Override"},{"sha":"59655e38fe296378c3712fd84562bda05dc3e579","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchContent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -30,13 +30,13 @@\n import org.apache.cxf.helpers.CastUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.RestClient;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BatchResponseColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;"},{"sha":"9e247a5dd2edb29e309e3c1c9fd1245ed1c8dcd3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.RestClient;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;"},{"sha":"9e5e1204f685b54c3a859eafff12a794b2b4ffcc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"35fbfaab33d2e4eb1e8d3b6886858219bca4371b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyWizardBuilderAdditionalSteps.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyWizardBuilderAdditionalSteps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyWizardBuilderAdditionalSteps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyWizardBuilderAdditionalSteps.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,9 +19,9 @@\n package org.apache.syncope.client.console.commons;\n \n import java.io.Serializable;\n-import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n-import org.apache.syncope.client.console.layout.AnyForm;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.extensions.wizard.WizardModel;\n "},{"sha":"33d5dff10c8de7b98ba7c537028d2e39a3a93bea","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"a616dfd5bc3426b630ba949a10916a97d9ad2f07","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyAnyWizardBuilderAdditionalSteps.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyWizardBuilderAdditionalSteps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyWizardBuilderAdditionalSteps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyWizardBuilderAdditionalSteps.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n-import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n-import org.apache.syncope.client.console.layout.AnyForm;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.extensions.wizard.WizardModel;\n "},{"sha":"9efe358727b8e48e6cee06d2075be3e74f967398","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyStatusProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n "},{"sha":"791a34e9562ff4226c697ef794bbfd25b9bea468","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,8 +20,8 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.DefaultPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;"},{"sha":"3aa01dc890947d19276556816302bdf1dcb4dfb9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/StatusProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n "},{"sha":"18602b770dba84ca73be9d073ee688ddbb86f4e6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/events/EventCategoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -33,8 +33,8 @@\n import org.apache.syncope.client.console.events.SelectedEventsPanel.InspectSelectedEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.log.EventCategory;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;"},{"sha":"ffc4b996ef3ec414dcb8b3c50bba6fcc14e1d2f0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/events/EventSelectionPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,7 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.common.lib.log.EventCategory;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditLoggerName;"},{"sha":"08b79e3f6b8930ea495070196c3213822360474d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,7 +31,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.ObjectUtils;\n import org.apache.syncope.client.console.pages.BaseExtPage;\n-import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.ExtWidget;\n import org.apache.syncope.client.console.annotations.IdMPage;\n@@ -45,7 +45,7 @@\n import org.apache.syncope.client.console.commons.EmptyVirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SSOLoginFormPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.console.widgets.BaseExtWidget;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;"},{"sha":"c1da9cea27e5251646961be092ea663bc52db528","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/MIMETypesLoader.java","status":"modified","additions":6,"deletions":47,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,55 +18,14 @@\n  */\n package org.apache.syncope.client.console.init;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+import java.io.IOException;\n+import org.apache.syncope.client.ui.commons.AbstractMIMETypesLoader;\n import org.apache.wicket.util.io.IOUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class MIMETypesLoader {\n+public class MIMETypesLoader extends AbstractMIMETypesLoader {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(MIMETypesLoader.class);\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private Map<String, String> mimeTypesMap;\n-\n-    private List<String> mimeTypes;\n-\n-    public void load() {\n-        mimeTypesMap = new HashMap<>();\n-        try {\n-            JsonNode jsonNode = MAPPER.readTree(IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes.json\")));\n-            for (JsonNode node : jsonNode) {\n-                JsonNode type = node.path(\"name\");\n-                JsonNode ext = node.path(\"extension\");\n-                if (!type.isMissingNode()) {\n-                    mimeTypesMap.put(type.asText(), ext.isMissingNode() ? \"\" : ext.asText());\n-                }\n-            }\n-\n-            mimeTypesMap = Collections.unmodifiableMap(mimeTypesMap);\n-            LOG.debug(\"MIME types loaded: {}\", mimeTypesMap);\n-\n-            mimeTypes = new ArrayList<>(mimeTypesMap.keySet());\n-            Collections.sort(mimeTypes);\n-            mimeTypes = Collections.unmodifiableList(mimeTypes);\n-        } catch (Exception e) {\n-            LOG.error(\"Error reading file MIMETypes from resources\", e);\n-        }\n-    }\n-\n-    public List<String> getMimeTypes() {\n-        return mimeTypes;\n-    }\n-\n-    public String getFileExt(final String mimeType) {\n-        return mimeTypesMap.get(mimeType);\n+    @Override\n+    protected String getMimeTypesFile() throws IOException {\n+        return IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes.json\"));\n     }\n }"},{"sha":"fecfb1df468a508b574cbefa3a05af47d446caee","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/AnyObjectForm.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectForm.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.layout;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n \n public interface AnyObjectForm extends AnyForm<AnyObjectTO> {"},{"sha":"cb622a6f558e4c1777e0645a8101cf2a7492e7e8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/AnyObjectFormLayoutInfo.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyObjectFormLayoutInfo.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.layout;\n \n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n "},{"sha":"b3caa6c81cf81b9fe5924bbc9ecfa9230d6c58ee","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/FormLayoutInfoUtils.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FFormLayoutInfoUtils.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.layout;\n \n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ObjectNode;"},{"sha":"eb9f1e1516079d0ce226a571f977297359497423","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/GroupForm.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupForm.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.layout;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n import org.apache.syncope.common.lib.to.GroupTO;\n \n public interface GroupForm extends AnyForm<GroupTO> {"},{"sha":"5d7ef291056dee1cbec9e97160c1aae00d17d330","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/GroupFormLayoutInfo.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FGroupFormLayoutInfo.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.layout;\n \n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n import org.apache.syncope.common.lib.to.GroupTO;\n "},{"sha":"53e7182c500d52e6d0aec64b1af29292322d6b7c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/UserFormLayoutInfo.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FUserFormLayoutInfo.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.client.console.layout;\n \n import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.layout.UserForm;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public class UserFormLayoutInfo extends AbstractAnyFormLayout<UserTO, UserForm> {"},{"sha":"ac981fb2aa084bbb0852915086814f8c88cb977b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -36,8 +36,8 @@\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n@@ -51,9 +51,9 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.model.PropertyModel;\n "},{"sha":"b24622d1cc11773ce8c93c62b8f37c91b672686c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -40,7 +40,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.NotificationTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;"},{"sha":"82e936942010e8599246c3ef419c684dfe23c8b7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.client.console.notifications;\n \n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.tasks.NotificationMailBodyDetails;\n import org.apache.syncope.client.console.tasks.NotificationTaskDirectoryPanel;\n import org.apache.syncope.client.console.tasks.TaskExecutionDetails;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.NotificationTaskTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;"},{"sha":"be4b0c218d1e8991423d72c016d262d20a9ddb91","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,6 +25,7 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.events.EventCategoryPanel;\n import org.apache.syncope.client.console.panels.search.AbstractSearchPanel;\n@@ -37,12 +38,12 @@\n import org.apache.syncope.client.console.rest.LoggerRestClient;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n@@ -70,7 +71,7 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.validation.validator.EmailAddressValidator;\n \n-public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationWrapper> {\n+public class NotificationWizardBuilder extends BaseAjaxWizardBuilder<NotificationWrapper> {\n \n     private static final long serialVersionUID = -1975312550059578553L;\n \n@@ -321,6 +322,11 @@ public void detach() {\n                         }\n                     });\n                 }\n+\n+                @Override\n+                protected void sendError(final String message) {\n+                    SyncopeConsoleSession.get().error(getString(Constants.OPERATION_ERROR));\n+                }\n             }.hideLabel());\n         }\n     }"},{"sha":"df58427bb984784a75dce3f658359398aa0da2d0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/TemplateModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.rest.TemplateRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.wicket.PageReference;"},{"sha":"fe2a75d0b1e880a3e378f48377ff9bcd5998da1f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":3,"deletions":21,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,13 +27,13 @@\n import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.IdMPage;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -42,7 +42,6 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxIndicatorAware;\n import org.apache.wicket.ajax.attributes.AjaxCallListener;\n import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -69,7 +68,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class BasePage extends WebPage implements IAjaxIndicatorAware {\n+public class BasePage extends BaseWebPage {\n \n     private static final long serialVersionUID = 1571997737305598502L;\n \n@@ -80,27 +79,19 @@ public class BasePage extends WebPage implements IAjaxIndicatorAware {\n     @SpringBean\n     protected ClassPathScanImplementationLookup lookup;\n \n-    protected final WebMarkupContainer body;\n-\n-    protected NotificationPanel notificationPanel;\n-\n     public BasePage() {\n         this(null);\n     }\n \n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n-        body = new WebMarkupContainer(\"body\");\n         Serializable leftMenuCollapse = SyncopeConsoleSession.get().getAttribute(Constants.MENU_COLLAPSE);\n         if ((leftMenuCollapse instanceof Boolean) && ((Boolean) leftMenuCollapse)) {\n             body.add(new AttributeAppender(\"class\", \" sidebar-collapse\"));\n         }\n         add(body);\n \n-        notificationPanel = new NotificationPanel(Constants.FEEDBACK);\n-        body.addOrReplace(notificationPanel.setOutputMarkupId(true));\n-\n         // header, footer\n         body.add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n \n@@ -455,15 +446,6 @@ private String getULContainerId(final String linkId) {\n         return linkId + \"UL\";\n     }\n \n-    @Override\n-    public String getAjaxIndicatorMarkupId() {\n-        return Constants.VEIL_INDICATOR_MARKUP_ID;\n-    }\n-\n-    public NotificationPanel getNotificationPanel() {\n-        return notificationPanel;\n-    }\n-\n     /**\n      * Set a WindowClosedCallback for a Modal instance.\n      *"},{"sha":"71a7f33ad1962a42e8b15d90ba83ff6f0d7c3888","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/LogViewer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.LogStatementPanel;\n import org.apache.syncope.client.console.rest.LoggerRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.log.LogStatement;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"39f07c1e197d0f05fbe79f769811c6412cf6a230","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":33,"deletions":140,"changes":173,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,30 +27,20 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.ui.commons.BaseLogin;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authentication.IAuthenticationStrategy;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n-import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n-import org.apache.wicket.markup.html.form.PasswordTextField;\n-import org.apache.wicket.markup.html.form.StatelessForm;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class Login extends WebPage {\n+public class Login extends BaseLogin {\n \n     private static final Logger LOG = LoggerFactory.getLogger(Login.class);\n \n@@ -59,59 +49,8 @@ public class Login extends WebPage {\n     @SpringBean\n     private ClassPathScanImplementationLookup lookup;\n \n-    private final NotificationPanel notificationPanel;\n-\n-    private final StatelessForm<Void> form;\n-\n-    private final TextField<String> usernameField;\n-\n-    private final TextField<String> passwordField;\n-\n     public Login(final PageParameters parameters) {\n         super(parameters);\n-        setStatelessHint(true);\n-\n-        notificationPanel = new NotificationPanel(Constants.FEEDBACK);\n-        add(notificationPanel);\n-\n-        Label exceptionMessage = new Label(\"exceptionMessage\");\n-        exceptionMessage.setOutputMarkupPlaceholderTag(true);\n-        exceptionMessage.setVisible(false);\n-        if (!parameters.get(\"errorMessage\").isNull()) {\n-            exceptionMessage.setVisible(true);\n-            exceptionMessage.setDefaultModel(Model.of(parameters.get(\"errorMessage\")));\n-        }\n-        add(exceptionMessage);\n-\n-        form = new StatelessForm<>(\"login\");\n-\n-        usernameField = new TextField<>(\"username\", new Model<>());\n-        usernameField.setMarkupId(\"username\");\n-        form.add(usernameField);\n-\n-        passwordField = new PasswordTextField(\"password\", new Model<>());\n-        passwordField.setMarkupId(\"password\");\n-        form.add(passwordField);\n-\n-        LocaleDropDown languageSelect = new LocaleDropDown(\"language\");\n-        languageSelect.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                // nothing to do\n-            }\n-        }).add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                // nothing to do\n-            }\n-        });\n-        form.add(languageSelect);\n \n         DomainDropDown domainSelect = new DomainDropDown(\"domain\");\n         if (SyncopeWebApplication.get().getDomains().size() == 1) {\n@@ -135,35 +74,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n         form.add(domainSelect);\n+    }\n \n-        AjaxButton submitButton = new AjaxButton(\"submit\", new Model<>(getString(\"submit\"))) {\n-\n-            private static final long serialVersionUID = 429178684321093953L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target) {\n-                if (SyncopeWebApplication.get().getAnonymousUser().equals(usernameField.getRawInput())) {\n-                    throw new AccessControlException(\"Illegal username\");\n-                }\n-\n-                IAuthenticationStrategy strategy = getApplication().getSecuritySettings().getAuthenticationStrategy();\n-\n-                if (AuthenticatedWebSession.get().signIn(usernameField.getRawInput(), passwordField.getRawInput())) {\n-                    // If login has been called because the user was not yet logged in, than continue to the\n-                    // original destination, otherwise to the Home page\n-                    continueToOriginalDestination();\n-                    setResponsePage(getApplication().getHomePage());\n-                } else {\n-                    SyncopeConsoleSession.get().error(getString(\"login-error\"));\n-                    notificationPanel.refresh(target);\n-                }\n-                strategy.remove();\n-            }\n-        };\n-        submitButton.setDefaultFormProcessing(false);\n-        form.add(submitButton);\n-        form.setDefaultButton(submitButton);\n-\n+    @Override\n+    protected List<Panel> getSSOLoginFormPanels() {\n         List<Panel> ssoLoginFormPanels = new ArrayList<>();\n         lookup.getSSOLoginFormPanels().forEach(ssoLoginFormPanel -> {\n             try {\n@@ -172,64 +86,43 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 LOG.error(\"Could not initialize the provided SSO login form panel\", e);\n             }\n         });\n-        ListView<Panel> ssoLogins = new ListView<Panel>(\"ssoLogins\", ssoLoginFormPanels) {\n-\n-            private static final long serialVersionUID = -9180479401817023838L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<Panel> item) {\n-                item.add(item.getModelObject());\n-            }\n-        };\n-        form.add(ssoLogins);\n-\n-        add(form);\n+        return ssoLoginFormPanels;\n     }\n \n-    /**\n-     * Inner class which implements (custom) Locale DropDownChoice component.\n-     */\n-    private class LocaleDropDown extends BootstrapSelect<Locale> {\n-\n-        private static final long serialVersionUID = 2349382679992357202L;\n+    @Override\n+    protected void sendError(final String error) {\n+        SyncopeConsoleSession.get().error(error);\n+    }\n \n-        private class LocaleRenderer extends ChoiceRenderer<Locale> {\n+    @Override\n+    protected String getAnonymousUser() {\n+        return SyncopeWebApplication.get().getAnonymousUser();\n+    }\n \n-            private static final long serialVersionUID = -3657529581555164741L;\n+    @Override\n+    protected List<Locale> getSupportedLocales() {\n+        return SyncopeWebApplication.SUPPORTED_LOCALES;\n+    }\n \n-            @Override\n-            public String getDisplayValue(final Locale locale) {\n-                return locale.getDisplayName(getLocale());\n-            }\n+    @Override\n+    protected void authenticate(final String username, final String password, final AjaxRequestTarget target) throws\n+            AccessControlException {\n+        if (SyncopeWebApplication.get().getAnonymousUser().equals(username)) {\n+            throw new AccessControlException(\"Illegal username\");\n         }\n \n-        LocaleDropDown(final String id) {\n-            super(id, SyncopeWebApplication.SUPPORTED_LOCALES);\n-\n-            setChoiceRenderer(new LocaleRenderer());\n-            setModel(new IModel<Locale>() {\n-\n-                private static final long serialVersionUID = -6985170095629312963L;\n-\n-                @Override\n-                public Locale getObject() {\n-                    return getSession().getLocale();\n-                }\n-\n-                @Override\n-                public void setObject(final Locale object) {\n-                    getSession().setLocale(object);\n-                }\n-\n-                @Override\n-                public void detach() {\n-                    // Empty.\n-                }\n-            });\n+        IAuthenticationStrategy strategy = getApplication().getSecuritySettings().getAuthenticationStrategy();\n \n-            // set default value to English\n-            getModel().setObject(Locale.ENGLISH);\n+        if (AuthenticatedWebSession.get().signIn(username, password)) {\n+            // If login has been called because the user was not yet logged in, than continue to the\n+            // original destination, otherwise to the Home page\n+            continueToOriginalDestination();\n+            setResponsePage(getApplication().getHomePage());\n+        } else {\n+            SyncopeConsoleSession.get().error(getString(\"login-error\"));\n+            notificationPanel.refresh(target);\n         }\n+        strategy.remove();\n     }\n \n     /**"},{"sha":"f83ca8f0126ea00f73aab04af4ac8b489efae85b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/MustChangePassword.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,9 +21,9 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.UserSelfRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n+import org.apache.syncope.client.ui.commons.panels.NotificationPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.markup.html.WebPage;"},{"sha":"be8be41b95704f4da3062de3b9ef7997147bd5e7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,18 +20,19 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n-import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.panels.RealmChoicePanel;\n import org.apache.syncope.client.console.panels.RealmChoicePanel.ChosenRealm;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.tasks.TemplatesTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -164,7 +165,7 @@ public void onEvent(final IEvent<?> event) {\n                 templateModal.close(newItemEvent.getTarget());\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                ((BasePage) getPage()).getNotificationPanel().refresh(newItemEvent.getTarget());\n+                ((BaseWebPage) getPage()).getNotificationPanel().refresh(newItemEvent.getTarget());\n                 templateModal.close(newItemEvent.getTarget());\n             }\n         }\n@@ -245,7 +246,7 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     // Escape line breaks\n                     SyncopeConsoleSession.get().error(e.getMessage().replace(\"\\n\", \" \"));\n                 }\n-                ((BasePage) Realms.this.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) Realms.this.getPage()).getNotificationPanel().refresh(target);\n             }\n         });\n         return content;"},{"sha":"d5c224ea730a155e4ab0660d30ba3eae410a9721","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;"},{"sha":"586cc546c11296022b31ac2075efb696f34de1a3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,10 +18,12 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.syncope.client.ui.commons.panels.SubmitableModalPanel;\n import java.io.Serializable;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.head.HeaderItem;"},{"sha":"ab092a3c0fb746ddd255c619b9c9640f52185c9d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSchemaDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"1c8558a343ab3c0b1dbebfaae19f919291573e5e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.commons.ActionTableCheckGroup;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;"},{"sha":"565712ab956a3eb3fdc105f7c291464eec1de9c6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,12 +26,12 @@\n import java.util.List;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.batch.BatchModal;\n import org.apache.syncope.client.console.batch.BatchContent;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel.EventDataWrapper;\n-import org.apache.syncope.client.console.rest.RestClient;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;"},{"sha":"1833582b9c959ec64aa48eb38c772a3d4f2a5aa5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -41,7 +41,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.syncope.client.console.wizards.any.StatusPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"97b86c6175a8d9b973149d430526f323691dbde4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -32,9 +32,9 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;"},{"sha":"b37284f48acbb00d2fd0e97ed78421d18b27d688","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.syncope.client.ui.commons.panels.LabelPanel;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -36,8 +37,9 @@\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;"},{"sha":"df22131761a2de123974924dbfa262e913eea6e5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,8 +24,8 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.wicket.markup.html.WebMarkupContainer;"},{"sha":"393d25e0310307214894ca6ac905ebec81ffeb6f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -36,8 +36,9 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;"},{"sha":"e0221658356d2001afb3c2d2afd6df878fa8ffc0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeDetailsPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,9 +22,9 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;"},{"sha":"0f2a097716942731658c151e3b844e37a4d3671e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -36,8 +36,9 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;"},{"sha":"1321fc33ce61c577db7cb56da985bdfe982777b7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ApplicationModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.ApplicationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ApplicationTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"b372650c6bcd894ec71b9cf149f98a63b7fbe476","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,14 +35,14 @@\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.Schema;"},{"sha":"a4248dc59141854567f2b9913feae86716234ae3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,8 +26,8 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.RestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;"},{"sha":"4f756b8547ee21032699ca191abf88de397d6c0a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.search.SearchableFields;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;"},{"sha":"ccb9387c6ebbf1b402d4023beeae8ce7c3f48283","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DynRealmModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,8 +31,8 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.DynRealmWrapper;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.wicket.PageReference;"},{"sha":"0b776699d93ba50a9b1de5776c4f07a065dc9c27","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ExecMessageModal.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n "},{"sha":"601e796d08ce10b928d6cf91b147975f2a7799ca","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/FailureMessageModal.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;"},{"sha":"f43ebea893c2a00fe8737f3c2b9161e95b08ddda","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -38,11 +38,12 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;"},{"sha":"744453c40821fc6df87f17c17aeba1c62c068da2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationEngineTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationEngineTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,7 +22,7 @@\n import java.util.Arrays;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.wicket.PageReference;"},{"sha":"29176b9794f259ca7b8e01c7f10c070c29e9ef24","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -33,8 +33,8 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.ImplementationEngine;"},{"sha":"96da7481360dd2f523ac9f7d08b0fca177b721f5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,11 +28,11 @@\n import java.util.Optional;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;"},{"sha":"1cd90e498e778ccca829f38a0b762b23e6b615af","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/MembersTogglePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;"},{"sha":"34cfa5759f4a4c7fbc8433bea3fdc4baf8003e3b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.wicket.PageReference;\n "},{"sha":"3b6e795608269b52a695594416c210db740a9be7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,16 +20,16 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.SchemaUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.SchemaUtils;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;"},{"sha":"9a9de85d507da42811946b222c9c103d6c1d2a9c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,14 +21,14 @@\n import java.io.Serializable;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n-public class ParametersCreateWizardPanel extends AjaxWizardBuilder<ParametersCreateWizardPanel.ParametersForm> {\n+public class ParametersCreateWizardPanel extends BaseAjaxWizardBuilder<ParametersCreateWizardPanel.ParametersForm> {\n \n     private static final long serialVersionUID = -2868592590785581481L;\n "},{"sha":"9bd7b5af6468f15a4cc0651636090b6cdd0f7c74","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,11 +26,11 @@\n import org.apache.syncope.client.console.commons.PropertyList;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;"},{"sha":"d4bbd11d4f1cc6ae95eafa8cffb99bfb890d18c8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,17 +21,17 @@\n import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.SchemaUtils;\n+import org.apache.syncope.client.ui.commons.SchemaUtils;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;"},{"sha":"72395f5291e82672d367d2cfadb8bcd556a1ec16","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,9 +35,10 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;"},{"sha":"fc5baa5d0640e779ba0b84d937be4051602e591b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -30,11 +30,11 @@\n import org.apache.syncope.client.console.commons.PropertyList;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;"},{"sha":"8ed357b7f43daa58998485cac9a5244ef756f6c0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PrivilegeDirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -34,7 +34,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ApplicationTO;\n import org.apache.syncope.common.lib.to.PrivilegeTO;"},{"sha":"72b3f80f15919a9e2f08ad45d0ed6dc0f69edfdf","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PrivilegeWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,9 +20,9 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.rest.ApplicationRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.ApplicationTO;\n import org.apache.syncope.common.lib.to.PrivilegeTO;\n import org.apache.wicket.PageReference;\n@@ -32,7 +32,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class PrivilegeWizardBuilder extends AjaxWizardBuilder<PrivilegeTO> {\n+public class PrivilegeWizardBuilder extends BaseAjaxWizardBuilder<PrivilegeTO> {\n \n     private static final long serialVersionUID = -1817419622749405208L;\n "},{"sha":"c1736e7da2fb35110145af85acdc1d06436d2f3b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.ITabComponent;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;"},{"sha":"bb07693cc0a39b1319dbd5028603fbb388e6d41a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,10 +26,10 @@\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.EntityTO;"},{"sha":"f1234a351f60623baa2b57d1d2bfb998312d9419","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,15 +20,15 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.behavior.AttributeAppender;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n \n-public class RealmWizardBuilder extends AjaxWizardBuilder<RealmTO> {\n+public class RealmWizardBuilder extends BaseAjaxWizardBuilder<RealmTO> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"c75ba2c11529bd9b6b20e4a3a51a88ad285ee685","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypeDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;"},{"sha":"2613a5d19825b4f6898cfa410d01da905fe9e602","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -37,8 +37,9 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;"},{"sha":"7125d880db88c6946e6fae7892f1d77f3271e8c7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -42,10 +42,11 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeTO;"},{"sha":"4421950f50b06ff77e8415bd1d82a56d0795c2c9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.types.SchemaType;"},{"sha":"da0d2b3ac9521a2bf7f339ec7254b598918ef773","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,9 +31,9 @@\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.SchemaTO;\n@@ -55,7 +55,7 @@\n import org.apache.wicket.request.cycle.RequestCycle;\n import org.apache.wicket.validation.ValidationError;\n \n-public class SchemaTypeWizardBuilder extends AjaxWizardBuilder<SchemaTO> {\n+public class SchemaTypeWizardBuilder extends BaseAjaxWizardBuilder<SchemaTO> {\n \n     private static final long serialVersionUID = -3893521796674873644L;\n "},{"sha":"9dfc39a6c140e652760cf56f9e909b3c78e7b691","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,8 +21,8 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;"},{"sha":"4bfbc4291c9d868970b2098f42bf413641c970b3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;"},{"sha":"3186a40c4900a60fdd558b6514177d788c84e7e3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,9 +35,10 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;"},{"sha":"0fd44b68d53aa8536f71be28071bef588390a84b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/StartAtTogglePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.ExecutionRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"d6de626fb788dbec8d5215abb76bd1feb7ac7834","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,13 +21,13 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.policies.PolicyRuleWrapper;\n import org.apache.syncope.client.console.reports.ReportletWrapper;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n-import org.apache.syncope.client.console.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.EntityTO;"},{"sha":"79e84d119e25501d9b4be7fd888070c9fe309afb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.syncope.client.ui.commons.panels.SubmitableModalPanel;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -35,7 +36,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.TypeExtensionWizardBuilder;\n import org.apache.syncope.common.lib.request.GroupUR;\n import org.apache.syncope.common.lib.to.GroupTO;"},{"sha":"744fc71d1f6934533853d29d8d1a9841a1b7ea0a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TypesDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,7 +20,7 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.rest.RestClient;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.wicket.PageReference;\n "},{"sha":"4e59feeecebfc466b231e666f4eb19b4a4783be5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,10 +35,10 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n-import org.apache.syncope.client.console.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"3e9957c16dca120662668824f322dc23c07a7123","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.client.console.panels.AnyObjectDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.wicket.PageReference;"},{"sha":"20de17ef5389e5652c4737891a2831385c770584","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.client.console.panels.GroupDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.PageReference;"},{"sha":"01abfe08db4686a40924c6fc93add2b4a7a27478","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -36,10 +36,10 @@\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.RelationshipTypeRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxEventBehavior;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;"},{"sha":"175dc2dfff0e2a83ce82132ed7311a10e14f77a6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.client.console.panels.UserDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;"},{"sha":"bb80dcb20a7b0d750d915444c50f2c5441b7b0e5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.PolicyTO;"},{"sha":"7fc039c4416753ba249c4041f1759a2f1a54b0d3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,17 +28,17 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;"},{"sha":"cf4db2b9ed6953e1deab47b8bbe22154874c33da","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -33,14 +33,14 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.ComposablePolicy;"},{"sha":"d649d93c76d70f96c57cebff69931149f6e5664d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,8 +27,8 @@\n import org.apache.syncope.client.console.panels.BeanPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.policy.ComposablePolicy;\n import org.apache.syncope.common.lib.policy.RuleConf;\n@@ -45,7 +45,7 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n \n-public class PolicyRuleWizardBuilder extends AjaxWizardBuilder<PolicyRuleWrapper> {\n+public class PolicyRuleWizardBuilder extends BaseAjaxWizardBuilder<PolicyRuleWrapper> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"629c0be782a1ccc69130c6212455291de7163133","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/ProvisioningPolicyModalPanel.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,11 +35,11 @@\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n import org.apache.syncope.common.lib.policy.AbstractCorrelationRuleConf;\n import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n@@ -142,6 +142,11 @@ protected CorrelationRule newModelObject() {\n             protected CorrelationRulePanel getItemPanel(final ListItem<CorrelationRule> item) {\n                 return new CorrelationRulePanel(\"panel\", Model.of(item.getModelObject()));\n             }\n+\n+            @Override\n+            protected void sendError(final String message) {\n+                SyncopeConsoleSession.get().error(getString(Constants.OPERATION_ERROR));\n+            }\n         });\n     }\n "},{"sha":"a20afb840db793c132cffcb2d5517986fcf52ff9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.widgets.JobActionPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.JobTO;"},{"sha":"d5d920b4491f6bf57990a3c25e868a1f4c8dcf3c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportExecutionDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.reports;\n \n-import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.ExecutionRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;"},{"sha":"ff32336b2ef6b7888a8bb78a299a7f738eaf2035","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -35,8 +35,8 @@\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportTemplateTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -49,11 +49,11 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.reports.ReportTemplateDirectoryPanel.ReportTemplateProvider;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"3ceb127371b90ff57f04712ca58d9b0f535dbd00","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,18 +22,18 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.tasks.CrontabPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.PropertyModel;\n \n-public class ReportWizardBuilder extends AjaxWizardBuilder<ReportTO> {\n+public class ReportWizardBuilder extends BaseAjaxWizardBuilder<ReportTO> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"9bd791e5afcb58b02f0937273191a8ab4b5d21cb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -33,14 +33,14 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.report.ReportletConf;"},{"sha":"43c3a6b98901cb3c578a4e89a5660ace19caa69d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.panels.BeanPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n@@ -41,7 +41,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n \n-public class ReportletWizardBuilder extends AjaxWizardBuilder<ReportletWrapper> {\n+public class ReportletWizardBuilder extends BaseAjaxWizardBuilder<ReportletWrapper> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"d4a580ab575baf54f7c4ec037f19e40edd376fed","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -30,8 +30,8 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.lib.batch.BatchRequest;\n import org.apache.syncope.common.lib.request.ResourceAR;\n import org.apache.syncope.common.lib.request.ResourceDR;"},{"sha":"ea83255937d3c13135c77eff0a3586d80fc4f14d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,6 +24,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n import org.apache.syncope.common.lib.types.ExecStatus;\n import org.apache.syncope.common.rest.api.RESTHeaders;"},{"sha":"dbff17596da4531adc69660bbddebeb5b115d5e8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/ExecutionRestClient.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import java.util.Date;\n import java.util.List;\n import java.util.Map;"},{"sha":"10dd1f422b619bfc6eac5ce7c2f4bbb9d2fcd1c8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/TemplateRestClient.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTemplateRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n import java.util.List;\n \n public interface TemplateRestClient<T, F> extends RestClient {"},{"sha":"f6df82ebd37601fdc64e9fbed61cbe4d19bbbe4c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,9 +24,9 @@\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.Status;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.Status;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.common.lib.request.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.request.StatusR;\n import org.apache.syncope.common.lib.request.UserCR;"},{"sha":"888139733471af00dac8f82c821c33f0ef3fbbad","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/status/ChangePasswordModal.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FChangePasswordModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FChangePasswordModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FChangePasswordModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,15 +23,15 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n-import org.apache.syncope.client.console.wizards.any.PasswordPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n import org.apache.syncope.client.console.wizards.any.StatusPanel;\n-import org.apache.syncope.client.console.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"ba364bc910742e9940e438621553743d2ae15f75","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/AbstractTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractTasks.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.wicket.markup.html.panel.Panel;\n \n public abstract class AbstractTasks extends Panel implements ModalPanel {"},{"sha":"7cc10f147541457e912507fb0258043d0463868d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/CrontabPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,11 +21,11 @@\n import java.util.Arrays;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SelectOption;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.SelectChoiceRenderer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.SelectOption;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.panel.Panel;"},{"sha":"fbf9e09fd0f1469db9bd0dedb4de82d830300b08","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,14 +27,14 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.SyncopeClientException;"},{"sha":"ab7fcf0c7737ccc996798a7a88d0ac44e623ea01","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,14 +27,14 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;"},{"sha":"dcf08b193f27b5ba57385b84ab7a76d254207771","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskFilters.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n import org.apache.syncope.client.console.panels.search.MapOfListModel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;"},{"sha":"558552bab9b1b7bd48a15ff5799bd3935e5cc97b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n@@ -40,7 +39,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.SyncopeClientException;"},{"sha":"67c126e60ab6988647135fa0b933c4dfb5170c5f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,12 +27,12 @@\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n@@ -54,7 +54,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class SchedTaskWizardBuilder<T extends SchedTaskTO> extends AjaxWizardBuilder<T> {\n+public class SchedTaskWizardBuilder<T extends SchedTaskTO> extends BaseAjaxWizardBuilder<T> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"022b21a9ba4fbc0f93aceacd5f6177792744dc06","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,10 +22,10 @@\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.to.TaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;"},{"sha":"963e8a8e42567a2524c26872a8fd854ae5308350","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TemplatesTogglePanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -29,12 +29,12 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.AnyObjectTemplateWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.AnyWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupTemplateWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.TemplateWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.UserTemplateWizardBuilder;"},{"sha":"55ee40e124370c5438ac932ca30e7e980dfb0f31","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -25,8 +25,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.DefaultModalCloseButton;\n import org.apache.wicket.Component;\n import org.apache.wicket.WicketRuntimeException;\n@@ -43,8 +41,10 @@\n import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.syncope.client.console.panels.SubmitableModalPanel;\n+import org.apache.syncope.client.ui.commons.panels.SubmitableModalPanel;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorModalCloseBehavior;\n+import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n+import org.apache.syncope.client.ui.commons.panels.NotificationPanel;\n import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.head.IHeaderResponse;"},{"sha":"6ca8595effb88397a2757d554ce831d2dfa0d8fc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -22,13 +22,13 @@\n import java.io.Serializable;\n import java.util.UUID;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.policies.PolicyRuleWrapper;\n import org.apache.syncope.client.console.reports.ReportletWrapper;\n-import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n-import org.apache.syncope.client.console.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.GroupTO;"},{"sha":"7d9bb088e419d9592fa352db5acb19a483845f40","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,7 +20,10 @@\n \n import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDatePicker;\n import java.util.Date;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.ui.commons.markup.html.form.DateFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n@@ -48,4 +51,11 @@ public FieldPanel<Date> clone() {\n \n         return panel;\n     }\n+\n+    @Override\n+    protected FastDateFormat getDateFormat(final String datePattern) {\n+        return datePattern == null\n+                ? SyncopeConsoleSession.get().getDateFormat()\n+                : FastDateFormat.getInstance(datePattern);\n+    }\n }"},{"sha":"46fad5f6ea635d69484e6f264121a95853eb85a7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateTimeFieldPanel.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.DateFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDateTimePicker;\n import java.util.Date;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -52,4 +55,11 @@ public FieldPanel<Date> clone() {\n \n         return panel;\n     }\n+\n+    @Override\n+    protected FastDateFormat getDateFormat(final String datePattern) {\n+        return datePattern == null\n+                ? SyncopeConsoleSession.get().getDateFormat()\n+                : FastDateFormat.getInstance(datePattern);\n+    }\n }"},{"sha":"7752afc9eec5b42954f3f10a89f1b10599c159ec","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDownload.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.AbstractAjaxBehavior;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;"},{"sha":"f57091ec6ecb50e6e02be0ad3f4e2aa2458d2f72","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+\n import static de.agilecoders.wicket.jquery.JQuery.$;\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.BootstrapFileInputField;\n@@ -34,10 +36,11 @@\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.BaseBinaryFieldPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n@@ -58,7 +61,7 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.lang.Bytes;\n \n-public class BinaryFieldPanel extends FieldPanel<String> {\n+public class BinaryFieldPanel extends BaseBinaryFieldPanel {\n \n     private static final long serialVersionUID = 6264462604183088931L;\n \n@@ -291,4 +294,14 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n         setVisibleFileButtons(StringUtils.isNotBlank(modelObj));\n         return this;\n     }\n+\n+    @Override\n+    protected void sendError(final String message) {\n+        SyncopeConsoleSession.get().error(message);\n+    }\n+\n+    @Override\n+    protected Integer getMaxUploadFileSizeMB() {\n+        return SyncopeWebApplication.get().getMaxUploadFileSizeMB();\n+    }\n }"},{"sha":"525fcb93463ce1503a47fb77bbdf68fe5c9fc6a5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,10 +18,13 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import java.io.Serializable;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractMultiPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -107,6 +110,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 protected void clearInput(final Panel panel) {\n                     FieldPanel.class.cast(panel).getField().clearInput();\n                 }\n+\n+                @Override\n+                protected void sendError(final String message) {\n+                    SyncopeConsoleSession.get().error(getString(Constants.OPERATION_ERROR));\n+                }\n             };\n         }\n     }"},{"sha":"ee29475ce655bc509ad6896c34fcb4bf5185db41","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractMultiPanel;\n import org.apache.wicket.model.IModel;\n \n public abstract class MultiPanel<INNER extends Serializable> extends AbstractMultiPanel<INNER> {"},{"sha":"3da56081936de6f91612afcd3ae2c0379243f6e4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,13 +18,14 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.io.ByteArrayInputStream;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;\n import javax.naming.ldap.LdapName;\n import javax.naming.ldap.Rdn;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;"},{"sha":"739746238d14e23ba8b806d7295699d45fc793ff","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,8 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n-import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource;\n import org.apache.wicket.markup.html.image.NonCachingImage;"},{"sha":"6efdec6dcf96a039db1b4b207227de71d9a2a4f5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryPDFPreviewer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.awt.Graphics2D;\n import java.awt.RenderingHints;\n import java.awt.image.BufferedImage;\n@@ -32,7 +33,7 @@\n import org.apache.pdfbox.pdmodel.graphics.PDXObject;\n import org.apache.pdfbox.rendering.ImageType;\n import org.apache.pdfbox.rendering.PDFRenderer;\n-import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.image.NonCachingImage;"},{"sha":"fe893d70814f46c6c052102780cfe5d1da237e8d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryTextPreviewer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryTextPreviewer.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,11 +18,12 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnLoadHeaderItem;"},{"sha":"dae2d582839f2b8e3c22e9e1da047694cedee755","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -49,7 +49,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ExecTO;"},{"sha":"ff5d427299e2cc1c38441867b6b32267ce538a37","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/BaseAjaxWizardBuilder.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FBaseAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FBaseAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FBaseAjaxWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n+import org.apache.wicket.PageReference;\n+\n+public abstract class BaseAjaxWizardBuilder<T extends Serializable> extends AjaxWizardBuilder<T> {\n+\n+    private static final long serialVersionUID = -5729026353086171480L;\n+\n+    public BaseAjaxWizardBuilder(final T defaultItem, final PageReference pageRef) {\n+        super(defaultItem, pageRef);\n+    }\n+\n+    @Override\n+    protected long getMaxWaitTimeInSeconds() {\n+        return SyncopeWebApplication.get().getMaxWaitTimeInSeconds();\n+    }\n+\n+    @Override\n+    protected void sendError(final String message) {\n+        SyncopeConsoleSession.get().error(message);\n+    }\n+\n+    @Override\n+    protected void sendWarning(final String message) {\n+        SyncopeConsoleSession.get().warn(message);\n+    }\n+\n+    @Override\n+    protected Future<Pair<Serializable, Serializable>> execute(\n+            final Callable<Pair<Serializable, Serializable>> future) {\n+        return SyncopeConsoleSession.get().execute(future);\n+    }\n+\n+}"},{"sha":"722d00730d916b5cb8cb89e0ec8907ca749b2b7b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards;\n \n+import org.apache.syncope.client.ui.commons.wizards.ModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -26,7 +28,6 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.wicket.Component;\n@@ -36,7 +37,6 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.event.IEventSource;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -46,11 +46,13 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.ui.commons.panels.NotificationPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractWizardMgtPanel;\n import org.apache.wicket.markup.html.basic.Label;\n \n-public abstract class WizardMgtPanel<T extends Serializable> extends Panel implements IEventSource {\n+public abstract class WizardMgtPanel<T extends Serializable> extends AbstractWizardMgtPanel<T> {\n \n     private static final long serialVersionUID = -4152438633429194882L;\n "},{"sha":"683e70b8da324534c43be18a7956dce036f07e05","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;"},{"sha":"d4c1923c13071f9a38b1adcbeb2d78c7fed7a731","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectDetails.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"27b49fdaa12f497b497f7086dc4199d61ac6f141","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectTemplateWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.TemplatableTO;"},{"sha":"156d594e820b45af33571b430c3ed75bf7c42a34","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,7 +23,8 @@\n import org.apache.syncope.client.console.layout.AnyObjectForm;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.request.AnyObjectCR;"},{"sha":"cb84a99f7acac322972cd33c53252e50ee4d8cf4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWrapper.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n \n public class AnyObjectWrapper extends AnyWrapper<AnyObjectTO> {"},{"sha":"d722918d07182175ad70b0b6871f91fc53e14f94","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":33,"deletions":6,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,15 +18,21 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n-import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n-import org.apache.syncope.client.console.layout.AnyForm;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractAnyWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyForm;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -35,7 +41,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n-public abstract class AnyWizardBuilder<A extends AnyTO> extends AjaxWizardBuilder<AnyWrapper<A>> {\n+public abstract class AnyWizardBuilder<A extends AnyTO> extends AbstractAnyWizardBuilder<A> {\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n@@ -103,7 +109,7 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n         }\n \n         if (formLayoutInfo.isAuxClasses()) {\n-            wizardModel.add(new AuxClasses(modelObject, anyTypeClasses));\n+            wizardModel.add(new ConsoleAuxClasses(modelObject, anyTypeClasses));\n         }\n \n         if (formLayoutInfo.isGroups()) {\n@@ -173,6 +179,7 @@ protected Details<A> addOptionalDetailsPanel(final AnyWrapper<A> modelObject) {\n         }\n     }\n \n+    @Override\n     protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n         // re-add to the updated object any missing plain or virtual attribute (compared to original): this to cope with\n         // form layout, which might have not included some plain or virtual attributes\n@@ -212,4 +219,24 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n         }\n     }\n \n+    @Override\n+    protected long getMaxWaitTimeInSeconds() {\n+        return SyncopeWebApplication.get().getMaxWaitTimeInSeconds();\n+    }\n+\n+    @Override\n+    protected void sendError(final String message) {\n+        SyncopeConsoleSession.get().error(message);\n+    }\n+\n+    @Override\n+    protected void sendWarning(final String message) {\n+        SyncopeConsoleSession.get().warn(message);\n+    }\n+\n+    @Override\n+    protected Future<Pair<Serializable, Serializable>> execute(\n+            final Callable<Pair<Serializable, Serializable>> future) {\n+        return SyncopeConsoleSession.get().execute(future);\n+    }\n }"},{"sha":"ca7f8ed30a770cd2d54085630dd468fc1b0640eb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -27,10 +27,10 @@\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;"},{"sha":"3efd0130113c5d9610d3862501720660e5b8fe90","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractAuxClasses;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+\n+public class ConsoleAuxClasses extends AbstractAuxClasses {\n+\n+    private static final long serialVersionUID = 552437609667518888L;\n+\n+    public <T extends AnyTO> ConsoleAuxClasses(final AnyWrapper<T> modelObject, final List<String> anyTypeClasses) {\n+        super(modelObject, anyTypeClasses);\n+    }\n+\n+    @Override\n+    protected final List<AnyTypeClassTO> listAnyTypecClasses() {\n+        return new AnyTypeClassRestClient().list();\n+    }\n+}"},{"sha":"52f251f56c1a5388589622e534ff0c43c40be8c8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -26,8 +27,8 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;"},{"sha":"2eeb91405ce5d014919f378f1c2ec2db985f9058","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,9 +23,10 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.pages.Realms;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.wicket.PageReference;"},{"sha":"6de2fa884f8e20a1fa929904668236e913a21995","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.panels.search.MapOfListModel;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;"},{"sha":"641fc64b134098f0f57533e7210224f085ea0477","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"bab9f0920db08f0ca90ee9949f5169e8f4cd7932","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupTemplateWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.TemplatableTO;"},{"sha":"d06c0bdd5d66f91e48757dce1c28eec9191fa0c6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,15 +18,16 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.io.Serializable;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.common.util.CollectionUtils;\n import org.apache.syncope.client.console.layout.GroupForm;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.request.GroupCR;"},{"sha":"bce9de98fad0bd7a2995b975a2645f1cb72f3608","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWrapper.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;"},{"sha":"f6b86041156b0c98df99ad48be1f52fb43946f44","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":45,"deletions":56,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,22 +18,22 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n-import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractGroups;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractGroupsModel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -42,46 +42,37 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.PropertyModel;\n \n-public class Groups extends WizardStep implements ICondition {\n+public class Groups extends AbstractGroups {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private static final int MAX_GROUP_LIST_CARDINALITY = 30;\n-\n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    private final List<DynRealmTO> allDynRealms = new DynRealmRestClient().list();\n-\n-    private GroupsModel groupsModel;\n-\n-    private final AnyTO anyTO;\n-\n     private boolean templateMode;\n \n     protected WebMarkupContainer dyngroupsContainer;\n \n     protected WebMarkupContainer dynrealmsContainer;\n \n-    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n-        super();\n-        this.templateMode = templateMode;\n+    private final ConsoleGroupsModel groupsModel;\n \n-        this.anyTO = modelObject.getInnerObject();\n+    private final List<DynRealmTO> allDynRealms = new ArrayList<>();\n \n-        groupsModel = new GroupsModel();\n+    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n+        super(modelObject);\n+        this.templateMode = templateMode;\n+        this.groupsModel = new ConsoleGroupsModel();\n \n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n@@ -91,18 +82,26 @@ public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean t\n         permissions.authorizeAll(RENDER);\n         // -----------------------------------------------------------------\n \n-        setOutputMarkupId(true);\n+        addDynamicGroupsContainer();\n \n-        WebMarkupContainer groupsContainer = new WebMarkupContainer(\"groupsContainer\");\n-        groupsContainer.setOutputMarkupId(true);\n-        groupsContainer.setOutputMarkupPlaceholderTag(true);\n-        add(groupsContainer);\n+        addGroupsPanel();\n \n-        dyngroupsContainer = new WebMarkupContainer(\"dyngroupsContainer\");\n-        dyngroupsContainer.setOutputMarkupId(true);\n-        dyngroupsContainer.setOutputMarkupPlaceholderTag(true);\n-        add(dyngroupsContainer);\n+        addDynamicRealmsContainer();\n+    }\n+\n+    private void addDynamicRealmsContainer() {\n+        dynrealmsContainer = new WebMarkupContainer(\"dynrealmsContainer\");\n+        dynrealmsContainer.setOutputMarkupId(true);\n+        dynrealmsContainer.setOutputMarkupPlaceholderTag(true);\n+        dynrealmsContainer.add(new AjaxPalettePanel.Builder<>().build(\"dynrealms\",\n+                new PropertyModel<>(anyTO, \"dynRealms\"),\n+                new ListModel<>(allDynRealms.stream().map(EntityTO::getKey).collect(Collectors.toList()))).\n+                hideLabel().setEnabled(false).setOutputMarkupId(true));\n+        add(dynrealmsContainer);\n+    }\n \n+    @Override\n+    protected void addGroupsPanel() {\n         if (anyTO instanceof GroupTO) {\n             groupsContainer.add(new Label(\"groups\").setVisible(false));\n             groupsContainer.setVisible(false);\n@@ -179,29 +178,13 @@ public List<String> getObject() {\n \n             // ---------------------------------\n         }\n+    }\n \n-        dynrealmsContainer = new WebMarkupContainer(\"dynrealmsContainer\");\n-        dynrealmsContainer.setOutputMarkupId(true);\n-        dynrealmsContainer.setOutputMarkupPlaceholderTag(true);\n-        dynrealmsContainer.add(new AjaxPalettePanel.Builder<>().build(\"dynrealms\",\n-                new PropertyModel<>(anyTO, \"dynRealms\"),\n-                new ListModel<>(allDynRealms.stream().map(EntityTO::getKey).collect(Collectors.toList()))).\n-                hideLabel().setEnabled(false).setOutputMarkupId(true));\n-        add(dynrealmsContainer);\n-\n-        // ------------------\n-        // insert changed label if needed\n-        // ------------------\n-        if (modelObject instanceof UserWrapper\n-                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n-                && !ListUtils.isEqualList(\n-                        UserWrapper.class.cast(modelObject).getInnerObject().getMemberships(),\n-                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getMemberships())) {\n-            groupsContainer.add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n-        } else {\n-            groupsContainer.add(new Label(\"changed\", StringUtils.EMPTY));\n-        }\n-        // ------------------\n+    private void addDynamicGroupsContainer() {\n+        dyngroupsContainer = new WebMarkupContainer(\"dyngroupsContainer\");\n+        dyngroupsContainer.setOutputMarkupId(true);\n+        dyngroupsContainer.setOutputMarkupPlaceholderTag(true);\n+        add(dyngroupsContainer);\n     }\n \n     @Override\n@@ -213,7 +196,7 @@ public boolean evaluate() {\n                         isActionAuthorized(this, RENDER);\n     }\n \n-    private class GroupsModel extends ListModel<GroupTO> {\n+    public class ConsoleGroupsModel extends AbstractGroupsModel {\n \n         private static final long serialVersionUID = -4541954630939063927L;\n \n@@ -234,7 +217,8 @@ public List<GroupTO> getObject() {\n         /**\n          * Retrieve the first MAX_GROUP_LIST_CARDINALITY assignable.\n          */\n-        private void reloadObject() {\n+        @Override\n+        protected void reloadObject() {\n             groups = groupRestClient.search(\n                     realm,\n                     SyncopeClient.getGroupSearchConditionBuilder().isAssignable().query(),\n@@ -244,6 +228,7 @@ private void reloadObject() {\n                     null);\n         }\n \n+        @Override\n         public List<MembershipTO> getMemberships() {\n             reload();\n             return memberships;\n@@ -252,7 +237,8 @@ public List<MembershipTO> getMemberships() {\n         /**\n          * Retrieve group memberships.\n          */\n-        private void reloadMemberships() {\n+        @Override\n+        protected void reloadMemberships() {\n             // this is to be sure to have group names (required to see membership details in approval page)\n             GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n \n@@ -286,6 +272,7 @@ private void reloadMemberships() {\n             memberships = GroupableRelatableTO.class.cast(anyTO).getMemberships();\n         }\n \n+        @Override\n         public List<String> getDynMemberships() {\n             reload();\n             return dynMemberships;\n@@ -294,7 +281,8 @@ public List<String> getDynMemberships() {\n         /**\n          * Retrieve dyn group memberships.\n          */\n-        private void reloadDynMemberships() {\n+        @Override\n+        protected void reloadDynMemberships() {\n             GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n \n             List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getDynMemberships().\n@@ -317,7 +305,8 @@ private void reloadDynMemberships() {\n         /**\n          * Reload data if the realm changes (see SYNCOPE-1135).\n          */\n-        private void reload() {\n+        @Override\n+        protected void reload() {\n             boolean reload;\n \n             if (Groups.this.templateMode) {"},{"sha":"627fee735ead6c6369c565956f1fc1ad30eb7037","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -37,8 +37,8 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;"},{"sha":"7a9de306da85d7d0ff258e544a78d5c24664a9bd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.io.Serializable;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -29,21 +31,21 @@\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.SchemaUtils;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.SchemaUtils;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;"},{"sha":"c25d458cafe199e4eadcad9337260504e9631a0c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -39,13 +41,13 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.RelationshipTypeRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AnyObjectTO;"},{"sha":"b44fadcdaa72d0180c64f4e47b7f5c4f81d64e8a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":5,"deletions":46,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,41 +18,20 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractResources;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.util.ListModel;\n \n-public class Resources extends WizardStep implements ICondition {\n+public class Resources extends AbstractResources {\n \n-    private static final long serialVersionUID = 552437609667518888L;\n-\n-    private final ListModel<String> available;\n+    private static final long serialVersionUID = 702900610508752856L;\n \n     public <T extends AnyTO> Resources(final AnyWrapper<T> modelObject) {\n-        final T entityTO = modelObject.getInnerObject();\n-\n-        if (modelObject instanceof UserWrapper\n-                && UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n-                && !modelObject.getInnerObject().getResources().equals(\n-                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getResources())) {\n-\n-            add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n-        } else {\n-            add(new Label(\"changed\", StringUtils.EMPTY));\n-        }\n+        super(modelObject);\n \n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n@@ -62,26 +41,6 @@ public <T extends AnyTO> Resources(final AnyWrapper<T> modelObject) {\n         permissions.authorize(RENDER,\n                 new org.apache.wicket.authroles.authorization.strategies.role.Roles(StandardEntitlement.RESOURCE_LIST));\n         // -----------------------------------------------------------------\n-\n-        this.setOutputMarkupId(true);\n-        this.available = new ListModel<>(Collections.<String>emptyList());\n-\n-        add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n-                new PropertyModel<List<String>>(entityTO, \"resources\") {\n-\n-            private static final long serialVersionUID = 3799387950428254072L;\n-\n-            @Override\n-            public List<String> getObject() {\n-                return new ArrayList<>(entityTO.getResources());\n-            }\n-\n-            @Override\n-            public void setObject(final List<String> object) {\n-                entityTO.getResources().clear();\n-                entityTO.getResources().addAll(object);\n-            }\n-        }, available).hideLabel().setOutputMarkupId(true));\n     }\n \n     @Override"},{"sha":"85a45ce63c78bf2104de9fbd9aebfa3ac557ce5e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -24,8 +24,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n \n public abstract class ResultPage<T extends Serializable> extends Panel implements WizardModalPanel<T> {\n "},{"sha":"1e9c38fb4b0c5edf9a9e7a941b8edd3f32cff3c5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -26,8 +28,8 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"39f04088b11bffed240fe3b9cd8a8ad753cbfa66","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -28,10 +28,10 @@\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n-import org.apache.syncope.client.console.commons.status.Status;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.ui.commons.status.Status;\n+import org.apache.syncope.client.ui.commons.status.StatusBean;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.panels.PropagationErrorPanel;"},{"sha":"89b92a4f2ac9dbb362636a401256fbaf42afa9b0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/TemplateWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTemplateWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,7 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyTO;\n \n public interface TemplateWizardBuilder<T extends AnyTO> {"},{"sha":"7cb6251c2aff0fe21bd1d40e5c874d7823bed6cb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/TypeExtensionWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FTypeExtensionWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -23,10 +23,10 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n@@ -38,7 +38,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class TypeExtensionWizardBuilder extends AjaxWizardBuilder<TypeExtensionTO> {\n+public class TypeExtensionWizardBuilder extends BaseAjaxWizardBuilder<TypeExtensionTO> {\n \n     private static final long serialVersionUID = -7185214439144835423L;\n "},{"sha":"bca999440c2985981176f5c95126ea770bf3b6f3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n import java.util.Collections;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;"},{"sha":"43bbaeb6f6343f61182fd556bbdb30202e684c19","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserTemplateWizardBuilder.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.TemplatableTO;\n import org.apache.syncope.common.lib.to.UserTO;"},{"sha":"8f12031bc450ad44ad6cb7535961fe14ac771c71","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -21,10 +21,12 @@\n import java.io.Serializable;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.layout.UserForm;\n-import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.layout.UserForm;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.request.PasswordPatch;"},{"sha":"627266962b501040f2ba4bd6d9aac13669b16be3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -26,12 +28,12 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;"},{"sha":"8fbc178e53ff4449c27ba3d2a2bcf975ab18038b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -29,10 +29,11 @@\n import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n@@ -47,7 +48,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class RoleWizardBuilder extends AjaxWizardBuilder<RoleWrapper> {\n+public class RoleWizardBuilder extends BaseAjaxWizardBuilder<RoleWrapper> {\n \n     private static final long serialVersionUID = 5945391813567245081L;\n "},{"sha":"f70fdfe86bad82ed85c862554ee3451676a404eb","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses.html"},{"sha":"56c00afe70a212d03f581a89b5dd43034d1ce903","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses.properties"},{"sha":"69fb846a2c40814e6f3aea632125cc5017ada236","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_it.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_it.properties"},{"sha":"5840b2f2baf6a627894f53dc6cfe4e5e5d347108","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ja.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_ja.properties"},{"sha":"c91f75c75aad88d854ff26c8ea9e18421c5b78e8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_pt_BR.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_pt_BR.properties"},{"sha":"7f391714ffe0a322c7766f40b99ad31806110d2d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConsoleAuxClasses_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConsoleAuxClasses_ru.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_ru.properties"},{"sha":"1fd32759e4744d5d0024aa92b069ea185acd2ee6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AbstractFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.html"},{"sha":"e2efccdc924573a6e4a81f2eae164691b173fa73","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.html"},{"sha":"c4b3da72a6689cb95b68ff27d334a6032f56a78a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDropDownChoicePanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.html"},{"sha":"633a3102638e57405e363f547b2e689f0883f21c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.html"},{"sha":"2d220382bc54d23cfee8ec74efa6be301b73f833","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.html"},{"sha":"56c60a8199f26318ba57e2e57034dc3ba7fe2bf7","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.html"},{"sha":"2c1b7bbcbf92888711561d08aa3dfb2ba4f79339","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxTextFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.html"},{"sha":"632307dcde75ebf01a41e4479e4d7004a7dd972b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel.html"},{"sha":"193287d60317fa89a156d2d2593da48e59ecbf82","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel.properties"},{"sha":"13be74d12223a9fcab142c0d44d70b754fb743f9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_it.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel_it.properties"},{"sha":"807c589ae0b2f26cce4daed41d0383f13ba54191","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ja.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel_ja.properties"},{"sha":"193287d60317fa89a156d2d2593da48e59ecbf82","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_pt_BR.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel_pt_BR.properties"},{"sha":"1c45ef70daebe97ac12b19705f4f58da9d8d6391","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel_ru.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/EncryptedFieldPanel_ru.properties"},{"sha":"79728dafa6a13c1198f8e59cab4c71de607de282","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/NonI18nPalette.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/NonI18nPalette.html"},{"sha":"249ac512e874e819005c45c192ebd06d76a2bb2a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/preview/AbstractBinaryPreviewer.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/preview/AbstractBinaryPreviewer.html"},{"sha":"7471fede1a3d72a0342dfbe429ad51eb3721d84e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/preview/DefaultPreviewer.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FDefaultPreviewer.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/preview/DefaultPreviewer.html"},{"sha":"c2ec0a9c8bd904cf61ac070abc6f35258d66b42e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/panels/LabelPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FLabelPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/LabelPanel.html"},{"sha":"1d5a8a29b518b221aa6c2a586630b2367946a7c4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/panels/NotificationPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FNotificationPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/NotificationPanel.html"},{"sha":"76ba597eff267d096535ec6b1caae71ab241e577","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wicket/markup/html/bootstrap/tabs/Accordion.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Ftabs%2FAccordion.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/tabs/Accordion.html"},{"sha":"7bd13e609bd1b98571223ec3a1ea39f45b3a6cee","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard.html"},{"sha":"cafa9d6953277a3df0e4ce439e77c021c195e406","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard.properties"},{"sha":"6d9ac2046f859f6d2be29b6a2bc5fcb84cfac7b1","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizardMgtButtonBar.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizardMgtButtonBar.html"},{"sha":"3230f79e949290678bf0e40279924c5a294b8113","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_it.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_it.properties"},{"sha":"8c1969ab29ebb2bceae948fc05e47b2f2f19b1ad","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ja.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_ja.properties"},{"sha":"6cca386a12ab1315c95e93e8d5fff9aea6c7ba56","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_pt_BR.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_pt_BR.properties"},{"sha":"af93f5a60fae4cd6073e6e6a2efaac6f75e1a79a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/AjaxWizard_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard_ru.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizard_ru.properties"},{"sha":"7adf2a09e2f52153705ab6cd6a3e4323927a9ebd","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/ui/commons/wizards/any/PasswordPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FPasswordPanel.html?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/PasswordPanel.html"},{"sha":"f2cb5c1d0b43d1c7e0735d313aca74ce1a929b83","filename":"client/idrepo/enduser/pom.xml","status":"added","additions":259,"deletions":0,"changes":259,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,259 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.client</groupId>\n+    <artifactId>syncope-client-idrepo</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Client IdRepo Enduser</name>\n+  <description>Apache Syncope Client IdRepo Enduser</description>\n+  <groupId>org.apache.syncope.client.idrepo</groupId>\n+  <artifactId>syncope-client-idrepo-enduser</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+  \n+  <dependencies>\n+    <dependency> \n+      <groupId>javax.servlet</groupId> \n+      <artifactId>javax.servlet-api</artifactId> \n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.giffing.wicket.spring.boot.starter</groupId>\n+      <artifactId>wicket-spring-boot-starter</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-log4j2</artifactId>\n+    </dependency>\n+      \n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-auth-roles</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-jquery-ui</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-kendo-ui</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-kendo-ui-culture</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-kendo-ui-theme-bootstrap</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-native-websocket-javax</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>de.agilecoders.wicket</groupId>\n+      <artifactId>wicket-bootstrap-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>de.agilecoders.wicket</groupId>\n+      <artifactId>wicket-bootstrap-extensions</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.client.idrepo</groupId>\n+      <artifactId>syncope-client-idrepo-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.client.idrepo</groupId>\n+      <artifactId>syncope-client-idrepo-ui-commons</artifactId>      \n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-security-jose</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.pdfbox</groupId>\n+      <artifactId>pdfbox</artifactId>\n+    </dependency>\n+      \n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>font-awesome</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>ionicons</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>bootbox</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>codemirror</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>google-diff-match-patch</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jsplumb</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars.bower</groupId>\n+      <artifactId>chart.js</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery-cookie</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery-ui</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jQuery-slimScroll</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-logging</groupId>\n+      <artifactId>commons-logging</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>jcl-over-slf4j</artifactId>\n+    </dependency>\n+  </dependencies>\n+  \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <excludes>\n+          <exclude>org/apache/syncope/**/*.properties</exclude>\n+          <exclude>**/*.woff</exclude>\n+          <exclude>**/*.woff2</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>false</filtering>\n+        <includes>\n+          <include>org/apache/syncope/**/*.properties</include>\n+          <include>**/*.woff</include>\n+          <include>**/*.woff2</include>\n+        </includes>\n+      </resource>\n+\n+      <resource>\n+        <directory>${basedir}/../../../src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>banner.txt</include>\n+        </includes>\n+      </resource>\n+\n+      <resource>\n+        <directory>${basedir}</directory>\n+        <targetPath>META-INF</targetPath>\n+        <includes>\n+          <include>LICENSE</include>\n+          <include>NOTICE</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+  </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <executions>\n+              <execution>\n+                <id>attach-sources</id>\n+                <goals>\n+                  <goal>jar-no-fork</goal>\n+                </goals>\n+                <configuration>\n+                  <includes>\n+                    <include>${basedir}/LICENSE</include>\n+                    <include>${basedir}/NOTICE</include>\n+                  </includes>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>\n\\ No newline at end of file"},{"sha":"df3837b0c9dacde0a2d6abb78a2c96ddb58bb3c7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.enduser.init.MIMETypesLoader;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.Bean;\n+\n+@SpringBootApplication\n+@EnableAutoConfiguration(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class })\n+public class SyncopeEnduserApplication extends SpringBootServletInitializer {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(SyncopeEnduserApplication.class, args);\n+    }\n+\n+    @Override\n+    protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n+        builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n+        return super.configure(builder);\n+    }\n+\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n+    }\n+\n+    @Bean\n+    public MIMETypesLoader mimeTypesLoader() {\n+        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n+        mimeTypesLoader.load();\n+        return mimeTypesLoader;\n+    }\n+}"},{"sha":"0a683a98310cc51fa348d65e37e015ded98d505d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserConstants.java","status":"renamed","additions":14,"deletions":19,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserConstants.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -16,25 +16,20 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-exports.goHome = function () {\n-  var home = 'http://localhost:9080/syncope-enduser/app/';\n-  browser.get(home);\n-};\n+package org.apache.syncope.client.enduser;\n \n-exports.doNext = function () {\n-  element.all(by.id('next')).last().click();\n-};\n+public final class SyncopeEnduserConstants {\n \n-exports.doCancel = function () {\n-  element.all(by.id('cancel')).last().click();\n-};\n+    public static final String CAPTCHA_SESSION_KEY = \"captcha\";\n \n-exports.doSave = function () {\n-  element.all(by.id('save')).last().click();\n-};\n+    public static final String XSRF_COOKIE = \"XSRF-TOKEN\";\n \n-exports.waitSpinner = function () {\n-  var el = element(by.css('treasure-overlay-spinner-active'));\n-  var EC = protractor.ExpectedConditions;\n-  browser.wait(EC.not(EC.presenceOf(el)), 5000);\n-};\n\\ No newline at end of file\n+    public static final String XSRF_HEADER_NAME = \"X-XSRF-TOKEN\";\n+\n+    public static final String MEMBERSHIP_ATTR_SEPARATOR = \"#\";\n+\n+    private SyncopeEnduserConstants() {\n+        // private constructor for utility class\n+    }\n+\n+}","previous_filename":"fit/enduser-reference/src/test/resources/tests/abstract.js"},{"sha":"ece546a12a95497e6a58fda5bc52dd430a00a8a7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"added","additions":230,"deletions":0,"changes":230,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,230 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import java.text.DateFormat;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.Future;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.core.EntityTag;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.info.PlatformInfo;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.protocol.http.WebSession;\n+import org.apache.wicket.request.Request;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.task.TaskRejectedException;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n+\n+/**\n+ * Custom Syncope Enduser Session class.\n+ */\n+public class SyncopeEnduserSession extends WebSession {\n+\n+    private static final long serialVersionUID = 1284946129513378647L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeEnduserSession.class);\n+\n+    private final SyncopeClient anonymousClient;\n+\n+    private SyncopeClient client;\n+\n+    private final PlatformInfo platformInfo;\n+\n+    private UserTO selfTO;\n+\n+    private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<>());\n+    \n+    private final ThreadPoolTaskExecutor executor;\n+\n+    public static SyncopeEnduserSession get() {\n+        return (SyncopeEnduserSession) Session.get();\n+    }\n+\n+    public SyncopeEnduserSession(final Request request) {\n+        super(request);\n+        anonymousClient = SyncopeWebApplication.get().getClientFactory().\n+                create(new AnonymousAuthenticationHandler(\n+                        SyncopeWebApplication.get().getAnonymousUser(),\n+                        SyncopeWebApplication.get().getAnonymousKey()));\n+        platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n+        \n+        executor = new ThreadPoolTaskExecutor();\n+        executor.setWaitForTasksToCompleteOnShutdown(false);\n+        executor.setCorePoolSize(SyncopeWebApplication.get().getCorePoolSize());\n+        executor.setMaxPoolSize(SyncopeWebApplication.get().getMaxPoolSize());\n+        executor.setQueueCapacity(SyncopeWebApplication.get().getQueueCapacity());\n+        executor.initialize();\n+    }\n+\n+    public void cleanup() {\n+        client = null;\n+        selfTO = null;\n+        services.clear();\n+    }\n+\n+    public MediaType getMediaType() {\n+        return SyncopeWebApplication.get().getClientFactory().getContentType().getMediaType();\n+    }\n+\n+    public String getJWT() {\n+        return client == null ? null : client.getJWT();\n+    }\n+\n+    private void afterAuthentication(final String username) {\n+        try {\n+            selfTO = client.self().getRight();\n+        } catch (ForbiddenException e) {\n+            LOG.warn(\"Could not read self(), probably in a {} scenario\", StandardEntitlement.MUST_CHANGE_PASSWORD, e);\n+\n+            selfTO = new UserTO();\n+            selfTO.setUsername(username);\n+            selfTO.setMustChangePassword(true);\n+        }\n+\n+        // bind explicitly this session to have a stateful behavior during http requests, unless session will\n+        // expire at each request\n+        this.bind();\n+    }\n+\n+    public boolean authenticate(final String username, final String password) {\n+        boolean authenticated = false;\n+\n+        try {\n+            client = SyncopeWebApplication.get().getClientFactory().\n+                    setDomain(SyncopeWebApplication.get().getDomain()).\n+                    create(username, password);\n+\n+            afterAuthentication(username);\n+\n+            authenticated = true;\n+        } catch (Exception e) {\n+            LOG.error(\"Authentication failed\", e);\n+        }\n+\n+        return authenticated;\n+    }\n+\n+    public boolean authenticate(final String jwt) {\n+        boolean authenticated = false;\n+\n+        try {\n+            client = SyncopeWebApplication.get().getClientFactory().\n+                    setDomain(SyncopeWebApplication.get().getDomain()).create(jwt);\n+\n+            afterAuthentication(null);\n+\n+            authenticated = true;\n+        } catch (Exception e) {\n+            LOG.error(\"Authentication failed\", e);\n+        }\n+\n+        return authenticated;\n+    }\n+\n+    @Override\n+    public void invalidate() {\n+        if (isAuthenticated()) {\n+            try {\n+                client.logout();\n+            } catch (Exception e) {\n+                LOG.debug(\"Unexpected exception while logging out\", e);\n+            } finally {\n+                client = null;\n+                selfTO = null;\n+            }\n+        }\n+        super.invalidate();\n+    }\n+\n+    public <T> T getService(final Class<T> serviceClass) {\n+        return (client == null || !isAuthenticated())\n+                ? anonymousClient.getService(serviceClass)\n+                : client.getService(serviceClass);\n+    }\n+\n+    public <T> T getService(final String etag, final Class<T> serviceClass) {\n+        T serviceInstance = getService(serviceClass);\n+        WebClient.client(serviceInstance).match(new EntityTag(etag), false).\n+                type(MediaType.APPLICATION_JSON).accept(MediaType.APPLICATION_JSON);\n+\n+        return serviceInstance;\n+    }\n+\n+    public PlatformInfo getPlatformInfo() {\n+        return platformInfo;\n+    }\n+\n+    public UserTO getSelfTO() {\n+        if (selfTO == null) {\n+            throw new IllegalArgumentException(\"User not authenticated\");\n+        }\n+        return selfTO;\n+    }\n+\n+    public <T> Future<T> execute(final Callable<T> command) {\n+        try {\n+            return executor.submit(command);\n+        } catch (TaskRejectedException e) {\n+            LOG.error(\"Could not execute {}\", command, e);\n+\n+            return new CompletableFuture<>();\n+        }\n+    }\n+\n+    public boolean isAuthenticated() {\n+        return client != null && client.getJWT() != null;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T> T getCachedService(final Class<T> serviceClass) {\n+        T service;\n+        if (services.containsKey(serviceClass)) {\n+            service = (T) services.get(serviceClass);\n+        } else {\n+            service = client.getService(serviceClass);\n+            services.put(serviceClass, service);\n+        }\n+\n+        WebClient.client(service).type(MediaType.APPLICATION_JSON).accept(MediaType.APPLICATION_JSON);\n+\n+        return service;\n+    }\n+\n+    public <T> void resetClient(final Class<T> service) {\n+        T serviceInstance = getCachedService(service);\n+        WebClient.client(serviceInstance).reset();\n+    }\n+\n+    public FastDateFormat getDateFormat() {\n+        return FastDateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, getLocale());\n+    }\n+}"},{"sha":"c5bf95b328eeb1a48c29720ac19ab3422e4d030d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"added","additions":407,"deletions":0,"changes":407,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,407 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import org.apache.syncope.client.enduser.themes.EnduserTheme;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.giffing.wicket.spring.boot.starter.app.WicketBootStandardWebApplication;\n+import de.agilecoders.wicket.core.Bootstrap;\n+import de.agilecoders.wicket.core.settings.BootstrapSettings;\n+import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n+import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Properties;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.monitor.FileAlterationListener;\n+import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;\n+import org.apache.commons.io.monitor.FileAlterationMonitor;\n+import org.apache.commons.io.monitor.FileAlterationObserver;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n+import org.apache.syncope.client.enduser.pages.Login;\n+import org.apache.syncope.client.enduser.pages.MustChangePassword;\n+import org.apache.syncope.client.enduser.pages.Self;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.client.ui.commons.SyncopeUIRequestCycleListener;\n+import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener;\n+import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.request.Request;\n+import org.apache.wicket.request.Response;\n+import org.apache.wicket.request.component.IRequestablePage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+import org.apache.wicket.request.resource.ResourceReference;\n+import org.apache.wicket.resource.JQueryResourceReference;\n+import org.apache.wicket.util.lang.Args;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SyncopeWebApplication extends WicketBootStandardWebApplication {\n+\n+    private static final long serialVersionUID = -6445919351044845120L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n+\n+    private static final String ENDUSER_PROPERTIES = \"enduser.properties\";\n+\n+    private static final String CUSTOM_FORM_ATTRIBUTES_FILE = \"customFormAttributes.json\";\n+\n+    public static final List<Locale> SUPPORTED_LOCALES = Collections.unmodifiableList(Arrays.asList(\n+            new Locale[] {\n+                Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE\n+            }));\n+\n+    public static SyncopeWebApplication get() {\n+        return (SyncopeWebApplication) WebApplication.get();\n+    }\n+\n+    @Autowired\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    private String domain;\n+\n+    private String adminUser;\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private boolean captchaEnabled;\n+\n+    private boolean xsrfEnabled;\n+\n+    private Integer maxWaitTime;\n+\n+    private Integer corePoolSize;\n+\n+    private Integer maxPoolSize;\n+\n+    private Integer queueCapacity;\n+\n+    private Integer maxUploadFileSizeMB;\n+\n+    private SyncopeClientFactoryBean clientFactory;\n+\n+    private Map<String, CustomAttributesInfo> customFormAttributes;\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Override\n+    protected void init() {\n+        super.init();\n+\n+        // read enduser.properties\n+        Properties props = PropertyUtils.read(getClass(), ENDUSER_PROPERTIES, \"enduser.directory\");\n+\n+        domain = props.getProperty(\"domain\", SyncopeConstants.MASTER_DOMAIN);\n+        adminUser = props.getProperty(\"adminUser\");\n+        Args.notNull(adminUser, \"<adminUser>\");\n+        anonymousUser = props.getProperty(\"anonymousUser\");\n+        Args.notNull(anonymousUser, \"<anonymousUser>\");\n+        anonymousKey = props.getProperty(\"anonymousKey\");\n+        Args.notNull(anonymousKey, \"<anonymousKey>\");\n+\n+        captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n+        Args.notNull(captchaEnabled, \"<captcha>\");\n+\n+        xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n+        Args.notNull(xsrfEnabled, \"<xsrf>\");\n+\n+        String scheme = props.getProperty(\"scheme\");\n+        Args.notNull(scheme, \"<scheme>\");\n+        String host = props.getProperty(\"host\");\n+        Args.notNull(host, \"<host>\");\n+        String port = props.getProperty(\"port\");\n+        Args.notNull(port, \"<port>\");\n+        String rootPath = props.getProperty(\"rootPath\");\n+        Args.notNull(rootPath, \"<rootPath>\");\n+        String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n+        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n+        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n+                ? null\n+                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n+\n+        maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n+\n+        // Resource connections check thread pool size\n+        corePoolSize = Integer.valueOf(props.getProperty(\"executor.corePoolSize\", \"5\"));\n+        maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n+        queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n+\n+        clientFactory = new SyncopeClientFactoryBean().\n+                setAddress(scheme + \"://\" + host + \":\" + port + StringUtils.prependIfMissing(rootPath, \"/\")).\n+                setContentType(SyncopeClientFactoryBean.ContentType.JSON).\n+                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n+\n+        // read customFormAttributes.json\n+        File enduserDir;\n+        try (InputStream is = getClass().getResourceAsStream(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE)) {\n+            customFormAttributes = MAPPER.readValue(is,\n+                    new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+            });\n+            enduserDir = new File(props.getProperty(\"enduser.directory\"));\n+            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n+            if (existsEnduserDir) {\n+                File customFormAttributesFile = FileUtils.getFile(enduserDir, CUSTOM_FORM_ATTRIBUTES_FILE);\n+                if (customFormAttributesFile.exists()\n+                        && customFormAttributesFile.canRead()\n+                        && customFormAttributesFile.isFile()) {\n+                    customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(customFormAttributesFile),\n+                            new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                    });\n+                }\n+            }\n+            FileAlterationObserver observer = existsEnduserDir\n+                    ? new FileAlterationObserver(enduserDir,\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE))\n+                    : new FileAlterationObserver(getClass().getResource(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE).getFile(),\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE));\n+\n+            FileAlterationMonitor monitor = new FileAlterationMonitor(5000);\n+\n+            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n+\n+                @Override\n+                public void onFileChange(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has changed. Reloading form attributes customization configuration.\",\n+                                CUSTOM_FORM_ATTRIBUTES_FILE);\n+                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                        });\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileCreate(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has been created. Loading form attributes customization configuration.\",\n+                                CUSTOM_FORM_ATTRIBUTES_FILE);\n+                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                        });\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileDelete(final File file) {\n+                    LOG.trace(\"{} has been deleted. Resetting form attributes customization configuration.\",\n+                            CUSTOM_FORM_ATTRIBUTES_FILE);\n+                    customFormAttributes = null;\n+                }\n+            };\n+\n+            observer.addListener(listener);\n+            monitor.addObserver(observer);\n+            monitor.start();\n+        } catch (Exception e) {\n+            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_FORM_ATTRIBUTES_FILE, e);\n+        }\n+\n+        // Application settings\n+        IBootstrapSettings settings = new BootstrapSettings();\n+\n+        // set theme provider\n+        settings.setThemeProvider(new SingleThemeProvider(new EnduserTheme()));\n+\n+        // install application settings\n+        Bootstrap.install(this, settings);\n+\n+        getResourceSettings().setUseMinifiedResources(true);\n+\n+        getResourceSettings().setThrowExceptionOnMissingResource(true);\n+\n+        getJavaScriptLibrarySettings().setJQueryReference(JQueryResourceReference.getV2());\n+\n+        getResourceSettings().setThrowExceptionOnMissingResource(true);\n+\n+        getMarkupSettings().setStripWicketTags(true);\n+        getMarkupSettings().setCompressWhitespace(true);\n+\n+        getMarkupSettings().setStripWicketTags(true);\n+        getMarkupSettings().setCompressWhitespace(true);\n+\n+        String csrf = props.getProperty(\"csrf\");\n+\n+        if (BooleanUtils.toBoolean(csrf)) {\n+            getRequestCycleListeners().add(new CsrfPreventionRequestCycleListener());\n+        }\n+\n+        getRequestCycleListeners().add(new SyncopeUIRequestCycleListener() {\n+\n+            @Override\n+            protected boolean isSignedIn() {\n+                return SyncopeEnduserSession.get().isAuthenticated();\n+            }\n+\n+            @Override\n+            protected void invalidateSession() {\n+                SyncopeEnduserSession.get().invalidate();\n+            }\n+\n+            @Override\n+            protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n+                return new Login(errorParameters);\n+            }\n+\n+        });\n+\n+        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n+            Resource annotation = resource.getAnnotation(Resource.class);\n+            try {\n+                AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n+\n+                mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n+\n+                    private static final long serialVersionUID = -128426276529456602L;\n+\n+                    @Override\n+                    public IResource getResource() {\n+                        return instance;\n+                    }\n+                });\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}\", resource.getName(), e);\n+            }\n+        }\n+        \n+        // enable component path\n+        if (getDebugSettings().isAjaxDebugModeEnabled()) {\n+            getDebugSettings().setComponentPathAttributeName(\"syncope-path\");\n+        }\n+    }\n+\n+    @Override\n+    public Class<? extends Page> getHomePage() {\n+        return SyncopeEnduserSession.get().isAuthenticated() && SyncopeEnduserSession.get().getSelfTO().\n+                isMustChangePassword()\n+                        ? MustChangePassword.class\n+                        : SyncopeEnduserSession.get().isAuthenticated()\n+                        ? Self.class\n+                        : Login.class;\n+    }\n+\n+    @Override\n+    public Session newSession(final Request request, final Response response) {\n+        return new SyncopeEnduserSession(request);\n+    }\n+\n+    protected Class<? extends WebPage> getSignInPageClass() {\n+        return Login.class;\n+    }\n+\n+    public String getDomain() {\n+        return domain;\n+    }\n+\n+    public String getAdminUser() {\n+        return adminUser;\n+    }\n+\n+    public String getAnonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    public String getAnonymousKey() {\n+        return anonymousKey;\n+    }\n+\n+    public SyncopeClientFactoryBean getClientFactory() {\n+        return clientFactory;\n+    }\n+\n+    public boolean isCaptchaEnabled() {\n+        return captchaEnabled;\n+    }\n+\n+    public boolean isXsrfEnabled() {\n+        return xsrfEnabled;\n+    }\n+\n+    public Integer getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n+    }\n+\n+    public Integer getCorePoolSize() {\n+        return corePoolSize;\n+    }\n+\n+    public void setCorePoolSize(final Integer corePoolSize) {\n+        this.corePoolSize = corePoolSize;\n+    }\n+\n+    public Integer getMaxPoolSize() {\n+        return maxPoolSize;\n+    }\n+\n+    public void setMaxPoolSize(final Integer maxPoolSize) {\n+        this.maxPoolSize = maxPoolSize;\n+    }\n+\n+    public Integer getQueueCapacity() {\n+        return queueCapacity;\n+    }\n+\n+    public void setQueueCapacity(final Integer queueCapacity) {\n+        this.queueCapacity = queueCapacity;\n+    }\n+\n+    public Integer getMaxWaitTimeInSeconds() {\n+        return maxWaitTime;\n+    }\n+\n+    public void setMaxWaitTime(final Integer maxWaitTime) {\n+        this.maxWaitTime = maxWaitTime;\n+    }\n+\n+    public Map<String, CustomAttributesInfo> getCustomFormAttributes() {\n+        return customFormAttributes;\n+    }\n+\n+    public void setCustomFormAttributes(final Map<String, CustomAttributesInfo> customFormAttributes) {\n+        this.customFormAttributes.clear();\n+        this.customFormAttributes.putAll(customFormAttributes);\n+    }\n+}"},{"sha":"b54e142062c4e23ab8c13377d6c19a2a2d174ace","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/annotations/Resource.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fannotations%2FResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fannotations%2FResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fannotations%2FResource.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface Resource {\n+\n+    /**\n+     * @return string for {@link org.apache.wicket.request.resource.ResourceReference#ResourceReference}\n+     */\n+    String key();\n+\n+    /**\n+     * @return path for{@link org.apache.wicket.protocol.http.WebApplication#mountResource}\n+     */\n+    String path();\n+\n+}"},{"sha":"f6bbab4f7913fd8e9031c214ed0b12fa3fe75fe9","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/commons/PreviewUtils.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fcommons%2FPreviewUtils.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.commons;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.DefaultPreviewer;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n+\n+@Component\n+public final class PreviewUtils {\n+\n+    public static PreviewUtils getInstance() {\n+        return new PreviewUtils();\n+    }\n+\n+    @SpringBean\n+    protected ClassPathScanImplementationLookup lookup;\n+\n+    public AbstractBinaryPreviewer getDefaultPreviewer(final String mimeType) {\n+        return new DefaultPreviewer(\"previewer\", mimeType);\n+    }\n+\n+    public AbstractBinaryPreviewer getPreviewer(final String mimeType) {\n+        if (StringUtils.isBlank(mimeType)) {\n+            return null;\n+        }\n+\n+        Class<? extends AbstractBinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n+        try {\n+            return previewer == null\n+                    ? null\n+                    : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class).\n+                            newInstance(new Object[] { \"previewer\", mimeType });\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+}"},{"sha":"9cdd056c81d4e43071347cf72c0b646e3274eb26","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/init/ClassPathScanImplementationLookup.java","status":"added","additions":113,"deletions":0,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.init;\n+\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.panels.SSOLoginFormPanel;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AssignableTypeFilter;\n+import org.springframework.util.ClassUtils;\n+\n+public class ClassPathScanImplementationLookup {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ClassPathScanImplementationLookup.class);\n+\n+    private static final String DEFAULT_BASE_PACKAGE = \"org.apache.syncope.client.enduser\";\n+\n+    private List<Class<? extends SSOLoginFormPanel>> ssoLoginFormPanels = new ArrayList<>();\n+\n+    private List<Class<? extends AbstractResource>> resources = new ArrayList<>();\n+\n+    private List<Class<? extends AbstractBinaryPreviewer>> previewers = new ArrayList<>();\n+\n+    /**\n+     * This method can be overridden by subclasses to customize classpath scan.\n+     *\n+     * @return basePackage for classpath scanning\n+     */\n+    protected String getBasePackage() {\n+        return DEFAULT_BASE_PACKAGE;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public void load() {\n+        resources = new ArrayList<>();\n+        previewers = new ArrayList<>();\n+\n+        ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractResource.class));\n+\n+        for (BeanDefinition bd : scanner.findCandidateComponents(getBasePackage())) {\n+            try {\n+                Class<?> clazz = ClassUtils.resolveClassName(bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+                boolean isAbsractClazz = Modifier.isAbstract(clazz.getModifiers());\n+\n+                if (!isAbsractClazz) {\n+                    if (AbstractResource.class.isAssignableFrom(clazz)) {\n+                        if (clazz.isAnnotationPresent(Resource.class)) {\n+                            resources.add((Class<? extends AbstractResource>) clazz);\n+                        } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n+                            previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                        } else {\n+                            LOG.error(\"Could not find annotation {} in {}, ignoring\",\n+                                    Resource.class.getName(), clazz.getName());\n+                        }\n+                    }\n+                }\n+            } catch (Throwable t) {\n+                LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n+            }\n+        }\n+        resources = Collections.unmodifiableList(resources);\n+    }\n+\n+    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n+        Class<? extends AbstractBinaryPreviewer> previewer = null;\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n+            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n+            if (candidate.isAnnotationPresent(BinaryPreview.class)\n+                    && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n+                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n+                previewer = candidate;\n+            }\n+        }\n+        return previewer;\n+    }\n+\n+    public List<Class<? extends AbstractResource>> getResources() {\n+        return resources;\n+    }\n+\n+    public List<Class<? extends SSOLoginFormPanel>> getSSOLoginFormPanels() {\n+        return this.ssoLoginFormPanels;\n+    }\n+\n+}"},{"sha":"596f17fece6d3b974a205f5a3b55796cff777e79","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/init/MIMETypesLoader.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.init;\n+\n+import java.io.IOException;\n+import org.apache.syncope.client.ui.commons.AbstractMIMETypesLoader;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+public class MIMETypesLoader extends AbstractMIMETypesLoader {\n+\n+    @Override\n+    protected String getMimeTypesFile() throws IOException {\n+        return IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes.json\"));\n+    }\n+}"},{"sha":"c921e9e3207b9c5ddc39280ff3af481af619f11a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/layout/FormLayoutInfoUtils.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FFormLayoutInfoUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FFormLayoutInfoUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FFormLayoutInfoUtils.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.layout;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.rest.RoleRestClient;\n+import org.apache.syncope.client.ui.commons.wizards.ModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n+\n+/**\n+ * Utility methods for dealing with form layout information.\n+ */\n+public final class FormLayoutInfoUtils {\n+\n+    private static final RoleRestClient ROLE_REST_CLIENT = new RoleRestClient();\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    public static UserFormLayoutInfo fetch(\n+            final Collection<String> anyTypes) {\n+\n+        List<String> ownedRoles = SyncopeEnduserSession.get().getSelfTO().getRoles();\n+        try {\n+            JsonNode tree = null;\n+            for (int i = 0; i < ownedRoles.size() && tree == null; i++) {\n+                String consoleLayoutInfo = ROLE_REST_CLIENT.readConsoleLayoutInfo(ownedRoles.get(i));\n+                if (StringUtils.isNotBlank(consoleLayoutInfo)) {\n+                    tree = MAPPER.readTree(consoleLayoutInfo);\n+                }\n+            }\n+            if (tree == null) {\n+                tree = MAPPER.createObjectNode();\n+            }\n+\n+            UserFormLayoutInfo userFormLayoutInfo = tree.has(AnyTypeKind.USER.name())\n+                    ? MAPPER.treeToValue(tree.get(AnyTypeKind.USER.name()), UserFormLayoutInfo.class)\n+                    : new UserFormLayoutInfo();\n+\n+            return userFormLayoutInfo;\n+        } catch (IOException e) {\n+            throw new IllegalArgumentException(\"While parsing console layout info for \"\n+                    + SyncopeEnduserSession.get().getSelfTO().getUsername(), e);\n+        }\n+    }\n+\n+    public static String defaultConsoleLayoutInfoIfEmpty(final String content, final List<String> anyTypes) {\n+        String result;\n+\n+        if (StringUtils.isBlank(content)) {\n+            try {\n+                ObjectNode tree = MAPPER.createObjectNode();\n+\n+                tree.set(AnyTypeKind.USER.name(), MAPPER.valueToTree(new UserFormLayoutInfo()));\n+\n+                result = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(tree);\n+            } catch (IOException e) {\n+                throw new IllegalArgumentException(\"While generating default console layout info for \"\n+                        + SyncopeEnduserSession.get().getSelfTO().getUsername(), e);\n+            }\n+        } else {\n+            try {\n+                result = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(MAPPER.readTree(content));\n+            } catch (IOException e) {\n+                result = content;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public static ModalPanelBuilder<AnyWrapper<UserTO>> instantiate(\n+            final UserTO userTO,\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo anyFormLayout,\n+            final PageReference pageRef) {\n+\n+        try {\n+            return anyFormLayout.getFormClass().getConstructor(\n+                    userTO.getClass(), // previous\n+                    userTO.getClass(), // actual\n+                    List.class,\n+                    anyFormLayout.getClass(),\n+                    pageRef.getClass()).\n+                    newInstance(null, userTO, anyTypeClasses, anyFormLayout, pageRef);\n+\n+        } catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException\n+                | IllegalArgumentException | InvocationTargetException e) {\n+            throw new IllegalArgumentException(\"Could not instantiate \" + anyFormLayout.getFormClass().getName(), e);\n+        }\n+    }\n+\n+    private FormLayoutInfoUtils() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"865b931fbd1acf36121d454249ae3a420e9fadb1","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/layout/UserFormLayoutInfo.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FUserFormLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FUserFormLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Flayout%2FUserFormLayoutInfo.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.layout;\n+\n+import org.apache.syncope.client.enduser.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.client.ui.commons.layout.AbstractAnyFormLayout;\n+import org.apache.syncope.client.ui.commons.layout.UserForm;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserFormLayoutInfo extends AbstractAnyFormLayout<UserTO, UserForm> {\n+\n+    private static final long serialVersionUID = -5573691733739618500L;\n+\n+    private boolean passwordManagement = true;\n+\n+    @Override\n+    protected Class<? extends UserForm> getDefaultFormClass() {\n+        return UserWizardBuilder.class;\n+    }\n+\n+    public boolean isPasswordManagement() {\n+        return passwordManagement;\n+    }\n+\n+    public void setPasswordManagement(final boolean passwordManagement) {\n+        this.passwordManagement = passwordManagement;\n+    }\n+}"},{"sha":"4ba9685a5a34cd77c4ac5ef7874af4d9b252938a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/AjaxDateFieldPanel.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.markup.html.form;\n+\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDatePicker;\n+import java.util.Date;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.ui.commons.markup.html.form.DateFieldPanel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDateFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = 1919852712185883648L;\n+\n+    public AjaxDateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = new AjaxDatePicker(\"field\", model, AjaxDateFieldPanel.this.getLocale(), datePattern);\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        FieldPanel<Date> panel = new AjaxDateFieldPanel(getId(), name, new Model<>(), fmt.getPattern());\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+\n+    @Override\n+    protected FastDateFormat getDateFormat(final String datePattern) {\n+        return datePattern == null\n+                ? SyncopeEnduserSession.get().getDateFormat()\n+                : FastDateFormat.getInstance(datePattern);\n+    }\n+}"},{"sha":"7073ae2f0a01bdd23c810b36e3bf3d92e2046e71","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/AjaxDateTimeFieldPanel.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.markup.html.form;\n+\n+import org.apache.syncope.client.ui.commons.markup.html.form.DateFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDateTimePicker;\n+import java.util.Date;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDateTimeFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    public AjaxDateTimeFieldPanel(\n+            final String id, final String name, final IModel<Date> model, final String dateTimePattern) {\n+\n+        super(id, name, model, dateTimePattern);\n+\n+        // dateTimePattern should be spit into separate date and time pattern strings in order to be passed to the\n+        // AjaxDateTimePicker constructor, but there is no safe way to do that - ignoring\n+        field = new AjaxDateTimePicker(\"field\", model, getLocale());\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        FieldPanel<Date> panel = new AjaxDateTimeFieldPanel(getId(), name, new Model<>(null), fmt.getPattern());\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+\n+    @Override\n+    protected FastDateFormat getDateFormat(final String datePattern) {\n+        return datePattern == null\n+                ? SyncopeEnduserSession.get().getDateFormat()\n+                : FastDateFormat.getInstance(datePattern);\n+    }\n+}"},{"sha":"26eee3bbf054b242e9190453ba22ed63daa7b241","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/AjaxDownload.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.markup.html.form;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.init.MIMETypesLoader;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.AbstractAjaxBehavior;\n+import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n+import org.apache.wicket.request.resource.ContentDisposition;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.util.time.Duration;\n+\n+public abstract class AjaxDownload extends AbstractAjaxBehavior {\n+\n+    private static final long serialVersionUID = 7203445884857810583L;\n+\n+    @SpringBean\n+    private MIMETypesLoader mimeTypesLoader;\n+\n+    private final String name;\n+\n+    private String fileKey;\n+\n+    private String mimeType;\n+\n+    private final boolean addAntiCache;\n+\n+    public AjaxDownload(final String name, final boolean addAntiCache) {\n+        super();\n+        this.name = name;\n+        this.addAntiCache = addAntiCache;\n+    }\n+\n+    public AjaxDownload(final String name, final String fileKey, final String mimeType, final boolean addAntiCache) {\n+        this(name, addAntiCache);\n+        this.fileKey = fileKey;\n+        this.mimeType = mimeType;\n+    }\n+\n+    public void initiate(final AjaxRequestTarget target) {\n+\n+        String url = getCallbackUrl().toString();\n+        if (addAntiCache) {\n+            url = url + (url.contains(\"?\") ? \"&\" : \"?\");\n+            url = url + \"antiCache=\" + System.currentTimeMillis();\n+        }\n+        target.appendJavaScript(\"setTimeout(\\\"window.location.href='\" + url + \"'\\\", 100);\");\n+    }\n+\n+    @Override\n+    public void onRequest() {\n+        HttpResourceStream stream = getResourceStream();\n+        ResourceStreamRequestHandler handler = new ResourceStreamRequestHandler(stream);\n+        String key = StringUtils.isNotBlank(fileKey) ? fileKey + \"_\" : \"\";\n+        String ext = \"\";\n+        if (StringUtils.isNotBlank(mimeType)) {\n+            String extByMimeType = mimeTypesLoader.getFileExt(mimeType);\n+            ext = StringUtils.isBlank(extByMimeType) ? \".bin\" : (\".\" + extByMimeType);\n+        }\n+        String fileName = key + (stream.getFilename() == null ? name : stream.getFilename()) + ext;\n+\n+        handler.setFileName(fileName);\n+        handler.setContentDisposition(ContentDisposition.ATTACHMENT);\n+        handler.setCacheDuration(Duration.NONE);\n+        getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(handler);\n+    }\n+\n+    protected abstract HttpResourceStream getResourceStream();\n+\n+}"},{"sha":"3352bd197085fa9ff8ac16d57c3e8657eaa55812","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"added","additions":304,"deletions":0,"changes":304,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,304 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.markup.html.form;\n+\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+\n+import static de.agilecoders.wicket.jquery.JQuery.$;\n+\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.BootstrapFileInputField;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileInputConfig;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileinputJsReference;\n+import de.agilecoders.wicket.jquery.JQuery;\n+import de.agilecoders.wicket.jquery.function.IFunction;\n+import java.io.ByteArrayInputStream;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.HttpResourceStream;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.commons.PreviewUtils;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.BaseBinaryFieldPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.StatelessForm;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.form.upload.FileUpload;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.util.lang.Bytes;\n+\n+public class BinaryFieldPanel extends BaseBinaryFieldPanel {\n+\n+    private static final long serialVersionUID = 6264462604183088931L;\n+\n+    private static final PreviewUtils PREVIEW_UTILS = PreviewUtils.getInstance();\n+\n+    private final String mimeType;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final AjaxLink<Void> downloadLink;\n+\n+    private final Form<?> uploadForm;\n+\n+    private final Fragment emptyFragment;\n+\n+    private final BootstrapFileInputField fileUpload;\n+\n+    private final AjaxDownload fileDownload;\n+\n+    private final AbstractBinaryPreviewer previewer;\n+\n+    private final IndicatingAjaxLink<Void> resetLink;\n+\n+    private final Bytes maxUploadSize;\n+\n+    private final IModel<String> model;\n+\n+    private final String fileKey;\n+\n+    public BinaryFieldPanel(\n+            final String id,\n+            final String name,\n+            final IModel<String> model,\n+            final String mimeType,\n+            final String fileKey) {\n+        super(id, name, model);\n+        this.model = model;\n+        this.fileKey = fileKey;\n+        this.mimeType = mimeType;\n+\n+        previewer = PREVIEW_UTILS.getPreviewer(mimeType);\n+\n+        maxUploadSize = SyncopeWebApplication.get().getMaxUploadFileSizeMB() == null\n+                ? null\n+                : Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n+        uploadForm = new StatelessForm<>(\"uploadForm\");\n+        uploadForm.setMultiPart(true);\n+        add(uploadForm);\n+\n+        container = new WebMarkupContainer(\"previewContainer\") {\n+\n+            private static final long serialVersionUID = 2628490926588791229L;\n+\n+            @Override\n+            public void renderHead(final IHeaderResponse response) {\n+                if (previewer == null) {\n+                    FileinputJsReference.INSTANCE.renderHead(response);\n+                    final JQuery fileinputJS = $(fileUpload).chain(new IFunction() {\n+\n+                        private static final long serialVersionUID = -2285418135375523652L;\n+\n+                        @Override\n+                        public String build() {\n+                            return \"fileinput({\"\n+                                    + \"'showRemove':false, \"\n+                                    + \"'showUpload':false, \"\n+                                    + \"'previewFileType':'any'})\";\n+                        }\n+                    });\n+                    response.render(OnDomReadyHeaderItem.forScript(fileinputJS.get()));\n+                }\n+            }\n+        };\n+        container.setOutputMarkupId(true);\n+\n+        emptyFragment = new Fragment(\"panelPreview\", \"emptyFragment\", container);\n+        emptyFragment.setOutputMarkupId(true);\n+        container.add(emptyFragment);\n+        uploadForm.add(container);\n+\n+        field = new TextField<>(\"textField\", model);\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+\n+        uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : \"(\" + mimeType + \")\"));\n+\n+        fileDownload = new AjaxDownload(name, fileKey, mimeType, true) {\n+\n+            private static final long serialVersionUID = 7203445884857810583L;\n+\n+            @Override\n+            protected HttpResourceStream getResourceStream() {\n+                return new HttpResourceStream(buildResponse());\n+            }\n+\n+        };\n+\n+        add(fileDownload);\n+\n+        downloadLink = new AjaxLink<Void>(\"downloadLink\") {\n+\n+            private static final long serialVersionUID = -4331619903296515985L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    fileDownload.initiate(target);\n+                } catch (Exception e) {\n+                    SyncopeEnduserSession.get().error(\n+                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                }\n+            }\n+        };\n+        downloadLink.setOutputMarkupId(true);\n+        uploadForm.add(downloadLink);\n+\n+        FileInputConfig config = new FileInputConfig();\n+        config.showUpload(false);\n+        config.showRemove(false);\n+        config.showPreview(false);\n+\n+        fileUpload = new BootstrapFileInputField(\"fileUpload\", new ListModel<>(new ArrayList<>()), config);\n+        fileUpload.setOutputMarkupId(true);\n+\n+        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target) {\n+                final FileUpload uploadedFile = fileUpload.getFileUpload();\n+                if (uploadedFile != null) {\n+                    if (maxUploadSize != null && uploadedFile.getSize() > maxUploadSize.bytes()) {\n+                        // SYNCOPE-1213 manage directly max upload file size (if set in properties file)\n+                        SyncopeEnduserSession.get().error(getString(\"tooLargeFile\")\n+                                .replace(\"${maxUploadSizeB}\", String.valueOf(maxUploadSize.bytes()))\n+                                .replace(\"${maxUploadSizeMB}\", String.valueOf(maxUploadSize.bytes() / 1000000L)));\n+                        ((BaseWebPage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n+                    } else {\n+                        final byte[] uploadedBytes = uploadedFile.getBytes();\n+                        final String uploaded = Base64.getEncoder().encodeToString(uploadedBytes);\n+                        field.setModelObject(uploaded);\n+                        target.add(field);\n+\n+                        if (previewer == null) {\n+                            container.addOrReplace(emptyFragment);\n+                        } else {\n+                            final Component panelPreview = previewer.preview(uploadedBytes);\n+                            changePreviewer(panelPreview);\n+                            fileUpload.setModelObject(null);\n+                            uploadForm.addOrReplace(fileUpload);\n+                        }\n+\n+                        setVisibleFileButtons(StringUtils.isNotBlank(uploaded));\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+\n+                        target.add(uploadForm);\n+                    }\n+                }\n+            }\n+        });\n+        uploadForm.add(fileUpload);\n+\n+        resetLink = new IndicatingAjaxLink<Void>(\"resetLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                field.setModelObject(null);\n+                target.add(field);\n+                downloadLink.setEnabled(false);\n+                container.addOrReplace(emptyFragment);\n+                setVisibleFileButtons(false);\n+                target.add(uploadForm);\n+            }\n+\n+            @Override\n+            public String getAjaxIndicatorMarkupId() {\n+                return Constants.VEIL_INDICATOR_MARKUP_ID;\n+            }\n+\n+        };\n+        uploadForm.add(resetLink);\n+    }\n+\n+    private Response buildResponse() {\n+        return Response.ok(new ByteArrayInputStream(Base64.getMimeDecoder().decode(getModelObject()))).\n+                type(StringUtils.isBlank(mimeType) ? MediaType.APPLICATION_OCTET_STREAM : mimeType).build();\n+    }\n+\n+    private void changePreviewer(final Component panelPreview) {\n+        final Fragment fragment = new Fragment(\"panelPreview\", \"previewFragment\", container);\n+        fragment.add(panelPreview);\n+        container.addOrReplace(fragment);\n+        uploadForm.addOrReplace(container);\n+    }\n+\n+    private void setVisibleFileButtons(final boolean visible) {\n+        resetLink.setVisible(visible);\n+        downloadLink.setVisible(visible);\n+    }\n+\n+    @Override\n+    public BinaryFieldPanel clone() {\n+        LOG.debug(\"Custom clone for binary field panel...\");\n+        return new BinaryFieldPanel(getId(), this.name, this.model, this.mimeType, this.fileKey);\n+    }\n+\n+    @Override\n+    public FieldPanel<String> setNewModel(final IModel<String> model) {\n+        field.setModel(model);\n+        String modelObj = model.getObject();\n+\n+        if (StringUtils.isNotBlank(modelObj)) {\n+            final Component panelPreview;\n+            if (previewer == null) {\n+                panelPreview = PREVIEW_UTILS.getDefaultPreviewer(mimeType);\n+            } else {\n+                panelPreview = previewer.preview(modelObj);\n+            }\n+\n+            if (panelPreview != null) {\n+                changePreviewer(panelPreview);\n+            }\n+        }\n+\n+        downloadLink.setEnabled(StringUtils.isNotBlank(modelObj));\n+        setVisibleFileButtons(StringUtils.isNotBlank(modelObj));\n+        return this;\n+    }\n+\n+    @Override\n+    protected void sendError(final String message) {\n+        SyncopeEnduserSession.get().error(message);\n+    }\n+\n+    @Override\n+    protected Integer getMaxUploadFileSizeMB() {\n+        return SyncopeWebApplication.get().getMaxUploadFileSizeMB();\n+    }\n+}"},{"sha":"81717bd7f40de9cc9e5066b8b6bf1616a4dc89cf","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/MultiFieldPanel.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.markup.html.form;\n+\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractMultiPanel;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class MultiFieldPanel<E extends Serializable> extends AbstractMultiPanel<E> {\n+\n+    private static final long serialVersionUID = -6322397761456513324L;\n+\n+    private MultiFieldPanel(\n+            final String id,\n+            final String name,\n+            final IModel<List<E>> model) {\n+\n+        super(id, name, model);\n+    }\n+\n+    public static class Builder<E extends Serializable> implements Serializable {\n+\n+        private static final long serialVersionUID = -5304396077613727937L;\n+\n+        private final IModel<List<E>> model;\n+\n+        private boolean eventTemplate = false;\n+\n+        public Builder(final IModel<List<E>> model) {\n+            this.model = model;\n+        }\n+\n+        /**\n+         * Set on_change event in order to send MultiValueSelectorEvent to page.\n+         *\n+         * @param eventTemplate whether this is an event template\n+         * @return this instance, for fluent building\n+         */\n+        public Builder<E> setEventTemplate(final boolean eventTemplate) {\n+            this.eventTemplate = eventTemplate;\n+            return this;\n+        }\n+\n+        /**\n+         * Default model object instance.\n+         *\n+         * @return default model object instance.\n+         */\n+        protected E newModelObject() {\n+            return null;\n+        }\n+\n+        public MultiFieldPanel<E> build(final String id, final String name, final FieldPanel<E> panelTemplate) {\n+            return new MultiFieldPanel<E>(id, name, model) {\n+\n+                private static final long serialVersionUID = 6600411297376841521L;\n+\n+                @Override\n+                protected E newModelObject() {\n+                    return Builder.this.newModelObject();\n+                }\n+\n+                @Override\n+                protected FieldPanel<? extends Serializable> getItemPanel(final ListItem<E> item) {\n+                    final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n+                    fieldPanel.setIndex(item.getIndex());\n+                    fieldPanel.setNewModel(item);\n+                    fieldPanel.settingsDependingComponents();\n+                    fieldPanel.hideLabel();\n+\n+                    if (eventTemplate) {\n+                        fieldPanel.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                            private static final long serialVersionUID = -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                            }\n+                        });\n+                    }\n+\n+                    return fieldPanel;\n+                }\n+\n+                @Override\n+                protected void clearInput(final Panel panel) {\n+                    FieldPanel.class.cast(panel).getField().clearInput();\n+                }\n+\n+                @Override\n+                protected void sendError(final String message) {\n+                    SyncopeEnduserSession.get().error(getString(Constants.OPERATION_ERROR));\n+                }\n+            };\n+        }\n+    }\n+}"},{"sha":"7d713f0ff4b1d75d7f66dc65ea1d646d874be2ae","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/model/CustomAttribute.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttribute.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.model;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CustomAttribute implements Serializable {\n+\n+    private static final long serialVersionUID = 4910266842123376686L;\n+\n+    private boolean readonly;\n+\n+    private List<String> defaultValues = new ArrayList<>();\n+\n+    public CustomAttribute() {\n+    }\n+\n+    public boolean isReadonly() {\n+        return readonly;\n+    }\n+\n+    public void setReadonly(final boolean readonly) {\n+        this.readonly = readonly;\n+    }\n+\n+    public List<String> getDefaultValues() {\n+        return defaultValues;\n+    }\n+\n+    public void setDefaultValues(final List<String> defaultValues) {\n+        this.defaultValues = defaultValues;\n+    }\n+\n+    public CustomAttribute readonly(final Boolean value) {\n+        this.readonly = value;\n+        return this;\n+    }\n+\n+    public CustomAttribute defaultValues(final List<String> value) {\n+        this.defaultValues = value;\n+        return this;\n+    }\n+\n+}"},{"sha":"c49253c742fc75bb981fabdb7792e31d520a9f0d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/model/CustomAttributesInfo.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttributesInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttributesInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCustomAttributesInfo.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.model;\n+\n+import java.io.Serializable;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+public class CustomAttributesInfo implements Serializable {\n+\n+    private static final long serialVersionUID = 878444785696091916L;\n+\n+    private Map<String, CustomAttribute> attributes = new LinkedHashMap<>();\n+\n+    public CustomAttributesInfo() {\n+    }\n+\n+    public Map<String, CustomAttribute> getAttributes() {\n+        return attributes;\n+    }\n+\n+    public void setAttributes(final Map<String, CustomAttribute> attributes) {\n+        this.attributes = attributes;\n+    }\n+\n+    public CustomAttributesInfo attributes(final Map<String, CustomAttribute> value) {\n+        this.attributes = value;\n+        return this;\n+    }\n+\n+}"},{"sha":"09f42b482f6b58e68b363d42c41a68ddb70e8667","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/BaseEnduserWebPage.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBaseEnduserWebPage.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class BaseEnduserWebPage extends BaseWebPage {\n+\n+    private static final long serialVersionUID = 5760583420031293480L;\n+\n+    public BaseEnduserWebPage() {\n+        this(null);\n+    }\n+\n+    public BaseEnduserWebPage(final PageParameters parameters) {\n+        super(parameters);\n+    }\n+\n+}"},{"sha":"60e8cc9e8fb556624ca162206f5415f962e10a48","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/LandingPage.java","status":"renamed","additions":10,"deletions":17,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLandingPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLandingPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLandingPage.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -1,4 +1,4 @@\n-/* \n+/*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n@@ -16,23 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-exports.config = {\n-  directConnect: false,\n-  capabilities: {\n-    'browserName': 'chrome',\n+package org.apache.syncope.client.enduser.pages;\n \n-    chromeOptions: {\n-      args: [\"--headless\", \"--window-size=1600,1000\"]\n-    }\n-  },\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class LandingPage extends BaseEnduserWebPage {\n \n-  allScriptsTimeout: 241000,\n+    private static final long serialVersionUID = 164651008547631054L;\n \n-  jasmineNodeOpts: {\n-    defaultTimeoutInterval: 2500000\n-  },\n+    public LandingPage(final PageParameters parameters) {\n+        super(parameters);\n+    }\n \n-  // Spec patterns are relative to the current working directly when protractor is called.\n-  specs: ['tests/*.js'],\n-  exclude: ['tests/abstract.js']\n-};\n+}","previous_filename":"fit/enduser-reference/src/test/resources/protractor-conf.js"},{"sha":"5045e6c2767976b58234490a5c3afc23077c3369","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/Login.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FLogin.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import java.security.AccessControlException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.ui.commons.BaseLogin;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class Login extends BaseLogin {\n+\n+    private static final long serialVersionUID = -3422492668689122688L;\n+\n+    @SpringBean\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    public Login(final PageParameters parameters) {\n+        super(parameters);\n+\n+        add(new BookmarkablePageLink<>(\"self-registration\", Self.class).setOutputMarkupId(true));\n+        add(new BookmarkablePageLink<>(\"self-pwd-reset\", SelfPasswordReset.class).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    protected List<Panel> getSSOLoginFormPanels() {\n+        List<Panel> ssoLoginFormPanels = new ArrayList<>();\n+        lookup.getSSOLoginFormPanels().forEach(ssoLoginFormPanel -> {\n+            try {\n+                ssoLoginFormPanels.add(ssoLoginFormPanel.getConstructor(String.class).newInstance(\"ssoLogin\"));\n+            } catch (Exception e) {\n+                LOG.error(\"Could not initialize the provided SSO login form panel\", e);\n+            }\n+        });\n+        return ssoLoginFormPanels;\n+    }\n+\n+    @Override\n+    protected void sendError(final String error) {\n+        SyncopeEnduserSession.get().error(error);\n+    }\n+\n+    @Override\n+    protected String getAnonymousUser() {\n+        return SyncopeWebApplication.get().getAnonymousUser();\n+    }\n+\n+    @Override\n+    protected List<Locale> getSupportedLocales() {\n+        return SyncopeWebApplication.SUPPORTED_LOCALES;\n+    }\n+\n+    @Override\n+    protected void authenticate(\n+            final String username,\n+            final String password,\n+            final AjaxRequestTarget target) throws AccessControlException {\n+        if (!SyncopeWebApplication.get().getAdminUser().equalsIgnoreCase(username)\n+                && SyncopeEnduserSession.get().authenticate(username, password)) {\n+            // user has been authenticated successfully\n+            continueToOriginalDestination();\n+            setResponsePage(getApplication().getHomePage());\n+        } else {\n+            // not authenticated\n+            sendError(getString(\"login-error\"));\n+            notificationPanel.refresh(target);\n+\n+        }\n+    }\n+\n+}"},{"sha":"8a9901eedb0a40a521793ed6419a6f7cea9071a7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/MustChangePassword.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class MustChangePassword extends WebPage {\n+\n+    private static final long serialVersionUID = 164651008547631054L;\n+\n+    public MustChangePassword(final PageParameters parameters) {\n+        super(parameters);\n+    }\n+\n+}"},{"sha":"eef84d5d9cf6dfd16f5eb27bba2b6ffd004f8461","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/Self.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelf.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.enduser.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.event.IEventSource;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class Self extends BaseEnduserWebPage implements IEventSource {\n+\n+    private static final long serialVersionUID = 164651008547631054L;\n+\n+    private UserWizardBuilder userWizardBuilder;\n+\n+    protected static final String WIZARD_ID = \"wizard\";\n+\n+    public Self(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(buildWizard(SyncopeEnduserSession.get().isAuthenticated()\n+                ? SyncopeEnduserSession.get().getSelfTO()\n+                : buildNewUserTO()));\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+            final AjaxWizard.NewItemEvent<AnyWrapper<UserTO>> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.\n+                    getPayload());\n+            final AjaxRequestTarget target = newItemEvent.getTarget();\n+            final AnyWrapper<UserTO> item = newItemEvent.getItem();\n+            if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent) {\n+                SyncopeEnduserSession.get().invalidate();\n+                setResponsePage(Login.class);\n+            } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                SyncopeEnduserSession.get().invalidate();\n+                setResponsePage(LandingPage.class);\n+            }\n+        }\n+        super.onEvent(event);\n+    }\n+\n+    protected final AjaxWizard<AnyWrapper<UserTO>> buildWizard(final UserTO userTO) {\n+        userWizardBuilder = new UserWizardBuilder(\n+                null,\n+                userTO,\n+                SyncopeEnduserSession.get().getService(SyncopeService.class).platform().getUserClasses(),\n+                new UserFormLayoutInfo(),\n+                this.getPageReference());\n+        userWizardBuilder.setItem(new UserWrapper(userTO));\n+        return userWizardBuilder.build(WIZARD_ID, userTO == null ? AjaxWizard.Mode.CREATE : AjaxWizard.Mode.EDIT);\n+    }\n+\n+    private UserTO buildNewUserTO() {\n+        final UserTO userTO = new UserTO();\n+        userTO.setRealm(SyncopeConstants.ROOT_REALM);\n+        return userTO;\n+    }\n+\n+}"},{"sha":"b509ddf3c09ca2b3209b0065078bdd45913cebc6","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/SelfPasswordReset.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class SelfPasswordReset extends BaseEnduserWebPage {\n+\n+    private static final long serialVersionUID = 164651008547631054L;\n+\n+    public SelfPasswordReset(final PageParameters parameters) {\n+        super(parameters);\n+    }\n+\n+}"},{"sha":"7c86c2d2b589906dd02cd5da8a667ef59420432f","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/SelfUpdate.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfUpdate.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class SelfUpdate extends BaseEnduserWebPage {\n+\n+    private static final long serialVersionUID = 164651008547631054L;\n+\n+    public SelfUpdate(final PageParameters parameters) {\n+        super(parameters);\n+    }\n+\n+}"},{"sha":"7cbb5f5667fc43a763c5e18431dfeba2f76a3546","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/resources/CaptchaResource.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.security.SecureRandom;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.text.RandomStringGenerator;\n+import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n+import org.apache.wicket.extensions.markup.html.captcha.CaptchaImageResource;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CaptchaResource extends CaptchaImageResource {\n+\n+    private static final long serialVersionUID = 8293404296348102926L;\n+\n+    private static final SecureRandom RANDOM = new SecureRandom();\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(CaptchaResource.class);\n+\n+    private static final RandomStringGenerator RANDOM_LETTERS = new RandomStringGenerator.Builder().\n+            usingRandom(RANDOM::nextInt).\n+            withinRange('a', 'z').\n+            build();\n+\n+    @Override\n+    protected byte[] render() {\n+        LOG.debug(\"Generate captcha\");\n+\n+        String captcha = RANDOM_LETTERS.generate(6);\n+        HttpServletRequest request = ((HttpServletRequest) RequestCycle.get().getRequest().getContainerRequest());\n+        // store the captcha in the current session\n+        request.getSession().setAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY, captcha);\n+\n+        getChallengeIdModel().setObject(captcha);\n+        return super.render();\n+    }\n+\n+}"},{"sha":"b03a9cb36b2f144fc3afac456f4c3dbe1ecb03a5","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/AbstractAnyRestClient.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAbstractAnyRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.rest.api.service.AnyService;\n+\n+public abstract class AbstractAnyRestClient<TO extends AnyTO> extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 1962529678091410544L;\n+\n+    protected abstract Class<? extends AnyService<TO>> getAnyServiceClass();\n+\n+    public abstract int count(String realm, String fiql, String type);\n+\n+    public TO read(final String key) {\n+        return getService(getAnyServiceClass()).read(key);\n+    }\n+\n+}"},{"sha":"5c657753486867988efb86f4422bb893f11393b2","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/AnyTypeRestClient.java","status":"added","additions":130,"deletions":0,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FAnyTypeRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import org.apache.commons.lang3.ObjectUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+\n+public class AnyTypeRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2211371717449597247L;\n+\n+    public static final Comparator<String> KEY_COMPARATOR = new AnyTypeKeyComparator();\n+\n+    public AnyTypeTO read(final String key) {\n+        AnyTypeTO type = null;\n+\n+        try {\n+            type = getService(AnyTypeService.class).read(key);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any types\", e);\n+        }\n+\n+        return type;\n+    }\n+\n+    public List<AnyTypeTO> listAnyTypes() {\n+        List<AnyTypeTO> types = Collections.emptyList();\n+\n+        try {\n+            types = getService(AnyTypeService.class).list();\n+            Collections.sort(types, new AnyTypeComparator());\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any types\", e);\n+        }\n+\n+        return types;\n+    }\n+\n+    public List<String> list() {\n+        List<String> types = getSyncopeService().platform().getAnyTypes();\n+        Collections.sort(types, new AnyTypeKeyComparator());\n+        return types;\n+    }\n+\n+    public void create(final AnyTypeTO anyTypeTO) {\n+        getService(AnyTypeService.class).create(anyTypeTO);\n+    }\n+\n+    public void update(final AnyTypeTO anyTypeTO) {\n+        getService(AnyTypeService.class).update(anyTypeTO);\n+    }\n+\n+    public void delete(final String key) {\n+        getService(AnyTypeService.class).delete(key);\n+    }\n+\n+    private static class AnyTypeComparator implements Comparator<AnyTypeTO>, Serializable {\n+\n+        private static final long serialVersionUID = -8227715253094467138L;\n+\n+        @Override\n+        public int compare(final AnyTypeTO o1, final AnyTypeTO o2) {\n+            if (o1.getKind() == AnyTypeKind.USER) {\n+                return -1;\n+            }\n+            if (o2.getKind() == AnyTypeKind.USER) {\n+                return 1;\n+            }\n+            if (o1.getKind() == AnyTypeKind.GROUP) {\n+                return -1;\n+            }\n+            if (o2.getKind() == AnyTypeKind.GROUP) {\n+                return 1;\n+            }\n+            return ObjectUtils.compare(o1.getKey(), o2.getKey());\n+        }\n+    }\n+\n+    private static class AnyTypeKeyComparator implements Comparator<String>, Serializable {\n+\n+        private static final long serialVersionUID = -7778622183107320760L;\n+\n+        @Override\n+        public int compare(final String o1, final String o2) {\n+            if (SyncopeConstants.REALM_ANYTYPE.equals(o1)) {\n+                return -1;\n+            }\n+            if (SyncopeConstants.REALM_ANYTYPE.equals(o2)) {\n+                return 1;\n+            }\n+            if (AnyTypeKind.USER.name().equals(o1)) {\n+                return -1;\n+            }\n+            if (AnyTypeKind.USER.name().equals(o2)) {\n+                return 1;\n+            }\n+            if (AnyTypeKind.GROUP.name().equals(o1)) {\n+                return -1;\n+            }\n+            if (AnyTypeKind.GROUP.name().equals(2)) {\n+                return 1;\n+            }\n+            return ObjectUtils.compare(o1, o2);\n+        }\n+    }\n+}"},{"sha":"ea4959d73dab861ef0b4f11fa249737a484d551f","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/BaseRestClient.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FBaseRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.net.URI;\n+import javax.ws.rs.core.HttpHeaders;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n+import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n+import org.apache.syncope.common.lib.types.ExecStatus;\n+import org.apache.syncope.common.rest.api.service.JAXRSService;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class BaseRestClient implements RestClient {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(BaseRestClient.class);\n+\n+    private static final long serialVersionUID = 1523999867826481989L;\n+\n+    public static SyncopeService getSyncopeService() {\n+        return getService(SyncopeService.class);\n+    }\n+\n+    protected static <T> T getService(final Class<T> serviceClass) {\n+        return SyncopeEnduserSession.get().getService(serviceClass);\n+    }\n+\n+    protected static <T> T getService(final String etag, final Class<T> serviceClass) {\n+        return SyncopeEnduserSession.get().getService(etag, serviceClass);\n+    }\n+\n+    protected static <T> void resetClient(final Class<T> serviceClass) {\n+        SyncopeEnduserSession.get().resetClient(serviceClass);\n+    }\n+\n+    protected static String toOrderBy(final SortParam<String> sort) {\n+        OrderByClauseBuilder builder = SyncopeClient.getOrderByClauseBuilder();\n+\n+        String property = sort.getProperty();\n+        if (property.indexOf('#') != -1) {\n+            property = property.substring(property.indexOf('#') + 1);\n+        }\n+\n+        if (sort.isAscending()) {\n+            builder.asc(property);\n+        } else {\n+            builder.desc(property);\n+        }\n+\n+        return builder.build();\n+    }\n+\n+    protected static <E extends JAXRSService, T> T getObject(\n+            final E service, final URI location, final Class<T> resultClass) {\n+\n+        WebClient webClient = WebClient.fromClient(WebClient.client(service));\n+        webClient.accept(SyncopeEnduserSession.get().getMediaType()).to(location.toASCIIString(), false);\n+        return webClient.\n+                header(HttpHeaders.AUTHORIZATION, \"Bearer \" + SyncopeEnduserSession.get().getJWT()).\n+                get(resultClass);\n+    }\n+\n+    protected static String getStatus(final int httpStatus) {\n+        ExecStatus execStatus = ExecStatus.fromHttpStatus(httpStatus);\n+        return execStatus == null\n+                ? Constants.UNKNOWN\n+                : execStatus.name();\n+    }\n+\n+}"},{"sha":"0c14ad124784a3652677f729cea1afc6475afa8d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/GroupRestClient.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.request.GroupCR;\n+import org.apache.syncope.common.lib.request.GroupUR;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.rest.api.beans.AnyQuery;\n+import org.apache.syncope.common.rest.api.service.AnyService;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+\n+/**\n+ * Console client for invoking Rest Group's services.\n+ */\n+public class GroupRestClient extends AbstractAnyRestClient<GroupTO> {\n+\n+    private static final long serialVersionUID = -8549081557283519638L;\n+\n+    @Override\n+    protected Class<? extends AnyService<GroupTO>> getAnyServiceClass() {\n+        return GroupService.class;\n+    }\n+\n+    public ProvisioningResult<GroupTO> create(final GroupCR groupCR) {\n+        Response response = getService(GroupService.class).create(groupCR);\n+        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<GroupTO> update(final String etag, final GroupUR updateReq) {\n+        ProvisioningResult<GroupTO> result;\n+        synchronized (this) {\n+            result = getService(etag, GroupService.class).update(updateReq).\n+                    readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                    });\n+            resetClient(getAnyServiceClass());\n+        }\n+        return result;\n+    }\n+\n+    public List<GroupTO> searchAssignableGroups(\n+            final String realm,\n+            final String term,\n+            final int page,\n+            final int size) {\n+\n+        return getService(SyncopeService.class).searchAssignableGroups(realm, term, page, size).getResult();\n+    }\n+\n+    @Override\n+    public int count(final String realm, final String fiql, final String type) {\n+        return getService(GroupService.class).\n+                search(new AnyQuery.Builder().realm(realm).fiql(fiql).page(1).size(1).build()).\n+                getTotalCount();\n+    }\n+\n+}"},{"sha":"a95636a01938e61c55e33e32b52d867d31707d45","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/RealmRestClient.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRealmRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.rest.api.service.RealmService;\n+\n+/**\n+ * Console client for invoking REST Realm's services.\n+ */\n+public class RealmRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -8549081557283519638L;\n+\n+    public List<RealmTO> list() {\n+        return getService(RealmService.class).list();\n+    }\n+\n+}"},{"sha":"d411ce45861dd1da69722b62a2557fd8e7eef97c","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/RoleRestClient.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FRoleRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.rest.api.service.RoleService;\n+\n+/**\n+ * Console client for invoking Rest Role's services.\n+ */\n+public class RoleRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -3161863874876938094L;\n+\n+    public void delete(final String key) {\n+        getService(RoleService.class).delete(key);\n+    }\n+\n+    public RoleTO read(final String key) {\n+        return getService(RoleService.class).read(key);\n+    }\n+\n+    public void update(final RoleTO roleTO) {\n+        getService(RoleService.class).update(roleTO);\n+    }\n+\n+    public void create(final RoleTO roleTO) {\n+        getService(RoleService.class).create(roleTO);\n+    }\n+\n+    public List<RoleTO> list() {\n+        return getService(RoleService.class).list();\n+    }\n+\n+    public String readConsoleLayoutInfo(final String roleKey) {\n+        try {\n+            return IOUtils.toString(InputStream.class.cast(\n+                    getService(RoleService.class).getConsoleLayoutInfo(roleKey).getEntity()),\n+                    StandardCharsets.UTF_8);\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving console layout info for role {}\", roleKey, e);\n+            return StringUtils.EMPTY;\n+        }\n+    }\n+\n+    public void setConsoleLayoutInfo(final String roleKey, final String content) {\n+        getService(RoleService.class).setConsoleLayoutInfo(\n+                roleKey, IOUtils.toInputStream(content, StandardCharsets.UTF_8));\n+    }\n+\n+    public void removeConsoleLayoutInfo(final String roleKey) {\n+        getService(RoleService.class).removeConsoleLayoutInfo(roleKey);\n+    }\n+\n+    public List<String> getAllAvailableEntitlements() {\n+        List<String> entitlements = new ArrayList<>(getSyncopeService().platform().getEntitlements());\n+        Collections.sort(entitlements);\n+        return entitlements;\n+    }\n+}"},{"sha":"57c6859395ed7e224e0b88fc8f464543a736d7c3","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/SchemaRestClient.java","status":"added","additions":146,"deletions":0,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSchemaRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n+\n+/**\n+ * Console client for invoking rest schema services.\n+ */\n+public class SchemaRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2479730152700312373L;\n+\n+    public <T extends SchemaTO> List<T> getSchemas(final SchemaType schemaType, final AnyTypeKind kind) {\n+        final AnyTypeService client = getService(AnyTypeService.class);\n+\n+        final List<String> classes = new ArrayList<>();\n+\n+        switch (kind) {\n+            case USER:\n+            case GROUP:\n+                final AnyTypeTO type = client.read(kind.name());\n+                if (type != null) {\n+                    classes.addAll(type.getClasses());\n+                }\n+                break;\n+\n+            default:\n+                new AnyTypeRestClient().listAnyTypes().stream().filter(\n+                        anyTypeTO -> (anyTypeTO.getKind() != AnyTypeKind.USER\n+                        && anyTypeTO.getKind() != AnyTypeKind.GROUP)).\n+                        forEach((anyTypeTO) -> {\n+                            classes.addAll(anyTypeTO.getClasses());\n+                        });\n+        }\n+        return getSchemas(schemaType, null, classes.toArray(new String[] {}));\n+    }\n+\n+    public <T extends SchemaTO> List<T> getSchemas(\n+            final SchemaType schemaType, final String keyword, final String... anyTypeClasses) {\n+\n+        SchemaQuery.Builder builder = new SchemaQuery.Builder().type(schemaType);\n+        if (StringUtils.isNotBlank(keyword)) {\n+            builder.keyword(keyword);\n+        }\n+        if (anyTypeClasses != null && anyTypeClasses.length > 0) {\n+            builder.anyTypeClasses(anyTypeClasses);\n+        }\n+\n+        List<T> schemas = new ArrayList<>();\n+        try {\n+            schemas.addAll(getService(SchemaService.class).<T>search(builder.build()));\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all {} schemas for {}\", schemaType, anyTypeClasses, e);\n+        }\n+        return schemas;\n+    }\n+\n+    public List<String> getSchemaNames(final SchemaType schemaType) {\n+        List<String> schemaNames = Collections.emptyList();\n+\n+        try {\n+            schemaNames = getSchemas(schemaType, null, new String[0]).stream().\n+                    map(EntityTO::getKey).collect(Collectors.toList());\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While getting all user schema names\", e);\n+        }\n+\n+        return schemaNames;\n+    }\n+\n+    public List<String> getPlainSchemaNames() {\n+        return getSchemaNames(SchemaType.PLAIN);\n+    }\n+\n+    public List<String> getDerSchemaNames() {\n+        return getSchemaNames(SchemaType.DERIVED);\n+    }\n+\n+    public List<String> getVirSchemaNames() {\n+        return getSchemaNames(SchemaType.VIRTUAL);\n+    }\n+\n+    public PlainSchemaTO read(final SchemaType schemaType, final String key) {\n+        return getService(SchemaService.class).read(schemaType, key);\n+\n+    }\n+\n+    public void create(final SchemaType schemaType, final SchemaTO modelObject) {\n+        getService(SchemaService.class).create(schemaType, modelObject);\n+    }\n+\n+    public void update(final SchemaType schemaType, final SchemaTO modelObject) {\n+        getService(SchemaService.class).update(schemaType, modelObject);\n+    }\n+\n+    public PlainSchemaTO deletePlainSchema(final String name) {\n+        PlainSchemaTO response = getService(SchemaService.class).read(SchemaType.PLAIN, name);\n+        getService(SchemaService.class).delete(SchemaType.PLAIN, name);\n+        return response;\n+    }\n+\n+    public DerSchemaTO deleteDerSchema(final String name) {\n+        DerSchemaTO schemaTO = getService(SchemaService.class).read(SchemaType.DERIVED, name);\n+        getService(SchemaService.class).delete(SchemaType.DERIVED, name);\n+        return schemaTO;\n+    }\n+\n+    public VirSchemaTO deleteVirSchema(final String name) {\n+        VirSchemaTO schemaTO = getService(SchemaService.class).read(SchemaType.VIRTUAL, name);\n+        getService(SchemaService.class).delete(SchemaType.VIRTUAL, name);\n+        return schemaTO;\n+    }\n+}"},{"sha":"aab131fbe121d2e6d2ce10ff0047c3d8fb379d8b","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/SecurityQuestionRestClient.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSecurityQuestionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSecurityQuestionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSecurityQuestionRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n+\n+public class SecurityQuestionRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -3167730221361895176L;\n+\n+    public List<SecurityQuestionTO> list() {\n+        return getService(SecurityQuestionService.class).list();\n+    }\n+\n+}"},{"sha":"1f88621fe83c6cef7522057ca7b7439450369cf7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/SyncopeRestClient.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSyncopeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSyncopeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FSyncopeRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+\n+public class SyncopeRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2211371717449597247L;\n+\n+    public List<String> listAnyTypeClasses() {\n+        List<String> types = Collections.emptyList();\n+\n+        try {\n+            types = getService(SyncopeService.class).platform().getAnyTypeClasses();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any type classes\", e);\n+        }\n+        return types;\n+    }\n+}"},{"sha":"d6330ecbc64e84fb25c20042e1ed3525f2a2047d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserSelfRestClient.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.rest;\n+\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.request.BooleanReplacePatchItem;\n+import org.apache.syncope.common.lib.request.UserCR;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.service.UserSelfService;\n+\n+/**\n+ * Console client for invoking rest users services.\n+ */\n+public class UserSelfRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -1575748964398293968L;\n+\n+    public ProvisioningResult<UserTO> create(final UserCR createReq) {\n+        Response response = getService(UserSelfService.class).create(createReq);\n+        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<UserTO> update(final String etag, final UserUR updateReq) {\n+        ProvisioningResult<UserTO> result;\n+        synchronized (this) {\n+            result = getService(etag, UserSelfService.class).update(updateReq).\n+                    readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                    });\n+            resetClient(UserSelfService.class);\n+        }\n+        return result;\n+    }\n+\n+    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final boolean value, final String key) {\n+        UserUR userUR = new UserUR();\n+        userUR.setKey(key);\n+        userUR.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(value).build());\n+        return update(etag, userUR);\n+    }\n+\n+}"},{"sha":"0320ba37eee8e43431c77b4cbe9b9d9c766113bb","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/themes/EnduserTheme.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserTheme.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserTheme.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserTheme.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.themes;\n+\n+import de.agilecoders.wicket.core.settings.Theme;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.markup.head.CssHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n+\n+public class EnduserTheme extends Theme {\n+\n+    public EnduserTheme() {\n+        super(\"adminLTE\");\n+    }\n+\n+    @Override\n+    public List<HeaderItem> getDependencies() {\n+        List<HeaderItem> references = new ArrayList<>();\n+//        references.add(JavaScriptHeaderItem\n+//.forReference(new JQueryPluginResourceReference(EnduserTheme.class, \"js/AdminLTE-app.min.js\"), \"adminltejs\"));\n+        references.add(CssHeaderItem.forReference(EnduserThemeCssResourceReference.INSTANCE));\n+        references.addAll(super.getDependencies());\n+        return references;\n+    }\n+}"},{"sha":"b306560869afe8e79751b3a1e096e1e727c38eda","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/themes/EnduserThemeCssResourceReference.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserThemeCssResourceReference.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserThemeCssResourceReference.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fthemes%2FEnduserThemeCssResourceReference.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.themes;\n+\n+import de.agilecoders.wicket.core.Bootstrap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.markup.head.CssHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n+import org.apache.wicket.request.resource.CssResourceReference;\n+\n+public class EnduserThemeCssResourceReference extends CssResourceReference {\n+\n+    private static final long serialVersionUID = -7658929012906790600L;\n+\n+    /**\n+     * Singleton instance of this reference.\n+     */\n+    public static final EnduserThemeCssResourceReference INSTANCE = new EnduserThemeCssResourceReference();\n+\n+    public EnduserThemeCssResourceReference() {\n+        super(EnduserThemeCssResourceReference.class, \"css/login.css\");\n+    }\n+\n+    @Override\n+    public List<HeaderItem> getDependencies() {\n+        final List<HeaderItem> dependencies = new ArrayList<>();\n+        dependencies.add(CssHeaderItem.forReference(Bootstrap.getSettings().getCssResourceReference()));\n+        dependencies.addAll(super.getDependencies());\n+        return dependencies;\n+    }\n+}"},{"sha":"87812fb43a01bc49a2bcc05ac7bb8c4d4274de37","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AbstractAttrs.java","status":"added","additions":244,"deletions":0,"changes":244,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAbstractAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,244 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.cxf.common.util.StringUtils;\n+import org.apache.syncope.client.enduser.rest.GroupRestClient;\n+import org.apache.syncope.client.enduser.rest.SchemaRestClient;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.core.util.lang.PropertyResolver;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public abstract class AbstractAttrs<S extends SchemaTO> extends WizardStep implements ICondition {\n+\n+    private static final long serialVersionUID = -5387344116983102292L;\n+\n+    protected final Comparator<Attr> attrComparator = new AttrComparator();\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    protected final AnyTO anyTO;\n+\n+    private final List<String> whichAttrs;\n+\n+    protected final Map<String, S> schemas = new LinkedHashMap<>();\n+\n+    protected final Map<String, Map<String, S>> membershipSchemas = new LinkedHashMap<>();\n+\n+    protected final IModel<List<Attr>> attrs;\n+\n+    protected final IModel<List<MembershipTO>> membershipTOs;\n+\n+    private final List<String> anyTypeClasses;\n+\n+    public AbstractAttrs(\n+            final AnyWrapper<?> modelObject,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichAttrs) {\n+        super();\n+        this.anyTypeClasses = anyTypeClasses;\n+        this.attrs = new ListModel<>(Collections.<Attr>emptyList());\n+        this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n+\n+        this.setOutputMarkupId(true);\n+\n+        this.anyTO = modelObject.getInnerObject();\n+        this.whichAttrs = whichAttrs;\n+    }\n+\n+    private List<Attr> loadAttrs() {\n+        List<String> classes = new ArrayList<>(anyTypeClasses);\n+        // just add keys\n+        classes.addAll(anyTO.getAuxClasses());\n+        setSchemas(classes);\n+        setAttrs();\n+        return AbstractAttrs.this.getAttrsFromTO();\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\" })\n+    private List<MembershipTO> loadMembershipAttrs() {\n+        List<MembershipTO> memberships = new ArrayList<>();\n+        try {\n+            membershipSchemas.clear();\n+\n+            for (MembershipTO membership : (List<MembershipTO>) PropertyResolver.getPropertyField(\n+                    \"memberships\", anyTO).get(anyTO)) {\n+                setSchemas(membership.getGroupKey(), getMembershipAuxClasses(membership, anyTO.getType()));\n+                setAttrs(membership);\n+\n+                if (AbstractAttrs.this instanceof PlainAttrs && !membership.getPlainAttrs().isEmpty()) {\n+                    memberships.add(membership);\n+                } else if (AbstractAttrs.this instanceof DerAttrs && !membership.getDerAttrs().isEmpty()) {\n+                    memberships.add(membership);\n+                } else if (AbstractAttrs.this instanceof VirAttrs && !membership.getVirAttrs().isEmpty()) {\n+                    memberships.add(membership);\n+                }\n+            }\n+        } catch (WicketRuntimeException | IllegalArgumentException | IllegalAccessException ex) {\n+            // ignore\n+        }\n+\n+        return memberships;\n+    }\n+\n+    protected boolean reoderSchemas() {\n+        return !whichAttrs.isEmpty();\n+    }\n+\n+    protected abstract SchemaType getSchemaType();\n+\n+    private void setSchemas(final String membership, final List<String> anyTypeClasses) {\n+        final Map<String, S> mscs;\n+\n+        if (membershipSchemas.containsKey(membership)) {\n+            mscs = membershipSchemas.get(membership);\n+        } else {\n+            mscs = new LinkedHashMap<>();\n+            membershipSchemas.put(membership, mscs);\n+        }\n+        setSchemas(anyTypeClasses, mscs);\n+    }\n+\n+    private void setSchemas(final List<String> anyTypeClasses) {\n+        setSchemas(anyTypeClasses, schemas);\n+    }\n+\n+    private void setSchemas(final List<String> anyTypeClasses, final Map<String, S> scs) {\n+        final List<S> allSchemas;\n+        if (anyTypeClasses.isEmpty()) {\n+            allSchemas = Collections.emptyList();\n+        } else {\n+            allSchemas = schemaRestClient.getSchemas(getSchemaType(), null, anyTypeClasses.toArray(new String[] {}));\n+        }\n+\n+        scs.clear();\n+\n+        if (reoderSchemas()) {\n+            // 1. remove attributes not selected for display\n+            allSchemas.removeAll(allSchemas.stream().\n+                    filter(schemaTO -> !whichAttrs.contains(schemaTO.getKey())).collect(Collectors.toSet()));\n+        }\n+\n+        allSchemas.forEach(schemaTO -> {\n+            scs.put(schemaTO.getKey(), schemaTO);\n+        });\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        if (org.apache.cxf.common.util.CollectionUtils.isEmpty(attrs.getObject())\n+                && org.apache.cxf.common.util.CollectionUtils.isEmpty(membershipTOs.getObject())) {\n+            response.render(OnDomReadyHeaderItem.forScript(\n+                    String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\"); $('#attributes').hide();\",\n+                            getString(\"attribute.empty.list\"))));\n+        }\n+    }\n+\n+    protected abstract void setAttrs();\n+\n+    protected abstract void setAttrs(final MembershipTO membershipTO);\n+\n+    protected abstract List<Attr> getAttrsFromTO();\n+\n+    protected abstract List<Attr> getAttrsFromTO(final MembershipTO membershipTO);\n+\n+    protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO, final String anyType) {\n+        try {\n+            final GroupTO groupTO = groupRestClient.read(membershipTO.getGroupKey());\n+            return groupTO.getTypeExtension(anyType).get().getAuxClasses();\n+        } catch (Exception e) {\n+            return Collections.emptyList();\n+        }\n+    }\n+\n+    @Override\n+    public boolean evaluate() {\n+        this.attrs.setObject(loadAttrs());\n+        this.membershipTOs.setObject(loadMembershipAttrs());\n+        return !attrs.getObject().isEmpty() || !membershipTOs.getObject().isEmpty();\n+    }\n+\n+    public PageReference getPageReference() {\n+        // SYNCOPE-1213\n+        // default implementation does not require to pass page reference, override this method of want otherwise\n+        return null;\n+    }\n+\n+    private class AttrComparator implements Comparator<Attr>, Serializable {\n+\n+        private static final long serialVersionUID = -5105030477767941060L;\n+\n+        @Override\n+        public int compare(final Attr left, final Attr right) {\n+            if (left == null || StringUtils.isEmpty(left.getSchema())) {\n+                return -1;\n+            }\n+            if (right == null || StringUtils.isEmpty(right.getSchema())) {\n+                return 1;\n+            } else if (AbstractAttrs.this.reoderSchemas()) {\n+                int leftIndex = AbstractAttrs.this.whichAttrs.indexOf(left.getSchema());\n+                int rightIndex = AbstractAttrs.this.whichAttrs.indexOf(right.getSchema());\n+\n+                if (leftIndex > rightIndex) {\n+                    return 1;\n+                } else if (leftIndex < rightIndex) {\n+                    return -1;\n+                } else {\n+                    return 0;\n+                }\n+            } else {\n+                return left.getSchema().compareTo(right.getSchema());\n+            }\n+        }\n+    }\n+\n+    public class Schemas extends Panel {\n+\n+        private static final long serialVersionUID = -2447602429647965090L;\n+\n+        public Schemas(final String id) {\n+            super(id);\n+        }\n+    }\n+}"},{"sha":"22e1b3b4ce6cff7fb736a54254d86d5ad1a5bd94","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractAnyWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+public abstract class AnyWizardBuilder extends AbstractAnyWizardBuilder<UserTO> {\n+\n+    private static final long serialVersionUID = -2480279868319546243L;\n+\n+    protected final List<String> anyTypeClasses;\n+\n+    protected UserFormLayoutInfo formLayoutInfo;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param anyTO any\n+     * @param anyTypeClasses any type classes\n+     * @param formLayoutInfo form layout info\n+     * @param pageRef caller page reference.\n+     */\n+    public AnyWizardBuilder(\n+            final UserTO anyTO,\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new AnyWrapper<>(anyTO), pageRef);\n+        this.anyTypeClasses = anyTypeClasses;\n+        this.formLayoutInfo = formLayoutInfo;\n+    }\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param wrapper any wrapper\n+     * @param anyTypeClasses any type classes\n+     * @param formLayoutInfo form layout info\n+     * @param pageRef caller page reference.\n+     */\n+    public AnyWizardBuilder(\n+            final UserWrapper wrapper,\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(wrapper, pageRef);\n+        this.anyTypeClasses = anyTypeClasses;\n+        this.formLayoutInfo = formLayoutInfo;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final AnyWrapper<UserTO> modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new UserDetails(\n+                UserWrapper.class.cast(modelObject),\n+                mode == AjaxWizard.Mode.TEMPLATE,\n+                modelObject.getInnerObject().getKey() != null,\n+                UserFormLayoutInfo.class.cast(formLayoutInfo).isPasswordManagement(),\n+                pageRef));\n+\n+        if (formLayoutInfo.isAuxClasses()) {\n+            wizardModel.add(new EnduserAuxClasses(modelObject, anyTypeClasses));\n+        }\n+\n+        if (formLayoutInfo.isGroups()) {\n+            wizardModel.add(new Groups(modelObject, mode == AjaxWizard.Mode.TEMPLATE));\n+        }\n+\n+        // attributes panel steps\n+        if (formLayoutInfo.isPlainAttrs()) {\n+            wizardModel.add(new PlainAttrs(\n+                    modelObject,\n+                    null,\n+                    mode,\n+                    anyTypeClasses,\n+                    formLayoutInfo.getWhichPlainAttrs()) {\n+\n+                private static final long serialVersionUID = 8167894751609598306L;\n+\n+                @Override\n+                public PageReference getPageReference() {\n+                    return pageRef;\n+                }\n+\n+            });\n+        }\n+        if (formLayoutInfo.isDerAttrs() && mode != AjaxWizard.Mode.TEMPLATE) {\n+            wizardModel.add(new DerAttrs(modelObject, anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n+        }\n+        if (formLayoutInfo.isVirAttrs()) {\n+            wizardModel.add(new VirAttrs(\n+                    modelObject, mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+        }\n+\n+        if (formLayoutInfo.isResources()) {\n+            wizardModel.add(new Resources(modelObject));\n+        }\n+\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected long getMaxWaitTimeInSeconds() {\n+        return SyncopeWebApplication.get().getMaxWaitTimeInSeconds();\n+    }\n+\n+    @Override\n+    protected void sendError(final String message) {\n+        SyncopeEnduserSession.get().error(message);\n+    }\n+\n+    @Override\n+    protected void sendWarning(final String message) {\n+        SyncopeEnduserSession.get().warn(message);\n+    }\n+\n+    @Override\n+    protected Future<Pair<Serializable, Serializable>> execute(\n+            final Callable<Pair<Serializable, Serializable>> future) {\n+        return SyncopeEnduserSession.get().execute(future);\n+    }\n+}"},{"sha":"e4f60ed0e1c3fb343d0ef92ad753726a4fdc6376","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/DerAttrs.java","status":"added","additions":208,"deletions":0,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,208 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.MarkupStream;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class DerAttrs extends AbstractAttrs<DerSchemaTO> {\n+\n+    private static final long serialVersionUID = -5387344116983102292L;\n+\n+    public <T extends AnyTO> DerAttrs(\n+            final AnyWrapper<T> modelObject,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichDerAttrs) {\n+\n+        super(modelObject, anyTypeClasses, whichDerAttrs);\n+        setTitleModel(new ResourceModel(\"attributes.derived\"));\n+\n+        add(new Accordion(\"derSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                new ResourceModel(\"attributes.accordion\", \"Derived Attributes\")) {\n+\n+            private static final long serialVersionUID = 1037272333056449378L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new DerAttrs.DerSchemas(panelId, schemas, attrs);\n+            }\n+        }), Model.of(0)).setOutputMarkupId(true));\n+\n+        add(new ListView<MembershipTO>(\"membershipsDerSchemas\", membershipTOs) {\n+\n+            private static final long serialVersionUID = 6741044372185745296L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<MembershipTO> item) {\n+                final MembershipTO membershipTO = item.getModelObject();\n+                item.add(new Accordion(\"membershipDerSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                        new StringResourceModel(\n+                                \"attributes.membership.accordion\",\n+                                DerAttrs.this,\n+                                Model.of(membershipTO))) {\n+\n+                    private static final long serialVersionUID = 1037272333056449378L;\n+\n+                    @Override\n+                    public WebMarkupContainer getPanel(final String panelId) {\n+                        return new DerAttrs.DerSchemas(\n+                                panelId,\n+                                membershipSchemas.get(membershipTO.getGroupKey()),\n+                                new ListModel<>(getAttrsFromTO(membershipTO)));\n+                    }\n+                }), Model.of(-1)).setOutputMarkupId(true));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.DERIVED;\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO() {\n+        return anyTO.getDerAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO(final MembershipTO membershipTO) {\n+        return membershipTO.getDerAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n+\n+        schemas.values().forEach(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            }\n+\n+            attrs.add(attrTO);\n+        });\n+\n+        anyTO.getDerAttrs().clear();\n+        anyTO.getDerAttrs().addAll(attrs);\n+    }\n+\n+    @Override\n+    protected void setAttrs(final MembershipTO membershipTO) {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        final Map<String, Attr> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getDerAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n+\n+        membershipSchemas.get(membershipTO.getGroupKey()).values().forEach(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            }\n+\n+            attrs.add(attrTO);\n+        });\n+\n+        membershipTO.getDerAttrs().clear();\n+        membershipTO.getDerAttrs().addAll(attrs);\n+    }\n+\n+    public class DerSchemas extends Schemas {\n+\n+        private static final long serialVersionUID = -4730563859116024676L;\n+\n+        public DerSchemas(\n+                final String id,\n+                final Map<String, DerSchemaTO> schemas,\n+                final IModel<List<Attr>> attrTOs) {\n+            super(id);\n+\n+            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                public void onComponentTagBody(final MarkupStream markupStream, final ComponentTag openTag) {\n+                    super.onComponentTagBody(markupStream, openTag);\n+                    openTag.put(\"class\", \"empty\");\n+                }\n+\n+                @Override\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    Attr attrTO = item.getModelObject();\n+\n+                    IModel<String> model;\n+                    List<String> values = attrTO.getValues();\n+                    if (values == null || values.isEmpty()) {\n+                        model = new ResourceModel(\"derived.emptyvalue.message\", StringUtils.EMPTY);\n+                    } else {\n+                        model = new Model<>(values.get(0));\n+                    }\n+\n+                    AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n+                            \"panel\",\n+                            schemas.get(attrTO.getSchema()).getLabel(SyncopeEnduserSession.get().getLocale()),\n+                            model,\n+                            false);\n+                    panel.setEnabled(false);\n+                    panel.setRequired(true);\n+                    panel.setOutputMarkupId(true);\n+                    item.add(panel);\n+                }\n+            });\n+        }\n+    }\n+}"},{"sha":"8ebc5e7c555f7b2a1b41684da1a8a8de4f92e2f3","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/EnduserAuxClasses.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FEnduserAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FEnduserAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FEnduserAuxClasses.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractAuxClasses;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.enduser.rest.SyncopeRestClient;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+\n+public class EnduserAuxClasses extends AbstractAuxClasses {\n+\n+    private static final long serialVersionUID = 552437609667518888L;\n+\n+    public <T extends AnyTO> EnduserAuxClasses(final AnyWrapper<T> modelObject, final List<String> anyTypeClasses) {\n+        super(modelObject, anyTypeClasses);\n+    }\n+\n+    @Override\n+    protected final List<AnyTypeClassTO> listAnyTypecClasses() {\n+        return new SyncopeRestClient().listAnyTypeClasses().stream().map(name -> {\n+            AnyTypeClassTO anyTypeClassTO = new AnyTypeClassTO();\n+            anyTypeClassTO.setKey(name);\n+            return anyTypeClassTO;\n+        }).collect(Collectors.toList());\n+    }\n+}"},{"sha":"7c55e8780abb2980d05eee1987801fe345642abc","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/Groups.java","status":"added","additions":192,"deletions":0,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FGroups.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.rest.GroupRestClient;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractGroups;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractGroupsModel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.wicket.markup.html.basic.Label;\n+\n+public class Groups extends AbstractGroups {\n+\n+    private static final long serialVersionUID = 552437609667518888L;\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    private final AnyTO anyTO;\n+\n+    private final EnduserGroupsModel groupsModel;\n+\n+    public <T extends AnyTO> Groups(final AnyWrapper<T> modelObject, final boolean templateMode) {\n+        super(modelObject);\n+        this.anyTO = modelObject.getInnerObject();\n+        this.groupsModel = new EnduserGroupsModel();\n+\n+        setOutputMarkupId(true);\n+\n+        addGroupsPanel();\n+    }\n+\n+    @Override\n+    protected void addGroupsPanel() {\n+        if (anyTO instanceof GroupTO) {\n+            groupsContainer.add(new Label(\"groups\").setVisible(false));\n+            groupsContainer.setVisible(false);\n+        } else {\n+            AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n+                    setRenderer(new IChoiceRenderer<MembershipTO>() {\n+\n+                        private static final long serialVersionUID = -3086661086073628855L;\n+\n+                        @Override\n+                        public Object getDisplayValue(final MembershipTO object) {\n+                            return object.getGroupName();\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final MembershipTO object, final int index) {\n+                            return object.getGroupName();\n+                        }\n+\n+                        @Override\n+                        public MembershipTO getObject(\n+                                final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n+\n+                            return choices.getObject().stream().\n+                                    filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n+                        }\n+                    });\n+\n+            groupsContainer.add(builder.setAllowOrder(true).withFilter().build(\"groups\",\n+                    new ListModel<MembershipTO>() {\n+\n+                private static final long serialVersionUID = -2583290457773357445L;\n+\n+                @Override\n+                public List<MembershipTO> getObject() {\n+                    return Groups.this.groupsModel.getMemberships();\n+                }\n+\n+            }, new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n+\n+                private static final long serialVersionUID = -7223078772249308813L;\n+\n+                @Override\n+                public List<MembershipTO> execute(final String filter) {\n+                    return (StringUtils.isEmpty(filter) || \"*\".equals(filter)\n+                            ? groupsModel.getObject()\n+                            : groupRestClient.searchAssignableGroups(\n+                                    anyTO.getRealm(),\n+                                    SyncopeClient.getGroupSearchConditionBuilder().\n+                                            isAssignable().and().is(\"name\").equalTo(filter).query(),\n+                                    1, MAX_GROUP_LIST_CARDINALITY)).stream().map(input -> {\n+\n+                                return new MembershipTO.Builder(input.getKey()).groupName(input.getName()).build();\n+                            }).collect(Collectors.toList());\n+                }\n+            }).hideLabel().setOutputMarkupId(true));\n+            // ---------------------------------\n+        }\n+    }\n+\n+    protected class EnduserGroupsModel extends AbstractGroupsModel {\n+\n+        private static final long serialVersionUID = -4541954630939063927L;\n+\n+        private List<GroupTO> groups;\n+\n+        private List<MembershipTO> memberships;\n+\n+        private String realm;\n+\n+        @Override\n+        public List<GroupTO> getObject() {\n+            reload();\n+            return groups;\n+        }\n+\n+        /**\n+         * Retrieve the first MAX_GROUP_LIST_CARDINALITY assignable.\n+         */\n+        @Override\n+        protected void reloadObject() {\n+            groups = groupRestClient.searchAssignableGroups(\n+                    realm,\n+                    null,\n+                    1,\n+                    MAX_GROUP_LIST_CARDINALITY);\n+        }\n+\n+        @Override\n+        public List<MembershipTO> getMemberships() {\n+            reload();\n+            return memberships;\n+        }\n+\n+        /**\n+         * Retrieve group memberships.\n+         */\n+        @Override\n+        protected void reloadMemberships() {\n+            memberships = GroupableRelatableTO.class.cast(anyTO).getMemberships();\n+        }\n+\n+        @Override\n+        public List<String> getDynMemberships() {\n+            return Collections.emptyList();\n+        }\n+\n+        /**\n+         * Retrieve dyn group memberships.\n+         */\n+        @Override\n+        protected void reloadDynMemberships() {\n+            // DO NOTHING\n+        }\n+\n+        /**\n+         * Reload data if the realm changes (see SYNCOPE-1135).\n+         */\n+        @Override\n+        protected void reload() {\n+            boolean reload = Groups.this.anyTO.getRealm() != null\n+                    && !Groups.this.anyTO.getRealm().equalsIgnoreCase(realm);\n+            realm = Groups.this.anyTO.getRealm();\n+\n+            if (reload) {\n+                reloadObject();\n+                reloadMemberships();\n+            }\n+        }\n+    }\n+}"},{"sha":"9a4aed0df6c961be61c899e2c00d356343a789e7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/PlainAttrs.java","status":"added","additions":435,"deletions":0,"changes":435,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,435 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.enduser.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.enduser.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.enduser.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.EncryptedFieldPanel;\n+import org.apache.syncope.client.ui.commons.SchemaUtils;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n+\n+    private static final long serialVersionUID = 552437609667518888L;\n+\n+    protected final AjaxWizard.Mode mode;\n+\n+    protected final AnyTO previousObject;\n+\n+    protected String fileKey = \"\";\n+\n+    public <T extends AnyTO> PlainAttrs(\n+            final AnyWrapper<T> modelObject,\n+            final Form<?> form,\n+            final AjaxWizard.Mode mode,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichPlainAttrs) throws IllegalArgumentException {\n+\n+        super(modelObject, anyTypeClasses, whichPlainAttrs);\n+        this.mode = mode;\n+\n+        if (modelObject.getInnerObject() instanceof UserTO) {\n+            fileKey = UserTO.class.cast(modelObject.getInnerObject()).getUsername();\n+        } else if (modelObject.getInnerObject() instanceof GroupTO) {\n+            fileKey = GroupTO.class.cast(modelObject.getInnerObject()).getName();\n+        } else if (modelObject.getInnerObject() instanceof AnyObjectTO) {\n+            fileKey = AnyObjectTO.class.cast(modelObject.getInnerObject()).getName();\n+        }\n+\n+        if (modelObject instanceof UserWrapper) {\n+            previousObject = UserWrapper.class.cast(modelObject).getPreviousUserTO();\n+        } else {\n+            previousObject = null;\n+        }\n+\n+        setTitleModel(new ResourceModel(\"attributes.plain\"));\n+\n+        add(new Accordion(\"plainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                new ResourceModel(\"attributes.accordion\", \"Plain Attributes\")) {\n+\n+            private static final long serialVersionUID = 1037272333056449378L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new PlainSchemas(panelId, schemas, attrs);\n+            }\n+        }), Model.of(0)).setOutputMarkupId(true));\n+\n+        add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", membershipTOs) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<MembershipTO> item) {\n+                final MembershipTO membershipTO = item.getModelObject();\n+                item.add(new Accordion(\"membershipPlainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                        new StringResourceModel(\n+                                \"attributes.membership.accordion\",\n+                                PlainAttrs.this,\n+                                Model.of(membershipTO))) {\n+\n+                    private static final long serialVersionUID = 1037272333056449378L;\n+\n+                    @Override\n+                    public WebMarkupContainer getPanel(final String panelId) {\n+                        return new PlainSchemas(\n+                                panelId,\n+                                membershipSchemas.get(membershipTO.getGroupKey()),\n+                                new ListModel<>(getAttrsFromTO(membershipTO)));\n+                    }\n+                }), Model.of(-1)).setOutputMarkupId(true));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.PLAIN;\n+    }\n+\n+    @Override\n+    protected boolean reoderSchemas() {\n+        return super.reoderSchemas() && mode != AjaxWizard.Mode.TEMPLATE;\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO() {\n+        return anyTO.getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO(final MembershipTO membershipTO) {\n+        return membershipTO.getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n+\n+        attrs.addAll(schemas.values().stream().map(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                attrTO.getValues().add(\"\");\n+            } else {\n+                attrTO = attrMap.get(schema.getKey());\n+            }\n+            return attrTO;\n+        }).collect(Collectors.toList()));\n+\n+        anyTO.getPlainAttrs().clear();\n+        anyTO.getPlainAttrs().addAll(attrs);\n+    }\n+\n+    @Override\n+    protected void setAttrs(final MembershipTO membershipTO) {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        final Map<String, Attr> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getPlainAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n+\n+        attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n+                map(schema -> {\n+                    Attr attrTO = new Attr();\n+                    attrTO.setSchema(schema.getKey());\n+                    if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                        attrTO.getValues().add(StringUtils.EMPTY);\n+                    } else {\n+                        attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+                    }\n+                    return attrTO;\n+                }).collect(Collectors.toList()));\n+\n+        membershipTO.getPlainAttrs().clear();\n+        membershipTO.getPlainAttrs().addAll(attrs);\n+    }\n+\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    protected FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n+        final boolean required;\n+        final boolean readOnly;\n+        final AttrSchemaType type;\n+        final boolean jexlHelp;\n+\n+        if (mode == AjaxWizard.Mode.TEMPLATE) {\n+            required = false;\n+            readOnly = false;\n+            type = AttrSchemaType.String;\n+            jexlHelp = true;\n+        } else {\n+            required = schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+            readOnly = schemaTO.isReadonly();\n+            type = schemaTO.getType();\n+            jexlHelp = false;\n+\n+        }\n+\n+        FieldPanel panel;\n+        switch (type) {\n+            case Boolean:\n+                panel = new AjaxCheckBoxPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(getLocale()),\n+                        new Model<>(),\n+                        true);\n+                panel.setRequired(required);\n+                break;\n+\n+            case Date:\n+                String datePattern = schemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : schemaTO.getConversionPattern();\n+\n+                if (datePattern.contains(\"H\")) {\n+                    panel = new AjaxDateTimeFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(getLocale()),\n+                            new Model<>(),\n+                            datePattern);\n+                } else {\n+                    panel = new AjaxDateFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(getLocale()),\n+                            new Model<>(),\n+                            datePattern);\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+\n+                break;\n+\n+            case Enum:\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\",\n+                        schemaTO.getLabel(getLocale()), new Model<>(), true);\n+                ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n+\n+                if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        private static final long serialVersionUID = -3724971416312135885L;\n+\n+                        private final Map<String, String> valueMap = SchemaUtils.getEnumeratedKeyValues(schemaTO);\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return valueMap.get(value) == null ? value : valueMap.get(value);\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, final int i) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getObject(\n+                                final String id, final IModel<? extends List<? extends String>> choices) {\n+                            return id;\n+                        }\n+                    });\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Long:\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().build(\n+                        \"panel\",\n+                        schemaTO.getLabel(getLocale()),\n+                        Long.class,\n+                        new Model<>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Double:\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).build(\n+                        \"panel\",\n+                        schemaTO.getLabel(getLocale()),\n+                        Double.class,\n+                        new Model<>());\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Binary:\n+                final PageReference pageRef = getPageReference();\n+                panel = new BinaryFieldPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(getLocale()),\n+                        new Model<>(),\n+                        schemaTO.getMimeType(),\n+                        fileKey) {\n+\n+                    private static final long serialVersionUID = -3268213909514986831L;\n+\n+                    @Override\n+                    protected PageReference getPageReference() {\n+                        return pageRef;\n+                    }\n+\n+                };\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            case Encrypted:\n+                panel = new EncryptedFieldPanel(\"panel\",\n+                        schemaTO.getLabel(getLocale()), new Model<>(), true);\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+\n+            default:\n+                panel = new AjaxTextFieldPanel(\"panel\",\n+                        schemaTO.getLabel(getLocale()), new Model<>(), true);\n+\n+                if (jexlHelp) {\n+                    AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+        }\n+\n+        panel.setReadOnly(readOnly);\n+\n+        return panel;\n+    }\n+\n+    public class PlainSchemas extends Schemas {\n+\n+        private static final long serialVersionUID = -4730563859116024676L;\n+\n+        public PlainSchemas(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<List<Attr>> attrTOs) {\n+            super(id);\n+\n+            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    Attr attrTO = item.getModelObject();\n+\n+                    AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n+                    if (mode == AjaxWizard.Mode.TEMPLATE\n+                            || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n+                        FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n+                    } else {\n+                        panel = new MultiFieldPanel.Builder<>(\n+                                new PropertyModel<>(attrTO, \"values\")).build(\n+                                \"panel\",\n+                                attrTO.getSchema(),\n+                                FieldPanel.class.cast(panel));\n+                        // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n+                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n+                    }\n+                    item.add(panel);\n+\n+                    Optional<Attr> prevAttr = previousObject == null\n+                            ? Optional.empty()\n+                            : previousObject.getPlainAttr(attrTO.getSchema());\n+                    if (previousObject != null\n+                            && ((!prevAttr.isPresent() && attrTO.getValues().stream().anyMatch(StringUtils::isNotBlank))\n+                            || (prevAttr.isPresent() && !ListUtils.isEqualList(\n+                            prevAttr.get().getValues().stream().\n+                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n+                            attrTO.getValues().stream().\n+                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n+\n+                        List<String> oldValues = prevAttr.isPresent()\n+                                ? prevAttr.get().getValues()\n+                                : Collections.<String>emptyList();\n+                        panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n+                    }\n+                }\n+            });\n+        }\n+    }\n+}"},{"sha":"c4e78570126f92af5b9dfdb12459f3dc023bd40c","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/Resources.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FResources.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AbstractResources;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+\n+public class Resources extends AbstractResources {\n+\n+    private static final long serialVersionUID = 702900610508752856L;\n+\n+    public <T extends AnyTO> Resources(final AnyWrapper<T> modelObject) {\n+        super(modelObject);\n+    }\n+\n+    @Override\n+    public boolean evaluate() {\n+        available.setObject(SyncopeEnduserSession.get().getService(SyncopeService.class).platform().getResources());\n+        return !available.getObject().isEmpty();\n+    }\n+}"},{"sha":"665f54689688512b13027651ee567041c1bb5ac1","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/UserDetails.java","status":"added","additions":230,"deletions":0,"changes":230,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,230 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.rest.RealmRestClient;\n+import org.apache.syncope.client.enduser.rest.SecurityQuestionRestClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class UserDetails extends WizardStep {\n+\n+    private static final long serialVersionUID = 6592027822510220463L;\n+\n+    private static final String PASSWORD_CONTENT_PATH = \"body:content\";\n+\n+    private final FieldPanel<String> realm;\n+\n+    protected final AjaxTextFieldPanel username;\n+\n+    private final FieldPanel<String> securityQuestion;\n+\n+    private final FieldPanel<String> securityAnswer;\n+\n+    protected final UserTO userTO;\n+\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    public UserDetails(\n+            final UserWrapper wrapper,\n+            final boolean templateMode,\n+            final boolean includeStatusPanel,\n+            final boolean showPasswordManagement,\n+            final PageReference pageRef) {\n+        super();\n+\n+        userTO = wrapper.getInnerObject();\n+        // ------------------------\n+        // Username\n+        // ------------------------\n+        username = new AjaxTextFieldPanel(\"username\", \"username\", new PropertyModel<>(userTO, \"username\"), false);\n+\n+        if (wrapper.getPreviousUserTO() != null && StringUtils.\n+                compare(wrapper.getPreviousUserTO().getUsername(), wrapper.getInnerObject().getUsername()) != 0) {\n+            username.showExternAction(new LabelInfo(\"externalAction\", wrapper.getPreviousUserTO().getUsername()));\n+        }\n+\n+        if (templateMode) {\n+            username.enableJexlHelp();\n+        } else {\n+            username.addRequiredLabel();\n+        }\n+        add(username);\n+        // ------------------------\n+\n+        // ------------------------\n+        // Realm\n+        // ------------------------\n+        realm = new AjaxDropDownChoicePanel<>(\n+                \"destinationRealm\", \"destinationRealm\", new PropertyModel<>(userTO, \"realm\"), false);\n+\n+        ((AjaxDropDownChoicePanel<String>) realm).setChoices(\n+                new RealmRestClient().list().stream().map(RealmTO::getFullPath).collect(Collectors.toList()));\n+        add(realm);\n+\n+        // ------------------------\n+        // Password\n+        // ------------------------\n+        final Model<Integer> model = Model.of(-1);\n+\n+        final Accordion accordion = new Accordion(\"accordionPanel\", Collections.<ITab>singletonList(\n+                new AbstractTab(new ResourceModel(\"password.change\", \"Change password\")) {\n+\n+            private static final long serialVersionUID = 1037272333056449378L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                EditUserPasswordPanel panel = new EditUserPasswordPanel(panelId, wrapper, templateMode);\n+                panel.setEnabled(model.getObject() >= 0);\n+                return panel;\n+            }\n+        }), model) {\n+\n+            private static final long serialVersionUID = -2898628183677758699L;\n+\n+            @Override\n+            protected Component newTitle(final String markupId, final ITab tab, final Accordion.State state) {\n+                return new AjaxLink<Integer>(markupId) {\n+\n+                    private static final long serialVersionUID = 7021195294339489084L;\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        super.onComponentTag(tag);\n+                        tag.put(\"style\", \"color: #337ab7\");\n+                    }\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        model.setObject(model.getObject() == 0 ? -1 : 0);\n+                        Component passwordPanel = getParent().get(PASSWORD_CONTENT_PATH);\n+                        passwordPanel.setEnabled(model.getObject() >= 0);\n+                        target.add(passwordPanel);\n+                    }\n+                }.setBody(new ResourceModel(\"password.change\", \"Change password ...\"));\n+            }\n+        };\n+\n+        accordion.setOutputMarkupId(true);\n+        accordion.setVisible(showPasswordManagement);\n+        add(accordion);\n+        // ------------------------\n+\n+        // ------------------------\n+        // Security Answer\n+        // ------------------------\n+        securityAnswer =\n+                new AjaxTextFieldPanel(\"securityAnswer\", \"securityAnswer\",\n+                        new PropertyModel<>(userTO, \"securityAnswer\"), false);\n+        add(securityAnswer.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true).setEnabled(false));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Security Question\n+        // ------------------------\n+        securityQuestion = new AjaxDropDownChoicePanel(\"securityQuestion\", \"securityQuestion\", new PropertyModel<>(\n+                userTO, \"securityQuestion\"));\n+        ((AjaxDropDownChoicePanel) securityQuestion).setNullValid(true);\n+\n+        final List<SecurityQuestionTO> securityQuestions = new SecurityQuestionRestClient().list();\n+        ((AjaxDropDownChoicePanel<String>) securityQuestion).setChoices(securityQuestions.stream().map(\n+                SecurityQuestionTO::getKey).collect(Collectors.toList()));\n+        ((AjaxDropDownChoicePanel<String>) securityQuestion).setChoiceRenderer(\n+                new IChoiceRenderer<String>() {\n+\n+            private static final long serialVersionUID = -4421146737845000747L;\n+\n+            @Override\n+            public Object getDisplayValue(final String value) {\n+                return securityQuestions.stream().filter(sq -> value.equals(sq.getKey()))\n+                        .map(SecurityQuestionTO::getContent).findFirst().orElse(null);\n+            }\n+\n+            @Override\n+            public String getIdValue(final String value, final int index) {\n+                return value;\n+            }\n+\n+            @Override\n+            public String getObject(\n+                    final String id,\n+                    final IModel<? extends List<? extends String>> choices) {\n+                return id;\n+            }\n+        });\n+\n+        securityQuestion.add(new AjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = 192359260308762078L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                securityAnswer.setEnabled(StringUtils.isNotBlank(securityQuestion.getModelObject()));\n+                target.add(securityAnswer);\n+            }\n+        });\n+\n+        add(securityQuestion);\n+        // ------------------------\n+    }\n+\n+    public static class EditUserPasswordPanel extends Panel {\n+\n+        private static final long serialVersionUID = -8198836979773590078L;\n+\n+        public EditUserPasswordPanel(\n+                final String id,\n+                final UserWrapper wrapper,\n+                final boolean templateMode) {\n+            super(id);\n+            setOutputMarkupId(true);\n+            add(new Label(\"warning\", new ResourceModel(\"password.change.warning\")));\n+            add(new PasswordPanel(\"passwordPanel\", wrapper, templateMode));\n+        }\n+\n+    }\n+}"},{"sha":"9346bf4ece84d017902f4d6f3b204a0112f1bfd1","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/UserWizardBuilder.java","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.layout.UserForm;\n+import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.enduser.rest.UserSelfRestClient;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.request.PasswordPatch;\n+import org.apache.syncope.common.lib.request.UserCR;\n+import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+\n+public class UserWizardBuilder extends AnyWizardBuilder implements UserForm {\n+\n+    private static final long serialVersionUID = 6716803168859873877L;\n+\n+    protected final UserSelfRestClient userSelfRestClient = new UserSelfRestClient();\n+\n+    /**\n+     * Constructor to be used for templating only.\n+     *\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo form layout.\n+     * @param pageRef reference page.\n+     */\n+    public UserWizardBuilder(\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new UserWrapper(null), anyTypeClasses, formLayoutInfo, pageRef);\n+    }\n+\n+    /**\n+     * Constructor to be used for Approval and Remediation details only.\n+     *\n+     * @param previousUserTO previous user status.\n+     * @param userTO new user status to be approved.\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo from layout.\n+     * @param pageRef reference page.\n+     */\n+    public UserWizardBuilder(\n+            final UserTO previousUserTO,\n+            final UserTO userTO,\n+            final List<String> anyTypeClasses,\n+            final UserFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new UserWrapper(previousUserTO, userTO), anyTypeClasses, formLayoutInfo, pageRef);\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n+        UserTO inner = modelObject.getInnerObject();\n+\n+        ProvisioningResult<UserTO> result;\n+        if (inner.getKey() == null) {\n+            UserCR req = new UserCR();\n+            EntityTOUtils.toAnyCR(inner, req);\n+            req.setStorePassword(modelObject instanceof UserWrapper\n+                    ? UserWrapper.class.cast(modelObject).isStorePasswordInSyncope()\n+                    : StringUtils.isNotBlank(inner.getPassword()));\n+\n+            result = userSelfRestClient.create(req);\n+        } else {\n+            fixPlainAndVirAttrs(inner, getOriginalItem().getInnerObject());\n+            UserUR userUR = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n+\n+            if (StringUtils.isNotBlank(inner.getPassword())) {\n+                PasswordPatch passwordPatch = new PasswordPatch.Builder().\n+                        value(inner.getPassword()).onSyncope(true).resources(inner.getResources()).build();\n+                userUR.setPassword(passwordPatch);\n+            }\n+\n+            // update just if it is changed\n+            if (userUR.isEmpty()) {\n+                result = new ProvisioningResult<>();\n+                result.setEntity(inner);\n+            } else {\n+                result = userSelfRestClient.update(getOriginalItem().getInnerObject().getETagValue(), userUR);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    /**\n+     * Overrides default setItem() in order to clean statusModel as well.\n+     *\n+     * @param item item to be set.\n+     * @return the current wizard.\n+     */\n+    @Override\n+    public UserWizardBuilder setItem(final AnyWrapper<UserTO> item) {\n+        super.setItem(item == null ? null : new UserWrapper(item.getInnerObject()));\n+        return this;\n+    }\n+\n+}"},{"sha":"9dec684cfb5e87179c82ab228096b311f2950d1a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/VirAttrs.java","status":"added","additions":224,"deletions":0,"changes":224,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,224 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.wizards.any;\n+\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    private final AjaxWizard.Mode mode;\n+\n+    private final AnyWrapper<?> modelObject;\n+\n+    public <T extends AnyTO> VirAttrs(\n+            final AnyWrapper<T> modelObject,\n+            final AjaxWizard.Mode mode,\n+            final List<String> anyTypeClasses,\n+            final List<String> whichVirAttrs) {\n+\n+        super(modelObject, anyTypeClasses, whichVirAttrs);\n+        this.mode = mode;\n+        this.modelObject = modelObject;\n+\n+        setTitleModel(new ResourceModel(\"attributes.virtual\"));\n+\n+        add(new Accordion(\"virSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                new ResourceModel(\"attributes.accordion\", \"Virtual Attributes\")) {\n+\n+            private static final long serialVersionUID = 1037272333056449378L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new VirAttrs.VirSchemas(panelId, schemas, attrs);\n+            }\n+        }), Model.of(0)).setOutputMarkupId(true));\n+\n+        add(new ListView<MembershipTO>(\"membershipsVirSchemas\", membershipTOs) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<MembershipTO> item) {\n+                final MembershipTO membershipTO = item.getModelObject();\n+                item.add(new Accordion(\"membershipVirSchemas\",\n+                        Collections.<ITab>singletonList(new AbstractTab(new StringResourceModel(\n+                                \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n+\n+                            private static final long serialVersionUID = 1037272333056449378L;\n+\n+                            @Override\n+                            public WebMarkupContainer getPanel(final String panelId) {\n+                                return new VirAttrs.VirSchemas(\n+                                        panelId,\n+                                        membershipSchemas.get(membershipTO.getGroupKey()),\n+                                        new ListModel<>(getAttrsFromTO(membershipTO)));\n+                            }\n+                        }), Model.of(-1)).setOutputMarkupId(true));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected SchemaType getSchemaType() {\n+        return SchemaType.VIRTUAL;\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO() {\n+        return anyTO.getVirAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected List<Attr> getAttrsFromTO(final MembershipTO membershipTO) {\n+        return membershipTO.getVirAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    protected void setAttrs() {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n+\n+        attrs.addAll(schemas.values().stream().map(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            } else {\n+                attrTO.getValues().add(StringUtils.EMPTY);\n+            }\n+            return attrTO;\n+        }).collect(Collectors.toList()));\n+\n+        anyTO.getVirAttrs().clear();\n+        anyTO.getVirAttrs().addAll(attrs);\n+    }\n+\n+    @Override\n+    protected void setAttrs(final MembershipTO membershipTO) {\n+        List<Attr> attrs = new ArrayList<>();\n+\n+        final Map<String, Attr> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getVirAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n+\n+        attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().map(schema -> {\n+            Attr attrTO = new Attr();\n+            attrTO.setSchema(schema.getKey());\n+            if (attrMap.containsKey(schema.getKey())) {\n+                attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            } else {\n+                attrTO.getValues().add(StringUtils.EMPTY);\n+            }\n+            return attrTO;\n+        }).collect(Collectors.toList()));\n+\n+        membershipTO.getVirAttrs().clear();\n+        membershipTO.getVirAttrs().addAll(attrs);\n+    }\n+\n+    public class VirSchemas extends Schemas {\n+\n+        private static final long serialVersionUID = -4730563859116024676L;\n+\n+        public VirSchemas(\n+                final String id,\n+                final Map<String, VirSchemaTO> schemas,\n+                final IModel<List<Attr>> attrTOs) {\n+            super(id);\n+\n+            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                @SuppressWarnings(\"unchecked\")\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    Attr attrTO = item.getModelObject();\n+                    VirSchemaTO virSchemaTO = schemas.get(attrTO.getSchema());\n+\n+                    AbstractFieldPanel<?> panel = new AjaxTextFieldPanel(\n+                            \"panel\",\n+                            virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n+                            new Model<>(),\n+                            false);\n+\n+                    if (mode == AjaxWizard.Mode.TEMPLATE) {\n+                        AjaxTextFieldPanel.class.cast(panel).enableJexlHelp().setEnabled(!virSchemaTO.isReadonly());\n+                    } else {\n+                        panel = new MultiFieldPanel.Builder<>(\n+                                new PropertyModel<List<String>>(attrTO, \"values\")).build(\n+                                \"panel\",\n+                                virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n+                                AjaxTextFieldPanel.class.cast(panel));\n+                        panel.setEnabled(!virSchemaTO.isReadonly());\n+                    }\n+\n+                    item.add(panel);\n+\n+                    if (!attrTO.getValues().isEmpty()\n+                            && VirAttrs.this.modelObject instanceof UserWrapper\n+                            && UserWrapper.class.cast(VirAttrs.this.modelObject).getPreviousUserTO() != null) {\n+\n+                        panel.showExternAction(new LabelInfo(\"externalAction\", StringUtils.EMPTY));\n+                    }\n+                }\n+            });\n+        }\n+    }\n+}"},{"sha":"6e7bd364d34051c484e97facb29ed7932d3c0b35","filename":"client/idrepo/enduser/src/main/resources/META-INF/cxf/org.apache.cxf.Logger","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1 @@\n+org.apache.cxf.common.logging.Slf4jLogger"},{"sha":"21b9201ecb97e13800b816e226604bcfb435bbf9","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/accessibility.css","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+.btn-accessibility {\n+  position: absolute;\n+  right: 0;\n+  font-size: 12px;\n+  padding: 15px 15px 0 0;\n+}\n+\n+.btn-accessibility i {\n+  font-size: 30px;\n+}\n+\n+.btn-accessibility:hover {\n+  cursor:pointer;\n+}\n+\n+.control-sidebar-menu a:focus {\n+  outline: 1px #949494 solid;\n+}\n+\n+#change_contrast {\n+  top: 0;\n+}\n+#change_fontSize {\n+  top: 40px;\n+}"},{"sha":"da2645696e20ce45a9f39b46583f503992c6830f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/accessibility/accessibilityFont.css","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityFont.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityFont.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityFont.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+body,\n+p {\n+  font-size: 200%;\n+}\n+\n+.menu a,\n+.treeview-menu a,\n+.control-sidebar-subheading {\n+  font-size: 80% !important;\n+}\n+\n+.box-header > .fa, \n+.box-header > .glyphicon, \n+.box-header > .ion, .box-header .box-title,\n+.dropdown-toggle .filter-option,\n+.dropdown-menu a,\n+.menu-info span,\n+.user-header,\n+.header,\n+.modal-title,\n+.small-box p,\n+.alert-widget,\n+.alert-widget > a > .label,\n+.alert h4,\n+#mappings .fa,\n+.popover-content,\n+.box .dropdown-toggle .glyphicon,\n+.box-header button,\n+.toggle .toggle-group .btn,\n+.input-group .form-control label {\n+  font-size: 120%;\n+}\n+\n+input,\n+select,\n+.footer a,\n+.modal-footer button,\n+.dropdown-menu:not([role='menu']),\n+.dropdown-menu > li.header,\n+div#tablehandling ul.menu i,\n+.content-header > .breadcrumb,\n+.btn-primary:not(.btn-circle),\n+.modal-content .box .dialog pre {\n+  font-size: 100% !important;\n+}\n+\n+#topology .window {\n+  height: 90px;\n+}\n+\n+.dataTables_length select {\n+  font-size: 85% !important;\n+}\n+\n+button.close {\n+  font-size: 2em;\n+}\n+\n+.details-footer .information {\n+  font-size: 12px;\n+}\n+\n+.btn-file i,\n+.btn-file span,\n+.input-group-btn button.btn-primary {\n+  font-size: 20px !important;\n+}\n+\n+.checkbox input[type=checkbox], \n+.checkbox-inline input[type=checkbox], \n+.radio input[type=radio], \n+.radio-inline input[type=radio],\n+input[type=checkbox], \n+input[type=radio] {\n+  width: 20px;\n+  height: 20px;\n+}\n+\n+.k-timepicker, \n+.k-datepicker {\n+  width: 200px !important;\n+}"},{"sha":"aa4d5b953f9846eb404cb1655aa158fe660d7aa5","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/accessibility/accessibilityHC.css","status":"added","additions":296,"deletions":0,"changes":296,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityHC.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityHC.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Faccessibility%2FaccessibilityHC.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,296 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/* General\n+============================================================================= */\n+.content-wrapper,\n+.content-wrapper .box,\n+.modal-content,\n+.modal-header,\n+.background-footer,\n+input:not(:disabled):not([type=\"file\"]),\n+select,\n+select option,\n+button:not(.close),\n+.table .sorting,\n+.dataTables_paginate a,\n+.modal-footer,\n+.box-header,\n+.dropdown-menu,\n+.main-footer,\n+.circular-actions a,\n+.k-select,\n+.file-caption.kv-fileinput-caption {\n+  color: #f7f7f7 !important;\n+  background-color: #0f1417 !important;\n+}\n+\n+\n+.dataTable thead th:after,\n+.close {\n+  color: #f7f7f7 !important;\n+  opacity: 0.8 !important;\n+}\n+\n+\n+.input-group-addon a,\n+.input-group-addon i,\n+.dropdown-menu > li:not(.disabled) > a:hover,\n+.dropdown-menu > li:not(.disabled) > a:hover span,\n+.dropdown-menu > li:not(.disabled) > a:focus,\n+.dropdown-menu > li:not(.disabled) > a:focus span,\n+#startAtContainer .input-group-addon span,\n+#startAtContainer .k-widget span,\n+#startAtContainer .k-widget i,\n+#startAtContainer .k-widget input,\n+.modal-footer i,\n+.navbar-nav > .user-menu > .dropdown-menu > .user-footer .btn-default,\n+.content-wrapper .nav-tabs a,\n+.wrapper .content-wrapper .nav.nav-tabs li.active a span,\n+.wrapper .content-wrapper .nav.nav-tabs li.active a,\n+.wrapper .content-wrapper .nav.nav-tabs li a:hover span,\n+.wrapper .content-wrapper .nav.nav-tabs li a:hover,\n+.wrapper .content-wrapper .nav.nav-tabs li a:active span,\n+.wrapper .content-wrapper .nav.nav-tabs li a:active,\n+.wrapper .content-wrapper .nav.nav-tabs li a:focus span,\n+.wrapper .content-wrapper .nav.nav-tabs li a:focus,\n+.wrapper .content-wrapper .tab-content .btn-primary .fa-download {\n+  color: #000000 !important;\n+}\n+\n+\n+.content-wrapper a:not(.btn-primary),\n+.content-wrapper span:not(.label-info):not([role=\"presentation\"]):not([class^='cm-']),\n+.content-wrapper p,\n+.content-wrapper .box-title a,\n+.realm-choice .dropdown-menu > li:not(.disabled) > a:hover,\n+.realm-choice .dropdown-menu > li:not(.disabled) > a:hover span,\n+.realm-choice .dropdown-menu > li:not(.disabled) > a:focus,\n+.realm-choice .dropdown-menu > li:not(.disabled) > a:focus span,\n+.box-header,\n+.breadcrumb .active,\n+table tbody tr:hover button span,\n+.dropdown-menu > li > a,\n+.modal-header button,\n+.circular-actions a i,\n+.wizard-form .input-group-addon i,\n+#startAtContainer .input-group-addon i,\n+.attribute .input-group-addon i {\n+  color: #f7f7f7 !important;\n+}\n+\n+\n+.box.box-primary {\n+  border-top-color: #f7f7f7;\n+}\n+\n+\n+img,\n+.content-wrapper div.btn.btn-file span.hidden-xs {\n+  background-color: #f7f7f7;\n+  color: #000000 !important;\n+}\n+.btn-primary,\n+.callout.callout-info,\n+.alert-info,\n+.label-info,\n+.modal-info .modal-body {\n+  background-color: #f7f7f7 !important;\n+  color: #000000 !important;\n+}\n+\n+\n+.logo img,\n+.modal-content .input-group .input-group-addon {\n+  background-color: transparent;\n+}\n+\n+\n+.modal-dialog {\n+  border: 2px solid white;\n+}\n+\n+\n+#veil:not(:required):after {\n+  -webkit-box-shadow: #f7f7f7 1.5em 0 0 0, \n+    #f7f7f7 1.1em 1.1em 0 0, \n+    #f7f7f7 0 1.5em 0 0,\n+    #f7f7f7 -1.1em 1.1em 0 0, \n+    rgba(0, 0, 0, 0.5) -1.5em 0 0 0, \n+    rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, \n+    #f7f7f7 0 -1.5em 0 0, \n+    #f7f7f7 1.1em -1.1em 0 0;\n+  box-shadow: #f7f7f7 1.5em 0 0 0, \n+    #f7f7f7 1.1em 1.1em 0 0, \n+    #f7f7f7 0 1.5em 0 0, \n+    #f7f7f7 -1.1em 1.1em 0 0, \n+    #f7f7f7 -1.5em 0 0 0, \n+    #f7f7f7 -1.1em -1.1em 0 0, \n+    #f7f7f7 0 -1.5em 0 0, \n+    #f7f7f7 1.1em -1.1em 0 0; \n+}\n+\n+\n+.input-group input:disabled,\n+.input-group input[disabled],\n+.control-sidebar-dark .control-sidebar-menu > li > a:hover,\n+.table-hover > tbody > tr:hover,\n+.skin-blue .main-header .navbar .sidebar-toggle:hover,\n+.main-header .navbar .sidebar-toggle:hover,\n+.skin-blue .main-header .logo:hover,\n+.main-header .logo:hover,\n+div.toggle-menu ul li:hover,\n+.skin-blue .main-header .navbar .nav > li > a:hover, \n+.skin-blue .main-header .navbar .nav > li > a:active, \n+.skin-blue .main-header .navbar .nav > li > a:focus, \n+.skin-blue .main-header .navbar .nav .open > a:hover, \n+.skin-blue .main-header .navbar .nav .open > a:focus,\n+.skin-blue .sidebar-menu > li:hover > a, \n+.skin-blue .sidebar-menu > li.active > a,\n+.dropdown-menu > li > a:hover,\n+.dropdown-menu > li > a:focus, \n+.dropdown-menu > li > a:hover,\n+.k-block, \n+.k-draghandle, \n+.k-grid-header, \n+.k-grouping-header, \n+.k-header, \n+.k-pager-wrap, \n+.k-toolbar, \n+.k-treemap-tile,\n+.k-picker-wrap,\n+.k-state-disabled,\n+.km-pane-wrapper .k-header {\n+  background-color: rgba(108, 115, 117, 0.55);\n+}\n+\n+\n+.sidebar-mini .main-header .navbar {\n+  background-color: #222d32; /* color from 'skin-blue' */\n+  border-bottom: 1px white solid;\n+  box-sizing: border-box;\n+}\n+.sidebar-mini .main-header .logo,\n+div.toggle-menu,\n+.skin-blue .main-header li.user-header {\n+  background-color: #222d32;\n+}\n+\n+\n+div.toggle-menu {\n+  border: 1px solid #f7f7f7;\n+}\n+\n+\n+a,\n+.pagination > .active > a, \n+.pagination > .active > a:focus, \n+.pagination > .active > a:hover, \n+.pagination > .active > span, \n+.pagination > .active > span:focus, \n+.pagination > .active > span:hover {\n+  border-color: #76abd9;\n+}\n+a {\n+  color: #76abd9;\n+}\n+\n+\n+.logs button.btn-primary {\n+  border-color: #f7f7f7;\n+}\n+.logs button.btn-primary:hover {\n+  border-color: #adadad;\n+}\n+div.infolabel,\n+.input-group input:disabled,\n+.input-group input[disabled] {\n+  color: #d2d2d2;\n+}\n+\n+\n+.bg-red,\n+.callout.callout-danger,\n+.alert-danger,\n+.alert-error,\n+.label-danger,\n+.modal-danger .modal-body,\n+.btn-danger.active, \n+.btn-danger:active, \n+.open>.dropdown-toggle.btn-danger {\n+  background-color: #942819 !important;\n+}\n+.bg-yellow {\n+  background-color: #6F4706 !important;\n+}\n+.bg-green,\n+.copy-clipboard-feedback,\n+.btn-success,\n+.callout.callout-success, \n+.alert-success, \n+.label-success, \n+.modal-success .modal-body {\n+  background-color: #005C32 !important;\n+}\n+.bg-aqua {\n+  background-color: #004E61 !important;\n+}\n+.bg-yellow, \n+.callout.callout-warning, \n+.alert-warning, \n+.label-warning, \n+.modal-warning .modal-body {\n+  background-color: #6F4706 !important;\n+}\n+.callout.callout-warning {\n+  border-color: #6F4706;\n+}\n+\n+\n+.bootstrap-select .btn.btn-default {\n+  background-color: rgba(101, 101, 101, 0.7) !important;\n+}\n+\n+\n+/* Login page\n+============================================================================= */\n+.login-body {\n+  background-image: linear-gradient(rgb(31, 109, 142), #004626);\n+}\n+\n+.login-logo {\n+  background: transparent;\n+}\n+\n+.btn-accessibility {\n+  color: #f7f7f7 !important;\n+}\n+\n+.form-signin .btn-primary, \n+.form-signin .btn-primary {\n+  border: 2px solid white;\n+}\n+.form-signin .btn-primary.focus, \n+.form-signin .btn-primary:focus {\n+  border-color: #8c8c8c;\n+}\n+\n+.login-card {\n+  background-color: #0f1417;\n+}\n\\ No newline at end of file"},{"sha":"da7bdf8ab9778929077e784f01429fb47f840f9f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts.css","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/* source-sans-pro-300 - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: normal;\n+  font-weight: 300;\n+  src: local('Source Sans Pro Light'), local('SourceSansPro-Light'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-300italic - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: italic;\n+  font-weight: 300;\n+  src: local('Source Sans Pro Light Italic'), local('SourceSansPro-LightItalic'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-regular - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: normal;\n+  font-weight: 400;\n+  src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-italic - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: italic;\n+  font-weight: 400;\n+  src: local('Source Sans Pro Italic'), local('SourceSansPro-Italic'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-600 - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: normal;\n+  font-weight: 600;\n+  src: local('Source Sans Pro SemiBold'), local('SourceSansPro-SemiBold'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-600italic - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: italic;\n+  font-weight: 600;\n+  src: local('Source Sans Pro SemiBold Italic'), local('SourceSansPro-SemiBoldItalic'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+\n+/* source-sans-pro-700 - latin-ext_cyrillic_latin_cyrillic-ext */\n+@font-face {\n+  font-family: 'Source Sans Pro';\n+  font-style: normal;\n+  font-weight: 700;\n+  src: local('Source Sans Pro Bold'), local('SourceSansPro-Bold'),\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n+    url('./fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n+}\n+"},{"sha":"2132b5e2ad21e14896ec168ddd99035b05d48bc7","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"943f826f11c84b30c0918d045cfca66ec64b52db","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"aa25cd32c3e63b6b57395ef96129f329f796a08f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"441997fceeec2083aa8a9f8405a54ffab860871a","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"24d28240ab6f2599574ff57433eba3933112e67f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"9ec7d257b194d4efd4c06cbd56ccffb37f048e92","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"ce5a1cccaeb3442525fdf948fbcf2108982046f4","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"7ed2f82eaad288f8bbb66f86b9906f13acdaedca","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"9fbfe68ce855d8cbb32eb392fc22f8707ab91759","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"096dcb150e9589c39c239199741c97a213097b9c","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"c1cf1ea7861a760db5b516c1c889d1d7a1f66d5a","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"ff006be7822524e04919e0e7233574f3d85e01b7","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"e8a1ac774e4c4e932070d0b23a112535c88810c5","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"1b0bc4683bddcb51584a6ea942372d634cfa9bbf","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"575df6626cbd3d3699f45f949112f40f30694be0","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/login.css","status":"added","additions":142,"deletions":0,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+body, html {\n+  height: 100% !important;\n+  background-repeat: no-repeat;\n+  background-image: linear-gradient(rgb(104, 145, 162), #00a65a);\n+}\n+\n+.card-container.card {\n+  width: 350px;\n+  padding: 40px 40px;\n+}\n+\n+.btn {\n+  font-weight: 700;\n+  height: 36px;\n+  -moz-user-select: none;\n+  -webkit-user-select: none;\n+  user-select: none;\n+  cursor: default;\n+}\n+\n+/*\n+ * Card component\n+ */\n+.card {\n+  background-color: #F7F7F7;\n+  /* just in case there no content*/\n+  padding: 20px 25px 30px;\n+  margin: 0 auto 25px;\n+  margin-top: 50px;\n+  /* shadows and rounded borders */\n+  -moz-border-radius: 2px;\n+  -webkit-border-radius: 2px;\n+  border-radius: 2px;\n+  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+}\n+\n+.login-logo {\n+  width: 200px;\n+  margin: 0 auto 10px;\n+  display: block;\n+}\n+\n+/*\n+ * Form styles\n+ */\n+.profile-name-card {\n+  font-size: 16px;\n+  font-weight: bold;\n+  text-align: center;\n+  margin: 10px 0 0;\n+  min-height: 1em;\n+}\n+\n+.form-signin #inputPassword,\n+.form-signin #inputPassword {\n+  direction: ltr;\n+  height: 44px;\n+  font-size: 16px;\n+}\n+\n+.form-signin input[type=password],\n+.form-signin input[type=text],\n+.form-signin button {\n+  width: 100%;\n+  display: block;\n+  margin-bottom: 10px;\n+  z-index: 1;\n+  position: relative;\n+  -moz-box-sizing: border-box;\n+  -webkit-box-sizing: border-box;\n+  box-sizing: border-box;\n+}\n+\n+.form-signin .form-control:focus {\n+  border-color: rgb(104, 145, 162);\n+  outline: 0;\n+  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n+  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n+}\n+\n+.btn.btn-signin {\n+  background-color: rgb(104, 145, 162);\n+  padding: 0px;\n+  font-weight: 700;\n+  font-size: 14px;\n+  height: 36px;\n+  -moz-border-radius: 3px;\n+  -webkit-border-radius: 3px;\n+  border-radius: 3px;\n+  border: none;\n+  -o-transition: all 0.218s;\n+  -moz-transition: all 0.218s;\n+  -webkit-transition: all 0.218s;\n+  transition: all 0.218s;\n+}\n+\n+.btn.btn-signin:hover,\n+.btn.btn-signin:active,\n+.btn.btn-signin:focus {\n+  background-color: #00a65a;\n+}\n+\n+.btn.btn-sso {\n+  padding: 0px;\n+  font-weight: 700;\n+  font-size: 14px;\n+  height: 36px;\n+  -moz-border-radius: 3px;\n+  -webkit-border-radius: 3px;\n+  border-radius: 3px;\n+  border: none;\n+  -o-transition: all 0.218s;\n+  -moz-transition: all 0.218s;\n+  -webkit-transition: all 0.218s;\n+  transition: all 0.218s;\n+}\n+\n+.btn.btn-sso:hover,\n+.btn.btn-sso:active,\n+.btn.btn-sso:focus {\n+  background-color: #00a65a;\n+}"},{"sha":"c2dcf2c5539cd81634608f769fbc251b4d3d9e12","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/syncopeEnduser.css","status":"added","additions":1164,"deletions":0,"changes":1164,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeEnduser.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeEnduser.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeEnduser.css?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,1164 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+pre {\n+  white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n+  white-space: -pre-wrap; /* Opera */\n+  white-space: -o-pre-wrap; /* Opera */\n+  white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n+  word-wrap: break-word; /* IE 5.5+ */\n+}\n+\n+/* Absolute Center Spinner */\n+#veil {\n+  display:none;\n+  position: fixed;\n+  z-index:99999;\n+  height: 2em;\n+  width: 2em;\n+  overflow: show;\n+  margin: auto;\n+  top: 0;\n+  left: 0;\n+  bottom: 0;\n+  right: 0;\n+}\n+\n+/* Transparent Overlay */\n+#veil:before {\n+  content: '';\n+  display: block;\n+  position: fixed;\n+  top: 0;\n+  left: 0;\n+  width: 100%;\n+  height: 100%;\n+  background-color: rgba(0,0,0,0.3);\n+}\n+\n+/* :not(:required) hides these rules from IE9 and below */\n+#veil:not(:required) {\n+  /* hide \"loading...\" text */\n+  font: 0/0 a;\n+  color: transparent;\n+  text-shadow: none;\n+  background-color: transparent;\n+  border: 0;\n+}\n+\n+#veil:not(:required):after {\n+  content: '';\n+  display: block;\n+  font-size: 10px;\n+  width: 1em;\n+  height: 1em;\n+  margin-top: -0.5em;\n+  -webkit-animation: spinner 2000ms infinite linear;\n+  -moz-animation: spinner 2000ms infinite linear;\n+  -ms-animation: spinner 2000ms infinite linear;\n+  -o-animation: spinner 2000ms infinite linear;\n+  animation: spinner 2000ms infinite linear;\n+  border-radius: 0.5em;\n+  -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;\n+  box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;\n+}\n+\n+/* Animation */\n+\n+@-webkit-keyframes spinner {\n+  0% {\n+    -webkit-transform: rotate(0deg);\n+    -moz-transform: rotate(0deg);\n+    -ms-transform: rotate(0deg);\n+    -o-transform: rotate(0deg);\n+    transform: rotate(0deg);\n+  }\n+  100% {\n+    -webkit-transform: rotate(360deg);\n+    -moz-transform: rotate(360deg);\n+    -ms-transform: rotate(360deg);\n+    -o-transform: rotate(360deg);\n+    transform: rotate(360deg);\n+  }\n+}\n+@-moz-keyframes spinner {\n+  0% {\n+    -webkit-transform: rotate(0deg);\n+    -moz-transform: rotate(0deg);\n+    -ms-transform: rotate(0deg);\n+    -o-transform: rotate(0deg);\n+    transform: rotate(0deg);\n+  }\n+  100% {\n+    -webkit-transform: rotate(360deg);\n+    -moz-transform: rotate(360deg);\n+    -ms-transform: rotate(360deg);\n+    -o-transform: rotate(360deg);\n+    transform: rotate(360deg);\n+  }\n+}\n+@-o-keyframes spinner {\n+  0% {\n+    -webkit-transform: rotate(0deg);\n+    -moz-transform: rotate(0deg);\n+    -ms-transform: rotate(0deg);\n+    -o-transform: rotate(0deg);\n+    transform: rotate(0deg);\n+  }\n+  100% {\n+    -webkit-transform: rotate(360deg);\n+    -moz-transform: rotate(360deg);\n+    -ms-transform: rotate(360deg);\n+    -o-transform: rotate(360deg);\n+    transform: rotate(360deg);\n+  }\n+}\n+@keyframes spinner {\n+  0% {\n+    -webkit-transform: rotate(0deg);\n+    -moz-transform: rotate(0deg);\n+    -ms-transform: rotate(0deg);\n+    -o-transform: rotate(0deg);\n+    transform: rotate(0deg);\n+  }\n+  100% {\n+    -webkit-transform: rotate(360deg);\n+    -moz-transform: rotate(360deg);\n+    -ms-transform: rotate(360deg);\n+    -o-transform: rotate(360deg);\n+    transform: rotate(360deg);\n+  }\n+}\n+\n+.block-sidebar {\n+  max-height: 100% !important; \n+  overflow: auto !important; \n+  padding-top: 90px !important; \n+  padding-bottom: 50px !important; \n+  position: fixed !important;\n+  width: 245px !important;\n+}\n+\n+.inner-control-sidebar {\n+  position: fixed; \n+  height: auto;\n+}\n+\n+.content-margin-layout {\n+  margin: 0px 230px 0px 0px !important;\n+  padding: 20px !important;\n+}\n+\n+.admin-content-page {\n+  padding: 20px;\n+  background: #ecf0f5\n+}\n+\n+.realms {\n+  min-height: 554px\n+}\n+\n+.realm-header {\n+  clear: both;\n+  display:block;\n+  display: inline-table;\n+  margin: 0 0 10px;\n+  line-height: 25px;\n+}\n+\n+.realm-label {\n+  float: left;\n+  font-size: 16px;\n+}\n+\n+.realm-label label {\n+  font-weight: 600 !important;\n+}\n+\n+.realm-choice {\n+  right: 0px;\n+  position: absolute;\n+}\n+\n+.realm-header .dropdown-menu li a {\n+  text-align: left !important;\n+  white-space: pre !important;\n+  line-height: 7px;\n+}\n+\n+.block-header {\n+  position: fixed !important;\n+  width: 100% !important;\n+  top: 0 !important;\n+}\n+\n+.block-footer {\n+  position: fixed !important;\n+  width: 100% !important;\n+  bottom: 0px !important;\n+}\n+\n+.logo-pos {\n+  padding-top: 4px !important;\n+  overflow: visible !important;\n+}\n+\n+.angle {\n+  border: medium none !important;\n+  cursor: pointer;\n+  display: inline-table !important;\n+  float: right;\n+  height: 30px;\n+  overflow: hidden;\n+  position: relative !important;\n+  right: 0;\n+  top: -30px;\n+  width: 25%;\n+  z-index: 3;\n+}\n+\n+.main-header .logo {\n+  height: 55px !important;\n+}\n+\n+.w_caption h3 {\n+  font-size: 16px;\n+}\n+\n+div.wicket-modal div.w_content_3 {\n+  border: 1px solid #eee;\n+  border-radius: 20px;\n+  padding: 5px;\n+}\n+\n+.tab-content {\n+  margin-bottom: 10px;\n+  margin-top: 5px;\n+  position: relative;\n+  overflow-x: hidden;\n+  overflow-y: auto;\n+  padding: 20px 20px 5px 20px;\n+}\n+\n+.modal-body .tab-content .information {\n+  position: relative !important;\n+}\n+\n+.scrollable-tab-content {\n+  overflow-y: auto;\n+  max-height: 480px;\n+}\n+\n+.inner-scrollable-tab-content {\n+  height: 430px;\n+  margin-top: 20px;\n+  overflow-x: hidden;\n+  overflow-y: auto;\n+}\n+\n+a.help {\n+  position: relative;\n+  display: inline;\n+  text-decoration: none;\n+}\n+\n+a.help span {\n+  position: absolute;\n+  width:19em;\n+  color: #000000;\n+  background: whitesmoke;\n+  visibility: hidden;\n+  border-radius: 0px;\n+  padding: 3px;\n+}\n+\n+a.help span:after {\n+  position: absolute;\n+  top: 50%;\n+  left: 100%;\n+  margin-top: -8px;\n+  width: 0;\n+  height: 0;\n+}\n+\n+a.help span {\n+  visibility: visible;\n+  opacity: none;\n+  right: 100%;\n+  top: 50%;\n+  margin-right: 4px;\n+  margin-top: -11px;\n+  border: 1px solid black;\n+  z-index: 1000000;\n+}\n+\n+a.help span a {\n+  color: #463;\n+  text-decoration: none;\n+}\n+\n+.modal-open .modal {\n+  overflow: hidden;\n+}\n+\n+.modal-body {\n+  max-height: 550px;\n+  overflow-y: auto;\n+  overflow-x: hidden;\n+}\n+\n+.modal {\n+  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\n+  z-index: 7000 !important;\n+}\n+\n+.wizard-step-title {\n+  font-size: 18px !important;\n+  font-weight: normal !important;\n+  margin-bottom: 10px !important;\n+}\n+\n+div.wizard-view div.wizard-view{\n+  max-height: 380px;\n+  height: 380px;\n+  overflow-y: auto;\n+  overflow-x: hidden;\n+  padding: 50px 20px 50px 20px;\n+}\n+\n+.wizard-view .wizard-form{\n+  max-height: 450px;\n+  height: 450px;\n+}\n+\n+.modal-body .tab-content .wizard-view {\n+  max-height: 330px !important;\n+  height: 330px !important;\n+}\n+\n+.modal-body .tab-content .wizard-form {\n+  max-height: 400px !important;\n+  height: 400px !important;\n+}\n+\n+.wizard-view > div {\n+  display: block;\n+  height: 95%;\n+  position: relative;\n+}\n+\n+.wizard-view {\n+  padding: 0px 5px;\n+}\n+\n+.wizard-form {\n+  height:480px;\n+  position: relative;\n+}\n+\n+.wizard-form > div {\n+  max-height: 440px;\n+  height: 440px;\n+  overflow-y: auto;\n+  overflow-x: hidden;\n+  padding: 0px;\n+}\n+\n+.box-body .wizard-form {\n+  height:400px !important;\n+}\n+\n+.box-body .wizard-form > div {\n+  height: 360px !important;\n+}\n+\n+div.modal-body div.box-body div.wizard-buttons {\n+  bottom: 30px;\n+}\n+\n+.wizard-buttons {\n+  padding: 10px 0px 5px 0px;\n+  position: absolute;\n+  bottom: 4px;\n+  width: 100%;\n+}\n+\n+.wizard-buttons div.pull-left {\n+  position: absolute;\n+  left: 15px;\n+}\n+\n+.wizard-buttons div.pull-right {\n+  position: absolute;\n+  right: 15px;\n+}\n+\n+.wizard-step-title {\n+  font-weight: bold; \n+  font-size:medium;\n+}\n+\n+div.realms div.summarize {\n+  margin: 50px 100px;\n+}\n+\n+.navbar a {\n+  height: 55px\n+}\n+\n+.navbar .footer a {\n+  height: 34px\n+}\n+\n+.navbar .user-footer a {\n+  height: 34px\n+}\n+\n+span.overridable div.checkbox {\n+  float: right; \n+  margin: 0px; \n+  padding: 0px;\n+}\n+\n+span.overridable div.checkbox label div div.toggle-group label {\n+  padding-left: 7px;\n+}\n+\n+div#outer.modal-lg, div#utilityModal.modal-lg, section#notifications .modal-lg {\n+  max-width: 1200px;\n+  width: 97%;\n+}\n+\n+.details {\n+  max-height: 401px;\n+  overflow-x: hidden;\n+  overflow-y: auto;\n+  display: block\n+}\n+\n+th.checkGroupColumn {\n+  width: 20px;\n+  text-align: center;\n+  padding-right: 8px !important;\n+}\n+\n+td.checkGroupColumn {\n+  text-align: center;\n+}\n+\n+/**\n+  BEGIN - Style for Information panel\n+*/\n+div.information{\n+  margin: 30px 0px 0px 0px; \n+  border: 1px solid #EEE; \n+  font-size: 10px;\n+  color: #888;\n+  display: inline-table; \n+  width: 100%; \n+  clear: both; \n+  float:none;\n+  position: absolute;\n+  bottom: -90px;\n+  left: 0px;\n+  padding: 2px;\n+}\n+\n+div.infolabel{\n+  margin-left: 5px; \n+  float:left; \n+  width: 150px;\n+  font-weight: bold;\n+  color: #888;\n+}\n+\n+div.infoleft{\n+  float:left; \n+  display: inline-table; \n+  width: 50%\n+}\n+\n+div.inforight{ \n+  display: inline-table; \n+  width: 50%\n+}\n+\n+div.inforow{\n+  display: inline-table;\n+  width: 100%\n+}\n+\n+div.wrap{\n+  word-wrap: break-word; \n+  width: 550px; \n+  margin-left: 155px;\n+}\n+/**\n+END - Style for Information panel\n+*/\n+\n+#ownership div.toggle {\n+  width: 110px !important;\n+}\n+\n+div.searchResult{\n+  padding-top: 30px;\n+  display: block;\n+  clear: both;\n+}\n+\n+.logs .input-group-addon .input-group-btn {\n+  width: 130px !important;\n+}\n+\n+.logs .col_width {\n+  width: 90% !important;\n+}\n+\n+.logs .box-header {\n+  display: none !important;\n+}\n+\n+.logs .box{\n+  border-top: 0px !important;\n+}\n+\n+*::after, *::before {\n+  box-sizing: border-box;\n+}\n+\n+.wicket-aa-container {\n+  border-color: #eee;\n+  box-shadow: none;\n+  background-clip: padding-box;\n+  background-color: #fff;\n+  border: 1px solid rgba(0, 0, 0, 0.15);\n+  border-radius: 4px;\n+  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.176);\n+  float: left;\n+  font-size: 14px;\n+  min-width: 160px;\n+  max-height: 250px;\n+  z-index: 7001 !important;\n+}\n+\n+div.wicket-aa ul {\n+  list-style: none;\n+  padding-left: 15px;\n+}\n+/**\n+START - startAt\n+*/\n+div#startAt {\n+  background-color: rgba(98, 98, 98, 0.98) !important;\n+  color: #CCC;\n+  right: 5px !important;\n+  top: 100px !important;\n+  min-width: 450px;\n+  min-height: 130px !important;\n+  z-index: 6000 !important;\n+}\n+\n+div#itemTransformersTogglePanel {\n+  min-width: 1000px;\n+}\n+\n+div#startAtContainer {\n+  padding: 15px;\n+}\n+\n+div#startAtContainer input {\n+  background-color: rgba(200, 200, 200, 0.60) !important;\n+}\n+/**\n+END - startAt\n+*/\n+\n+/**\n+START - Notifications\n+*/\n+/*Temporany fix diagonal stacking*/\n+.k-popup.k-notification {\n+  box-shadow: none;\n+}\n+\n+.k-notification-error.k-group {\n+  background: rgba(100% , 0% , 0% , .7);\n+  color: red;\n+}\n+\n+.errorNotification {\n+  width: 300px;\n+  height: 100px;\n+  vertical-align: middle;\n+  display: table-cell;\n+}\n+\n+.errorNotification #level {\n+  float: left; \n+  padding-left: 10px; \n+  font-size: 2em; \n+  width: 2%;\n+}\n+\n+.errorNotification #message {\n+  float: right; \n+  padding-left: 0px; \n+  width:85%\n+}\n+\n+.k-notification-success.k-group {\n+  background: rgba(0% , 60% , 0% , .7);\n+  color: #fff;\n+}\n+\n+.successNotification {\n+  width: 300px;\n+  height: 100px;\n+  vertical-align: middle;\n+  display: table-cell;\n+}\n+\n+.successNotification #level {\n+  float: left; \n+  padding-left: 10px; \n+  font-size: 2em; \n+  width: 2%;\n+}\n+\n+.successNotification #message {\n+  float: right; \n+  padding-left: 0px; \n+  width:85%\n+}\n+/**\n+EN - Notifications\n+*/\n+\n+/**\n+START - Actions\n+*/\n+.actions > li > a {\n+  padding: 5px 0px 5px 0px !important;\n+}\n+\n+div.listview-actions a {\n+  float:left;\n+  padding: 5px 0px 5px 0px !important;\n+}\n+\n+.action a.btn {\n+  padding: 0px;\n+}\n+\n+.btn-circle, .circular-actions a {\n+  border-radius: 15px !important;\n+  font-size: 12px;\n+  height: 30px;\n+  line-height: 1.42857;\n+  padding: 6px 0;\n+  text-align: center;\n+  width: 30px;\n+}\n+\n+.circular-actions a.btn {\n+  background-color: #3c8dbc;\n+  border-color: #367fa9;\n+  color: #fff;\n+}\n+\n+.btn-circle i, .circular-actions a i {\n+  margin: 0px;\n+}\n+\n+.multipanel-btn-minus {\n+  padding: 0px 0px 0px 6px;\n+  border: 0 none !important;\n+}\n+\n+.multipanel-btn-plus {\n+  padding: 15px 0px 8px 6px;\n+  border: 0 none !important;\n+}\n+\n+.multipanel-box {\n+  padding: 5px;\n+  display: inline-table;\n+  margin: 0px;\n+}\n+/**\n+END - Actions\n+*/\n+\n+/**\n+START - DataTable\n+*/\n+.dataTable {\n+  clear: both;\n+}\n+/**\n+END - DataTable\n+*/\n+\n+/**\n+START - Result page\n+*/\n+.attribute {\n+  padding: 0px 4px 0px 4px; \n+}\n+\n+.left {\n+  float:left; \n+  width: 50%; \n+}\n+\n+.right {\n+  float:right; \n+  width: 50%; \n+}\n+\n+span.highlight .attribute label {\n+  color : red;\n+}\n+/**\n+END - Result page\n+*/\n+\n+.navbar-nav > .user-menu > .dropdown-menu > li.user-header {\n+  height: auto !important;\n+  padding: 10px;\n+  text-align: center;\n+}\n+\n+.nav-tabs-custom > .nav-tabs > li.active {\n+  border-top-color: #d2d6de !important;\n+}\n+\n+.code-deletion {\n+  background-color: #ffdddd;\n+  border-color: #f1c0c0;\n+}\n+\n+.code-addition {\n+  background-color: #dbffdb;\n+  border-color: #c1e9c1;\n+}\n+\n+/**\n+START - AjaxDateTimePicker\n+*/\n+.input-auto-width {\n+  width: auto !important;\n+}\n+\n+.icon-top-position {\n+  top: 5px !important;\n+}\n+\n+/**\n+END - AjaxDateTimePicker\n+*/\n+\n+/**\n+START - Search - AjaxDateTimePicker\n+*/\n+.searchBox .col-xs-12{\n+  padding-left: 0px !important;\n+  padding-right: 0px !important;\n+}\n+\n+.clause{\n+  display: block;\n+  line-height: 34px;\n+  width: 100%;\n+}\n+\n+.clause .operator{\n+  width: 65px !important;\n+}\n+\n+.clause .operator .checkbox{\n+  margin: 0px !important;\n+}\n+\n+.clause .field {\n+  line-height: 34px;\n+  float: left;\n+  padding: 0 3px 0px 0px;\n+  display: inline-block !important;\n+}\n+\n+.clause .type{\n+  width: 170px !important;\n+}\n+\n+.clause .type button{\n+  width: 170px !important;\n+}\n+\n+.clause .property{\n+  width: 300px;\n+}\n+\n+.clause .property button{\n+  width: 300px;\n+}\n+\n+.clause .comparator{\n+  width: 100px;\n+}\n+\n+.clause .comparator button{\n+  width: 100px !important;\n+}\n+\n+.clause .value{\n+  width: 220px;\n+}\n+\n+.clause .date{\n+  width: 160px;\n+}\n+\n+.clause .hours{\n+  width: 45px;\n+}\n+\n+.clause .separator{\n+  width: 20px;\n+  padding-left: 12px;\n+}\n+\n+.clause .action{\n+  float: left;\n+  padding: 0px 7px 0px;\n+}\n+\n+.searchBox .input-group-addon:last-child{\n+  border: 1px solid #ccc !important;\n+}\n+\n+.searchBox .input-group{\n+  margin-top: 1px;\n+}\n+\n+.custom-autocomplete-box li.selected {\n+  background-color: #eee;\n+}\n+\n+/**\n+END - Search - AjaxDateTimePicker\n+*/\n+/**\n+START - Parameters Details\n+*/\n+div#parametersForm{\n+  min-height: 220px;\n+}\n+/**\n+END - Parameters Details\n+*/\n+\n+li.todoitem a {\n+  cursor: default;\n+}\n+\n+.popover{\n+    max-width: 100%;\n+}\n+\n+#popover:hover {\n+  cursor: pointer;\n+}\n+\n+.popover-content {\n+  color: black;\n+}\n+\n+.form-palette {\n+  display: inline-block;\n+  width: 119%;\n+}\n+\n+.form-group-inline {\n+  display: inline-table;\n+  width: 100%;\n+}\n+\n+div#userFilter #title{\n+  margin: 10px 0 0 8px;\n+  font-weight: bold;\n+}\n+\n+div#userFilter  #warning{\n+  margin: 1px 0 5px 8px;\n+  color: #e00000;\n+  font-size: 9px;\n+}\n+\n+div#userFilter  #check {\n+  margin: 1px 0 5px 8px;\n+}\n+\n+.keyColumn {\n+  width: 20px;\n+}\n+\n+/**\n+START - Alert widget onside menu\n+*/\n+div.alert-widget > a > .label {\n+  font-size: 9px;\n+  line-height: 0.9;\n+  padding: 2px 3px;\n+  position: absolute;\n+  margin-left: 10px;\n+  text-align: center;\n+  top: 0px;\n+}\n+\n+div.alert-widget > a {\n+  display: block;\n+  position: relative;\n+}\n+\n+div.alert-widget > a > i {\n+  position: absolute;\n+  top: 9px;\n+}\n+\n+div.alert-widget{\n+  text-align: center;\n+  vertical-align: middle;\n+  padding-right: 20px;\n+}\n+\n+div.alert-widget .dropdown-menu > li.header {\n+  background-color: #ffffff;\n+  border-bottom: 1px solid #f4f4f4;\n+  border-radius: 4px 4px 0 0;\n+  color: #444444;\n+  font-size: 14px;\n+  padding: 7px 10px;\n+}\n+\n+div.alert-widget .dropdown-menu > li.footer > a {\n+  background-color: #fff;\n+  border-radius: 0 0 4px 4px;\n+  color: #444 !important;\n+  font-size: 12px;\n+  padding: 7px 10px;\n+  text-align: center;\n+}\n+\n+div.alert-widget .dropdown-menu > li .menu {\n+  list-style: outside none none;\n+  padding: 10px;\n+}\n+/**\n+END - Alert widget onside menu\n+*/\n+\n+/**\n+START - Transformers toggle panel\n+*/\n+div.transformersTogglePanel {\n+  background-color: rgba(140, 140, 140, 0.99) !important;\n+  width: 1000px !important;\n+}\n+\n+div.transformersContainer {\n+  padding: 15px;\n+}\n+\n+div.transformersContainer input {\n+  background-color: rgba(200, 200, 200, 0.60) !important;\n+}\n+\n+div.transformersContainer #footer {\n+  clear: both;\n+  display: block;\n+  text-align: right;\n+  margin-top: 10px;\n+}\n+\n+div.transformersContainer #body {\n+  clear: both;\n+  display: block;\n+}\n+\n+div.itemTransformersContainer #body select {\n+  border: 1px solid #ccc !important;\n+  background: rgba(240, 240, 240, 0.95) !important\n+}\n+\n+div.itemTransformersContainer #body a {\n+  color: #ccc !important;\n+  cursor: pointer !important;\n+}\n+\n+div#jexlTransformersTogglePanel {\n+  right: 400px;\n+}\n+/**\n+END - Transformers toggle panel\n+*/\n+\n+/**\n+START - CRONTAB\n+*/\n+div#schedule input, div#schedule fieldset {\n+  width: 50px;\n+  float: left\n+}\n+\n+div#templates {\n+  padding-top: 30px;\n+  clear: both;\n+}\n+/**\n+END - CRONTAB\n+*/\n+\n+/**\n+START - EVENTS\n+*/\n+.events {\n+  display: table-row;\n+  width: 990px;\n+}\n+\n+.selectedEvents {\n+  display: inline-block;\n+  height: 100px;\n+  margin: 10px 10px 0 10px;\n+  overflow-y: auto;\n+}\n+\n+.eventSelection {\n+  display: inline-table;\n+  float: right;\n+  width: 380px;\n+  min-width: 530px;\n+}\n+\n+.eventSelection div#value {\n+  height: auto;\n+  overflow: hidden;\n+}\n+\n+.eventSelection div#value div#custom {\n+  width: auto;\n+  overflow: hidden;\n+}\n+\n+.eventSelection div#value div#customActions {\n+  width: 85px;\n+  float: right;\n+}\n+\n+div#selectionContainer select {\n+  width: 585px;\n+  min-width: 585px;\n+}\n+/**\n+END - EVENTS\n+*/\n+\n+fieldset.input-group {\n+  width: 100%;\n+}\n+\n+div.modal-content > div.modal-header {\n+  background-color: #f0f0f0;\n+  height: 64px;\n+}\n+\n+div.modal-content > div.modal-footer {\n+  background-color: #f0f0f0;\n+  height: 64px;\n+}\n+\n+.modal-body .box-body div.background-footer {\n+  display: none !important;\n+}\n+\n+div.background-footer {\n+  background-color: #f0f0f0;\n+  display: block;\n+  height: 64px;\n+  margin-bottom: -15px;\n+  margin-left: -30px;\n+  margin-top: -25px;\n+  width: 1300px;\n+}\n+\n+.logviewer-btn {\n+  padding: 0px 16px 20px 0px;\n+  float: right;\n+}\n+\n+div#editUserChangePassword > label {\n+  color: #e00000;\n+}\n+\n+div > li {\n+  list-style-type: none; \n+}\n+\n+th ul.menu, div#inline-actions ul.menu, div#tablehandling ul.menu, div.listview-actions ul.menu {\n+  list-style-type: none;  \n+  margin: 0;\n+  padding: 0;\n+}\n+\n+div#tablehandling ul.menu{\n+  float: right;\n+}\n+\n+th ul.menu li, div#inline-actions ul.menu li, div#tablehandling ul.menu li, div.listview-actions ul.menu li {\n+  display: inline-block;\n+}\n+\n+th ul.menu li a, div#inline-actions ul.menu li a, div.listview-actions ul.menu li a, div#tablehandling ul.menu li a {\n+  margin-left: 5px;\n+  display: inline-block !important;\n+}\n+\n+ul.menu li a {\n+  display: block;\n+  cursor: pointer !important;\n+}\n+\n+ul.menu i {\n+  width: 35px;\n+}\n+\n+div#inline-actions ul.menu i, div#tablehandling ul.menu i {\n+  width: auto !important;\n+}\n+\n+.toggle-menu ul.menu li a {\n+  padding: 0px;\n+  text-align: left;\n+}\n+\n+div#tablehandling ul.menu li a {\n+  padding: 0px !important;\n+}"},{"sha":"c57b86c0951e86c8fcc635c74d51bc9e5f4bfd47","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/img/logo-green.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo-green.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo-green.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo-green.png?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"f05105e2cc3bf3989c803e326b86874832b13b54","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/img/logo.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Flogo.png?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775"},{"sha":"b49ceca2bb2e310c0d3cbf6caeb47b79c03b6bd5","filename":"client/idrepo/enduser/src/main/resources/MIMETypes.json","status":"added","additions":1289,"deletions":0,"changes":1289,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,1289 @@\n+[\n+  {\n+    \"name\": \"application/acad\"\n+  },\n+  {\n+    \"name\": \"application/arj\"\n+  },\n+  {\n+    \"name\": \"application/json\",\n+    \"extension\": \"json\"\n+  },\n+  {\n+    \"name\": \"application/base64\"\n+  },\n+  {\n+    \"name\": \"application/binhex\"\n+  },\n+  {\n+    \"name\": \"application/binhex4\"\n+  },\n+  {\n+    \"name\": \"application/book\"\n+  },\n+  {\n+    \"name\": \"application/cdf\"\n+  },\n+  {\n+    \"name\": \"application/clariscad\"\n+  },\n+  {\n+    \"name\": \"application/commonground\"\n+  },\n+  {\n+    \"name\": \"application/drafting\"\n+  },\n+  {\n+    \"name\": \"application/dsptype\"\n+  },\n+  {\n+    \"name\": \"application/dxf\"\n+  },\n+  {\n+    \"name\": \"application/ecmascript\"\n+  },\n+  {\n+    \"name\": \"application/envoy\"\n+  },\n+  {\n+    \"name\": \"application/excel\"\n+  },\n+  {\n+    \"name\": \"application/fractals\"\n+  },\n+  {\n+    \"name\": \"application/freeloader\"\n+  },\n+  {\n+    \"name\": \"application/futuresplash\"\n+  },\n+  {\n+    \"name\": \"application/gnutar\"\n+  },\n+  {\n+    \"name\": \"application/groupwise\"\n+  },\n+  {\n+    \"name\": \"application/hlp\"\n+  },\n+  {\n+    \"name\": \"application/hta\"\n+  },\n+  {\n+    \"name\": \"application/i-deas\"\n+  },\n+  {\n+    \"name\": \"application/iges\"\n+  },\n+  {\n+    \"name\": \"application/inf\"\n+  },\n+  {\n+    \"name\": \"application/java\"\n+  },\n+  {\n+    \"name\": \"application/java-byte-code\"\n+  },\n+  {\n+    \"name\": \"application/javascript\"\n+  },\n+  {\n+    \"name\": \"application/lha\"\n+  },\n+  {\n+    \"name\": \"application/lzx\"\n+  },\n+  {\n+    \"name\": \"application/macbinary\"\n+  },\n+  {\n+    \"name\": \"application/mac-binary\"\n+  },\n+  {\n+    \"name\": \"application/mac-binhex\"\n+  },\n+  {\n+    \"name\": \"application/mac-binhex40\"\n+  },\n+  {\n+    \"name\": \"application/mac-compactpro\"\n+  },\n+  {\n+    \"name\": \"application/marc\"\n+  },\n+  {\n+    \"name\": \"application/mbedlet\"\n+  },\n+  {\n+    \"name\": \"application/mcad\"\n+  },\n+  {\n+    \"name\": \"application/mime\"\n+  },\n+  {\n+    \"name\": \"application/mspowerpoint\"\n+  },\n+  {\n+    \"name\": \"application/msword\"\n+  },\n+  {\n+    \"name\": \"application/mswrite\"\n+  },\n+  {\n+    \"name\": \"application/netmc\"\n+  },\n+  {\n+    \"name\": \"application/octet-stream\"\n+  },\n+  {\n+    \"name\": \"application/oda\"\n+  },\n+  {\n+    \"name\": \"application/pdf\"\n+  },\n+  {\n+    \"name\": \"application/pkcs10\"\n+  },\n+  {\n+    \"name\": \"application/pkcs-12\"\n+  },\n+  {\n+    \"name\": \"application/pkcs7-mime\"\n+  },\n+  {\n+    \"name\": \"application/pkcs7-signature\"\n+  },\n+  {\n+    \"name\": \"application/pkcs-crl\"\n+  },\n+  {\n+    \"name\": \"application/pkix-cert\"\n+  },\n+  {\n+    \"name\": \"application/pkix-crl\"\n+  },\n+  {\n+    \"name\": \"application/plain\"\n+  },\n+  {\n+    \"name\": \"application/postscript\"\n+  },\n+  {\n+    \"name\": \"application/powerpoint\"\n+  },\n+  {\n+    \"name\": \"application/pro_eng\"\n+  },\n+  {\n+    \"name\": \"application/ringing-tones\"\n+  },\n+  {\n+    \"name\": \"application/rtf\"\n+  },\n+  {\n+    \"name\": \"application/sdp\"\n+  },\n+  {\n+    \"name\": \"application/sea\"\n+  },\n+  {\n+    \"name\": \"application/set\"\n+  },\n+  {\n+    \"name\": \"application/sla\"\n+  },\n+  {\n+    \"name\": \"application/smil\"\n+  },\n+  {\n+    \"name\": \"application/solids\"\n+  },\n+  {\n+    \"name\": \"application/sounder\"\n+  },\n+  {\n+    \"name\": \"application/step\"\n+  },\n+  {\n+    \"name\": \"application/streamingmedia\"\n+  },\n+  {\n+    \"name\": \"application/toolbook\"\n+  },\n+  {\n+    \"name\": \"application/vda\"\n+  },\n+  {\n+    \"name\": \"application/vnd.fdf\"\n+  },\n+  {\n+    \"name\": \"application/vnd.hp-hpgl\"\n+  },\n+  {\n+    \"name\": \"application/vnd.hp-pcl\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-excel\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-pki.certstore\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-pki.pko\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-pki.seccat\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-pki.stl\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-powerpoint\"\n+  },\n+  {\n+    \"name\": \"application/vnd.ms-project\"\n+  },\n+  {\n+    \"name\": \"application/vnd.nokia.configuration-message\"\n+  },\n+  {\n+    \"name\": \"application/vnd.nokia.ringing-tone\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.chart\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.database\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.formula\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.graphics\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.image\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.presentation\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.spreadsheet\"\n+  },\n+  {\n+    \"name\": \"application/vnd.oasis.opendocument.text\"\n+  },\n+  {\n+    \"name\": \"application/vnd.rn-realmedia\"\n+  },\n+  {\n+    \"name\": \"application/vnd.rn-realplayer\"\n+  },\n+  {\n+    \"name\": \"application/vnd.wap.wmlc\"\n+  },\n+  {\n+    \"name\": \"application/vnd.wap.wmlscriptc\"\n+  },\n+  {\n+    \"name\": \"application/vnd.xara\"\n+  },\n+  {\n+    \"name\": \"application/vocaltec-media-desc\"\n+  },\n+  {\n+    \"name\": \"application/vocaltec-media-file\"\n+  },\n+  {\n+    \"name\": \"application/wordperfect\"\n+  },\n+  {\n+    \"name\": \"application/wordperfect6.0\"\n+  },\n+  {\n+    \"name\": \"application/wordperfect6.1\"\n+  },\n+  {\n+    \"name\": \"application/x-123\"\n+  },\n+  {\n+    \"name\": \"application/x-aim\"\n+  },\n+  {\n+    \"name\": \"application/x-authorware-bin\"\n+  },\n+  {\n+    \"name\": \"application/x-authorware-map\"\n+  },\n+  {\n+    \"name\": \"application/x-authorware-seg\"\n+  },\n+  {\n+    \"name\": \"application/x-bcpio\"\n+  },\n+  {\n+    \"name\": \"application/x-binary\"\n+  },\n+  {\n+    \"name\": \"application/x-binhex40\"\n+  },\n+  {\n+    \"name\": \"application/x-bsh\"\n+  },\n+  {\n+    \"name\": \"application/x-bytecode.elisp (compiled elisp)\"\n+  },\n+  {\n+    \"name\": \"application/x-bytecode.python\"\n+  },\n+  {\n+    \"name\": \"application/x-bzip\"\n+  },\n+  {\n+    \"name\": \"application/x-bzip2\"\n+  },\n+  {\n+    \"name\": \"application/x-cdf\"\n+  },\n+  {\n+    \"name\": \"application/x-cdlink\"\n+  },\n+  {\n+    \"name\": \"application/x-chat\"\n+  },\n+  {\n+    \"name\": \"application/x-cmu-raster\"\n+  },\n+  {\n+    \"name\": \"application/x-cocoa\"\n+  },\n+  {\n+    \"name\": \"application/x-compactpro\"\n+  },\n+  {\n+    \"name\": \"application/x-compress\"\n+  },\n+  {\n+    \"name\": \"application/x-compressed\"\n+  },\n+  {\n+    \"name\": \"application/x-conference\"\n+  },\n+  {\n+    \"name\": \"application/x-cpio\"\n+  },\n+  {\n+    \"name\": \"application/x-cpt\"\n+  },\n+  {\n+    \"name\": \"application/x-csh\"\n+  },\n+  {\n+    \"name\": \"application/x-deepv\"\n+  },\n+  {\n+    \"name\": \"application/x-director\"\n+  },\n+  {\n+    \"name\": \"application/x-dvi\"\n+  },\n+  {\n+    \"name\": \"application/x-elc\"\n+  },\n+  {\n+    \"name\": \"application/x-envoy\"\n+  },\n+  {\n+    \"name\": \"application/x-esrehber\"\n+  },\n+  {\n+    \"name\": \"application/x-excel\"\n+  },\n+  {\n+    \"name\": \"application/x-frame\"\n+  },\n+  {\n+    \"name\": \"application/x-freelance\"\n+  },\n+  {\n+    \"name\": \"application/x-gsp\"\n+  },\n+  {\n+    \"name\": \"application/x-gss\"\n+  },\n+  {\n+    \"name\": \"application/x-gtar\"\n+  },\n+  {\n+    \"name\": \"application/x-gzip\"\n+  },\n+  {\n+    \"name\": \"application/x-hdf\"\n+  },\n+  {\n+    \"name\": \"application/x-helpfile\"\n+  },\n+  {\n+    \"name\": \"application/x-httpd-imap\"\n+  },\n+  {\n+    \"name\": \"application/x-ima\"\n+  },\n+  {\n+    \"name\": \"application/x-internett-signup\"\n+  },\n+  {\n+    \"name\": \"application/x-inventor\"\n+  },\n+  {\n+    \"name\": \"application/x-ip2\"\n+  },\n+  {\n+    \"name\": \"application/x-java-class\"\n+  },\n+  {\n+    \"name\": \"application/x-java-commerce\"\n+  },\n+  {\n+    \"name\": \"application/x-javascript\"\n+  },\n+  {\n+    \"name\": \"application/x-koan\"\n+  },\n+  {\n+    \"name\": \"application/x-ksh\"\n+  },\n+  {\n+    \"name\": \"application/x-latex\"\n+  },\n+  {\n+    \"name\": \"application/x-lha\"\n+  },\n+  {\n+    \"name\": \"application/x-lisp\"\n+  },\n+  {\n+    \"name\": \"application/x-livescreen\"\n+  },\n+  {\n+    \"name\": \"application/x-lotus\"\n+  },\n+  {\n+    \"name\": \"application/x-lotusscreencam\"\n+  },\n+  {\n+    \"name\": \"application/x-lzh\"\n+  },\n+  {\n+    \"name\": \"application/x-lzx\"\n+  },\n+  {\n+    \"name\": \"application/x-macbinary\"\n+  },\n+  {\n+    \"name\": \"application/x-mac-binhex40\"\n+  },\n+  {\n+    \"name\": \"application/x-magic-cap-package-1.0\"\n+  },\n+  {\n+    \"name\": \"application/x-mathcad\"\n+  },\n+  {\n+    \"name\": \"application/x-meme\"\n+  },\n+  {\n+    \"name\": \"application/x-midi\"\n+  },\n+  {\n+    \"name\": \"application/x-mif\"\n+  },\n+  {\n+    \"name\": \"application/x-mix-transfer\"\n+  },\n+  {\n+    \"name\": \"application/xml\"\n+  },\n+  {\n+    \"name\": \"application/x-mplayer2\"\n+  },\n+  {\n+    \"name\": \"application/x-msexcel\"\n+  },\n+  {\n+    \"name\": \"application/x-mspowerpoint\"\n+  },\n+  {\n+    \"name\": \"application/x-navi-animation\"\n+  },\n+  {\n+    \"name\": \"application/x-navidoc\"\n+  },\n+  {\n+    \"name\": \"application/x-navimap\"\n+  },\n+  {\n+    \"name\": \"application/x-navistyle\"\n+  },\n+  {\n+    \"name\": \"application/x-netcdf\"\n+  },\n+  {\n+    \"name\": \"application/x-newton-compatible-pkg\"\n+  },\n+  {\n+    \"name\": \"application/x-nokia-9000-communicator-add-on-software\"\n+  },\n+  {\n+    \"name\": \"application/x-omc\"\n+  },\n+  {\n+    \"name\": \"application/x-omcdatamaker\"\n+  },\n+  {\n+    \"name\": \"application/x-omcregerator\"\n+  },\n+  {\n+    \"name\": \"application/x-pagemaker\"\n+  },\n+  {\n+    \"name\": \"application/x-pcl\"\n+  },\n+  {\n+    \"name\": \"application/x-pixclscript\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs10\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs12\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs7-certificates\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs7-certreqresp\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs7-mime\"\n+  },\n+  {\n+    \"name\": \"application/x-pkcs7-signature\"\n+  },\n+  {\n+    \"name\": \"application/x-pointplus\"\n+  },\n+  {\n+    \"name\": \"application/x-portable-anymap\"\n+  },\n+  {\n+    \"name\": \"application/x-project\"\n+  },\n+  {\n+    \"name\": \"application/x-qpro\"\n+  },\n+  {\n+    \"name\": \"application/x-rtf\"\n+  },\n+  {\n+    \"name\": \"application/x-sdp\"\n+  },\n+  {\n+    \"name\": \"application/x-sea\"\n+  },\n+  {\n+    \"name\": \"application/x-seelogo\"\n+  },\n+  {\n+    \"name\": \"application/x-sh\"\n+  },\n+  {\n+    \"name\": \"application/x-shar\"\n+  },\n+  {\n+    \"name\": \"application/x-shockwave-flash\"\n+  },\n+  {\n+    \"name\": \"application/x-sit\"\n+  },\n+  {\n+    \"name\": \"application/x-sprite\"\n+  },\n+  {\n+    \"name\": \"application/x-stuffit\"\n+  },\n+  {\n+    \"name\": \"application/x-sv4cpio\"\n+  },\n+  {\n+    \"name\": \"application/x-sv4crc\"\n+  },\n+  {\n+    \"name\": \"application/x-tar\"\n+  },\n+  {\n+    \"name\": \"application/x-tbook\"\n+  },\n+  {\n+    \"name\": \"application/x-tcl\"\n+  },\n+  {\n+    \"name\": \"application/x-tex\"\n+  },\n+  {\n+    \"name\": \"application/x-texinfo\"\n+  },\n+  {\n+    \"name\": \"application/x-troff\"\n+  },\n+  {\n+    \"name\": \"application/x-troff-man\"\n+  },\n+  {\n+    \"name\": \"application/x-troff-me\"\n+  },\n+  {\n+    \"name\": \"application/x-troff-ms\"\n+  },\n+  {\n+    \"name\": \"application/x-troff-msvideo\"\n+  },\n+  {\n+    \"name\": \"application/x-ustar\"\n+  },\n+  {\n+    \"name\": \"application/x-visio\"\n+  },\n+  {\n+    \"name\": \"application/x-vnd.audioexplosion.mzz\"\n+  },\n+  {\n+    \"name\": \"application/x-vnd.ls-xpix\"\n+  },\n+  {\n+    \"name\": \"application/x-vrml\"\n+  },\n+  {\n+    \"name\": \"application/x-wais-source\"\n+  },\n+  {\n+    \"name\": \"application/x-winhelp\"\n+  },\n+  {\n+    \"name\": \"application/x-wintalk\"\n+  },\n+  {\n+    \"name\": \"application/x-world\"\n+  },\n+  {\n+    \"name\": \"application/x-wpwin\"\n+  },\n+  {\n+    \"name\": \"application/x-wri\"\n+  },\n+  {\n+    \"name\": \"application/x-x509-ca-cert\"\n+  },\n+  {\n+    \"name\": \"application/x-x509-user-cert\"\n+  },\n+  {\n+    \"name\": \"application/x-zip-compressed\"\n+  },\n+  {\n+    \"name\": \"application/zip\"\n+  },\n+  {\n+    \"name\": \"audio/aiff\"\n+  },\n+  {\n+    \"name\": \"audio/basic\"\n+  },\n+  {\n+    \"name\": \"audio/it\"\n+  },\n+  {\n+    \"name\": \"audio/make\"\n+  },\n+  {\n+    \"name\": \"audio/make.my.funk\"\n+  },\n+  {\n+    \"name\": \"audio/mid\"\n+  },\n+  {\n+    \"name\": \"audio/midi\"\n+  },\n+  {\n+    \"name\": \"audio/mod\"\n+  },\n+  {\n+    \"name\": \"audio/mpeg\"\n+  },\n+  {\n+    \"name\": \"audio/mpeg3\"\n+  },\n+  {\n+    \"name\": \"audio/nspaudio\"\n+  },\n+  {\n+    \"name\": \"audio/s3m\"\n+  },\n+  {\n+    \"name\": \"audio/tsp-audio\"\n+  },\n+  {\n+    \"name\": \"audio/tsplayer\"\n+  },\n+  {\n+    \"name\": \"audio/vnd.qcelp\"\n+  },\n+  {\n+    \"name\": \"audio/voc\"\n+  },\n+  {\n+    \"name\": \"audio/voxware\"\n+  },\n+  {\n+    \"name\": \"audio/wav\"\n+  },\n+  {\n+    \"name\": \"audio/x-adpcm\"\n+  },\n+  {\n+    \"name\": \"audio/x-aiff\"\n+  },\n+  {\n+    \"name\": \"audio/x-au\"\n+  },\n+  {\n+    \"name\": \"audio/x-gsm\"\n+  },\n+  {\n+    \"name\": \"audio/x-jam\"\n+  },\n+  {\n+    \"name\": \"audio/x-liveaudio\"\n+  },\n+  {\n+    \"name\": \"audio/xm\"\n+  },\n+  {\n+    \"name\": \"audio/x-mid\"\n+  },\n+  {\n+    \"name\": \"audio/x-midi\"\n+  },\n+  {\n+    \"name\": \"audio/x-mod\"\n+  },\n+  {\n+    \"name\": \"audio/x-mpeg\"\n+  },\n+  {\n+    \"name\": \"audio/x-mpeg-3\"\n+  },\n+  {\n+    \"name\": \"audio/x-mpequrl\"\n+  },\n+  {\n+    \"name\": \"audio/x-nspaudio\"\n+  },\n+  {\n+    \"name\": \"audio/x-pn-realaudio\"\n+  },\n+  {\n+    \"name\": \"audio/x-pn-realaudio-plugin\"\n+  },\n+  {\n+    \"name\": \"audio/x-psid\"\n+  },\n+  {\n+    \"name\": \"audio/x-realaudio\"\n+  },\n+  {\n+    \"name\": \"audio/x-twinvq\"\n+  },\n+  {\n+    \"name\": \"audio/x-twinvq-plugin\"\n+  },\n+  {\n+    \"name\": \"audio/x-vnd.audioexplosion.mjuicemediafile\"\n+  },\n+  {\n+    \"name\": \"audio/x-voc\"\n+  },\n+  {\n+    \"name\": \"audio/x-wav\",\n+    \"extension\": \"wav\"\n+  },\n+  {\n+    \"name\": \"chemical/x-pdb\"\n+  },\n+  {\n+    \"name\": \"drawing/x-dwf (old)\"\n+  },\n+  {\n+    \"name\": \"image/bmp\",\n+    \"extension\": \"bmp\"\n+  },\n+  {\n+    \"name\": \"image/cmu-raster\"\n+  },\n+  {\n+    \"name\": \"image/fif\"\n+  },\n+  {\n+    \"name\": \"image/florian\"\n+  },\n+  {\n+    \"name\": \"image/g3fax\"\n+  },\n+  {\n+    \"name\": \"image/gif\",\n+    \"extension\": \"gif\"\n+  },\n+  {\n+    \"name\": \"image/ief\",\n+    \"extension\": \"ief\"\n+  },\n+  {\n+    \"name\": \"image/jpeg\",\n+    \"extension\": \"jpeg\"\n+  },\n+  {\n+    \"name\": \"image/jutvision\"\n+  },\n+  {\n+    \"name\": \"image/naplps\"\n+  },\n+  {\n+    \"name\": \"image/pict\",\n+    \"extension\": \"pict\"\n+  },\n+  {\n+    \"name\": \"image/pjpeg\",\n+    \"extension\": \"jpeg\"\n+  },\n+  {\n+    \"name\": \"image/png\",\n+    \"extension\": \"png\"\n+  },\n+  {\n+    \"name\": \"image/tiff\",\n+    \"extension\": \"tiff\"\n+  },\n+  {\n+    \"name\": \"image/vasa\"\n+  },\n+  {\n+    \"name\": \"image/vnd.dwg\"\n+  },\n+  {\n+    \"name\": \"image/vnd.fpx\"\n+  },\n+  {\n+    \"name\": \"image/vnd.net-fpx\"\n+  },\n+  {\n+    \"name\": \"image/vnd.rn-realflash\"\n+  },\n+  {\n+    \"name\": \"image/vnd.rn-realpix\"\n+  },\n+  {\n+    \"name\": \"image/vnd.wap.wbmp\"\n+  },\n+  {\n+    \"name\": \"image/vnd.xiff\"\n+  },\n+  {\n+    \"name\": \"image/xbm\"\n+  },\n+  {\n+    \"name\": \"image/x-cmu-raster\"\n+  },\n+  {\n+    \"name\": \"image/x-dwg\"\n+  },\n+  {\n+    \"name\": \"image/x-icon\"\n+  },\n+  {\n+    \"name\": \"image/x-jg\"\n+  },\n+  {\n+    \"name\": \"image/x-jps\"\n+  },\n+  {\n+    \"name\": \"image/x-niff\"\n+  },\n+  {\n+    \"name\": \"image/x-pcx\"\n+  },\n+  {\n+    \"name\": \"image/x-pict\"\n+  },\n+  {\n+    \"name\": \"image/xpm\"\n+  },\n+  {\n+    \"name\": \"image/x-portable-anymap\"\n+  },\n+  {\n+    \"name\": \"image/x-portable-bitmap\"\n+  },\n+  {\n+    \"name\": \"image/x-portable-graymap\"\n+  },\n+  {\n+    \"name\": \"image/x-portable-greymap\"\n+  },\n+  {\n+    \"name\": \"image/x-portable-pixmap\"\n+  },\n+  {\n+    \"name\": \"image/x-quicktime\"\n+  },\n+  {\n+    \"name\": \"image/x-rgb\"\n+  },\n+  {\n+    \"name\": \"image/x-tiff\"\n+  },\n+  {\n+    \"name\": \"image/x-windows-bmp\"\n+  },\n+  {\n+    \"name\": \"image/x-xbitmap\"\n+  },\n+  {\n+    \"name\": \"image/x-xbm\"\n+  },\n+  {\n+    \"name\": \"image/x-xpixmap\"\n+  },\n+  {\n+    \"name\": \"image/x-xwd\"\n+  },\n+  {\n+    \"name\": \"image/x-xwindowdump\"\n+  },\n+  {\n+    \"name\": \"i-world/i-vrml\"\n+  },\n+  {\n+    \"name\": \"message/rfc822\"\n+  },\n+  {\n+    \"name\": \"model/iges\"\n+  },\n+  {\n+    \"name\": \"model/vnd.dwf\"\n+  },\n+  {\n+    \"name\": \"model/vrml\"\n+  },\n+  {\n+    \"name\": \"model/x-pov\"\n+  },\n+  {\n+    \"name\": \"multipart/x-gzip\"\n+  },\n+  {\n+    \"name\": \"multipart/x-ustar\"\n+  },\n+  {\n+    \"name\": \"multipart/x-zip\"\n+  },\n+  {\n+    \"name\": \"music/crescendo\"\n+  },\n+  {\n+    \"name\": \"music/x-karaoke\"\n+  },\n+  {\n+    \"name\": \"paleovu/x-pv\"\n+  },\n+  {\n+    \"name\": \"text/asp\"\n+  },\n+  {\n+    \"name\": \"text/css\"\n+  },\n+  {\n+    \"name\": \"text/ecmascript\"\n+  },\n+  {\n+    \"name\": \"text/html\",\n+    \"extension\": \"html\"\n+  },\n+  {\n+    \"name\": \"text/javascript\",\n+    \"extension\": \"js\"\n+  },\n+  {\n+    \"name\": \"text/mcf\"\n+  },\n+  {\n+    \"name\": \"text/pascal\"\n+  },\n+  {\n+    \"name\": \"text/plain\"\n+  },\n+  {\n+    \"name\": \"text/richtext\"\n+  },\n+  {\n+    \"name\": \"text/scriplet\"\n+  },\n+  {\n+    \"name\": \"text/sgml\"\n+  },\n+  {\n+    \"name\": \"text/tab-separated-values\"\n+  },\n+  {\n+    \"name\": \"text/uri-list\"\n+  },\n+  {\n+    \"name\": \"text/vnd.abc\"\n+  },\n+  {\n+    \"name\": \"text/vnd.fmi.flexstor\"\n+  },\n+  {\n+    \"name\": \"text/vnd.rn-realtext\"\n+  },\n+  {\n+    \"name\": \"text/vnd.wap.wml\"\n+  },\n+  {\n+    \"name\": \"text/vnd.wap.wmlscript\"\n+  },\n+  {\n+    \"name\": \"text/webviewhtml\"\n+  },\n+  {\n+    \"name\": \"text/x-asm\"\n+  },\n+  {\n+    \"name\": \"text/x-audiosoft-intra\"\n+  },\n+  {\n+    \"name\": \"text/x-c\"\n+  },\n+  {\n+    \"name\": \"text/x-component\"\n+  },\n+  {\n+    \"name\": \"text/x-fortran\"\n+  },\n+  {\n+    \"name\": \"text/x-h\"\n+  },\n+  {\n+    \"name\": \"text/x-java-source\"\n+  },\n+  {\n+    \"name\": \"text/x-la-asf\"\n+  },\n+  {\n+    \"name\": \"text/x-m\"\n+  },\n+  {\n+    \"name\": \"text/xml\"\n+  },\n+  {\n+    \"name\": \"text/x-pascal\"\n+  },\n+  {\n+    \"name\": \"text/x-script\"\n+  },\n+  {\n+    \"name\": \"text/x-script.csh\"\n+  },\n+  {\n+    \"name\": \"text/x-script.elisp\"\n+  },\n+  {\n+    \"name\": \"text/x-script.guile\"\n+  },\n+  {\n+    \"name\": \"text/x-script.ksh\"\n+  },\n+  {\n+    \"name\": \"text/x-script.lisp\"\n+  },\n+  {\n+    \"name\": \"text/x-script.perl\"\n+  },\n+  {\n+    \"name\": \"text/x-script.perl-module\"\n+  },\n+  {\n+    \"name\": \"text/x-script.phyton\"\n+  },\n+  {\n+    \"name\": \"text/x-script.rexx\"\n+  },\n+  {\n+    \"name\": \"text/x-script.scheme\"\n+  },\n+  {\n+    \"name\": \"text/x-script.sh\"\n+  },\n+  {\n+    \"name\": \"text/x-script.tcl\"\n+  },\n+  {\n+    \"name\": \"text/x-script.tcsh\"\n+  },\n+  {\n+    \"name\": \"text/x-script.zsh\"\n+  },\n+  {\n+    \"name\": \"text/x-server-parsed-html\"\n+  },\n+  {\n+    \"name\": \"text/x-setext\"\n+  },\n+  {\n+    \"name\": \"text/x-sgml\"\n+  },\n+  {\n+    \"name\": \"text/x-speech\"\n+  },\n+  {\n+    \"name\": \"text/x-uil\"\n+  },\n+  {\n+    \"name\": \"text/x-uuencode\"\n+  },\n+  {\n+    \"name\": \"text/x-vcalendar\"\n+  },\n+  {\n+    \"name\": \"video/animaflex\"\n+  },\n+  {\n+    \"name\": \"video/avi\"\n+  },\n+  {\n+    \"name\": \"video/avs-video\"\n+  },\n+  {\n+    \"name\": \"video/dl\"\n+  },\n+  {\n+    \"name\": \"video/fli\"\n+  },\n+  {\n+    \"name\": \"video/gl\"\n+  },\n+  {\n+    \"name\": \"video/mpeg\"\n+  },\n+  {\n+    \"name\": \"video/msvideo\"\n+  },\n+  {\n+    \"name\": \"video/quicktime\"\n+  },\n+  {\n+    \"name\": \"video/vdo\"\n+  },\n+  {\n+    \"name\": \"video/vivo\"\n+  },\n+  {\n+    \"name\": \"video/vnd.rn-realvideo\"\n+  },\n+  {\n+    \"name\": \"video/vnd.vivo\"\n+  },\n+  {\n+    \"name\": \"video/vosaic\"\n+  },\n+  {\n+    \"name\": \"video/x-amt-demorun\"\n+  },\n+  {\n+    \"name\": \"video/x-amt-showrun\"\n+  },\n+  {\n+    \"name\": \"video/x-atomic3d-feature\"\n+  },\n+  {\n+    \"name\": \"video/x-dl\"\n+  },\n+  {\n+    \"name\": \"video/x-dv\"\n+  },\n+  {\n+    \"name\": \"video/x-fli\"\n+  },\n+  {\n+    \"name\": \"video/x-gl\"\n+  },\n+  {\n+    \"name\": \"video/x-isvideo\"\n+  },\n+  {\n+    \"name\": \"video/x-motion-jpeg\"\n+  },\n+  {\n+    \"name\": \"video/x-mpeg\"\n+  },\n+  {\n+    \"name\": \"video/x-mpeq2a\"\n+  },\n+  {\n+    \"name\": \"video/x-ms-asf\"\n+  },\n+  {\n+    \"name\": \"video/x-ms-asf-plugin\"\n+  },\n+  {\n+    \"name\": \"video/x-msvideo\"\n+  },\n+  {\n+    \"name\": \"video/x-qtc\"\n+  },\n+  {\n+    \"name\": \"video/x-scm\"\n+  },\n+  {\n+    \"name\": \"video/x-sgi-movie\"\n+  },\n+  {\n+    \"name\": \"windows/metafile\"\n+  },\n+  {\n+    \"name\": \"www/mime\"\n+  },\n+  {\n+    \"name\": \"x-conference/x-cooltalk\"\n+  },\n+  {\n+    \"name\": \"xgl/drawing\"\n+  },\n+  {\n+    \"name\": \"xgl/movie\"\n+  },\n+  {\n+    \"name\": \"x-music/x-midi\"\n+  },\n+  {\n+    \"name\": \"x-world/x-3dmf\"\n+  },\n+  {\n+    \"name\": \"x-world/x-svr\"\n+  },\n+  {\n+    \"name\": \"x-world/x-vrml\"\n+  },\n+  {\n+    \"name\": \"x-world/x-vrt\"\n+  }\n+]"},{"sha":"dfd8b8dbde6dbe26297ea1605a40516b05e0f4ea","filename":"client/idrepo/enduser/src/main/resources/application.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Enduser\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+server.servlet.contextPath=/syncope-enduser"},{"sha":"9e26dfeeb6e641a33dae4961196235bdb965b21b","filename":"client/idrepo/enduser/src/main/resources/customFormAttributes.json","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FcustomFormAttributes.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FcustomFormAttributes.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FcustomFormAttributes.json?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1 @@\n+{}\n\\ No newline at end of file"},{"sha":"dc9bc7e751107944804279a979f43545c6788cc2","filename":"client/idrepo/enduser/src/main/resources/enduser.properties","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+enduser.directory=${conf.directory}\n+\n+domain=Master\n+\n+anonymousUser=${anonymousUser}\n+anonymousKey=${anonymousKey}\n+adminUser=${adminUser}\n+useGZIPCompression=true\n+maxUploadFileSizeMB=5\n+\n+scheme=http\n+host=localhost\n+port=8080\n+rootPath=/syncope/rest/\n+\n+captcha=true\n+xsrf=true"},{"sha":"ecefc58e65a9548771b0876eb2870471eadb705a","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/SyncopeWebApplication.properties","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8e5eb5b16dd3319fc10436c47407499e4d3a775/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.properties?ref=c8e5eb5b16dd3319fc10436c47407499e4d3a775","patch":"@@ -0,0 +1,77 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+users=Users\n+groups=Groups\n+configuration=Configuration\n+resources=Resources\n+connectors=Connectors\n+reports=Reports\n+tasks=Tasks\n+logout=Logout\n+schema=Schema\n+operation_succeeded=Operation executed successfully\n+operation_error=Error occurred during the requested operation\n+alert=Alert:\n+confirmDelete=Do you really want to delete the selected item(s)?\n+confirmUnlink=Do you really want to remove the link between the selected item(s) and the resource?\n+confirmUnassign=Do you really want to remove the assignment between the selected item(s) and the resource?\n+confirmDeprovision=Do you really want to de-provision the selected item(s)?\n+confirmProvision=Do you really want to provision the selected item(s)?\n+confirmClone=Do you really want to clone the selected item(s)?\n+\n+dropDownChoiceField.nullValid=Choose one\n+DateTimeField$HoursValidator=Hour value must be in range (1, 12)\n+error=Error\n+generic_error=An error occurred during the operation\n+id=Key\n+name=Name\n+palette.available=Available\n+palette.selected=Selected\n+jexl_info=This field expects a JEXL expression, for example:\n+jexl_ex1=surname + ',' + firstname\n+jexl_ex2='new.' + surname\n+jexl_syntax_url=Full JEXL reference\n+create=Create\n+key=Key\n+types=Types\n+self-registration-link=Self Registration\n+self-pwd-reset-link=Self Password Reset\n+realms=Realms\n+roles=Roles\n+policies=Policies\n+workflow=Workflow\n+logs=Logs\n+layouts=Layouts\n+notifications=Notifications\n+parameters=Parameters\n+extensions=Extensions\n+NavigatorLabel=Showing ${from} to ${to} of ${of} rows\n+displayRows=Rows to display:\n+OrderByLink.CSS.ascending=sorting_asc\n+OrderByLink.CSS.descending=sorting_desc\n+OrderByLink.CSS.none=sorting\n+entitlements=Entitlements\n+audit=Audit\n+connectors.confirm.reload=This request is potentially dangerous for running operations, continue?\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects, memberships or privileges; for example:\n+confirmGlobalLogout=Do you really want to perform global logout?\n+implementations=Implementations\n+\n+timeout=Operation is taking to long: it will be executed in background. Please check later for the result (errors won't be triggered).\n+security=Security\n+before=Before\n+after=After"}]}