{"sha":"dcfeeccd632c5330690fb459da103046f24eac90","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRjZmVlY2NkNjMyYzUzMzA2OTBmYjQ1OWRhMTAzMDQ2ZjI0ZWFjOTA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T10:29:54Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T10:29:54Z"},"message":"Enhanced test compatibility for password check\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246651 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"61d4bd64f21d6f0eec23f1629ded2cc779e5757e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/61d4bd64f21d6f0eec23f1629ded2cc779e5757e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dcfeeccd632c5330690fb459da103046f24eac90","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dcfeeccd632c5330690fb459da103046f24eac90","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dcfeeccd632c5330690fb459da103046f24eac90","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dcfeeccd632c5330690fb459da103046f24eac90/comments","author":null,"committer":null,"parents":[{"sha":"a42103ffd0b7b8966626644945c1016a68d7d0b5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a42103ffd0b7b8966626644945c1016a68d7d0b5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a42103ffd0b7b8966626644945c1016a68d7d0b5"}],"stats":{"total":21,"additions":15,"deletions":6},"files":[{"sha":"442a38af02b362a654062741c99f92822d8eb41d","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dcfeeccd632c5330690fb459da103046f24eac90/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dcfeeccd632c5330690fb459da103046f24eac90/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=dcfeeccd632c5330690fb459da103046f24eac90","patch":"@@ -99,7 +99,9 @@ public final void createUserWithNoPropagation() {\n         // get max task id\n         long maxId = Long.MIN_VALUE;\n         for (TaskTO task : tasks) {\n-            if (task.getId() > maxId) maxId = task.getId();\n+            if (task.getId() > maxId) {\n+                maxId = task.getId();\n+            }\n         }\n \n         // create a new user\n@@ -143,7 +145,9 @@ public final void createUserWithNoPropagation() {\n         // get max task id\n         long newMaxId = Long.MIN_VALUE;\n         for (TaskTO task : tasks) {\n-            if (task.getId() > newMaxId) newMaxId = task.getId();\n+            if (task.getId() > newMaxId) {\n+                newMaxId = task.getId();\n+            }\n         }\n \n         assertTrue(newMaxId > maxId);\n@@ -185,7 +189,9 @@ public final void create() {\n         // get max task id\n         long maxId = Long.MIN_VALUE;\n         for (TaskTO task : tasks) {\n-            if (task.getId() > maxId) maxId = task.getId();\n+            if (task.getId() > maxId) {\n+                maxId = task.getId();\n+            }\n         }\n \n         UserTO userTO = getSampleTO(\"a.b@c.com\");\n@@ -246,7 +252,9 @@ public final void create() {\n         // get max task id\n         long newMaxId = Long.MIN_VALUE;\n         for (TaskTO task : tasks) {\n-            if (task.getId() > newMaxId) newMaxId = task.getId();\n+            if (task.getId() > newMaxId) {\n+                newMaxId = task.getId();\n+            }\n         }\n \n         assertTrue(newMaxId > maxId);\n@@ -584,8 +592,9 @@ public final void update() {\n \n         SyncopeUser passwordTestUser = new SyncopeUser();\n         passwordTestUser.setPassword(\"newPassword\");\n-        assertEquals(passwordTestUser.getPassword(),\n-                new String(Base64.decode(userTO.getPassword())));\n+        assertEquals(new String(Base64.encode(\n+                passwordTestUser.getPassword().getBytes())),\n+                userTO.getPassword());\n \n         assertEquals(1, userTO.getMemberships().size());\n         assertEquals(1, userTO.getMemberships().iterator().next()."}]}