{"sha":"e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU4YWY2YzRhOWY2NmQ2Mzg5YjUxNjNmYzlmNzlmN2M0YzljN2UyNTE=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-12T10:24:24Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-12T10:24:24Z"},"message":"Provided before object about update coming from sync - SYNCOPE-422 and SYNCOPE-423\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1540993 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4b49765b0705e9e18ecbcc8608375a30170ee277","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4b49765b0705e9e18ecbcc8608375a30170ee277"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8269ea8aab412f4d631644b808691388579f4b61","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8269ea8aab412f4d631644b808691388579f4b61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8269ea8aab412f4d631644b808691388579f4b61"}],"stats":{"total":47,"additions":27,"deletions":20},"files":[{"sha":"0870eec1442007b3534263fd53900e0559205dd0","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":27,"deletions":20,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=e8af6c4a9f66d6389b5163fc9f79f7c4c9c7e251","patch":"@@ -625,17 +625,18 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n         return Collections.singletonList(result);\n     }\n \n-    protected UserTO updateUser(final Long id, SyncDelta delta, final boolean dryRun, final SyncResult result)\n+    protected Map.Entry<UserTO, UserTO> updateUser(final Long id, SyncDelta delta, final boolean dryRun,\n+            final SyncResult result)\n             throws Exception {\n \n-        UserTO userTO = userDataBinder.getUserTO(id);\n+        final UserTO before = userDataBinder.getUserTO(id);\n         UserMod userMod = connObjectUtil.getAttributableMod(\n-                id, delta.getObject(), userTO, syncTask, AttributableUtil.getInstance(AttributableType.USER));\n+                id, delta.getObject(), before, syncTask, AttributableUtil.getInstance(AttributableType.USER));\n \n-        delta = actions.beforeUpdate(this, delta, userTO, userMod);\n+        delta = actions.beforeUpdate(this, delta, before, userMod);\n \n         if (dryRun) {\n-            return userTO;\n+            return new AbstractMap.SimpleEntry<UserTO, UserTO>(before, before);\n         }\n \n         // Attribute value transformation (if configured)\n@@ -686,24 +687,25 @@ protected UserTO updateUser(final Long id, SyncDelta delta, final boolean dryRun\n \n         taskExecutor.execute(tasks);\n \n-        userTO = userDataBinder.getUserTO(updated.getResult().getKey());\n+        final UserTO after = userDataBinder.getUserTO(updated.getResult().getKey());\n \n-        actions.after(this, delta, userTO, result);\n+        actions.after(this, delta, after, result);\n \n-        return userTO;\n+        return new AbstractMap.SimpleEntry<UserTO, UserTO>(before, after);\n     }\n \n-    protected RoleTO updateRole(final Long id, SyncDelta delta, final boolean dryRun, final SyncResult result)\n+    protected Map.Entry<RoleTO, RoleTO> updateRole(\n+            final Long id, SyncDelta delta, final boolean dryRun, final SyncResult result)\n             throws Exception {\n \n-        RoleTO roleTO = roleDataBinder.getRoleTO(id);\n+        final RoleTO before = roleDataBinder.getRoleTO(id);\n         RoleMod roleMod = connObjectUtil.getAttributableMod(\n-                id, delta.getObject(), roleTO, syncTask, AttributableUtil.getInstance(AttributableType.ROLE));\n+                id, delta.getObject(), before, syncTask, AttributableUtil.getInstance(AttributableType.ROLE));\n \n-        delta = actions.beforeUpdate(this, delta, roleTO, roleMod);\n+        delta = actions.beforeUpdate(this, delta, before, roleMod);\n \n         if (dryRun) {\n-            return roleTO;\n+            return new AbstractMap.SimpleEntry<RoleTO, RoleTO>(before, before);\n         }\n \n         // Attribute value transformation (if configured)\n@@ -728,11 +730,11 @@ protected RoleTO updateRole(final Long id, SyncDelta delta, final boolean dryRun\n \n         taskExecutor.execute(tasks);\n \n-        roleTO = roleDataBinder.getRoleTO(updated.getResult());\n+        final RoleTO after = roleDataBinder.getRoleTO(updated.getResult());\n \n-        actions.after(this, delta, roleTO, result);\n+        actions.after(this, delta, after, result);\n \n-        return roleTO;\n+        return new AbstractMap.SimpleEntry<RoleTO, RoleTO>(before, after);\n     }\n \n     protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n@@ -752,6 +754,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n             LOG.debug(\"About to update {}\", id);\n \n             Object output = null;\n+            AbstractAttributableTO before = null;\n             Result resultStatus;\n \n             final SyncResult result = new SyncResult();\n@@ -763,10 +766,14 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n             try {\n                 final AbstractAttributableTO updated;\n                 if (AttributableType.USER == attrUtil.getType()) {\n-                    updated = updateUser(id, delta, dryRun, result);\n+                    final Map.Entry<UserTO, UserTO> res = updateUser(id, delta, dryRun, result);\n+                    before = res.getKey();\n+                    updated = res.getValue();\n                     result.setName(((UserTO) updated).getUsername());\n                 } else if (AttributableType.ROLE == attrUtil.getType()) {\n-                    updated = updateRole(id, delta, dryRun, result);\n+                    final Map.Entry<RoleTO, RoleTO> res = updateRole(id, delta, dryRun, result);\n+                    before = res.getKey();\n+                    updated = res.getValue();\n                     result.setName(((RoleTO) updated).getName());\n                 } else {\n                     updated = null;\n@@ -795,7 +802,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                         syncTask.getResource().getName(),\n                         \"update\",\n                         resultStatus,\n-                        null, // searching for before object is too much expensive ... \n+                        before,\n                         output,\n                         delta);\n \n@@ -805,7 +812,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                         syncTask.getResource().getName(),\n                         \"update\",\n                         resultStatus,\n-                        null, // searching for before object is too much expensive ... \n+                        before,\n                         output,\n                         delta);\n             }"}]}