{"sha":"1bc6f1c37b5804988fe093c4f05a854b5867ef5b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFiYzZmMWMzN2I1ODA0OTg4ZmUwOTNjNGYwNWE4NTRiNTg2N2VmNWI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T17:04:30Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T17:04:30Z"},"message":"Fixes issue 87\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246869 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9f6b27430b1a892d5ed8340e77988e4cac2e0d47","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f6b27430b1a892d5ed8340e77988e4cac2e0d47"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1bc6f1c37b5804988fe093c4f05a854b5867ef5b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1bc6f1c37b5804988fe093c4f05a854b5867ef5b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1bc6f1c37b5804988fe093c4f05a854b5867ef5b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/comments","author":null,"committer":null,"parents":[{"sha":"144c756d854ff21499483254577c1fdfeeece1e0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/144c756d854ff21499483254577c1fdfeeece1e0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/144c756d854ff21499483254577c1fdfeeece1e0"}],"stats":{"total":280,"additions":142,"deletions":138},"files":[{"sha":"8de8afeece3246d4b6718aa9b0a39b67caad499e","filename":"archetype/src/main/resources/archetype-resources/console/src/test/resources/content.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -35,11 +35,12 @@\n     <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n     <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n     <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n                           \n-    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n+    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>"},{"sha":"8d23b69fdce1a1dc027c76fa73393dd428061f95","filename":"archetype/src/main/resources/archetype-resources/core/src/test/resources/content.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -40,11 +40,12 @@\n     <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n     <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n     <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n                           \n-    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n+    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>"},{"sha":"9f1292acd4d14183716d504bc8594cdc99dc2017","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -25,6 +25,9 @@ public enum SyncopeClientExceptionType {\n     GenericPersistence(\n     \"Syncope.GenericPersistence\",\n     \"Syncope.GenericPersistence.cause\"),\n+    InvalidConnInstance(\n+    \"Syncope.InvalidConnInstance\",\n+    \"Syncope.InvalidConnInstance.message\"),\n     InvalidPassword(\n     \"Syncope.InvalidPassword\",\n     \"Syncope.InvalidPassword.reason\"),"},{"sha":"a7b1ec1b5c8da132e3ded8ad8303e9bdb60549a1","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":15,"deletions":20,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -45,6 +45,7 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConnBundleTO;\n import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.console.rest.ConnectorRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n@@ -60,20 +61,10 @@ public class ConnectorModalPage extends BaseModalPage {\n     @SpringBean\n     private ConnectorRestClient restClient;\n \n-    private TextField connectorName;\n-\n-    private TextField displayName;\n-\n-    private DropDownChoice<ConnBundleTO> bundle;\n-\n-    private TextField version;\n-\n     private CheckBoxMultipleChoice capabilitiesPalette;\n \n     private ConnBundleTO selectedBundleTO = new ConnBundleTO();\n \n-    private AjaxButton submit;\n-\n     private WebMarkupContainer propertiesContainer;\n \n     private List<ConnectorCapability> selectedCapabilities;\n@@ -130,18 +121,20 @@ protected List<ConnConfProperty> load() {\n                     }\n                 };\n \n-        connectorName = new TextField(\"connectorName\");\n+        final TextField connectorName = new TextField(\"connectorName\");\n         connectorName.setEnabled(false);\n         connectorName.setOutputMarkupId(true);\n \n-        displayName = new TextField(\"displayName\");\n+        TextField displayName = new TextField(\"displayName\");\n         displayName.setOutputMarkupId(true);\n+        displayName.setRequired(true);\n \n-        version = new TextField(\"version\");\n+        final TextField version = new TextField(\"version\");\n         version.setEnabled(false);\n         version.setOutputMarkupId(true);\n \n-        bundle = new DropDownChoice<ConnBundleTO>(\"bundle\", bundles,\n+        final DropDownChoice<ConnBundleTO> bundle =\n+                new DropDownChoice<ConnBundleTO>(\"bundle\", bundles,\n                 new ChoiceRenderer<ConnBundleTO>(\"bundleName\", \"bundleName\"));\n         bundle.setModel(new IModel<ConnBundleTO>() {\n \n@@ -159,7 +152,6 @@ public void setObject(final ConnBundleTO object) {\n             public void detach() {\n             }\n         });\n-\n         bundle.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             @Override\n@@ -215,7 +207,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n         connectorForm.setModel(new CompoundPropertyModel(connectorTO));\n         connectorForm.add(propertiesContainer);\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+        AjaxButton submit = new IndicatingAjaxButton(\"submit\", new Model(\n                 getString(\"submit\"))) {\n \n             @Override\n@@ -235,16 +227,19 @@ protected void onSubmit(final AjaxRequestTarget target,\n \n                 try {\n                     if (createFlag) {\n-                        restClient.createConnector(connector);\n+                        restClient.create(connector);\n                     } else {\n-                        restClient.updateConnector(connector);\n+                        restClient.update(connector);\n                     }\n \n                     basePage.setOperationResult(true);\n-\n                     window.close(target);\n-                } catch (Exception e) {\n+                } catch (SyncopeClientCompositeErrorException e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());\n+                    basePage.setOperationResult(false);\n+\n+                    LOG.error(\"While creating or updating connector \"\n+                            + connector);\n                 }\n             }\n "},{"sha":"30203222e8a855eef9e554502a501bd66003e006","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -171,7 +171,7 @@ public void populateItem(\n                     public void onClick(final AjaxRequestTarget target) {\n \n                         if (!checkDeleteIsForbidden(connectorTO)) {\n-                            restClient.deleteConnector(connectorTO.getId());\n+                            restClient.delete(connectorTO.getId());\n                             info(getString(\"operation_succeded\"));\n                         } else {\n                             error(getString(\"delete_error\"));"},{"sha":"b5b7a8b34d11a7101de93de113a2f5d06ce078fe","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -347,9 +347,9 @@ protected void onSubmit(final AjaxRequestTarget target,\n                 } else {\n                     try {\n                         if (createFlag) {\n-                            restClient.createResource(resourceTO);\n+                            restClient.create(resourceTO);\n                         } else {\n-                            restClient.updateResource(resourceTO);\n+                            restClient.update(resourceTO);\n                         }\n \n                         basePage.setOperationResult(true);"},{"sha":"7fe62378a3452d1e08b0561e372aedd89fa58132","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -147,7 +147,7 @@ public void populateItem(Item<ICellPopulator<ResourceTO>> cellItem,\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.deleteResource(resourceTO.getName());\n+                            restClient.delete(resourceTO.getName());\n \n                             info(getString(\"operation_succeded\"));\n                         } catch (SyncopeClientCompositeErrorException e) {"},{"sha":"3fbc4e0efdd0b5d377ab19ab716c5ae030db0646","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":12,"deletions":26,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -32,37 +32,27 @@ public class ConnectorRestClient extends AbstractBaseRestClient {\n      * @return ConnectorInstanceTOs\n      */\n     public List<ConnInstanceTO> getAllConnectors() {\n-        List<ConnInstanceTO> connectors = null;\n-\n-        connectors = Arrays.asList(restTemplate.getForObject(\n+        return Arrays.asList(restTemplate.getForObject(\n                 baseURL + \"connector/list.json\",\n                 ConnInstanceTO[].class));\n-\n-        return connectors;\n     }\n \n     /**\n      * Create new connector.\n      * @param schemaTO\n      */\n-    public void createConnector(ConnInstanceTO connectorTO) {\n-        ConnInstanceTO actual = null;\n-\n-        try {\n-            actual = restTemplate.postForObject(baseURL\n-                    + \"connector/create.json\", connectorTO,\n-                    ConnInstanceTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a connector\", e);\n-        }\n+    public void create(ConnInstanceTO connectorTO) {\n+        restTemplate.postForObject(baseURL\n+                + \"connector/create.json\", connectorTO,\n+                ConnInstanceTO.class);\n     }\n \n     /**\n      * Load an already existent connector by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public ConnInstanceTO readConnector(String name) {\n+    public ConnInstanceTO read(String name) {\n         ConnInstanceTO schema = null;\n \n         try {\n@@ -80,23 +70,19 @@ public ConnInstanceTO readConnector(String name) {\n      * Update an already existent connector.\n      * @param schemaTO updated\n      */\n-    public void updateConnector(ConnInstanceTO connectorTO) {\n-        try {\n-            restTemplate.postForObject(\n-                    baseURL + \"connector/update.json\",\n-                    connectorTO,\n-                    ConnInstanceTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a connector\", e);\n-        }\n+    public void update(ConnInstanceTO connectorTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"connector/update.json\",\n+                connectorTO,\n+                ConnInstanceTO.class);\n     }\n \n     /**\n      * Delete an already existent connector by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public void deleteConnector(Long id) {\n+    public void delete(Long id) {\n         try {\n             restTemplate.delete(baseURL\n                     + \"connector/delete/{connectorId}.json\", id.toString());"},{"sha":"711e5c5fcdad1e57813e3504b88954662a8180c5","filename":"console/src/main/java/org/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -48,7 +48,7 @@ public List<ResourceTO> getAllResources() {\n      * Create new resource.\n      * @param resourceTO\n      */\n-    public void createResource(final ResourceTO resourceTO) {\n+    public void create(final ResourceTO resourceTO) {\n         restTemplate.postForObject(baseURL\n                 + \"resource/create\", resourceTO, ResourceTO.class);\n     }\n@@ -58,7 +58,7 @@ public void createResource(final ResourceTO resourceTO) {\n      * @param name (e.g.:surname)\n      * @return ResourceTO\n      */\n-    public ResourceTO readResource(final String name) {\n+    public ResourceTO read(final String name) {\n         ResourceTO resourceTO = null;\n \n         try {\n@@ -75,7 +75,7 @@ public ResourceTO readResource(final String name) {\n      * Update an already existent resource.\n      * @param schemaTO updated\n      */\n-    public void updateResource(final ResourceTO resourceTO) {\n+    public void update(final ResourceTO resourceTO) {\n         restTemplate.postForObject(\n                 baseURL + \"resource/update.json\", resourceTO,\n                 ResourceTO.class);\n@@ -85,7 +85,7 @@ public void updateResource(final ResourceTO resourceTO) {\n      * Delete an already existent resource by its name.\n      * @param name\n      */\n-    public void deleteResource(final String name) {\n+    public void delete(final String name) {\n         restTemplate.delete(baseURL\n                 + \"resource/delete/{resourceName}.json\", name);\n     }"},{"sha":"10e535db12d88b347eb646dcf0e1e99b76bfcafa","filename":"console/src/main/resources/org/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -34,11 +34,14 @@\n             <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" width=\"100%\">\n                 <tr>\n                     <td><wicket:message key=\"displayName\"/></td>\n-                <td><input type=\"text\" id=\"displayName\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"displayName\" /></td>\n+                <td>\n+                    <input type=\"text\" id=\"displayName\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"displayName\" />\n+                    <span>*</span>\n+                </td>\n                 </tr>\n                 <tr>\n                     <td><wicket:message key=\"bundleName\"/></td>\n-                    <td><select id=\"bundle\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"bundle\" /></td>\n+                <td><select id=\"bundle\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"bundle\" /></td>\n                 </tr>\n                 <tr>\n                     <td><wicket:message key=\"name\"/></td>"},{"sha":"cb098f07694eaaa5330908f2a5e4c82c53ac1e96","filename":"console/src/test/resources/content.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -42,11 +42,12 @@\n     <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n     <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n     <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n                           \n-    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n+    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>"},{"sha":"3373097111a05e90c5d4ff56e9ad2d6b67bb6285","filename":"core/src/main/java/org/syncope/core/persistence/ConnInstanceLoader.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -18,10 +18,12 @@\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Locale;\n import javassist.NotFoundException;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n import org.identityconnectors.common.IOUtil;\n+import org.identityconnectors.common.l10n.CurrentLocale;\n import org.identityconnectors.framework.api.ConnectorInfoManager;\n import org.identityconnectors.framework.api.ConnectorInfoManagerFactory;\n import org.slf4j.Logger;\n@@ -143,6 +145,10 @@ public final void contextInitialized(final ServletContextEvent sce) {\n         ConnInstanceDAO connectorInstanceDAO =\n                 (ConnInstanceDAO) context.getBean(\"connInstanceDAOImpl\");\n \n+        // This is needed to avoid encoding problems when sending error\n+        // messages via REST\n+        CurrentLocale.set(Locale.ENGLISH);\n+\n         List<ConnInstance> instances = connectorInstanceDAO.findAll();\n         for (ConnInstance instance : instances) {\n             try {"},{"sha":"59327664a36a9aa0ea8e0319ecd3800a10fa4686","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -190,21 +190,14 @@ public ConnectorFacadeProxy(final ConnInstance connInstance)\n \n         // Use the ConnectorFacadeFactory's newInstance() method to get\n         // a new connector.\n-        ConnectorFacade connector =\n-                ConnectorFacadeFactory.getInstance().newInstance(apiConfig);\n-\n+        connector = ConnectorFacadeFactory.getInstance().newInstance(apiConfig);\n         if (connector == null) {\n             throw new NotFoundException(\"Connector\");\n         }\n \n         // Make sure we have set up the Configuration properly\n-        try {\n-            connector.validate();\n-        } catch (RuntimeException e) {\n-            LOG.error(\"Connector configuration not valid: \" + apiConfig, e);\n-        }\n+        connector.validate();\n \n-        this.connector = connector;\n         this.capabitilies = connInstance.getCapabilities();\n     }\n "},{"sha":"37f6a1b18ac20af15505844edcb2ca3792d538b0","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":76,"deletions":61,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1bc6f1c37b5804988fe093c4f05a854b5867ef5b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=1bc6f1c37b5804988fe093c4f05a854b5867ef5b","patch":"@@ -27,19 +27,22 @@\n import org.identityconnectors.framework.api.ConnectorInfo;\n import org.identityconnectors.framework.api.ConnectorInfoManager;\n import org.identityconnectors.framework.api.ConnectorKey;\n+import org.springframework.http.HttpStatus;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.servlet.ModelAndView;\n import org.syncope.client.to.ConnBundleTO;\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n import org.syncope.core.rest.data.ConnInstanceDataBinder;\n import org.syncope.types.ConnConfPropSchema;\n+import org.syncope.types.SyncopeClientExceptionType;\n \n @Controller\n @RequestMapping(\"/connector\")\n@@ -56,25 +59,29 @@ public class ConnInstanceController extends AbstractController {\n     value = \"/create\")\n     public ConnInstanceTO create(final HttpServletResponse response,\n             @RequestBody final ConnInstanceTO connectorTO)\n-            throws SyncopeClientCompositeErrorException, NotFoundException,\n-            MissingConfKeyException {\n+            throws SyncopeClientCompositeErrorException, NotFoundException {\n \n         LOG.debug(\"ConnInstance create called with configuration {}\",\n                 connectorTO);\n \n-        ConnInstance connInstance = null;\n-        try {\n-            connInstance = binder.getConnInstance(connectorTO);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"Could not create for \" + connectorTO, e);\n+        ConnInstance connInstance = binder.getConnInstance(connectorTO);\n \n-            throw e;\n+        try {\n+            connInstance = connInstanceDAO.save(connInstance);\n+        } catch (Throwable t) {\n+            SyncopeClientCompositeErrorException scce =\n+                    new SyncopeClientCompositeErrorException(\n+                    HttpStatus.BAD_REQUEST);\n+\n+            SyncopeClientException invalidConnInstance =\n+                    new SyncopeClientException(\n+                    SyncopeClientExceptionType.InvalidConnInstance);\n+            invalidConnInstance.addElement(t.getMessage());\n+\n+            scce.addException(invalidConnInstance);\n+            throw scce;\n         }\n \n-        // Everything went out fine, we can flush to the database\n-        // and register the new connector instance for later usage\n-        connInstance = connInstanceDAO.save(connInstance);\n-\n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return binder.getConnInstanceTO(connInstance);\n     }\n@@ -84,25 +91,29 @@ public ConnInstanceTO create(final HttpServletResponse response,\n     value = \"/update\")\n     public ConnInstanceTO update(\n             @RequestBody final ConnInstanceTO connectorTO)\n-            throws SyncopeClientCompositeErrorException, NotFoundException,\n-            MissingConfKeyException {\n+            throws SyncopeClientCompositeErrorException, NotFoundException {\n \n         LOG.debug(\"Connector update called with configuration {}\", connectorTO);\n \n-        ConnInstance connInstance;\n-        try {\n-            connInstance = binder.updateConnInstance(\n-                    connectorTO.getId(), connectorTO);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"Could not create for \" + connectorTO, e);\n+        ConnInstance connInstance = binder.updateConnInstance(\n+                connectorTO.getId(), connectorTO);\n \n-            throw e;\n+        try {\n+            connInstance = connInstanceDAO.save(connInstance);\n+        } catch (RuntimeException e) {\n+            SyncopeClientCompositeErrorException scce =\n+                    new SyncopeClientCompositeErrorException(\n+                    HttpStatus.BAD_REQUEST);\n+\n+            SyncopeClientException invalidConnInstance =\n+                    new SyncopeClientException(\n+                    SyncopeClientExceptionType.InvalidConnInstance);\n+            invalidConnInstance.addElement(e.getMessage());\n+\n+            scce.addException(invalidConnInstance);\n+            throw scce;\n         }\n \n-        // Everything went out fine, we can flush to the database\n-        // and register the new connector instance for later usage\n-        connInstance = connInstanceDAO.save(connInstance);\n-\n         return binder.getConnInstanceTO(connInstance);\n     }\n \n@@ -204,43 +215,47 @@ public List<ConnBundleTO> getBundles()\n         ConfigurationProperties properties;\n \n         List<ConnBundleTO> connectorBundleTOs = new ArrayList<ConnBundleTO>();\n-        for (ConnectorInfo bundle : bundles) {\n-            connectorBundleTO = new ConnBundleTO();\n-            connectorBundleTO.setDisplayName(bundle.getConnectorDisplayName());\n-\n-            key = bundle.getConnectorKey();\n-\n-            LOG.debug(\"\\nBundle name: {}\"\n-                    + \"\\nBundle version: {}\"\n-                    + \"\\nBundle class: {}\",\n-                    new Object[]{\n-                        key.getBundleName(),\n-                        key.getBundleVersion(),\n-                        key.getConnectorName()});\n-\n-            connectorBundleTO.setBundleName(key.getBundleName());\n-            connectorBundleTO.setConnectorName(key.getConnectorName());\n-            connectorBundleTO.setVersion(key.getBundleVersion());\n-\n-            properties = bundle.createDefaultAPIConfiguration().\n-                    getConfigurationProperties();\n-\n-            ConnConfPropSchema connConfPropSchema;\n-            for (String propName : properties.getPropertyNames()) {\n-                connConfPropSchema = new ConnConfPropSchema();\n-                connConfPropSchema.setName(propName);\n-                connConfPropSchema.setRequired(\n-                        properties.getProperty(propName).isRequired());\n-                connConfPropSchema.setType(\n-                        properties.getProperty(propName).getType().getName());\n-\n-                connectorBundleTO.addProperty(connConfPropSchema);\n+        if (bundles != null) {\n+            for (ConnectorInfo bundle : bundles) {\n+                connectorBundleTO = new ConnBundleTO();\n+                connectorBundleTO.setDisplayName(\n+                        bundle.getConnectorDisplayName());\n+\n+                key = bundle.getConnectorKey();\n+\n+                LOG.debug(\"\\nBundle name: {}\"\n+                        + \"\\nBundle version: {}\"\n+                        + \"\\nBundle class: {}\",\n+                        new Object[]{\n+                            key.getBundleName(),\n+                            key.getBundleVersion(),\n+                            key.getConnectorName()});\n+\n+                connectorBundleTO.setBundleName(key.getBundleName());\n+                connectorBundleTO.setConnectorName(key.getConnectorName());\n+                connectorBundleTO.setVersion(key.getBundleVersion());\n+\n+                properties = bundle.createDefaultAPIConfiguration().\n+                        getConfigurationProperties();\n+\n+                ConnConfPropSchema connConfPropSchema;\n+                for (String propName : properties.getPropertyNames()) {\n+                    connConfPropSchema = new ConnConfPropSchema();\n+                    connConfPropSchema.setName(propName);\n+                    connConfPropSchema.setRequired(\n+                            properties.getProperty(propName).isRequired());\n+                    connConfPropSchema.setType(\n+                            properties.getProperty(propName).\n+                            getType().getName());\n+\n+                    connectorBundleTO.addProperty(connConfPropSchema);\n+                }\n+\n+                LOG.debug(\"Bundle properties: {}\",\n+                        connectorBundleTO.getProperties());\n+\n+                connectorBundleTOs.add(connectorBundleTO);\n             }\n-\n-            LOG.debug(\"Bundle properties: {}\",\n-                    connectorBundleTO.getProperties());\n-\n-            connectorBundleTOs.add(connectorBundleTO);\n         }\n \n         return connectorBundleTOs;"}]}