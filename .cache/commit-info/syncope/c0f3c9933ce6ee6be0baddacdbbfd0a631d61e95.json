{"sha":"c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMwZjNjOTkzM2NlNmVlNmJlMGJhZGRhY2RiYmZkMGE2MzFkNjFlOTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-18T09:56:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-18T13:50:16Z"},"message":"MySQL and PostgreSQL run all tests green","tree":{"sha":"b4f5bc08bbb7e6f803bf1fd2f8fb3c07b4610db1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b4f5bc08bbb7e6f803bf1fd2f8fb3c07b4610db1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2373ccd34f874b6640352e7075f1a02601a8f5f5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2373ccd34f874b6640352e7075f1a02601a8f5f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2373ccd34f874b6640352e7075f1a02601a8f5f5"}],"stats":{"total":127,"additions":92,"deletions":35},"files":[{"sha":"613fab14197f9792aea7f413f4b14ac1084a5af1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":28,"deletions":1,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -20,12 +20,16 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.List;\n+import org.apache.commons.collections4.ComparatorUtils;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -108,8 +112,8 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n             }\n         });\n \n+        Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n-\n             tabs.add(new AbstractTab(new Model<>(anyTypeTO.getKey())) {\n \n                 private static final long serialVersionUID = -5861786415855103549L;\n@@ -128,4 +132,27 @@ public Panel getPanel(final String panelId) {\n     protected abstract void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO);\n \n     protected abstract void onClickDelete(final AjaxRequestTarget target, final RealmTO realmTO);\n+\n+    private static class AnyTypeComparator implements Comparator<AnyTypeTO> {\n+\n+        @Override\n+        public int compare(final AnyTypeTO o1, final AnyTypeTO o2) {\n+            if (o1.getKind() == AnyTypeKind.USER) {\n+                return -1;\n+            }\n+            if (o2.getKind() == AnyTypeKind.USER) {\n+                return 1;\n+            }\n+\n+            if (o1.getKind() == AnyTypeKind.GROUP) {\n+                return -1;\n+            }\n+            if (o2.getKind() == AnyTypeKind.GROUP) {\n+                return 1;\n+            }\n+\n+            return ComparatorUtils.<String>naturalComparator().compare(o1.getKey(), o2.getKey());\n+        }\n+\n+    }\n }"},{"sha":"116c9598b0dc02cb932ada39fac243f62dac44df","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.service.RoleService;\n@@ -59,6 +60,8 @@ public int count() {\n     }\n \n     public List<String> getAllAvailableEntitlements() {\n-        return new ArrayList<>(getSyncopeService().platform().getEntitlements());\n+        List<String> entitlements = new ArrayList<>(getSyncopeService().platform().getEntitlements());\n+        Collections.sort(entitlements);\n+        return entitlements;\n     }\n }"},{"sha":"b9ebeac96de9ff784bfec9c57beb0a827a8d9e6a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAVirSchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -84,7 +84,7 @@ public VirSchema save(final VirSchema virSchema) {\n \n     @Override\n     public void delete(final String key) {\n-        final VirSchema schema = find(key);\n+        VirSchema schema = find(key);\n         if (schema == null) {\n             return;\n         }"},{"sha":"26f7f3319b4090451f822514e54297aab5972c4a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -73,7 +73,7 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n         super.before(task, beforeObj);\n \n         Provision provision = task.getResource().getProvision(anyTypeDAO.findGroup());\n-        if (AnyTypeKind.USER == task.getAnyTypeKind() && provision.getMapping() != null) {\n+        if (AnyTypeKind.USER == task.getAnyTypeKind() && provision != null && provision.getMapping() != null) {\n             User user = userDAO.find(task.getAnyKey());\n             if (user != null) {\n                 List<String> groupConnObjectLinks = new ArrayList<>();"},{"sha":"3504a4a03578e67052258e7e29fa4d1a80937c5b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -114,8 +114,11 @@ public Response toResponse(final Exception ex) {\n                     header(RESTHeaders.ERROR_INFO, ex.getMessage());\n         } else if (ex instanceof DelegatedAdministrationException) {\n             builder = builder(ClientExceptionType.DelegatedAdministration, ExceptionUtils.getRootCauseMessage(ex));\n-        } else if (ex instanceof EntityExistsException || ex instanceof DuplicateException) {\n-            builder = builder(ClientExceptionType.EntityExists, getJPAMessage(ex));\n+        } else if (ex instanceof EntityExistsException || ex instanceof DuplicateException\n+                || ex instanceof PersistenceException && ex.getCause() instanceof EntityExistsException) {\n+\n+            builder = builder(ClientExceptionType.EntityExists,\n+                    getJPAMessage(ex instanceof PersistenceException ? ex.getCause() : ex));\n         } else if (ex instanceof DataIntegrityViolationException || ex instanceof JpaSystemException) {\n             builder = builder(ClientExceptionType.DataIntegrityViolation, getJPAMessage(ex));\n         } else if (ex instanceof ConnectorException) {"},{"sha":"2b32490d567cde9358cb92d9d4825e350e597865","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.fit.console;\n \n import java.io.Serializable;\n-import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n import javax.servlet.ServletContext;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n@@ -29,7 +29,7 @@\n import org.apache.syncope.fit.AbstractITCase;\n import org.apache.wicket.Component;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n-import org.apache.wicket.markup.repeater.OddEvenItem;\n+import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.util.tester.FormTester;\n import org.apache.wicket.util.tester.WicketTester;\n import org.apache.wicket.util.visit.IVisit;\n@@ -80,25 +80,23 @@ protected void doLogin(final String user, final String passwd) {\n \n     protected <V extends Serializable> Component findComponentByProp(\n             final String property, final String searchPath, final V key) {\n-        Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n \n-        Component result = component.getPage().\n-                visitChildren(OddEvenItem.class, new IVisitor<OddEvenItem<?>, Component>() {\n+        return wicketTester.getComponentFromLastRenderedPage(searchPath).getPage().\n+                visitChildren(ListItem.class, new IVisitor<ListItem<?>, Component>() {\n \n                     @Override\n-                    public void component(final OddEvenItem<?> object, final IVisit<Component> visit) {\n-\n+                    public void component(final ListItem<?> object, final IVisit<Component> visit) {\n+                        System.out.println(\"EEEEEEEEEEE \" + object.getPath());\n+                        \n                         try {\n-                            if (PropertyResolver.getPropertyGetter(\n-                                    property,\n-                                    object.getModelObject()).invoke(object.getModelObject()).equals(key)) {\n+                            Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                            if (getter != null && getter.invoke(object.getModelObject()).equals(key)) {\n                                 visit.stop(object);\n                             }\n-                        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {\n-                            LOG.error(\"Error invoke method\", ex);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error invoke method\", e);\n                         }\n                     }\n                 });\n-        return result;\n     }\n }"},{"sha":"b2706164aa8702b6d7191542ceb9cd41f2d45918","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":21,"deletions":9,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -22,6 +22,7 @@\n \n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n@@ -51,7 +52,7 @@ public void usersBulkAction() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        final FormTester formTester = wicketTester.newFormTester(searchResultContainer\n+        FormTester formTester = wicketTester.newFormTester(searchResultContainer\n                 + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n@@ -89,7 +90,7 @@ public void userResourceBulkAction() {\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = wicketTester.newFormTester(\n                 tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n@@ -197,18 +198,22 @@ public void groupResourceBulkAction() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n+        wicketTester.clickLink(tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:first:\"\n+                + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n+                + \"toolbars:1:headers:2:header:orderByLink\", true);\n+\n         component = findComponentByProp(\"resourceName\",\n                 tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = wicketTester.newFormTester(\n                 tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n-        formTester.select(\"checkgroup\", 1);\n+        formTester.select(\"checkgroup\", 7);\n \n         wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n@@ -237,18 +242,22 @@ public void printerResourceBulkAction() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n+        wicketTester.clickLink(tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:first:\"\n+                + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n+                + \"toolbars:1:headers:2:header:orderByLink\", true);\n+\n         component = findComponentByProp(\"resourceName\",\n                 tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = wicketTester.newFormTester(\n                 tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n-        formTester.select(\"checkgroup\", 1);\n+        formTester.select(\"checkgroup\", 7);\n \n         wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n@@ -262,12 +271,15 @@ public void printerResourceBulkAction() {\n     }\n \n     @Test\n-    public void executePullTask() {\n+    public void executePropagationTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        assertNotNull(component);\n+        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:propagation\");\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = wicketTester.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);"},{"sha":"ef0f7c64e09a636f1d700ceb997835fd9ed19eaa","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -18,7 +18,10 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.junit.Assert.assertNotNull;\n+\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.Component;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -62,7 +65,10 @@ public void showTopologyToggleMenu() {\n     @Test\n     public void editProvisioning() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:resources:8:resources:0:res\", Constants.ON_CLICK);\n+        \n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n+        assertNotNull(component);\n+        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:edit\");\n \n         wicketTester.clickLink(\n@@ -78,7 +84,10 @@ public void editProvisioning() {\n     @Test\n     public void executePullTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+\n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        assertNotNull(component);\n+        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:pull\");\n         wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n@@ -92,7 +101,10 @@ public void executePullTask() {\n     @Test\n     public void editPushTask() {\n         wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:resources:5:resources:0:res\", Constants.ON_CLICK);\n+        \n+        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n+        assertNotNull(component);\n+        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:push\");\n         wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\""},{"sha":"561ca4292147f0de97348a93585a3a6566fb75c2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyTypeITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -118,13 +118,13 @@ public void createInvalidKind() {\n     @Test\n     public void createInvalidName() {\n         AnyTypeTO newType = new AnyTypeTO();\n-        newType.setKey(\"group\");\n-        newType.setKind(AnyTypeKind.ANY_OBJECT);\n+        newType.setKey(\"GROUP\");\n+        newType.setKind(AnyTypeKind.GROUP);\n         try {\n             anyTypeService.create(newType);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.InvalidAnyType, e.getType());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n     }\n "},{"sha":"3c72abd0804c523c3a05ce64fae6513a2dbf1de7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -432,7 +432,7 @@ public void create() {\n             createUser(userTO);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.GenericPersistence, e.getType());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n     }\n "},{"sha":"25434e92e239f158c085a8ee5570409222a47463","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=c0f3c9933ce6ee6be0baddacdbbfd0a631d61e95","patch":"@@ -635,6 +635,8 @@ public boolean evaluate(final MappingItemTO item) {\n             });\n             provision.getVirSchemas().clear();\n \n+            ldap.getProvisions().clear();\n+            ldap.getProvisions().add(provision);\n             ldap.setKey(RESOURCE_NAME_LDAP + \"691\" + getUUIDString());\n             resourceService.create(ldap);\n "}]}