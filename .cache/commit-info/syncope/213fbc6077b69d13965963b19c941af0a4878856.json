{"sha":"213fbc6077b69d13965963b19c941af0a4878856","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIxM2ZiYzYwNzdiNjlkMTM5NjU5NjNiMTljOTQxYWYwYTQ4Nzg4NTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-21T08:21:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-21T08:21:32Z"},"message":"Fixing archetype after SYNCOPE-620","tree":{"sha":"1a941a87f744e0950fbd844ac75b0df9ce4df6b5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1a941a87f744e0950fbd844ac75b0df9ce4df6b5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/213fbc6077b69d13965963b19c941af0a4878856","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/213fbc6077b69d13965963b19c941af0a4878856","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/213fbc6077b69d13965963b19c941af0a4878856","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/213fbc6077b69d13965963b19c941af0a4878856/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"69d8b7b21760e6129cdbafadcb4b628be03379b4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/69d8b7b21760e6129cdbafadcb4b628be03379b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/69d8b7b21760e6129cdbafadcb4b628be03379b4"}],"stats":{"total":375,"additions":280,"deletions":95},"files":[{"sha":"f22303bbf3f02442ae15d0b25bf6157dbec270c9","filename":"archetype/pom.xml","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -142,11 +142,8 @@ under the License.\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n       </resource>\n       <resource>\n-        <directory>../core/persistence-jpa/src/test/resources</directory>\n-        <includes>\n-          <include>persistence.properties</include>\n-        </includes>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n+        <directory>../core/persistence-jpa/src/test/resources/domains</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources/domains</targetPath>\n       </resource>\n       <resource>\n         <directory>../core/logic/src/main/resources</directory>\n@@ -177,6 +174,17 @@ under the License.\n           <include>workflow.properties</include>\n         </includes>\n       </resource>\n+      <resource>\n+        <directory>../fit/core-reference/src/main/resources/scriptedsql</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources/scriptedsql</targetPath>\n+      </resource>\n+      <resource>\n+        <directory>../fit/core-reference/src/main/resources</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n+        <includes>\n+          <include>connid.properties</include>\n+        </includes>\n+      </resource>\n       <resource>\n         <directory>../fit/core-reference/src/main/webapp</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>"},{"sha":"99d107bf7ab7d0fe3f1e7481001d7b235e3217a6","filename":"archetype/src/main/resources/META-INF/maven/archetype-metadata.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fmaven%2Farchetype-metadata.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -26,6 +26,16 @@ under the License.\n   </requiredProperties>\n   \n   <modules>\n+    <module id=\"common\" dir=\"common\" name=\"common\">\n+      <fileSets>\n+        <fileSet filtered=\"false\" encoding=\"UTF-8\">\n+          <directory>src/main/resources</directory>\n+        </fileSet>\n+        <fileSet filtered=\"false\" encoding=\"UTF-8\">\n+          <directory>src/test/resources</directory>\n+        </fileSet>\n+      </fileSets>\n+    </module>\n     <module id=\"core\" dir=\"core\" name=\"core\">\n       <fileSets>\n         <fileSet filtered=\"false\" encoding=\"UTF-8\">"},{"sha":"78862b9a93e50fd9eeba593d65e3c1d1adc60c28","filename":"archetype/src/main/resources/archetype-resources/common/pom.xml","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcommon%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcommon%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcommon%2Fpom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>${groupId}</groupId>\n+    <artifactId>${rootArtifactId}</artifactId>\n+    <version>${version}</version>\n+  </parent>\n+\n+  <name>Apache Syncope sample project - Common</name>\n+  <groupId>${groupId}</groupId>\n+  <artifactId>${artifactId}</artifactId>\n+  <packaging>jar</packaging>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.common</groupId>\n+      <artifactId>syncope-common-lib</artifactId>\n+    </dependency>\n+\n+  </dependencies>\n+  \n+  <build>    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <filtering>true</filtering>\n+      </testResource>\n+    </testResources>\n+  </build>\n+\n+</project>"},{"sha":"2a4ad8ff61e15558b20eafd5084908d088bcd826","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":40,"deletions":2,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -46,7 +46,13 @@ under the License.\n       <groupId>javax.servlet</groupId>\n       <artifactId>jstl</artifactId>\n     </dependency>\n-  \n+\n+    <dependency>\n+      <groupId>${groupId}</groupId>\n+      <artifactId>common</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>  \n+    \n     <dependency>\n       <groupId>org.apache.syncope.client</groupId>\n       <artifactId>syncope-client-console</artifactId>\n@@ -191,6 +197,19 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n       </properties>\n       \n       <dependencies>\n+        <dependency>\n+          <groupId>org.apache.syncope.fit</groupId>\n+          <artifactId>syncope-fit-build-tools</artifactId>\n+          <version>${syncope.version}</version>\n+          <type>war</type>\n+          <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+          <groupId>net.tirasa.connid.bundles.soap</groupId>\n+          <artifactId>wssample</artifactId>\n+          <type>war</type>\n+          <scope>test</scope>\n+        </dependency>\n         <dependency>\n           <groupId>com.h2database</groupId>\n           <artifactId>h2</artifactId>\n@@ -212,7 +231,10 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n                 <phase>package</phase>\n                 <configuration>\n                   <target>\n-                    <copy file=\"../core/target/test-classes/persistence.properties\" \n+                    <copy todir=\"../core/target/syncope/WEB-INF/classes\">\n+                      <fileset dir=\"../core/target/test-classes/domains\"/>\n+                    </copy>\n+                    <copy file=\"../core/target/test-classes/connid.properties\" \n                           todir=\"../core/target/syncope/WEB-INF/classes\" \n                           overwrite=\"true\"/>\n                     <copy file=\"../core/target/test-classes/db.jsp\" \n@@ -255,6 +277,22 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n                 </properties>\n               </configuration>\n               <deployables>\n+                <deployable>\n+                  <groupId>net.tirasa.connid.bundles.soap</groupId>\n+                  <artifactId>wssample</artifactId>\n+                  <type>war</type>\n+                  <properties>\n+                    <context>wssample</context>\n+                  </properties>\n+                </deployable>\n+                <deployable>\n+                  <groupId>org.apache.syncope.fit</groupId>\n+                  <artifactId>syncope-fit-build-tools</artifactId>\n+                  <type>war</type>\n+                  <properties>\n+                    <context>syncope-fit-build-tools</context>\n+                  </properties>\n+                </deployable>\n                 <deployable>\n                   <location>../core/target/syncope</location>\n                   <properties>"},{"sha":"d45c223e4153c44ce0b3a398bafe6953c3e913c6","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -46,6 +46,12 @@ under the License.\n       <artifactId>jstl</artifactId>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>${groupId}</groupId>\n+      <artifactId>common</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n       <artifactId>syncope-core-rest-cxf</artifactId>"},{"sha":"0559bf0b3dc92489ac0901a3caea960c447ffcf8","filename":"archetype/src/main/resources/archetype-resources/pom.xml","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -39,6 +39,12 @@ under the License.\n \n   <dependencyManagement>\n     <dependencies>\n+      <dependency>  \n+        <groupId>org.apache.syncope.common</groupId>\n+        <artifactId>syncope-common-lib</artifactId>\n+        <version>${syncope.version}</version>\n+      </dependency>\n+      \n       <dependency>\n         <groupId>org.apache.syncope.core</groupId>\n         <artifactId>syncope-core-rest-cxf</artifactId>\n@@ -71,7 +77,7 @@ under the License.\n     \n   <build>\n     \n-    <!-- Disable legal check for generated projects: see SYNCOPE-84 -->\n+    <!-- Disable checks for generated projects -->\n     <plugins>\n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>\n@@ -99,10 +105,28 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <configuration>\n+          <configLocation>sun_checks.xml</configLocation>\n+          <targetJdk>${targetJdk}</targetJdk>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>check</goal>\n+            </goals>\n+            <phase>none</phase>\n+          </execution>\n+        </executions>\n+      </plugin>\n     </plugins>\n   </build>\n     \n   <modules>\n+    <module>common</module>\n     <module>core</module>\n     <module>console</module>\n   </modules>"},{"sha":"4145d2a9e41984ea812c061bf1be1247cf21ef7b","filename":"archetype/src/main/resources/meta-pom.xml","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -43,6 +43,12 @@ under the License.\n \n   <dependencyManagement>\n     <dependencies>\n+      <dependency>  \n+        <groupId>org.apache.syncope.common</groupId>\n+        <artifactId>syncope-common-lib</artifactId>\n+        <version>${syncope.version}</version>\n+      </dependency>\n+      \n       <dependency>\n         <groupId>org.apache.syncope.core</groupId>\n         <artifactId>syncope-core-rest-cxf</artifactId>\n@@ -75,7 +81,7 @@ under the License.\n     \n   <build>\n     \n-    <!-- Disable legal check for generated projects: see SYNCOPE-84 -->\n+    <!-- Disable checks for generated projects -->\n     <plugins>\n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>\n@@ -103,10 +109,28 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <configuration>\n+          <configLocation>sun_checks.xml</configLocation>\n+          <targetJdk>${targetJdk}</targetJdk>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>check</goal>\n+            </goals>\n+            <phase>none</phase>\n+          </execution>\n+        </executions>\n+      </plugin>\n     </plugins>\n   </build>\n     \n   <modules>\n+    <module>common</module>\n     <module>core</module>\n     <module>console</module>\n   </modules>"},{"sha":"652e4433940119c947a89cf99b2828735b9b46c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -66,14 +66,15 @@ public void create(final ConnInstanceTO connectorTO) {\n     /**\n      * Load an already existent connector by its name.\n      *\n-     * @param connectorInstanceId the id\n+     * @param key the id\n      * @return ConnInstanceTO\n      */\n-    public ConnInstanceTO read(final Long connectorInstanceId) {\n+    public ConnInstanceTO read(final Long key) {\n         ConnInstanceTO connectorTO = null;\n \n         try {\n-            connectorTO = getService(ConnectorService.class).read(connectorInstanceId);\n+            connectorTO = getService(ConnectorService.class).\n+                    read(key, SyncopeConsoleSession.get().getLocale().toString());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a connector\", e);\n         }\n@@ -88,10 +89,11 @@ public void update(final ConnInstanceTO connectorTO) {\n         getService(ConnectorService.class).update(connectorTO);\n     }\n \n-    public ConnInstanceTO delete(final Long id) {\n-        ConnInstanceTO instanceTO = getService(ConnectorService.class).read(id);\n-        getService(ConnectorService.class).delete(id);\n-        return instanceTO;\n+    public ConnInstanceTO delete(final Long key) {\n+        ConnInstanceTO connectorTO = getService(ConnectorService.class).\n+                read(key, SyncopeConsoleSession.get().getLocale().toString());\n+        getService(ConnectorService.class).delete(key);\n+        return connectorTO;\n     }\n \n     public List<ConnBundleTO> getAllBundles() {"},{"sha":"66da67c71f5900a8bca8c1b29409575f6cfe662e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -108,23 +108,28 @@ List<ConnIdObjectClass> getSupportedObjectClasses(\n      * Returns connector instance with matching key.\n      *\n      * @param key connector instance key to be read\n+     * @param lang language to select property keys, null for default (English).\n+     * An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.\n      * @return connector instance with matching key\n      */\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ConnInstanceTO read(@NotNull @PathParam(\"key\") Long key);\n+    ConnInstanceTO read(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"lang\") String lang);\n \n     /**\n      * Returns connector instance for matching resource.\n      *\n      * @param resourceName resource name to be used for connector lookup\n+     * @param lang language to select property keys, null for default (English).\n+     * An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.\n      * @return connector instance for matching resource\n      */\n     @GET\n     @Path(\"byResource/{resourceName}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ConnInstanceTO readByResource(@NotNull @PathParam(\"resourceName\") String resourceName);\n+    ConnInstanceTO readByResource(\n+            @NotNull @PathParam(\"resourceName\") String resourceName, @QueryParam(\"lang\") String lang);\n \n     /**\n      * Returns a list of all connector instances with property keys in the matching language."},{"sha":"33195796999ef39f9ea0a066164fbdb51a01efec","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":33,"deletions":31,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -26,7 +26,6 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.PredicateUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -108,10 +107,10 @@ public ConnInstanceTO update(final ConnInstanceTO connInstanceTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_DELETE + \"')\")\n-    public ConnInstanceTO delete(final Long connInstanceId) {\n-        ConnInstance connInstance = connInstanceDAO.find(connInstanceId);\n+    public ConnInstanceTO delete(final Long connInstanceKey) {\n+        ConnInstance connInstance = connInstanceDAO.find(connInstanceKey);\n         if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + connInstanceId + \"'\");\n+            throw new NotFoundException(\"Connector '\" + connInstanceKey + \"'\");\n         }\n \n         if (!connInstance.getResources().isEmpty()) {\n@@ -125,43 +124,44 @@ public ConnInstanceTO delete(final Long connInstanceId) {\n \n         ConnInstanceTO connToDelete = binder.getConnInstanceTO(connInstance);\n \n-        connInstanceDAO.delete(connInstanceId);\n+        connInstanceDAO.delete(connInstanceKey);\n \n         return connToDelete;\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_LIST + \"')\")\n     @Transactional(readOnly = true)\n     public List<ConnInstanceTO> list(final String lang) {\n-        if (StringUtils.isBlank(lang)) {\n-            CurrentLocale.set(Locale.ENGLISH);\n-        } else {\n-            CurrentLocale.set(new Locale(lang));\n-        }\n+        CurrentLocale.set(StringUtils.isBlank(lang) ? Locale.ENGLISH : new Locale(lang));\n \n-        return CollectionUtils.collect(IteratorUtils.filteredIterator(connInstanceDAO.findAll().iterator(),\n-                PredicateUtils.notNullPredicate()), new Transformer<ConnInstance, ConnInstanceTO>() {\n+        List<ConnInstanceTO> result = CollectionUtils.collect(connInstanceDAO.findAll().iterator(),\n+                new Transformer<ConnInstance, ConnInstanceTO>() {\n \n                     @Override\n-                    public ConnInstanceTO transform(final ConnInstance input) {\n+                    public ConnInstanceTO transform(final ConnInstance connInstance) {\n                         ConnInstanceTO result = null;\n                         try {\n-                            result = binder.getConnInstanceTO(input);\n+                            result = binder.getConnInstanceTO(connInstance);\n                         } catch (NotFoundException e) {\n-                            LOG.error(\"Connector '{}#{}' not found\", input.getBundleName(), input.getVersion());\n+                            LOG.error(\"Connector '{}#{}' not found\",\n+                                    connInstance.getBundleName(), connInstance.getVersion());\n                         }\n \n                         return result;\n                     }\n                 }, new ArrayList<ConnInstanceTO>());\n+        CollectionUtils.filter(result, PredicateUtils.notNullPredicate());\n+        return result;\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public ConnInstanceTO read(final Long connInstanceId) {\n-        ConnInstance connInstance = connInstanceDAO.find(connInstanceId);\n+    public ConnInstanceTO read(final Long connInstanceKey, final String lang) {\n+        CurrentLocale.set(StringUtils.isBlank(lang) ? Locale.ENGLISH : new Locale(lang));\n+\n+        ConnInstance connInstance = connInstanceDAO.find(connInstanceKey);\n         if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + connInstanceId + \"'\");\n+            throw new NotFoundException(\"Connector '\" + connInstanceKey + \"'\");\n         }\n \n         return binder.getConnInstanceTO(connInstance);\n@@ -229,8 +229,8 @@ public List<String> getSupportedObjectClasses(final ConnInstanceTO connInstanceT\n         }\n \n         // consider the possibility to receive overridden properties only\n-        final Set<ConnConfProperty> conf = binder.mergeConnConfProperties(connInstanceTO.getConfiguration(),\n-                connInstance.getConfiguration());\n+        Set<ConnConfProperty> conf =\n+                binder.mergeConnConfProperties(connInstanceTO.getConfiguration(), connInstance.getConfiguration());\n \n         // We cannot use Spring bean because this method could be used during resource definition or modification:\n         // bean couldn't exist or couldn't be updated.\n@@ -247,14 +247,14 @@ public List<String> getSupportedObjectClasses(final ConnInstanceTO connInstanceT\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public List<ConnConfProperty> getConfigurationProperties(final Long connInstanceId) {\n+    public List<ConnConfProperty> getConfigurationProperties(final Long connInstanceKey) {\n \n-        ConnInstance connInstance = connInstanceDAO.find(connInstanceId);\n+        ConnInstance connInstance = connInstanceDAO.find(connInstanceKey);\n         if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + connInstanceId + \"'\");\n+            throw new NotFoundException(\"Connector '\" + connInstanceKey + \"'\");\n         }\n \n-        return new ArrayList<ConnConfProperty>(connInstance.getConfiguration());\n+        return new ArrayList<>(connInstance.getConfiguration());\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_READ + \"')\")\n@@ -277,7 +277,9 @@ public boolean check(final ConnInstanceTO connInstanceTO) {\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.CONNECTOR_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public ConnInstanceTO readByResource(final String resourceName) {\n+    public ConnInstanceTO readByResource(final String resourceName, final String lang) {\n+        CurrentLocale.set(StringUtils.isBlank(lang) ? Locale.ENGLISH : new Locale(lang));\n+\n         ExternalResource resource = resourceDAO.find(resourceName);\n         if (resource == null) {\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n@@ -296,21 +298,21 @@ public void reload() {\n     protected ConnInstanceTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long id = null;\n+        Long key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n-            for (int i = 0; id == null && i < args.length; i++) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n                 if (args[i] instanceof Long) {\n-                    id = (Long) args[i];\n+                    key = (Long) args[i];\n                 } else if (args[i] instanceof ConnInstanceTO) {\n-                    id = ((ConnInstanceTO) args[i]).getKey();\n+                    key = ((ConnInstanceTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((id != null) && !id.equals(0L)) {\n+        if ((key != null) && !key.equals(0L)) {\n             try {\n-                return binder.getConnInstanceTO(connInstanceDAO.find(id));\n+                return binder.getConnInstanceTO(connInstanceDAO.find(key));\n             } catch (Throwable ignore) {\n                 LOG.debug(\"Unresolved reference\", ignore);\n                 throw new UnresolvedReferenceException(ignore);"},{"sha":"50e7b065fb75f9801898a9743d46e249e1814d44","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -558,7 +558,7 @@ under the License.\n                 location=\"${connid.location}\"\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n-                jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"blockSize\",\"displayName\":\"Block Size\",\"helpMessage\":\"The maximum number of accounts that can be in a block when retrieving accounts in blocks.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"useBlocks\",\"displayName\":\"Use Blocks\",\"helpMessage\":\"When performing operations on large numbers of accounts, the accounts are processed in blocks to reduce the amount of memory used by the operation. Select this option to process accounts in blocks.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"usePagedResultControl\",\"displayName\":\"Use Paged Result Control\",\"helpMessage\":\"When enabled, the LDAP Paged Results control is preferred over the VLV control when retrieving accounts.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"truemaintainLdapGroupMembership\"]}]'/>\n+                jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"blockSize\",\"displayName\":\"Block Size\",\"helpMessage\":\"The maximum number of accounts that can be in a block when retrieving accounts in blocks.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"useBlocks\",\"displayName\":\"Use Blocks\",\"helpMessage\":\"When performing operations on large numbers of accounts, the accounts are processed in blocks to reduce the amount of memory used by the operation. Select this option to process accounts in blocks.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"usePagedResultControl\",\"displayName\":\"Use Paged Result Control\",\"helpMessage\":\"When enabled, the LDAP Paged Results control is preferred over the VLV control when retrieving accounts.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_DELETE\"/>"},{"sha":"866f41fc9870b0e79ad45abfe9d6625ba299556b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -128,13 +128,13 @@ private void initLocal(final URI location) {\n \n     private void initRemote(final URI location) {\n         // 1. Extract conf params for remote connection from given URI\n-        final String host = location.getHost();\n-        final int port = location.getPort();\n-        final GuardedString key = new GuardedString(location.getUserInfo().toCharArray());\n-        final boolean useSSL = location.getScheme().equals(\"connids\");\n+        String host = location.getHost();\n+        int port = location.getPort();\n+        GuardedString key = new GuardedString(location.getUserInfo().toCharArray());\n+        boolean useSSL = location.getScheme().equals(\"connids\");\n \n-        final List<TrustManager> trustManagers = new ArrayList<>();\n-        final String[] params = StringUtils.isBlank(location.getQuery()) ? null : location.getQuery().split(\"&\");\n+        List<TrustManager> trustManagers = new ArrayList<>();\n+        String[] params = StringUtils.isBlank(location.getQuery()) ? null : location.getQuery().split(\"&\");\n         if (params != null && params.length > 0) {\n             final String[] trustAllCerts = params[0].split(\"=\");\n             if (trustAllCerts != null && trustAllCerts.length > 1"},{"sha":"8f7b5032e777f60e95d9424b5c250fabf0151bbc","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -102,13 +102,13 @@ public List<ConnInstanceTO> list(final String lang) {\n     }\n \n     @Override\n-    public ConnInstanceTO read(final Long key) {\n-        return logic.read(key);\n+    public ConnInstanceTO read(final Long key, final String lang) {\n+        return logic.read(key, lang);\n     }\n \n     @Override\n-    public ConnInstanceTO readByResource(final String resourceName) {\n-        return logic.readByResource(resourceName);\n+    public ConnInstanceTO readByResource(final String resourceName, final String lang) {\n+        return logic.readByResource(resourceName, lang);\n     }\n \n     @Override"},{"sha":"3352720d9708a16e752557888ab3eba94e3ae157","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/H2StartStopListener.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -36,9 +36,6 @@\n  */\n public class H2StartStopListener implements ServletContextListener {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(H2StartStopListener.class);\n \n     private static final String H2_TESTDB = \"h2TestDb\";"},{"sha":"4e5d5e960c14a4548b6792a15770717fa8da180e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -22,6 +22,7 @@\n \n import java.io.InputStream;\n import java.net.URI;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.Properties;\n import java.util.UUID;\n@@ -403,7 +404,7 @@ protected InitialDirContext getLdapResourceDirContext(final String bindDn, final\n             throws NamingException {\n         ResourceTO ldapRes = resourceService.read(RESOURCE_NAME_LDAP);\n         final Map<String, ConnConfProperty> ldapConnConf =\n-                connectorService.read(ldapRes.getConnector()).getConfigurationMap();\n+                connectorService.read(ldapRes.getConnector(), Locale.ENGLISH.getLanguage()).getConfigurationMap();\n \n         Properties env = new Properties();\n         env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");"},{"sha":"52ee2ac8c492f7cb35b58ed1bfddadcb242a52e5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":27,"deletions":24,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -32,6 +32,7 @@\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n@@ -115,7 +116,7 @@ public void createWithException() {\n     @Test\n     public void create() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n-        connectorTO.setLocation(connectorService.read(100L).getLocation());\n+        connectorTO.setLocation(connectorService.read(100L, Locale.ENGLISH.getLanguage()).getLocation());\n         connectorTO.setVersion(connidSoapVersion);\n         connectorTO.setConnectorName(\"net.tirasa.connid.bundles.soap.WebServiceConnector\");\n         connectorTO.setBundleName(\"net.tirasa.connid.bundles.soap\");\n@@ -183,7 +184,7 @@ public void create() {\n \n         try {\n             connectorService.update(actual);\n-            actual = connectorService.read(actual.getKey());\n+            actual = connectorService.read(actual.getKey(), Locale.ENGLISH.getLanguage());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"update failed\", e);\n             t = e;\n@@ -207,7 +208,7 @@ public void create() {\n \n         // check the non existence\n         try {\n-            connectorService.read(actual.getKey());\n+            connectorService.read(actual.getKey(), Locale.ENGLISH.getLanguage());\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n@@ -256,11 +257,11 @@ public void update() {\n         connectorTO.getConfiguration().addAll(conf);\n \n         connectorService.update(connectorTO);\n-        ConnInstanceTO actual = connectorService.read(connectorTO.getKey());\n+        ConnInstanceTO actual = connectorService.read(connectorTO.getKey(), Locale.ENGLISH.getLanguage());\n \n         assertNotNull(actual);\n \n-        actual = connectorService.read(actual.getKey());\n+        actual = connectorService.read(actual.getKey(), Locale.ENGLISH.getLanguage());\n \n         assertNotNull(actual);\n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n@@ -287,7 +288,7 @@ public void issueSYNCOPE10() {\n         // Copy resource and connector in order to create new objects.\n         // ----------------------------------\n         // Retrieve a connector instance template.\n-        ConnInstanceTO connInstanceTO = connectorService.read(103L);\n+        ConnInstanceTO connInstanceTO = connectorService.read(103L, Locale.ENGLISH.getLanguage());\n         assertNotNull(connInstanceTO);\n \n         // check for resource\n@@ -338,7 +339,8 @@ public void issueSYNCOPE10() {\n         // ----------------------------------\n         // Check for spring bean.\n         // ----------------------------------\n-        ConnInstanceTO connInstanceBean = connectorService.readByResource(resourceTO.getKey());\n+        ConnInstanceTO connInstanceBean = connectorService.readByResource(\n+                resourceTO.getKey(), Locale.ENGLISH.getLanguage());\n         assertNotNull(connInstanceBean);\n         assertFalse(connInstanceBean.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n         // ----------------------------------\n@@ -349,12 +351,12 @@ public void issueSYNCOPE10() {\n         connInstanceTO.getCapabilities().add(ConnectorCapability.AUTHENTICATE);\n \n         connectorService.update(connInstanceTO);\n-        ConnInstanceTO actual = connectorService.read(connInstanceTO.getKey());\n+        ConnInstanceTO actual = connectorService.read(connInstanceTO.getKey(), Locale.ENGLISH.getLanguage());\n         assertNotNull(actual);\n         assertTrue(connInstanceTO.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n \n         // check for spring bean update\n-        connInstanceBean = connectorService.readByResource(resourceTO.getKey());\n+        connInstanceBean = connectorService.readByResource(resourceTO.getKey(), Locale.ENGLISH.getLanguage());\n         assertTrue(connInstanceBean.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n         // ----------------------------------\n     }\n@@ -380,13 +382,13 @@ public void list() {\n \n     @Test\n     public void read() {\n-        ConnInstanceTO connectorInstanceTO = connectorService.read(100L);\n+        ConnInstanceTO connectorInstanceTO = connectorService.read(100L, Locale.ENGLISH.getLanguage());\n         assertNotNull(connectorInstanceTO);\n     }\n \n     @Test\n     public void getBundles() {\n-        List<ConnBundleTO> bundles = connectorService.getBundles(null);\n+        List<ConnBundleTO> bundles = connectorService.getBundles(Locale.ENGLISH.getLanguage());\n         assertNotNull(bundles);\n         assertFalse(bundles.isEmpty());\n         for (ConnBundleTO bundle : bundles) {\n@@ -403,7 +405,7 @@ public void getConnectorConfiguration() {\n \n     @Test\n     public void checkHiddenProperty() {\n-        ConnInstanceTO connInstanceTO = connectorService.read(100L);\n+        ConnInstanceTO connInstanceTO = connectorService.read(100L, Locale.ENGLISH.getLanguage());\n \n         boolean check = false;\n \n@@ -529,7 +531,7 @@ public void validate() {\n \n     @Test\n     public void getSchemaNames() {\n-        ConnInstanceTO conn = connectorService.read(101L);\n+        ConnInstanceTO conn = connectorService.read(101L, Locale.ENGLISH.getLanguage());\n \n         List<PlainSchemaTO> schemaNames = connectorService.getSchemaNames(conn.getKey(), conn, true);\n         assertNotNull(schemaNames);\n@@ -542,7 +544,7 @@ public void getSchemaNames() {\n         assertNotNull(schemaNames);\n         assertEquals(1, schemaNames.size());\n \n-        conn = connectorService.read(104L);\n+        conn = connectorService.read(104L, Locale.ENGLISH.getLanguage());\n \n         // to be used with overridden properties\n         conn.getConfiguration().clear();\n@@ -554,7 +556,7 @@ public void getSchemaNames() {\n \n     @Test\n     public void getSupportedObjectClasses() {\n-        ConnInstanceTO ldap = connectorService.read(105L);\n+        ConnInstanceTO ldap = connectorService.read(105L, Locale.ENGLISH.getLanguage());\n         assertNotNull(ldap);\n \n         List<ConnIdObjectClass> objectClasses = connectorService.getSupportedObjectClasses(ldap.getKey(), ldap);\n@@ -565,7 +567,7 @@ public void getSupportedObjectClasses() {\n         assertTrue(objectClasses.contains(\n                 ConnIdObjectClass.getInstance(ConnIdObjectClass.class, ObjectClass.GROUP_NAME)));\n \n-        ConnInstanceTO csv = connectorService.read(104L);\n+        ConnInstanceTO csv = connectorService.read(104L, Locale.ENGLISH.getLanguage());\n         assertNotNull(csv);\n \n         objectClasses = connectorService.getSupportedObjectClasses(csv.getKey(), csv);\n@@ -582,7 +584,7 @@ public void issueSYNCOPE112() {\n         // ----------------------------------------\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n-        connectorTO.setLocation(connectorService.read(100L).getLocation());\n+        connectorTO.setLocation(connectorService.read(100L, Locale.ENGLISH.getLanguage()).getLocation());\n \n         // set connector version\n         connectorTO.setVersion(connidSoapVersion);\n@@ -688,7 +690,7 @@ public void bulkAction() {\n         BulkAction bulkAction = new BulkAction();\n         bulkAction.setType(BulkAction.Type.DELETE);\n \n-        ConnInstanceTO conn = connectorService.read(101L);\n+        ConnInstanceTO conn = connectorService.read(101L, Locale.ENGLISH.getLanguage());\n \n         conn.setKey(0);\n         conn.setDisplayName(\"forBulk1\");\n@@ -703,22 +705,22 @@ public void bulkAction() {\n \n         Iterator<String> iter = bulkAction.getTargets().iterator();\n \n-        assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n-        assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n+        assertNotNull(connectorService.read(Long.valueOf(iter.next()), Locale.ENGLISH.getLanguage()));\n+        assertNotNull(connectorService.read(Long.valueOf(iter.next()), Locale.ENGLISH.getLanguage()));\n \n         connectorService.bulk(bulkAction);\n \n         iter = bulkAction.getTargets().iterator();\n \n         try {\n-            connectorService.read(Long.valueOf(iter.next()));\n+            connectorService.read(Long.valueOf(iter.next()), Locale.ENGLISH.getLanguage());\n             fail();\n         } catch (SyncopeClientException e) {\n             assertNotNull(e);\n         }\n \n         try {\n-            connectorService.read(Long.valueOf(iter.next()));\n+            connectorService.read(Long.valueOf(iter.next()), Locale.ENGLISH.getLanguage());\n             fail();\n         } catch (SyncopeClientException e) {\n             assertNotNull(e);\n@@ -727,13 +729,14 @@ public void bulkAction() {\n \n     @Test\n     public void issueSYNCOPE605() {\n-        ConnInstanceTO connectorInstanceTO = connectorService.read(103L);\n+        ConnInstanceTO connectorInstanceTO = connectorService.read(103L, Locale.ENGLISH.getLanguage());\n         assertTrue(connectorInstanceTO.getCapabilities().isEmpty());\n \n         connectorInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n         connectorService.update(connectorInstanceTO);\n \n-        ConnInstanceTO updatedCapabilities = connectorService.read(connectorInstanceTO.getKey());\n+        ConnInstanceTO updatedCapabilities = connectorService.read(\n+                connectorInstanceTO.getKey(), Locale.ENGLISH.getLanguage());\n         assertNotNull(updatedCapabilities.getCapabilities());\n         assertTrue(updatedCapabilities.getCapabilities().size() == 1);\n     }"},{"sha":"c78f47be69ea97b3d9347e90801b8bc94422d3af","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/MultitenancyITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -26,6 +26,7 @@\n \n import java.security.AccessControlException;\n import java.util.List;\n+import java.util.Locale;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -127,7 +128,7 @@ public void createUser() {\n     @Test\n     public void createResourceAndSync() {\n         // read connector\n-        ConnInstanceTO conn = adminClient.getService(ConnectorService.class).read(100L);\n+        ConnInstanceTO conn = adminClient.getService(ConnectorService.class).read(100L, Locale.ENGLISH.getLanguage());\n         assertNotNull(conn);\n         assertEquals(\"LDAP\", conn.getDisplayName());\n "},{"sha":"324a10d2f45dc0268656c9482e7de21b0ae021dd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -27,6 +27,7 @@\n \n import java.util.HashSet;\n import java.util.List;\n+import java.util.Locale;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -723,7 +724,8 @@ public void issueSYNCOPE313LDAP() throws Exception {\n \n         // 5. Update the LDAP Connector to retrieve passwords\n         ResourceTO ldapResource = resourceService.read(RESOURCE_NAME_LDAP);\n-        ConnInstanceTO resourceConnector = connectorService.read(ldapResource.getConnector());\n+        ConnInstanceTO resourceConnector = connectorService.read(\n+                ldapResource.getConnector(), Locale.ENGLISH.getLanguage());\n         ConnConfProperty property = resourceConnector.getConfigurationMap().get(\"retrievePasswordsWithSearch\");\n         property.getValues().clear();\n         property.getValues().add(Boolean.TRUE);"},{"sha":"56444476298b9db0dd6ad0925d1ede04bc417136","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/213fbc6077b69d13965963b19c941af0a4878856/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=213fbc6077b69d13965963b19c941af0a4878856","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collections;\n+import java.util.Locale;\n import java.util.Map;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.mod.AttrMod;\n@@ -369,16 +370,17 @@ public void issueSYNCOPE442() {\n         // 3. force cache expiring without any modification\n         // ----------------------------------------\n         String jdbcURL = null;\n-        ConnInstanceTO connInstanceBean = connectorService.readByResource(RESOURCE_NAME_DBVIRATTR);\n-        for (ConnConfProperty prop : connInstanceBean.getConfiguration()) {\n+        ConnInstanceTO connInstanceTO = connectorService.readByResource(\n+                RESOURCE_NAME_DBVIRATTR, Locale.ENGLISH.getLanguage());\n+        for (ConnConfProperty prop : connInstanceTO.getConfiguration()) {\n             if (\"jdbcUrlTemplate\".equals(prop.getSchema().getName())) {\n                 jdbcURL = prop.getValues().iterator().next().toString();\n                 prop.getValues().clear();\n                 prop.getValues().add(\"jdbc:h2:tcp://localhost:9092/xxx\");\n             }\n         }\n \n-        connectorService.update(connInstanceBean);\n+        connectorService.update(connInstanceTO);\n \n         UserMod userMod = new UserMod();\n         userMod.setKey(actual.getKey());\n@@ -416,14 +418,14 @@ public void issueSYNCOPE442() {\n         // ----------------------------------------\n         // 5. restore connector\n         // ----------------------------------------\n-        for (ConnConfProperty prop : connInstanceBean.getConfiguration()) {\n+        for (ConnConfProperty prop : connInstanceTO.getConfiguration()) {\n             if (\"jdbcUrlTemplate\".equals(prop.getSchema().getName())) {\n                 prop.getValues().clear();\n                 prop.getValues().add(jdbcURL);\n             }\n         }\n \n-        connectorService.update(connInstanceBean);\n+        connectorService.update(connInstanceTO);\n         // ----------------------------------------\n \n         actual = userService.read(actual.getKey());"}]}