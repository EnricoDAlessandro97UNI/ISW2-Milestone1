{"sha":"05e758e2f62f331cce281545f7bd81b1f98a22da","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1ZTc1OGUyZjYyZjMzMWNjZTI4MTU0NWY3YmQ4MWIxZjk4YTIyZGE=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T09:48:40Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T09:48:40Z"},"message":"SYNCOPE-231 Make AuthenticationTest rerunable\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440888 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2b6f8ebe6474b0c58a0cdd5223bb5f51a05b805e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2b6f8ebe6474b0c58a0cdd5223bb5f51a05b805e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/05e758e2f62f331cce281545f7bd81b1f98a22da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05e758e2f62f331cce281545f7bd81b1f98a22da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05e758e2f62f331cce281545f7bd81b1f98a22da","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05e758e2f62f331cce281545f7bd81b1f98a22da/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"1362a762aacec23ab4593615799b4fe232c74fcc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1362a762aacec23ab4593615799b4fe232c74fcc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1362a762aacec23ab4593615799b4fe232c74fcc"}],"stats":{"total":28,"additions":14,"deletions":14},"files":[{"sha":"09d2fb59631a5458ff45fa9f6f878662d4bce4e6","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05e758e2f62f331cce281545f7bd81b1f98a22da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05e758e2f62f331cce281545f7bd81b1f98a22da/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=05e758e2f62f331cce281545f7bd81b1f98a22da","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.security.AccessControlException;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -82,9 +83,11 @@ public void testUserSchemaAuthorization() {\n         authRoleTO = getObject(response, RoleTO.class, roleService);\n         assertNotNull(authRoleTO);\n \n+        String schemaName = \"authTestSchema\" + getUUIDString();\n+\n         // 1. create a schema (as admin)\n         SchemaTO schemaTO = new SchemaTO();\n-        schemaTO.setName(\"authTestSchema\");\n+        schemaTO.setName(schemaName);\n         schemaTO.setMandatoryCondition(\"false\");\n         schemaTO.setType(SchemaType.String);\n \n@@ -107,33 +110,30 @@ public void testUserSchemaAuthorization() {\n         assertNotNull(userTO);\n \n         // 3. read the schema created above (as admin) - success\n-        schemaTO = schemaService.read(AttributableType.USER, SchemaService.SchemaType.NORMAL, \"authTestSchema\");\n+        schemaTO = schemaService.read(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaName);\n         assertNotNull(schemaTO);\n \n         // 4. read the schema created above (as user) - success\n         SchemaService schemaService2 = setupCredentials(schemaService, SchemaService.class, userTO.getUsername(), \"password123\");\n \n-        schemaTO = schemaService2.read(AttributableType.USER, SchemaService.SchemaType.NORMAL, \"authTestSchema\");\n+        schemaTO = schemaService2.read(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaName);\n         assertNotNull(schemaTO);\n \n         // 5. update the schema create above (as user) - failure\n-        HttpClientErrorException exception = null;\n         try {\n-            schemaService2.update(AttributableType.ROLE, SchemaService.SchemaType.NORMAL, schemaTO.getName(), schemaTO);\n+            schemaService2.update(AttributableType.ROLE, SchemaService.SchemaType.NORMAL, schemaName, schemaTO);\n+            fail(\"Schemaupdate as user schould not work\");\n         } catch (HttpClientErrorException e) {\n-            exception = e;\n+            assertNotNull(e);\n+            assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n+        } catch (AccessControlException e) {\n+            // CXF Service will throw this exception\n+            assertNotNull(e);\n         }\n-        assertNotNull(exception);\n-        assertEquals(HttpStatus.FORBIDDEN, exception.getStatusCode());\n \n         // reset admin credentials for restTemplate\n         super.resetRestTemplate();\n-\n-        userTO = userService.read(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertNotNull(userTO.getLastLoginDate());\n-        assertEquals(Integer.valueOf(0), userTO.getFailedLogins());\n+        assertEquals(0, getFailedLogins(userService, userTO.getId()));\n     }\n \n     @Test"}]}