{"sha":"95709c9bd23e28e0564f93d663de313c4c35caf1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk1NzA5YzliZDIzZTI4ZTA1NjRmOTNkNjYzZGUzMTNjNGMzNWNhZjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-22T16:44:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-22T16:44:25Z"},"message":"[SYNCOPE-759] Fix","tree":{"sha":"41f05961b4447b52c09d30a3ed65c8dac6c00a5a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/41f05961b4447b52c09d30a3ed65c8dac6c00a5a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/95709c9bd23e28e0564f93d663de313c4c35caf1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95709c9bd23e28e0564f93d663de313c4c35caf1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/95709c9bd23e28e0564f93d663de313c4c35caf1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95709c9bd23e28e0564f93d663de313c4c35caf1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"02abafa83422c5b657129dd587610556a0d8623a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02abafa83422c5b657129dd587610556a0d8623a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/02abafa83422c5b657129dd587610556a0d8623a"}],"stats":{"total":41,"additions":39,"deletions":2},"files":[{"sha":"180035f12ba70d0c4f25076345c77e12faf027be","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeClassLogic.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeClassLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeClassLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeClassLogic.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -25,10 +25,13 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n+import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.provisioning.api.data.AnyTypeClassDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -69,6 +72,14 @@ public AnyTypeClassTO transform(final AnyTypeClass input) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANYTYPECLASS_CREATE + \"')\")\n     public AnyTypeClassTO create(final AnyTypeClassTO anyTypeClassTO) {\n+        if (StringUtils.isBlank(anyTypeClassTO.getKey())) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(AnyTypeClass.class.getSimpleName() + \" name\");\n+            throw sce;\n+        }\n+        if (anyTypeClassDAO.find(anyTypeClassTO.getKey()) != null) {\n+            throw new DuplicateException(anyTypeClassTO.getKey());\n+        }\n         return binder.getAnyTypeClassTO(anyTypeClassDAO.save(binder.create(anyTypeClassTO)));\n     }\n "},{"sha":"697fb070336c9cd5b622c24abda276b35e6aaea1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeLogic.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.core.misc.EntitlementsHolder;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.provisioning.api.data.AnyTypeDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -72,6 +73,15 @@ public AnyTypeTO transform(final AnyType input) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANYTYPE_CREATE + \"')\")\n     public AnyTypeTO create(final AnyTypeTO anyTypeTO) {\n+        if (StringUtils.isBlank(anyTypeTO.getKey())) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(AnyType.class.getSimpleName() + \" name\");\n+            throw sce;\n+        }\n+        if (anyTypeDAO.find(anyTypeTO.getKey()) != null) {\n+            throw new DuplicateException(anyTypeTO.getKey());\n+        }\n+\n         AnyTypeTO result = binder.getAnyTypeTO(anyTypeDAO.save(binder.create(anyTypeTO)));\n         EntitlementsHolder.getInstance().addFor(result.getKey());\n         return result;"},{"sha":"40c09f1a86dc2c1fb32089cde0a5dc2ecb26d88c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DuplicateException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDuplicateException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDuplicateException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDuplicateException.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n /**\n- * Thrown when something is not found.\n+ * Thrown when someone is attempting to create an entity with the same key of another existing entity.\n  */\n public class DuplicateException extends RuntimeException {\n "},{"sha":"7bc93491530a84710dea143da8d1907638ab2211","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeClassITCase.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -134,4 +134,20 @@ public void deleteSchema() {\n         assertNotNull(newClass);\n         assertFalse(newClass.getPlainSchemas().contains(newSchema.getKey()));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE759() {\n+        AnyTypeClassTO minimalGroup = anyTypeClassService.read(\"minimal group\");\n+        assertNotNull(minimalGroup);\n+\n+        AnyTypeClassTO newAnyTypeClass = new AnyTypeClassTO();\n+        newAnyTypeClass.setKey(minimalGroup.getKey());\n+\n+        try {\n+            anyTypeClassService.create(newAnyTypeClass);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n+        }\n+    }\n }"},{"sha":"2679196b7de8caad42671c50d4a4272bdb9b8035","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ExceptionMapperITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FExceptionMapperITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FExceptionMapperITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FExceptionMapperITCase.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -67,7 +67,7 @@ public void uniqueSchemaConstraint() {\n         createSchema(SchemaType.PLAIN, schemaTO);\n \n         AnyTypeClassTO typeClass = new AnyTypeClassTO();\n-        typeClass.setKey(\"camelAttribute\");\n+        typeClass.setKey(\"camelAttribute\" + getUUIDString());\n         typeClass.getPlainSchemas().add(schemaTO.getKey());\n         anyTypeClassService.create(typeClass);\n "}]}