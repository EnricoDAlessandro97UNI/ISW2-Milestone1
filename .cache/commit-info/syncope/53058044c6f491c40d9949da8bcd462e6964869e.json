{"sha":"53058044c6f491c40d9949da8bcd462e6964869e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUzMDU4MDQ0YzZmNDkxYzQwZDk5NDlkYThiY2Q0NjJlNjk2NDg2OWU=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-25T15:43:19Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-25T15:43:19Z"},"message":"SYNCOPE-231 Adding UserRequestService for CXF\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1438558 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"31fca804a59e2ae3b2470dc20626269d1cf9fdab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/31fca804a59e2ae3b2470dc20626269d1cf9fdab"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/53058044c6f491c40d9949da8bcd462e6964869e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/53058044c6f491c40d9949da8bcd462e6964869e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/53058044c6f491c40d9949da8bcd462e6964869e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/53058044c6f491c40d9949da8bcd462e6964869e/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"c28cdb8f21cd3bf1e6529adbeea24f410effde26","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c28cdb8f21cd3bf1e6529adbeea24f410effde26","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c28cdb8f21cd3bf1e6529adbeea24f410effde26"}],"stats":{"total":275,"additions":226,"deletions":49},"files":[{"sha":"121dc95a14f8aaca4a4bd005883c7cf5b899ff7b","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserRequestServiceProxy.java","status":"modified","additions":24,"deletions":17,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -18,38 +18,45 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n+import java.net.URI;\r\n import java.util.Arrays;\r\n import java.util.List;\r\n-import org.apache.syncope.common.mod.UserMod;\r\n+\r\n+import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.core.Response;\r\n+\r\n import org.apache.syncope.common.services.UserRequestService;\r\n import org.apache.syncope.common.to.UserRequestTO;\r\n-import org.apache.syncope.common.to.UserTO;\r\n+import org.apache.syncope.common.types.UserRequestType;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class UserRequestServiceProxy extends SpringServiceProxy implements UserRequestService {\r\n \r\n     public UserRequestServiceProxy(final String baseUrl, final RestTemplate restTemplate) {\r\n         super(baseUrl, restTemplate);\r\n     }\r\n-\r\n-    @Override\r\n-    public boolean isCreateAllowed() {\r\n-        return getRestTemplate().getForObject(baseUrl + \"user/request/create/allowed\", Boolean.class);\r\n-    }\r\n-\r\n+    \r\n     @Override\r\n-    public UserRequestTO create(final UserTO userTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"user/request/create\", userTO, UserRequestTO.class);\r\n+    public Response getOptions() {\r\n+        return Response.ok().allow(\"GET\", \"POST\", \"DELETE\").header(SYNCOPE_CREATE_ALLOWED, isCreateAllowed()).build();\r\n     }\r\n \r\n-    @Override\r\n-    public UserRequestTO update(final UserMod userMod) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"user/request/update\", userMod, UserRequestTO.class);\r\n+    public boolean isCreateAllowed() {\r\n+        return getRestTemplate().getForObject(baseUrl + \"user/request/create/allowed\", Boolean.class);\r\n     }\r\n \r\n     @Override\r\n-    public UserRequestTO delete(final Long userId) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"user/request/delete/{userId}\", UserRequestTO.class, userId);\r\n+    public Response create(final UserRequestTO userRequestTO) {\r\n+        UserRequestTO created = null;\r\n+        if (userRequestTO.getType() == UserRequestType.CREATE) {\r\n+            created = getRestTemplate().postForObject(baseUrl + \"user/request/create\", userRequestTO.getUserTO(), UserRequestTO.class);\r\n+        } else if (userRequestTO.getType() == UserRequestType.UPDATE) {\r\n+            created = getRestTemplate().postForObject(baseUrl + \"user/request/update\", userRequestTO.getUserMod(), UserRequestTO.class);\r\n+        } else if (userRequestTO.getType() == UserRequestType.DELETE) {\r\n+            created = getRestTemplate().getForObject(baseUrl + \"user/request/delete/{userId}\", UserRequestTO.class, userRequestTO.getUserId());\r\n+        }\r\n+        URI location = URI.create(baseUrl + \"user/request/read/\" + created.getId());\r\n+        return Response.created(location).entity(created.getId()).build();\r\n     }\r\n \r\n     @Override\r\n@@ -64,8 +71,8 @@ public UserRequestTO read(final Long requestId) {\n     }\r\n \r\n     @Override\r\n-    public UserRequestTO deleteRequest(final Long requestId) {\r\n-        return getRestTemplate().getForObject(\r\n+    public void delete(@PathParam(\"requestId\") Long requestId) {\r\n+        getRestTemplate().getForObject(\r\n                 baseUrl + \"user/request/deleteRequest/{requestId}\", UserRequestTO.class, requestId);\r\n     }\r\n }\r"},{"sha":"20489c126bc5b501c02d8913ba92dd1897eab3d4","filename":"common/src/main/java/org/apache/syncope/common/services/UserRequestService.java","status":"modified","additions":9,"deletions":16,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserRequestService.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -19,33 +19,26 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n+\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n+import javax.ws.rs.OPTIONS;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n-import org.apache.syncope.common.mod.UserMod;\r\n+import javax.ws.rs.core.Response;\r\n+\r\n import org.apache.syncope.common.to.UserRequestTO;\r\n-import org.apache.syncope.common.to.UserTO;\r\n \r\n @Path(\"requests/user\")\r\n public interface UserRequestService {\r\n+    public static final String SYNCOPE_CREATE_ALLOWED = \"Syncope-Create-Allowed\";\r\n \r\n-    @GET\r\n-    @Path(\"create/allowed\")\r\n-    boolean isCreateAllowed();\r\n-\r\n-    @POST\r\n-    @Path(\"create\")\r\n-    UserRequestTO create(UserTO userTO);\r\n-\r\n-    @POST\r\n-    @Path(\"update\")\r\n-    UserRequestTO update(UserMod userMod);\r\n+    @OPTIONS\r\n+    Response getOptions();\r\n \r\n     @POST\r\n-    @Path(\"delete\")\r\n-    UserRequestTO delete(Long userId);\r\n+    Response create(UserRequestTO userRequestTO);\r\n \r\n     @GET\r\n     List<UserRequestTO> list();\r\n@@ -56,5 +49,5 @@ public interface UserRequestService {\n \r\n     @DELETE\r\n     @Path(\"{requestId}\")\r\n-    UserRequestTO deleteRequest(@PathParam(\"requestId\") Long requestId);\r\n+    void delete(@PathParam(\"requestId\") Long requestId);\r\n }\r"},{"sha":"cecc952f3c6c1ef8be1b33c5136a904c30537b19","filename":"common/src/main/java/org/apache/syncope/common/to/UserRequestOptionsTO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestOptionsTO.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+\n+@XmlRootElement\n+public class UserRequestOptionsTO {\n+    private boolean createAllowed;\n+\n+    public UserRequestOptionsTO(boolean createAllowed) {\n+        super();\n+        this.createAllowed = createAllowed;\n+    }\n+\n+    public boolean isCreateAllowed() {\n+        return createAllowed;\n+    }\n+}"},{"sha":"b20fa08e4d2eafcbf5ea02c774164a3ffe2d4831","filename":"common/src/main/java/org/apache/syncope/common/to/UserRequestTO.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserRequestTO.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -40,6 +40,36 @@ public class UserRequestTO extends AbstractBaseBean {\n     private Long userId;\r\n \r\n     private UserRequestType type;\r\n+    \r\n+    public UserRequestTO() {\r\n+    }\r\n+\r\n+    /**\r\n+     * Request to create a user\r\n+     * @param userTO\r\n+     */\r\n+    public UserRequestTO(UserTO userTO) {\r\n+        this.type = UserRequestType.CREATE;\r\n+        this.userTO = userTO;\r\n+    }\r\n+\r\n+    /**\r\n+     * Request to update a user\r\n+     * @param userMod\r\n+     */\r\n+    public UserRequestTO(UserMod userMod) {\r\n+        this.userMod = userMod;\r\n+        this.type = UserRequestType.UPDATE;\r\n+    }\r\n+\r\n+    /**\r\n+     * Request to delete a user\r\n+     * @param userId\r\n+     */\r\n+    public UserRequestTO(long userId) {\r\n+        this.type = UserRequestType.DELETE;\r\n+        this.userId = userId;\r\n+    }\r\n \r\n     public long getId() {\r\n         return id;\r"},{"sha":"7986ce7b1c4728a0e0ceb60c99d3a808a535edd7","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -198,7 +198,8 @@ private String[] authenticate(final String userId, final String password) {\n     private boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {\n-            result = SyncopeSession.get().getService(UserRequestService.class).isCreateAllowed();\n+            String createAllowed = SyncopeSession.get().getService(UserRequestService.class).getOptions().getHeaderString(UserRequestService.SYNCOPE_CREATE_ALLOWED);\n+            result = Boolean.parseBoolean(createAllowed);\n         } catch (HttpClientErrorException e) {\n             LOG.error(\"While seeking if self registration is allowed\", e);\n         }"},{"sha":"edfad5f3f860d1258efd8ec82c0c2a5ace7fe077","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRequestRestClient.java","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -20,10 +20,13 @@\n \n import java.util.List;\n \n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.UserRequestService;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.UserRequestType;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -35,19 +38,31 @@ public List<UserRequestTO> list() {\n         return getService(UserRequestService.class).list();\n     }\n \n-    public UserRequestTO delete(final Long requestId) {\n-        return getService(UserRequestService.class).delete(requestId);\n+    public void delete(final Long requestId) {\n+        getService(UserRequestService.class).delete(requestId);\n     }\n \n     public UserRequestTO requestCreate(final UserTO userTO) {\n-        return getService(UserRequestService.class).create(userTO);\n+        UserRequestTO userRequestTO = new UserRequestTO();\n+        userRequestTO.setType(UserRequestType.CREATE);\n+        userRequestTO.setUserTO(userTO);\n+        Response response = getService(UserRequestService.class).create(userRequestTO);\n+        return getService(UserRequestService.class).read((Long) response.getEntity());\n     }\n \n     public UserRequestTO requestUpdate(final UserMod userMod) {\n-        return getService(UserRequestService.class).update(userMod);\n+        UserRequestTO userRequestTO = new UserRequestTO();\n+        userRequestTO.setType(UserRequestType.UPDATE);\n+        userRequestTO.setUserMod(userMod);\n+        Response response = getService(UserRequestService.class).create(userRequestTO);\n+        return getService(UserRequestService.class).read((Long) response.getEntity());\n     }\n \n     public UserRequestTO requestDelete(final Long userId) {\n-        return getService(UserRequestService.class).delete(userId);\n+        UserRequestTO userRequestTO = new UserRequestTO();\n+        userRequestTO.setType(UserRequestType.DELETE);\n+        userRequestTO.setUserId(userId);\n+        Response response = getService(UserRequestService.class).create(userRequestTO);\n+        return getService(UserRequestService.class).read((Long) response.getEntity());\n     }\n }"},{"sha":"536f603974ab5702b2c05fe6c8a1d84c7859048d","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserRequestController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -69,7 +69,7 @@ public class UserRequestController {\n     @Autowired\n     private UserRequestDataBinder dataBinder;\n \n-    private Boolean isCreateAllowedByConf() {\n+    public Boolean isCreateAllowedByConf() {\n         final SyncopeConf createRequestAllowed = confDAO.find(\"createRequest.allowed\", \"false\");\n \n         return Boolean.valueOf(createRequestAllowed.getValue());"},{"sha":"67a741dbc61c00f1a438cca8f71dbd72c03e4e0b","filename":"core/src/main/java/org/apache/syncope/core/services/UserRequestServiceImpl.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.services;\n+\n+import java.net.URI;\n+import java.util.List;\n+\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriInfo;\n+\n+import org.apache.syncope.common.services.UserRequestService;\n+import org.apache.syncope.common.to.UserRequestTO;\n+import org.apache.syncope.common.types.UserRequestType;\n+import org.apache.syncope.core.rest.controller.UserRequestController;\n+import org.apache.syncope.core.util.NotFoundException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class UserRequestServiceImpl implements UserRequestService, ContextAware {\n+\n+    @Autowired\n+    UserRequestController userRequestController;\n+\n+    private UriInfo uriInfo;\n+\n+    @Override\n+    public Response getOptions() {\n+        return Response.ok().allow(\"GET\", \"POST\", \"DELETE\")\n+                .header(SYNCOPE_CREATE_ALLOWED, userRequestController.isCreateAllowedByConf()).build();\n+    }\n+\n+    @Override\n+    public Response create(UserRequestTO userRequestTO) {\n+        try {\n+            UserRequestTO outUserRequestTO = null;\n+            if (userRequestTO.getType() == UserRequestType.CREATE) {\n+                outUserRequestTO = userRequestController.create(userRequestTO.getUserTO());\n+            } else if (userRequestTO.getType() == UserRequestType.UPDATE) {\n+                outUserRequestTO = userRequestController.update(userRequestTO.getUserMod());\n+            } else if (userRequestTO.getType() == UserRequestType.DELETE) {\n+                userRequestController.delete(userRequestTO.getUserId());\n+            }\n+            URI location = uriInfo.getAbsolutePathBuilder().path(\"\" + outUserRequestTO.getId()).build();\n+            return Response.created(location).entity(outUserRequestTO).build();\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public List<UserRequestTO> list() {\n+        return userRequestController.list();\n+    }\n+\n+    @Override\n+    public UserRequestTO read(@PathParam(\"requestId\") Long requestId) {\n+        try {\n+            return userRequestController.read(requestId);\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void delete(@PathParam(\"requestId\") Long requestId) {\n+        try {\n+            userRequestController.deleteRequest(requestId);\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void setUriInfo(UriInfo uriInfo) {\n+        this.uriInfo = uriInfo;\n+    }\n+\n+}"},{"sha":"4b1481f59e0349505329e5f2317833c5e405480a","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -75,6 +75,7 @@ under the License.\n       <ref bean=\"reportServiceImpl\"/>\n       <ref bean=\"resourceServiceImpl\"/>\n       <ref bean=\"schemaServiceImpl\"/>\n+      <ref bean=\"userRequestServiceImpl\"/>\n     </jaxrs:serviceBeans>\n     <jaxrs:resourceComparator>\n       <bean id=\"myServiceComparator\" class=\"org.apache.syncope.core.rest.utils.QueryResourceInfoComperator\"/>"},{"sha":"10af299671e3df71b9de449b83a9ccb51c2f335d","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/53058044c6f491c40d9949da8bcd462e6964869e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=53058044c6f491c40d9949da8bcd462e6964869e","patch":"@@ -69,7 +69,7 @@ public void create() {\n         // 2. get unauthorized when trying to request user create\n         SyncopeClientException exception = null;\n         try {\n-            userRequestService.create(userTO);\n+            userRequestService.create(new UserRequestTO(userTO));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -122,7 +122,7 @@ public void update() {\n         // 2. try to request user update as admin: failure\n         SyncopeClientException exception = null;\n         try {\n-            userRequestService.update(userMod);\n+            userRequestService.create(new UserRequestTO(userMod));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -135,16 +135,16 @@ public void update() {\n         // 4. update with same password: not matching password policy\n         exception = null;\n         try {\n-            userRequestService.update(userMod);\n+            userRequestService.create(new UserRequestTO(userMod));\n         } catch (SyncopeClientCompositeErrorException scce) {\n             exception = scce.getException(SyncopeClientExceptionType.InvalidSyncopeUser);\n         }\n         assertNotNull(exception);\n \n         // 5. now request user update works\n         userMod.setPassword(\"new\" + initialPassword);\n-        UserRequestTO request = userRequestService.update(userMod);\n-        assertNotNull(request);\n+        Response response = userRequestService.create(new UserRequestTO(userMod));\n+        assertEquals(org.apache.http.HttpStatus.SC_CREATED, response.getStatus());\n \n         // 6. switch back to admin\n         super.resetRestTemplate();\n@@ -174,8 +174,7 @@ public void delete() {\n         // 2. try to request user delete as admin: failure\n         SyncopeClientException exception = null;\n         try {\n-\n-            userRequestService.delete(userTO.getId());\n+            userRequestService.create(new UserRequestTO(userTO.getId()));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -186,8 +185,8 @@ public void delete() {\n         super.setupRestTemplate(userTO.getUsername(), initialPassword);\n \n         // 4. now request user delete works\n-        UserRequestTO request = userRequestService.delete(userTO.getId());\n-        assertNotNull(request);\n+        Response response = userRequestService.create(new UserRequestTO(userTO.getId()));\n+        assertEquals(org.apache.http.HttpStatus.SC_CREATED, response.getStatus());\n \n         // 5. switch back to admin\n         super.resetRestTemplate();"}]}