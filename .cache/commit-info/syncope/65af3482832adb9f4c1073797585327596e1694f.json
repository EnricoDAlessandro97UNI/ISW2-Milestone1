{"sha":"65af3482832adb9f4c1073797585327596e1694f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY1YWYzNDgyODMyYWRiOWY0YzEwNzM3OTc1ODUzMjc1OTZlMTY5NGY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-14T16:22:41Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-14T16:22:41Z"},"message":"Minor bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246087 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"02efca5a9266c76e2554a4b9236ca756a795a995","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/02efca5a9266c76e2554a4b9236ca756a795a995"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/65af3482832adb9f4c1073797585327596e1694f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65af3482832adb9f4c1073797585327596e1694f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65af3482832adb9f4c1073797585327596e1694f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65af3482832adb9f4c1073797585327596e1694f/comments","author":null,"committer":null,"parents":[{"sha":"ecad324b61ad15d98198fe61c55eeef3e9a0a7d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ecad324b61ad15d98198fe61c55eeef3e9a0a7d1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ecad324b61ad15d98198fe61c55eeef3e9a0a7d1"}],"stats":{"total":169,"additions":94,"deletions":75},"files":[{"sha":"bb495dde315b0c9da99e1102d82bf460944311ef","filename":"core/src/main/java/org/syncope/core/persistence/beans/Entitlement.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -30,7 +30,7 @@ public class Entitlement extends AbstractBaseBean {\n     private String name;\n     @Column(nullable = true)\n     private String description;\n-    @ManyToMany(fetch=FetchType.EAGER, mappedBy=\"entitlements\")\n+    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"entitlements\")\n     private Set<SyncopeRole> roles;\n \n     public String getDescription() {"},{"sha":"69d3335310dd444c2d59dca07fd3c288f87fdf70","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -38,8 +38,9 @@ public class AttributeDAOImpl extends AbstractDAOImpl\n     @Override\n     public Attribute find(long id) {\n         Attribute result = entityManager.find(Attribute.class, id);\n-        if (isDeletedOrNotManaged(result))\n+        if (isDeletedOrNotManaged(result)) {\n             result = null;\n+        }\n \n         return result;\n     }"},{"sha":"0b41ec00a09fe54b83060ddc6937641ce45bf76c","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeSchemaDAOImpl.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -16,18 +16,29 @@\n \n import java.util.List;\n import javax.persistence.Query;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n \n @Repository\n public class AttributeSchemaDAOImpl extends AbstractDAOImpl\n         implements AttributeSchemaDAO {\n \n+    @Autowired\n+    AttributeDAO attributeDAO;\n+\n     @Override\n     public AttributeSchema find(String name) {\n-        return entityManager.find(AttributeSchema.class, name);\n+        AttributeSchema result =\n+                entityManager.find(AttributeSchema.class, name);\n+        if (isDeletedOrNotManaged(result)) {\n+            result = null;\n+        }\n+\n+        return result;\n     }\n \n     @Override\n@@ -48,6 +59,11 @@ public AttributeSchema save(AttributeSchema attributeSchema) {\n     @Override\n     @Transactional\n     public void delete(String name) {\n-        entityManager.remove(find(name));\n+        AttributeSchema schema = find(name);\n+        if (schema == null) {\n+            return;\n+        }\n+\n+        entityManager.remove(schema);\n     }\n }"},{"sha":"2b828eba13eeeb52a4054a48a22cad953c6b1624","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -17,6 +17,7 @@\n package org.syncope.core.persistence.dao.impl;\n \n import java.util.List;\n+import java.util.Set;\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -34,8 +35,9 @@ public class EntitlementDAOImpl extends AbstractDAOImpl implements EntitlementDA\n     @Override\n     public Entitlement find(String name) {\n         Entitlement result = entityManager.find(Entitlement.class, name);\n-        if (isDeletedOrNotManaged(result))\n+        if (isDeletedOrNotManaged(result)) {\n             result = null;\n+        }\n \n         return result;\n     }\n@@ -57,14 +59,11 @@ public Entitlement save(Entitlement entitlement) {\n     @Override\n     public void delete(String name) {\n         Entitlement entitlement = find(name);\n-        if (entitlement == null)\n+        if (entitlement == null) {\n             return;\n+        }\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT r FROM SyncopeRole r WHERE \"\n-                + \":entitlement MEMBER OF r.entitlements\");\n-        query.setParameter(\"entitlement\", entitlement);\n-        List<SyncopeRole> roles = query.getResultList();\n+        Set<SyncopeRole> roles = entitlement.getRoles();\n         for (SyncopeRole role : roles) {\n             role.removeEntitlement(entitlement);\n             syncopeRoleDAO.save(role);"},{"sha":"fdd2b650b49adfc0f33db377d154a267f47fbdd3","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeDAOTest.java","status":"modified","additions":6,"deletions":15,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -36,14 +36,14 @@ public class AttributeDAOTest extends AbstractDAOTest {\n     AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<Attribute> list = attributeDAO.findAll();\n         assertEquals(\"did not get expected number of attributes \",\n                 8, list.size());\n     }\n \n     @Test\n-    public final void testFindById() {\n+    public final void findById() {\n         Attribute attribute = attributeDAO.find(100L);\n         assertNotNull(\"did not find expected attribute schema\",\n                 attribute);\n@@ -53,7 +53,7 @@ public final void testFindById() {\n     }\n \n     @Test\n-    public final void testSave() throws ClassNotFoundException {\n+    public final void save() throws ClassNotFoundException {\n         AttributeSchema emailSchema = new AttributeSchema();\n         emailSchema.setName(\"email\");\n         emailSchema.setType(AttributeType.String);\n@@ -80,8 +80,9 @@ public final void testSave() throws ClassNotFoundException {\n             thrown = e;\n         }\n         assertNull(\"no validation exception expected here \", thrown);\n-        if (thrown != null)\n+        if (thrown != null) {\n             log.error(\"Validation exception for \" + attribute, thrown);\n+        }\n \n         try {\n             attribute.addValue(\"http://www.apache.org\");\n@@ -98,17 +99,7 @@ public final void testSave() throws ClassNotFoundException {\n     }\n \n     @Test\n-    public final void testDelete() {\n-        Attribute attribute = attributeDAO.find(100L);\n-\n-        attributeDAO.delete(attribute.getId());\n-\n-        Attribute actual = attributeDAO.find(100L);\n-        assertNull(\"delete did not work\", actual);\n-    }\n-\n-    @Test\n-    public final void testRelationships() {\n+    public final void deleteAndRelationships() {\n         Attribute attribute = attributeDAO.find(200L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();"},{"sha":"eb780d9c28b8199c3f3ac540ee6412b83c1d8200","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeSchemaDAOTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -31,22 +31,22 @@ public class AttributeSchemaDAOTest extends AbstractDAOTest {\n     AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<AttributeSchema> list = attributeSchemaDAO.findAll();\n         assertEquals(\"did not get expected number of attribute schemas \",\n                 6, list.size());\n     }\n \n     @Test\n-    public final void testFindByName() {\n+    public final void findByName() {\n         AttributeSchema attributeSchema =\n                 attributeSchemaDAO.find(\"username\");\n         assertNotNull(\"did not find expected attribute schema\",\n                 attributeSchema);\n     }\n \n     @Test\n-    public final void testSave() {\n+    public final void save() {\n         AttributeSchema attributeSchema = new AttributeSchema();\n         attributeSchema.setName(\"email\");\n         attributeSchema.setType(AttributeType.String);\n@@ -63,11 +63,11 @@ public final void testSave() {\n     }\n \n     @Test\n-    public final void testDelete() {\n-        AttributeSchema attributeSchema =\n+    public final void deleteAndRelationships() {\n+        AttributeSchema schema =\n                 attributeSchemaDAO.find(\"username\");\n \n-        attributeSchemaDAO.delete(attributeSchema.getName());\n+        attributeSchemaDAO.delete(schema.getName());\n \n         AttributeSchema actual = attributeSchemaDAO.find(\"username\");\n         assertNull(\"delete did not work\", actual);"},{"sha":"01fcaa64080a73316ff30e13c6ad2dae77d95e65","filename":"core/src/test/java/org/syncope/core/persistence/test/ConnectorInstanceDAOTest.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -14,8 +14,6 @@\n  */\n package org.syncope.core.persistence.test;\n \n-import java.io.InputStream;\n-\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n@@ -32,7 +30,7 @@ public class ConnectorInstanceDAOTest extends AbstractDAOTest {\n     ConnectorInstanceDAO connectorInstanceDAO;\n \n     @Test\n-    public final void testFindById() {\n+    public final void findById() {\n         ConnectorInstance connectorInstance = connectorInstanceDAO.find(100L);\n \n         assertNotNull(\"findById did not work\", connectorInstance);\n@@ -48,7 +46,7 @@ public final void testFindById() {\n     }\n \n     @Test\n-    public final void testSave() throws ClassNotFoundException {\n+    public final void save() throws ClassNotFoundException {\n         ConnectorInstance connectorInstance = new ConnectorInstance();\n \n         // set connector version\n@@ -93,9 +91,6 @@ public final void testSave() throws ClassNotFoundException {\n         assertEquals(\"save did not work for \\\"majorVersion\\\" attribute\",\n                 \"1.0\", connectorInstance.getVersion());\n \n-\n-        InputStream is = null;\n-\n         String xmlConfiguration = connectorInstance.getXmlConfiguration();\n \n         assertNotNull(\"configuration not found\", xmlConfiguration);\n@@ -106,7 +101,7 @@ public final void testSave() throws ClassNotFoundException {\n         assertNotNull(\"configuration retrieving failed\", conf);\n \n         Throwable t = null;\n-        \n+\n         try {\n             conf.validate();\n         } catch (IllegalArgumentException e) {\n@@ -117,7 +112,7 @@ public final void testSave() throws ClassNotFoundException {\n     }\n \n     @Test\n-    public final void testDelete() {\n+    public final void delete() {\n         ConnectorInstance connectorInstance = connectorInstanceDAO.find(100L);\n \n         assertNotNull(\"find to delete did not work\", connectorInstance);"},{"sha":"edf4be1014cba652119a1b8e3fbfa400cab5be24","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeDAOTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -39,21 +39,21 @@ public class DerivedAttributeDAOTest extends AbstractDAOTest {\n     DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<DerivedAttribute> list = derivedAttributeDAO.findAll();\n         assertEquals(\"did not get expected number of derived attributes \",\n                 1, list.size());\n     }\n \n     @Test\n-    public final void testFindById() {\n+    public final void findById() {\n         DerivedAttribute attribute = derivedAttributeDAO.find(1000L);\n         assertNotNull(\"did not find expected attribute schema\",\n                 attribute);\n     }\n \n     @Test\n-    public final void testSave() throws ClassNotFoundException {\n+    public final void save() throws ClassNotFoundException {\n         DerivedAttributeSchema derivedAttributeSchema =\n                 new DerivedAttributeSchema();\n         derivedAttributeSchema.setName(\"cn2\");\n@@ -92,7 +92,7 @@ public final void testSave() throws ClassNotFoundException {\n     }\n \n     @Test\n-    public final void testDeleteAndRelationships() {\n+    public final void deleteAndRelationships() {\n         DerivedAttribute attribute = derivedAttributeDAO.find(1000L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();"},{"sha":"d107824f6a5f146d1e091d8edf97b0b57292e1e5","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeSchemaDAOTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -30,23 +30,23 @@ public class DerivedAttributeSchemaDAOTest extends AbstractDAOTest {\n     DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<DerivedAttributeSchema> list =\n                 derivedAttributeSchemaDAO.findAll();\n         assertEquals(\"did not get expected number of derived attribute schemas \",\n                 1, list.size());\n     }\n \n     @Test\n-    public final void testFindByName() {\n+    public final void findByName() {\n         DerivedAttributeSchema attributeSchema =\n                 derivedAttributeSchemaDAO.find(\"cn\");\n         assertNotNull(\"did not find expected derived attribute schema\",\n                 attributeSchema);\n     }\n \n     @Test\n-    public final void testSave() {\n+    public final void save() {\n         DerivedAttributeSchema derivedAttributeSchema =\n                 new DerivedAttributeSchema();\n         derivedAttributeSchema.setName(\"cn2\");\n@@ -61,7 +61,7 @@ public final void testSave() {\n     }\n \n     @Test\n-    public final void testDelete() {\n+    public final void delete() {\n         DerivedAttributeSchema attributeSchema =\n                 derivedAttributeSchemaDAO.find(\"cn\");\n "},{"sha":"d5fea4c5ad94d29d14a4b09a6d5accdf14aa1c55","filename":"core/src/test/java/org/syncope/core/persistence/test/EntitlementDAOTest.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -35,21 +35,21 @@ public class EntitlementDAOTest extends AbstractDAOTest {\n     SyncopeRoleDAO syncopeRoleDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         assertEquals(\"did not get expected number of entitlements \",\n-                     2, list.size());\n+                2, list.size());\n     }\n \n     @Test\n-    public final void testFindByName() {\n+    public final void findByName() {\n         Entitlement entitlement = entitlementDAO.find(\"base\");\n         assertNotNull(\"did not find expected entitlement\",\n-                      entitlement);\n+                entitlement);\n     }\n \n     @Test\n-    public final void testSave() {\n+    public final void save() {\n         Entitlement entitlement = new Entitlement();\n         entitlement.setName(\"another\");\n \n@@ -61,24 +61,25 @@ public final void testSave() {\n     }\n \n     @Test\n-    public final void testDelete() {\n+    public final void delete() {\n         entitlementDAO.delete(\"advanced\");\n \n         Entitlement actual = entitlementDAO.find(\"advanced\");\n         assertNull(\"delete did not work\", actual);\n     }\n \n     @Test\n-    public final void testRelationships() {\n+    public final void relationships() {\n         Entitlement entitlement = entitlementDAO.find(\"base\");\n         assertNotNull(\"did not find expected entitlement\",\n-                      entitlement);\n+                entitlement);\n \n         Set<SyncopeRole> roles = entitlement.getRoles();\n         assertEquals(\"expected two roles\", 2, roles.size());\n \n         entitlementDAO.delete(\"base\");\n-        for (SyncopeRole role : roles)\n+        for (SyncopeRole role : roles) {\n             assertFalse(role.getEntitlements().contains(entitlement));\n+        }\n     }\n }"},{"sha":"f7bd59c0026574daa09577a353403ae41bde1500","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeRoleDAOTest.java","status":"modified","additions":28,"deletions":12,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -23,9 +23,11 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeRole;\n import org.syncope.core.persistence.beans.Attribute;\n+import org.syncope.core.persistence.beans.Entitlement;\n import org.syncope.core.persistence.beans.SyncopeRolePK;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.dao.AttributeDAO;\n+import org.syncope.core.persistence.dao.EntitlementDAO;\n import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n \n @Transactional\n@@ -37,23 +39,25 @@ public class SyncopeRoleDAOTest extends AbstractDAOTest {\n     AttributeDAO attributeDAO;\n     @Autowired\n     AttributeSchemaDAO attributeSchemaDAO;\n+    @Autowired\n+    EntitlementDAO entitlementDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<SyncopeRole> list = syncopeRoleDAO.findAll();\n         assertEquals(\"did not get expected number of roles \", 7, list.size());\n     }\n \n     @Test\n-    public final void testFind() {\n+    public final void find() {\n         SyncopeRole role = syncopeRoleDAO.find(\"root\", null);\n         assertNotNull(\"did not find expected role\", role);\n         role = syncopeRoleDAO.find(new SyncopeRolePK(null, null));\n         assertNull(\"found role but did not expect it\", role);\n     }\n \n     @Test\n-    public final void testSave() {\n+    public final void save() {\n         SyncopeRolePK rolePK = new SyncopeRolePK(\"secondChild\", \"root\");\n         SyncopeRole role = new SyncopeRole();\n         role.setSyncopeRolePK(rolePK);\n@@ -65,23 +69,23 @@ public final void testSave() {\n     }\n \n     @Test\n-    public final void testDelete() {\n+    public final void delete() {\n         SyncopeRole role = syncopeRoleDAO.find(\"employee\", \"citizen\");\n         syncopeRoleDAO.delete(role.getSyncopeRolePK());\n \n         SyncopeRole actual = syncopeRoleDAO.find(\"employee\", \"citizen\");\n         assertNull(\"delete did not work\", actual);\n \n         SyncopeRole children = syncopeRoleDAO.find(\"managingDirector\",\n-                                                   \"director\");\n+                \"director\");\n         assertNull(\"delete of successors did not work\", children);\n \n     }\n \n     @Test\n-    public final void testRelationships() {\n-        SyncopeRole role = syncopeRoleDAO.find(\"root\", null);\n-        Set<Attribute> attributes = role.getAttributes();\n+    public final void relationships() {\n+        SyncopeRole rootRole = syncopeRoleDAO.find(\"root\", null);\n+        Set<Attribute> attributes = rootRole.getAttributes();\n         int originalAttributesSize = attributes.size();\n         Attribute attribute = attributes.iterator().next();\n \n@@ -90,13 +94,25 @@ public final void testRelationships() {\n         attributeDAO.delete(attribute.getId());\n         assertNull(attributeDAO.find(attribute.getId()));\n         assertEquals(\"unexpected number of attributes\",\n-                     originalAttributesSize - 1, role.getAttributes().size());\n+                originalAttributesSize - 1, rootRole.getAttributes().size());\n \n         // Remove an attribute association with a user: we expect not to\n         // have it on the db table as well\n-        attribute = role.getAttributes().iterator().next();\n-        role.removeAttribute(attribute);\n-        syncopeRoleDAO.save(role);\n+        attribute = rootRole.getAttributes().iterator().next();\n+        rootRole.removeAttribute(attribute);\n+        syncopeRoleDAO.save(rootRole);\n         assertNull(attributeDAO.find(attribute.getId()));\n+\n+        // Remove an entitlement: we expect that all the owning roles\n+        // are updated as well\n+        Entitlement entitlement = entitlementDAO.find(\"base\");\n+        assertNotNull(\"did not find expected entitlement\",\n+                entitlement);\n+\n+        Set<SyncopeRole> roles = entitlement.getRoles();\n+        entitlementDAO.delete(\"base\");\n+        for (SyncopeRole role : roles) {\n+            assertFalse(role.getEntitlements().contains(entitlement));\n+        }\n     }\n }"},{"sha":"16e5f9f365fd48e1e9b320deff3bab6a25d25d05","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeUserDAOTest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65af3482832adb9f4c1073797585327596e1694f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java?ref=65af3482832adb9f4c1073797585327596e1694f","patch":"@@ -41,13 +41,13 @@ public class SyncopeUserDAOTest extends AbstractDAOTest {\n     SyncopeRoleDAO syncopeRoleDAO;\n \n     @Test\n-    public final void testFindAll() {\n+    public final void findAll() {\n         List<SyncopeUser> list = syncopeUserDAO.findAll();\n         assertEquals(\"did not get expected number of users \", 3, list.size());\n     }\n \n     @Test\n-    public final void testFindById() {\n+    public final void findById() {\n         SyncopeUser user = syncopeUserDAO.find(1L);\n         assertNotNull(\"did not find expected user\", user);\n         user = syncopeUserDAO.find(3L);\n@@ -57,7 +57,7 @@ public final void testFindById() {\n     }\n \n     @Test\n-    public final void testSave() {\n+    public final void save() {\n         SyncopeUser user = new SyncopeUser();\n \n         user = syncopeUserDAO.save(user);\n@@ -67,7 +67,7 @@ public final void testSave() {\n     }\n \n     @Test\n-    public final void testDelete() {\n+    public final void delete() {\n         SyncopeUser user = syncopeUserDAO.find(3L);\n \n         syncopeUserDAO.delete(user.getId());\n@@ -77,7 +77,7 @@ public final void testDelete() {\n     }\n \n     @Test\n-    public final void testRelationships() {\n+    public final void relationships() {\n         SyncopeUser user = syncopeUserDAO.find(1L);\n         Set<Attribute> attributes = user.getAttributes();\n         int originalAttributesSize = attributes.size();"}]}