{"sha":"edfea10354c9357324e3cc384501b5f76a862ba1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkZmVhMTAzNTRjOTM1NzMyNGUzY2MzODQ1MDFiNWY3NmE4NjJiYTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-24T15:43:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-24T15:43:17Z"},"message":"Minor formatting, interface cleanup and missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1425660 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"75ef3c9d71af3c8f42eabacba4bac25ab819962f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/75ef3c9d71af3c8f42eabacba4bac25ab819962f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/edfea10354c9357324e3cc384501b5f76a862ba1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfea10354c9357324e3cc384501b5f76a862ba1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/edfea10354c9357324e3cc384501b5f76a862ba1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfea10354c9357324e3cc384501b5f76a862ba1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4a48b355e37f3eb91d405013fef28afa36a26332","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a48b355e37f3eb91d405013fef28afa36a26332","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a48b355e37f3eb91d405013fef28afa36a26332"}],"stats":{"total":49,"additions":19,"deletions":30},"files":[{"sha":"d13d968e4183c4397e0ce122405dc608c315f08f","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -62,14 +62,13 @@ private String getBeanName(final ExternalResource resource) {\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.init.ConnectorFactory#getConnector(org.apache.syncope.core.persistence.beans.ExternalResource)\n+     * @see ConnectorFactory#getConnector(org.apache.syncope.core.persistence.beans.ExternalResource)\n      */\n     @Override\n     public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n             throws BeansException, NotFoundException {\n \n-        // Try to re-create connector bean from underlying resource\n-        // (useful for managing failover scenarios)\n+        // Try to re-create connector bean from underlying resource (useful for managing failover scenarios)\n         if (!ApplicationContextProvider.getBeanFactory().containsBean(getBeanName(resource))) {\n             registerConnector(resource);\n         }\n@@ -93,6 +92,7 @@ public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n      * @return connector facade proxy.\n      * @throws NotFoundException when not able to fetch all the required data.\n      */\n+    @Override\n     public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n             final Set<ConnConfProperty> configuration)\n             throws NotFoundException {\n@@ -105,7 +105,7 @@ public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.syncope.core.init.ConnectorRegistry#registerConnector(org.apache.syncope.core.persistence.beans.ExternalResource)\n+     * @see ConnectorRegistry#registerConnector(org.apache.syncope.core.persistence.beans.ExternalResource)\n      */\n     @Override\n     public void registerConnector(final ExternalResource resource)\n@@ -133,6 +133,7 @@ public void unregisterConnector(final String id) {\n     }\n \n     @Transactional(readOnly = true)\n+    @Override\n     public void load() {\n         // This is needed to avoid encoding problems when sending error messages via REST\n         CurrentLocale.set(Locale.ENGLISH);\n@@ -148,7 +149,7 @@ public void load() {\n             }\n         }\n \n-        LOG.info(\"Done loading {} connectors.\", ApplicationContextProvider.getBeanFactory().\n-                getBeansOfType(ConnectorFacadeProxy.class).size());\n+        LOG.info(\"Done loading {} connectors.\",\n+                ApplicationContextProvider.getBeanFactory().getBeansOfType(ConnectorFacadeProxy.class).size());\n     }\n }"},{"sha":"4c9aaaa2371a7406423b39733729780d2a143c6b","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/ConnectorRegistry.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -23,9 +23,8 @@\n \n public interface ConnectorRegistry {\n \n-    public abstract void registerConnector(ExternalResource resource)\n+    void registerConnector(ExternalResource resource)\n             throws NotFoundException;\n \n-    public abstract void unregisterConnector(String id);\n-\n+    void unregisterConnector(String id);\n }\n\\ No newline at end of file"},{"sha":"a63f410b70f51c8fbccac5758d79e0d52d99c01b","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -125,14 +125,12 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n \n         // create default configuration\n         APIConfiguration apiConfig = info.createDefaultAPIConfiguration();\n-\n         if (apiConfig == null) {\n             throw new NotFoundException(\"Default API configuration\");\n         }\n \n         // retrieve the ConfigurationProperties.\n         final ConfigurationProperties properties = apiConfig.getConfigurationProperties();\n-\n         if (properties == null) {\n             throw new NotFoundException(\"Configuration properties\");\n         }\n@@ -153,10 +151,8 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n             }\n         }\n \n-        // Use the ConnectorFacadeFactory's newInstance() method to get\n-        // a new connector.\n+        // Use the ConnectorFacadeFactory's newInstance() method to get a new connector.\n         connector = ConnectorFacadeFactory.getInstance().newInstance(apiConfig);\n-\n         if (connector == null) {\n             throw new NotFoundException(\"Connector\");\n         }"},{"sha":"00be44dcb9852db89d08aa5b5f3e1975bcb56bad","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFactory.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -19,16 +19,15 @@\n package org.apache.syncope.core.propagation;\n \n import java.util.Set;\n-\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.ConnConfProperty;\n import org.springframework.beans.BeansException;\n \n public interface ConnectorFactory {\n-    public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n-            final Set<ConnConfProperty> configuration)\n+\n+    ConnectorFacadeProxy createConnectorBean(ConnInstance connInstance, Set<ConnConfProperty> configuration)\n             throws NotFoundException;\n \n     /**\n@@ -39,9 +38,8 @@ public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n      * @throws BeansException if there is any problem with Spring\n      * @throws NotFoundException if the connector is not registered in the context\n      */\n-    public abstract ConnectorFacadeProxy getConnector(ExternalResource resource)\n+    ConnectorFacadeProxy getConnector(ExternalResource resource)\n             throws BeansException, NotFoundException;\n \n-    public void load();\n-\n+    void load();\n }\n\\ No newline at end of file"},{"sha":"14b2440a892c899123aeec62308bdf48fc75dcf5","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -251,8 +251,7 @@ public ModelAndView check(final HttpServletResponse response, @RequestBody final\n \n         final ConnInstance connInstance = binder.getConnInstance(resourceTO);\n \n-        final ConnectorFacadeProxy connector =\n-                new ConnectorFacadeProxy(connInstance, bundleManager);\n+        final ConnectorFacadeProxy connector = new ConnectorFacadeProxy(connInstance, bundleManager);\n \n         boolean result;\n         try {\n@@ -261,11 +260,11 @@ public ModelAndView check(final HttpServletResponse response, @RequestBody final\n \n             auditManager.audit(Category.connector, AuditElements.ConnectorSubCategory.check, Result.success,\n                     \"Successfully checked connector: \" + resourceTO);\n-        } catch (Exception ex) {\n+        } catch (Exception e) {\n             auditManager.audit(Category.connector, AuditElements.ConnectorSubCategory.check, Result.failure,\n-                    \"Unsuccessful check for connector: \" + resourceTO, ex);\n+                    \"Unsuccessful check for connector: \" + resourceTO, e);\n \n-            LOG.error(\"Test connection failure {}\", ex);\n+            LOG.error(\"Test connection failure {}\", e);\n             result = false;\n         }\n "},{"sha":"20056e99bb5b02ecb4ef9138662f8cdfcc2a0bbb","filename":"core/src/main/java/org/apache/syncope/core/util/ConnBundleManager.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfea10354c9357324e3cc384501b5f76a862ba1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java?ref=edfea10354c9357324e3cc384501b5f76a862ba1","patch":"@@ -46,7 +46,6 @@ public class ConnBundleManager {\n     private ConfDAO confDAO;\n \n     public ConnectorInfoManager getConnectorManager() throws NotFoundException, MissingConfKeyException {\n-\n         // 1. Bundles directory\n         SyncopeConf connectorBundleDir = confDAO.find(\"connid.bundles.directory\");\n \n@@ -76,7 +75,7 @@ public ConnectorInfoManager getConnectorManager() throws NotFoundException, Miss\n \n         // 3. Get connector info manager\n         ConnectorInfoManager manager = ConnectorInfoManagerFactory.getInstance().getLocalManager(\n-                bundleFileURLs.toArray(new URL[0]));\n+                bundleFileURLs.toArray(new URL[bundleFileURLs.size()]));\n         if (manager == null) {\n             throw new NotFoundException(\"Connector Info Manager\");\n         }\n@@ -114,21 +113,18 @@ public ConfigurationProperties getConfigurationProperties(final String bundleNam\n     }\n \n     public ConfigurationProperties getConfigurationProperties(final ConnectorInfo info) throws NotFoundException {\n-\n         if (info == null) {\n             throw new NotFoundException(\"Invalid: connector info is null\");\n         }\n \n         // create default configuration\n         final APIConfiguration apiConfig = info.createDefaultAPIConfiguration();\n-\n         if (apiConfig == null) {\n             throw new NotFoundException(\"Default API configuration\");\n         }\n \n         // retrieve the ConfigurationProperties.\n         final ConfigurationProperties properties = apiConfig.getConfigurationProperties();\n-\n         if (properties == null) {\n             throw new NotFoundException(\"Configuration properties\");\n         }"}]}