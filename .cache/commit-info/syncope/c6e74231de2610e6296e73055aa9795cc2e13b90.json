{"sha":"c6e74231de2610e6296e73055aa9795cc2e13b90","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2ZTc0MjMxZGUyNjEwZTYyOTZlNzMwNTVhYTk3OTVjYzJlMTNiOTA=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-12-15T14:10:20Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-12-15T14:44:35Z"},"message":"little improvement on dynamic membership refreshing","tree":{"sha":"220122e1227e474688eff35b366619199f869a14","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/220122e1227e474688eff35b366619199f869a14"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c6e74231de2610e6296e73055aa9795cc2e13b90","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6e74231de2610e6296e73055aa9795cc2e13b90","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6e74231de2610e6296e73055aa9795cc2e13b90","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6e74231de2610e6296e73055aa9795cc2e13b90/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb"}],"stats":{"total":30,"additions":12,"deletions":18},"files":[{"sha":"97783076a54b9fe60ebe75539d6efce2dc1dca0e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":12,"deletions":18,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6e74231de2610e6296e73055aa9795cc2e13b90/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6e74231de2610e6296e73055aa9795cc2e13b90/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=c6e74231de2610e6296e73055aa9795cc2e13b90","patch":"@@ -453,21 +453,18 @@ private List<ADynGroupMembership> findWithADynMemberships(final AnyType anyType)\n     @Transactional\n     @Override\n     public Pair<Set<String>, Set<String>> refreshDynMemberships(final AnyObject anyObject) {\n-        Query dynGroupsQuery = entityManager().createNativeQuery(\n-                \"SELECT group_id FROM \" + ADYNMEMB_TABLE + \" WHERE any_id=?\");\n-        dynGroupsQuery.setParameter(1, anyObject.getKey());\n-        @SuppressWarnings(\"unchecked\")\n-        List<String> dynGroups = dynGroupsQuery.getResultList();\n-\n-        Set<String> before = dynGroups.stream().collect(Collectors.toSet());\n-\n+        Set<String> before = new HashSet<>();\n         Set<String> after = new HashSet<>();\n         findWithADynMemberships(anyObject.getType()).stream().map(memb -> {\n             Query delete = entityManager().createNativeQuery(\n                     \"DELETE FROM \" + ADYNMEMB_TABLE + \" WHERE group_id=? AND any_id=?\");\n             delete.setParameter(1, memb.getGroup().getKey());\n             delete.setParameter(2, anyObject.getKey());\n-            delete.executeUpdate();\n+\n+            if (delete.executeUpdate() > 0) {\n+                before.add(memb.getGroup().getKey());\n+            }\n+\n             if (jpaAnySearchDAO().matches(\n                     anyObject,\n                     buildDynMembershipCond(memb.getFIQLCond(), memb.getGroup().getRealm()))) {\n@@ -542,21 +539,18 @@ private List<UDynGroupMembership> findWithUDynMemberships() {\n     @Transactional\n     @Override\n     public Pair<Set<String>, Set<String>> refreshDynMemberships(final User user) {\n-        Query dynGroupsQuery = entityManager().createNativeQuery(\n-                \"SELECT group_id FROM \" + UDYNMEMB_TABLE + \" WHERE any_id=?\");\n-        dynGroupsQuery.setParameter(1, user.getKey());\n-        @SuppressWarnings(\"unchecked\")\n-        List<String> dynGroups = dynGroupsQuery.getResultList();\n-\n-        Set<String> before = dynGroups.stream().collect(Collectors.toSet());\n-\n+        Set<String> before = new HashSet<>();\n         Set<String> after = new HashSet<>();\n         findWithUDynMemberships().stream().map(memb -> {\n             Query delete = entityManager().createNativeQuery(\n                     \"DELETE FROM \" + UDYNMEMB_TABLE + \" WHERE group_id=? AND any_id=?\");\n             delete.setParameter(1, memb.getGroup().getKey());\n             delete.setParameter(2, user.getKey());\n-            delete.executeUpdate();\n+\n+            if (delete.executeUpdate() > 0) {\n+                before.add(memb.getGroup().getKey());\n+            }\n+\n             if (jpaAnySearchDAO().matches(\n                     user,\n                     buildDynMembershipCond(memb.getFIQLCond(), memb.getGroup().getRealm()))) {"}]}