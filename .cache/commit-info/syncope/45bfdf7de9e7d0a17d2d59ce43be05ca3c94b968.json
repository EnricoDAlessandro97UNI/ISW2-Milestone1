{"sha":"45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ1YmZkZjdkZTllN2QwYTE3ZDJkNTljZTQzYmUwNWNhM2M5NGI5Njg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-04T11:51:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-04T11:51:09Z"},"message":"[SYNCOPE-811] Fixed","tree":{"sha":"6c22be5024e8b1bb197a36dd64a6d7eac0b27075","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c22be5024e8b1bb197a36dd64a6d7eac0b27075"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7857936e65328ab8d2b4d7753cde7dac1abf6ae1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7857936e65328ab8d2b4d7753cde7dac1abf6ae1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7857936e65328ab8d2b4d7753cde7dac1abf6ae1"}],"stats":{"total":57,"additions":19,"deletions":38},"files":[{"sha":"7bccd184d0714a1187db4cd50bc3748f0cac6af5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorDetailsPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java?ref=45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","patch":"@@ -121,37 +121,37 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             model.getObject().setPoolConf(new ConnPoolConfTO());\n         }\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().min(0).max(Integer.MAX_VALUE).build(\n                 \"connRequestTimeout\",\n                 \"connRequestTimeout\",\n                 Integer.class,\n                 new PropertyModel<Integer>(model, \"connRequestTimeout\")));\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().min(0).max(Integer.MAX_VALUE).build(\n                 \"poolMaxObjects\",\n                 \"poolMaxObjects\",\n                 Integer.class,\n                 new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxObjects\")));\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().min(0).max(Integer.MAX_VALUE).build(\n                 \"poolMinIdle\",\n                 \"poolMinIdle\",\n                 Integer.class,\n                 new PropertyModel<Integer>(model.getObject().getPoolConf(), \"minIdle\")));\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Integer>().setMin(0).setMax(Integer.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Integer>().min(0).max(Integer.MAX_VALUE).build(\n                 \"poolMaxIdle\",\n                 \"poolMaxIdle\",\n                 Integer.class,\n                 new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxIdle\")));\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Long>().setMin(0L).setMax(Long.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Long>().min(0L).max(Long.MAX_VALUE).build(\n                 \"poolMaxWait\",\n                 \"poolMaxWait\",\n                 Long.class,\n                 new PropertyModel<Long>(model.getObject().getPoolConf(), \"maxWait\")));\n \n-        add(new AjaxSpinnerFieldPanel.Builder<Long>().setMin(0L).setMax(Long.MAX_VALUE).build(\n+        add(new AjaxSpinnerFieldPanel.Builder<Long>().min(0L).max(Long.MAX_VALUE).build(\n                 \"poolMinEvictableIdleTime\",\n                 \"poolMinEvictableIdleTime\",\n                 Long.class,"},{"sha":"d6976748fb4beb3800d9ab113f67beacbd57e5e2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":12,"deletions":30,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","patch":"@@ -29,17 +29,18 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.StringUtils;\n \n public final class AjaxSpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n \n     private static final long serialVersionUID = 6413819574530703577L;\n \n-    private Class<T> reference;\n+    private final Class<T> reference;\n \n-    private IModel<T> model;\n+    private final IModel<T> model;\n \n-    private Options options;\n+    private final Options options;\n \n     private AjaxSpinnerFieldPanel(\n             final String id,\n@@ -49,12 +50,6 @@ private AjaxSpinnerFieldPanel(\n             final Options options) {\n \n         super(id, name, model);\n-        init(name, reference, model, options);\n-    }\n-\n-    private void init(\n-            final String name, final Class<T> reference,\n-            final IModel<T> model, final Options options) {\n \n         field = new AjaxSpinner<T>(\"spinner\", model, options, reference) {\n \n@@ -67,8 +62,7 @@ public JQueryUIBehavior newWidgetBehavior(final String selector) {\n                 return behavior;\n             }\n         };\n-\n-        add(field);\n+        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         this.name = name;\n         this.model = model;\n@@ -177,27 +171,20 @@ public AjaxSpinnerFieldPanel<T> clone() {\n \n     public static class Builder<T extends Number> {\n \n-        protected T step;\n-\n-        protected T min;\n-\n-        protected T max;\n-\n-        public Builder() {\n-        }\n+        private final Options options = new Options();\n \n-        public Builder<T> setMin(final T min) {\n-            this.min = min;\n+        public Builder<T> min(final T min) {\n+            options.set(\"min\", min);\n             return this;\n         }\n \n-        public Builder<T> setMax(final T max) {\n-            this.max = max;\n+        public Builder<T> max(final T max) {\n+            options.set(\"max\", max);\n             return this;\n         }\n \n-        public Builder<T> setStep(final T step) {\n-            this.step = step;\n+        public Builder<T> step(final T step) {\n+            options.set(\"step\", step);\n             return this;\n         }\n \n@@ -207,11 +194,6 @@ public AjaxSpinnerFieldPanel<T> build(\n                 final Class<T> reference,\n                 final IModel<T> model) {\n \n-            final Options options = new Options();\n-            options.set(\"min\", min);\n-            options.set(\"max\", max);\n-            options.set(\"step\", step);\n-\n             return new AjaxSpinnerFieldPanel<>(id, name, reference, model, options);\n         }\n     }"},{"sha":"eb85677a0c20f66bf2953fc7390543a98b228160","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","patch":"@@ -69,7 +69,6 @@ protected Iterator<String> getChoices(final String input) {\n                 return result.iterator();\n             }\n         };\n-\n         add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n \n         if (enableOnChange && !isReadOnly()) {"},{"sha":"8613d351f313bb0a4efd2ea1d2082b73315e5394","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=45bfdf7de9e7d0a17d2d59ce43be05ca3c94b968","patch":"@@ -261,7 +261,7 @@ public String getObject(\n                 break;\n \n             case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>().setStep(0.1)\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().step(0.1)\n                         .build(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n \n                 if (required) {"}]}