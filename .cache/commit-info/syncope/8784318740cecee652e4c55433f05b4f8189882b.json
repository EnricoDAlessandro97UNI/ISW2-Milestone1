{"sha":"8784318740cecee652e4c55433f05b4f8189882b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg3ODQzMTg3NDBjZWNlZTY1MmU0YzU1NDMzZjA1YjRmODE4OTg4MmI=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-18T13:41:34Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-18T13:41:34Z"},"message":"[SYNCOPE-268] Make rest integration tests re-runnable\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1435132 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bc2c05d3f39091fb00bd1ee5dc207827f80a286f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc2c05d3f39091fb00bd1ee5dc207827f80a286f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8784318740cecee652e4c55433f05b4f8189882b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8784318740cecee652e4c55433f05b4f8189882b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8784318740cecee652e4c55433f05b4f8189882b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8784318740cecee652e4c55433f05b4f8189882b/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"977491b1068f752b9753cd71a096d0cf93db3834","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/977491b1068f752b9753cd71a096d0cf93db3834","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/977491b1068f752b9753cd71a096d0cf93db3834"}],"stats":{"total":88,"additions":54,"deletions":34},"files":[{"sha":"bdbe56c22b63d550deb68907c2abd53bd031ffe4","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":53,"deletions":33,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8784318740cecee652e4c55433f05b4f8189882b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8784318740cecee652e4c55433f05b4f8189882b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=8784318740cecee652e4c55433f05b4f8189882b","patch":"@@ -427,7 +427,9 @@ public void dryRun() {\n \n     @Test\n     public void issueSYNCOPE81() {\n-    \tNotificationTaskTO taskTO = taskService.read(TaskType.NOTIFICATION, 8L);\n+\n+        String sender = createNotificationTask();\n+        NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n         assertNotNull(taskTO);\n \n         int executions = taskTO.getExecutions().size();\n@@ -465,8 +467,47 @@ public void issueSYNCOPE81() {\n \n     @Test\n     public void issueSYNCOPE86() {\n-        // 1. create suitable notification for subsequent tests\n-        NotificationTO notification = new NotificationTO();\n+        // 1. create notification task\n+        String sender = createNotificationTask();\n+\n+        // 2. get NotificationTaskTO for user just created\n+        NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n+        assertNotNull(taskTO);\n+        assertTrue(taskTO.getExecutions().isEmpty());\n+\n+        try {\n+            // 3. execute the generated NotificationTask\n+            TaskExecTO execution = taskService.execute(taskTO.getId(), false);\n+            assertNotNull(execution);\n+\n+            // 4. verify\n+            taskTO = taskService.read(TaskType.NOTIFICATION, taskTO.getId());\n+            assertNotNull(taskTO);\n+            assertEquals(1, taskTO.getExecutions().size());\n+        } finally {\n+        \t// Remove execution to make test re-runnable\n+        \tTaskExecTO taskExecTO = taskService.deleteExecution(taskTO.getExecutions().get(0).getId());\n+        \tassertNotNull(taskExecTO);\n+        }\n+    }\n+\n+\tprivate NotificationTaskTO findNotificationTaskBySender(String sender) {\t\t\n+        List<NotificationTaskTO> tasks = taskService.list(TaskType.NOTIFICATION);\n+        assertNotNull(tasks);\n+        assertFalse(tasks.isEmpty());\n+\n+        NotificationTaskTO taskTO = null;\n+        for (NotificationTaskTO task : tasks) {\n+            if (sender.equals(task.getSender())) {\n+                taskTO = task;\n+            }\n+        }\n+\t\treturn taskTO;\n+\t}\n+\n+\tprivate String createNotificationTask() {\n+\t\t// 1. Create notification\n+\t\tNotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n         notification.addEvent(\"create\");\n \n@@ -499,36 +540,8 @@ public void issueSYNCOPE86() {\n \n         userTO = userService.create(userTO);\n         assertNotNull(userTO);\n-\n-        // 3. get NotificationTaskTO for user just created\n-        List<NotificationTaskTO> tasks = taskService.list(TaskType.NOTIFICATION);\n-        assertNotNull(tasks);\n-        assertFalse(tasks.isEmpty());\n-\n-        NotificationTaskTO taskTO = null;\n-        for (NotificationTaskTO task : tasks) {\n-            if (sender.equals(task.getSender())) {\n-                taskTO = task;\n-            }\n-        }\n-        assertNotNull(taskTO);\n-        assertTrue(taskTO.getExecutions().isEmpty());\n-\n-        try {\n-            // 4. execute the generated NotificationTask\n-            TaskExecTO execution = taskService.execute(taskTO.getId(), false);\n-            assertNotNull(execution);\n-\n-            // 5. verify\n-            taskTO = taskService.read(TaskType.NOTIFICATION, taskTO.getId());\n-            assertNotNull(taskTO);\n-            assertEquals(1, taskTO.getExecutions().size());\n-        } finally {\n-        \t// Remove execution to make test re-runnable\n-        \tTaskExecTO taskExecTO = taskService.deleteExecution(taskTO.getExecutions().get(0).getId());\n-        \tassertNotNull(taskExecTO);\n-        }\n-    }\n+\t\treturn sender;\n+\t}\n \n     @Test\n     public void issueSYNCOPE68() {\n@@ -601,6 +614,13 @@ public void issueSYNCOPE68() {\n         \tUserTO dUserTO = userService.delete(userTO.getId());\n         \tassertNotNull(dUserTO);\n         }\n+    \tSystem.out.println(\"After\");\n+        List<PropagationTaskTO> tasksA = taskService.list(TaskType.PROPAGATION);\n+        for (PropagationTaskTO task : tasksA) {\n+        \tSystem.out.println(task.getId());\n+        \tSystem.out.println(task.getAccountId());\n+        \tSystem.out.println(task.getOldAccountId());\n+        }\n     }\n \n     @Test"},{"sha":"8bab94be04d581e7c40247c800df37902d3f01cb","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8784318740cecee652e4c55433f05b4f8189882b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8784318740cecee652e4c55433f05b4f8189882b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8784318740cecee652e4c55433f05b4f8189882b","patch":"@@ -1835,7 +1835,7 @@ public void issueSYNCOPE267() {\n \n     @Test\n     public void issueSYNCOPE266() {\n-        UserTO userTO = getSampleTO(\"syncope266@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope266@apache.org\");\n         userTO.getResources().clear();\n \n         userTO = userService.create(userTO);"}]}