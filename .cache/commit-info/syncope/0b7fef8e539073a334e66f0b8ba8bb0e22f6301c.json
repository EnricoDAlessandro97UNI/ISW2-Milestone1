{"sha":"0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiN2ZlZjhlNTM5MDczYTMzNGU2NmYwYjhiYThiYjBlMjJmNjMwMWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-28T16:43:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-28T16:43:10Z"},"message":"[SYNCOPE-327] Fixing ThreadLocal messages related to Spring Security\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1451249 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0e9a2c5bf9ce6c5720018bbf97108ca2107d38cd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0e9a2c5bf9ce6c5720018bbf97108ca2107d38cd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f1b78b0d65e6316b09d52dc077e3d5af0537e4a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f1b78b0d65e6316b09d52dc077e3d5af0537e4a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f1b78b0d65e6316b09d52dc077e3d5af0537e4a7"}],"stats":{"total":58,"additions":29,"deletions":29},"files":[{"sha":"c73c1687241fb21f1d98694b6246b7172c33c288","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncJob.java","status":"modified","additions":19,"deletions":20,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java?ref=0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","patch":"@@ -44,7 +44,6 @@\n import org.apache.syncope.core.sync.SyncActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n-import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.quartz.JobExecutionException;\n@@ -298,22 +297,6 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n         return report.toString();\n     }\n \n-    /**\n-     * Used to simulate authentication in order to perform updates through AbstractUserWorkflowAdapter.\n-     */\n-    private void setupSecurity() {\n-        final List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();\n-\n-        for (Entitlement entitlement : entitlementDAO.findAll()) {\n-            authorities.add(new SimpleGrantedAuthority(entitlement.getName()));\n-        }\n-\n-        final UserDetails userDetails = new User(\"admin\", \"FAKE_PASSWORD\", true, true, true, true, authorities);\n-\n-        SecurityContextHolder.getContext().setAuthentication(\n-                new UsernamePasswordAuthenticationToken(userDetails, \"FAKE_PASSWORD\", authorities));\n-    }\n-\n     protected void setRoleOwners(final SyncopeSyncResultHandler handler)\n             throws UnauthorizedRoleException, NotFoundException {\n \n@@ -342,11 +325,27 @@ protected void setRoleOwners(final SyncopeSyncResultHandler handler)\n \n     @Override\n     protected String doExecute(final boolean dryRun) throws JobExecutionException {\n-        // get all entitlements to perform updates\n-        if (EntitlementUtil.getOwnedEntitlementNames().isEmpty()) {\n-            setupSecurity();\n+        // PRE: grant all authorities (i.e. setup the SecurityContextHolder)\n+        final List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();\n+\n+        for (Entitlement entitlement : entitlementDAO.findAll()) {\n+            authorities.add(new SimpleGrantedAuthority(entitlement.getName()));\n         }\n \n+        final UserDetails userDetails = new User(\"admin\", \"FAKE_PASSWORD\", true, true, true, true, authorities);\n+\n+        SecurityContextHolder.getContext().setAuthentication(\n+                new UsernamePasswordAuthenticationToken(userDetails, \"FAKE_PASSWORD\", authorities));\n+\n+        try {\n+            return executeWithSecurityContext(dryRun);\n+        } finally {\n+            // POST: clean up the SecurityContextHolder\n+            SecurityContextHolder.clearContext();\n+        }\n+    }\n+\n+    protected String executeWithSecurityContext(final boolean dryRun) throws JobExecutionException {\n         if (!(task instanceof SyncTask)) {\n             throw new JobExecutionException(\"Task \" + taskId + \" isn't a SyncTask\");\n         }"},{"sha":"b95226952a5506d8999f2405c2db85479ad3f8af","filename":"core/src/main/resources/securityContext.xml","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b7fef8e539073a334e66f0b8ba8bb0e22f6301c/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=0b7fef8e539073a334e66f0b8ba8bb0e22f6301c","patch":"@@ -27,18 +27,19 @@ under the License.\n \n   <security:global-method-security pre-post-annotations=\"enabled\"/>\n   \n-  <bean class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\">\n-    <property name=\"targetClass\" value=\"org.springframework.security.core.context.SecurityContextHolder\"/>\n-    <property name=\"targetMethod\" value=\"setStrategyName\"/> \n-    <property name=\"arguments\">\n-      <list>\n-        <value>MODE_INHERITABLETHREADLOCAL</value>\n-      </list>\n-    </property>\n+  <bean id=\"filterChainProxy\" class=\"org.springframework.security.web.FilterChainProxy\">\n+    <security:filter-chain-map path-type=\"ant\">\n+      <security:filter-chain pattern=\"/**\" filters=\"securityContextPersistenceFilter\"/>\n+    </security:filter-chain-map>\n   </bean>\n-\n+  \n   <bean id=\"securityContextRepository\" class='org.springframework.security.web.context.NullSecurityContextRepository'/>\n \n+  <bean id=\"securityContextPersistenceFilter\"\n+        class=\"org.springframework.security.web.context.SecurityContextPersistenceFilter\">\n+    <property name=\"securityContextRepository\" ref=\"securityContextRepository\"/>\n+  </bean>\n+\n   <security:http security-context-repository-ref=\"securityContextRepository\">\n     <security:http-basic/>\n     <security:intercept-url pattern=\"/**\"/>"}]}