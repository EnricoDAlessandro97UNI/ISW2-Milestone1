{"sha":"b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","node_id":"C_kwDOJfYA1toAKGIzM2Q5YzZjZDhlNzVhY2NjZmJjMmU2NGNkMWNkMDg2NTQ3MGE3MGE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-08T11:35:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-08T11:35:32Z"},"message":"Preferring Collectors#joining","tree":{"sha":"fad4ad684fb08fb230ab831e789f1ec972d4b055","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fad4ad684fb08fb230ab831e789f1ec972d4b055"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9ee8f4142eea695886442a92fba7f2d6794f0f00","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ee8f4142eea695886442a92fba7f2d6794f0f00","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ee8f4142eea695886442a92fba7f2d6794f0f00"}],"stats":{"total":18,"additions":11,"deletions":7},"files":[{"sha":"6d66bc5f3ec4f0cc1cf98f2d9a45826a6403cb0d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","patch":"@@ -28,6 +28,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.wicket.util.cookies.CookieDefaults;\n@@ -132,7 +133,7 @@ public static void set(final Map<String, List<String>> prefs) {\n         }\n \n         // after retrieved previous setting in order to overwrite the key ...\n-        prefs.forEach((key, values) -> current.put(key, StringUtils.join(values, \";\")));\n+        prefs.forEach((key, values) -> current.put(key, values.stream().collect(Collectors.joining(\";\"))));\n \n         try {\n             COOKIE_UTILS.save(COOKIE_NAME, Base64.getEncoder().encodeToString(setPrefs(current).getBytes()));\n@@ -160,7 +161,7 @@ public static void set(final String key, final String value) {\n     }\n \n     public static void setList(final String key, final List<String> values) {\n-        set(key, StringUtils.join(values, \";\"));\n+        set(key, values.stream().collect(Collectors.joining(\";\")));\n     }\n \n     public static void setList(final Map<String, List<String>> prefs) {"},{"sha":"7bfbc28f69f948309854b84c66ba822248895d4b","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/PreferenceManager.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java?ref=b33d9c6cd8e75acccfbc2e64cd1cd0865470a70a","patch":"@@ -29,14 +29,15 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.wicket.util.cookies.CookieDefaults;\n import org.apache.wicket.util.cookies.CookieUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class PreferenceManager implements Serializable {\n+public final class PreferenceManager implements Serializable {\n \n     private static final long serialVersionUID = 3581434664555284193L;\n \n@@ -133,9 +134,7 @@ public void set(final Map<String, List<String>> prefs) {\n         }\n \n         // after retrieved previous setting in order to overwrite the key ...\n-        prefs.forEach((key, values) -> {\n-            current.put(key, StringUtils.join(values, \";\"));\n-        });\n+        prefs.forEach((key, values) -> current.put(key, values.stream().collect(Collectors.joining(\";\"))));\n \n         try {\n             COOKIE_UTILS.save(COOKIE_NAME, Base64.getEncoder().encodeToString(setPrefs(current).getBytes()));\n@@ -163,10 +162,14 @@ public void set(final String key, final String value) {\n     }\n \n     public void setList(final String key, final List<String> values) {\n-        set(key, StringUtils.join(values, \";\"));\n+        set(key, values.stream().collect(Collectors.joining(\";\")));\n     }\n \n     public void setList(final Map<String, List<String>> prefs) {\n         set(prefs);\n     }\n+\n+    private PreferenceManager() {\n+        // private constructor for static utility class\n+    }\n }"}]}