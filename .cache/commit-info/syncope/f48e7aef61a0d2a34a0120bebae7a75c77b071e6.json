{"sha":"f48e7aef61a0d2a34a0120bebae7a75c77b071e6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0OGU3YWVmNjFhMGQyYTM0YTAxMjBiZWJhZTdhNzVjNzdiMDcxZTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-25T16:57:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-25T16:57:08Z"},"message":"Minor cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1438587 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"26aecdcb53ce62f4d6f5da963215850f7dc2bb30","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/26aecdcb53ce62f4d6f5da963215850f7dc2bb30"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f48e7aef61a0d2a34a0120bebae7a75c77b071e6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f48e7aef61a0d2a34a0120bebae7a75c77b071e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f48e7aef61a0d2a34a0120bebae7a75c77b071e6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f48e7aef61a0d2a34a0120bebae7a75c77b071e6/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"85fa795870747e8e3ff6e5c4d539a311f5ba7fc9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/85fa795870747e8e3ff6e5c4d539a311f5ba7fc9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/85fa795870747e8e3ff6e5c4d539a311f5ba7fc9"}],"stats":{"total":32,"additions":19,"deletions":13},"files":[{"sha":"c9da1215f7a531a3b2eb6448fb6600a2b60ae52d","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserRequestServiceProxy.java","status":"modified","additions":19,"deletions":13,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f48e7aef61a0d2a34a0120bebae7a75c77b071e6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f48e7aef61a0d2a34a0120bebae7a75c77b071e6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserRequestServiceProxy.java?ref=f48e7aef61a0d2a34a0120bebae7a75c77b071e6","patch":"@@ -21,21 +21,17 @@\n import java.net.URI;\r\n import java.util.Arrays;\r\n import java.util.List;\r\n-\r\n-import javax.ws.rs.PathParam;\r\n import javax.ws.rs.core.Response;\r\n-\r\n import org.apache.syncope.common.services.UserRequestService;\r\n import org.apache.syncope.common.to.UserRequestTO;\r\n-import org.apache.syncope.common.types.UserRequestType;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class UserRequestServiceProxy extends SpringServiceProxy implements UserRequestService {\r\n \r\n     public UserRequestServiceProxy(final String baseUrl, final RestTemplate restTemplate) {\r\n         super(baseUrl, restTemplate);\r\n     }\r\n-    \r\n+\r\n     @Override\r\n     public Response getOptions() {\r\n         return Response.ok().allow(\"GET\", \"POST\", \"DELETE\").header(SYNCOPE_CREATE_ALLOWED, isCreateAllowed()).build();\r\n@@ -47,14 +43,24 @@ public boolean isCreateAllowed() {\n \r\n     @Override\r\n     public Response create(final UserRequestTO userRequestTO) {\r\n-        UserRequestTO created = null;\r\n-        if (userRequestTO.getType() == UserRequestType.CREATE) {\r\n-            created = getRestTemplate().postForObject(baseUrl + \"user/request/create\", userRequestTO.getUserTO(), UserRequestTO.class);\r\n-        } else if (userRequestTO.getType() == UserRequestType.UPDATE) {\r\n-            created = getRestTemplate().postForObject(baseUrl + \"user/request/update\", userRequestTO.getUserMod(), UserRequestTO.class);\r\n-        } else if (userRequestTO.getType() == UserRequestType.DELETE) {\r\n-            created = getRestTemplate().getForObject(baseUrl + \"user/request/delete/{userId}\", UserRequestTO.class, userRequestTO.getUserId());\r\n+        UserRequestTO created;\r\n+        switch (userRequestTO.getType()) {\r\n+            case UPDATE:\r\n+                created = getRestTemplate().postForObject(baseUrl + \"user/request/update\", userRequestTO.getUserMod(),\r\n+                        UserRequestTO.class);\r\n+                break;\r\n+\r\n+            case DELETE:\r\n+                created = getRestTemplate().getForObject(baseUrl + \"user/request/delete/{userId}\", UserRequestTO.class,\r\n+                        userRequestTO.getUserId());\r\n+                break;\r\n+\r\n+            case CREATE:\r\n+            default:\r\n+                created = getRestTemplate().postForObject(baseUrl + \"user/request/create\", userRequestTO.getUserTO(),\r\n+                        UserRequestTO.class);\r\n         }\r\n+\r\n         URI location = URI.create(baseUrl + \"user/request/read/\" + created.getId());\r\n         return Response.created(location).entity(created.getId()).build();\r\n     }\r\n@@ -71,7 +77,7 @@ public UserRequestTO read(final Long requestId) {\n     }\r\n \r\n     @Override\r\n-    public void delete(@PathParam(\"requestId\") Long requestId) {\r\n+    public void delete(final Long requestId) {\r\n         getRestTemplate().getForObject(\r\n                 baseUrl + \"user/request/deleteRequest/{requestId}\", UserRequestTO.class, requestId);\r\n     }\r"}]}