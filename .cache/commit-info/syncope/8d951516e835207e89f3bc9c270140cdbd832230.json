{"sha":"8d951516e835207e89f3bc9c270140cdbd832230","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkOTUxNTE2ZTgzNTIwN2U4OWYzYmM5YzI3MDE0MGNkYmQ4MzIyMzA=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-30T13:04:56Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-30T13:04:56Z"},"message":"[SYNCOPE-505] - Adding integration tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1606720 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91ad2c001cb7782046c7b179ad40a666fab68f7d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91ad2c001cb7782046c7b179ad40a666fab68f7d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8d951516e835207e89f3bc9c270140cdbd832230","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d951516e835207e89f3bc9c270140cdbd832230","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d951516e835207e89f3bc9c270140cdbd832230","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d951516e835207e89f3bc9c270140cdbd832230/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"7d705ad556778dedee9d05df5aec07cdf0328716","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7d705ad556778dedee9d05df5aec07cdf0328716","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7d705ad556778dedee9d05df5aec07cdf0328716"}],"stats":{"total":71,"additions":71,"deletions":0},"files":[{"sha":"8bdf0bc7e083b0977f83d1b774a3ac4a9e5a3cb4","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d951516e835207e89f3bc9c270140cdbd832230/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d951516e835207e89f3bc9c270140cdbd832230/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8d951516e835207e89f3bc9c270140cdbd832230","patch":"@@ -34,9 +34,11 @@\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n+\n import javax.naming.NamingException;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.Response;\n+\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.common.util.Base64Utility;\n import org.apache.cxf.helpers.IOUtils;\n@@ -80,7 +82,12 @@\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.wrap.ResourceName;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.propagation.impl.DBPasswordPropagationActions;\n+import org.apache.syncope.core.propagation.impl.LDAPPasswordPropagationActions;\n+import org.apache.syncope.core.util.Encryptor;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n@@ -2294,4 +2301,68 @@ public void issueSYNCOPE493() {\n \n         resourceService.update(RESOURCE_NAME_WS1, newWs1);\n     }\n+    \n+    @Test\n+    public void issueSYNCOPE505DB() throws Exception {\n+        // 1. create user\n+        UserTO user = UserTestITCase.getUniqueSampleTO(\"syncope505-db@syncope.apache.org\");\n+        user.setPassword(\"security\");\n+        user = createUser(user);\n+        assertNotNull(user);\n+        assertTrue(user.getResources().isEmpty());\n+        \n+        // 2. Add DBPasswordPropagationActions\n+        ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_TESTDB);\n+        assertNotNull(resourceTO);\n+        resourceTO.getPropagationActionsClassNames().add(DBPasswordPropagationActions.class.getName());\n+        resourceService.update(RESOURCE_NAME_TESTDB, resourceTO);\n+        \n+        // 3. Add a db resource to the User\n+        UserMod userMod = new UserMod();\n+        userMod.setId(user.getId());\n+        userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n+        user = updateUser(userMod);\n+        assertNotNull(user);\n+        assertEquals(1, user.getResources().size());\n+\n+        // 4. Check that the DB resource has the correct password\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String value = jdbcTemplate.queryForObject(\n+                \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        assertEquals(Encryptor.getInstance().encode(\"security\", CipherAlgorithm.SHA1), value.toUpperCase());\n+    }\n+    \n+    @Test\n+    public void issueSYNCOPE505LDAP() throws Exception {\n+        // 1. create user\n+        UserTO user = UserTestITCase.getUniqueSampleTO(\"syncope505-ldap@syncope.apache.org\");\n+        user.setPassword(\"security\");\n+        user = createUser(user);\n+        assertNotNull(user);\n+        assertTrue(user.getResources().isEmpty());\n+        \n+        // 2. Add LDAPPasswordPropagationActions\n+        ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_LDAP);\n+        assertNotNull(resourceTO);\n+        resourceTO.getPropagationActionsClassNames().add(LDAPPasswordPropagationActions.class.getName());\n+        resourceTO.setRandomPwdIfNotProvided(false);\n+        resourceService.update(RESOURCE_NAME_LDAP, resourceTO);\n+        \n+        // 3. Add a resource to the User\n+        UserMod userMod = new UserMod();\n+        userMod.setId(user.getId());\n+        userMod.getResourcesToAdd().add(RESOURCE_NAME_LDAP);\n+        user = updateUser(userMod);\n+        assertNotNull(user);\n+        assertEquals(1, user.getResources().size());\n+\n+        // 4. Check that the LDAP resource has the correct password\n+        ConnObjectTO connObject =\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, user.getId());\n+        \n+        assertNotNull(getLdapRemoteObject(\n+            connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+            \"security\",\n+            connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+    }\n }"}]}