{"sha":"1a1aec5a6271846d1103529c0dc8764686169777","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhMWFlYzVhNjI3MTg0NmQxMTAzNTI5YzBkYzg3NjQ2ODYxNjk3Nzc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-24T14:17:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-24T14:17:33Z"},"message":"Using OpenJPA caching\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247377 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"895dd7f4dd2a30102869e1c85e2276c3596a75df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/895dd7f4dd2a30102869e1c85e2276c3596a75df"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1a1aec5a6271846d1103529c0dc8764686169777","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a1aec5a6271846d1103529c0dc8764686169777","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a1aec5a6271846d1103529c0dc8764686169777","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a1aec5a6271846d1103529c0dc8764686169777/comments","author":null,"committer":null,"parents":[{"sha":"d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a"}],"stats":{"total":828,"additions":58,"deletions":770},"files":[{"sha":"3acfc6d7e6a504002709f9c3a0ae13425f857170","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -134,7 +134,6 @@\n                                 <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\">\r\n                                     <patternset>\r\n                                         <exclude name=\"**/content.xml\" />\r\n-                                        <exclude name=\"**/ehcache.xml\" />\r\n                                         <exclude name=\"**/persistence.properties\" />\r\n                                         <exclude name=\"**/security.properties\" />\r\n                                         <exclude name=\"**/workflow.properties\" />\r"},{"sha":"fdb08455e2938ab287f90ff2f1e242aeaea83f3f","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -58,11 +58,6 @@\n             <artifactId>openjpa-all</artifactId>\r\n         </dependency>\r\n \r\n-        <dependency>\r\n-            <groupId>net.sf.ehcache</groupId>\r\n-            <artifactId>ehcache-core</artifactId>\r\n-        </dependency>\r\n-\r\n         <dependency>\r\n             <groupId>org.codehaus.groovy</groupId>\r\n             <artifactId>groovy-all</artifactId>\r\n@@ -173,7 +168,6 @@\n                                        dest=\"${cargo.run.dir}\">\r\n                                     <patternset>\r\n                                         <exclude name=\"**/content.xml\"/>\r\n-                                        <exclude name=\"**/ehcache.xml\"/>\r\n                                         <exclude name=\"**/persistence.properties\"/>\r\n                                         <exclude name=\"**/security.properties\"/>\r\n                                         <exclude name=\"**/workflow.properties\" />\r"},{"sha":"64f1de2baf0e81c9ac4ab1a075623f9bdd8eec79","filename":"archetype/src/main/resources/archetype-resources/core/src/test/resources/ehcache.xml","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fehcache.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fehcache.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fehcache.xml?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:noNamespaceSchemaLocation=\"http://ehcache.org/ehcache.xsd\">\n-  \n-    <diskStore path=\"java.io.tmpdir/syncope-cache\"/>\n-\n-    <defaultCache\n-            maxElementsInMemory=\"10000\"\n-            eternal=\"false\"\n-            timeToIdleSeconds=\"120\"\n-            timeToLiveSeconds=\"120\"\n-            overflowToDisk=\"true\"\n-            maxElementsOnDisk=\"10000000\"\n-            diskPersistent=\"false\"\n-            diskExpiryThreadIntervalSeconds=\"120\"\n-            memoryStoreEvictionPolicy=\"LRU\"\n-            />\n-</ehcache>"},{"sha":"6245ce8013279be72d5c91b5414fe44b7536206f","filename":"console/pom.xml","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -44,11 +44,6 @@\n             <artifactId>openjpa-all</artifactId>\n             <scope>provided</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>net.sf.ehcache</groupId>\n-            <artifactId>ehcache-core</artifactId>\n-            <scope>provided</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.codehaus.groovy</groupId>\n             <artifactId>groovy-all</artifactId>\n@@ -236,7 +231,6 @@\n                                 <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\">\n                                     <patternset>\n                                         <exclude name=\"**/content.xml\" />\n-                                        <exclude name=\"**/ehcache.xml\" />\n                                         <exclude name=\"**/persistence.properties\" />\n                                         <exclude name=\"**/security.properties\" />\n                                         <exclude name=\"**/workflow.properties\" />\n@@ -287,11 +281,6 @@\n                                 <artifactId>openjpa-all</artifactId>\n                             </dependency>\n \n-                            <dependency>\n-                                <groupId>net.sf.ehcache</groupId>\n-                                <artifactId>ehcache-core</artifactId>\n-                            </dependency>\n-\n                             <dependency>\n                                 <groupId>org.codehaus.groovy</groupId>\n                                 <artifactId>groovy-all</artifactId>"},{"sha":"bc1c19b50571c3ddf1551b7682049ea2d9f72dff","filename":"core/pom.xml","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -190,12 +190,6 @@\n             <scope>provided</scope>\n         </dependency>\n \n-        <dependency>\n-            <groupId>net.sf.ehcache</groupId>\n-            <artifactId>ehcache-core</artifactId>\n-            <scope>provided</scope>\n-        </dependency>\n-\n         <dependency>\n             <groupId>org.codehaus.groovy</groupId>\n             <artifactId>groovy-all</artifactId>\n@@ -442,7 +436,6 @@\n                                 <unzip src=\"${project.build.directory}/${project.build.finalName}.war\" dest=\"${cargo.run.dir}\">\n                                     <patternset>\n                                         <exclude name=\"**/content.xml\" />\n-                                        <exclude name=\"**/ehcache.xml\" />\n                                         <exclude name=\"**/persistence.properties\" />\n                                         <exclude name=\"**/security.properties\" />\n                                         <exclude name=\"**/workflow.properties\" />\n@@ -498,11 +491,6 @@\n                                 <artifactId>openjpa-all</artifactId>\n                             </dependency>\n \n-                            <dependency>\n-                                <groupId>net.sf.ehcache</groupId>\n-                                <artifactId>ehcache-core</artifactId>\n-                            </dependency>\n-\n                             <dependency>\n                                 <groupId>org.codehaus.groovy</groupId>\n                                 <artifactId>groovy-all</artifactId>\n@@ -686,7 +674,6 @@\n                                     <resource>\n                                         <excludes>\n                                             <exclude>content.xml</exclude>\n-                                            <exclude>ehcache.xml</exclude>\n                                             <exclude>persistence.properties</exclude>\n                                             <exclude>security.properties</exclude>\n                                             <exclude>workflow.properties</exclude>"},{"sha":"05b79e15d5cb137da8a78fd0ee80e8ef7a4cd124","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/EhCacheDataCache.java","status":"removed","additions":0,"deletions":314,"changes":314,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCache.java?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,314 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.openjpa;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.locks.ReentrantLock;\n-import net.sf.ehcache.CacheManager;\n-import net.sf.ehcache.Ehcache;\n-import net.sf.ehcache.Element;\n-import org.apache.openjpa.datacache.AbstractDataCache;\n-import org.apache.openjpa.datacache.DataCache;\n-import org.apache.openjpa.datacache.DataCachePCData;\n-import org.apache.openjpa.lib.util.Localizer;\n-import org.apache.openjpa.meta.ClassMetaData;\n-import org.apache.openjpa.util.OpenJPAId;\n-\n-/**\n- * A plug-in {@link DataCache L2 Cache} for OpenJPA to use EhCache.\n- * <p/>\n- * This cache maintains a set of Ehcaches per-class basis. The name of the\n- * NamedCache for a persistence class C is determined by the\n- * {@link org.apache.openjpa.persistence.DataCache @DataCache} annotation in the\n- * class C. If no name is specified in @DataCache annotation then a default name\n- * is used. The default name is\n- * <code>openjpa</code> but can be configured via this plug-in's\n- * <code>DefaultName</code> property unless\n- * <code>UseDefaultForUnnamedCaches</code> is set to\n- * <code>false</code>.\n- *\n- * @author Pinaki Poddar\n- * @author Craig Andrews\n- * @author Greg Luck\n- */\n-public class EhCacheDataCache extends AbstractDataCache implements DataCache {\n-\n-    /**\n-     *\n-     */\n-    protected static final Localizer LOCALIZER =\n-            Localizer.forPackage(EhCacheDataCache.class);\n-\n-    private static final long serialVersionUID = -713343580941141830L;\n-\n-    /**\n-     *\n-     */\n-    protected final Map<Class, Ehcache> caches = new HashMap<Class, Ehcache>();\n-\n-    /**\n-     *\n-     */\n-    protected boolean useDefaultForUnnamedCaches;\n-\n-    /**\n-     *\n-     */\n-    protected String defaultName = \"openjpa\";\n-\n-    /**\n-     *\n-     */\n-    protected ReentrantLock writeLock = new ReentrantLock();\n-\n-    /**\n-     * Asserts if default name will be used for the Ehcache for classes which do\n-     * not specify explicitly a name in its @DataCache annotation. The default\n-     * value for this flag is\n-     * <code>true</code>\n-     */\n-    public boolean isUseDefaultForUnnamedCaches() {\n-        return useDefaultForUnnamedCaches;\n-    }\n-\n-    /**\n-     * Sets if default name will be used for the Ehcache for classes which do\n-     * not specify explicitly a name in its @DataCache annotation. The default\n-     * value for this flag is\n-     * <code>true</code>\n-     */\n-    public void setUseDefaultForUnnamedCaches(boolean flag) {\n-        this.useDefaultForUnnamedCaches = flag;\n-    }\n-\n-    /**\n-     * Gets the default name for the Ehcache used for classes which do not\n-     * specify explicitly a name in its @DataCache annotation. The default name\n-     * is\n-     * <code>openjpa</code>\n-     */\n-    public String getDefaultName() {\n-        return defaultName;\n-    }\n-\n-    /**\n-     * Sets the default name for the Ehcache used for classes which do not\n-     * specify explicitly a name in its @DataCache annotation. The default name\n-     * is\n-     * <code>openjpa</code>\n-     */\n-    public void setDefaultName(String defaultName) {\n-        this.defaultName = defaultName;\n-    }\n-\n-    /**\n-     * Clears all entries from the cache\n-     */\n-    @Override\n-    protected void clearInternal() {\n-        for (Ehcache cache : caches.values()) {\n-            cache.removeAll();\n-        }\n-    }\n-\n-    /**\n-     *\n-     * @param oid\n-     * @return\n-     */\n-    @Override\n-    protected DataCachePCData getInternal(Object oid) {\n-        Element result = null;\n-        if (oid instanceof OpenJPAId) {\n-            Class cls = ((OpenJPAId) oid).getType();\n-            Ehcache cache = findCache(cls);\n-            if (cache == null) {\n-                return null;\n-            } else {\n-                result = cache.get(oid);\n-            }\n-        } else {\n-            for (Ehcache cache : caches.values()) {\n-                result = cache.get(oid);\n-                if (result != null) {\n-                    break;\n-                }\n-            }\n-        }\n-        if (result == null) {\n-            return null;\n-        } else {\n-            return (DataCachePCData) result.getObjectValue();\n-        }\n-    }\n-\n-    /**\n-     * Pinning is is not implemented in this version\n-     *\n-     * @param oid\n-     * @return\n-     */\n-    @Override\n-    protected boolean pinInternal(Object oid) {\n-        return false;\n-    }\n-\n-    /**\n-     *\n-     * @param oid\n-     * @param pc\n-     * @return\n-     */\n-    @Override\n-    protected DataCachePCData putInternal(Object oid, DataCachePCData pc) {\n-        Ehcache cache = findCache(pc.getType());\n-        if (cache != null) {\n-            cache.put(new Element(oid, pc));\n-        }\n-        return pc;\n-    }\n-\n-    /**\n-     *\n-     * @param cls\n-     * @param subclasses\n-     */\n-    @Override\n-    protected void removeAllInternal(Class cls, boolean subclasses) {\n-        for (Map.Entry<Class, Ehcache> entry : caches.entrySet()) {\n-            if (subclasses) {\n-                if (cls.isAssignableFrom(entry.getKey())) {\n-                    entry.getValue().removeAll();\n-                }\n-            } else {\n-                if (entry.getKey() == cls) {\n-                    entry.getValue().removeAll();\n-                }\n-            }\n-        }\n-    }\n-\n-    /**\n-     *\n-     * @param oid\n-     * @return\n-     */\n-    @Override\n-    protected DataCachePCData removeInternal(Object oid) {\n-        DataCachePCData result = getInternal(oid);\n-        Class cls = determineClassFromObjectId(oid);\n-        if (caches.containsKey(cls)) {\n-            caches.get(cls).remove(oid);\n-        }\n-        return result;\n-    }\n-\n-    /**\n-     * Pinning and unpinning are not implemented in this version\n-     *\n-     * @param oid\n-     * @return\n-     */\n-    @Override\n-    protected boolean unpinInternal(Object oid) {\n-        return false;\n-    }\n-\n-    /**\n-     *\n-     */\n-    public void writeLock() {\n-        writeLock.lock();\n-    }\n-\n-    /**\n-     *\n-     */\n-    public void writeUnlock() {\n-        writeLock.unlock();\n-    }\n-\n-    /**\n-     * Find an Ehcache for the given Class. Makes all the following attempt in\n-     * order to find a cache and if every attempt fails returns null:\n-     * <p/>\n-     * <LI>NamedCache for the given class has been obtained before <LI>Meta-data\n-     * for the given class annotated for a\n-     * {@link org.apache.openjpa.persistence.DataCache DataCache}. <LI>{@link #setUseDefaultForUnnamedCaches(boolean) Configured}\n-     * to use default cache.\n-     */\n-    protected Ehcache findCache(Class clazz) {\n-        Ehcache cache = caches.get(clazz);\n-        if (cache == null) {\n-            ClassMetaData meta = conf.getMetaDataRepositoryInstance().\n-                    getCachedMetaData(clazz);\n-            String name = null;\n-            if (meta != null) {\n-                name = meta.getDataCacheName();\n-            }\n-            if ((name == null || \"default\".equals(name))\n-                    && !isUseDefaultForUnnamedCaches()) {\n-                name = clazz.getName();\n-            } else if (isUseDefaultForUnnamedCaches()) {\n-                name = getDefaultName();\n-            }\n-\n-            cache = CacheManager.getInstance().getEhcache(name);\n-            if (cache == null) {\n-                cache = getOrCreateCache(name);\n-            }\n-\n-            //if (cache != null) {\n-            caches.put(clazz, cache);\n-            /*\n-             * } else if (name == null) { throw new\n-             * UserException(LOCALIZER.get(\"no-cache-name\", clazz)); } else {\n-             * throw new UserException(LOCALIZER.get(\"no-cache\", clazz, name));\n-            }\n-             */\n-        }\n-        return cache;\n-    }\n-\n-    /**\n-     * Gets a cache. If the cache does not exist it is created using a hardcoded\n-     * default.\n-     *\n-     * @param name\n-     * @return\n-     */\n-    protected synchronized Ehcache getOrCreateCache(String name) {\n-        CacheManager cacheManager = CacheManager.getInstance();\n-        Ehcache ehCache = cacheManager.getEhcache(name);\n-        if (ehCache == null) {\n-            cacheManager.addCache(name);\n-            ehCache = cacheManager.getEhcache(name);\n-        }\n-        return ehCache;\n-    }\n-\n-    /**\n-     *\n-     * @param oid\n-     * @return\n-     */\n-    protected Class determineClassFromObjectId(Object oid) {\n-        if (oid instanceof OpenJPAId) {\n-            return ((OpenJPAId) oid).getType();\n-        }\n-        return null;\n-    }\n-}"},{"sha":"075e17fab8d40fe1aee5c50bbadeaa8b1fb5f81a","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/EhCacheDataCacheManager.java","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCacheManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCacheManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDataCacheManager.java?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,46 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.openjpa;\n-\n-import net.sf.ehcache.Ehcache;\n-import org.apache.openjpa.datacache.DataCache;\n-import org.apache.openjpa.datacache.DataCacheManager;\n-import org.apache.openjpa.datacache.DataCacheManagerImpl;\n-\n-/**\n- * @author Craig Andrews\n- * @author Greg Luck\n- */\n-public class EhCacheDataCacheManager\n-        extends DataCacheManagerImpl implements DataCacheManager {\n-\n-    @Override\n-    public DataCache getDataCache(String name, boolean create) {\n-        DataCache cache = super.getDataCache(name, create);\n-        if (cache == null) {\n-            cache = getSystemDataCache();\n-        }\n-        return cache;\n-    }\n-\n-    @Override\n-    public EhCacheDataCache getSystemDataCache() {\n-        return ((EhCacheDataCache) super.getSystemDataCache());\n-    }\n-\n-    public Ehcache getEhCache(Class cls) {\n-        return getSystemDataCache().findCache(cls);\n-    }\n-}\n\\ No newline at end of file"},{"sha":"093d97e914c100aec8d3cae9accc74d086608478","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/EhCacheDerivation.java","status":"removed","additions":0,"deletions":118,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDerivation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDerivation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheDerivation.java?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,118 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.openjpa;\n-\n-import java.util.Map;\n-import org.apache.openjpa.conf.OpenJPAConfiguration;\n-import org.apache.openjpa.conf.OpenJPAConfigurationImpl;\n-import org.apache.openjpa.lib.conf.AbstractProductDerivation;\n-import org.apache.openjpa.lib.conf.Configuration;\n-import org.apache.openjpa.lib.conf.ConfigurationProvider;\n-import org.apache.openjpa.lib.conf.Configurations;\n-import org.apache.openjpa.lib.util.Localizer;\n-\n-/**\n- * Introduces a DataCache specialized for EhCache. This derivation is activated\n- * by setting\n- * <code>openjpa.DataCacheManager</code> configuration property to\n- * <code>\"ehcache\"</code>. <BR> This derivation also forces that\n- * <code>openjpa.DataCache</code> and\n- * <code>openjpa.RemoteCommitProvider</code> property is <em>not</em> specified\n- * or specified as\n- * <code>\"ehcache\"</code> and\n- * <code>\"none\"</code> respectively.\n- *\n- * @author Pinaki Poddar\n- * @author Craig Andrews\n- * @author Greg Luck\n- */\n-public class EhCacheDerivation extends AbstractProductDerivation {\n-\n-    public static final String EHCACHE = \"ehcache\";\n-\n-    public static final String NO_RCP = \"none\";\n-\n-    private static final Localizer LOCALIZER =\n-            Localizer.forPackage(EhCacheDerivation.class);\n-\n-    @Override\n-    public void validate()\n-            throws Exception {\n-        Class.forName(\"net.sf.ehcache.CacheManager\");\n-    }\n-\n-    @Override\n-    public int getType() {\n-        return TYPE_FEATURE;\n-    }\n-\n-    @Override\n-    public boolean beforeConfigurationLoad(Configuration conf) {\n-        if (conf instanceof OpenJPAConfiguration) {\n-            OpenJPAConfigurationImpl oconf = (OpenJPAConfigurationImpl) conf;\n-            oconf.dataCacheManagerPlugin.setAlias(EHCACHE,\n-                    EhCacheDataCacheManager.class.getName());\n-            oconf.dataCachePlugin.setAlias(EHCACHE,\n-                    EhCacheDataCache.class.getName());\n-            oconf.queryCachePlugin.setAlias(EHCACHE,\n-                    EhCacheQueryCache.class.getName());\n-            oconf.remoteProviderPlugin.setAlias(\"none\",\n-                    NoOpRemoteCommitProvider.class.getName());\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean beforeConfigurationConstruct(ConfigurationProvider cp) {\n-        Map props = cp.getProperties();\n-        Object dcm = Configurations.getProperty(\"DataCacheManager\", props);\n-        if (dcm != null && isCompliant(dcm, EhCacheDataCacheManager.class)) {\n-            Object dc = Configurations.getProperty(\"DataCache\", props);\n-            if (dc == null) {\n-                cp.addProperty(\"openjpa.DataCache\", EHCACHE);\n-            } else if (!isCompliant(dc, EhCacheDataCache.class)) {\n-                warn(\"incompatible-configuration\", \"DataCache\", dc, EHCACHE);\n-                cp.addProperty(\"openjpa.DataCache\", EHCACHE);\n-            }\n-            Object rcp = Configurations.getProperty(\"RemoteCommitProvider\",\n-                    props);\n-            if (rcp == null) {\n-                cp.addProperty(\"openjpa.RemoteCommitProvider\",\n-                        NoOpRemoteCommitProvider.class.getName());\n-            } else if (!isCompliant(rcp, NoOpRemoteCommitProvider.class)) {\n-                warn(\"incompatible-configuration\", \"RemoteCommitProvider\",\n-                        rcp, NO_RCP);\n-                cp.addProperty(\"openjpa.RemoteCommitProvider\", NO_RCP);\n-            }\n-            Object qc = Configurations.getProperty(\"QueryCache\", props);\n-            if (qc == null) {\n-                cp.addProperty(\"openjpa.QueryCache\", EHCACHE);\n-            }\n-            //using a non-ehcache query cache with an ehcache datacache is perfectly okay\n-            //so don't warn if that is the configuration\n-        }\n-        return false;\n-    }\n-\n-    boolean isCompliant(Object dcm, Class cls) {\n-        return dcm.equals(EHCACHE) || dcm.equals(cls.getName()) || cls.\n-                isAssignableFrom(dcm.getClass());\n-    }\n-\n-    void warn(String key, Object... args) {\n-        Localizer.Message message = LOCALIZER.get(key, args);\n-        System.err.println(\"*** WARN: \" + message);\n-    }\n-}"},{"sha":"9f31d02ce550aff60c6ff1cbad67adc684513304","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/EhCacheQueryCache.java","status":"removed","additions":0,"deletions":109,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheQueryCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheQueryCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FEhCacheQueryCache.java?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,109 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.openjpa;\n-\n-import java.util.Collection;\n-import java.util.concurrent.locks.ReentrantLock;\n-import net.sf.ehcache.CacheManager;\n-import net.sf.ehcache.Ehcache;\n-import net.sf.ehcache.Element;\n-import org.apache.openjpa.datacache.AbstractQueryCache;\n-import org.apache.openjpa.datacache.QueryCache;\n-import org.apache.openjpa.datacache.QueryKey;\n-import org.apache.openjpa.datacache.QueryResult;\n-\n-/**\n- * @author Craig Andrews\n- * @author Greg Luck\n- */\n-public class EhCacheQueryCache\n-        extends AbstractQueryCache implements QueryCache {\n-\n-    private static final long serialVersionUID = -8952383938053159033L;\n-\n-    protected boolean useDefaultForUnnamedCaches = true;\n-\n-    protected String cacheName = \"openjpa-querycache\";\n-\n-    protected ReentrantLock writeLock = new ReentrantLock();\n-\n-    @Override\n-    protected void clearInternal() {\n-        getOrCreateCache(cacheName).removeAll();\n-    }\n-\n-    @Override\n-    protected QueryResult getInternal(QueryKey qk) {\n-        Ehcache cache = getOrCreateCache(cacheName);\n-        Element result = cache.get(qk);\n-        if (result == null) {\n-            return null;\n-        } else {\n-            return (QueryResult) result.getValue();\n-        }\n-    }\n-\n-    @Override\n-    protected Collection keySet() {\n-        Ehcache cache = getOrCreateCache(cacheName);\n-        return cache.getKeys();\n-    }\n-\n-    @Override\n-    protected boolean pinInternal(QueryKey qk) {\n-        return false;\n-    }\n-\n-    @Override\n-    protected QueryResult putInternal(QueryKey qk, QueryResult oids) {\n-        Ehcache cache = getOrCreateCache(cacheName);\n-        Element element = new Element(qk, oids);\n-        cache.put(element);\n-        return oids;\n-    }\n-\n-    @Override\n-    protected QueryResult removeInternal(QueryKey qk) {\n-        Ehcache cache = getOrCreateCache(cacheName);\n-        QueryResult queryResult = getInternal(qk);\n-        cache.remove(qk);\n-        return queryResult;\n-    }\n-\n-    @Override\n-    protected boolean unpinInternal(QueryKey qk) {\n-        return false;\n-    }\n-\n-    @Override\n-    public void writeLock() {\n-        writeLock.lock();\n-    }\n-\n-    @Override\n-    public void writeUnlock() {\n-        writeLock.unlock();\n-    }\n-\n-    protected synchronized Ehcache getOrCreateCache(String name) {\n-        CacheManager cacheManager = CacheManager.getInstance();\n-        Ehcache ehCache = cacheManager.getEhcache(name);\n-        if (ehCache == null) {\n-            cacheManager.addCache(name);\n-            ehCache = cacheManager.getEhcache(name);\n-        }\n-        return ehCache;\n-    }\n-}"},{"sha":"ebf48e27c32d7228748c14de3c8af2c6a271f7ad","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/NoOpRemoteCommitProvider.java","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FNoOpRemoteCommitProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FNoOpRemoteCommitProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2FNoOpRemoteCommitProvider.java?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,37 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.openjpa;\n-\n-import org.apache.openjpa.event.AbstractRemoteCommitProvider;\n-import org.apache.openjpa.event.RemoteCommitEvent;\n-import org.apache.openjpa.event.RemoteCommitProvider;\n-\n-/**\n- * @author Craig Andrews\n- * @author Greg Luck\n- */\n-public class NoOpRemoteCommitProvider\n-        extends AbstractRemoteCommitProvider implements RemoteCommitProvider {\n-\n-    @Override\n-    public void broadcast(RemoteCommitEvent event) {\n-        //noop\n-    }\n-\n-    @Override\n-    public void close() {\n-        //noop\n-    }\n-}"},{"sha":"5ba6984891da95514b5278d63c77ecd8b8281983","filename":"core/src/main/java/org/syncope/core/persistence/openjpa/localizer.properties","status":"removed","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2Flocalizer.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2Flocalizer.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fopenjpa%2Flocalizer.properties?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,7 +0,0 @@\n-incompatible-configuration: \"{0}\" property has been configured to incompatible \\\n-\tvalue \"{1}\". Forcing this value to \"{2}\".\n-no-cache: Can not find EhCache \"{1}\" to cache instance of class \\\n-\t\"{0}\". Make sure EhCache is configured for a cache named \"{1}\". \n-no-cache-name: No named cache is specified to cache  instance of class \"{0}\". \\\n-\tEither specify a name for @DataCache annotation in class \"{0}\" or \\\n-\tset \"UseDefaultForUnnamedCaches\" attribute of \"openjpa.DataCache\" to \"true\". \n\\ No newline at end of file"},{"sha":"8ce345dfab1ff35dfa6cd46b269b120de7ed9769","filename":"core/src/main/resources/META-INF/persistence.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -18,7 +18,6 @@\n              http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n              version=\"2.0\">\n     <persistence-unit name=\"syncopePersistenceUnit\">\n-        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>\n         <validation-mode>NONE</validation-mode>\n     </persistence-unit>\n </persistence>"},{"sha":"d828d7816086883c42fa0d951ab463b15321336f","filename":"core/src/main/resources/ehcache.xml","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fresources%2Fehcache.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Fmain%2Fresources%2Fehcache.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fehcache.xml?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,50 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:noNamespaceSchemaLocation=\"http://ehcache.org/ehcache.xsd\">\n-\n-    <cacheManagerPeerProviderFactory\n-      class=\"net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory\"\n-      properties=\"peerDiscovery=automatic, multicastGroupAddress=230.0.0.1,\n-                  multicastGroupPort=4446, timeToLive=32\"/>\n-\n-    <cacheManagerPeerListenerFactory\n-      class=\"net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory\"/>\n-\n-    <defaultCache\n-      maxElementsInMemory=\"10000\"\n-      eternal=\"false\"\n-      timeToIdleSeconds=\"600\"\n-      timeToLiveSeconds=\"1200\"\n-      overflowToDisk=\"false\"\n-      diskSpoolBufferSizeMB=\"0\"\n-      maxElementsOnDisk=\"0\"\n-      diskPersistent=\"false\"\n-      diskExpiryThreadIntervalSeconds=\"0\"\n-      memoryStoreEvictionPolicy=\"LRU\">\n-\n-        <cacheEventListenerFactory\n-          class=\"net.sf.ehcache.distribution.RMICacheReplicatorFactory\"\n-          properties=\"replicateAsynchronously=true,\n-\t  asynchronousReplicationIntervalMillis=1000,\n-          replicatePuts=false,\n-          replicatePutsViaCopy=false,\n-          replicateUpdates=true,\n-          replicateUpdatesViaCopy=false\"\n-          propertySeparator=\",\" />\n-\n-    </defaultCache>\n-\n-</ehcache>"},{"sha":"d2a1572304338d69a562c0272556fca2b09f60cf","filename":"core/src/main/resources/persistenceContextEMFactory.xml","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -33,12 +33,13 @@\n                 <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n                 <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n                 \n-                <entry key=\"openjpa.DataCacheManager\"\n-                       value=\"org.syncope.core.persistence.openjpa.EhCacheDataCacheManager\"/>\n-                <entry key=\"openjpa.DataCache\"\n-                       value=\"org.syncope.core.persistence.openjpa.EhCacheDataCache\"/>\n-                <entry key=\"openjpa.QueryCache\"\n-                       value=\"org.syncope.core.persistence.openjpa.EhCacheQueryCache\"/>\n+                <entry key=\"openjpa.ReadLockLevel\" value=\"none\"/>\n+                <entry key=\"openjpa.WriteLockLevel\" value=\"write\"/>\n+                <entry key=\"openjpa.LockTimeout\" value=\"30000\"/>\n+                                \n+                <entry key=\"openjpa.DataCache\" value=\"true\" />\n+                <entry key=\"openjpa.QueryCache\" value=\"true\"/>\n+                <entry key=\"openjpa.RemoteCommitProvider\" value=\"sjvm\" />\n             </map>\n         </property>\n     </bean>"},{"sha":"cc594116bd629521c8eda182629b854a57667349","filename":"core/src/main/webapp/cacheStats.jsp","status":"modified","additions":49,"deletions":6,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -10,6 +10,9 @@\n <%@page import=\"org.apache.openjpa.persistence.OpenJPAEntityManagerFactory\"%>\n <%@page import=\"org.syncope.core.util.ApplicationContextManager\"%>\n <%@page import=\"org.springframework.context.ConfigurableApplicationContext\"%>\n+<%@page import=\"org.apache.openjpa.datacache.QueryKey\"%>\n+<%@page import=\"org.apache.openjpa.kernel.QueryStatistics\"%>\n+<%@page import=\"org.apache.openjpa.persistence.QueryResultCacheImpl\"%>\n <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n <html>\n     <head>\n@@ -57,6 +60,11 @@\n             EntityManagerFactory emf = context.getBean(\n                     EntityManagerFactory.class);\n             OpenJPAEntityManagerFactory oemf = OpenJPAPersistence.cast(emf);\n+\n+            QueryStatistics<QueryKey> queryStatistics =\n+                    ((QueryResultCacheImpl) oemf.getQueryResultCache()).\n+                    getDelegate().getStatistics();\n+            \n             CacheStatisticsImpl statistics = (CacheStatisticsImpl) oemf.\n                     getStoreCache().getStatistics();\n \n@@ -74,6 +82,7 @@\n                 statistics.disable();\n                 info.append(\"Statistics disabled\\n\");\n             } else if (\"clear\".equals(action)) {\n+                queryStatistics.reset();\n                 statistics.reset();\n                 info.append(\"Statistics cleared\\n\");\n             }\n@@ -89,8 +98,8 @@\n         <p/>\n         <a href=\"?\">Reload</a>\n         <p/>\n-           <a href=\"?do=<%=(statistics.isEnabled()\n-                   ? \"deactivate\" : \"activate\")%>\">\n+        <a href=\"?do=<%=(statistics.isEnabled()\n+                ? \"deactivate\" : \"activate\")%>\">\n             <%=(statistics.isEnabled()\n                     ? \"DEACTIVATE\" : \"ACTIVATE\")%></a>\n         <a href=\"?do=clear\">CLEAR</a>\n@@ -105,12 +114,46 @@\n             </tr>\n             <tr>\n                 <th class=\"c bd1 bg1\">Reads</th>\n-                <td><%=statistics.getHitCount()%></td>\n+                <td><%=statistics.getReadCount()%></td>\n             </tr>\n             <tr>\n                 <th class=\"c bd1 bg1\">Writes</th>\n                 <td><%=statistics.getWriteCount()%></td>\n             </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Query Hits</th>\n+                <td><%=queryStatistics.getHitCount()%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Query Executions</th>\n+                <td><%=queryStatistics.getExecutionCount()%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Query Evictions</th>\n+                <td><%=queryStatistics.getEvictionCount()%></td>\n+            </tr>\n+        </table>\n+        <p/>\n+        <table width=\"100%\">\n+            <tr><th colspan=\"3\" class=\"c bd1 bg2\">Query statistics</th></tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Query</th>\n+                <th class=\"c bd1 bg1\">Hits</th>\n+                <th class=\"c bd1 bg1\">Executions</th>\n+            </tr>\n+            <%\n+                boolean odd = true;\n+                for (QueryKey key : queryStatistics.keys()) {\n+            %>\n+            <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n+                <td><%=key%></td>\n+                <td><%=queryStatistics.getHitCount(key)%></td>\n+                <td><%=queryStatistics.getExecutionCount(key)%></td>\n+            </tr>\n+            <%\n+                    odd = !odd;\n+                }\n+            %>\n         </table>\n         <p/>\n         <table width=\"100%\">\n@@ -122,13 +165,13 @@\n                 <th class=\"c bd1 bg1\">Writes</th>\n             </tr>\n             <%\n-                boolean odd = true;\n+                odd = true;\n                 for (String className : statistics.classNames()) {\n             %>\n             <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n                 <td><%=className%></td>\n                 <td><%=statistics.getHitCount(className)%></td>\n-                <td><%=statistics.getHitCount(className)%></td>\n+                <td><%=statistics.getReadCount(className)%></td>\n                 <td><%=statistics.getWriteCount(className)%></td>\n             </tr>\n             <%\n@@ -137,4 +180,4 @@\n             %>\n         </table>\n     </body>\n-</html>\n\\ No newline at end of file\n+</html>"},{"sha":"f710842cfadff09210aff3268dec7298349846c2","filename":"core/src/test/java/org/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -14,10 +14,10 @@\n  */\n package org.syncope.core.rest;\n \n-import java.util.Arrays;\n-import java.util.List;\n import static org.junit.Assert.*;\n \n+import java.util.Arrays;\n+import java.util.List;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;"},{"sha":"a898c73420f70456c92160ae363386c9de1a1b9c","filename":"core/src/test/resources/ehcache.xml","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Ftest%2Fresources%2Fehcache.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a/core%2Fsrc%2Ftest%2Fresources%2Fehcache.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fehcache.xml?ref=d4c0630e9d2d9cc3f70c91b7cbb48b8798b19c2a","patch":"@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:noNamespaceSchemaLocation=\"http://ehcache.org/ehcache.xsd\">\n-  \n-    <diskStore path=\"${project.build.directory}/syncope-cache\"/>\n-\n-    <defaultCache\n-            maxElementsInMemory=\"10000\"\n-            eternal=\"false\"\n-            timeToIdleSeconds=\"120\"\n-            timeToLiveSeconds=\"120\"\n-            overflowToDisk=\"true\"\n-            maxElementsOnDisk=\"10000000\"\n-            diskPersistent=\"false\"\n-            diskExpiryThreadIntervalSeconds=\"120\"\n-            memoryStoreEvictionPolicy=\"LRU\"\n-            />\n-</ehcache>"},{"sha":"d687d55e7360958477092591928d87ca67b29da3","filename":"parent/pom.xml","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a1aec5a6271846d1103529c0dc8764686169777/parent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a1aec5a6271846d1103529c0dc8764686169777/parent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/parent%2Fpom.xml?ref=1a1aec5a6271846d1103529c0dc8764686169777","patch":"@@ -153,7 +153,6 @@\n         <quartz.version>1.8.5</quartz.version>\n \n         <openjpa.version>2.2.0-SNAPSHOT</openjpa.version>\n-        <ehcache.version>2.5.0</ehcache.version>\n \n         <wicket.version>1.5.4</wicket.version>\n \n@@ -284,12 +283,6 @@\n                 <version>${openjpa.version}</version>\n             </dependency>\n \n-            <dependency>\n-                <groupId>net.sf.ehcache</groupId>\n-                <artifactId>ehcache-core</artifactId>\n-                <version>${ehcache.version}</version>\n-            </dependency>\n-\n             <dependency>\n                 <groupId>org.apache.velocity</groupId>\n                 <artifactId>velocity</artifactId>"}]}