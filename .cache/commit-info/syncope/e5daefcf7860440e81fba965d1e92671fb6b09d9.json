{"sha":"e5daefcf7860440e81fba965d1e92671fb6b09d9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1ZGFlZmNmNzg2MDQ0MGU4MWZiYTk2NWQxZTkyNjcxZmI2YjA5ZDk=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-01-31T16:07:47Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-01-31T16:07:47Z"},"message":"[SYNCOPE-297] - External Attributes are showing up for AccoundId/Password in Resource User Mappings\n - Applying Francesco's modified version of my patch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1441037 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91b60b29983ef4922c9d98b065f6dd6f8f347e43","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91b60b29983ef4922c9d98b065f6dd6f8f347e43"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e5daefcf7860440e81fba965d1e92671fb6b09d9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5daefcf7860440e81fba965d1e92671fb6b09d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5daefcf7860440e81fba965d1e92671fb6b09d9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5daefcf7860440e81fba965d1e92671fb6b09d9/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"e519134fe6e53fd72e010e8a6e5c776f29398990","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e519134fe6e53fd72e010e8a6e5c776f29398990","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e519134fe6e53fd72e010e8a6e5c776f29398990"}],"stats":{"total":31,"additions":18,"deletions":13},"files":[{"sha":"d02b5a59a7f96e7e00861ff761e61afcc0cf61aa","filename":"common/src/main/java/org/apache/syncope/common/to/MappingTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5daefcf7860440e81fba965d1e92671fb6b09d9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5daefcf7860440e81fba965d1e92671fb6b09d9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingTO.java?ref=e5daefcf7860440e81fba965d1e92671fb6b09d9","patch":"@@ -77,7 +77,7 @@ protected <T extends MappingItemTO> boolean addAccountIdItem(final T accountIdIt\n             throw new IllegalArgumentException(\"Password attributes cannot be set as accountId\");\r\n         }\r\n \r\n-        accountIdItem.setExtAttrName(\"__NAME__\");\r\n+        accountIdItem.setExtAttrName(null);\r\n         accountIdItem.setAccountid(true);\r\n \r\n         return this.addItem(accountIdItem);\r\n@@ -105,7 +105,7 @@ public boolean setPasswordItem(final MappingItemTO passwordItem) {\n         if (passwordItem == null) {\r\n             return this.removeItem(getPasswordItem());\r\n         } else {\r\n-            passwordItem.setExtAttrName(\"__PASSWORD__\");\r\n+            passwordItem.setExtAttrName(null);\r\n             passwordItem.setPassword(true);\r\n             return addItem(passwordItem);\r\n         }\r"},{"sha":"367cc91cd7ea60d8a9cf0c04846eba6236ab4b9a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=e5daefcf7860440e81fba965d1e92671fb6b09d9","patch":"@@ -297,7 +297,7 @@ public CharSequence getPrecondition(final Component component) {\n                 final AjaxDropDownChoicePanel entitiesPanel = new AjaxDropDownChoicePanel(\"entities\",\n                         new ResourceModel(\"entities\", \"entities\").getObject(), new Model(entity));\n                 entitiesPanel.setChoices(attrType == AttributableType.ROLE\n-                        ? Collections.singletonList(AttributableType.ROLE)\n+                        ? Collections.<AttributableType>singletonList(AttributableType.ROLE)\n                         : Arrays.asList(AttributableType.values()));\n                 entitiesPanel.setStyleSheet(DEF_FIELD_STYLE);\n                 entitiesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n@@ -324,12 +324,17 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                             \"extAttrNames\").getObject(), new PropertyModel<String>(mapItem, \"extAttrName\"));\n                 } else {\n                     extAttrName = new AjaxDropDownChoicePanel<String>(\"extAttrName\", new ResourceModel(\"extAttrNames\",\n-                            \"extAttrNames\").getObject(), new PropertyModel(mapItem, \"extAttrName\"));\n+                            \"extAttrNames\").getObject(), new PropertyModel(mapItem, \"extAttrName\"), false);\n                     ((AjaxDropDownChoicePanel) extAttrName).setChoices(schemaNames);\n                 }\n                 boolean required = false;\n-                if (mapItem != null && !mapItem.isAccountid() && !mapItem.isPassword()) {\n-                    required = true;\n+                if (mapItem != null) {\n+                    boolean accountIdOrPassword = mapItem.isAccountid() || mapItem.isPassword();\n+                    if (!accountIdOrPassword) {\n+                        required = true;\n+                    } else if (accountIdOrPassword && !schemaNames.isEmpty()) {\n+                        ((AjaxDropDownChoicePanel) extAttrName).setModelObject(null);\n+                    }\n                 }\n                 extAttrName.setRequired(required);\n                 extAttrName.setEnabled(required);"},{"sha":"bd0d2e672785366f63be2b2d7680689d3024f303","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=e5daefcf7860440e81fba965d1e92671fb6b09d9","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.util.List;\n-\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.CheckBox;\n@@ -74,7 +73,6 @@ public Serializable getObject() {\n                 Boolean value = null;\n \n                 if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n-\n                     value = \"true\".equalsIgnoreCase(list.get(0).toString());\n                 }\n "},{"sha":"656bf97b311621f3b342189e3104f04eeb5ee389","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=e5daefcf7860440e81fba965d1e92671fb6b09d9","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Collections;\n import java.util.List;\n-\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n@@ -34,13 +33,17 @@\n     private static final long serialVersionUID = -4716376580659196095L;\n \n     public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model) {\n+        this(id, name, model, true);\n+    }\n \n+    public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model, boolean enableOnBlur) {\n         super(id, name, model);\n \n-        field = new DropDownChoice(\"dropDownChoiceField\", model, Collections.emptyList(), new ChoiceRenderer());\n+        field = new DropDownChoice<T>(\"dropDownChoiceField\", model, Collections.<T>emptyList(),\n+                new ChoiceRenderer<T>());\n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (!isReadOnly()) {\n+        if (enableOnBlur) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n                 private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"4f7b2db450f571ad59c2aaaed420975c9dea04f2","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5daefcf7860440e81fba965d1e92671fb6b09d9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=e5daefcf7860440e81fba965d1e92671fb6b09d9","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.util.List;\n-\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponent;\n@@ -165,7 +164,7 @@ public void setObject(final Serializable object) {\n     public FieldPanel clone() {\n         final FieldPanel panel;\n         try {\n-            panel = this.getClass().getConstructor(new Class[] { String.class, String.class, IModel.class })\n+            panel = this.getClass().getConstructor(new Class[]{String.class, String.class, IModel.class})\n                     .newInstance(id, name, new Model(null));\n         } catch (Exception e) {\n             LOG.error(\"Error cloning field panel\", e);"}]}