{"sha":"4a82fb302b08e05360adc30e56780f180e97f8cd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRhODJmYjMwMmIwOGUwNTM2MGFkYzMwZTU2NzgwZjE4MGU5N2Y4Y2Q=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-05T10:03:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-05T10:03:34Z"},"message":"[SYNCOPE-1057] More complete AnyPatch generation for update during pull","tree":{"sha":"402c6223cffb806b50c7773c72940fc71f1b7705","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/402c6223cffb806b50c7773c72940fc71f1b7705"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4a82fb302b08e05360adc30e56780f180e97f8cd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a82fb302b08e05360adc30e56780f180e97f8cd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a82fb302b08e05360adc30e56780f180e97f8cd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a82fb302b08e05360adc30e56780f180e97f8cd/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"76c79169ebdbaafde900aff82f0fca6a1a605b1f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76c79169ebdbaafde900aff82f0fca6a1a605b1f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/76c79169ebdbaafde900aff82f0fca6a1a605b1f"}],"stats":{"total":83,"additions":64,"deletions":19},"files":[{"sha":"277d921a1cdca6cd6273ba5e7c045d11837e214e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a82fb302b08e05360adc30e56780f180e97f8cd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a82fb302b08e05360adc30e56780f180e97f8cd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=4a82fb302b08e05360adc30e56780f180e97f8cd","patch":"@@ -400,15 +400,17 @@ public static GroupPatch diff(final GroupTO updated, final GroupTO original, fin\n         // 2. ownership\n         result.setUserOwner(\n                 replacePatchItem(updated.getUserOwner(), original.getUserOwner(), new StringReplacePatchItem()));\n-        result.setGroupOwner(replacePatchItem(updated.getGroupOwner(), original.getGroupOwner(),\n-                new StringReplacePatchItem()));\n+        result.setGroupOwner(\n+                replacePatchItem(updated.getGroupOwner(), original.getGroupOwner(), new StringReplacePatchItem()));\n \n-        // 3. dynamic membership\n-        result.setUDynMembershipCond(updated.getUDynMembershipCond());\n-        result.getADynMembershipConds().putAll(updated.getADynMembershipConds());\n+        if (!incremental) {\n+            // 3. dynamic membership\n+            result.setUDynMembershipCond(updated.getUDynMembershipCond());\n+            result.getADynMembershipConds().putAll(updated.getADynMembershipConds());\n \n-        // 4. type extensions\n-        result.getTypeExtensions().addAll(updated.getTypeExtensions());\n+            // 4. type extensions\n+            result.getTypeExtensions().addAll(updated.getTypeExtensions());\n+        }\n \n         return result;\n     }"},{"sha":"fbd7c32cf018819827e404720834d8e372dfd6d1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":55,"deletions":12,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a82fb302b08e05360adc30e56780f180e97f8cd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a82fb302b08e05360adc30e56780f180e97f8cd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=4a82fb302b08e05360adc30e56780f180e97f8cd","patch":"@@ -116,7 +116,10 @@ public static String getPassword(final Object pwd) {\n      */\n     @Transactional(readOnly = true)\n     public <T extends AnyTO> T getAnyTO(\n-            final ConnectorObject obj, final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n+            final ConnectorObject obj,\n+            final PullTask pullTask,\n+            final Provision provision,\n+            final AnyUtils anyUtils) {\n \n         T anyTO = getAnyTOFromConnObject(obj, pullTask, provision, anyUtils);\n \n@@ -170,40 +173,80 @@ public <T extends AnyTO> T getAnyTO(\n      */\n     @SuppressWarnings(\"unchecked\")\n     @Transactional(readOnly = true)\n-    public <T extends AnyPatch> T getAnyPatch(final String key, final ConnectorObject obj,\n-            final AnyTO original, final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n+    public <T extends AnyPatch> T getAnyPatch(\n+            final String key,\n+            final ConnectorObject obj,\n+            final AnyTO original,\n+            final PullTask pullTask,\n+            final Provision provision,\n+            final AnyUtils anyUtils) {\n \n         AnyTO updated = getAnyTOFromConnObject(obj, pullTask, provision, anyUtils);\n         updated.setKey(key);\n \n+        T anyPatch = null;\n         if (null != anyUtils.getAnyTypeKind()) {\n             switch (anyUtils.getAnyTypeKind()) {\n                 case USER:\n+                    UserTO originalUser = (UserTO) original;\n+                    UserTO updatedUser = (UserTO) updated;\n+\n+                    if (StringUtils.isBlank(updatedUser.getUsername())) {\n+                        updatedUser.setUsername(originalUser.getUsername());\n+                    }\n+\n                     // update password if and only if password is really changed\n                     User user = userDAO.authFind(key);\n-                    if (StringUtils.isBlank(((UserTO) updated).getPassword())\n-                            || ENCRYPTOR.verify(((UserTO) updated).getPassword(),\n+                    if (StringUtils.isBlank(updatedUser.getPassword())\n+                            || ENCRYPTOR.verify(updatedUser.getPassword(),\n                                     user.getCipherAlgorithm(), user.getPassword())) {\n \n-                        ((UserTO) updated).setPassword(null);\n+                        updatedUser.setPassword(null);\n                     }\n-                    return (T) AnyOperations.diff(((UserTO) updated), ((UserTO) original), true);\n+\n+                    updatedUser.setSecurityQuestion(updatedUser.getSecurityQuestion());\n+                    updatedUser.setMustChangePassword(originalUser.isMustChangePassword());\n+\n+                    anyPatch = (T) AnyOperations.diff(updatedUser, originalUser, true);\n+                    break;\n \n                 case GROUP:\n-                    return (T) AnyOperations.diff(((GroupTO) updated), ((GroupTO) original), true);\n+                    GroupTO originalGroup = (GroupTO) original;\n+                    GroupTO updatedGroup = (GroupTO) updated;\n+\n+                    if (StringUtils.isBlank(updatedGroup.getName())) {\n+                        updatedGroup.setName(originalGroup.getName());\n+                    }\n+                    updatedGroup.setUserOwner(originalGroup.getUserOwner());\n+                    updatedGroup.setGroupOwner(originalGroup.getGroupOwner());\n+                    updatedGroup.getTypeExtensions().addAll(originalGroup.getTypeExtensions());\n+\n+                    anyPatch = (T) AnyOperations.diff(updatedGroup, originalGroup, true);\n+                    break;\n \n                 case ANY_OBJECT:\n-                    return (T) AnyOperations.diff(((AnyObjectTO) updated), ((AnyObjectTO) original), true);\n+                    AnyObjectTO originalAnyObject = (AnyObjectTO) original;\n+                    AnyObjectTO updatedAnyObject = (AnyObjectTO) updated;\n+\n+                    if (StringUtils.isBlank(updatedAnyObject.getName())) {\n+                        updatedAnyObject.setName(originalAnyObject.getName());\n+                    }\n+\n+                    anyPatch = (T) AnyOperations.diff(updatedAnyObject, originalAnyObject, true);\n+                    break;\n \n                 default:\n             }\n         }\n \n-        return null;\n+        return anyPatch;\n     }\n \n-    private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n-            final PullTask pullTask, final Provision provision, final AnyUtils anyUtils) {\n+    private <T extends AnyTO> T getAnyTOFromConnObject(\n+            final ConnectorObject obj,\n+            final PullTask pullTask,\n+            final Provision provision,\n+            final AnyUtils anyUtils) {\n \n         T anyTO = anyUtils.newAnyTO();\n         anyTO.setType(provision.getAnyType().getKey());"}]}