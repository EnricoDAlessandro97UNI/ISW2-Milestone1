{"sha":"9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlhNmI0NWMwY2FjY2EwZTI2YjU1NTM0MGI5NWMwOGY1YTVjZDNhOGY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-04T10:20:03Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-08-04T10:20:03Z"},"message":"Fixes issue 136\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247073 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"755d9fe79a6e3104b70a6e0f5556c1c6da3fc761","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/755d9fe79a6e3104b70a6e0f5556c1c6da3fc761"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/comments","author":null,"committer":null,"parents":[{"sha":"07a73beda94148959599cf34e6bb1b43d5c92cf5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/07a73beda94148959599cf34e6bb1b43d5c92cf5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/07a73beda94148959599cf34e6bb1b43d5c92cf5"}],"stats":{"total":2698,"additions":943,"deletions":1755},"files":[{"sha":"edf2a3c4df82b922b639c548986c285667535bde","filename":"console/src/main/java/org/syncope/console/commons/SchemaWrapper.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/07a73beda94148959599cf34e6bb1b43d5c92cf5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/07a73beda94148959599cf34e6bb1b43d5c92cf5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java?ref=07a73beda94148959599cf34e6bb1b43d5c92cf5","patch":"@@ -1,58 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.commons;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Set;\n-import org.syncope.client.to.SchemaTO;\n-\n-/**\n- * Wrapper for User's Schema - Attribute.\n- */\n-public class SchemaWrapper implements Serializable {\n-\n-    SchemaTO schemaTO;\n-\n-    List<String> values;\n-\n-    public SchemaWrapper(SchemaTO schemaTO) {\n-        this.schemaTO = schemaTO;\n-        values = new ArrayList<String>();\n-\n-        values.add(\"\");\n-    }\n-\n-    public SchemaTO getSchemaTO() {\n-        return schemaTO;\n-    }\n-\n-    public void setSchemaTO(SchemaTO schemaTO) {\n-        this.schemaTO = schemaTO;\n-    }\n-\n-    public List<String> getValues() {\n-        return values;\n-    }\n-\n-    public void setValues(List<String> values) {\n-        this.values = values;\n-    }\n-\n-    public void setValues(Set<String> values) {\n-        this.values = new ArrayList<String>(values);\n-    }\n-}"},{"sha":"3282f8498b7e8e0ac392dc555d98bc21780660c6","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":10,"deletions":489,"changes":499,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,64 +14,24 @@\n  */\n package org.syncope.console.pages;\n \n-import java.io.Serializable;\n-import java.text.DateFormat;\n-import java.text.Format;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.List;\n+import org.syncope.console.pages.panels.AttributesPanel;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.MembershipTO;\n-import org.syncope.client.to.SchemaTO;\n-import org.syncope.console.commons.SchemaWrapper;\n-import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n-import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DerivedAttributesForm;\n-import org.syncope.console.wicket.markup.html.form.VirtualAttributesForm;\n-import org.syncope.types.SchemaType;\n+import org.syncope.console.pages.panels.DerivedAttributesPanel;\n+import org.syncope.console.pages.panels.VirtualAttributesPanel;\n \n /**\n  * MembershipModalPage.\n  */\n public class MembershipModalPage extends BaseModalPage {\n \n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n-    private List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n-\n-    private WebMarkupContainer container;\n-\n     private AjaxButton submit;\n \n     public MembershipModalPage(final Page basePage, final ModalWindow window,\n@@ -81,207 +41,12 @@ public MembershipModalPage(final Page basePage, final ModalWindow window,\n \n         form.setModel(new CompoundPropertyModel(membershipTO));\n \n-        setupSchemaWrappers(createFlag, membershipTO);\n-\n-        final IModel<List<String>> derivedSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getDerivedSchemaNames(\"membership\");\n-                    }\n-                };\n-\n-        final IModel<List<String>> virtualSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getVirtualSchemaNames(\"membership\");\n-                    }\n-                };\n-\n-        final ListView userAttributesView = new ListView(\"membershipSchemas\",\n-                schemaWrappers) {\n-\n-            @Override\n-            protected void populateItem(ListItem item) {\n-                final SchemaWrapper schemaWrapper = (SchemaWrapper) item.getDefaultModelObject();\n-\n-                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n-\n-                item.add(new Label(\"name\",\n-                        schemaWrapper.getSchemaTO().getName()));\n-\n-                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n-\n-                    Panel panel;\n-\n-                    @Override\n-                    protected void populateItem(final ListItem item) {\n-                        String mandatoryCondition =\n-                                schemaTO.getMandatoryCondition();\n-\n-                        boolean required = false;\n-\n-                        if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n-                            required = true;\n-                        }\n-\n-                        switch (schemaTO.getType()) {\n-                            case Boolean:\n-                                panel = new AjaxCheckBoxPanel(\"panel\",\n-                                        schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        return \"false\";\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        Boolean val = (Boolean) object;\n-                                        item.setModelObject(val.toString());\n-                                    }\n-                                }, required);\n-                                break;\n-                            case Date:\n-                                panel = new DateFieldPanel(\"panel\",\n-                                        schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        DateFormat formatter =\n-                                                new SimpleDateFormat(\n-                                                schemaTO.getConversionPattern());\n-                                        Date date = new Date();\n-                                        try {\n-                                            String dateValue = (String) item.getModelObject();\n-                                            formatter = new SimpleDateFormat(\n-                                                    schemaTO.getConversionPattern());\n-\n-                                            if (!dateValue.equals(\"\")) {\n-                                                date = formatter.parse(\n-                                                        dateValue);\n-                                            } else {\n-                                                date = null;\n-                                            }\n-                                        } catch (ParseException e) {\n-                                            LOG.error(\n-                                                    \"While parsing a date\",\n-                                                    e);\n-                                        }\n-                                        return date;\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        Date date = (Date) object;\n-                                        Format formatter = new SimpleDateFormat(\n-                                                schemaTO.getConversionPattern());\n-                                        String val = formatter.format(date);\n-                                        item.setModelObject(val);\n-                                    }\n-                                }, schemaTO.getConversionPattern(),\n-                                        required,\n-                                        schemaTO.isReadonly(), form);\n-                                break;\n-\n-                            case Enum:\n-                                panel = new AjaxDropDownChoicePanel(\n-                                        \"panel\",\n-                                        schemaTO.getName(),\n-                                        new Model() {\n-\n-                                            @Override\n-                                            public Serializable getObject() {\n-                                                return (String) item.getModelObject();\n-                                            }\n-\n-                                            @Override\n-                                            public void setObject(Serializable object) {\n-                                                item.setModelObject((String) object);\n-                                            }\n-                                        },\n-                                        Arrays.asList(schemaTO.getEnumerationValues().split(Schema.enumValuesSeparator)),\n-                                        new ChoiceRenderer(),\n-                                        required);\n-                                break;\n-                                \n-                            default:\n-                                panel = new AjaxTextFieldPanel(\"panel\",\n-                                        schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        return (String) item.getModelObject();\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        item.setModelObject((String) object);\n-                                    }\n-                                }, required);\n-                        }\n-\n-                        item.add(panel);\n-                    }\n-                });\n-\n-                AjaxButton addButton = new IndicatingAjaxButton(\"add\",\n-                        new Model(getString(\"add\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        schemaWrapper.getValues().add(\"\");\n-\n-                        target.addComponent(container);\n-                    }\n-                };\n-\n-                AjaxButton dropButton = new AjaxButton(\"drop\",\n-                        new Model(getString(\"drop\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        //Drop the last component added\n-                        schemaWrapper.getValues().remove(schemaWrapper.getValues().\n-                                size() - 1);\n-\n-                        target.addComponent(container);\n-                    }\n-                };\n-\n-                if (schemaTO.getType() == SchemaType.Boolean) {\n-                    addButton.setVisible(false);\n-                    dropButton.setVisible(false);\n-                }\n-\n-                addButton.setDefaultFormProcessing(false);\n-                addButton.setVisible(schemaTO.isMultivalue());\n-\n-                dropButton.setDefaultFormProcessing(false);\n-                dropButton.setVisible(schemaTO.isMultivalue());\n-\n-                if (schemaWrapper.getValues().size() == 1) {\n-                    dropButton.setVisible(false);\n-                }\n-\n-                item.add(addButton);\n-                item.add(dropButton);\n-            }\n-        };\n \n         submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                MembershipTO membershipTO =\n-                        (MembershipTO) form.getDefaultModelObject();\n-\n-                membershipTO.setAttributes(getMembershipAttributes());\n-\n                 if (createFlag) {\n                     ((UserModalPage) basePage).getMembershipTOs().add(\n                             membershipTO);\n@@ -313,268 +78,24 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         form.add(submit);\n \n-\n-        container = new WebMarkupContainer(\"container\");\n-        container.add(userAttributesView);\n-        container.setOutputMarkupId(true);\n-\n-        form.add(container);\n+        //--------------------------------\n+        // Attributes panel\n+        //--------------------------------\n+        form.add(new AttributesPanel(\"attributes\", membershipTO, form));\n+        //--------------------------------\n \n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        form.add(\n-                (new DerivedAttributesForm(\"derAttributesForm\")).build(\n-                this, membershipTO, derivedSchemaNames));\n+        form.add(new DerivedAttributesPanel(\"derivedAttributes\", membershipTO));\n         //--------------------------------\n \n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        form.add(\n-                (new VirtualAttributesForm(\"virAttributesForm\")).build(\n-                this, membershipTO, virtualSchemaNames));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO));\n         //--------------------------------\n \n         add(form);\n     }\n-\n-    public List<AttributeTO> getMembershipAttributes() {\n-\n-        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n-\n-        AttributeTO attribute;\n-\n-        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-\n-            attribute = new AttributeTO();\n-            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new ArrayList<String>());\n-\n-            for (String value : schemaWrapper.getValues()) {\n-                attribute.getValues().add(value);\n-            }\n-\n-            attributes.add(attribute);\n-        }\n-\n-        return attributes;\n-    }\n-\n-    public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-        SchemaWrapper schemaWrapper;\n-\n-        List<SchemaTO> schemas = schemaRestClient.getSchemas(\"membership\");\n-\n-        boolean found = false;\n-\n-        if (create) {\n-            for (SchemaTO schema : schemas) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            }\n-        } else {\n-            for (SchemaTO schema : schemas) {\n-                for (AttributeTO attribute : membershipTO.getAttributes()) {\n-                    if (schema.getName().equals(attribute.getSchema())) {\n-                        schemaWrapper = new SchemaWrapper(schema);\n-                        schemaWrapper.setValues(attribute.getValues());\n-                        schemaWrappers.add(schemaWrapper);\n-                        found = true;\n-                    }\n-                }\n-                if (!found) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n-                    schemaWrappers.add(schemaWrapper);\n-                } else {\n-                    found = false;\n-                }\n-            }\n-        }\n-    }\n-\n-    private void setDerivedAttributeContainer(\n-            final Form form,\n-            final MembershipTO membershipTO,\n-            final IModel<List<String>> derivedSchemaNames) {\n-        final WebMarkupContainer derivedAttributesContainer =\n-                new WebMarkupContainer(\"derivedAttributesContainer\");\n-        derivedAttributesContainer.setOutputMarkupId(true);\n-        form.add(derivedAttributesContainer);\n-\n-        AjaxButton addDerivedAttributeBtn = new IndicatingAjaxButton(\n-                \"addDerivedAttributeBtn\",\n-                new Model(getString(\"addDerivedAttributeBtn\"))) {\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                membershipTO.getDerivedAttributes().add(new AttributeTO());\n-                target.addComponent(derivedAttributesContainer);\n-            }\n-        };\n-        addDerivedAttributeBtn.setDefaultFormProcessing(false);\n-        form.add(addDerivedAttributeBtn);\n-\n-        ListView<AttributeTO> derivedAttributes = new ListView<AttributeTO>(\n-                \"derivedAttributes\", membershipTO.getDerivedAttributes()) {\n-\n-            @Override\n-            protected void populateItem(final ListItem<AttributeTO> item) {\n-                final AttributeTO derivedAttributeTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        membershipTO.getDerivedAttributes().remove(\n-                                derivedAttributeTO);\n-                        item.getParent().removeAll();\n-                        target.addComponent(derivedAttributesContainer);\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n-\n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n-                            }\n-                        };\n-                    }\n-                });\n-\n-                final DropDownChoice<String> derivedSchemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(derivedAttributeTO, \"schema\"),\n-                        derivedSchemaNames);\n-\n-                derivedSchemaChoice.setOutputMarkupId(true);\n-\n-                if (derivedAttributeTO.getSchema() != null) {\n-                    item.add(derivedSchemaChoice.setEnabled(Boolean.FALSE));\n-                } else {\n-                    item.add(derivedSchemaChoice.setRequired(true));\n-                }\n-\n-                final List<String> values = derivedAttributeTO.getValues();\n-\n-                if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(null)).setVisible(Boolean.FALSE));\n-                } else {\n-                    item.add(new TextField(\n-                            \"derivedAttributeValue\",\n-                            new Model(values.get(0))).setEnabled(\n-                            Boolean.FALSE));\n-                }\n-            }\n-        };\n-        derivedAttributes.setReuseItems(true);\n-        derivedAttributesContainer.add(derivedAttributes);\n-    }\n-\n-    private void setVirtualAttributeContainer(\n-            final Form form,\n-            final MembershipTO membershipTO,\n-            final IModel<List<String>> virtualSchemaNames) {\n-        final WebMarkupContainer virtualAttributesContainer =\n-                new WebMarkupContainer(\"virtualAttributesContainer\");\n-        virtualAttributesContainer.setOutputMarkupId(true);\n-        form.add(virtualAttributesContainer);\n-\n-        AjaxButton addVirtualAttributeBtn = new IndicatingAjaxButton(\n-                \"addVirtualAttributeBtn\",\n-                new Model(getString(\"addVirtualAttributeBtn\"))) {\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                membershipTO.getVirtualAttributes().add(new AttributeTO());\n-                target.addComponent(virtualAttributesContainer);\n-            }\n-        };\n-        addVirtualAttributeBtn.setDefaultFormProcessing(false);\n-        form.add(addVirtualAttributeBtn);\n-\n-        ListView<AttributeTO> virtualAttributes = new ListView<AttributeTO>(\n-                \"virtualAttributes\", membershipTO.getVirtualAttributes()) {\n-\n-            @Override\n-            protected void populateItem(final ListItem<AttributeTO> item) {\n-                final AttributeTO virtualAttributeTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        membershipTO.getVirtualAttributes().remove(\n-                                virtualAttributeTO);\n-                        item.getParent().removeAll();\n-                        target.addComponent(virtualAttributesContainer);\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n-\n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n-                            }\n-                        };\n-                    }\n-                });\n-\n-                final DropDownChoice<String> virtualSchemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(virtualAttributeTO, \"schema\"),\n-                        virtualSchemaNames);\n-\n-                virtualSchemaChoice.setOutputMarkupId(true);\n-\n-                if (virtualAttributeTO.getSchema() != null) {\n-                    item.add(virtualSchemaChoice.setEnabled(Boolean.FALSE));\n-                } else {\n-                    item.add(virtualSchemaChoice.setRequired(true));\n-                }\n-\n-                final List<String> values = virtualAttributeTO.getValues();\n-\n-                if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\n-                            \"virtualAttributeValue\",\n-                            new Model(null)).setVisible(Boolean.FALSE));\n-                } else {\n-                    item.add(new TextField(\n-                            \"virtualAttributeValue\",\n-                            new Model(values.get(0))).setEnabled(\n-                            Boolean.FALSE));\n-                }\n-            }\n-        };\n-        virtualAttributes.setReuseItems(true);\n-        virtualAttributesContainer.add(virtualAttributes);\n-    }\n }"},{"sha":"46f124930c4a21803509d12e3d97883594f1ae47","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":15,"deletions":373,"changes":388,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -16,59 +16,33 @@\n  */\n package org.syncope.console.pages;\n \n-import java.io.Serializable;\n-import java.text.DateFormat;\n-import java.text.Format;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+import org.syncope.console.pages.panels.AttributesPanel;\n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.CheckBox;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.AttributeTO;\n-import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.client.to.SchemaTO;\n-import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.commons.SelectChoiceRenderer;\n import org.syncope.console.rest.EntitlementRestClient;\n-import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n-import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DerivedAttributesForm;\n-import org.syncope.console.wicket.markup.html.form.VirtualAttributesForm;\n-import org.syncope.types.SchemaType;\n+import org.syncope.console.pages.panels.DerivedAttributesPanel;\n+import org.syncope.console.pages.panels.ResourcesPanel;\n+import org.syncope.console.pages.panels.VirtualAttributesPanel;\n \n /**\n  * Modal window with Role form.\n@@ -81,18 +55,8 @@ public class RoleModalPage extends BaseModalPage {\n     @SpringBean\n     private EntitlementRestClient entitlementRestClient;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n     private AjaxButton submit;\n \n-    private WebMarkupContainer container;\n-\n-    private List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n-\n     private RoleTO oldRole;\n \n     private RoleMod roleMod;\n@@ -121,224 +85,20 @@ public RoleModalPage(final BasePage basePage, final ModalWindow window,\n \n         form.setModel(new CompoundPropertyModel(roleTO));\n \n-        setupSchemaWrappers(createFlag, roleTO);\n-\n-        final IModel<List<String>> derivedSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getDerivedSchemaNames(\"role\");\n-                    }\n-                };\n-\n-        final IModel<List<String>> virtualSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getVirtualSchemaNames(\"role\");\n-                    }\n-                };\n-\n-        final ListView roleAttributesView = new ListView(\"roleSchemas\",\n-                schemaWrappers) {\n-\n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final SchemaWrapper schemaWrapper =\n-                        (SchemaWrapper) item.getDefaultModelObject();\n-\n-                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n-\n-                item.add(new Label(\"name\",\n-                        schemaWrapper.getSchemaTO().getName()));\n-\n-                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n-\n-                    Panel panel;\n-\n-                    @Override\n-                    protected void populateItem(final ListItem item) {\n-                        String mandatoryCondition =\n-                                schemaTO.getMandatoryCondition();\n-\n-                        boolean required = false;\n-\n-                        if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n-                            required = true;\n-                        }\n-\n-                        switch (schemaTO.getType()) {\n-                            case Boolean:\n-                                panel = new AjaxCheckBoxPanel(\n-                                        \"panel\", schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        return (String) item.getModelObject();\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        Boolean val = (Boolean) object;\n-                                        item.setModelObject(val.toString());\n-                                    }\n-                                }, required);\n-                                break;\n-\n-                            case Date:\n-                                panel = new DateFieldPanel(\"panel\",\n-                                        schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        DateFormat formatter = new SimpleDateFormat(\n-                                                schemaTO.getConversionPattern());\n-                                        Date date = new Date();\n-                                        try {\n-                                            String dateValue = (String) item.getModelObject();\n-                                            //Default value:yyyy-MM-dd\n-                                            if (!dateValue.equals(\"\")) {\n-                                                date = formatter.parse(dateValue);\n-                                            } else {\n-                                                date = null;\n-                                            }\n-                                        } catch (ParseException e) {\n-                                            LOG.error(\"While parsing a date\", e);\n-                                        }\n-                                        return date;\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        Date date = (Date) object;\n-                                        Format formatter = new SimpleDateFormat(\n-                                                schemaTO.getConversionPattern());\n-                                        String val = formatter.format(date);\n-                                        item.setModelObject(val);\n-                                    }\n-                                }, schemaTO.getConversionPattern(),\n-                                        required,\n-                                        schemaTO.isReadonly(), form);\n-                                break;\n-\n-                            case Enum:\n-                                panel = new AjaxDropDownChoicePanel(\n-                                        \"panel\",\n-                                        schemaTO.getName(),\n-                                        new Model() {\n-\n-                                            @Override\n-                                            public Serializable getObject() {\n-                                                return (String) item.getModelObject();\n-                                            }\n-\n-                                            @Override\n-                                            public void setObject(Serializable object) {\n-                                                item.setModelObject((String) object);\n-                                            }\n-                                        },\n-                                        Arrays.asList(schemaTO.getEnumerationValues().split(Schema.enumValuesSeparator)),\n-                                        new ChoiceRenderer(),\n-                                        required);\n-                                break;\n-\n-                            default:\n-\n-                                panel = new AjaxTextFieldPanel(\n-                                        \"panel\", schemaTO.getName(), new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        return (String) item.getModelObject();\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        item.setModelObject((String) object);\n-                                    }\n-                                }, required);\n-                        }\n-\n-                        item.add(panel);\n-                    }\n-                });\n-\n-                AjaxButton addButton = new IndicatingAjaxButton(\"add\",\n-                        new Model(getString(\"add\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(final AjaxRequestTarget target,\n-                            final Form form) {\n-\n-                        schemaWrapper.getValues().add(\"\");\n-\n-                        target.addComponent(container);\n-                    }\n-                };\n-\n-                AjaxButton dropButton = new AjaxButton(\"drop\",\n-                        new Model(getString(\"drop\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(final AjaxRequestTarget target,\n-                            final Form form) {\n-\n-                        //Drop the last component added\n-                        schemaWrapper.getValues().remove(\n-                                schemaWrapper.getValues().size() - 1);\n-\n-                        target.addComponent(container);\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n-\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n-                            }\n-                        };\n-                    }\n-                };\n-\n-                if (schemaTO.getType() == SchemaType.Boolean) {\n-                    addButton.setVisible(false);\n-                    dropButton.setVisible(false);\n-                }\n-\n-                addButton.setDefaultFormProcessing(false);\n-                addButton.setVisible(schemaTO.isMultivalue());\n-\n-                dropButton.setDefaultFormProcessing(false);\n-                dropButton.setVisible(schemaTO.isMultivalue());\n-\n-                if (schemaWrapper.getValues().size() == 1) {\n-                    dropButton.setVisible(false);\n-                }\n-\n-                item.add(addButton);\n-                item.add(dropButton);\n-            }\n-        };\n-\n-        form.add(roleAttributesView);\n+        //--------------------------------\n+        // Attributes panel\n+        //--------------------------------\n+        form.add(new AttributesPanel(\"attributes\", roleTO, form));\n \n         final CheckBox inheritAttributes = new CheckBox(\"inheritAttributes\");\n         inheritAttributes.setOutputMarkupId(true);\n         form.add(inheritAttributes);\n+        //--------------------------------\n \n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        form.add((new DerivedAttributesForm(\"derAttributesForm\")).build(\n-                this, roleTO, derivedSchemaNames));\n+        form.add(new DerivedAttributesPanel(\"derivedAttributes\", roleTO));\n \n         final CheckBox inheritDerivedAttributes =\n                 new CheckBox(\"inheritDerivedAttributes\");\n@@ -349,26 +109,15 @@ public CharSequence preDecorateScript(\n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        form.add((new VirtualAttributesForm(\"virAttributesForm\")).build(\n-                this, roleTO, virtualSchemaNames));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO));\n \n         final CheckBox inheritVirtualAttributes =\n                 new CheckBox(\"inheritVirtualAttributes\");\n         inheritVirtualAttributes.setOutputMarkupId(true);\n         form.add(inheritVirtualAttributes);\n         //--------------------------------\n \n-        ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n-        selectedResources.setObject(getSelectedResources(roleTO));\n-\n-        ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n-        availableResources.setObject(getAvailableResources(roleTO));\n-\n-        final Palette<ResourceTO> resourcesPalette = new Palette(\n-                \"resourcesPalette\", selectedResources, availableResources,\n-                new ChoiceRenderer(\"name\", \"name\"), 8, false);\n-\n-        form.add(resourcesPalette);\n+        form.add(new ResourcesPanel(\"resources\", roleTO));\n \n         ListModel<String> selectedEntitlements =\n                 new ListModel<String>(roleTO.getEntitlements());\n@@ -383,15 +132,9 @@ public CharSequence preDecorateScript(\n \n         form.add(entitlementsPalette);\n \n-        container = new WebMarkupContainer(\"container\");\n-        container.add(roleAttributesView);\n-        container.setOutputMarkupId(true);\n-\n-        form.add(container);\n-\n         TextField name = new TextField(\"name\");\n         name.setRequired(true);\n-        container.add(name);\n+        form.add(name);\n \n         submit = new IndicatingAjaxButton(\"submit\", new Model(\n                 getString(\"submit\"))) {\n@@ -400,29 +143,18 @@ public CharSequence preDecorateScript(\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form form) {\n \n-                RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n-\n-                boolean res = false;\n+                final RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n \n                 try {\n-                    Set<String> resourcesSet = new HashSet<String>(\n-                            resourcesPalette.getModelCollection().size());\n-                    for (ResourceTO resourceTO :\n-                            resourcesPalette.getModelCollection()) {\n-\n-                        resourcesSet.add(resourceTO.getName());\n-                    }\n-                    roleTO.setResources(resourcesSet);\n \n-                    List<String> entitlementList = new ArrayList<String>(\n+                    final List<String> entitlementList = new ArrayList<String>(\n                             entitlementsPalette.getModelCollection().size());\n                     for (String entitlement :\n                             entitlementsPalette.getModelCollection()) {\n \n                         entitlementList.add(entitlement);\n                     }\n                     roleTO.setEntitlements(entitlementList);\n-                    roleTO.setAttributes(getRoleAttributes());\n \n                     if (createFlag) {\n                         roleRestClient.createRole(roleTO);\n@@ -464,96 +196,6 @@ protected void onError(final AjaxRequestTarget target,\n         add(form);\n     }\n \n-    /**\n-     * Originals: resources provided for a stored role.\n-     * @param roleTO\n-     * @return List<ResourceTO>\n-     */\n-    private List<ResourceTO> getSelectedResources(RoleTO roleTO) {\n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-        ResourceTO clusterableResourceTO;\n-\n-        for (String resourceName : roleTO.getResources()) {\n-            clusterableResourceTO = new ResourceTO();\n-            clusterableResourceTO.setName(resourceName);\n-            resources.add(clusterableResourceTO);\n-        }\n-        return resources;\n-    }\n-\n-    /**\n-     * Destinations: all available\n-     * @param roleTO\n-     * @return List<ResourceTO>\n-     */\n-    private List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n-\n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-\n-        List<ResourceTO> resourcesTos = resourceRestClient.getAllResources();\n-\n-        for (ResourceTO resourceTO : resourcesTos) {\n-            resources.add(resourceTO);\n-        }\n-\n-        return resources;\n-    }\n-\n-    private void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-        SchemaWrapper schemaWrapper;\n-\n-        List<SchemaTO> schemas = schemaRestClient.getSchemas(\"role\");\n-\n-        boolean found = false;\n-\n-        if (create) {\n-            for (SchemaTO schema : schemas) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            }\n-        } else {\n-            for (SchemaTO schema : schemas) {\n-                for (AttributeTO attribute : roleTO.getAttributes()) {\n-                    if (schema.getName().equals(attribute.getSchema())) {\n-                        schemaWrapper = new SchemaWrapper(schema);\n-                        schemaWrapper.setValues(attribute.getValues());\n-                        schemaWrappers.add(schemaWrapper);\n-                        found = true;\n-                    }\n-                }\n-                if (!found) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n-                    schemaWrappers.add(schemaWrapper);\n-                } else {\n-                    found = false;\n-                }\n-            }\n-        }\n-    }\n-\n-    private List<AttributeTO> getRoleAttributes() {\n-\n-        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n-\n-        AttributeTO attribute;\n-\n-        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-\n-            attribute = new AttributeTO();\n-            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new ArrayList<String>());\n-\n-            for (String value : schemaWrapper.getValues()) {\n-                attribute.getValues().add(value);\n-            }\n-\n-            attributes.add(attribute);\n-        }\n-\n-        return attributes;\n-    }\n-\n     /**\n      * Create a copy of old RoleTO\n      * @param roleTO"},{"sha":"0598c1eb065e07c5f29b285d074b079613a83c07","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,6 +14,9 @@\n  */\n package org.syncope.console.pages;\n \n+import org.syncope.console.pages.panels.PropagationTasks;\n+import org.syncope.console.pages.panels.SyncTasks;\n+import org.syncope.console.pages.panels.GenericTasks;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Collections;"},{"sha":"d340ed628e7f0e0d81d7df340f875ee62ad8064a","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":41,"deletions":399,"changes":440,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -16,15 +16,8 @@\n  */\n package org.syncope.console.pages;\n \n-import java.io.Serializable;\n-import java.text.DateFormat;\n-import java.text.Format;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+import org.syncope.console.pages.panels.AttributesPanel;\n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -40,52 +33,37 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.WebMarkupContainerWithAssociatedMarkup;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.markup.html.tree.BaseTree;\n import org.apache.wicket.markup.html.tree.LinkTree;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.mod.MembershipMod;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.AttributeTO;\n-import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.to.MembershipTO;\n-import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.RoleTreeBuilder;\n-import org.syncope.console.commons.SchemaWrapper;\n-import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n-import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n-import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DerivedAttributesForm;\n-import org.syncope.console.wicket.markup.html.form.VirtualAttributesForm;\n-import org.syncope.types.SchemaType;\n+import org.syncope.console.pages.panels.DerivedAttributesPanel;\n+import org.syncope.console.pages.panels.ResourcesPanel;\n+import org.syncope.console.pages.panels.VirtualAttributesPanel;\n \n /**\n  * Modal window with User form.\n@@ -98,23 +76,13 @@ public class UserModalPage extends BaseModalPage {\n     @SpringBean\n     private RoleRestClient roleRestClient;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n     @SpringBean\n     private RoleTreeBuilder roleTreeBuilder;\n \n-    private WebMarkupContainer container;\n-\n     private WebMarkupContainer membershipsContainer;\n \n     private AjaxButton submit;\n \n-    private List<SchemaWrapper> schemaWrappers;\n-\n     private List<MembershipTO> membershipTOs;\n \n     private final ModalWindow membershipWin;\n@@ -123,12 +91,14 @@ public class UserModalPage extends BaseModalPage {\n \n     private UserMod userMod;\n \n-    public UserModalPage(final Users basePage, final ModalWindow window,\n-            final UserTO userTO, final boolean createFlag) {\n+    public UserModalPage(\n+            final Users basePage,\n+            final ModalWindow window,\n+            final UserTO userTO) {\n \n         super();\n \n-        if (!createFlag) {\n+        if (userTO.getId() > 0) {\n             cloneOldUserTO(userTO);\n         }\n \n@@ -144,262 +114,52 @@ public UserModalPage(final Users basePage, final ModalWindow window,\n \n         form.setModel(new CompoundPropertyModel(userTO));\n \n-        setupSchemaWrappers(createFlag, userTO);\n-        setupMemberships(createFlag, userTO);\n-\n-        final IModel<List<String>> derivedSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getDerivedSchemaNames(\"user\");\n-                    }\n-                };\n-\n-\n-        final IModel<List<String>> virtualSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        return schemaRestClient.getVirtualSchemaNames(\"user\");\n-                    }\n-                };\n-\n-        final ListView userAttributesView =\n-                new ListView(\"userSchemas\", schemaWrappers) {\n-\n-                    @Override\n-                    protected void populateItem(ListItem item) {\n-                        final SchemaWrapper schemaWrapper =\n-                                (SchemaWrapper) item.getDefaultModelObject();\n-\n-                        final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n-\n-                        item.add(new Label(\"name\",\n-                                schemaWrapper.getSchemaTO().getName()));\n-\n-                        item.add(new ListView(\"fields\",\n-                                schemaWrapper.getValues()) {\n-\n-                            Panel panel;\n-\n-                            @Override\n-                            protected void populateItem(final ListItem item) {\n-\n-                                String mandatoryCondition =\n-                                        schemaTO.getMandatoryCondition();\n-                                boolean required = false;\n-\n-                                if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n-                                    required = true;\n-                                }\n-\n-                                switch (schemaTO.getType()) {\n-                                    case Boolean:\n-                                        panel = new AjaxCheckBoxPanel(\"panel\",\n-                                                schemaTO.getName(), new Model() {\n-\n-                                            @Override\n-                                            public Serializable getObject() {\n-                                                return (String) item.getModelObject();\n-                                            }\n-\n-                                            @Override\n-                                            public void setObject(Serializable object) {\n-                                                Boolean val = (Boolean) object;\n-                                                item.setModelObject(val.toString());\n-                                            }\n-                                        }, required, schemaTO.isReadonly());\n-\n-                                        break;\n-                                    case Date:\n-                                        panel = new DateFieldPanel(\"panel\",\n-                                                schemaTO.getName(), new Model() {\n-\n-                                            @Override\n-                                            public Serializable getObject() {\n-                                                DateFormat formatter =\n-                                                        new SimpleDateFormat(\n-                                                        schemaTO.getConversionPattern());\n-                                                Date date = new Date();\n-                                                try {\n-                                                    String dateValue = (String) item.getModelObject();\n-                                                    //Default value:yyyy-MM-dd\n-                                                    if (!dateValue.equals(\"\")) {\n-                                                        date = formatter.parse(\n-                                                                dateValue);\n-                                                    } else {\n-                                                        date = null;\n-                                                    }\n-                                                } catch (ParseException e) {\n-                                                    LOG.error(\"While parsing date\", e);\n-                                                }\n-                                                return date;\n-                                            }\n-\n-                                            @Override\n-                                            public void setObject(Serializable object) {\n-                                                Date date = (Date) object;\n-                                                Format formatter = new SimpleDateFormat(\n-                                                        schemaTO.getConversionPattern());\n-                                                String val = formatter.format(date);\n-                                                item.setModelObject(val);\n-                                            }\n-                                        }, schemaTO.getConversionPattern(),\n-                                                required,\n-                                                schemaTO.isReadonly(), form);\n-                                        break;\n-\n-                                    case Enum:\n-                                        panel = new AjaxDropDownChoicePanel(\n-                                                \"panel\",\n-                                                schemaTO.getName(),\n-                                                new Model() {\n-\n-                                                    @Override\n-                                                    public Serializable getObject() {\n-                                                        return (String) item.getModelObject();\n-                                                    }\n-\n-                                                    @Override\n-                                                    public void setObject(Serializable object) {\n-                                                        item.setModelObject((String) object);\n-                                                    }\n-                                                },\n-                                                Arrays.asList(schemaTO.getEnumerationValues().split(Schema.enumValuesSeparator)),\n-                                                new ChoiceRenderer(),\n-                                                required);\n-                                        break;\n-\n-                                    default:\n-                                        panel = new AjaxTextFieldPanel(\"panel\",\n-                                                schemaTO.getName(), new Model() {\n-\n-                                            @Override\n-                                            public Serializable getObject() {\n-                                                return (String) item.getModelObject();\n-                                            }\n-\n-                                            @Override\n-                                            public void setObject(Serializable object) {\n-                                                item.setModelObject((String) object);\n-                                            }\n-                                        }, required, schemaTO.isReadonly());\n-                                }\n-\n-                                item.add(panel);\n-                            }\n-                        });\n-\n-                        AjaxButton addButton = new IndicatingAjaxButton(\"add\",\n-                                new Model(getString(\"add\"))) {\n-\n-                            @Override\n-                            protected void onSubmit(AjaxRequestTarget target,\n-                                    Form form) {\n-                                schemaWrapper.getValues().add(\"\");\n-\n-                                target.addComponent(container);\n-                            }\n-                        };\n-\n-                        AjaxButton dropButton = new IndicatingAjaxButton(\"drop\",\n-                                new Model(getString(\"drop\"))) {\n-\n-                            @Override\n-                            protected void onSubmit(AjaxRequestTarget target,\n-                                    Form form) {\n-                                //Drop the last component added\n-                                schemaWrapper.getValues().remove(\n-                                        schemaWrapper.getValues().size() - 1);\n-\n-                                target.addComponent(container);\n-                            }\n-                        };\n-\n-                        if (schemaTO.getType() == SchemaType.Boolean) {\n-                            addButton.setVisible(false);\n-                            dropButton.setVisible(false);\n-                        }\n-\n-                        addButton.setDefaultFormProcessing(false);\n-                        addButton.setVisible(schemaTO.isMultivalue());\n-\n-                        dropButton.setDefaultFormProcessing(false);\n-                        dropButton.setVisible(schemaTO.isMultivalue());\n-\n-                        if (schemaWrapper.getValues().size() == 1) {\n-                            dropButton.setVisible(false);\n-                        }\n-\n-                        if (schemaTO.isReadonly()) {\n-                            addButton.setEnabled(false);\n-                            dropButton.setEnabled(false);\n-                        }\n+        setupMemberships(userTO);\n \n-                        item.add(addButton);\n-                        item.add(dropButton);\n-                    }\n-                };\n-\n-        form.add(userAttributesView);\n-\n-        //--------------------------------\n-        // Derived attributes container\n         //--------------------------------\n-        form.add(\n-                (new DerivedAttributesForm(\"derAttributesForm\")).build(\n-                this, userTO, derivedSchemaNames));\n+        // Attributes panel\n         //--------------------------------\n+        form.add(new AttributesPanel(\"attributes\", userTO, form));\n \n-        //--------------------------------\n-        // Virtual attributes container\n-        //--------------------------------\n-        form.add(\n-                (new VirtualAttributesForm(\"virAttributesForm\")).build(\n-                this, userTO, virtualSchemaNames));\n-        //--------------------------------\n-\n-        ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n-        selectedResources.setObject(getSelectedResources(userTO));\n-\n-        ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n-        availableResources.setObject(getAvailableResources(userTO));\n-\n-        ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n-        final Palette resourcesPalette = new Palette(\"resourcesPalette\",\n-                selectedResources, availableResources, paletteRenderer,\n-                8, false);\n-        form.add(resourcesPalette);\n-\n-        container = new WebMarkupContainer(\"container\");\n-        container.add(userAttributesView);\n-\n-        PasswordTextField password = new PasswordTextField(\"password\");\n-        password.setRequired(createFlag);\n+        final PasswordTextField password = new PasswordTextField(\"password\");\n+        password.setRequired(userTO.getId() == 0);\n         password.setResetPassword(true);\n-        container.add(password);\n+        form.add(password);\n \n-        WebMarkupContainerWithAssociatedMarkup mandatoryPassword =\n+        final WebMarkupContainerWithAssociatedMarkup mandatoryPassword =\n                 new WebMarkupContainerWithAssociatedMarkup(\"mandatory_pwd\");\n         mandatoryPassword.add(new AbstractBehavior() {\n \n             @Override\n             public void onComponentTag(final Component component,\n                     final ComponentTag tag) {\n \n-                if (!createFlag) {\n+                if (userTO.getId() > 0) {\n                     tag.put(\"style\", \"display:none;\");\n                 }\n             }\n         });\n \n-        container.add(mandatoryPassword);\n+        form.add(mandatoryPassword);\n+        //--------------------------------\n \n-        container.setOutputMarkupId(true);\n+        //--------------------------------\n+        // Derived attributes panel\n+        //--------------------------------\n+        form.add(new DerivedAttributesPanel(\"derivedAttributes\", userTO));\n+        //--------------------------------\n \n-        form.add(container);\n+        //--------------------------------\n+        // Virtual attributes panel\n+        //--------------------------------\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO));\n+        //--------------------------------\n+\n+        //--------------------------------\n+        // Resources panel\n+        //--------------------------------\n+        form.add(new ResourcesPanel(\"resources\", userTO));\n+        //--------------------------------\n \n         submit = new IndicatingAjaxButton(\"submit\", new Model(\n                 getString(\"submit\"))) {\n@@ -408,15 +168,12 @@ public void onComponentTag(final Component component,\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form form) {\n \n-                UserTO userTO = (UserTO) form.getModelObject();\n+                final UserTO userTO = (UserTO) form.getModelObject();\n \n                 try {\n-                    userTO.setResources(getResourcesSet(\n-                            resourcesPalette.getModelCollection()));\n-                    userTO.setAttributes(getUserAttributesList());\n                     userTO.setMemberships(getMembershipsSet());\n \n-                    if (createFlag) {\n+                    if (userTO.getId() == 0) {\n                         userRestClient.create(userTO);\n                     } else {\n                         setupUserMod(userTO);\n@@ -429,7 +186,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n \n                     basePage.setModalResult(true);\n                     basePage.getPageParameters().put(\n-                            Constants.PAGEPARAM_CREATE, createFlag);\n+                            Constants.PAGEPARAM_CREATE, userTO.getId() == 0);\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     LOG.error(\"While creating or updating user\", e);\n@@ -445,7 +202,7 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         String allowedRoles = null;\n \n-        if (createFlag) {\n+        if (userTO.getId() == 0) {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\");\n         } else {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n@@ -494,7 +251,6 @@ public Page createPage() {\n \n         form.add(tree);\n \n-\n         ListView membershipsView = new ListView(\"memberships\", membershipTOs) {\n \n             @Override\n@@ -572,50 +328,6 @@ private String getRoleName(long roleId, List<RoleTO> roles) {\n         return result;\n     }\n \n-    private List<ResourceTO> getSelectedResources(final UserTO userTO) {\n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-        ResourceTO clusterableResourceTO;\n-\n-        for (String resourceName : userTO.getResources()) {\n-            clusterableResourceTO = new ResourceTO();\n-            clusterableResourceTO.setName(resourceName);\n-            resources.add(clusterableResourceTO);\n-        }\n-        return resources;\n-    }\n-\n-    private List<DerivedSchemaTO> getSelectedDerivedSchemas(final UserTO userTO) {\n-        List<AttributeTO> attributes = userTO.getDerivedAttributes();\n-\n-        List<DerivedSchemaTO> schemas = new ArrayList<DerivedSchemaTO>();\n-\n-        DerivedSchemaTO schema;\n-\n-        for (AttributeTO attribute : attributes) {\n-            schema = new DerivedSchemaTO();\n-            schema.setName(attribute.getSchema());\n-            schemas.add(schema);\n-        }\n-\n-        return schemas;\n-    }\n-\n-    private List<ResourceTO> getAvailableResources(final UserTO userTO) {\n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-\n-        List<ResourceTO> resourcesTos = resourceRestClient.getAllResources();\n-\n-        for (ResourceTO resourceTO : resourcesTos) {\n-            resources.add(resourceTO);\n-        }\n-\n-        return resources;\n-    }\n-\n-    private List<DerivedSchemaTO> getAvailableDerivedSchemas(final UserTO userTO) {\n-        return schemaRestClient.getDerivedSchemas(\"user\");\n-    }\n-\n     /**\n      * Create a copy of old userTO object.\n      * @param userTO the original TO\n@@ -681,45 +393,10 @@ public void onClose(final AjaxRequestTarget target) {\n                 });\n     }\n \n-    private void setupSchemaWrappers(boolean create, final UserTO userTO) {\n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-        SchemaWrapper schemaWrapper;\n-\n-        List<SchemaTO> schemas = schemaRestClient.getSchemas(\"user\");\n-\n-        boolean found = false;\n-\n-        if (create) {\n-            for (SchemaTO schema : schemas) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            }\n-        } else {\n-            for (SchemaTO schema : schemas) {\n-                for (AttributeTO attribute : userTO.getAttributes()) {\n-                    if (schema.getName().equals(attribute.getSchema())) {\n-                        schemaWrapper = new SchemaWrapper(schema);\n-\n-                        schemaWrapper.setValues(attribute.getValues());\n-\n-                        schemaWrappers.add(schemaWrapper);\n-                        found = true;\n-                    }\n-                }\n-                if (!found) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n-                    schemaWrappers.add(schemaWrapper);\n-                } else {\n-                    found = false;\n-                }\n-            }\n-        }\n-    }\n-\n-    private void setupMemberships(final boolean create, final UserTO userTO) {\n+    private void setupMemberships(final UserTO userTO) {\n         membershipTOs = new ArrayList<MembershipTO>();\n \n-        if (!create) {\n+        if (userTO.getId() > 0) {\n             List<MembershipTO> memberships = userTO.getMemberships();\n \n             for (MembershipTO membership : memberships) {\n@@ -728,27 +405,6 @@ private void setupMemberships(final boolean create, final UserTO userTO) {\n         }\n     }\n \n-    private List<AttributeTO> getUserAttributesList() {\n-        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n-\n-        AttributeTO attribute;\n-\n-        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-            attribute = new AttributeTO();\n-            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new ArrayList<String>());\n-            attribute.setReadonly(schemaWrapper.getSchemaTO().isReadonly());\n-\n-            for (String value : schemaWrapper.getValues()) {\n-                attribute.getValues().add(value);\n-            }\n-\n-            attributes.add(attribute);\n-        }\n-\n-        return attributes;\n-    }\n-\n     /**\n      * Convert a memberships ArrayList in a memberships HashSet list.\n      * @return Set<MembershipTO> selected for a new user.\n@@ -763,20 +419,6 @@ private List<MembershipTO> getMembershipsSet() {\n         return memberships;\n     }\n \n-    /**\n-     * Covert a resources List<String> to Set<String>.\n-     * @return Set<String>\n-     */\n-    private Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n-        Set<String> resourcesSet = new HashSet<String>();\n-\n-        for (ResourceTO resourceTO : resourcesList) {\n-            resourcesSet.add(resourceTO.getName());\n-        }\n-\n-        return resourcesSet;\n-    }\n-\n     public List<MembershipTO> getMembershipTOs() {\n         return membershipTOs;\n     }"},{"sha":"e7c4e327f986a3c361e1c396484bfbeae8b81fcb","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -285,7 +285,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     public Page createPage() {\n                         return new UserModalPage(\n-                                Users.this, editModalWin, new UserTO(), true);\n+                                Users.this, editModalWin, new UserTO());\n                     }\n                 });\n \n@@ -565,7 +565,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     public Page createPage() {\n                                         return new UserModalPage(\n                                                 Users.this, editModalWin,\n-                                                model.getObject(), false);\n+                                                model.getObject());\n                                     }\n                                 });\n "},{"sha":"ee7452921dbfb063f7b692bb7a7c3fa67029a5a4","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"added","additions":329,"deletions":0,"changes":329,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,329 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.io.Serializable;\n+import java.text.DateFormat;\n+import java.text.Format;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.StringUtils;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.RoleTO;\n+import org.syncope.client.to.SchemaTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.pages.Schema;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n+import org.syncope.types.SchemaType;\n+\n+public class AttributesPanel extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(AttributesPanel.class);\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    final WebMarkupContainer attributesContainer;\n+\n+    public <T extends AbstractAttributableTO> AttributesPanel(\n+            final String id, final T entityTO, final Form form) {\n+        super(id);\n+\n+        final IModel<Map<String, SchemaTO>> schemas =\n+                new LoadableDetachableModel<Map<String, SchemaTO>>() {\n+\n+                    @Override\n+                    protected Map<String, SchemaTO> load() {\n+                        final List<SchemaTO> schemaTOs;\n+                        if (entityTO instanceof RoleTO) {\n+                            schemaTOs = schemaRestClient.getSchemas(\n+                                    \"role\");\n+                        } else if (entityTO instanceof UserTO) {\n+                            schemaTOs = schemaRestClient.getSchemas(\n+                                    \"user\");\n+                        } else {\n+                            schemaTOs = schemaRestClient.getSchemas(\n+                                    \"membership\");\n+                        }\n+\n+                        final Map<String, SchemaTO> schemas =\n+                                new HashMap<String, SchemaTO>();\n+\n+                        for (SchemaTO schemaTO : schemaTOs) {\n+                            schemas.put(schemaTO.getName(), schemaTO);\n+                        }\n+\n+                        return schemas;\n+                    }\n+                };\n+\n+        attributesContainer = new WebMarkupContainer(\"container\");\n+        attributesContainer.setOutputMarkupId(true);\n+        add(attributesContainer);\n+\n+        initEntityData(entityTO, schemas.getObject().values());\n+\n+        final ListView<AttributeTO> userAttributesView =\n+                new ListView<AttributeTO>(\n+                \"schemas\", new PropertyModel<List<? extends AttributeTO>>(\n+                entityTO, \"attributes\")) {\n+\n+                    @Override\n+                    protected void populateItem(ListItem item) {\n+                        final AttributeTO attributeTO =\n+                                (AttributeTO) item.getDefaultModelObject();\n+\n+                        item.add(new Label(\"name\", attributeTO.getSchema()));\n+\n+                        item.add(new ListView(\n+                                \"fields\", attributeTO.getValues()) {\n+\n+                            @Override\n+                            protected void populateItem(final ListItem item) {\n+                                item.add(getFieldPanel(schemas.getObject().get(\n+                                        attributeTO.getSchema()), form, item));\n+                            }\n+                        });\n+\n+                        final AjaxButton addButton =\n+                                new IndicatingAjaxButton(\"add\",\n+                                new Model(getString(\"add\"))) {\n+\n+                                    @Override\n+                                    protected void onSubmit(\n+                                            final AjaxRequestTarget target,\n+                                            final Form form) {\n+                                        attributeTO.getValues().add(\"\");\n+                                        target.addComponent(attributesContainer);\n+                                    }\n+                                };\n+\n+                        final AjaxButton dropButton =\n+                                new IndicatingAjaxButton(\"drop\",\n+                                new Model(getString(\"drop\"))) {\n+\n+                                    @Override\n+                                    protected void onSubmit(\n+                                            final AjaxRequestTarget target,\n+                                            final Form form) {\n+                                        //Drop the last component added\n+                                        attributeTO.getValues().remove(\n+                                                attributeTO.getValues().size() - 1);\n+\n+                                        target.addComponent(attributesContainer);\n+                                    }\n+                                };\n+\n+                        if (schemas.getObject().get(attributeTO.getSchema()).\n+                                getType() == SchemaType.Boolean) {\n+                            addButton.setVisible(false);\n+                            dropButton.setVisible(false);\n+                        }\n+\n+                        addButton.setVisible(\n+                                schemas.getObject().get(\n+                                attributeTO.getSchema()).isMultivalue());\n+                        dropButton.setVisible(\n+                                schemas.getObject().get(\n+                                attributeTO.getSchema()).isMultivalue());\n+\n+                        dropButton.setVisible(\n+                                attributeTO.getValues().size() > 1);\n+\n+                        addButton.setEnabled(!attributeTO.isReadonly());\n+                        dropButton.setEnabled(!attributeTO.isReadonly());\n+\n+                        addButton.setDefaultFormProcessing(false);\n+                        dropButton.setDefaultFormProcessing(false);\n+\n+                        item.add(addButton);\n+                        item.add(dropButton);\n+                    }\n+                };\n+\n+        attributesContainer.add(userAttributesView);\n+    }\n+\n+    private List<AttributeTO> initEntityData(\n+            final AbstractAttributableTO entityTO,\n+            final Collection<SchemaTO> schemas) {\n+\n+        final List<AttributeTO> entityData = new ArrayList<AttributeTO>();\n+\n+        final Map<String, List<String>> attributeMap =\n+                entityTO.getAttributeMap();\n+\n+        AttributeTO attributeTO;\n+        List<String> values;\n+\n+        for (SchemaTO schema : schemas) {\n+            attributeTO = new AttributeTO();\n+            attributeTO.setSchema(schema.getName());\n+\n+            if (attributeMap.get(schema.getName()) == null\n+                    || attributeMap.get(schema.getName()).isEmpty()) {\n+\n+                values = new ArrayList<String>();\n+                values.add(\"\");\n+                attributeTO.setValues(values);\n+\n+                // is important to set readonly only after valus setting\n+                attributeTO.setReadonly(schema.isReadonly());\n+\n+            } else {\n+                attributeTO.setValues(attributeMap.get(schema.getName()));\n+            }\n+            entityData.add(attributeTO);\n+        }\n+\n+        entityTO.setAttributes(entityData);\n+\n+        return entityData;\n+    }\n+\n+    private Panel getFieldPanel(\n+            final SchemaTO schemaTO,\n+            final Form form,\n+            final ListItem item) {\n+        Panel panel;\n+\n+        boolean required =\n+                schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+\n+        switch (schemaTO.getType()) {\n+            case Boolean:\n+                panel = new AjaxCheckBoxPanel(\n+                        \"panel\", schemaTO.getName(), new Model() {\n+\n+                    @Override\n+                    public Serializable getObject() {\n+                        return (String) item.getModelObject();\n+                    }\n+\n+                    @Override\n+                    public void setObject(Serializable object) {\n+                        item.setModelObject(((Boolean) object).toString());\n+                    }\n+                }, required, schemaTO.isReadonly());\n+\n+                break;\n+            case Date:\n+                panel = new DateFieldPanel(\n+                        \"panel\", schemaTO.getName(), new Model() {\n+\n+                    @Override\n+                    public Serializable getObject() {\n+                        final DateFormat formatter = new SimpleDateFormat(\n+                                schemaTO.getConversionPattern());\n+                        Date date = null;\n+                        try {\n+                            String dateValue = (String) item.getModelObject();\n+                            //Default value:yyyy-MM-dd\n+                            if (StringUtils.hasText(dateValue)) {\n+                                date = formatter.parse(dateValue);\n+                            }\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                        return date;\n+                    }\n+\n+                    @Override\n+                    public void setObject(Serializable object) {\n+                        if (object != null) {\n+                            final Format formatter = new SimpleDateFormat(\n+                                    schemaTO.getConversionPattern());\n+                            item.setModelObject(formatter.format((Date) object));\n+                        } else {\n+                            item.setModelObject(object);\n+                        }\n+                    }\n+                }, schemaTO.getConversionPattern(),\n+                        required,\n+                        schemaTO.isReadonly(),\n+                        form);\n+                break;\n+\n+            case Enum:\n+                panel = new AjaxDropDownChoicePanel(\n+                        \"panel\", schemaTO.getName(), new Model() {\n+\n+                    @Override\n+                    public Serializable getObject() {\n+                        return (String) item.getModelObject();\n+                    }\n+\n+                    @Override\n+                    public void setObject(Serializable object) {\n+                        item.setModelObject((String) object);\n+                    }\n+                }, Arrays.asList(schemaTO.getEnumerationValues().\n+                        split(Schema.enumValuesSeparator)),\n+                        new ChoiceRenderer(),\n+                        required);\n+                break;\n+\n+            default:\n+                panel = new AjaxTextFieldPanel(\n+                        \"panel\", schemaTO.getName(), new Model() {\n+\n+                    @Override\n+                    public Serializable getObject() {\n+                        return (String) item.getModelObject();\n+                    }\n+\n+                    @Override\n+                    public void setObject(Serializable object) {\n+                        item.setModelObject((String) object);\n+                    }\n+                }, required, schemaTO.isReadonly());\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"bcb25640001d8c21a4c359706fe56dcf6752f563","filename":"console/src/main/java/org/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"renamed","additions":35,"deletions":19,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,7 +14,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.console.wicket.markup.html.form;\n+package org.syncope.console.pages.panels;\n \n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -24,53 +24,70 @@\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.RoleTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n \n-public class DerivedAttributesForm extends Form {\n+public class DerivedAttributesPanel extends Panel {\n \n     /**\n      * Logger.\n      */\n     protected static final Logger LOG =\n-            LoggerFactory.getLogger(DerivedAttributesForm.class);\n+            LoggerFactory.getLogger(DerivedAttributesPanel.class);\n \n-    public DerivedAttributesForm(String id, IModel<?> model) {\n-        super(id, model);\n-    }\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    public <T extends AbstractAttributableTO> DerivedAttributesPanel(\n+            final String id, final T entityTO) {\n \n-    public DerivedAttributesForm(String id) {\n         super(id);\n-    }\n+        setOutputMarkupId(true);\n \n-    public <T extends AbstractAttributableTO> Form build(\n-            final WebPage page,\n-            final T entityTO,\n-            final IModel<List<String>> schemaNames) {\n+        final IModel<List<String>> derivedSchemaNames =\n+                new LoadableDetachableModel<List<String>>() {\n \n-        setOutputMarkupId(true);\n+                    @Override\n+                    protected List<String> load() {\n+                        if (entityTO instanceof RoleTO) {\n+                            return schemaRestClient.getDerivedSchemaNames(\n+                                    \"role\");\n+                        } else if (entityTO instanceof UserTO) {\n+                            return schemaRestClient.getDerivedSchemaNames(\n+                                    \"user\");\n+                        } else {\n+                            return schemaRestClient.getDerivedSchemaNames(\n+                                    \"membership\");\n+                        }\n+                    }\n+                };\n \n         final WebMarkupContainer attributesContainer =\n                 new WebMarkupContainer(\"derAttrContainer\");\n-        \n+\n         attributesContainer.setOutputMarkupId(true);\n         add(attributesContainer);\n \n         AjaxButton addAttributeBtn = new IndicatingAjaxButton(\n                 \"addAttributeBtn\",\n-                new Model(page.getString(\"addAttributeBtn\"))) {\n+                new Model(getString(\"addAttributeBtn\"))) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target,\n@@ -123,7 +140,7 @@ public CharSequence preDecorateScript(\n                         new DropDownChoice<String>(\n                         \"schema\",\n                         new PropertyModel<String>(attributeTO, \"schema\"),\n-                        schemaNames);\n+                        derivedSchemaNames);\n \n                 schemaChoice.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n@@ -155,6 +172,5 @@ protected void onUpdate(AjaxRequestTarget art) {\n         };\n \n         attributesContainer.add(attributes);\n-        return this;\n     }\n }","previous_filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DerivedAttributesForm.java"},{"sha":"de131d48cc1dfd68886b73bffff89a21668e6ae3","filename":"console/src/main/java/org/syncope/console/pages/panels/GenericTasks.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.console.pages;\n+package org.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -46,6 +46,8 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.BasePage;\n+import org.syncope.console.pages.GTaskModalPage;\n import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;","previous_filename":"console/src/main/java/org/syncope/console/pages/GenericTasks.java"},{"sha":"15da766c9ab2088ccbb7e39e3ef1c0977aac1bcf","filename":"console/src/main/java/org/syncope/console/pages/panels/PropagationTasks.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.console.pages;\n+package org.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n import java.util.Collections;\n@@ -52,6 +52,8 @@\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.BasePage;\n+import org.syncope.console.pages.PTaskModalPage;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;","previous_filename":"console/src/main/java/org/syncope/console/pages/PropagationTasks.java"},{"sha":"93f8317ce7d8a7869e136fcc8a37431c3fc78c96","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourcesPanel.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,63 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.console.commons.SelectChoiceRenderer;\n+import org.syncope.console.rest.ResourceRestClient;\n+\n+public class ResourcesPanel extends Panel {\n+\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    final IModel<List<String>> allResources =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                @Override\n+                protected List<String> load() {\n+                    final List<String> resourceNames =\n+                            new ArrayList<String>();\n+\n+                    for (ResourceTO resourceTO :\n+                            resourceRestClient.getAllResources()) {\n+                        resourceNames.add(resourceTO.getName());\n+                    }\n+                    return resourceNames;\n+                }\n+            };\n+\n+    public <T extends AbstractAttributableTO> ResourcesPanel(\n+            final String id, final T entityTO) {\n+        super(id);\n+\n+        final Palette<String> resourcesPalette = new Palette(\n+                \"resourcesPalette\",\n+                new PropertyModel(entityTO, \"resources\"),\n+                new ListModel<String>(allResources.getObject()),\n+                new SelectChoiceRenderer(), 8, false);\n+        add(resourcesPalette);\n+    }\n+}"},{"sha":"9739e3f6c0b005e163c01aefedf7a8216de93019","filename":"console/src/main/java/org/syncope/console/pages/panels/SyncTasks.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.console.pages;\n+package org.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -46,6 +46,8 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.BasePage;\n+import org.syncope.console.pages.STaskModalPage;\n import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;","previous_filename":"console/src/main/java/org/syncope/console/pages/SyncTasks.java"},{"sha":"cf116f69175ae4b9ac668f9401f5642159dacb0f","filename":"console/src/main/java/org/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"renamed","additions":37,"deletions":21,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,7 +14,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.console.wicket.markup.html.form;\n+package org.syncope.console.pages.panels;\n \n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -24,44 +24,62 @@\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.RoleTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n \n-public class VirtualAttributesForm extends Form {\n+public class VirtualAttributesPanel extends Panel {\n \n     /**\n      * Logger.\n      */\n     protected static final Logger LOG =\n-            LoggerFactory.getLogger(VirtualAttributesForm.class);\n+            LoggerFactory.getLogger(VirtualAttributesPanel.class);\n \n-    public VirtualAttributesForm(String id, IModel<?> model) {\n-        super(id, model);\n-    }\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n \n-    public VirtualAttributesForm(String id) {\n-        super(id);\n-    }\n+    public <T extends AbstractAttributableTO> VirtualAttributesPanel(\n+            final String id, final T entityTO) {\n \n-    public <T extends AbstractAttributableTO> Form build(\n-            final WebPage page,\n-            final T entityTO,\n-            final IModel<List<String>> schemaNames) {\n+        super(id);\n \n         setOutputMarkupId(true);\n \n+        final IModel<List<String>> virtualSchemaNames =\n+                new LoadableDetachableModel<List<String>>() {\n+\n+                    @Override\n+                    protected List<String> load() {\n+                        if (entityTO instanceof RoleTO) {\n+                            return schemaRestClient.getVirtualSchemaNames(\n+                                    \"role\");\n+                        } else if (entityTO instanceof UserTO) {\n+                            return schemaRestClient.getVirtualSchemaNames(\n+                                    \"user\");\n+                        } else {\n+                            return schemaRestClient.getVirtualSchemaNames(\n+                                    \"membership\");\n+                        }\n+                    }\n+                };\n+\n         final WebMarkupContainer attributesContainer =\n                 new WebMarkupContainer(\"virAttrContainer\");\n \n@@ -70,7 +88,7 @@ public <T extends AbstractAttributableTO> Form build(\n \n         AjaxButton addAttributeBtn = new IndicatingAjaxButton(\n                 \"addAttributeBtn\",\n-                new Model(page.getString(\"addAttributeBtn\"))) {\n+                new Model(getString(\"addAttributeBtn\"))) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target,\n@@ -123,7 +141,7 @@ public CharSequence preDecorateScript(\n                         new DropDownChoice<String>(\n                         \"schema\",\n                         new PropertyModel<String>(attributeTO, \"schema\"),\n-                        schemaNames);\n+                        virtualSchemaNames);\n \n                 schemaChoice.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n@@ -165,7 +183,7 @@ protected void onUpdate(AjaxRequestTarget art) {\n                         item.add(field);\n \n                         AjaxButton dropButton = new IndicatingAjaxButton(\"drop\",\n-                                new Model(page.getString(\"drop\"))) {\n+                                new Model(getString(\"drop\"))) {\n \n                             @Override\n                             protected void onSubmit(\n@@ -183,7 +201,7 @@ protected void onSubmit(\n                                 Boolean.FALSE));\n \n                         AjaxButton addButton = new IndicatingAjaxButton(\"add\",\n-                                new Model(page.getString(\"add\"))) {\n+                                new Model(getString(\"add\"))) {\n \n                             @Override\n                             protected void onSubmit(\n@@ -218,7 +236,5 @@ protected void onSubmit(\n         };\n \n         attributesContainer.add(attributes);\n-\n-        return this;\n     }\n }","previous_filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/VirtualAttributesForm.java"},{"sha":"df33b074081d69f268ef5309eeea372979fef37a","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":32,"deletions":8,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,29 +14,53 @@\n  */\n package org.syncope.console.wicket.markup.html.form;\n \n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n public class AjaxCheckBoxPanel extends Panel {\n \n-    public AjaxCheckBoxPanel(final String id, final String name,\n-            final IModel<Boolean> model, final boolean required) {\n+    public AjaxCheckBoxPanel(\n+            final String id,\n+            final String name,\n+            final IModel<Boolean> model,\n+            final boolean required) {\n \n         super(id, model);\n \n-        add(new CheckBox(\"checkboxField\", model).setLabel(\n-                new Model(name)));\n+        final CheckBox field = new CheckBox(\"checkboxField\", model);\n+        add(field.setLabel(new Model(name)));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n \n-    public AjaxCheckBoxPanel(final String id, final String name,\n+    public AjaxCheckBoxPanel(\n+            final String id,\n+            final String name,\n             final IModel<Boolean> model,\n-            final boolean required, final boolean readonly) {\n+            final boolean required,\n+            final boolean readonly) {\n \n         super(id, model);\n \n-        add(new CheckBox(\"checkboxField\", model).setLabel(\n-                new Model(name)).setEnabled(!readonly));\n+        final CheckBox field = new CheckBox(\"checkboxField\", model);\n+        add(field.setLabel(new Model(name)).setEnabled(!readonly));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n }"},{"sha":"a607ef6e3196436c75e2c933f34f3b9554c7c117","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":25,"deletions":3,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -15,6 +15,8 @@\n package org.syncope.console.wicket.markup.html.form;\n \n import java.util.List;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n@@ -37,8 +39,18 @@ public AjaxDropDownChoicePanel(final String id, final String name,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        add(new DropDownChoice(\"dropDownChoiceField\", model, choices,\n-                renderer).setRequired(required).setLabel(new Model(name)));\n+        final DropDownChoice field = new DropDownChoice(\n+                \"dropDownChoiceField\", model, choices, renderer);\n+\n+        add(field.setRequired(required).setLabel(new Model(name)));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n \n     public AjaxDropDownChoicePanel(final String id, final String name,\n@@ -53,7 +65,17 @@ public AjaxDropDownChoicePanel(final String id, final String name,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        add(new TextField(\"dropDownChoiceField\", model).setRequired(\n+        final TextField field = new TextField(\"dropDownChoiceField\", model);\n+\n+        add(field.setRequired(\n                 required).setLabel(new Model(name)).setEnabled(!readonly));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"change\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n }"},{"sha":"a91dfdfb6ef9bb41fb6a2bb098419246fb167c6c","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":39,"deletions":5,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,6 +14,8 @@\n  */\n package org.syncope.console.wicket.markup.html.form;\n \n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.behavior.SimpleAttributeModifier;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -34,10 +36,20 @@ public AjaxTextFieldPanel(final String id, final String name,\n             add(new Label(\"required\", \"\"));\n         }\n \n+        final TextField field = new TextField(\"textField\", model);\n+\n         add(new TextField(\"textField\", model).setRequired(required).\n                 setLabel(new Model(name)).add(\n                 new SimpleAttributeModifier(\n                 \"title\", title != null ? title : \"\")));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n \n     public AjaxTextFieldPanel(final String id, final String name,\n@@ -51,13 +63,25 @@ public AjaxTextFieldPanel(final String id, final String name,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        add(new TextField(\"textField\", model).setRequired(required).setLabel(\n-                new Model(name)));\n+        final TextField field = new TextField(\"textField\", model);\n+\n+        add(field.setRequired(required).setLabel(new Model(name)));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n \n-    public AjaxTextFieldPanel(final String id, final String name,\n+    public AjaxTextFieldPanel(\n+            final String id,\n+            final String name,\n             final IModel model,\n-            final boolean required, final boolean readonly) {\n+            final boolean required,\n+            final boolean readonly) {\n \n         super(id, model);\n \n@@ -67,7 +91,17 @@ public AjaxTextFieldPanel(final String id, final String name,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        add(new TextField(\"textField\", model).setRequired(required).\n+        final TextField field = new TextField(\"textField\", model);\n+\n+        add(field.setRequired(required).\n                 setLabel(new Model(name)).setEnabled(!readonly));\n+\n+        field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+                // nothing to do\n+            }\n+        });\n     }\n }"},{"sha":"6d25621c6ec26f234f7e4d0ec02e60dd90f30534","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":89,"deletions":21,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.console.wicket.markup.html.form;\n \n+import java.util.Calendar;\n import java.util.Date;\n import java.util.StringTokenizer;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -23,20 +24,24 @@\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.extensions.yui.calendar.DatePicker;\n import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.validation.IValidationError;\n import org.apache.wicket.validation.ValidationError;\n import org.apache.wicket.datetime.markup.html.form.DateTextField;\n+import org.apache.wicket.extensions.yui.calendar.DatePicker;\n \n public class DateFieldPanel extends Panel {\n \n-    public DateFieldPanel(final String id, final String name,\n-            final IModel<Date> model, final String datePattern,\n-            final boolean required, final boolean readonly,\n+    public DateFieldPanel(\n+            final String id,\n+            final String name,\n+            final IModel<Date> model,\n+            final String datePattern,\n+            final boolean required,\n+            final boolean readonly,\n             final Form form) {\n \n         super(id, model);\n@@ -52,35 +57,97 @@ public DateFieldPanel(final String id, final String name,\n         if (!datePattern.contains(\"H\")) {\n             datePanel = new Fragment(\"datePanel\", \"dateField\", this);\n \n-            DateTextField field = DateTextField.forDatePattern(\"field\", model,\n-                    datePattern);\n+            final DateTextField field = DateTextField.forDatePattern(\n+                    \"field\", model, datePattern);\n+\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                }\n+            });\n \n             field.add(getDatePicker());\n \n             field.setEnabled(!readonly);\n             field.setLabel(new Model(name));\n \n-            field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+            datePanel.add(field);\n+        } else {\n+            datePanel = new Fragment(\"datePanel\", \"dateTimeField\", this);\n+\n+            final DateTimeField field = new DateTimeField(\"field\", model);\n+\n+            final Calendar cal = Calendar.getInstance();\n+\n+            field.get(\"hours\").\n+                    add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                protected void onUpdate(AjaxRequestTarget target) {\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                    //cal.setTime(field.getModelObject());\n+                    if (field.getHours() > 12) {\n+                        cal.set(Calendar.HOUR_OF_DAY, field.getHours());\n+                    } else {\n+                        cal.set(Calendar.HOUR, field.getHours());\n+                    }\n+                    field.setModelObject(cal.getTime());\n                 }\n             });\n \n-            datePanel.add(field);\n-        } else {\n-            datePanel = new Fragment(\"datePanel\", \"dateTimeField\", this);\n+            field.get(\"minutes\").\n+                    add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            DateTimeField field = new DateTimeField(\"field\", model);\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                    //cal.setTime(field.getModelObject());\n+                    cal.set(Calendar.MINUTE, field.getMinutes());\n+                    field.setModelObject(cal.getTime());\n+                }\n+            });\n \n-            field.setEnabled(!readonly);\n-            field.setLabel(new Model(name));\n+            field.get(\"date\").\n+                    add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                    cal.setTime(field.getDate());\n \n-                protected void onUpdate(AjaxRequestTarget target) {\n+                    if (\"PM\".equals(\"\" + field.getAmOrPm())) {\n+                        cal.set(Calendar.AM_PM, Calendar.PM);\n+                    } else {\n+                        cal.set(Calendar.AM_PM, Calendar.AM);\n+                    }\n+\n+                    field.setModelObject(cal.getTime());\n                 }\n             });\n \n+            field.get(\"amOrPmChoice\").\n+                    add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                    //cal.setTime(field.getModelObject());\n+\n+                    if (\"PM\".equals(\"\" + field.getAmOrPm())) {\n+                        cal.set(Calendar.AM_PM, Calendar.PM);\n+                    } else {\n+                        cal.set(Calendar.AM_PM, Calendar.AM);\n+                    }\n+\n+                    field.setModelObject(cal.getTime());\n+                }\n+            });\n+\n+            field.setEnabled(!readonly);\n+            field.setLabel(new Model(name));\n+\n             datePanel.add(field);\n \n             if (required) {\n@@ -94,7 +161,7 @@ protected void onUpdate(AjaxRequestTarget target) {\n     /**\n      * Setup a DatePicker component.\n      */\n-    public DatePicker getDatePicker() {\n+    private DatePicker getDatePicker() {\n         final DatePicker picker = new DatePicker() {\n \n             @Override\n@@ -112,15 +179,14 @@ protected boolean enableMonthYearSelection() {\n      * Custom form validator for registering and handling DateTimeField\n      * components that are in it.\n      */\n-    public class DateTimeFormValidator extends AbstractFormValidator {\n+    private class DateTimeFormValidator extends AbstractFormValidator {\n \n         private FormComponent[] dateTimeComponents;\n \n         public DateTimeFormValidator(DateTimeField dateTimeComponent) {\n             if (dateTimeComponent == null) {\n                 throw new IllegalArgumentException(\n-                        \"argument dateTimeComponent cannot \"\n-                        + \"be null\");\n+                        \"argument dateTimeComponent cannot be null\");\n             }\n \n             dateTimeComponents = new FormComponent[]{dateTimeComponent};\n@@ -139,6 +205,7 @@ public FormComponent[] getDependentFormComponents() {\n         public void validate(Form form) {\n             DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n \n+            // TODO: must be done better than this\n             StringTokenizer inputDateTokenizer = new StringTokenizer(\n                     dateTimeField.getInput(), \",\");\n \n@@ -150,7 +217,8 @@ public void validate(Form form) {\n                 isValid = false;\n             } else {\n                 //First token = date\n-                String date = inputDateTokenizer.nextToken();\n+                inputDateTokenizer.nextToken();\n+\n                 //Second token = time\n                 StringTokenizer timeTokenizer = new StringTokenizer(\n                         inputDateTokenizer.nextToken(), \":\");"},{"sha":"cb663bc48d3076c26f58481f2ec556ff7a091aa3","filename":"console/src/main/resources/org/syncope/console/pages/MembershipModalPage.html","status":"modified","additions":3,"deletions":110,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -22,121 +22,14 @@\n             <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n-            <table style=\"font-size:1em\" width=\"100%\" wicket:id=\"container\">\n-                <tr wicket:id=\"membershipSchemas\">\n-                    <td><span wicket:id=\"name\"/></td>\n-                    <td>\n-                        <span wicket:id=\"fields\">\n-                            <span wicket:id=\"panel\">\n-                                [panel for dynamic input type markup]\n-                            </span>\n-                        </span>\n-                        <input type=\"button\" wicket:id=\"add\"/>\n-                        <input type=\"button\" wicket:id=\"drop\"/>\n-                    </td>\n-                </tr>\n-                <!-- each time this table is rendered, stripe rows' color -->\n-                <script type=\"text/javascript\">\n-                    $(function() {\n-                        $('.stripedTable tr:even').addClass(\"alt\");\n-                    });\n-                </script>\n-            </table>\n+            <span wicket:id=\"attributes\">[membership attributes]</span>\n         </div>\n         <div id=\"tabs-2\">\n-            <form wicket:id=\"derAttributesForm\">\n-                <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                       style=\"font-size: 1em;margin-top:2px;\"\n-                       width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"derivedAttributeToBeRemoved\"/></th>\n-                    <th><wicket:message key=\"derivedAttributeName\"/></th>\n-                    <th><wicket:message key=\"derivedAttributeValue\"/></th>\n-                    </tr>\n-                    </thead>\n-\n-                    <tfoot>\n-                        <tr>\n-                            <td>\n-                                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                       wicket:id=\"addAttributeBtn\" />\n-                            </td>\n-                        </tr>\n-                    </tfoot>\n-\n-                    <tbody wicket:id=\"derAttrContainer\">\n-                        <tr wicket:id=\"attributes\">\n-                            <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                            </td>\n-\n-                            <td>\n-                                <select class=\"text ui-widget-content ui-corner-all\"\n-                                        style=\"width:100%\" wicket:id=\"schema\"/>\n-                            </td>\n-\n-                            <td align=\"center\" valign=\"middle\">\n-                                <input type=\"text\"\n-                                       style=\"width:100%\" wicket:id=\"value\"/>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-            </form>\n+            <span wicket:id=\"derivedAttributes\">[membership derived attributes]</span>\n         </div>\n \n         <div id=\"tabs-3\">\n-            <form wicket:id=\"virAttributesForm\">\n-                <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                       style=\"font-size: 1em;margin-top:2px;\"\n-                       width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n-                    <th><wicket:message key=\"virtualAttributeName\"/></th>\n-                    <th><wicket:message key=\"virtualAttributeValue\"/></th>\n-                    </tr>\n-                    </thead>\n-\n-                    <tfoot>\n-                        <tr>\n-                            <td>\n-                                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                       wicket:id=\"addAttributeBtn\" />\n-                            </td>\n-                        </tr>\n-                    </tfoot>\n-\n-                    <tbody wicket:id=\"virAttrContainer\">\n-                        <tr wicket:id=\"attributes\">\n-                            <td align=\"center\" valign=\"top\">\n-                                <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                            </td>\n-\n-                            <td align=\"center\" valign=\"top\">\n-                                <select class=\"text ui-widget-content ui-corner-all\"\n-                                        style=\"width:100%\" wicket:id=\"schema\"/>\n-                            </td>\n-\n-                            <td align=\"center \" valign=\"top\">\n-                                <span wicket:id=\"values\" style=\"width:100%\">\n-\n-                                    <input type=\"text\" style=\"width:80%\" wicket:id=\"value\"/>\n-\n-                                    <input type=\"button\" wicket:id=\"drop\"/>\n-\n-                                    <input align=\"right\" type=\"button\" wicket:id=\"add\"/>\n-\n-                                    <br />\n-                                </span>\n-\n-                            </td>\n-\n-                        </tr>\n-                    </tbody>\n-                </table>\n-            </form>\n+            <span wicket:id=\"virtualAttributes\">[membership virtual attributes]</span>\n         </div>\n     </div>\n     <div>"},{"sha":"e53f93d641f8c7843462cedd9ccfae38b8bbcf2f","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.html","status":"modified","additions":8,"deletions":123,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -44,41 +44,13 @@\n                     <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n                 </ul>\n                 <div id=\"tabs-1\">\n-                    <table class=\"stripedTable\" style=\"font-size: 1em;border: none\" width=\"100%\" wicket:id=\"container\">\n-                        <tr>\n-                            <td><wicket:message key=\"name\"/></td>\n-                        <td>\n-                            <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n-                                   style=\"margin-bottom:10px;width:95%;padding:.4em;\"\n-                                   wicket:id=\"name\"/><span>*</span>\n-                        </td>\n-                        </tr>\n-                        <tr wicket:id=\"roleSchemas\">\n-                            <td><span wicket:id=\"name\"/></td>\n-                            <td>\n-                                <span wicket:id=\"fields\">\n-                                    <span wicket:id=\"panel\">\n-                                        [panel for dynamic input type markup]\n-                                    </span>\n-                                </span>\n-                                <input type=\"button\" wicket:id=\"add\"/>\n-                                <input type=\"button\" wicket:id=\"drop\"/>\n-                            </td>\n-                        </tr>\n+                    <wicket:message key=\"name\"/>\n \n-                        <tr>\n-                            <td colspan=\"3\">\n+                    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n+                           style=\"margin-bottom:10px;width:95%;padding:.4em;\"\n+                           wicket:id=\"name\"/><span>*</span>\n \n-                            </td>\n-                        </tr>\n-                        <!-- each time this table is rendered, stripe rows' color -->\n-                        <script type=\"text/javascript\">\n-                            $(function() {\n-                                $('.stripedTable tr:even').addClass(\"alt\");\n-                            });\n-                        </script>\n-\n-                    </table>\n+                    <span wicket:id=\"attributes\">[role attributes]</span>\n \n                     <div>\n                         &nbsp;\n@@ -89,46 +61,7 @@\n                 </div>\n \n                 <div id=\"tabs-2\">\n-                    <form wicket:id=\"derAttributesForm\">\n-                        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                               style=\"font-size: 1em;margin-top:2px;\"\n-                               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                            <thead>\n-                                <tr class=\"ui-widget-header\">\n-                                    <th><wicket:message key=\"derivedAttributeToBeRemoved\"/></th>\n-                            <th><wicket:message key=\"derivedAttributeName\"/></th>\n-                            <th><wicket:message key=\"derivedAttributeValue\"/></th>\n-                            </tr>\n-                            </thead>\n-\n-                            <tfoot>\n-                                <tr>\n-                                    <td>\n-                                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                               wicket:id=\"addAttributeBtn\" />\n-                                    </td>\n-                                </tr>\n-                            </tfoot>\n-\n-                            <tbody wicket:id=\"derAttrContainer\">\n-                                <tr wicket:id=\"attributes\">\n-                                    <td align=\"center\" valign=\"middle\">\n-                                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                    </td>\n-\n-                                    <td>\n-                                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                                style=\"width:100%\" wicket:id=\"schema\"/>\n-                                    </td>\n-\n-                                    <td align=\"center\" valign=\"middle\">\n-                                        <input type=\"text\"\n-                                               style=\"width:100%\" wicket:id=\"value\"/>\n-                                    </td>\n-                                </tr>\n-                            </tbody>\n-                        </table>\n-                    </form>\n+                    <span wicket:id=\"derivedAttributes\">[role derived attributes]</span>\n \n                     <div>\n                         &nbsp;\n@@ -139,55 +72,7 @@\n                 </div>\n \n                 <div id=\"tabs-3\">\n-                    <form wicket:id=\"virAttributesForm\">\n-                        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                               style=\"font-size: 1em;margin-top:2px;\"\n-                               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                            <thead>\n-                                <tr class=\"ui-widget-header\">\n-                                    <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n-                            <th><wicket:message key=\"virtualAttributeName\"/></th>\n-                            <th><wicket:message key=\"virtualAttributeValue\"/></th>\n-                            </tr>\n-                            </thead>\n-\n-                            <tfoot>\n-                                <tr>\n-                                    <td>\n-                                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                               wicket:id=\"addAttributeBtn\" />\n-                                    </td>\n-                                </tr>\n-                            </tfoot>\n-\n-                            <tbody wicket:id=\"virAttrContainer\">\n-                                <tr wicket:id=\"attributes\">\n-                                    <td align=\"center\" valign=\"top\">\n-                                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                    </td>\n-\n-                                    <td align=\"center\" valign=\"top\">\n-                                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                                style=\"width:100%\" wicket:id=\"schema\"/>\n-                                    </td>\n-\n-                                    <td align=\"center \" valign=\"top\">\n-                                        <span wicket:id=\"values\" style=\"width:100%\">\n-\n-                                            <input type=\"text\" style=\"width:80%\" wicket:id=\"value\"/>\n-\n-                                            <input type=\"button\" wicket:id=\"drop\"/>\n-\n-                                            <input align=\"right\" type=\"button\" wicket:id=\"add\"/>\n-\n-                                            <br />\n-                                        </span>\n-\n-                                    </td>\n-                                </tr>\n-                            </tbody>\n-                        </table>\n-                    </form>\n+                    <span wicket:id=\"virtualAttributes\">[role virtual attributes]</span>\n \n                     <div>\n                         &nbsp;\n@@ -198,7 +83,7 @@\n                 </div>\n \n                 <div id=\"tabs-4\">\n-                    <span wicket:id=\"resourcesPalette\"/>\n+                    <span wicket:id=\"resources\">[resources]</span>\n                 </div>\n                 <div id=\"tabs-5\">\n                     <span wicket:id=\"entitlementsPalette\"/>"},{"sha":"658316b144c72a57714e86869fd64b6615cab247","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.html","status":"modified","additions":12,"deletions":121,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -65,137 +65,28 @@\n                     <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n                 </ul>\n                 <div id=\"tabs-1\">\n-                    <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" wicket:id=\"container\" width=\"100%\">\n-                        <tr wicket:id=\"userSchemas\">\n-                            <td><span wicket:id=\"name\"/></td>\n-                            <td>\n-                                <span wicket:id=\"fields\">\n-                                    <span wicket:id=\"panel\">\n-                                        [panel for dynamic input type markup]\n-                                    </span>\n-                                </span>\n-                                <input type=\"button\" wicket:id=\"add\"/>\n-                                <input type=\"button\" wicket:id=\"drop\"/>\n-                            </td>\n-                        </tr>\n-                        <tr>\n-                            <td>\n-                        <wicket:message key=\"password\"/>\n-                        </td>\n-                        <td>\n-                            <input type=\"password\" class=\"text ui-widget-content ui-corner-all\" size=\"40px\" style=\"margin-bottom:10px;padding:.4em;\" wicket:id=\"password\"/>\n-                            <span wicket:id=\"mandatory_pwd\">*</span>\n-                        </td>\n-                        </tr>\n-                        <!-- each time this table is rendered, stripe rows' color -->\n-                        <script type=\"text/javascript\">\n-                            $(function() {\n-                                $('.stripedTable tr:even').addClass(\"alt\");\n-                            });\n-                        </script>\n-                    </table>\n-                </div>\n+                    <span wicket:id=\"attributes\">[user attributes]</span>\n \n-                <div id=\"tabs-2\">\n-                    <form wicket:id=\"derAttributesForm\">\n-                        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                               style=\"font-size: 1em;margin-top:2px;\"\n-                               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                            <thead>\n-                                <tr class=\"ui-widget-header\">\n-                                    <th><wicket:message key=\"derivedAttributeToBeRemoved\"/></th>\n-                            <th><wicket:message key=\"derivedAttributeName\"/></th>\n-                            <th><wicket:message key=\"derivedAttributeValue\"/></th>\n-                            </tr>\n-                            </thead>\n+                    <wicket:message key=\"password\"/>\n \n-                            <tfoot>\n-                                <tr>\n-                                    <td>\n-                                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                               wicket:id=\"addAttributeBtn\" />\n-                                    </td>\n-                                </tr>\n-                            </tfoot>\n+                    <input type=\"password\"\n+                           class=\"text ui-widget-content ui-corner-all\"\n+                           size=\"40px\" style=\"margin-bottom:10px;padding:.4em;\"\n+                           wicket:id=\"password\"/>\n \n-                            <tbody wicket:id=\"derAttrContainer\">\n-                                <tr wicket:id=\"attributes\">\n-                                    <td align=\"center\" valign=\"middle\">\n-                                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                    </td>\n-\n-                                    <td>\n-                                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                                style=\"width:100%\" wicket:id=\"schema\"/>\n-                                    </td>\n+                    <span wicket:id=\"mandatory_pwd\">*</span>\n+                </div>\n \n-                                    <td align=\"center\" valign=\"middle\">\n-                                        <input type=\"text\"\n-                                               style=\"width:100%\" wicket:id=\"value\"/>\n-                                    </td>\n-                                </tr>\n-                            </tbody>\n-                        </table>\n-                    </form>\n+                <div id=\"tabs-2\">\n+                    <span wicket:id=\"derivedAttributes\">[user derived attributes]</span>\n                 </div>\n \n                 <div id=\"tabs-3\">\n-                    <form wicket:id=\"virAttributesForm\">\n-                        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-                               style=\"font-size: 1em;margin-top:2px;\"\n-                               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-                            <thead>\n-                                <tr class=\"ui-widget-header\">\n-                                    <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n-                            <th><wicket:message key=\"virtualAttributeName\"/></th>\n-                            <th><wicket:message key=\"virtualAttributeValue\"/></th>\n-                            </tr>\n-                            </thead>\n-\n-                            <tfoot>\n-                                <tr>\n-                                    <td>\n-                                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                               wicket:id=\"addAttributeBtn\" />\n-                                    </td>\n-                                </tr>\n-                            </tfoot>\n-\n-                            <tbody wicket:id=\"virAttrContainer\">\n-                                <tr wicket:id=\"attributes\">\n-                                    <td align=\"center\" valign=\"top\">\n-                                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                    </td>\n-\n-                                    <td align=\"center\" valign=\"top\">\n-                                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                                style=\"width:100%\" wicket:id=\"schema\"/>\n-                                    </td>\n-\n-                                    <td align=\"center \" valign=\"top\">\n-                                        <span wicket:id=\"values\" style=\"width:100%\">\n-\n-                                            <input type=\"text\" style=\"width:80%\" wicket:id=\"value\"/>\n-\n-                                            <input type=\"button\" wicket:id=\"drop\"/>\n-\n-                                            <input align=\"right\" type=\"button\" wicket:id=\"add\"/>\n-\n-                                            <br />\n-                                        </span>\n-\n-                                    </td>\n-\n-                                </tr>\n-                            </tbody>\n-                        </table>\n-                    </form>\n+                    <span wicket:id=\"virtualAttributes\">[user virtual attributes]</span>\n                 </div>\n \n                 <div id=\"tabs-4\">\n-\n-                    <span wicket:id=\"resourcesPalette\"/>\n-\n+                    <span wicket:id=\"resources\">[resources]</span>\n                 </div>\n \n                 <div id=\"tabs-5\">"},{"sha":"1cf8be9db28e1fd88d9dd95d3278726290181dcb","filename":"console/src/main/resources/org/syncope/console/pages/panels/AttributesPanel.html","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,40 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" wicket:id=\"container\" width=\"100%\">\n+            <tr wicket:id=\"schemas\">\n+                <td><span wicket:id=\"name\"/></td>\n+                <td>\n+<!--                    <span wicket:id=\"cc\">-->\n+                        <span wicket:id=\"fields\">\n+                            <span wicket:id=\"panel\">\n+                                [panel for dynamic input type markup]\n+                            </span>\n+                        </span>\n+<!--                    </span>-->\n+                    <input type=\"button\" wicket:id=\"add\"/>\n+                    <input type=\"button\" wicket:id=\"drop\"/>\n+                </td>\n+            </tr>\n+            <!-- each time this table is rendered, stripe rows' color -->\n+            <script type=\"text/javascript\">\n+                $(function() {\n+                    $('.stripedTable tr:even').addClass(\"alt\");\n+                });\n+            </script>\n+        </table>\n+    </wicket:panel>\n+</html>"},{"sha":"d96ee6c038cd6da10fbd5a396fb23a9788a6ec7d","filename":"console/src/main/resources/org/syncope/console/pages/panels/DerivedAttributesPanel.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,56 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n+               style=\"font-size: 1em;margin-top:2px;\"\n+               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+            <thead>\n+                <tr class=\"ui-widget-header\">\n+                    <th><wicket:message key=\"derivedAttributeToBeRemoved\"/></th>\n+            <th><wicket:message key=\"derivedAttributeName\"/></th>\n+            <th><wicket:message key=\"derivedAttributeValue\"/></th>\n+            </tr>\n+            </thead>\n+\n+            <tfoot>\n+                <tr>\n+                    <td>\n+                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                               wicket:id=\"addAttributeBtn\" />\n+                    </td>\n+                </tr>\n+            </tfoot>\n+\n+            <tbody wicket:id=\"derAttrContainer\">\n+                <tr wicket:id=\"attributes\">\n+                    <td align=\"center\" valign=\"middle\">\n+                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                    </td>\n+\n+                    <td>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                style=\"width:100%\" wicket:id=\"schema\"/>\n+                    </td>\n+\n+                    <td align=\"center\" valign=\"middle\">\n+                        <input type=\"text\"\n+                               style=\"width:100%\" wicket:id=\"value\"/>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </wicket:panel>\n+</html>"},{"sha":"8a51fc5653fdcc3a85d20c39a4704af01cc9e3f8","filename":"console/src/main/resources/org/syncope/console/pages/panels/DerivedAttributesPanel.properties","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1 @@\n+addAttributeBtn=Add\n\\ No newline at end of file"},{"sha":"20f2ea37cf58c2a2b89a6b4db494d7d2fa162209","filename":"console/src/main/resources/org/syncope/console/pages/panels/DerivedAttributesPanel_it.properties","status":"added","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel_it.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,2 @@\n+addAttributeBtn=Aggiungi\n+"},{"sha":"ceac78c88b90c99ca6fcafda5855539a30458a53","filename":"console/src/main/resources/org/syncope/console/pages/panels/GenericTasks.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/GenericTasks.html"},{"sha":"43cacb26ee9b198db1870dc614f921cb3f7771de","filename":"console/src/main/resources/org/syncope/console/pages/panels/GenericTasks.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/GenericTasks.properties"},{"sha":"6cb99d9194ae0e92a365e1aa877d1d6f614111c6","filename":"console/src/main/resources/org/syncope/console/pages/panels/GenericTasks_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FGenericTasks_it.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/GenericTasks_it.properties"},{"sha":"27de7ffd5d9c095c27e496c0610afd7112e2f087","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResourcesPanel.html","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,19 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <span wicket:id=\"resourcesPalette\">[palette]</span>\n+    </wicket:panel>\n+</html>"},{"sha":"ceac78c88b90c99ca6fcafda5855539a30458a53","filename":"console/src/main/resources/org/syncope/console/pages/panels/SyncTasks.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/SyncTasks.html"},{"sha":"204bcdbdee64572657ffe2404af35d95046223d0","filename":"console/src/main/resources/org/syncope/console/pages/panels/SyncTasks.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/SyncTasks.properties"},{"sha":"f781408381b74efec72e49d0845d2b2788e08631","filename":"console/src/main/resources/org/syncope/console/pages/panels/SyncTasks_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","previous_filename":"console/src/main/resources/org/syncope/console/pages/SyncTasks_it.properties"},{"sha":"a6c976ffb2aaefad7135d78f531c09055e29dbef","filename":"console/src/main/resources/org/syncope/console/pages/panels/VirtualAttributesPanel.html","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,66 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <table class=\"ui-widget ui-widget-content ui-corner-all\"\n+               style=\"font-size: 1em;margin-top:2px;\"\n+               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+            <thead>\n+                <tr class=\"ui-widget-header\">\n+                    <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n+            <th><wicket:message key=\"virtualAttributeName\"/></th>\n+            <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+            </tr>\n+            </thead>\n+\n+            <tfoot>\n+                <tr>\n+                    <td>\n+                        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                               wicket:id=\"addAttributeBtn\" />\n+                    </td>\n+                </tr>\n+            </tfoot>\n+\n+            <tbody wicket:id=\"virAttrContainer\">\n+                <tr wicket:id=\"attributes\">\n+                    <td align=\"center\" valign=\"top\">\n+                        <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                    </td>\n+\n+                    <td align=\"center\" valign=\"top\">\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                style=\"width:100%\" wicket:id=\"schema\"/>\n+                    </td>\n+\n+                    <td align=\"center \" valign=\"top\">\n+                        <span wicket:id=\"values\" style=\"width:100%\">\n+\n+                            <input type=\"text\" style=\"width:80%\" wicket:id=\"value\"/>\n+\n+                            <input type=\"button\" wicket:id=\"drop\"/>\n+\n+                            <input align=\"right\" type=\"button\" wicket:id=\"add\"/>\n+\n+                            <br />\n+                        </span>\n+\n+                    </td>\n+\n+                </tr>\n+            </tbody>\n+        </table>\n+    </wicket:panel>\n+</html>"},{"sha":"3b771cb61eca7f86223e48d14ef0cdf31475d4a0","filename":"console/src/main/resources/org/syncope/console/pages/panels/VirtualAttributesPanel.properties","status":"added","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,3 @@\n+addAttributeBtn=Add\n+add=+\n+drop=-\n\\ No newline at end of file"},{"sha":"71135927c7e9025d2b9a50fe4793a72054018104","filename":"console/src/main/resources/org/syncope/console/pages/panels/VirtualAttributesPanel_it.properties","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel_it.properties?ref=9a6b45c0cacca0e26b555340b95c08f5a5cd3a8f","patch":"@@ -0,0 +1,4 @@\n+addAttributeBtn=Aggiungi\n+add=+\n+drop=-\n+"}]}