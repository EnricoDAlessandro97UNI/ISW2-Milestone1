{"sha":"b70b6576828fd340ebfe4da81342e6009dccbdc0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI3MGI2NTc2ODI4ZmQzNDBlYmZlNGRhODEzNDJlNjAwOWRjY2JkYzA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-09T11:29:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-09T11:29:37Z"},"message":"[SYNCOPE-259] Fixing minor issues on WorkflowTestITCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1430794 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6d76e8f085635b19268855d092c0ac5966b8191e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6d76e8f085635b19268855d092c0ac5966b8191e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b70b6576828fd340ebfe4da81342e6009dccbdc0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b70b6576828fd340ebfe4da81342e6009dccbdc0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b70b6576828fd340ebfe4da81342e6009dccbdc0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b70b6576828fd340ebfe4da81342e6009dccbdc0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b22c8f3de2d98c64960d207e0c199b5f10312042","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b22c8f3de2d98c64960d207e0c199b5f10312042","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b22c8f3de2d98c64960d207e0c199b5f10312042"}],"stats":{"total":72,"additions":36,"deletions":36},"files":[{"sha":"d859750ac6fbed5b18fa78718de281e11e6045ed","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=b70b6576828fd340ebfe4da81342e6009dccbdc0","patch":"@@ -52,9 +52,11 @@ public class SpringContextInitializer implements ServletContextAware, BeanFactor\n \n     private static String uwfAdapterClassName;\n \n+    private static String rwfAdapterClassName;\n+\n     static {\n         try {\n-            initUWFAdapterClassName();\n+            initWFAdapterClassNames();\n         } catch (IOException e) {\n             LOG.error(\"Could not init uwfAdapterClassName\", e);\n         }\n@@ -65,13 +67,14 @@ public class SpringContextInitializer implements ServletContextAware, BeanFactor\n      *\n      * @throws IOException if anything goes wrong\n      */\n-    private static void initUWFAdapterClassName() throws IOException {\n+    private static void initWFAdapterClassNames() throws IOException {\n         Properties props = new java.util.Properties();\n         InputStream propStream = null;\n         try {\n             propStream = ContentLoader.class.getResourceAsStream(\"/workflow.properties\");\n             props.load(propStream);\n             uwfAdapterClassName = props.getProperty(\"uwfAdapter\");\n+            rwfAdapterClassName = props.getProperty(\"rwfAdapter\");\n         } catch (Exception e) {\n             LOG.error(\"Could not load workflow.properties\", e);\n         } finally {\n@@ -84,12 +87,23 @@ private static void initUWFAdapterClassName() throws IOException {\n     /**\n      * Check if the configured user workflow adapter is Activiti's.\n      *\n-     * @return whether Activiti is configured for workflow or not\n+     * @return whether Activiti is configured for user workflow or not\n      */\n     public static boolean isActivitiEnabledForUsers() {\n         return uwfAdapterClassName != null && uwfAdapterClassName.equals(ActivitiUserWorkflowAdapter.class.getName());\n     }\n \n+    /**\n+     * Check if the configured role workflow adapter is Activiti's.\n+     *\n+     * @return whether Activiti is configured for role workflow or not\n+     */\n+    public static boolean isActivitiEnabledForRoles() {\n+        // ActivitiRoleWorkflowAdapter hasn't been developed (yet) as part of SYNCOPE-173 \n+        //return rwfAdapterClassName != null && rwfAdapterClassName.equals(ActivitiRoleWorkflowAdapter.class.getName());\n+        return false;\n+    }\n+\n     @Autowired\n     private ConnectorFactory connInstanceLoader;\n "},{"sha":"7733c30c5f90fa6a440f30b99e1e9df89bcda366","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/WorkflowController.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java?ref=b70b6576828fd340ebfe4da81342e6009dccbdc0","patch":"@@ -50,6 +50,7 @@ public class WorkflowController extends AbstractController {\n \n     @Autowired\n     private RoleWorkflowAdapter rwfAdapter;\n+\n     private WorkflowDefinitionTO getDefinition(final WorkflowAdapter adapter) throws WorkflowException {\n         WorkflowDefinitionTO result = adapter.getDefinition();\n \n@@ -86,6 +87,7 @@ private void updateDefinition(final WorkflowAdapter adapter, final WorkflowDefin\n     @RequestMapping(method = RequestMethod.PUT, value = \"/definition/user\")\n     public void updateUserDefinition(@RequestBody final WorkflowDefinitionTO definition)\n             throws NotFoundException, WorkflowException {\n+\n         updateDefinition(uwfAdapter, definition);\n     }\n "},{"sha":"0cec0c9cef80ed752fcdd72e6e45c91e6556f668","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=b70b6576828fd340ebfe4da81342e6009dccbdc0","patch":"@@ -18,23 +18,14 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n+import static org.junit.Assert.*;\n \n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-\n-import org.apache.http.auth.UsernamePasswordCredentials;\n-import org.apache.http.impl.client.DefaultHttpClient;\n-import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.client.mod.MembershipMod;\n import org.apache.syncope.client.mod.UserMod;"},{"sha":"813632d6871b02f6f2476004fa85cd43030884bd","filename":"core/src/test/java/org/apache/syncope/core/rest/WorkflowTestITCase.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b70b6576828fd340ebfe4da81342e6009dccbdc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java?ref=b70b6576828fd340ebfe4da81342e6009dccbdc0","patch":"@@ -18,21 +18,19 @@\n  */\r\n package org.apache.syncope.core.rest;\r\n \r\n-import static org.junit.Assert.assertEquals;\r\n-import static org.junit.Assert.assertNotNull;\r\n-import static org.junit.Assert.assertTrue;\r\n+import static org.junit.Assert.*;\r\n \r\n import java.util.List;\r\n-\r\n import org.apache.syncope.client.to.WorkflowDefinitionTO;\r\n-import org.junit.Ignore;\r\n+import org.apache.syncope.core.init.SpringContextInitializer;\r\n+import org.junit.Assume;\r\n import org.junit.Test;\r\n \r\n public class WorkflowTestITCase extends AbstractTest {\r\n \r\n     public static final String ROLE_TYPE = \"role\";\r\n \r\n-    public static final String USER_TYPE = \"role\";\r\n+    public static final String USER_TYPE = \"user\";\r\n \r\n     @Test //TODO TestCase needs to be extended\r\n     public void testGetUserDefinition() {\r\n@@ -46,46 +44,41 @@ public void testGetRoleDefinition() {\n         assertNotNull(definition);\r\n     }\r\n \r\n-    @Test\r\n-    @Ignore //TODO TestCase needs to be extended\r\n+    @Test//TODO TestCase needs to be extended\r\n     public void testUpdateUserDefinition() {\r\n+        Assume.assumeTrue(SpringContextInitializer.isActivitiEnabledForUsers());\r\n+\r\n         WorkflowDefinitionTO definition = workflowService.getDefinition(USER_TYPE);\r\n         assertNotNull(definition);\r\n-        String newID = (definition.getId() != null)\r\n-                ? definition.getId() + \"1\"\r\n-                : \"1\";\r\n-        definition.setId(newID);\r\n+\r\n         workflowService.updateDefinition(USER_TYPE, definition);\r\n         WorkflowDefinitionTO newDefinition = workflowService.getDefinition(USER_TYPE);\r\n-        assertEquals(newID, newDefinition.getId());\r\n+        assertNotNull(newDefinition);\r\n     }\r\n \r\n-    @Test\r\n-    @Ignore //TODO TestCase needs to be extended\r\n+    @Test//TODO TestCase needs to be extended\r\n     public void testUpdateRoleDefinition() {\r\n+        Assume.assumeTrue(SpringContextInitializer.isActivitiEnabledForRoles());\r\n+\r\n         WorkflowDefinitionTO definition = workflowService.getDefinition(ROLE_TYPE);\r\n         assertNotNull(definition);\r\n-        String newID = (definition.getId() != null)\r\n-                ? definition.getId() + \"1\"\r\n-                : \"1\";\r\n-        definition.setId(newID);\r\n+\r\n         workflowService.updateDefinition(ROLE_TYPE, definition);\r\n         WorkflowDefinitionTO newDefinition = workflowService.getDefinition(ROLE_TYPE);\r\n-        assertEquals(newID, newDefinition.getId());\r\n+        assertNotNull(newDefinition);\r\n     }\r\n \r\n     @Test\r\n     public void testGetUserTasks() {\r\n         List<String> tasks = workflowService.getDefinedTasks(USER_TYPE);\r\n         assertNotNull(tasks);\r\n-        assertTrue(tasks.size() > 0);\r\n+        assertFalse(tasks.isEmpty());\r\n     }\r\n \r\n     @Test\r\n     public void testGetRoleTasks() {\r\n         List<String> tasks = workflowService.getDefinedTasks(ROLE_TYPE);\r\n         assertNotNull(tasks);\r\n-        assertTrue(tasks.size() > 0);\r\n+        assertFalse(tasks.isEmpty());\r\n     }\r\n-\r\n }\n\\ No newline at end of file"}]}