{"sha":"945be8772fef234bd28c32896c2a2a5f47c4a4de","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk0NWJlODc3MmZlZjIzNGJkMjhjMzI4OTZjMmEyYTVmNDdjNGE0ZGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-26T10:52:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-26T10:52:13Z"},"message":"Consolidating getBeanFactory().getBean(PropagationReporter.class)","tree":{"sha":"3d893c6e64b55b672109ba3ebdca7357a34e14be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3d893c6e64b55b672109ba3ebdca7357a34e14be"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/945be8772fef234bd28c32896c2a2a5f47c4a4de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/945be8772fef234bd28c32896c2a2a5f47c4a4de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/945be8772fef234bd28c32896c2a2a5f47c4a4de","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/945be8772fef234bd28c32896c2a2a5f47c4a4de/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8efa3701ebb65f328d64b3fb600532b428c8d238","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8efa3701ebb65f328d64b3fb600532b428c8d238","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8efa3701ebb65f328d64b3fb600532b428c8d238"}],"stats":{"total":282,"additions":78,"deletions":204},"files":[{"sha":"6cc22fd41e060435346c169c49d6ee9616ace79e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -48,7 +48,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -103,9 +102,7 @@ public ProvisioningResult<RealmTO> create(final String parentPath, final RealmTO\n             propByRes.add(ResourceOperation.CREATE, resource);\n         }\n         List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, false);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getRealmTO(realm));\n@@ -127,9 +124,7 @@ public ProvisioningResult<RealmTO> update(final RealmTO realmTO) {\n         realm = realmDAO.save(realm);\n \n         List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, false);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getRealmTO(realm));\n@@ -172,9 +167,7 @@ public ProvisioningResult<RealmTO> delete(final String fullPath) {\n             propByRes.add(ResourceOperation.DELETE, resource);\n         }\n         List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, false);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getRealmTO(realm));"},{"sha":"cd34ca009124047d39ce93b237cccfa25bf68d67","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskExecutor.java","status":"modified","additions":2,"deletions":22,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -41,17 +41,6 @@ public interface PropagationTaskExecutor {\n      */\n     String MANDATORY_NULL_OR_EMPTY_ATTR_NAME = \"__MANDATORY_NULL_OR_EMPTY__\";\n \n-    /**\n-     * Creates new instances of {@link PropagationTaskCallable} for usage with\n-     * {@link java.util.concurrent.CompletionService}.\n-     *\n-     * @param task to be executed\n-     * @param reporter to report propagation execution status\n-     * @return new {@link PropagationTaskCallable} instance for usage with\n-     * {@link java.util.concurrent.CompletionService}\n-     */\n-    PropagationTaskCallable newPropagationTaskCallable(PropagationTask task, PropagationReporter reporter);\n-\n     /**\n      * Execute the given PropagationTask and returns the generated {@link TaskExec}.\n      *\n@@ -60,15 +49,6 @@ public interface PropagationTaskExecutor {\n      */\n     TaskExec execute(PropagationTask task);\n \n-    /**\n-     * Execute the given PropagationTask, invoke the given handler and returns the generated TaskExec.\n-     *\n-     * @param task to be executed\n-     * @param reporter to report propagation execution status\n-     * @return the generated TaskExec\n-     */\n-    TaskExec execute(PropagationTask task, PropagationReporter reporter);\n-\n     /**\n      * Execute a collection of PropagationTask objects.\n      * The process is interrupted as soon as the result of the communication with a primary resource is in error.\n@@ -83,8 +63,8 @@ public interface PropagationTaskExecutor {\n      * in error.\n      *\n      * @param tasks to be execute, in given order\n-     * @param reporter to report propagation execution status\n      * @param nullPriorityAsync asynchronously executes tasks related to resources with no priority\n+     * @return reporter to report propagation execution status\n      */\n-    void execute(Collection<PropagationTask> tasks, PropagationReporter reporter, boolean nullPriorityAsync);\n+    PropagationReporter execute(Collection<PropagationTask> tasks, boolean nullPriorityAsync);\n }"},{"sha":"df550e84c0a8a83c50c3e33c0fd9d7f6849edb42","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":5,"deletions":16,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -79,9 +78,7 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 anyObjectTO.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses());\n     }\n@@ -107,9 +104,7 @@ public Pair<String, List<PropagationStatus>> update(\n                 updated.getPropByRes(),\n                 anyObjectPatch.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses());\n     }\n@@ -128,9 +123,7 @@ public List<PropagationStatus> delete(\n                 key,\n                 null,\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         awfAdapter.delete(key);\n \n@@ -162,9 +155,7 @@ public List<PropagationStatus> provision(\n                 propByRes,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }\n@@ -181,9 +172,7 @@ public List<PropagationStatus> deprovision(\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(key), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }"},{"sha":"f0f8a8cd95053105118c456259ac24fde62262de","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":6,"deletions":19,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -43,7 +43,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n@@ -85,9 +84,7 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 groupTO.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses());\n     }\n@@ -113,9 +110,7 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 groupTO.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(created.getResult(), null);\n     }\n@@ -139,9 +134,7 @@ public Pair<String, List<PropagationStatus>> update(\n                 updated.getPropByRes(),\n                 groupPatch.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses());\n     }\n@@ -185,9 +178,7 @@ public List<PropagationStatus> delete(\n                 null,\n                 null));\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         gwfAdapter.delete(key);\n \n@@ -215,9 +206,7 @@ public List<PropagationStatus> provision(\n                 propByRes,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }\n@@ -234,9 +223,7 @@ public List<PropagationStatus> deprovision(\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(groupDAO.authFind(key).getResourceKeys(), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }"},{"sha":"694610b9c3ccc51fdbe6085d82b0b61db740d44d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":9,"deletions":26,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n@@ -112,9 +111,7 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 userTO.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses());\n     }\n@@ -124,9 +121,7 @@ public Pair<String, List<PropagationStatus>> update(final UserPatch userPatch, f\n         WorkflowResult<Pair<UserPatch, Boolean>> updated = uwfAdapter.update(userPatch);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(updated.getResult().getKey().getKey(), propagationReporter.getStatuses());\n     }\n@@ -184,9 +179,7 @@ public Pair<String, List<PropagationStatus>> update(\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                 updated, updated.getResult().getKey().getPassword() != null, excludedResources);\n-        PropagationReporter propagationReporter = ApplicationContextProvider.getBeanFactory().\n-                getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return new ImmutablePair<>(updated.getResult().getKey().getKey(), propagationReporter.getStatuses());\n     }\n@@ -213,9 +206,7 @@ public List<PropagationStatus> delete(\n                 key,\n                 propByRes,\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         try {\n             uwfAdapter.delete(key);\n@@ -283,11 +274,9 @@ protected List<PropagationStatus> propagateStatus(\n                 propByRes,\n                 null,\n                 null);\n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return propReporter.getStatuses();\n+        return propagationReporter.getStatuses();\n     }\n \n     @Override\n@@ -341,9 +330,7 @@ public StringPatchItem transform(final String input) {\n                 ImmutablePair.of(userPatch, (Boolean) null), propByRes, \"update\");\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(wfResult, changePwd, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }\n@@ -360,9 +347,7 @@ public List<PropagationStatus> deprovision(\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(userDAO.findAllResourceNames(key), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();\n     }\n@@ -378,8 +363,6 @@ public void confirmPasswordReset(final String key, final String token, final Str\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n \n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propReporter, false);\n+        taskExecutor.execute(tasks, false);\n     }\n }"},{"sha":"54c53c2c35d84368156bac2e1260422f676ae63c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -349,8 +349,7 @@ protected Uid delete(\n         return result;\n     }\n \n-    @Override\n-    public TaskExec execute(final PropagationTask task, final PropagationReporter reporter) {\n+    protected TaskExec execute(final PropagationTask task, final PropagationReporter reporter) {\n         List<PropagationActions> actions = getPropagationActions(task.getResource());\n \n         Date start = new Date();\n@@ -520,24 +519,27 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n \n     @Override\n     public void execute(final Collection<PropagationTask> tasks) {\n-        execute(tasks, null, false);\n+        execute(tasks, false);\n     }\n \n     protected abstract void doExecute(\n             Collection<PropagationTask> tasks, PropagationReporter reporter, boolean nullPriorityAsync);\n \n     @Override\n-    public void execute(\n+    public PropagationReporter execute(\n             final Collection<PropagationTask> tasks,\n-            final PropagationReporter reporter,\n             final boolean nullPriorityAsync) {\n \n+        PropagationReporter reporter =\n+                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         try {\n             doExecute(tasks, reporter, nullPriorityAsync);\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation priority resource\", e);\n             reporter.onPriorityResourceFailure(e.getResourceName(), tasks);\n         }\n+\n+        return reporter;\n     }\n \n     /**"},{"sha":"5fc32e107d7237cb7e2eeb5311cc12fed4860ba8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -57,8 +57,16 @@ public class PriorityPropagationTaskExecutor extends AbstractPropagationTaskExec\n     @Resource(name = \"propagationTaskExecutorAsyncExecutor\")\n     protected ThreadPoolTaskExecutor executor;\n \n-    @Override\n-    public PropagationTaskCallable newPropagationTaskCallable(\n+    /**\n+     * Creates new instances of {@link PropagationTaskCallable} for usage with\n+     * {@link java.util.concurrent.CompletionService}.\n+     *\n+     * @param task to be executed\n+     * @param reporter to report propagation execution status\n+     * @return new {@link PropagationTaskCallable} instance for usage with\n+     * {@link java.util.concurrent.CompletionService}\n+     */\n+    protected PropagationTaskCallable newPropagationTaskCallable(\n             final PropagationTask task, final PropagationReporter reporter) {\n \n         PropagationTaskCallable callable = (PropagationTaskCallable) ApplicationContextProvider.getBeanFactory()."},{"sha":"33adeecafeaef2d01e89ff2de6cf2b3af10b5383","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationTaskCallableImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationTaskCallableImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationTaskCallableImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationTaskCallableImpl.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -46,7 +46,7 @@ public class PropagationTaskCallableImpl implements PropagationTaskCallable {\n \n     private final Collection<? extends GrantedAuthority> authorities;\n \n-    private PropagationTaskExecutor executor;\n+    private AbstractPropagationTaskExecutor executor;\n \n     private PropagationTask task;\n \n@@ -61,7 +61,9 @@ public PropagationTaskCallableImpl() {\n \n     @Override\n     public void setExecutor(final PropagationTaskExecutor executor) {\n-        this.executor = executor;\n+        if (executor instanceof AbstractPropagationTaskExecutor) {\n+            this.executor = (AbstractPropagationTaskExecutor) executor;\n+        }\n     }\n \n     @Override"},{"sha":"d2d9dc52346a8a9532b51a2cf1df965b27d41994","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPullResultHandlerImpl.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -54,7 +54,6 @@\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n@@ -222,9 +221,7 @@ private void create(\n                 propByRes.add(ResourceOperation.CREATE, resource);\n             }\n             List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-            PropagationReporter propagationReporter =\n-                    ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-            taskExecutor.execute(tasks, propagationReporter, false);\n+            PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n             RealmTO actual = binder.getRealmTO(realm);\n \n@@ -286,9 +283,7 @@ private ProvisioningReport update(final SyncDelta delta, final Realm realm, fina\n                 Realm updated = realmDAO.save(realm);\n \n                 List<PropagationTask> tasks = propagationManager.createTasks(updated, propByRes, null);\n-                PropagationReporter propagationReporter =\n-                        ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-                taskExecutor.execute(tasks, propagationReporter, false);\n+                PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n                 output = updated;\n                 resultStatus = Result.SUCCESS;\n@@ -521,9 +516,7 @@ private ProvisioningReport delete(final SyncDelta delta, final Realm realm)\n                         propByRes.add(ResourceOperation.DELETE, resource);\n                     }\n                     List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-                    PropagationReporter propagationReporter =\n-                            ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-                    taskExecutor.execute(tasks, propagationReporter, false);\n+                    PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n                     realmDAO.delete(realm);\n "},{"sha":"2425ac4063d8856c3a1608095bcf384479753c09","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -34,13 +34,11 @@\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ResultsHandler;\n@@ -83,9 +81,7 @@ private Realm update(final RealmTO realmTO) {\n         realm = realmDAO.save(realm);\n \n         List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, false);\n+        taskExecutor.execute(tasks, false);\n \n         return realm;\n     }"},{"sha":"426ab818a7f6770c940fca4d4a50e019cc1c680d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectCreateProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -57,9 +56,7 @@ public void process(final Exchange exchange) {\n                 created.getPropByRes(),\n                 any.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n     }"},{"sha":"e87a6abfcb87954c5e293d7221c21a0c2f49e3b3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectDeleteProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -23,7 +23,6 @@\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n@@ -56,9 +55,7 @@ public void process(final Exchange exchange) throws Exception {\n                 key,\n                 null,\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n     }"},{"sha":"c16708d50a593c6bbc8e686d7b3b68486b89caf3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectDeprovisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -61,9 +60,7 @@ public void process(final Exchange exchange) {\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(key), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"c548a27bca164606f8c59805d4a68855adf24d74","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectProvisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectProvisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectProvisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectProvisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n@@ -59,9 +58,7 @@ public void process(final Exchange exchange) {\n                 propByRes,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"b42e34e96bb2bcb2013e74ec2ccf829db1f8d545","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectUpdateProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n@@ -63,9 +62,7 @@ public void process(final Exchange exchange) {\n                 updated.getPropByRes(),\n                 anyObjectPatch.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n     }"},{"sha":"256bccd575986fcd00f53d87937e8369135e18ca","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateInPullProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateInPullProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -29,7 +29,6 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -67,9 +66,7 @@ public void process(final Exchange exchange) {\n                 created.getPropByRes(),\n                 groupTO.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), null));\n     }"},{"sha":"c70074305ba2b7566ae9c3ca54ee8cbe985fc954","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -57,9 +56,7 @@ public void process(final Exchange exchange) {\n                 created.getPropByRes(),\n                 any.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n     }"},{"sha":"32c9823eea98b4f9d3f98c45d20c87c0d1f137d3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupDeleteProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeleteProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n@@ -88,9 +87,7 @@ public void process(final Exchange exchange) throws Exception {\n                 null,\n                 null));\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n     }"},{"sha":"fc886b76e13dd104634dad9b2daf98ab365ef759","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupDeprovisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupDeprovisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -61,9 +60,7 @@ public void process(final Exchange exchange) {\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(groupDAO.authFind(key).getResourceKeys(), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"d2398dd6c6c3ec416e12b4107c6c3f852de80ce4","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupProvisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupProvisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupProvisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupProvisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n@@ -59,9 +58,7 @@ public void process(final Exchange exchange) {\n                 propByRes,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"ebc84a54e152f80d05dd3d2f8447f2c4e0d4900a","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupUpdateProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n@@ -63,9 +62,7 @@ public void process(final Exchange exchange) {\n                 updated.getPropByRes(),\n                 groupPatch.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n     }"},{"sha":"b86ee5f574d4d707e1b87e327bd83be9bafd0581","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserConfirmPwdResetProcessor.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -23,11 +23,9 @@\n import org.apache.camel.Processor;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n@@ -44,13 +42,11 @@ public class UserConfirmPwdResetProcessor implements Processor {\n     @Override\n     public void process(final Exchange exchange) {\n         @SuppressWarnings(\"unchecked\")\n-        WorkflowResult<Pair<UserPatch, Boolean>> updated = \n-            (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n+        WorkflowResult<Pair<UserPatch, Boolean>> updated =\n+                (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n \n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propReporter, false);\n+        taskExecutor.execute(tasks, false);\n     }\n }"},{"sha":"972b06e259c730330de280ffc2d3f0c93287e605","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserCreateProcessor.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserCreateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -47,8 +46,8 @@ public class UserCreateProcessor implements Processor {\n     @Override\n     public void process(final Exchange exchange) {\n         if ((exchange.getIn().getBody() instanceof WorkflowResult)) {\n-            WorkflowResult<Pair<String, Boolean>> created = \n-                (WorkflowResult<Pair<String, Boolean>>) exchange.getIn().getBody();\n+            WorkflowResult<Pair<String, Boolean>> created =\n+                    (WorkflowResult<Pair<String, Boolean>>) exchange.getIn().getBody();\n             UserTO actual = exchange.getProperty(\"actual\", UserTO.class);\n             Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n             Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n@@ -60,9 +59,7 @@ public void process(final Exchange exchange) {\n                     created.getPropByRes(),\n                     actual.getVirAttrs(),\n                     excludedResources);\n-            PropagationReporter propagationReporter =\n-                    ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-            taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+            PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n             exchange.getOut().setBody(\n                     new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses()));"},{"sha":"787c60f7b3b1203b9fc78bad721206a258035aa6","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserDeleteProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -67,9 +66,7 @@ public void process(final Exchange exchange) throws Exception {\n                 propByRes,\n                 excludedResources);\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n     }"},{"sha":"e23693f5b55cde81a2734dc2265a2270fdef7a02","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserDeprovisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -61,9 +60,7 @@ public void process(final Exchange exchange) {\n                 key,\n                 propByRes,\n                 CollectionUtils.removeAll(userDAO.findAllResourceNames(key), resources));\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"1f4c4a15dba354e2f9b0b3411a333291168f21e3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserProvisionProcessor.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n@@ -86,9 +85,7 @@ public StringPatchItem transform(final String resource) {\n                 ImmutablePair.of(userPatch, (Boolean) null), propByRes, \"update\");\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(wfResult, changePwd, null);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }"},{"sha":"f2ad3d8a4d517fae105a80721d76144ccc68049d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserStatusPropagationProcessor.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n@@ -66,11 +65,8 @@ public void process(final Exchange exchange) {\n                 propByRes,\n                 null,\n                 null);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        PropagationReporter propReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propReporter, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propReporter.getStatuses()));\n+        exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n     }\n }"},{"sha":"1fb917df950352b3bdd6ae6b40447a1763e3d1a6","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateInPullProcessor.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateInPullProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -46,16 +45,14 @@ public class UserUpdateInPullProcessor implements Processor {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void process(final Exchange exchange) {\n-        WorkflowResult<Pair<UserPatch, Boolean>> updated = \n-            (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n+        WorkflowResult<Pair<UserPatch, Boolean>> updated =\n+                (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n         Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n         Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                 updated, updated.getResult().getKey().getPassword() != null, excludedResources);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(\n                 updated.getResult().getKey().getKey(), propagationReporter.getStatuses()));"},{"sha":"219f6807cd8e0e443d399cd343a057b2a42a2883","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateProcessor.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/945be8772fef234bd28c32896c2a2a5f47c4a4de/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java?ref=945be8772fef234bd28c32896c2a2a5f47c4a4de","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n@@ -49,14 +48,12 @@ public class UserUpdateProcessor implements Processor {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void process(final Exchange exchange) {\n-        WorkflowResult<Pair<UserPatch, Boolean>> updated = \n-            (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n+        WorkflowResult<Pair<UserPatch, Boolean>> updated =\n+                (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n         Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n-        taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         exchange.getOut().setBody(new ImmutablePair<>(\n                 updated.getResult().getKey().getKey(), propagationReporter.getStatuses()));"}]}