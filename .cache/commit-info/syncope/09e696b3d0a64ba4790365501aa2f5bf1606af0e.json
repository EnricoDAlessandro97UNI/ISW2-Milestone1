{"sha":"09e696b3d0a64ba4790365501aa2f5bf1606af0e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA5ZTY5NmIzZDBhNjRiYTQ3OTAzNjU1MDFhYTJmNWJmMTYwNmFmMGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-08T09:01:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-08T09:01:44Z"},"message":"[SYNCOPE-766] Various alignment and fixes","tree":{"sha":"f9dde1b60d7e7b0ff445881a44015f17c7699b4b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f9dde1b60d7e7b0ff445881a44015f17c7699b4b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/09e696b3d0a64ba4790365501aa2f5bf1606af0e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09e696b3d0a64ba4790365501aa2f5bf1606af0e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/09e696b3d0a64ba4790365501aa2f5bf1606af0e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09e696b3d0a64ba4790365501aa2f5bf1606af0e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d5ec3c71b60eee2fe6b88106a23f2dbe3dc631e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5ec3c71b60eee2fe6b88106a23f2dbe3dc631e4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5ec3c71b60eee2fe6b88106a23f2dbe3dc631e4"}],"stats":{"total":50,"additions":20,"deletions":30},"files":[{"sha":"199c02d8f59439f0c3098496f187a4634cba0098","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java","status":"modified","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -21,15 +21,13 @@\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n import java.util.Set;\n import org.apache.commons.collections4.Closure;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -53,7 +51,6 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n-import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -282,30 +279,21 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n                     // 1. build connObjectKeyValue\n                     final String connObjectKeyValue = mappingUtils.getConnObjectKeyValue(any, provision);\n \n-                    // 2. determine attributes to query\n-                    Set<MappingItem> linkinMappingItems = new HashSet<>();\n-                    for (VirSchema virSchema : virSchemaDAO.findByProvision(provision)) {\n-                        linkinMappingItems.add(virSchema.asLinkingMappingItem());\n-                    }\n-                    Iterator<MappingItem> mapItems = IteratorUtils.chainedIterator(\n-                            provision.getMapping().getItems().iterator(),\n-                            linkinMappingItems.iterator());\n-\n-                    // 3. read from the underlying connector\n+                    // 2. read from the underlying connector\n                     Connector connector = connFactory.getConnector(resource);\n                     ConnectorObject connectorObject = connector.getObject(\n                             provision.getObjectClass(),\n                             new Uid(connObjectKeyValue),\n-                            MappingUtils.buildOperationOptions(mapItems));\n+                            MappingUtils.buildOperationOptions(provision.getMapping().getItems().iterator()));\n \n                     if (connectorObject == null) {\n-                        // 4. not found on resource?\n+                        // 3. not found on resource?\n                         LOG.error(\"Object {} with class {} not found on resource {}\",\n                                 connObjectKeyValue, provision.getObjectClass(), resource);\n \n                         missing.add(new Missing(resource.getKey(), connObjectKeyValue));\n                     } else {\n-                        // 5. found but misaligned?\n+                        // 4. found but misaligned?\n                         Pair<String, Set<Attribute>> preparedAttrs =\n                                 mappingUtils.prepareAttrs(any, null, false, null, provision);\n                         preparedAttrs.getRight().add(AttributeBuilder.build("},{"sha":"b3102afc310b5f9a2a8b77d099fb9a3cbcec4346","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/utils/MappingUtils.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -644,11 +644,11 @@ public List<PlainAttrValue> getIntValues(final Provision provision,\n \n             case GroupOwnerSchema:\n                 Mapping uMapping = provision.getAnyType().equals(anyTypeDAO.findUser())\n-                        ? null\n-                        : provision.getMapping();\n+                        ? provision.getMapping()\n+                        : null;\n                 Mapping gMapping = provision.getAnyType().equals(anyTypeDAO.findGroup())\n-                        ? null\n-                        : provision.getMapping();\n+                        ? provision.getMapping()\n+                        : null;\n \n                 for (Any<?> any : anys) {\n                     if (any instanceof Group) {"},{"sha":"03f9f96e862951b8305e7b4ab995683e8ac1b641","filename":"fit/build-tools/src/main/resources/testdb.sql","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -47,6 +47,6 @@ INSERT INTO testsync VALUES (965, 'issuesyncope230', 'Surname', 'syncope230@sync\n \n DROP TABLE testPRINTER IF EXISTS;\n CREATE TABLE testPRINTER (\n-id NUMBER(10) PRIMARY KEY,\n+id VARCHAR(10) PRIMARY KEY,\n location VARCHAR(80),\n-lastModification TIMESTAMP);\n\\ No newline at end of file\n+lastModification TIMESTAMP);"},{"sha":"bfc936dc2d8778157ec2d6f6f5905b17f78fd2dd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -67,8 +67,10 @@ public void create() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getPlainAttrMap().get(\"location\"));\n-        assertEquals(anyObjectTO.getPlainAttrMap().get(\"location\"), connObjectTO.getPlainAttrMap().get(\"location\"));\n+        assertNotNull(connObjectTO.getPlainAttrMap().get(\"LOCATION\"));\n+        assertEquals(\n+                anyObjectTO.getPlainAttrMap().get(\"location\").getValues(),\n+                connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues());\n     }\n \n     @Test"},{"sha":"3498b8699cd26c54d57aa15513af3f03db99ae74","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SyncTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -416,7 +416,7 @@ public boolean evaluate(final MappingItemTO object) {\n                     readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n             assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n-            assertTrue(connObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n+            assertTrue(connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n \n             // 3. unlink any existing printer and delete from Syncope (printer is now only on external resource)"},{"sha":"18ba61d90fcfa5eefd55a5ffeeb1a54cd6317f0b","filename":"fit/core-reference/src/test/resources/scriptedsql/SchemaScript.groovy","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSchemaScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSchemaScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSchemaScript.groovy?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -37,12 +37,12 @@ import org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder;\n \n log.info(\"Entering \" + action + \" Script\");\n \n-idAIB = new AttributeInfoBuilder(\"id\", String.class);\n+idAIB = new AttributeInfoBuilder(\"ID\", String.class);\n idAIB.setRequired(true);\n \n orgAttrsInfo = new HashSet<AttributeInfo>();\n orgAttrsInfo.add(idAIB.build());\n-orgAttrsInfo.add(AttributeInfoBuilder.build(\"location\", String.class));\n+orgAttrsInfo.add(AttributeInfoBuilder.build(\"LOCATION\", String.class));\n // Create the organization Object class\n ObjectClassInfo ociOrg = new ObjectClassInfoBuilder().setType(\"__PRINTER__\").addAllAttributeInfo(orgAttrsInfo).build();\n builder.defineObjectClass(ociOrg);"},{"sha":"3e655819ea74ce26ef33ec31043037bf590fe153","filename":"fit/core-reference/src/test/resources/scriptedsql/SearchScript.groovy","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSearchScript.groovy?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -84,7 +84,7 @@ if (query != null)  {\n switch ( objectClass ) {\n case \"__PRINTER__\":\n   sql.eachRow(\"SELECT * FROM TESTPRINTER \" + where, \n-    {result.add([__UID__:it.id, __NAME__:it.id, location:it.location])} );\n+    {result.add([__UID__:it.id, __NAME__:it.id, ID:it.id, LOCATION:it.location])} );\n   break\n \n default:"},{"sha":"69f8d7944c34f5b40757dd242da2b80d8c91b2c8","filename":"fit/core-reference/src/test/resources/scriptedsql/SyncScript.groovy","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09e696b3d0a64ba4790365501aa2f5bf1606af0e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FSyncScript.groovy?ref=09e696b3d0a64ba4790365501aa2f5bf1606af0e","patch":"@@ -81,8 +81,8 @@ if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n             attributes:[\n               __UID__:it.id.toString(),\n               __NAME__:it.id.toString(),\n-              id:it.id.toString(),\n-              location:it.location\n+              ID:it.id.toString(),\n+              LOCATION:it.location\n             ]\n           ]);\n       }"}]}