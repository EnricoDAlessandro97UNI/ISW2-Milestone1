{"sha":"5495e809dd130ca9f69afe78758a61ee5a9e751e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU0OTVlODA5ZGQxMzBjYTlmNjlhZmU3ODc1OGE2MWVlNWE5ZTc1MWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-13T13:40:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-13T13:40:16Z"},"message":"[SYNCOPE-667] Merge from 1_2_X","tree":{"sha":"abf282cf5bf2e2ed4fa6841fe4240785931d590c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/abf282cf5bf2e2ed4fa6841fe4240785931d590c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5495e809dd130ca9f69afe78758a61ee5a9e751e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5495e809dd130ca9f69afe78758a61ee5a9e751e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5495e809dd130ca9f69afe78758a61ee5a9e751e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5495e809dd130ca9f69afe78758a61ee5a9e751e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7f2c8a48796238b8a2c16a522d4b18212daf6e4e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7f2c8a48796238b8a2c16a522d4b18212daf6e4e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7f2c8a48796238b8a2c16a522d4b18212daf6e4e"},{"sha":"a407911f5f622cf55c9314e505221a8bc4dc01d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a407911f5f622cf55c9314e505221a8bc4dc01d8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a407911f5f622cf55c9314e505221a8bc4dc01d8"}],"stats":{"total":31,"additions":15,"deletions":16},"files":[{"sha":"630685016a7d17e0d5f45fefb9bddb27f88f7773","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AuthenticationITCase.java","status":"modified","additions":15,"deletions":16,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5495e809dd130ca9f69afe78758a61ee5a9e751e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5495e809dd130ca9f69afe78758a61ee5a9e751e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java?ref=5495e809dd130ca9f69afe78758a61ee5a9e751e","patch":"@@ -25,11 +25,12 @@\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -201,30 +202,28 @@ public void testUserSearch() {\n \n         PagedResult<UserTO> matchedUsers = userService2.search(\n                 SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"loginDate\").query()).build());\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"key\").query()).build());\n         assertNotNull(matchedUsers);\n         assertFalse(matchedUsers.getResult().isEmpty());\n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n-\n-            @Override\n-            public boolean evaluate(final UserTO user) {\n-                return user.getKey() == 1;\n-            }\n-        }));\n+        Set<Long> matchedUserKeys = CollectionUtils.collect(matchedUsers.getResult(),\n+                new Transformer<UserTO, Long>() {\n+\n+                    @Override\n+                    public Long transform(final UserTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new HashSet<Long>());\n+        assertTrue(matchedUserKeys.contains(1L));\n+        assertTrue(matchedUserKeys.contains(2L));\n+        assertTrue(matchedUserKeys.contains(5L));\n \n         UserService userService3 = clientFactory.create(\"verdi\", \"password\").getService(UserService.class);\n \n         matchedUsers = userService3.search(\n                 SyncopeClient.getSubjectSearchQueryBuilder().realm(\"/even/two\").\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"loginDate\").query()).build());\n         assertNotNull(matchedUsers);\n-        assertFalse(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n-\n-            @Override\n-            public boolean evaluate(final UserTO user) {\n-                return user.getKey() == 1;\n-            }\n-        }));\n+        assertTrue(matchedUsers.getResult().isEmpty());\n     }\n \n     @Test"}]}