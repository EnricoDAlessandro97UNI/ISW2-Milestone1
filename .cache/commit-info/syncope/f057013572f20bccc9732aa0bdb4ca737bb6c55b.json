{"sha":"f057013572f20bccc9732aa0bdb4ca737bb6c55b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYwNTcwMTM1NzJmMjBiY2NjOTczMmFhMGJkYjRjYTczN2JiNmM1NWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-14T07:37:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-14T07:40:05Z"},"message":"[SYNCOPE-1542] Always lookup groups from root realm","tree":{"sha":"4a6786b46ce04c71bb29f95fa92d78e068987715","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4a6786b46ce04c71bb29f95fa92d78e068987715"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f057013572f20bccc9732aa0bdb4ca737bb6c55b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f057013572f20bccc9732aa0bdb4ca737bb6c55b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f057013572f20bccc9732aa0bdb4ca737bb6c55b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f057013572f20bccc9732aa0bdb4ca737bb6c55b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0c1891200ef2c07597fee7986e160e0f5daceee0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c1891200ef2c07597fee7986e160e0f5daceee0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0c1891200ef2c07597fee7986e160e0f5daceee0"}],"stats":{"total":29,"additions":8,"deletions":21},"files":[{"sha":"799e8e04b34b068fd391d1c65e6681c7026b011c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=f057013572f20bccc9732aa0bdb4ca737bb6c55b","patch":"@@ -319,7 +319,7 @@ protected AbstractSearchPanel getSearchPanel(final String id) {\n                 clause.setProperty(\"username\");\n \n                 panel = new UserSearchPanel.Builder(\n-                        new ListModel<>(clauses)).realm(realmTO.getFullPath()).required(true).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(true).enableSearch().build(id);\n                 break;\n \n             case GROUP:\n@@ -328,7 +328,7 @@ protected AbstractSearchPanel getSearchPanel(final String id) {\n                 clause.setProperty(\"name\");\n \n                 panel = new GroupSearchPanel.Builder(\n-                        new ListModel<>(clauses)).realm(realmTO.getFullPath()).required(true).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(true).enableSearch().build(id);\n                 break;\n \n             case ANY_OBJECT:\n@@ -337,7 +337,7 @@ protected AbstractSearchPanel getSearchPanel(final String id) {\n                 clause.setProperty(\"name\");\n \n                 panel = new AnyObjectSearchPanel.Builder(anyTypeTO.getKey(),\n-                        new ListModel<>(clauses)).realm(realmTO.getFullPath()).required(true).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(true).enableSearch().build(id);\n                 break;\n \n             default:"},{"sha":"d1c6c504e0b523e3bdfbdf475a13fec58bbb6e4b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=f057013572f20bccc9732aa0bdb4ca737bb6c55b","patch":"@@ -64,8 +64,6 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected WebMarkupContainer searchFormContainer;\n \n-    protected final String realm;\n-\n     protected final AnyTypeKind typeKind;\n \n     protected final String type;\n@@ -82,8 +80,6 @@ public abstract class AbstractSearchPanel extends Panel {\n \n         protected final IModel<List<SearchClause>> model;\n \n-        protected String realm = SyncopeConstants.ROOT_REALM;\n-\n         protected boolean required = true;\n \n         protected boolean enableSearch = false;\n@@ -100,11 +96,6 @@ public Builder(final IModel<List<SearchClause>> model) {\n             this.model = model;\n         }\n \n-        public Builder<T> realm(final String realm) {\n-            this.realm = realm;\n-            return this;\n-        }\n-\n         public Builder<T> enableSearch(final IEventSink resultContainer) {\n             this.resultContainer = resultContainer;\n             return enableSearch();\n@@ -143,7 +134,6 @@ protected AbstractSearchPanel(\n                 : Pair.of(groupNames, 0);\n \n         this.model = builder.model;\n-        this.realm = builder.realm;\n         this.typeKind = kind;\n         this.type = type;\n         this.required = builder.required;\n@@ -157,7 +147,6 @@ protected AbstractSearchPanel(\n \n         SearchClausePanel searchClausePanel = new SearchClausePanel(\"panel\", \"panel\",\n                 Model.of(new SearchClause()),\n-                realm,\n                 required,\n                 types,\n                 builder.customizer,"},{"sha":"530191ceeef319249bb3d20c1e0338d38ebe6dd8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=f057013572f20bccc9732aa0bdb4ca737bb6c55b","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -84,7 +85,7 @@ protected List<SearchClause.Type> load() {\n             @Override\n             protected List<String> load() {\n                 return groupRestClient.search(\n-                        realm,\n+                        SyncopeConstants.ROOT_REALM,\n                         null,\n                         1,\n                         Constants.MAX_GROUP_LIST_SIZE,"},{"sha":"f1c45420a2b66c422ddf8656d8a3f8f29dc98478","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f057013572f20bccc9732aa0bdb4ca737bb6c55b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=f057013572f20bccc9732aa0bdb4ca737bb6c55b","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n@@ -124,8 +125,6 @@ default void setFieldAccess(\n         }\n     }\n \n-    private final String realm;\n-\n     private final boolean required;\n \n     private final IModel<List<SearchClause.Type>> types;\n@@ -164,7 +163,6 @@ public SearchClausePanel(\n             final String id,\n             final String name,\n             final Model<SearchClause> clause,\n-            final String realm,\n             final boolean required,\n             final IModel<List<SearchClause.Type>> types,\n             final Customizer customizer,\n@@ -179,7 +177,6 @@ public SearchClausePanel(\n \n         this.clause = clause == null ? new Model<>(null) : clause;\n \n-        this.realm = realm;\n         this.required = required;\n         this.types = types;\n         this.customizer = customizer;\n@@ -450,7 +447,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n                             inputValue = inputValue + \"*\";\n                         }\n                         property.setChoices(groupRestClient.search(\n-                                realm,\n+                                SyncopeConstants.ROOT_REALM,\n                                 SyncopeClient.getGroupSearchConditionBuilder().\n                                         is(\"name\").equalToIgnoreCase(inputValue).\n                                         query(),\n@@ -886,7 +883,7 @@ public SearchClause.Comparator getObject(\n     @Override\n     public FieldPanel<SearchClause> clone() {\n         SearchClausePanel panel = new SearchClausePanel(\n-                getId(), name, null, realm, required, types, customizer, anames, dnames, groupInfo,\n+                getId(), name, null, required, types, customizer, anames, dnames, groupInfo,\n                 roleNames, privilegeNames, resourceNames);\n         panel.setReadOnly(this.isReadOnly());\n         panel.setRequired(this.isRequired());"}]}