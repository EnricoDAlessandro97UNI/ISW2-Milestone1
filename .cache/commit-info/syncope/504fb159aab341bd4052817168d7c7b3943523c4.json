{"sha":"504fb159aab341bd4052817168d7c7b3943523c4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUwNGZiMTU5YWFiMzQxYmQ0MDUyODE3MTY4ZDdjN2IzOTQzNTIzYzQ=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-05T08:16:13Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-05T08:16:13Z"},"message":"[SYNCOPE-545] added management of null date, hour, minutes in date-time field panel\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1622636 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"579be943475e3273b701f2230c3ed8212b2bb76b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/579be943475e3273b701f2230c3ed8212b2bb76b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/504fb159aab341bd4052817168d7c7b3943523c4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/504fb159aab341bd4052817168d7c7b3943523c4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/504fb159aab341bd4052817168d7c7b3943523c4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/504fb159aab341bd4052817168d7c7b3943523c4/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5f684671e0685e7708c419b447e3899dab9bbc4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5f684671e0685e7708c419b447e3899dab9bbc4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5f684671e0685e7708c419b447e3899dab9bbc4"}],"stats":{"total":40,"additions":19,"deletions":21},"files":[{"sha":"8b61f1817c60fc0aaf0fadbf820fdce31f3c3784","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":19,"deletions":21,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/504fb159aab341bd4052817168d7c7b3943523c4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/504fb159aab341bd4052817168d7c7b3943523c4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=504fb159aab341bd4052817168d7c7b3943523c4","patch":"@@ -53,12 +53,11 @@ public DateTimeFieldPanel(final String id, final String name, final IModel<Date>\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (((DateTimeField) field).getHours() > 12) {\n-                    cal.set(Calendar.HOUR_OF_DAY, ((DateTimeField) field).getHours());\n-                } else {\n-                    cal.set(Calendar.HOUR, ((DateTimeField) field).getHours());\n+                final Integer hours = ((DateTimeField) field).getHours();\n+                if (hours != null) {\n+                    cal.set(hours > 12 ? Calendar.HOUR_OF_DAY : Calendar.HOUR, hours);\n+                    field.setModelObject(cal.getTime());\n                 }\n-                field.setModelObject(cal.getTime());\n             }\n         });\n \n@@ -68,8 +67,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                cal.set(Calendar.MINUTE, ((DateTimeField) field).getMinutes());\n-                field.setModelObject(cal.getTime());\n+                final Integer minutes = ((DateTimeField) field).getMinutes();\n+                if (minutes != null) {\n+                    cal.set(Calendar.MINUTE, minutes);\n+                    field.setModelObject(cal.getTime());\n+                }\n             }\n         });\n \n@@ -79,15 +81,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                cal.setTime(((DateTimeField) field).getDate());\n-\n-                if (\"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())) {\n-                    cal.set(Calendar.AM_PM, Calendar.PM);\n+                final Date date = ((DateTimeField) field).getDate();\n+                if (date == null) {\n+                    field.setModelObject(null);\n                 } else {\n-                    cal.set(Calendar.AM_PM, Calendar.AM);\n+                    cal.setTime(date);\n+                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                            : Calendar.AM);\n+                    field.setModelObject(cal.getTime());\n                 }\n-\n-                field.setModelObject(cal.getTime());\n             }\n         });\n \n@@ -97,12 +99,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (\"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())) {\n-                    cal.set(Calendar.AM_PM, Calendar.PM);\n-                } else {\n-                    cal.set(Calendar.AM_PM, Calendar.AM);\n-                }\n-\n+                cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                        : Calendar.AM);\n                 field.setModelObject(cal.getTime());\n             }\n         });\n@@ -124,7 +122,7 @@ public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n                 throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n             }\n \n-            dateTimeComponents = new FormComponent[]{dateTimeComponent};\n+            dateTimeComponents = new FormComponent[] { dateTimeComponent };\n         }\n \n         @Override"}]}