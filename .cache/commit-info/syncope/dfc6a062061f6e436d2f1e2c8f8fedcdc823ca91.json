{"sha":"dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmYzZhMDYyMDYxZjZlNDM2ZDJmMWUyYzhmOGZlZGNkYzgyM2NhOTE=","commit":{"author":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2015-10-30T11:48:45Z"},"committer":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2015-10-30T11:48:45Z"},"message":"SYNCOPE-701 removed and refined some logs on wicket resources","tree":{"sha":"11454b35197fb4b80a351f5b0e0bb6807b4afc90","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/11454b35197fb4b80a351f5b0e0bb6807b4afc90"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"c8ebb34791c43956baec6ca376aaf02b9d57b456","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c8ebb34791c43956baec6ca376aaf02b9d57b456","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c8ebb34791c43956baec6ca376aaf02b9d57b456"}],"stats":{"total":101,"additions":17,"deletions":84},"files":[{"sha":"7d014d7851f6d30006585727fbe6c8d77b480a56","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":1,"deletions":13,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -24,7 +24,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Locale;\n-import org.apache.syncope.client.enduser.resources.ErrorResource;\n import org.apache.syncope.client.enduser.resources.LoginResource;\n import org.apache.syncope.client.enduser.resources.LogoutResource;\n import org.apache.syncope.client.enduser.resources.SchemaResource;\n@@ -57,8 +56,6 @@ Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")\n     protected void init() {\n         super.init();\n \n-        LOG.debug(\"init SyncopeEnduserApplication\");\n-\n         // resource to provide login functionality managed by wicket\n         mountResource(\"/api/login\", new ResourceReference(\"login\") {\n \n@@ -123,7 +120,7 @@ public IResource getResource() {\n                 return new SchemaResource();\n             }\n         });\n-        \n+\n         mountResource(\"/api/securityQuestions\", new ResourceReference(\"securityQuestions\") {\n \n             private static final long serialVersionUID = -128426276529456602L;\n@@ -134,15 +131,6 @@ public IResource getResource() {\n             }\n         });\n \n-        mountResource(\"/api/error\", new ResourceReference(\"error\") {\n-\n-            private static final long serialVersionUID = -128426276529456602L;\n-\n-            @Override\n-            public IResource getResource() {\n-                return new ErrorResource();\n-            }\n-        });\n     }\n \n     @Override"},{"sha":"f91a4d634a6d8b6a8b1bfef3c76d3f88ca55cda5","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -20,10 +20,8 @@\n \n import java.io.File;\n import java.text.DateFormat;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Properties;\n@@ -54,9 +52,6 @@ public class SyncopeEnduserSession extends WebSession {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeEnduserSession.class);\n \n-    public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[] {\n-        Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\") });\n-\n     protected static final String ENDUSER_PROPERTIES = \"enduser.properties\";\n \n     private String username;\n@@ -262,7 +257,6 @@ private void loadProperties() {\n             }\n         } catch (Exception e) {\n             LOG.error(\"Error loading {} file\", ENDUSER_PROPERTIES, e);\n-//            throw new WicketRuntimeException(\"Could not read \" + ENDUSER_PROPERTIES, e);\n         }\n \n         this.scheme = properties.getProperty(\"scheme\");"},{"sha":"f27ac8523e3f6cba3fdd4547ea43465821e1167c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/UserTOAdapter.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -29,7 +29,6 @@ public class UserTOAdapter {\n \n     public UserTO fromUserTORequest(final UserTORequest userTORequest, final String oldSelfPassword) {\n \n-        // adapter code, to be moved in a new utility class\n         final UserTO userTO = new UserTO();\n         // set key if in update mode\n         final Long key = userTORequest.getKey();"},{"sha":"bfceeab5e112ef8b835a977b61a94fa03c7029bc","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/ErrorResource.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8ebb34791c43956baec6ca376aaf02b9d57b456/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FErrorResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8ebb34791c43956baec6ca376aaf02b9d57b456/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FErrorResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FErrorResource.java?ref=c8ebb34791c43956baec6ca376aaf02b9d57b456","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.resources;\n-\n-import javax.ws.rs.core.MediaType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Mirror REST resource for obtaining user self operations.\n- *\n- * @see org.apache.syncope.common.rest.api\n- */\n-public class ErrorResource extends AbstractBaseResource {\n-\n-    private static final long serialVersionUID = -9184809392631523912L;\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(ErrorResource.class);\n-\n-    @Override\n-    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n-\n-        ResourceResponse response = new ResourceResponse();\n-        response.disableCaching();\n-        response.setContentType(MediaType.APPLICATION_JSON);\n-\n-        response.setStatusCode(403);\n-\n-        return response;\n-    }\n-}"},{"sha":"8c03e50eb8dc4e3ec4f47dbf40d56c0b69ec5fda","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LoginResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -54,8 +54,8 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             LOG.debug(\"Enduser login, user: {}\", username);\n \n             if (StringUtils.isBlank(username)) {\n-                LOG.error(\"Could not read credentials from request: username is blank!\");\n                 responseMessage = \"Could not read credentials from request: username is blank!\";\n+                LOG.error(responseMessage);\n                 responseStatus = 400;\n             } else {\n                 // authenticate user"},{"sha":"501a32f19fd8079007e05e7018f2c3f7f39dedf2","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -59,6 +59,8 @@ public SchemaResource() {\n     @Override\n     protected AbstractResource.ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n \n+        LOG.debug(\"Search all {} any type kind related schemas\", AnyTypeKind.USER.name());\n+\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         int responseStatus = 200;\n@@ -93,7 +95,7 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n             });\n \n         } catch (Exception e) {\n-            LOG.error(\"Error retrieving \" + AnyTypeKind.USER.name() + \" class schemas\", e);\n+            LOG.error(\"Error retrieving {} any type kind related schemas\", AnyTypeKind.USER.name(), e);\n             responseStatus = 400;\n         }\n "},{"sha":"f31cba57189ba06365df597af7a6e4556efb6aa0","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SecurityQuestionResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -43,14 +43,14 @@ public SecurityQuestionResource() {\n     @Override\n     protected AbstractResource.ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n \n+        LOG.debug(\"List available security questions\");\n+\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         int responseStatus = 200;\n \n         try {\n \n-            LOG.debug(\"List available security questions\");\n-\n             final List<SecurityQuestionTO> securityQuestionTOs = securityQuestionService.list();\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {"},{"sha":"08cedb2ee47de8fdc920af4fd38c0d73860c18de","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -79,6 +79,7 @@ public void writeData(final Attributes attributes) throws IOException {\n             });\n \n         } catch (final Exception e) {\n+            LOG.error(\"Could not read userTO from request\", e);\n             responseStatus = 400;\n             response.setWriteCallback(new WriteCallback() {\n \n@@ -87,7 +88,6 @@ public void writeData(final Attributes attributes) throws IOException {\n                     attributes.getResponse().write(e.getMessage());\n                 }\n             });\n-            LOG.error(\"Could not read userTO from request\", e);\n         }\n \n         response.setStatusCode(responseStatus);"},{"sha":"824aa7649c082843f5530799116a5a205f9c2058","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -26,11 +26,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-/**\n- * Mirror REST resource for obtaining user self operations.\n- *\n- * @see org.apache.syncope.common.rest.api\n- */\n public class UserSelfReadResource extends AbstractResource {\n \n     private static final long serialVersionUID = -9184809392631523912L;\n@@ -49,6 +44,8 @@ public UserSelfReadResource() {\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n+        LOG.debug(\"Requested user self information\");\n+        \n         ResourceResponse response = new ResourceResponse();\n         final String selfTOJson = POJOHelper.serialize(userTOAdapter.toUserTORequest(SyncopeEnduserSession.get().\n                 getSelfTO()));"},{"sha":"8befc005e511cce7eff5510f8850421f493fde01","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=dfc6a062061f6e436d2f1e2c8f8fedcdc823ca91","patch":"@@ -20,6 +20,7 @@\n \n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n import org.apache.syncope.client.enduser.model.UserTORequest;\n@@ -58,15 +59,17 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             final UserTORequest userTOResponse = POJOHelper.deserialize(IOUtils.toString(request.getInputStream()),\n                     UserTORequest.class);\n \n-            LOG.debug(\"userTOResponse: {}\", userTOResponse);\n+            LOG.trace(\"userTOResponse: {}\", userTOResponse);\n \n             // adapt user, change self password only value passed is not null and has changed\n             UserTO userTO = userTOAdapter.fromUserTORequest(userTOResponse, SyncopeEnduserSession.get().getPassword());\n \n-            LOG.debug(\"Enduser user self update, user: {}\", userTO.toString());\n+            LOG.debug(\"User {} id updating himself\", userTO.getUsername());\n \n             // update user\n-            userSelfService.update(userTO);\n+            Response res = userSelfService.update(userTO);\n+            responseStatus = res.getStatus();\n+            \n             responseMessage = \"User updated successfully\";\n \n             response.setWriteCallback(new WriteCallback() {\n@@ -78,6 +81,7 @@ public void writeData(final Attributes attributes) throws IOException {\n             });\n \n         } catch (final Exception e) {\n+            LOG.error(\"Error while updating user\", e);\n             responseStatus = 400;\n             response.setWriteCallback(new WriteCallback() {\n \n@@ -86,7 +90,6 @@ public void writeData(final Attributes attributes) throws IOException {\n                     attributes.getResponse().write(e.getMessage());\n                 }\n             });\n-            LOG.error(\"Could not read userTO from request\", e);\n         }\n \n         response.setStatusCode(responseStatus);"}]}