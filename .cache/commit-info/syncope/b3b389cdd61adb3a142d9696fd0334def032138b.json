{"sha":"b3b389cdd61adb3a142d9696fd0334def032138b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIzYjM4OWNkZDYxYWRiM2ExNDJkOTY5NmZkMDMzNGRlZjAzMjEzOGI=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-04T13:24:39Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-04T13:24:39Z"},"message":"[SYNCOPE-42] - Add the ability to delete a user by username via the REST API\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1309368 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1c105754b54cfa75b9e1361c15284bbd6dd782a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1c105754b54cfa75b9e1361c15284bbd6dd782a1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b3b389cdd61adb3a142d9696fd0334def032138b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3b389cdd61adb3a142d9696fd0334def032138b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b3b389cdd61adb3a142d9696fd0334def032138b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3b389cdd61adb3a142d9696fd0334def032138b/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"2951d46a0032df6c201d5bff64e6e1d8b71e43e1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2951d46a0032df6c201d5bff64e6e1d8b71e43e1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2951d46a0032df6c201d5bff64e6e1d8b71e43e1"}],"stats":{"total":132,"additions":88,"deletions":44},"files":[{"sha":"a6fcf461c8f1321b9caaa135600ba160ea9dee42","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":60,"deletions":44,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b3b389cdd61adb3a142d9696fd0334def032138b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b3b389cdd61adb3a142d9696fd0334def032138b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=b3b389cdd61adb3a142d9696fd0334def032138b","patch":"@@ -434,51 +434,21 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId,\n     @RequestMapping(method = RequestMethod.GET, value = \"/delete/{userId}\")\n     public UserTO delete(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n-\n         LOG.debug(\"User delete called with {}\", userId);\n-\n-        // Note here that we can only notify about \"delete\", not any other\n-        // task defined in workflow process definition: this because this\n-        // information could only be available after wfAdapter.delete(), which\n-        // will also effectively remove user from db, thus making virtually\n-        // impossible by NotificationManager to fetch required user information\n-        notificationManager.createTasks(new WorkflowResult<Long>(userId, null, \"delete\"));\n-\n-        List<PropagationTask> tasks = propagationManager.getDeleteTaskIds(userId);\n-\n-        final UserTO userTO = new UserTO();\n-        userTO.setId(userId);\n-\n-        propagationManager.execute(tasks, new PropagationHandler() {\n-\n-            @Override\n-            public void handle(final String resourceName, final PropagationTaskExecStatus executionStatus,\n-                    final ConnectorObject before, final ConnectorObject after) {\n-\n-                final PropagationTO propagation = new PropagationTO();\n-                propagation.setResourceName(resourceName);\n-                propagation.setStatus(executionStatus);\n-\n-                if (before != null) {\n-                    propagation.setBefore(connObjectUtil.getConnObjectTO(before));\n-                }\n-\n-                if (after != null) {\n-                    propagation.setAfter(connObjectUtil.getConnObjectTO(after));\n-                }\n-\n-                userTO.addPropagationTO(propagation);\n-            }\n-        });\n-\n-        wfAdapter.delete(userId);\n-\n-        auditManager.audit(Category.user, UserSubCategory.delete, Result.success,\n-                \"Successfully deleted user: \" + userTO.getUsername());\n-\n-        LOG.debug(\"User successfully deleted: {}\", userId);\n-\n-        return userTO;\n+        \n+        return deleteByUserId(userId);\n+    }\n+    \n+    @PreAuthorize(\"hasRole('USER_DELETE')\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/delete\")\n+    public UserTO delete(@RequestParam(\"username\") final String username)\n+            throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n+        LOG.debug(\"User delete called with {}\", username);\n+        \n+        UserTO result = userDataBinder.getUserTO(username);\n+        long userId = result.getId();\n+        \n+        return deleteByUserId(userId);\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -624,4 +594,50 @@ private UserTO setStatus(final SyncopeUser user, final Set<String> resourceNames\n \n         return savedTO;\n     }\n+    \n+    private UserTO deleteByUserId(final Long userId)\n+        throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n+        // Note here that we can only notify about \"delete\", not any other\n+        // task defined in workflow process definition: this because this\n+        // information could only be available after wfAdapter.delete(), which\n+        // will also effectively remove user from db, thus making virtually\n+        // impossible by NotificationManager to fetch required user information\n+        notificationManager.createTasks(new WorkflowResult<Long>(userId, null, \"delete\"));\n+\n+        List<PropagationTask> tasks = propagationManager.getDeleteTaskIds(userId);\n+\n+        final UserTO userTO = new UserTO();\n+        userTO.setId(userId);\n+\n+        propagationManager.execute(tasks, new PropagationHandler() {\n+\n+            @Override\n+            public void handle(final String resourceName, final PropagationTaskExecStatus executionStatus,\n+                               final ConnectorObject before, final ConnectorObject after) {\n+\n+                final PropagationTO propagation = new PropagationTO();\n+                propagation.setResourceName(resourceName);\n+                propagation.setStatus(executionStatus);\n+\n+                if (before != null) {\n+                    propagation.setBefore(connObjectUtil.getConnObjectTO(before));\n+                }\n+\n+                if (after != null) {\n+                    propagation.setAfter(connObjectUtil.getConnObjectTO(after));\n+                }\n+\n+                userTO.addPropagationTO(propagation);\n+            }\n+        });\n+\n+        wfAdapter.delete(userId);\n+\n+        auditManager.audit(Category.user, UserSubCategory.delete, Result.success,\n+                           \"Successfully deleted user: \" + userTO.getUsername());\n+\n+        LOG.debug(\"User successfully deleted: {}\", userId);\n+\n+        return userTO;\n+    }\n }"},{"sha":"93e235dbf53aa2ef1315ed8d16a2e7449e0e3a0c","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b3b389cdd61adb3a142d9696fd0334def032138b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b3b389cdd61adb3a142d9696fd0334def032138b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=b3b389cdd61adb3a142d9696fd0334def032138b","patch":"@@ -767,6 +767,34 @@ public void delete() {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n+    \n+    @Test\n+    public void deleteByUsername() {\n+        UserTO userTO = getSampleTO(\"delete.by.username@apache.org\");\n+\n+        // specify a propagation\n+        userTO.addResource(\"resource-testdb\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        long id = userTO.getId();\n+        userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/delete?username=\" + userTO.getUsername(), UserTO.class);\n+\n+        assertNotNull(userTO);\n+        assertEquals(id, userTO.getId());\n+        assertTrue(userTO.getAttributes().isEmpty());\n+\n+        // check for propagation result\n+        assertFalse(userTO.getPropagationTOs().isEmpty());\n+        assertTrue(userTO.getPropagationTOs().get(0).getStatus().isSuccessful());\n+\n+        try {\n+            restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, userTO.getId());\n+        } catch (HttpStatusCodeException e) {\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n+        }\n+    }\n \n     @Test\n     public void count() {"}]}