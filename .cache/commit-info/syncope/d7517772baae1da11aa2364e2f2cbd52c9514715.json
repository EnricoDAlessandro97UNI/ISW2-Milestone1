{"sha":"d7517772baae1da11aa2364e2f2cbd52c9514715","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ3NTE3NzcyYmFhZTFkYTExYWEyMzY0ZTJmMmNiZDUyYzk1MTQ3MTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-14T15:57:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-14T16:21:53Z"},"message":"[SYNCOPE-862] Features complete","tree":{"sha":"f2ebab53ac8faf641fd885bc6a028a96080c6e6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f2ebab53ac8faf641fd885bc6a028a96080c6e6e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d7517772baae1da11aa2364e2f2cbd52c9514715","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7517772baae1da11aa2364e2f2cbd52c9514715","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d7517772baae1da11aa2364e2f2cbd52c9514715","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7517772baae1da11aa2364e2f2cbd52c9514715/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"85dd9063d5b7ac1692c8a2dcedbdd210b435d63d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d"}],"stats":{"total":2846,"additions":1462,"deletions":1384},"files":[{"sha":"7157c090766c3fce6beb8f6ea65388bda95ab084","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":11,"deletions":23,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -23,7 +23,6 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n public final class Constants {\n@@ -164,36 +163,25 @@ public final class Constants {\n      */\n     public static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n \n-    public static Component getPopover(\n-            final String id,\n-            final IModel<String> msg,\n-            final Component caller,\n-            final TooltipConfig.Placement placement) {\n-        return new Label(id, Model.of()).add(new PopoverBehavior(\n-                Model.<String>of(),\n-                msg,\n-                new PopoverConfig().withHtml(true).withPlacement(placement)) {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected String createRelAttribute() {\n-                return id;\n-            }\n-        });\n-    }\n-\n     public static Component getJEXLPopover(final Component caller, final TooltipConfig.Placement placement) {\n-        return getPopover(\"jexlInfo\",\n+        return new Label(\"jexlInfo\", Model.of()).add(new PopoverBehavior(\n+                Model.<String>of(),\n                 Model.of(caller.getString(\"jexl_info\")\n                         + \"<ul>\"\n                         + \"<li>\" + caller.getString(\"jexl_ex1\") + \"</li>\"\n                         + \"<li>\" + caller.getString(\"jexl_ex2\") + \"</li>\"\n                         + \"</ul>\"\n                         + \"<a href='https://commons.apache.org/proper/commons-jexl/reference/index.html' \"\n                         + \"target='_blank'>\" + caller.getString(\"jexl_syntax_url\") + \"</a>\"),\n-                caller,\n-                placement);\n+                new PopoverConfig().withHtml(true).withPlacement(placement)) {\n+\n+            private static final long serialVersionUID = -7867802555691605021L;\n+\n+            @Override\n+            protected String createRelAttribute() {\n+                return \"jexlInfo\";\n+            }\n+        });\n     }\n \n     private Constants() {"},{"sha":"cf971611430901c392454c6fc17d1e331067c89b","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":34,"deletions":69,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -23,7 +23,6 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n-import java.util.EnumSet;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n@@ -52,7 +51,6 @@\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.wicket.PageReference;\n@@ -119,50 +117,34 @@ public class Details extends WizardStep {\n         private static final long serialVersionUID = -7709805590497687958L;\n \n         public Details(final NotificationWrapper modelObject) {\n-            final NotificationTO notificationTO = modelObject.getInnerObject();\n-            final boolean createFlag = notificationTO.getKey() == null;\n+            NotificationTO notificationTO = modelObject.getInnerObject();\n+            boolean createFlag = notificationTO.getKey() == null;\n \n-            final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n+            AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n                     new PropertyModel<String>(notificationTO, \"sender\"));\n             sender.addRequiredLabel();\n             sender.addValidator(EmailAddressValidator.getInstance());\n             add(sender);\n \n-            final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\"subject\", getString(\"subject\"),\n+            AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\"subject\", getString(\"subject\"),\n                     new PropertyModel<String>(notificationTO, \"subject\"));\n             subject.addRequiredLabel();\n             add(subject);\n \n-            final AjaxDropDownChoicePanel<IntMappingType> recipientAttrType =\n-                    new AjaxDropDownChoicePanel<>(\n-                            \"recipientAttrType\",\n-                            new ResourceModel(\"recipientAttrType\", \"recipientAttrType\").getObject(),\n-                            new PropertyModel<IntMappingType>(notificationTO, \"recipientAttrType\"));\n-            recipientAttrType.setChoices(\n-                    new ArrayList<>(IntMappingType.getAttributeTypes(AnyTypeKind.USER,\n-                            EnumSet.of(IntMappingType.UserKey, IntMappingType.Password))));\n-            recipientAttrType.addRequiredLabel();\n-            add(recipientAttrType);\n-\n-            final AjaxDropDownChoicePanel<String> recipientAttrName = new AjaxDropDownChoicePanel<>(\n+            AjaxTextFieldPanel recipientAttrName = new AjaxTextFieldPanel(\n                     \"recipientAttrName\", new ResourceModel(\"recipientAttrName\", \"recipientAttrName\").getObject(),\n                     new PropertyModel<String>(notificationTO, \"recipientAttrName\"));\n-            recipientAttrName.setChoices(getSchemaNames(recipientAttrType.getModelObject()));\n+            recipientAttrName.setChoices(getSchemaNames());\n             recipientAttrName.addRequiredLabel();\n+            recipientAttrName.setTitle(getString(\"intAttrNameInfo.help\")\n+                    + \"<div style=\\\"font-size: 10px;\\\">\"\n+                    + \"<code>groups[groupName].attribute</code>\\n\"\n+                    + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n+                    + \"<code>memberships[groupName].attribute</code>\\n\"\n+                    + \"</div>\", true);\n             add(recipientAttrName);\n \n-            recipientAttrType.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                private static final long serialVersionUID = -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-                    recipientAttrName.setChoices(getSchemaNames(recipientAttrType.getModelObject()));\n-                    target.add(recipientAttrName);\n-                }\n-            });\n-\n-            final AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<>(\n+            AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<>(\n                     \"template\", getString(\"template\"),\n                     new PropertyModel<String>(notificationTO, \"template\"));\n             template.setChoices(CollectionUtils.collect(\n@@ -177,7 +159,7 @@ public String transform(final MailTemplateTO input) {\n             template.addRequiredLabel();\n             add(template);\n \n-            final AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<>(\n+            AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<>(\n                     \"traceLevel\", getString(\"traceLevel\"),\n                     new PropertyModel<TraceLevel>(notificationTO, \"traceLevel\"));\n             traceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n@@ -228,7 +210,7 @@ public About(final String id, final IModel<Pair<String, List<SearchClause>>> mod\n             super(id, model);\n             setOutputMarkupId(true);\n \n-            final List<String> anyTypeTOs = CollectionUtils.collect(\n+            List<String> anyTypeTOs = CollectionUtils.collect(\n                     new AnyTypeRestClient().list(),\n                     EntityTOUtils.<AnyTypeTO>keyTransformer(), new ArrayList<String>());\n \n@@ -289,22 +271,24 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         private AbstractSearchPanel.Builder<?> getClauseBuilder(\n                 final String type, final ListModel<SearchClause> clauseModel) {\n+\n             AbstractSearchPanel.Builder<?> clause;\n \n             switch (type) {\n                 case \"USER\":\n                     clause = new UserSearchPanel.Builder(clauseModel);\n                     break;\n+\n                 case \"GROUP\":\n                     clause = new GroupSearchPanel.Builder(clauseModel);\n                     break;\n+\n                 default:\n                     clause = new AnyObjectSearchPanel.Builder(type, clauseModel);\n-                    break;\n             }\n+\n             return clause;\n         }\n-\n     }\n \n     public class Abouts extends WizardStep {\n@@ -389,40 +373,21 @@ public Recipients(final NotificationWrapper modelObject) {\n \n     }\n \n-    private List<String> getSchemaNames(final IntMappingType type) {\n-        final List<String> result;\n-\n-        if (type == null) {\n-            result = Collections.<String>emptyList();\n-        } else {\n-            switch (type) {\n-                case UserPlainSchema:\n-                    result = CollectionUtils.collect(\n-                            schemaRestClient.<PlainSchemaTO>getSchemas(SchemaType.PLAIN, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<PlainSchemaTO>keyTransformer(), new ArrayList<String>());\n-                    break;\n-\n-                case UserDerivedSchema:\n-                    result = CollectionUtils.collect(\n-                            schemaRestClient.<DerSchemaTO>getSchemas(SchemaType.DERIVED, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<DerSchemaTO>keyTransformer(), new ArrayList<String>());\n-                    break;\n-\n-                case UserVirtualSchema:\n-                    result = CollectionUtils.collect(\n-                            schemaRestClient.<VirSchemaTO>getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<VirSchemaTO>keyTransformer(), new ArrayList<String>());\n-                    break;\n-\n-                case Username:\n-                    result = Collections.singletonList(\"Username\");\n-                    break;\n-\n-                default:\n-                    result = Collections.<String>emptyList();\n-            }\n-        }\n-\n+    private List<String> getSchemaNames() {\n+        List<String> result = new ArrayList<>();\n+        result.add(\"username\");\n+\n+        CollectionUtils.collect(\n+                schemaRestClient.<PlainSchemaTO>getSchemas(SchemaType.PLAIN, AnyTypeKind.USER.name()),\n+                EntityTOUtils.<PlainSchemaTO>keyTransformer(), result);\n+        CollectionUtils.collect(\n+                schemaRestClient.<DerSchemaTO>getSchemas(SchemaType.DERIVED, AnyTypeKind.USER.name()),\n+                EntityTOUtils.<DerSchemaTO>keyTransformer(), result);\n+        CollectionUtils.collect(\n+                schemaRestClient.<VirSchemaTO>getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER.name()),\n+                EntityTOUtils.<VirSchemaTO>keyTransformer(), result);\n+\n+        Collections.sort(result);\n         return result;\n     }\n }"},{"sha":"6da40f053508c91afacfdf035d69db6bd3eb2904","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":14,"deletions":46,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -50,8 +50,6 @@\n import org.apache.syncope.common.lib.report.SearchCondition;\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -102,7 +100,7 @@ public BeanPanel(\n \n             @Override\n             protected List<String> load() {\n-                List<String> result = new ArrayList<String>();\n+                List<String> result = new ArrayList<>();\n \n                 if (BeanPanel.this.getDefaultModelObject() != null) {\n                     for (Field field : BeanPanel.this.getDefaultModelObject().getClass().getDeclaredFields()) {\n@@ -160,18 +158,18 @@ protected void populateItem(final ListItem<String> item) {\n                     switch (scondAnnot.type()) {\n                         case \"USER\":\n                             panel = new UserSearchPanel.Builder(\n-                                    new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                    new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getUserSearchConditionBuilder();\n                             break;\n                         case \"GROUP\":\n                             panel = new GroupSearchPanel.Builder(\n-                                    new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                    new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getGroupSearchConditionBuilder();\n                             break;\n                         default:\n                             panel = new AnyObjectSearchPanel.Builder(\n                                     scondAnnot.type(),\n-                                    new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                    new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getAnyObjectSearchConditionBuilder(null);\n                     }\n \n@@ -190,51 +188,21 @@ protected void populateItem(final ListItem<String> item) {\n \n                         final List<AbstractSchemaTO> choices = new ArrayList<>();\n \n-                        for (IntMappingType type : schemaAnnot.type()) {\n+                        for (SchemaType type : schemaAnnot.type()) {\n                             switch (type) {\n-                                case UserPlainSchema:\n+                                case PLAIN:\n                                     choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.USER));\n+                                            schemaRestClient.getSchemas(SchemaType.PLAIN, schemaAnnot.anyTypeKind()));\n                                     break;\n \n-                                case UserDerivedSchema:\n+                                case DERIVED:\n                                     choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.USER));\n+                                            schemaRestClient.getSchemas(SchemaType.DERIVED, schemaAnnot.anyTypeKind()));\n                                     break;\n \n-                                case UserVirtualSchema:\n+                                case VIRTUAL:\n                                     choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER));\n-                                    break;\n-\n-                                case GroupPlainSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.GROUP));\n-                                    break;\n-\n-                                case GroupDerivedSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.GROUP));\n-                                    break;\n-\n-                                case GroupVirtualSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.GROUP));\n-                                    break;\n-\n-                                case AnyObjectPlainSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.ANY_OBJECT));\n-                                    break;\n-\n-                                case AnyObjectDerivedSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.ANY_OBJECT));\n-                                    break;\n-\n-                                case AnyObjectVirtualSchema:\n-                                    choices.addAll(\n-                                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.ANY_OBJECT));\n+                                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, schemaAnnot.anyTypeKind()));\n                                     break;\n \n                                 default:\n@@ -244,7 +212,7 @@ protected void populateItem(final ListItem<String> item) {\n                         panel = new AjaxPalettePanel.Builder<String>().setName(fieldName).build(\n                                 \"value\",\n                                 new PropertyModel<List<String>>(bean.getObject(), fieldName),\n-                                new ListModel<String>(\n+                                new ListModel<>(\n                                         CollectionUtils.collect(\n                                                 choices, new Transformer<AbstractSchemaTO, String>() {\n \n@@ -263,7 +231,7 @@ public String transform(final AbstractSchemaTO input) {\n                             ((List) wrapper.getPropertyValue(fieldName)).add(null);\n                         }\n \n-                        panel = new MultiFieldPanel.Builder<String>(\n+                        panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(bean.getObject(), fieldName)).build(\n                                 \"value\",\n                                 fieldName,\n@@ -287,7 +255,7 @@ private FieldPanel buildSinglePanel(\n         if (ClassUtils.isAssignable(Boolean.class, type)) {\n             result = new AjaxCheckBoxPanel(id, fieldName, model);\n         } else if (ClassUtils.isAssignable(Number.class, type)) {\n-            result = new AjaxSpinnerFieldPanel.Builder<Number>().build(\n+            result = new AjaxSpinnerFieldPanel.Builder<>().build(\n                     id, fieldName, (Class<Number>) ClassUtils.resolvePrimitiveIfNecessary(type), model);\n         } else if (Date.class.equals(type)) {\n             result = new DateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);"},{"sha":"45ddb35a588244e0e4d21587f2b12a8d4c2a626d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -68,7 +68,7 @@ protected ConnObjectListViewPanel(\n \n             @Override\n             protected Component getValueComponent(final String key, final ConnObjectTO bean) {\n-                final AttrTO attrTO = IterableUtils.find(bean.getPlainAttrs(), new Predicate<AttrTO>() {\n+                final AttrTO attrTO = IterableUtils.find(bean.getAttrs(), new Predicate<AttrTO>() {\n \n                     @Override\n                     public boolean evaluate(final AttrTO object) {"},{"sha":"d38091bb981e829184332082c31fd467714c8d67","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -54,6 +54,7 @@ public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaTy\n                     classes.addAll(type.getClasses());\n                 }\n                 break;\n+\n             default:\n                 for (AnyTypeTO anyTypeTO : getService(AnyTypeService.class).list()) {\n                     if (anyTypeTO.getKind() != AnyTypeKind.USER && anyTypeTO.getKind() != AnyTypeKind.GROUP) {"},{"sha":"8935ef301acd88469c052b9dacd7691d88c828ee","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.GroupableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -41,6 +40,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.lang.Args;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n \n public class Groups extends WizardStep {\n \n@@ -83,8 +83,8 @@ public boolean evaluate(final MembershipTO object) {\n                     }\n                 });\n \n-        add(builder.setAllowOrder(true).withFilter().build(\n-                \"groups\", new ListModel<>(GroupableTO.class.cast(anyTO).getMemberships()),\n+        add(builder.setAllowOrder(true).withFilter().build(\"groups\",\n+                new ListModel<>(GroupableRelatableTO.class.cast(anyTO).getMemberships()),\n                 new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n \n             private static final long serialVersionUID = -7223078772249308813L;\n@@ -116,9 +116,8 @@ public MembershipTO transform(final GroupTO input) {\n         for (GroupTO group : allGroups) {\n             allGroupsByKey.put(group.getKey(), group);\n         }\n-        add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n-                \"dyngroups\",\n-                new ListModel<>(CollectionUtils.collect(GroupableTO.class.cast(anyTO).getDynGroups(),\n+        add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"dyngroups\",\n+                new ListModel<>(CollectionUtils.collect(GroupableRelatableTO.class.cast(anyTO).getDynGroups(),\n                         new Transformer<String, String>() {\n \n                     @Override"},{"sha":"20f054cf54a81fc2124590c4826b2646778ab36c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -55,7 +54,7 @@\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.RelatableTO;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n@@ -135,8 +134,7 @@ public Panel getPanel(final String panelId) {\n                                             public void onClick(\n                                                     final AjaxRequestTarget target, final RelationshipTO modelObject) {\n                                                 removeRelationships(relationships, modelObject);\n-                                                send(Relationships.this, Broadcast.DEPTH, \n-                                                        new ListViewReload<Serializable>(target));\n+                                                send(Relationships.this, Broadcast.DEPTH, new ListViewReload<>(target));\n                                             }\n                                         }, ActionType.DELETE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).\n                                         build(panelId);\n@@ -175,8 +173,8 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTO ignore)\n     }\n \n     private List<RelationshipTO> getCurrentRelationships() {\n-        return anyTO instanceof RelatableTO\n-                ? RelatableTO.class.cast(anyTO).getRelationships()\n+        return anyTO instanceof GroupableRelatableTO\n+                ? GroupableRelatableTO.class.cast(anyTO).getRelationships()\n                 : Collections.<RelationshipTO>emptyList();\n     }\n "},{"sha":"de90660a778a296e2792a1039940ead8711f67c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":113,"deletions":204,"changes":317,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,17 +18,24 @@\n  */\n package org.apache.syncope.client.console.wizards.resources;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverConfig;\n import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.ClassUtils;\n import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n@@ -38,22 +45,23 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n import org.apache.syncope.client.console.widgets.JEXLTransformerWidget;\n import org.apache.syncope.client.console.widgets.MappingItemTransformerWidget;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -76,10 +84,32 @@ public class ResourceMappingPanel extends Panel {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    /**\n-     * Mapping field style sheet.\n-     */\n-    private static final String DEF_FIELD_STYLE = \"\";\n+    private static final Set<String> USER_FIELD_NAMES = new HashSet<>();\n+\n+    private static final Set<String> GROUP_FIELD_NAMES = new HashSet<>();\n+\n+    private static final Set<String> ANY_OBJECT_FIELD_NAMES = new HashSet<>();\n+\n+    static {\n+        initFieldNames(UserTO.class, USER_FIELD_NAMES);\n+        initFieldNames(GroupTO.class, GROUP_FIELD_NAMES);\n+        initFieldNames(AnyObjectTO.class, ANY_OBJECT_FIELD_NAMES);\n+    }\n+\n+    private static void initFieldNames(final Class<?> entityClass, final Set<String> keys) {\n+        List<Class<?>> classes = ClassUtils.getAllSuperclasses(entityClass);\n+        classes.add(entityClass);\n+        for (Class<?> clazz : classes) {\n+            for (Field field : clazz.getDeclaredFields()) {\n+                if (!Modifier.isStatic(field.getModifiers())\n+                        && !Collection.class.isAssignableFrom(field.getType())\n+                        && !Map.class.isAssignableFrom(field.getType())) {\n+\n+                    keys.add(field.getName());\n+                }\n+            }\n+        }\n+    }\n \n     /**\n      * Any type rest client.\n@@ -157,6 +187,24 @@ public ResourceMappingPanel(\n         this.mappingContainer.setVisible(provisionTO != null);\n         add(this.mappingContainer);\n \n+        mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n+                Model.<String>of(),\n+                Model.of(getString(\"intAttrNameInfo.help\")\n+                        + \"<div style=\\\"font-size: 10px;\\\">\"\n+                        + \"<code>groups[groupName].attribute</code>\\n\"\n+                        + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n+                        + \"<code>memberships[groupName].attribute</code>\\n\"\n+                        + \"</div>\"),\n+                new PopoverConfig().withHtml(true).withPlacement(TooltipConfig.Placement.bottom)) {\n+\n+            private static final long serialVersionUID = -7867802555691605021L;\n+\n+            @Override\n+            protected String createRelAttribute() {\n+                return \"intAttrNameInfo\";\n+            }\n+        }));\n+\n         mappingContainer.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n \n         passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n@@ -216,77 +264,32 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                     mapItem.setPurpose(MappingPurpose.BOTH);\n                 }\n \n-                AnyTypeKind entity = null;\n-                if (provisionTO.getAnyType().equals(AnyTypeKind.GROUP.name())) {\n-                    // support for clone\n-                    entity = AnyTypeKind.GROUP;\n-                } else if (mapItem.getIntMappingType() != null) {\n-                    entity = mapItem.getIntMappingType().getAnyTypeKind();\n-                }\n-\n-                // it will happen just in case of clone to create a new mapping for group object\n-                if (mapItem.getIntMappingType() != null && mapItem.getIntMappingType().getAnyTypeKind() != entity) {\n-                    mapItem.setIntMappingType(null);\n-                    mapItem.setIntAttrName(null);\n-                }\n-\n-                //--------------------------------\n-                // Entity\n-                // -------------------------------\n-                final AjaxDropDownChoicePanel<AnyTypeKind> entitiesPanel = new AjaxDropDownChoicePanel<>(\n-                        \"entities\",\n-                        new ResourceModel(\"entities\", \"entities\").getObject(),\n-                        new Model<>(entity));\n-\n-                entitiesPanel.hideLabel();\n-                entitiesPanel.setChoices(provisionTO.getAnyType().equals(AnyTypeKind.GROUP.name())\n-                        ? Collections.<AnyTypeKind>singletonList(AnyTypeKind.GROUP)\n-                        : Arrays.asList(AnyTypeKind.values()));\n-\n-                entitiesPanel.setStyleSheet(false, DEF_FIELD_STYLE);\n-                item.add(entitiesPanel);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Internal attribute type\n-                // -------------------------------\n-                final List<IntMappingType> attrTypes = new ArrayList<>(getAttributeTypes(entity));\n-                final AjaxDropDownChoicePanel<IntMappingType> intMappingTypes = new AjaxDropDownChoicePanel<>(\n-                        \"intMappingTypes\",\n-                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n-                        new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"),\n-                        false);\n-                intMappingTypes.setNullValid(true).setRequired(true).hideLabel();\n-                intMappingTypes.setChoices(attrTypes);\n-                item.add(intMappingTypes);\n-                // -------------------------------\n-\n                 //--------------------------------\n                 // Internal attribute\n                 // -------------------------------\n-                final AjaxTextFieldPanel intAttrNames = new AjaxTextFieldPanel(\n-                        \"intAttrNames\",\n-                        getString(\"intAttrNames\"),\n+                AjaxTextFieldPanel intAttrName = new AjaxTextFieldPanel(\n+                        \"intAttrName\",\n+                        getString(\"intAttrName\"),\n                         new PropertyModel<String>(mapItem, \"intAttrName\"),\n                         false);\n-                intAttrNames.setChoices(Collections.<String>emptyList());\n-                intAttrNames.setRequired(true).hideLabel();\n-                item.add(intAttrNames);\n+                intAttrName.setChoices(Collections.<String>emptyList());\n+                intAttrName.setRequired(true).hideLabel();\n+                item.add(intAttrName);\n                 // -------------------------------\n \n                 //--------------------------------\n                 // External attribute\n                 // -------------------------------\n-                final AjaxTextFieldPanel extAttrNames = new AjaxTextFieldPanel(\n+                final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n                         \"extAttrName\",\n-                        new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n+                        getString(\"extAttrName\"),\n                         new PropertyModel<String>(mapItem, \"extAttrName\"));\n-                extAttrNames.setChoices(getExtAttrNames(resourceTO.getConnector(), resourceTO.getConfOverride()));\n+                extAttrName.setChoices(getExtAttrNames(resourceTO.getConnector(), resourceTO.getConfOverride()));\n \n                 boolean required = !mapItem.isPassword();\n-                extAttrNames.setRequired(required).hideLabel();\n-                extAttrNames.setEnabled(required);\n-                item.add(extAttrNames);\n+                extAttrName.setRequired(required).hideLabel();\n+                extAttrName.setEnabled(required);\n+                item.add(extAttrName);\n                 // -------------------------------\n \n                 //--------------------------------\n@@ -339,7 +342,7 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                 //--------------------------------\n                 // Purpose\n                 // -------------------------------\n-                final WebMarkupContainer purpose = new WebMarkupContainer(\"purpose\");\n+                WebMarkupContainer purpose = new WebMarkupContainer(\"purpose\");\n                 purpose.setOutputMarkupId(Boolean.TRUE);\n \n                 final MappingPurposePanel panel = new MappingPurposePanel(\n@@ -376,38 +379,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 item.add(actions.build(\"toRemove\"));\n                 // -------------------------------\n \n-                entitiesPanel.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        attrTypes.clear();\n-                        attrTypes.addAll(getAttributeTypes(entitiesPanel.getModelObject()));\n-                        intMappingTypes.setChoices(attrTypes);\n-\n-                        intAttrNames.setChoices(Collections.<String>emptyList());\n-\n-                        target.add(intMappingTypes);\n-                        target.add(intAttrNames);\n-                    }\n-                });\n-\n-                intMappingTypes.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        setAttrNames(intMappingTypes.getModelObject(), intAttrNames);\n-                        target.add(intAttrNames);\n-\n-                        setConnObjectKey(intMappingTypes.getModelObject(), connObjectKey, password);\n-                        target.add(connObjectKey);\n-                    }\n-                });\n-\n-                intAttrNames.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+                intAttrName.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n@@ -439,28 +411,28 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        extAttrNames.setEnabled(!mapItem.isConnObjectKey() && !password.getModelObject());\n-                        extAttrNames.setModelObject(password.getModelObject()\n-                                ? ConnIdSpecialAttributeName.PASSWORD : extAttrNames.getModelObject());\n-                        extAttrNames.setRequired(!password.getModelObject());\n-                        target.add(extAttrNames);\n+                        extAttrName.setEnabled(!mapItem.isConnObjectKey() && !password.getModelObject());\n+                        extAttrName.setModelObject(password.getModelObject()\n+                                ? ConnIdSpecialAttributeName.PASSWORD : extAttrName.getModelObject());\n+                        extAttrName.setRequired(!password.getModelObject());\n+                        target.add(extAttrName);\n \n-                        setConnObjectKey(intMappingTypes.getModelObject(), connObjectKey, password);\n+                        setConnObjectKey(connObjectKey, password);\n                         target.add(connObjectKey);\n                     }\n                 });\n \n-                setAttrNames(mapItem.getIntMappingType(), intAttrNames);\n-                setConnObjectKey(mapItem.getIntMappingType(), connObjectKey, password);\n+                setAttrNames(intAttrName);\n+                setConnObjectKey(connObjectKey, password);\n \n                 if (!AnyTypeKind.USER.name().equals(provisionTO.getAnyType())) {\n                     password.setVisible(false);\n \n                     // Changes required by clone ....\n-                    extAttrNames.setEnabled(!mapItem.isConnObjectKey());\n+                    extAttrName.setEnabled(!mapItem.isConnObjectKey());\n                     if (mapItem.isPassword()) {\n                         // re-enable if and only if cloned objec mapping item was a password\n-                        intAttrNames.setEnabled(true);\n+                        intAttrName.setEnabled(true);\n                     }\n                     mapItem.setPassword(false);\n                 }\n@@ -517,118 +489,55 @@ public boolean evaluate(final ConnIdObjectClassTO object) {\n      * @param type attribute type.\n      * @param toBeUpdated drop down choice to be updated.\n      */\n-    private void setAttrNames(final IntMappingType type, final AjaxTextFieldPanel toBeUpdated) {\n+    private void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n \n-        if (type == null || type.getAnyTypeKind() == null) {\n-            toBeUpdated.setChoices(Collections.<String>emptyList());\n-        } else {\n-            AnyTypeTO anyTypeTO = anyTypeRestClient.read(provisionTO.getAnyType());\n+        AnyTypeTO anyTypeTO = anyTypeRestClient.read(provisionTO.getAnyType());\n \n-            List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n-            anyTypeClassTOs.addAll(anyTypeClassRestClient.list(anyTypeTO.getClasses()));\n-            for (String auxClass : provisionTO.getAuxClasses()) {\n-                anyTypeClassTOs.add(anyTypeClassRestClient.read(auxClass));\n-            }\n+        List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n+        anyTypeClassTOs.addAll(anyTypeClassRestClient.list(anyTypeTO.getClasses()));\n+        for (String auxClass : provisionTO.getAuxClasses()) {\n+            anyTypeClassTOs.add(anyTypeClassRestClient.read(auxClass));\n+        }\n \n-            List<String> choices;\n-            switch (type) {\n-                case UserPlainSchema:\n-                case GroupPlainSchema:\n-                case AnyObjectPlainSchema:\n-                    final Set<String> plains = new HashSet<>();\n-                    for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n-                        plains.addAll(anyTypeClassTO.getPlainSchemas());\n-                    }\n-                    choices = new ArrayList<>(plains);\n-                    break;\n-\n-                case UserDerivedSchema:\n-                case GroupDerivedSchema:\n-                case AnyObjectDerivedSchema:\n-                    final Set<String> deriveds = new HashSet<>();\n-                    for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n-                        deriveds.addAll(anyTypeClassTO.getDerSchemas());\n-                    }\n-                    choices = new ArrayList<>(deriveds);\n-                    break;\n-\n-                case UserVirtualSchema:\n-                case GroupVirtualSchema:\n-                case AnyObjectVirtualSchema:\n-                    final Set<String> virtuals = new HashSet<>();\n-                    for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n-                        virtuals.addAll(anyTypeClassTO.getVirSchemas());\n-                    }\n-                    choices = new ArrayList<>(virtuals);\n-                    break;\n-\n-                case UserKey:\n-                case Password:\n-                case Username:\n-                case GroupKey:\n-                case GroupName:\n-                case AnyObjectKey:\n-                case AnyObjectName:\n-                default:\n-                    toBeUpdated.setRequired(false);\n-                    toBeUpdated.setEnabled(false);\n-                    choices = Collections.<String>emptyList();\n-            }\n-            Collections.sort(choices);\n-            toBeUpdated.setChoices(choices);\n+        List<String> choices = new ArrayList<>();\n+\n+        switch (provisionTO.getAnyType()) {\n+            case \"USER\":\n+                choices.addAll(USER_FIELD_NAMES);\n+                break;\n+\n+            case \"GROUP\":\n+                choices.addAll(GROUP_FIELD_NAMES);\n+                break;\n+\n+            default:\n+                choices.addAll(ANY_OBJECT_FIELD_NAMES);\n+        }\n+\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            choices.addAll(anyTypeClassTO.getPlainSchemas());\n+            choices.addAll(anyTypeClassTO.getDerSchemas());\n+            choices.addAll(anyTypeClassTO.getVirSchemas());\n         }\n+\n+        Collections.sort(choices);\n+        toBeUpdated.setChoices(choices);\n     }\n \n     /**\n      * Enable/Disable connObjectKey checkbox.\n      *\n-     * @param type attribute type.\n      * @param connObjectKey connObjectKey checkbox.\n      * @param password password checkbox.\n      */\n-    private void setConnObjectKey(\n-            final IntMappingType type, final AjaxCheckBoxPanel connObjectKey, final AjaxCheckBoxPanel password) {\n-\n-        if (type != null && type.getAnyTypeKind() != null) {\n-            switch (type) {\n-                case UserVirtualSchema:\n-                case GroupVirtualSchema:\n-                case AnyObjectVirtualSchema:\n-                // Virtual connObjectKey is not permitted\n-                case Password:\n-                    // connObjectKey cannot be derived from password.\n-                    connObjectKey.setReadOnly(true);\n-                    connObjectKey.setModelObject(false);\n-                    break;\n-\n-                default:\n-                    if (password.getModelObject()) {\n-                        connObjectKey.setReadOnly(true);\n-                        connObjectKey.setModelObject(false);\n-                    } else {\n-                        connObjectKey.setReadOnly(false);\n-                    }\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Get all attribute types from a selected attribute type.\n-     *\n-     * @param kind entity.\n-     * @return all attribute types.\n-     */\n-    private List<IntMappingType> getAttributeTypes(final AnyTypeKind kind) {\n-        final List<IntMappingType> res = new ArrayList<>();\n-\n-        if (kind != null) {\n-            res.addAll(IntMappingType.getAttributeTypes(kind));\n+    private void setConnObjectKey(final AjaxCheckBoxPanel connObjectKey, final AjaxCheckBoxPanel password) {\n+        if (password.getModelObject()) {\n+            connObjectKey.setReadOnly(true);\n+            connObjectKey.setModelObject(false);\n+        } else {\n+            connObjectKey.setReadOnly(false);\n         }\n-\n-        Collections.sort(res);\n-\n-        return res;\n     }\n }"},{"sha":"c8f42ad32ef62b850075f932463e0d835830958a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -73,3 +73,4 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlements\n audit=Audit\n connectors.confirm.reload=This request is potentially dangerous for running operations, continue?\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:"},{"sha":"a17d3d8a9e50f040d4d9ef42fd6490fa3fd5ebec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -72,3 +72,4 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n+intAttrNameInfo.help=Oltre agli attributi auto-completati, \\u00e8 possibile fare riferimento anche a gruppi, any object e membership (se applicabile); ad esempio:"},{"sha":"b0abf0da1d3ac0281c617ab5b4f040f7ed041f26","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -72,3 +72,4 @@ OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:"},{"sha":"2b03a6167b200739e854dbfb444ccbeabc197d7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -123,3 +123,4 @@ OrderByLink.CSS.none=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u043\n entitlements=\\u041f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f\n audit=Audit\n connectors.confirm.reload=This request is potentially dangerous for running operations, continue?\n+intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:"},{"sha":"05ce8cf0ef918a67ba508753a316cc83e2356b3e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -26,9 +26,6 @@\n       <div class=\"form-group\">\n         <span wicket:id=\"subject\">[subject]</span>\n       </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"recipientAttrType\">[recipientAttrType]</span>\n-      </div>\n       <div class=\"form-group\">\n         <span wicket:id=\"recipientAttrName\">[recipientAttrName]</span>\n       </div>"},{"sha":"72f0e85c988f18c905f52f38b36daab7e780ddae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,6 +18,5 @@ subject=Subject\n sender=Sender\n template=Template\n traceLevel=Trace level\n-recipientAttrType=Recipients e-mail attribute type\n-recipientAttrName=Recipients e-mail attribute schema\n+recipientAttrName=Recipients e-mail attribute\n isActive=Enabled"},{"sha":"85ee48f4736d2ec008ab677fc691a893ec5ade47","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details_it.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,6 +18,5 @@ subject=Oggetto\n sender=Mittente\n template=Modello\n traceLevel=Livello di tracciamento\n-recipientAttrType=Tipo attributo e-mail destinatari\n-recipientAttrName=Schema attributo e-mail destinatari\n+recipientAttrName=Attributo e-mail destinatari\n isActive=Abilitata"},{"sha":"7838db00c9bf05f333d3e94c5d7a9ccf938c379a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details_pt_BR.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,6 +18,5 @@ subject=Assunto\n sender=Remetente\n template=Template\n traceLevel=N\\u00edvel de Trace\n-recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n-recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n+recipientAttrName=Destinat\\u00e1rios de e-mail para atributos\n isActive=Ativada"},{"sha":"75a3fd8c906e31490f28d8f32844e22097eef7bc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details_ru.properties","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_ru.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -16,17 +16,15 @@\n # under the License.\n #\n #\n-# subject=Тема\n+# subject=\\u00d0\\u00a2\\u00d0\\u00b5\\u00d0\\u00bc\\u00d0\\u00b0\n subject=\\u0422\\u0435\\u043c\\u0430\n-# sender=Отправитель\n+# sender=\\u00d0\\u009e\\u00d1\\u0082\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\n sender=\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\n-# template=Шаблон\n+# template=\\u00d0\\u00a8\\u00d0\\u00b0\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00bd\n template=\\u0428\\u0430\\u0431\\u043b\\u043e\\u043d\n-# traceLevel=Уровень логирования\n+# traceLevel=\\u00d0\\u00a3\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00bd\\u00d1\\u008c \\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n traceLevel=\\u0423\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043b\\u043e\\u0433\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# recipientAttrType=Тип атрибута с адресом электронной почты получателей\n-recipientAttrType=\\u0422\\u0438\\u043f \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# recipientAttrName=Наименование атрибута с адресом электронной почты получателей\n+# recipientAttrName=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b8\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\\u00d0\\u00b0 \\u00d1\\u0081 \\u00d0\\u00b0\\u00d0\\u00b4\\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00bc \\u00d1\\u008d\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bd\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b9 \\u00d0\\u00bf\\u00d0\\u00be\\u00d1\\u0087\\u00d1\\u0082\\u00d1\\u008b \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n recipientAttrName=\\u041d\\u0430\\u0438\\u043c\\u0435\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# isActive=Активно\n+# isActive=\\u00d0\\u0090\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00bd\\u00d0\\u00be\n isActive=\\u0410\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e"},{"sha":"879b3804f1ab9d43820e1cd4bab6dae22b1bc499","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -25,8 +25,6 @@ about=About\n events=Events\n recipients=Recipients\n selfAsRecipient=Include users matching About\n-recipientAttrType=Recipients e-mail attribute type\n-recipientAttrName=Recipients e-mail attribute schema\n checkRecipients=Search recipients\n checkAbout=All\n userFilter=User filter"},{"sha":"ae80bb255ec4dc37e4d1b0e512e58e8cdbe3d653","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -25,8 +25,6 @@ about=Soggetti\n events=Eventi\n recipients=Destinatari\n selfAsRecipient=Includi i soggetti\n-recipientAttrType=Tipo attributo e-mail destinatari\n-recipientAttrName=Schema attributo e-mail destinatari\n checkRecipients=Cerca i destinatari\n checkAbout=Tutto\n userFilter=Filtro utenti"},{"sha":"5c70e6634f6c3b6ee7b38312d77696032dcd0ba6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events_pt_BR.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -25,8 +25,6 @@ about=Sobre\n events=Eventos\n recipients=Destinat\\u00e1rios\n selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n-recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n-recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n checkRecipients=Buscar Destinat\\u00e1rios\n checkAbout=Todos\n userFilter=Filtro usu\\u00e1rio"},{"sha":"2d461d553cdb8d130799b6198fa9372e19dbe30e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events_ru.properties","status":"modified","additions":24,"deletions":28,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_ru.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -15,55 +15,51 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# title=Изменить уведомление\n+# title=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d1\\u0083\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n title=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435\n-# submit=Сохранить\n+# submit=\\u00d0\\u00a1\\u00d0\\u00be\\u00d1\\u0085\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c\n submit=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c\n-# subject=Тема\n+# subject=\\u00d0\\u00a2\\u00d0\\u00b5\\u00d0\\u00bc\\u00d0\\u00b0\n subject=\\u0422\\u0435\\u043c\\u0430\n-# sender=Отправитель\n+# sender=\\u00d0\\u009e\\u00d1\\u0082\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\n sender=\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\n-# template=Шаблон\n+# template=\\u00d0\\u00a8\\u00d0\\u00b0\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00bd\n template=\\u0428\\u0430\\u0431\\u043b\\u043e\\u043d\n-# traceLevel=Уровень логирования\n+# traceLevel=\\u00d0\\u00a3\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00bd\\u00d1\\u008c \\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n traceLevel=\\u0423\\u0440\\u043e\\u0432\\u0435\\u043d\\u044c \\u043b\\u043e\\u0433\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# notification=Уведомление\n+# notification=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n notification=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435\n-# about=Уведомление о\n+# about=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00be\n about=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043e\n-# events=События\n+# events=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u008f\n events=\\u0421\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f\n-# recipients=Получатели\n+# recipients=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8\n recipients=\\u041f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0438\n-# selfAsRecipient=Включить в получатели пользователей, о которых рассылается уведомление\n+# selfAsRecipient=\\u00d0\\u0092\\u00d0\\u00ba\\u00d0\\u00bb\\u00d1\\u008e\\u00d1\\u0087\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9, \\u00d0\\u00be \\u00d0\\u00ba\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u008b\\u00d1\\u0085 \\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0081\\u00d1\\u008b\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u008f \\u00d1\\u0083\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n selfAsRecipient=\\u0412\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u044c \\u0432 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439, \\u043e \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0440\\u0430\\u0441\\u0441\\u044b\\u043b\\u0430\\u0435\\u0442\\u0441\\u044f \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435\n-# recipientAttrType=Тип атрибута с адресом электронной почты получателей\n-recipientAttrType=\\u0422\\u0438\\u043f \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# recipientAttrName=Наименование атрибута с адресом электронной почты получателей\n-recipientAttrName=\\u041d\\u0430\\u0438\\u043c\\u0435\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# checkRecipients=Поиск получателей\n+# checkRecipients=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00ba \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n checkRecipients=\\u041f\\u043e\\u0438\\u0441\\u043a \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# checkAbout=Обо всём\n+# checkAbout=\\u00d0\\u009e\\u00d0\\u00b1\\u00d0\\u00be \\u00d0\\u00b2\\u00d1\\u0081\\u00d1\\u0091\\u00d0\\u00bc\n checkAbout=\\u041e\\u0431\\u043e \\u0432\\u0441\\u0451\\u043c\n-# userFilter=Фильтр пользователей\n+# userFilter=\\u00d0\\u00a4\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userFilter=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userFilterWarning=Не используйте этот фильтр, если событие не предназначено для пользователей\n+# userFilterWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d1\\u0083\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userFilterWarning=\\u041d\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u0438\\u043b\\u044c\\u0442\\u0440, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userNotifications=Уведомления для пользователей\n+# userNotifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userNotifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userNotificationsWarning=Не устанавливайте этот флажок, если событие не предназначено для пользователей\n+# userNotificationsWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d1\\u0083\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b6\\u00d0\\u00be\\u00d0\\u00ba, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userNotificationsWarning=\\u041d\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u043b\\u0430\\u0433, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# roleFilter=Фильтр ролей\n+# roleFilter=\\u00d0\\u00a4\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080 \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleFilter=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleFilterWarning=Не используйте этот фильтр, если событие не предназначено для ролей\n+# roleFilterWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d1\\u0083\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleFilterWarning=\\u041d\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u0438\\u043b\\u044c\\u0442\\u0440, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleNotifications=Уведомления на основе ролей\n+# roleNotifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00bd\\u00d0\\u00b0 \\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b5 \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleNotifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f \\u043d\\u0430 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleNotificationsWarning=Не устанавливайте этот флажок, если событие не предназначено для ролей\n+# roleNotificationsWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d1\\u0083\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b6\\u00d0\\u00be\\u00d0\\u00ba, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleNotificationsWarning=\\u041d\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u043b\\u0430\\u0433, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u0440\\u043e\\u043b\\u0435\\u0439\n-# isActive=Активно\n+# isActive=\\u00d0\\u0090\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00bd\\u00d0\\u00be\n isActive=\\u0410\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\n-# checkUserAbout=Пользователи\n+# checkUserAbout=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8\n checkUserAbout=\\u041f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0438\n-# checkRoleAbout=Роли\n+# checkRoleAbout=\\u00d0\\u00a0\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\n checkRoleAbout=\\u0420\\u043e\\u043b\\u0438"},{"sha":"c8b5711ee455f81a56a01a16ed5e9c143c807160","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -24,8 +24,6 @@ notification=Notification\n about=About\n events=Events\n selfAsRecipient=Include users matching About\n-recipientAttrType=Recipients e-mail attribute type\n-recipientAttrName=Recipients e-mail attribute schema\n checkRecipients=Search recipients\n checkAbout=All\n userFilter=User filter"},{"sha":"94113c6550bd64abec0db2b875ed5e408e36ad3b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -24,8 +24,6 @@ notification=Notifica\n about=Soggetti\n events=Eventi\n selfAsRecipient=Includi i soggetti\n-recipientAttrType=Tipo attributo e-mail destinatari\n-recipientAttrName=Schema attributo e-mail destinatari\n checkRecipients=Cerca i destinatari\n checkAbout=Tutto\n userFilter=Filtro utenti"},{"sha":"8ac31ef2ee3c36f33954a4cb217c95d8ccd06cec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications_pt_BR.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -24,8 +24,6 @@ notification=Notifica\\u00e7\\u00e3o\n about=Sobre\n events=Eventos\n selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n-recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n-recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n checkRecipients=Buscar Destinat\\u00e1rios\n checkAbout=Todos\n userFilter=Filtro usu\\u00e1rio"},{"sha":"46e670010a4c350aca3641b66dcb2c2a4dde581b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications_ru.properties","status":"modified","additions":23,"deletions":27,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_ru.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -15,55 +15,51 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# notifications=Уведомления\n+# notifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n notifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f\n-# notification.templates=Шаблоны\n+# notification.templates=\\u00d0\\u00a8\\u00d0\\u00b0\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00bd\\u00d1\\u008b\n notification.templates=\\u0428\\u0430\\u0431\\u043b\\u043e\\u043d\\u044b\n \n-# sender=Отправитель\n+# sender=\\u00d0\\u009e\\u00d1\\u0082\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\n sender=\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\n-# template=Шаблон\n+# template=\\u00d0\\u00a8\\u00d0\\u00b0\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00bd\n template=\\u0428\\u0430\\u0431\\u043b\\u043e\\u043d\n-# traceLevel=Логирование\n+# traceLevel=\\u00d0\\u009b\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n traceLevel=\\u041b\\u043e\\u0433\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435\n-# notification=Уведомление\n+# notification=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n notification=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435\n-# about=Уведомление о\n+# about=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00be\n about=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043e\n-# events=События\n+# events=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u008f\n events=\\u0421\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f\n-# selfAsRecipient=Включить в получатели пользователей, о которых рассылается уведомление\n+# selfAsRecipient=\\u00d0\\u0092\\u00d0\\u00ba\\u00d0\\u00bb\\u00d1\\u008e\\u00d1\\u0087\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9, \\u00d0\\u00be \\u00d0\\u00ba\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u008b\\u00d1\\u0085 \\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0081\\u00d1\\u008b\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u008f \\u00d1\\u0083\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n selfAsRecipient=\\u0412\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u044c \\u0432 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439, \\u043e \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0440\\u0430\\u0441\\u0441\\u044b\\u043b\\u0430\\u0435\\u0442\\u0441\\u044f \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0435\n-# recipientAttrType=Тип атрибута с адресом электронной почты получателей\n-recipientAttrType=\\u0422\\u0438\\u043f \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# recipientAttrName=Наименование атрибута с адресом электронной почты получателей\n-recipientAttrName=\\u041d\\u0430\\u0438\\u043c\\u0435\\u043d\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 \\u0441 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u043c \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# checkRecipients=Поиск получателей\n+# checkRecipients=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00ba \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n checkRecipients=\\u041f\\u043e\\u0438\\u0441\\u043a \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# checkAbout=Обо всём\n+# checkAbout=\\u00d0\\u009e\\u00d0\\u00b1\\u00d0\\u00be \\u00d0\\u00b2\\u00d1\\u0081\\u00d1\\u0091\\u00d0\\u00bc\n checkAbout=\\u041e\\u0431\\u043e \\u0432\\u0441\\u0451\\u043c\n-# userFilter=Фильтр пользователей\n+# userFilter=\\u00d0\\u00a4\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userFilter=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userFilterWarning=Не используйте этот фильтр, если событие не предназначено для пользователей\n+# userFilterWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d1\\u0083\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userFilterWarning=\\u041d\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u0438\\u043b\\u044c\\u0442\\u0440, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userNotifications=Уведомления для пользователей\n+# userNotifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userNotifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# userNotificationsWarning=Не устанавливайте этот флажок, если событие не предназначено для пользователей\n+# userNotificationsWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d1\\u0083\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b6\\u00d0\\u00be\\u00d0\\u00ba, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n userNotificationsWarning=\\u041d\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u043b\\u0430\\u0433, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n-# roleFilter=Фильтр ролей\n+# roleFilter=\\u00d0\\u00a4\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080 \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleFilter=\\u0424\\u0438\\u043b\\u044c\\u0442\\u0440 \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleFilterWarning=Не используйте этот фильтр, если событие не предназначено для ролей\n+# roleFilterWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d1\\u0083\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\\u00d1\\u0082\\u00d1\\u0080, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleFilterWarning=\\u041d\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u0438\\u043b\\u044c\\u0442\\u0440, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleNotifications=Уведомления на основе ролей\n+# roleNotifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00bd\\u00d0\\u00b0 \\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b5 \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleNotifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f \\u043d\\u0430 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0435 \\u0440\\u043e\\u043b\\u0435\\u0439\n-# roleNotificationsWarning=Не устанавливайте этот флажок, если событие не предназначено для ролей\n+# roleNotificationsWarning=\\u00d0\\u009d\\u00d0\\u00b5 \\u00d1\\u0083\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00bb\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u008d\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0082 \\u00d1\\u0084\\u00d0\\u00bb\\u00d0\\u00b0\\u00d0\\u00b6\\u00d0\\u00be\\u00d0\\u00ba, \\u00d0\\u00b5\\u00d1\\u0081\\u00d0\\u00bb\\u00d0\\u00b8 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bd\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00be \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n roleNotificationsWarning=\\u041d\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u044d\\u0442\\u043e\\u0442 \\u0444\\u043b\\u0430\\u0433, \\u0435\\u0441\\u043b\\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0435 \\u043d\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u0440\\u043e\\u043b\\u0435\\u0439\n-# isActive=Активно\n+# isActive=\\u00d0\\u0090\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00bd\\u00d0\\u00be\n isActive=\\u0410\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\n-# checkUserAbout=Пользователи\n+# checkUserAbout=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8\n checkUserAbout=\\u041f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0438\n-# checkRoleAbout=Роли\n+# checkRoleAbout=\\u00d0\\u00a0\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\n checkRoleAbout=\\u0420\\u043e\\u043b\\u0438\n \n-# active=Активно\n+# active=\\u00d0\\u0090\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00b2\\u00d0\\u00bd\\u00d0\\u00be\n active=\\u0410\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e"},{"sha":"ea3ddc4589e5ff963a9d6312b63ccbd8b153efd5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.html","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -27,15 +27,16 @@\n                wicket:id=\"mappingContainer\">\n           <tbody>\n             <tr>\n-              <th><wicket:message key=\"entity\"/></th>\n-              <th><wicket:message key=\"intMappingTypes\"/></th>\n-              <th><wicket:message key=\"intAttrNames\"/></th>\n-              <th><wicket:message key=\"extAttrNames\"/></th>\n+              <th>\n+                <wicket:message key=\"intAttrName\"/>\n+                <span id=\"intAttrNameInfo\" wicket:id=\"intAttrNameInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n+              </th>\n+              <th><wicket:message key=\"extAttrName\"/></th>\n               <th><i class=\"fa fa-repeat\"></i></th>\n               <th><i class=\"fa fa-magic\"></i></th>\n               <th>\n                 <wicket:message key=\"mandatoryCondition\"/>\n-                <span id=\"popover\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n+                <span id=\"jexlInfo\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n               </th>\n               <th><wicket:message key=\"connObjectKey\"/></th>\n               <th><label wicket:id=\"passwordLabel\"/></th>\n@@ -44,13 +45,7 @@\n             </tr>\n             <tr wicket:id=\"mappings\">\n               <td>\n-                <span wicket:id=\"entities\">[entities]</span>\n-              </td>\n-              <td>\n-                <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n-              </td>\n-              <td>\n-                <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n+                <span wicket:id=\"intAttrName\">[intAttrNames]</span>\n               </td>\n               <td>\n                 <span wicket:id=\"extAttrName\">[extAttrName]</span>"},{"sha":"d9e6f1f5020c80a2d0b015c24d3505995185c655","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -20,8 +20,7 @@ __ACCOUNT__=ACCOUNT\n __GROUP__=GROUP\n auxClasses=Auxiliary Classes\n \n-extAttrNames=External attributes\n-intMappingTypes=Internal mapping types\n+extAttrName=External attribute\n entity=Entity\n groupSchema=Role Schema\n connObjectKey=Remote Key\n@@ -32,7 +31,7 @@ purpose=Purpose\n mappingUserSchema=Mapping User Schema\n mappingGroupSchema=Mapping Role Schema\n delete=Delete\n-intAttrNames=Internal attributes\n+intAttrName=Internal attribute\n enforceMandatoryCondition=Enforce mandatory condition\n fieldName=Field name\n "},{"sha":"abaf81f4f08e344688018738990bbbc7924c6642","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_it.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -20,8 +20,7 @@ __ACCOUNT__=ACCOUNT\n __GROUP__=GROUP\n auxClasses=Classi Ausiliarie\n \n-extAttrNames=Attributi esterni\n-intMappingTypes=Tipo mapping interno\n+extAttrName=Attributo esterno\n entity=Entit&agrave;\n groupSchema=Schema Ruolo\n connObjectKey=Chiave remota\n@@ -32,7 +31,7 @@ purpose=Scopo\n mappingUserSchema=Mapping User Schema\n mappingGroupSchema=Mapping Role Schema\n delete=Rimuovi\n-intAttrNames=Attributi interni\n+intAttrName=Attributo interno\n enforceMandatoryCondition=Abilita mandatory condition\n fieldName=Nome campo\n "},{"sha":"ec9a6b6d4f912eccb964e17d2854d83bf9094873","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_pt_BR.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -20,8 +20,7 @@ __ACCOUNT__=ACCOUNT\n __GROUP__=GROUP\n auxClasses=Classes Auxiliares\n \n-extAttrNames=Atributos Externos\n-intMappingTypes=Tipos internos de mapeamentos\n+extAttrName=Atributo Externo\n entity=Entidade\n groupSchema=Esquema de Fun\\u00e7\\u00e3o\n connObjectKey=Remote Key\n@@ -32,7 +31,7 @@ purpose=Prop\\u00f3sito\n mappingUserSchema=Esquema de mapeamento de usu\\u00e1rio\n mappingGroupSchema=Esquema de mapeamento de fun\\u00e7\\u00e3o\n delete=Excluir\n-intAttrNames=Atributos internos\n+intAttrName=Atributo interno\n enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n fieldName=Nome do Campo\n "},{"sha":"6733ef93a9754df8a941343708c7ea5bde08deff","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_ru.properties","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -27,9 +27,7 @@ __GROUP__=\\u0413\\u0420\\u0423\\u041f\\u041f\\u0410\n auxClasses=\\u0412\\u0441\\u043f\\u043e\\u043c\\u043e\\u0433\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0435 \\u043a\\u043b\\u0430\\u0441\\u0441\\u044b\n \n # extAttrNames=\\u00d0\\u0092\\u00d0\\u00bd\\u00d0\\u00b5\\u00d1\\u0088\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008b\n-extAttrNames=\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n-# intMappingTypes=\\u00d0\\u00a2\\u00d0\\u00b8\\u00d0\\u00bf \\u00d0\\u00b2\\u00d0\\u00bd\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00b3\\u00d0\\u00be \\u00d0\\u00bc\\u00d0\\u00b0\\u00d0\\u00bf\\u00d0\\u00bf\\u00d0\\u00b8\\u00d0\\u00bd\\u00d0\\u00b3\\u00d0\\u00b0\n-intMappingTypes=\\u0422\\u0438\\u043f \\u0432\\u043d\\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0435\\u0433\\u043e \\u043c\\u0430\\u043f\\u043f\\u0438\\u043d\\u0433\\u0430\n+extAttrName=\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n # entity=\\u00d0\\u009e\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\n entity=\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\n # groupSchema=\\u00d0\\u0090\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082 \\u00d0\\u00b3\\u00d1\\u0080\\u00d1\\u0083\\u00d0\\u00bf\\u00d0\\u00bf\\u00d1\\u008b\n@@ -50,7 +48,7 @@ mappingGroupSchema=\\u041c\\u0430\\u043f\\u043f\\u0438\\u043d\\u0433 \\u0430\\u0442\\u0440\n # delete=\\u00d0\\u00a3\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c\n delete=\\u0423\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c\n # intAttrNames=\\u00d0\\u0092\\u00d0\\u00bd\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008b\n-intAttrNames=\\u0412\\u043d\\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+intAttrName=\\u0412\\u043d\\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n # enforceMandatoryCondition=\\u00d0\\u009e\\u00d0\\u00b1\\u00d1\\u008f\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b9 (\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00bd\\u00d1\\u0083\\u00d0\\u00b4\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be)\n enforceMandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439 (\\u043f\\u0440\\u0438\\u043d\\u0443\\u0434\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e)\n # fieldName=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008f"},{"sha":"81a445acaf29c88169b3cae493f41bf6a71163cd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -33,7 +33,7 @@\n \n @XmlRootElement(name = \"anyObject\")\n @XmlType\n-public class AnyObjectTO extends AnyTO implements RelatableTO, GroupableTO {\n+public class AnyObjectTO extends AnyTO implements GroupableRelatableTO {\n \n     private static final long serialVersionUID = 8841697496476959639L;\n "},{"sha":"09bc7e6e6d16c685bfc1aa0df8889a2a847aca12","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupableRelatableTO.java","status":"renamed","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -22,7 +22,13 @@\n import java.util.Map;\n import org.apache.commons.lang3.tuple.Pair;\n \n-public interface RelatableTO {\n+public interface GroupableRelatableTO {\n+\n+    Map<String, MembershipTO> getMembershipMap();\n+\n+    List<MembershipTO> getMemberships();\n+\n+    List<String> getDynGroups();\n \n     Map<Pair<String, String>, RelationshipTO> getRelationshipMap();\n ","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelatableTO.java"},{"sha":"7b6a824427921592b225bf0a8d9150b09dc2ab3e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupableTO.java","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java?ref=85dd9063d5b7ac1692c8a2dcedbdd210b435d63d","patch":"@@ -1,31 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import java.util.List;\n-import java.util.Map;\n-\n-public interface GroupableTO {\n-\n-    Map<String, MembershipTO> getMembershipMap();\n-\n-    List<MembershipTO> getMemberships();\n-\n-    List<String> getDynGroups();\n-}"},{"sha":"4ec8181353e45eb9d80daf589f3e71dc9dfc2bcf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -38,7 +38,7 @@\n \n @XmlRootElement(name = \"user\")\n @XmlType\n-public class UserTO extends AnyTO implements RelatableTO, GroupableTO {\n+public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private static final long serialVersionUID = 7791304495192615740L;\n "},{"sha":"361c4e9fd87aa8bae29b73604d65a6e5a49661fc","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -50,7 +50,6 @@\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.provisioning.api.data.ResourceDataBinder;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n@@ -62,6 +61,7 @@\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -276,7 +276,7 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         }\n \n         // 2. build connObjectKeyItem\n-        MappingItem connObjectKeyItem = MappingManagerImpl.getConnObjectKeyItem(init.getRight());\n+        MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(init.getRight());\n         if (connObjectKeyItem == null) {\n             throw new NotFoundException(\n                     \"ConnObjectKey mapping for \" + init.getMiddle() + \" \" + anyKey + \" on resource '\" + key + \"'\");\n@@ -296,7 +296,7 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         Connector connector = connFactory.getConnector(init.getLeft());\n         ConnectorObject connectorObject = connector.getObject(init.getRight().getObjectClass(),\n                 new Uid(connObjectKeyValue),\n-                MappingManagerImpl.buildOperationOptions(mapItems));\n+                MappingUtils.buildOperationOptions(mapItems));\n         if (connectorObject == null) {\n             throw new NotFoundException(\n                     \"Object \" + connObjectKeyValue + \" with class \" + init.getRight().getObjectClass()"},{"sha":"9490c326019470c427f6e672f268dce72123155a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -37,7 +37,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.search.SearchCondConverter;\n import org.apache.syncope.core.provisioning.api.utils.FormatUtils;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n@@ -59,6 +58,7 @@\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -271,7 +271,7 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n             AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n             for (final ExternalResource resource : anyUtils.getAllResources(any)) {\n                 Provision provision = resource.getProvision(any.getType());\n-                MappingItem connObjectKeyItem = MappingManagerImpl.getConnObjectKeyItem(provision);\n+                MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n                 final String connObjectKeyValue = connObjectKeyItem == null\n                         ? StringUtils.EMPTY\n                         : mappingManager.getConnObjectKeyValue(any, provision);\n@@ -280,7 +280,7 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n                     Connector connector = connFactory.getConnector(resource);\n                     ConnectorObject connectorObject = connector.getObject(provision.getObjectClass(),\n                             new Uid(connObjectKeyValue),\n-                            MappingManagerImpl.buildOperationOptions(provision.getMapping().getItems().iterator()));\n+                            MappingUtils.buildOperationOptions(provision.getMapping().getItems().iterator()));\n \n                     if (connectorObject == null) {\n                         // 2. not found on resource?"},{"sha":"76ce8edb5090d38f9fa3494487299541ed0ae4ae","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/SchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -25,7 +25,7 @@\n \n public interface SchemaDAO<S extends Schema> extends DAO<S> {\n \n-    S find(String name);\n+    S find(String key);\n \n     List<S> findByAnyTypeClasses(Collection<AnyTypeClass> anyTypeClasses);\n "},{"sha":"99b9d22f8cde40935405d237650088f9531c21de","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyUtils.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.jpa.entity;\n \n import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n@@ -75,15 +76,15 @@ public class JPAAnyUtils implements AnyUtils {\n \n     private static void initFieldNames(final Class<?> entityClass, final Set<String> keys) {\n         List<Class<?>> classes = ClassUtils.getAllSuperclasses(entityClass);\n-        if (!classes.contains(JPAUser.class)) {\n-            classes.add(JPAUser.class);\n-        }\n+        classes.add(entityClass);\n         for (Class<?> clazz : classes) {\n             for (Field field : clazz.getDeclaredFields()) {\n-                if (!Collection.class.isAssignableFrom(field.getType())\n+                if (!Modifier.isStatic(field.getModifiers())\n+                        && !field.getName().startsWith(\"pc\")\n+                        && !Collection.class.isAssignableFrom(field.getType())\n                         && !Map.class.isAssignableFrom(field.getType())) {\n \n-                    keys.add(field.getName());\n+                    keys.add(\"id\".equals(field.getName()) ? \"key\" : field.getName());\n                 }\n             }\n         }"},{"sha":"47dac59776030d59807cfa37265761ea71ac0534","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -52,13 +52,13 @@ public class JPAMappingItem extends AbstractGeneratedKeyEntity implements Mappin\n     @ManyToOne\n     private JPAMapping mapping;\n \n-    @Column(nullable = true)\n+    @NotNull\n     private String intAttrName;\n \n     /**\n      * Target resource's field to be mapped.\n      */\n-    @Column(nullable = true)\n+    @NotNull\n     private String extAttrName;\n \n     /**"},{"sha":"b8f2cabafba1c72915a0960fbb298746261818b5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ExternalResourceValidator.java","status":"modified","additions":2,"deletions":100,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -23,115 +23,19 @@\n import javax.validation.ConstraintValidatorContext;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n-import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAAnyUtilsFactory;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser.IntAttrName;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n \n public class ExternalResourceValidator extends AbstractValidator<ExternalResourceCheck, ExternalResource> {\n \n-    private static final AnyUtilsFactory ANY_UTILS_FACTORY = new JPAAnyUtilsFactory();\n-\n-    private boolean isValid(final MappingItem item, final ConstraintValidatorContext context) {\n-        if (StringUtils.isBlank(item.getExtAttrName())) {\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping, item + \" - extAttrName is null\")).\n-                    addPropertyNode(\"extAttrName\").addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        if (item.getPurpose() == null) {\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping, item + \" - purpose is null\")).\n-                    addPropertyNode(\"purpose\").addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        if (StringUtils.isBlank(item.getIntAttrName())) {\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping, item + \" - intAttrName is null\")).\n-                    addPropertyNode(\"intAttrName\").addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        IntAttrName intAttrName = null;\n-        try {\n-            intAttrName = IntAttrNameParser.parse(\n-                    item.getIntAttrName(),\n-                    ANY_UTILS_FACTORY,\n-                    item.getMapping().getProvision().getAnyType().getKind());\n-        } catch (IllegalArgumentException e) {\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping, item + \" - \" + e.getMessage())).\n-                    addPropertyNode(\"intAttrName\").addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        if (intAttrName.getSchemaType() == SchemaType.DERIVED\n-                && item.getPurpose() != MappingPurpose.PROPAGATION) {\n-\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidMapping,\n-                            \" - only \" + MappingPurpose.PROPAGATION.name() + \" allowed for derived\")).\n-                    addPropertyNode(\"purpose\").addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        if (intAttrName.getSchemaType() == SchemaType.VIRTUAL) {\n-            if (item.getPurpose() != MappingPurpose.PROPAGATION) {\n-                context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidMapping,\n-                                \" - only \" + MappingPurpose.PROPAGATION.name() + \" allowed for virtual\")).\n-                        addPropertyNode(\"purpose\").addConstraintViolation();\n-\n-                return false;\n-            }\n-\n-            if (item.getMapping() == null) {\n-                context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidMapping,\n-                                \" - need to explicitly set mapping for further checks\")).\n-                        addPropertyNode(\"mapping\").addConstraintViolation();\n-\n-                return false;\n-            }\n-\n-            VirSchema schema = ApplicationContextProvider.getBeanFactory().getBean(VirSchemaDAO.class).\n-                    find(item.getIntAttrName());\n-            if (schema != null && schema.getProvision().equals(item.getMapping().getProvision())) {\n-                context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidMapping,\n-                                \" - no need to map virtual schema on linking resource\")).\n-                        addPropertyNode(\"intAttrName\").addConstraintViolation();\n-\n-                return false;\n-            }\n-        }\n-\n-        return true;\n-    }\n-\n-    private boolean isValid(final AnyType anyType, final Mapping mapping, final ConstraintValidatorContext context) {\n+    private boolean isValid(final Mapping mapping, final ConstraintValidatorContext context) {\n         if (mapping == null) {\n             return true;\n         }\n@@ -154,8 +58,6 @@ public boolean evaluate(final MappingItem item) {\n \n         int passwords = 0;\n         for (MappingItem item : mapping.getItems()) {\n-            isValid &= isValid(item, context);\n-\n             if (item.isPassword()) {\n                 passwords++;\n             }\n@@ -232,7 +134,7 @@ public boolean evaluate(final Provision provision) {\n                 if (provision.getObjectClass() != null) {\n                     objectClasses.add(provision.getObjectClass().getObjectClassValue());\n                 }\n-                return isValid(provision.getAnyType(), provision.getMapping(), context);\n+                return isValid(provision.getMapping(), context);\n             }\n         });\n "},{"sha":"47636deb3a475c83de45f9a9471681b99fb18e66","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java","status":"modified","additions":1,"deletions":64,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -159,32 +159,6 @@ public void saveInvalidMappingIntAttr() {\n         resourceDAO.save(resource);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n-    public void saveInvalidConnObjectKeyMapping() {\n-        ExternalResource resource = entityFactory.newEntity(ExternalResource.class);\n-        resource.setKey(\"ws-target-resource-basic-save-invalid\");\n-\n-        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n-        resource.setConnector(connector);\n-\n-        Provision provision = entityFactory.newEntity(Provision.class);\n-        provision.setAnyType(anyTypeDAO.findUser());\n-        provision.setObjectClass(ObjectClass.ACCOUNT);\n-        provision.setResource(resource);\n-        resource.add(provision);\n-\n-        Mapping mapping = entityFactory.newEntity(Mapping.class);\n-        mapping.setProvision(provision);\n-        provision.setMapping(mapping);\n-\n-        MappingItem connObjectKey = entityFactory.newEntity(MappingItem.class);\n-        connObjectKey.setConnObjectKey(true);\n-        mapping.setConnObjectKeyItem(connObjectKey);\n-\n-        // save the resource\n-        resourceDAO.save(resource);\n-    }\n-\n     @Test(expected = InvalidEntityException.class)\n     public void saveInvalidMappingExtAttr() {\n         ExternalResource resource = entityFactory.newEntity(ExternalResource.class);\n@@ -274,21 +248,13 @@ public void saveVirtualMapping() {\n         MappingItem virtualMapItem = entityFactory.newEntity(MappingItem.class);\n         virtualMapItem.setIntAttrName(\"virtualReadOnly\");\n         virtualMapItem.setExtAttrName(\"TEST\");\n-        virtualMapItem.setPurpose(MappingPurpose.BOTH);\n+        virtualMapItem.setPurpose(MappingPurpose.PROPAGATION);\n         virtualMapItem.setMapping(mapping);\n         mapping.add(virtualMapItem);\n \n         ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n         resource.setConnector(connector);\n \n-        try {\n-            resourceDAO.save(resource);\n-            fail();\n-        } catch (InvalidEntityException e) {\n-            assertNotNull(e);\n-        }\n-\n-        virtualMapItem.setPurpose(MappingPurpose.PROPAGATION);\n         resourceDAO.save(resource);\n     }\n \n@@ -358,33 +324,4 @@ public void issueSYNCOPE418() {\n             assertTrue(e.hasViolation(EntityViolationType.InvalidKey));\n         }\n     }\n-\n-    @Test(expected = InvalidEntityException.class)\n-    public void issueSYNCOPE645() {\n-        ExternalResource resource = entityFactory.newEntity(ExternalResource.class);\n-        resource.setKey(\"ws-target-resource-basic-save-invalid\");\n-\n-        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n-        resource.setConnector(connector);\n-\n-        Provision provision = entityFactory.newEntity(Provision.class);\n-        provision.setAnyType(anyTypeDAO.findUser());\n-        provision.setObjectClass(ObjectClass.ACCOUNT);\n-        provision.setResource(resource);\n-        resource.add(provision);\n-\n-        Mapping mapping = entityFactory.newEntity(Mapping.class);\n-        mapping.setProvision(provision);\n-        provision.setMapping(mapping);\n-\n-        final MappingItem item = entityFactory.newEntity(MappingItem.class);\n-        item.setIntAttrName(\"icon\");\n-        item.setExtAttrName(\"icon\");\n-        item.setPurpose(MappingPurpose.BOTH);\n-        mapping.setConnObjectKeyItem(item);\n-\n-        // save the resource\n-        ExternalResource actual = resourceDAO.save(resource);\n-        assertNotNull(actual);\n-    }\n }"},{"sha":"614033c842a4a01f4ff77f9704182fcaa4d84e58","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -295,6 +295,7 @@ public void issue243() {\n         int origMapItems = csv.getProvision(anyTypeDAO.findUser()).getMapping().getItems().size();\n \n         MappingItem newMapItem = entityFactory.newEntity(MappingItem.class);\n+        newMapItem.setIntAttrName(\"TEST\");\n         newMapItem.setExtAttrName(\"TEST\");\n         newMapItem.setPurpose(MappingPurpose.PROPAGATION);\n         csv.getProvision(anyTypeDAO.findUser()).getMapping().add(newMapItem);"},{"sha":"621ed82cd893a9ad1e520a4431538ea815a2df06","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -898,10 +898,7 @@ under the License.\n                intAttrName=\"csvuserid\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"63151b89-2eb3-4980-a682-0215d54ab4a2\" extAttrName=\"theirgroup\" mapping_id=\"538c27dc-d260-4c53-9fc8-bf02ee226911\"\n-               intAttrName=\"rderToBePropagated\" mandatoryCondition=\"false\"\n-               connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n-  <MappingItem id=\"b6079a7b-ac40-481d-81c9-2a292bab0092\" extAttrName=\"membership\" mapping_id=\"538c27dc-d260-4c53-9fc8-bf02ee226911\"\n-               intAttrName=\"mderToBePropagated\" mandatoryCondition=\"false\"\n+               intAttrName=\"groups[root].rderToBePropagated\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n                          \n   <Provision id=\"1b53c74e-6a63-49ef-b2f1-96eeb7f1bbb8\" resource_id=\"ws-target-resource-update-resetsynctoken\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"\n@@ -920,10 +917,10 @@ under the License.\n   <Mapping id=\"ae1c77c3-2f1d-4258-ad06-710bb09041a9\" provision_id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\"\n            connObjectLink=\"&apos;uid=&apos; + username + &apos;,ou=people,o=isp&apos;\"/>\n   <MappingItem id=\"9ff7d686-452c-4cec-a475-c1137c5d88c7\" connObjectKey=\"1\" password=\"0\" mapping_id=\"ae1c77c3-2f1d-4258-ad06-710bb09041a9\"\n-               extAttrName=\"cn\" intAttrName=\"Username\" intAttrName=\"username\"\n+               extAttrName=\"cn\" intAttrName=\"username\"\n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n   <MappingItem id=\"73d97083-cfda-44e6-be62-3f9ac558b5eb\" connObjectKey=\"0\" password=\"1\" mapping_id=\"ae1c77c3-2f1d-4258-ad06-710bb09041a9\"\n-               extAttrName=\"__PASSWORD__\" intAttrName=\"Password\" intAttrName=\"password\"\n+               extAttrName=\"__PASSWORD__\" intAttrName=\"password\"\n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n   <MappingItem id=\"cf0a222c-36ea-41e6-987c-7908614ccd23\" connObjectKey=\"0\" password=\"0\" mapping_id=\"ae1c77c3-2f1d-4258-ad06-710bb09041a9\"\n                extAttrName=\"sn\" intAttrName=\"surname\"\n@@ -961,7 +958,7 @@ under the License.\n                extAttrName=\"cn\" intAttrName=\"name\"\n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n   <MappingItem id=\"2\" connObjectKey=\"0\" password=\"0\" mapping_id=\"128412c8-be4f-4d7b-8bed-5ab89134f718\"\n-               extAttrName=\"owner\" intAttrName=\"owner\"\n+               extAttrName=\"owner\" intAttrName=\"userOwner\"\n                mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n   <MappingItem id=\"3\" connObjectKey=\"0\" password=\"0\" mapping_id=\"128412c8-be4f-4d7b-8bed-5ab89134f718\"\n                extAttrName=\"description\" intAttrName=\"title\"\n@@ -985,7 +982,7 @@ under the License.\n                extAttrName=\"SURNAME\" intAttrName=\"surname\" \n                mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"3ac0ecaf-d9a1-4fc1-9ae9-84dc34576810\" connObjectKey=\"0\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n-               extAttrName=\"USERNAME\" intAttrName=\"Username\" intAttrName=\"username\" \n+               extAttrName=\"USERNAME\" intAttrName=\"username\" \n                mandatoryCondition=\"false\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"e7215305-93c9-460b-b862-46f7b60de72d\" connObjectKey=\"0\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n                extAttrName=\"EMAIL\" intAttrName=\"userId\" "},{"sha":"ba726c6581638a38a75c1bc89e6f5194f9c53af4","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -155,13 +155,13 @@ we are happy to inform you that the password request was execute successfully fo\n &lt;/body&gt;\n &lt;/html&gt;\"/>\n \n-  <Notification id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+  <Notification id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n   <AnyAbout id=\"0d4e37a1-a4f4-4865-afcb-4be01da3da53\" anyType_id=\"USER\" notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" filter=\"token!=$null\"/>\n   <Notification_events notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n-  <Notification id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n+  <Notification id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n   <Notification_events notification_id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>"},{"sha":"1dfa6544e5ee583ab9bc6bc99bdf78cb58dcf5f2","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/IntAttrName.java","status":"added","additions":103,"deletions":0,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrName.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api;\n+\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+\n+public class IntAttrName {\n+\n+    private AnyTypeKind anyTypeKind;\n+\n+    private String field;\n+\n+    private SchemaType schemaType;\n+\n+    private String schemaName;\n+\n+    private String enclosingGroup;\n+\n+    private String relatedAnyObject;\n+\n+    private String membershipOfGroup;\n+\n+    public AnyTypeKind getAnyTypeKind() {\n+        return anyTypeKind;\n+    }\n+\n+    public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n+        this.anyTypeKind = anyTypeKind;\n+    }\n+\n+    public String getField() {\n+        return field;\n+    }\n+\n+    public void setField(final String field) {\n+        this.field = field;\n+    }\n+\n+    public SchemaType getSchemaType() {\n+        return schemaType;\n+    }\n+\n+    public void setSchemaType(final SchemaType schemaType) {\n+        this.schemaType = schemaType;\n+    }\n+\n+    public String getSchemaName() {\n+        return schemaName;\n+    }\n+\n+    public void setSchemaName(final String schemaName) {\n+        this.schemaName = schemaName;\n+    }\n+\n+    public String getEnclosingGroup() {\n+        return enclosingGroup;\n+    }\n+\n+    public void setEnclosingGroup(final String enclosingGroup) {\n+        this.enclosingGroup = enclosingGroup;\n+    }\n+\n+    public String getRelatedAnyObject() {\n+        return relatedAnyObject;\n+    }\n+\n+    public void setRelatedAnyObject(final String relatedAnyObject) {\n+        this.relatedAnyObject = relatedAnyObject;\n+    }\n+\n+    public String getMembershipOfGroup() {\n+        return membershipOfGroup;\n+    }\n+\n+    public void setMembershipOfGroup(final String membershipOfGroup) {\n+        this.membershipOfGroup = membershipOfGroup;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ToStringBuilder.reflectionToString(this, ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+\n+}"},{"sha":"4beb5ce83b419c4359ba173fb91ace0acdb2a6ae","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/IntAttrNameParser.java","status":"removed","additions":0,"deletions":140,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrNameParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85dd9063d5b7ac1692c8a2dcedbdd210b435d63d/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrNameParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FIntAttrNameParser.java?ref=85dd9063d5b7ac1692c8a2dcedbdd210b435d63d","patch":"@@ -1,140 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.api;\n-\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import org.apache.commons.lang3.builder.ToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n-\n-public final class IntAttrNameParser {\n-\n-    private static final Pattern ENCLOSING_GROUP_PATTERN = Pattern.compile(\"^groups\\\\[[\\\\w]+\\\\]\\\\.[\\\\w]+\");\n-\n-    private static final Pattern RELATED_ANY_OBJECT_PATTERN = Pattern.compile(\"^anyObjects\\\\[[\\\\w]+\\\\]\\\\.[\\\\w]+\");\n-\n-    private static final Pattern MEMBERSHIP_PATTERN = Pattern.compile(\"^\\\\[[\\\\w]+\\\\]\\\\.[\\\\w]+\");\n-\n-    public static class IntAttrName {\n-\n-        private AnyTypeKind anyTypeKind;\n-\n-        private String field;\n-\n-        private SchemaType schemaType;\n-\n-        private String schemaName;\n-\n-        private String enclosingGroup;\n-\n-        private String relatedAnyObject;\n-\n-        private String membershipOfGroup;\n-\n-        public AnyTypeKind getAnyTypeKind() {\n-            return anyTypeKind;\n-        }\n-\n-        public String getField() {\n-            return field;\n-        }\n-\n-        public SchemaType getSchemaType() {\n-            return schemaType;\n-        }\n-\n-        public String getSchemaName() {\n-            return schemaName;\n-        }\n-\n-        public String getEnclosingGroup() {\n-            return enclosingGroup;\n-        }\n-\n-        public String getRelatedAnyObject() {\n-            return relatedAnyObject;\n-        }\n-\n-        public String getMembershipOfGroup() {\n-            return membershipOfGroup;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return ToStringBuilder.reflectionToString(field, ToStringStyle.MULTI_LINE_STYLE);\n-        }\n-\n-    }\n-\n-    private static void setFieldOrSchemaName(\n-            final String fieldOrSchemaName, final AnyUtils anyUtils, final IntAttrName result) {\n-\n-        if (anyUtils.isFieldName(fieldOrSchemaName)) {\n-            result.field = fieldOrSchemaName;\n-        } else {\n-            result.schemaName = fieldOrSchemaName;\n-        }\n-    }\n-\n-    public static IntAttrName parse(\n-            final String intAttrName,\n-            final AnyUtilsFactory anyUtilsFactory,\n-            final AnyTypeKind provisionAnyTypeKind) {\n-\n-        IntAttrName result = new IntAttrName();\n-\n-        if (intAttrName.indexOf('.') == -1) {\n-            result.anyTypeKind = provisionAnyTypeKind;\n-            setFieldOrSchemaName(intAttrName, anyUtilsFactory.getInstance(provisionAnyTypeKind), result);\n-        } else {\n-            Matcher matcher = ENCLOSING_GROUP_PATTERN.matcher(intAttrName);\n-            if (matcher.matches()) {\n-                result.anyTypeKind = AnyTypeKind.GROUP;\n-                result.enclosingGroup = matcher.group(1);\n-                setFieldOrSchemaName(matcher.group(2), anyUtilsFactory.getInstance(AnyTypeKind.GROUP), result);\n-            } else {\n-                matcher = RELATED_ANY_OBJECT_PATTERN.matcher(intAttrName);\n-                if (matcher.matches()) {\n-                    result.anyTypeKind = AnyTypeKind.ANY_OBJECT;\n-                    result.relatedAnyObject = matcher.group(1);\n-                    setFieldOrSchemaName(matcher.group(2), anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT), result);\n-                } else {\n-                    matcher = MEMBERSHIP_PATTERN.matcher(intAttrName);\n-                    if (matcher.matches()) {\n-                        result.anyTypeKind = AnyTypeKind.USER;\n-                        result.membershipOfGroup = matcher.group(1);\n-                        setFieldOrSchemaName(matcher.group(2), anyUtilsFactory.getInstance(AnyTypeKind.USER), result);\n-                    } else {\n-                        throw new IllegalArgumentException(\"Unparsable expression: \" + intAttrName);\n-                    }\n-                }\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    private IntAttrNameParser() {\n-        // private constructor for static utility class\n-    }\n-}"},{"sha":"8d0be03ef74fee51adae4ca8da20642d68fdd054","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/MappingManager.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FMappingManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FMappingManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FMappingManager.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -41,14 +41,15 @@ public interface MappingManager {\n     String getConnObjectKeyValue(Any<?> any, Provision provision);\n \n     /**\n-     * Get attribute values for the given {@link MappingItem} and any objects.\n+     * Get attribute values for the given {@link MappingItem} and any object.\n      *\n      * @param provision provision information\n      * @param mapItem mapping item\n-     * @param anys any objects\n+     * @param intAttrName int attr name\n+     * @param any any object\n      * @return attribute values.\n      */\n-    List<PlainAttrValue> getIntValues(Provision provision, MappingItem mapItem, List<Any<?>> anys);\n+    List<PlainAttrValue> getIntValues(Provision provision, MappingItem mapItem, IntAttrName intAttrName, Any<?> any);\n \n     /**\n      * Prepare attributes for sending to a connector instance."},{"sha":"d8cb012f001f1b28f6aee4183a233982f701a8d3","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/MappingItemTransformer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -36,13 +36,13 @@ public interface MappingItemTransformer {\n      * Invoked while preparing attribute values to be sent out to external resource during propagation.\n      *\n      * @param mappingItem mapping item\n-     * @param anys any objects\n+     * @param any any object\n      * @param values original values\n      * @return transformed values\n      */\n     List<PlainAttrValue> beforePropagation(\n             MappingItem mappingItem,\n-            List<Any<?>> anys,\n+            Any<?> any,\n             List<PlainAttrValue> values);\n \n     /**"},{"sha":"83a97e685ed11a6758e83c125a68100aaff5ea2f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -35,10 +35,11 @@\n import org.apache.syncope.core.provisioning.api.utils.ConnPoolConfUtils;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.api.APIConfiguration;\n@@ -479,7 +480,7 @@ public SortKey transform(final OrderByClause clause) {\n             }\n         }, new ArrayList<SortKey>(orderBy.size())));\n \n-        builder.setAttributesToGet(MappingManagerImpl.buildOperationOptions(mapItems).getAttributesToGet());\n+        builder.setAttributesToGet(MappingUtils.buildOperationOptions(mapItems).getAttributesToGet());\n \n         search(objectClass, filter, handler, builder.build());\n     }"},{"sha":"13af60a80f80b7d9ff63d5fd15b89e83dad60559","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/IntAttrNameParser.java","status":"added","additions":120,"deletions":0,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n+import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n+import org.apache.syncope.core.persistence.api.entity.Schema;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+public class IntAttrNameParser {\n+\n+    private static final Pattern ENCLOSING_GROUP_PATTERN = Pattern.compile(\"^groups\\\\[([\\\\w]+)\\\\]\\\\.([\\\\w]+)\");\n+\n+    private static final Pattern RELATED_ANY_OBJECT_PATTERN = Pattern.compile(\"^anyObjects\\\\[([\\\\w]+)\\\\]\\\\.([\\\\w]+)\");\n+\n+    private static final Pattern MEMBERSHIP_PATTERN = Pattern.compile(\"^memberships\\\\[([\\\\w]+)\\\\]\\\\.([\\\\w]+)\");\n+\n+    @Autowired\n+    private PlainSchemaDAO plainSchemaDAO;\n+\n+    @Autowired\n+    private DerSchemaDAO derSchemaDAO;\n+\n+    @Autowired\n+    private VirSchemaDAO virSchemaDAO;\n+\n+    @Autowired\n+    private AnyUtilsFactory anyUtilsFactory;\n+\n+    private SchemaType find(final String key) {\n+        Schema schema = plainSchemaDAO.find(key);\n+        if (schema == null) {\n+            schema = derSchemaDAO.find(key);\n+            if (schema == null) {\n+                schema = virSchemaDAO.find(key);\n+                if (schema == null) {\n+                    return null;\n+                } else {\n+                    return SchemaType.VIRTUAL;\n+                }\n+            } else {\n+                return SchemaType.DERIVED;\n+            }\n+        } else {\n+            return SchemaType.PLAIN;\n+        }\n+    }\n+\n+    private void setFieldOrSchemaName(\n+            final String fieldOrSchemaName,\n+            final AnyTypeKind anyTypeKind,\n+            final IntAttrName result) {\n+\n+        if (anyUtilsFactory.getInstance(anyTypeKind).isFieldName(fieldOrSchemaName)) {\n+            result.setField(fieldOrSchemaName);\n+        } else {\n+            result.setSchemaType(find(fieldOrSchemaName));\n+            result.setSchemaName(fieldOrSchemaName);\n+        }\n+    }\n+\n+    @Transactional(readOnly = true)\n+    public IntAttrName parse(final String intAttrName, final AnyTypeKind provisionAnyTypeKind) {\n+        IntAttrName result = new IntAttrName();\n+\n+        if (intAttrName.indexOf('.') == -1) {\n+            result.setAnyTypeKind(provisionAnyTypeKind);\n+            setFieldOrSchemaName(intAttrName, result.getAnyTypeKind(), result);\n+        } else {\n+            Matcher matcher = ENCLOSING_GROUP_PATTERN.matcher(intAttrName);\n+            if (matcher.matches()) {\n+                result.setAnyTypeKind(AnyTypeKind.GROUP);\n+                result.setEnclosingGroup(matcher.group(1));\n+                setFieldOrSchemaName(matcher.group(2), result.getAnyTypeKind(), result);\n+            } else {\n+                matcher = RELATED_ANY_OBJECT_PATTERN.matcher(intAttrName);\n+                if (matcher.matches()) {\n+                    result.setAnyTypeKind(AnyTypeKind.ANY_OBJECT);\n+                    result.setRelatedAnyObject(matcher.group(1));\n+                    setFieldOrSchemaName(matcher.group(2), result.getAnyTypeKind(), result);\n+                } else {\n+                    matcher = MEMBERSHIP_PATTERN.matcher(intAttrName);\n+                    if (matcher.matches()) {\n+                        result.setAnyTypeKind(AnyTypeKind.USER);\n+                        result.setMembershipOfGroup(matcher.group(1));\n+                        setFieldOrSchemaName(matcher.group(2), result.getAnyTypeKind(), result);\n+                    } else {\n+                        throw new IllegalArgumentException(\"Unparsable expression: \" + intAttrName);\n+                    }\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"7d38624a6ac12840ce63c30353cf2e8d7928b078","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":237,"deletions":386,"changes":623,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -21,24 +21,21 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.collections4.ListUtils;\n-import org.apache.commons.jexl3.JexlContext;\n-import org.apache.commons.jexl3.MapContext;\n-import org.apache.commons.lang3.ClassUtils;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.reflect.FieldUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.provisioning.api.utils.policy.InvalidPasswordRuleConf;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n@@ -48,53 +45,46 @@\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.spring.security.Encryptor;\n-import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n+import org.apache.syncope.core.persistence.api.entity.GroupableRelatable;\n+import org.apache.syncope.core.persistence.api.entity.Membership;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.DerAttrHandler;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser.IntAttrName;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n-import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n-import org.identityconnectors.framework.common.objects.Name;\n-import org.identityconnectors.framework.common.objects.OperationOptions;\n-import org.identityconnectors.framework.common.objects.OperationOptionsBuilder;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n \n @Component\n public class MappingManagerImpl implements MappingManager {\n@@ -116,10 +106,10 @@ public class MappingManagerImpl implements MappingManager {\n     private VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    private UserDAO userDAO;\n+    private AnyObjectDAO anyObjectDAO;\n \n     @Autowired\n-    private AnyObjectDAO anyObjectDAO;\n+    private GroupDAO groupDAO;\n \n     @Autowired\n     private DerAttrHandler derAttrHandler;\n@@ -139,201 +129,9 @@ public class MappingManagerImpl implements MappingManager {\n     @Autowired\n     private AnyUtilsFactory anyUtilsFactory;\n \n-    public static MappingItem getConnObjectKeyItem(final Provision provision) {\n-        Mapping mapping = null;\n-        if (provision != null) {\n-            mapping = provision.getMapping();\n-        }\n-\n-        return mapping == null\n-                ? null\n-                : mapping.getConnObjectKeyItem();\n-    }\n-\n-    private static List<MappingItem> getMappingItems(final Provision provision, final MappingPurpose purpose) {\n-        List<? extends MappingItem> items = Collections.<MappingItem>emptyList();\n-        if (provision != null) {\n-            items = provision.getMapping().getItems();\n-        }\n-\n-        List<MappingItem> result = new ArrayList<>();\n-\n-        switch (purpose) {\n-            case PULL:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.PROPAGATION != item.getPurpose()\n-                            && MappingPurpose.NONE != item.getPurpose()) {\n-\n-                        result.add(item);\n-                    }\n-                }\n-                break;\n-\n-            case PROPAGATION:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.PULL != item.getPurpose()\n-                            && MappingPurpose.NONE != item.getPurpose()) {\n-\n-                        result.add(item);\n-                    }\n-                }\n-                break;\n-\n-            case BOTH:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.NONE != item.getPurpose()) {\n-                        result.add(item);\n-                    }\n-                }\n-                break;\n-\n-            case NONE:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.NONE == item.getPurpose()) {\n-                        result.add(item);\n-                    }\n-                }\n-                break;\n-\n-            default:\n-        }\n-\n-        return result;\n-    }\n-\n-    public static List<MappingItem> getBothMappingItems(final Provision provision) {\n-        return getMappingItems(provision, MappingPurpose.BOTH);\n-    }\n-\n-    public static List<MappingItem> getPropagationMappingItems(final Provision provision) {\n-        return getMappingItems(provision, MappingPurpose.PROPAGATION);\n-    }\n-\n-    public static List<MappingItem> getPullMappingItems(final Provision provision) {\n-        return getMappingItems(provision, MappingPurpose.PULL);\n-    }\n-\n-    /**\n-     * Build __NAME__ for propagation. First look if there ia a defined connObjectLink for the given resource (and in\n-     * this case evaluate as JEXL); otherwise, take given connObjectKey.\n-     *\n-     * @param any given any object\n-     * @param provision external resource\n-     * @param connObjectKey connector object key\n-     * @return the value to be propagated as __NAME__\n-     */\n-    public static Name evaluateNAME(final Any<?> any, final Provision provision, final String connObjectKey) {\n-        if (StringUtils.isBlank(connObjectKey)) {\n-            // LOG error but avoid to throw exception: leave it to the external resource\n-            LOG.error(\"Missing ConnObjectKey for '{}': \", provision.getResource());\n-        }\n-\n-        // Evaluate connObjectKey expression\n-        String connObjectLink = provision == null || provision.getMapping() == null\n-                ? null\n-                : provision.getMapping().getConnObjectLink();\n-        String evalConnObjectLink = null;\n-        if (StringUtils.isNotBlank(connObjectLink)) {\n-            JexlContext jexlContext = new MapContext();\n-            JexlUtils.addFieldsToContext(any, jexlContext);\n-            JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n-            JexlUtils.addDerAttrsToContext(any, jexlContext);\n-            evalConnObjectLink = JexlUtils.evaluate(connObjectLink, jexlContext);\n-        }\n-\n-        // If connObjectLink evaluates to an empty string, just use the provided connObjectKey as Name(),\n-        // otherwise evaluated connObjectLink expression is taken as Name().\n-        Name name;\n-        if (StringUtils.isBlank(evalConnObjectLink)) {\n-            // add connObjectKey as __NAME__ attribute ...\n-            LOG.debug(\"Add connObjectKey [{}] as __NAME__\", connObjectKey);\n-            name = new Name(connObjectKey);\n-        } else {\n-            LOG.debug(\"Add connObjectLink [{}] as __NAME__\", evalConnObjectLink);\n-            name = new Name(evalConnObjectLink);\n-\n-            // connObjectKey not propagated: it will be used to set the value for __UID__ attribute\n-            LOG.debug(\"connObjectKey will be used just as __UID__ attribute\");\n-        }\n-\n-        return name;\n-    }\n-\n-    public static List<MappingItemTransformer> getMappingItemTransformers(final MappingItem mappingItem) {\n-        List<MappingItemTransformer> result = new ArrayList<>();\n-\n-        // First consider the JEXL transformation expressions\n-        JEXLMappingItemTransformer jexlTransformer = null;\n-        if (StringUtils.isNotBlank(mappingItem.getPropagationJEXLTransformer())\n-                || StringUtils.isNotBlank(mappingItem.getPullJEXLTransformer())) {\n-\n-            try {\n-                jexlTransformer = (JEXLMappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n-                        createBean(JEXLMappingItemTransformer.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-\n-                jexlTransformer.setPropagationJEXL(mappingItem.getPropagationJEXLTransformer());\n-                jexlTransformer.setPullJEXL(mappingItem.getPullJEXLTransformer());\n-            } catch (Exception e) {\n-                LOG.error(\"Could not instantiate {}, ignoring...\", JEXLMappingItemTransformer.class.getName(), e);\n-            }\n-        }\n-        if (jexlTransformer != null) {\n-            result.add(jexlTransformer);\n-        }\n-\n-        // Then other custom tranaformers\n-        for (String className : mappingItem.getMappingItemTransformerClassNames()) {\n-            try {\n-                Class<?> transformerClass = ClassUtils.getClass(className);\n-\n-                result.add((MappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n-                        createBean(transformerClass, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false));\n-            } catch (Exception e) {\n-                LOG.error(\"Could not instantiate {}, ignoring...\", className, e);\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    /**\n-     * Build options for requesting all mapped connector attributes.\n-     *\n-     * @param mapItems mapping items\n-     * @return options for requesting all mapped connector attributes\n-     * @see OperationOptions\n-     */\n-    public static OperationOptions buildOperationOptions(final Iterator<? extends MappingItem> mapItems) {\n-        OperationOptionsBuilder builder = new OperationOptionsBuilder();\n-\n-        Set<String> attrsToGet = new HashSet<>();\n-        attrsToGet.add(Name.NAME);\n-        attrsToGet.add(Uid.NAME);\n-        attrsToGet.add(OperationalAttributes.ENABLE_NAME);\n-\n-        while (mapItems.hasNext()) {\n-            MappingItem mapItem = mapItems.next();\n-            if (mapItem.getPurpose() != MappingPurpose.NONE) {\n-                attrsToGet.add(mapItem.getExtAttrName());\n-            }\n-        }\n-\n-        builder.setAttributesToGet(attrsToGet);\n-        // -------------------------------------\n-\n-        return builder.build();\n-    }\n+    @Autowired\n+    private IntAttrNameParser intAttrNameParser;\n \n-    /**\n-     * Prepare attributes for sending to a connector instance.\n-     *\n-     * @param any given any object\n-     * @param password clear-text password\n-     * @param changePwd whether password should be included for propagation attributes or not\n-     * @param enable whether any object must be enabled or not\n-     * @param provision provision information\n-     * @return connObjectLink + prepared attributes\n-     */\n     @Transactional(readOnly = true)\n     @Override\n     public Pair<String, Set<Attribute>> prepareAttrs(\n@@ -349,42 +147,44 @@ public Pair<String, Set<Attribute>> prepareAttrs(\n         Set<Attribute> attributes = new HashSet<>();\n         String connObjectKey = null;\n \n-        for (MappingItem mappingItem : getMappingItems(provision, MappingPurpose.PROPAGATION)) {\n-            LOG.debug(\"Processing expression '{}'\", mappingItem.getIntAttrName());\n+        for (MappingItem mapItem : MappingUtils.getPropagationMappingItems(provision)) {\n+            LOG.debug(\"Processing expression '{}'\", mapItem.getIntAttrName());\n \n             try {\n-                Pair<String, Attribute> preparedAttr = prepareAttr(provision, mappingItem, any, password);\n-\n-                if (preparedAttr != null && preparedAttr.getKey() != null) {\n-                    connObjectKey = preparedAttr.getKey();\n-                }\n+                Pair<String, Attribute> preparedAttr = prepareAttr(provision, mapItem, any, password);\n+                if (preparedAttr != null) {\n+                    if (preparedAttr.getKey() != null) {\n+                        connObjectKey = preparedAttr.getKey();\n+                    }\n \n-                if (preparedAttr != null && preparedAttr.getValue() != null) {\n-                    Attribute alreadyAdded = AttributeUtil.find(preparedAttr.getValue().getName(), attributes);\n+                    if (preparedAttr.getValue() != null) {\n+                        Attribute alreadyAdded = AttributeUtil.find(preparedAttr.getValue().getName(), attributes);\n \n-                    if (alreadyAdded == null) {\n-                        attributes.add(preparedAttr.getValue());\n-                    } else {\n-                        attributes.remove(alreadyAdded);\n+                        if (alreadyAdded == null) {\n+                            attributes.add(preparedAttr.getValue());\n+                        } else {\n+                            attributes.remove(alreadyAdded);\n \n-                        Set<Object> values = new HashSet<>(alreadyAdded.getValue());\n-                        values.addAll(preparedAttr.getValue().getValue());\n+                            Set<Object> values = new HashSet<>(alreadyAdded.getValue());\n+                            values.addAll(preparedAttr.getValue().getValue());\n \n-                        attributes.add(AttributeBuilder.build(preparedAttr.getValue().getName(), values));\n+                            attributes.add(AttributeBuilder.build(preparedAttr.getValue().getName(), values));\n+                        }\n                     }\n                 }\n             } catch (Exception e) {\n-                LOG.debug(\"Expression '{}' processing failed\", mappingItem.getIntAttrName(), e);\n+                LOG.error(\"Expression '{}' processing failed\", mapItem.getIntAttrName(), e);\n             }\n         }\n \n         Attribute connObjectKeyExtAttr =\n-                AttributeUtil.find(getConnObjectKeyItem(provision).getExtAttrName(), attributes);\n+                AttributeUtil.find(MappingUtils.getConnObjectKeyItem(provision).getExtAttrName(), attributes);\n         if (connObjectKeyExtAttr != null) {\n             attributes.remove(connObjectKeyExtAttr);\n-            attributes.add(AttributeBuilder.build(getConnObjectKeyItem(provision).getExtAttrName(), connObjectKey));\n+            attributes.add(AttributeBuilder.build(\n+                    MappingUtils.getConnObjectKeyItem(provision).getExtAttrName(), connObjectKey));\n         }\n-        attributes.add(evaluateNAME(any, provision, connObjectKey));\n+        attributes.add(MappingUtils.evaluateNAME(any, provision, connObjectKey));\n \n         if (enable != null) {\n             attributes.add(AttributeBuilder.buildEnabled(enable));\n@@ -404,78 +204,49 @@ public Pair<String, Set<Attribute>> prepareAttrs(\n      *\n      * @param provision external resource\n      * @param mapItem mapping item for the given attribute\n-     * @param any any object\n+     * @param any given any object\n      * @param password clear-text password\n      * @return connObjectKey + prepared attribute\n      */\n     private Pair<String, Attribute> prepareAttr(\n             final Provision provision, final MappingItem mapItem, final Any<?> any, final String password) {\n \n         IntAttrName intAttrName =\n-                IntAttrNameParser.parse(mapItem.getIntAttrName(), anyUtilsFactory, provision.getAnyType().getKind());\n-\n-        List<Any<?>> anys = new ArrayList<>();\n-\n-        switch (intAttrName.getAnyTypeKind()) {\n-            case USER:\n-                if (any instanceof User) {\n-                    anys.add(any);\n-                }\n-                break;\n-\n-            case GROUP:\n-                if (any instanceof User) {\n-                    anys.addAll(userDAO.findAllGroups((User) any));\n-                } else if (any instanceof AnyObject) {\n-                    anys.addAll(anyObjectDAO.findAllGroups((AnyObject) any));\n-                } else if (any instanceof Group) {\n-                    anys.add(any);\n-                }\n-                break;\n+                intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n \n-            case ANY_OBJECT:\n-                if (any instanceof AnyObject) {\n-                    anys.add(any);\n-                }\n-                break;\n-\n-            default:\n-        }\n-\n-        Schema schema = null;\n         boolean readOnlyVirSchema = false;\n-        AttrSchemaType schemaType;\n-        Pair<String, Attribute> result;\n-\n-        switch (intAttrName.getSchemaType()) {\n-            case PLAIN:\n-                schema = plainSchemaDAO.find(intAttrName.getSchemaName());\n-                schemaType = schema == null ? AttrSchemaType.String : schema.getType();\n-                break;\n+        Schema schema = null;\n+        AttrSchemaType schemaType = AttrSchemaType.String;\n+        if (intAttrName.getSchemaType() != null) {\n+            switch (intAttrName.getSchemaType()) {\n+                case PLAIN:\n+                    schema = plainSchemaDAO.find(intAttrName.getSchemaName());\n+                    if (schema != null) {\n+                        schemaType = schema.getType();\n+                    }\n+                    break;\n \n-            case VIRTUAL:\n-                schema = virSchemaDAO.find(intAttrName.getSchemaName());\n-                readOnlyVirSchema = (schema != null && schema.isReadonly());\n-                schemaType = AttrSchemaType.String;\n-                break;\n+                case VIRTUAL:\n+                    schema = virSchemaDAO.find(intAttrName.getSchemaName());\n+                    readOnlyVirSchema = (schema != null && schema.isReadonly());\n+                    break;\n \n-            default:\n-                schemaType = AttrSchemaType.String;\n+                default:\n+            }\n         }\n \n-        String extAttrName = mapItem.getExtAttrName();\n-\n-        List<PlainAttrValue> values = getIntValues(provision, mapItem, anys);\n+        List<PlainAttrValue> values = getIntValues(provision, mapItem, intAttrName, any);\n \n         LOG.debug(\"Define mapping for: \"\n-                + \"\\n* ExtAttrName \" + extAttrName\n+                + \"\\n* ExtAttrName \" + mapItem.getExtAttrName()\n                 + \"\\n* is connObjectKey \" + mapItem.isConnObjectKey()\n                 + \"\\n* is password \" + mapItem.isPassword()\n                 + \"\\n* mandatory condition \" + mapItem.getMandatoryCondition()\n                 + \"\\n* Schema \" + intAttrName.getSchemaName()\n                 + \"\\n* ClassType \" + schemaType.getType().getName()\n                 + \"\\n* Values \" + values);\n \n+        Pair<String, Attribute> result;\n         if (readOnlyVirSchema) {\n             result = null;\n         } else {\n@@ -516,123 +287,157 @@ private Pair<String, Attribute> prepareAttr(\n                     result = new ImmutablePair<>(\n                             null, AttributeBuilder.buildPassword(passwordAttrValue.toCharArray()));\n                 }\n-            } else if ((schema != null && schema.isMultivalue())\n-                    || anyUtilsFactory.getInstance(any).getAnyTypeKind() != intAttrName.getAnyTypeKind()) {\n-\n+            } else if (schema != null && schema.isMultivalue()) {\n                 result = new ImmutablePair<>(\n-                        null, AttributeBuilder.build(extAttrName, objValues));\n+                        null, AttributeBuilder.build(mapItem.getExtAttrName(), objValues));\n             } else {\n                 result = new ImmutablePair<>(\n                         null, objValues.isEmpty()\n-                                ? AttributeBuilder.build(extAttrName)\n-                                : AttributeBuilder.build(extAttrName, objValues.iterator().next()));\n+                                ? AttributeBuilder.build(mapItem.getExtAttrName())\n+                                : AttributeBuilder.build(mapItem.getExtAttrName(), objValues.iterator().next()));\n             }\n         }\n \n         return result;\n     }\n \n-    private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n-        Pair<String, Attribute> preparedAttr = prepareAttr(provision, getConnObjectKeyItem(provision), any, null);\n-        String connObjectKey = preparedAttr.getKey();\n-\n-        return evaluateNAME(any, provision, connObjectKey).getNameValue();\n-    }\n-\n     @Transactional(readOnly = true)\n     @Override\n     public List<PlainAttrValue> getIntValues(\n-            final Provision provision, final MappingItem mapItem, final List<Any<?>> anys) {\n+            final Provision provision,\n+            final MappingItem mapItem,\n+            final IntAttrName intAttrName,\n+            final Any<?> any) {\n \n-        LOG.debug(\"Get attributes for '{}' and intAttrName '{}'\", anys, mapItem.getIntAttrName());\n+        LOG.debug(\"Get internal values for {} as '{}' on {}\", any, mapItem.getIntAttrName(), provision.getResource());\n \n-        IntAttrName intAttrName =\n-                IntAttrNameParser.parse(mapItem.getIntAttrName(), anyUtilsFactory, provision.getAnyType().getKind());\n+        Any<?> reference = null;\n+        Membership<?> membership = null;\n+        if (intAttrName.getEnclosingGroup() == null && intAttrName.getRelatedAnyObject() == null) {\n+            reference = any;\n+        }\n+        if (any instanceof GroupableRelatable) {\n+            GroupableRelatable<?, ?, ?, ?, ?> groupableRelatable = (GroupableRelatable<?, ?, ?, ?, ?>) any;\n+\n+            if (intAttrName.getEnclosingGroup() != null) {\n+                Group group = groupDAO.findByName(intAttrName.getEnclosingGroup());\n+                if (group == null || groupableRelatable.getMembership(group.getKey()) == null) {\n+                    LOG.warn(\"No membership for {} in {}, ignoring\",\n+                            intAttrName.getEnclosingGroup(), groupableRelatable);\n+                } else {\n+                    reference = group;\n+                }\n+            } else if (intAttrName.getRelatedAnyObject() != null) {\n+                AnyObject anyObject = anyObjectDAO.findByName(intAttrName.getRelatedAnyObject());\n+                if (anyObject == null || groupableRelatable.getRelationships(anyObject.getKey()).isEmpty()) {\n+                    LOG.warn(\"No relationship for {} in {}, ignoring\",\n+                            intAttrName.getRelatedAnyObject(), groupableRelatable);\n+                } else {\n+                    reference = anyObject;\n+                }\n+            } else if (intAttrName.getMembershipOfGroup() != null) {\n+                Group group = groupDAO.findByName(intAttrName.getMembershipOfGroup());\n+                membership = groupableRelatable.getMembership(group.getKey());\n+            }\n+        }\n+        if (reference == null) {\n+            LOG.warn(\"Could not determine the reference instance for {}\", mapItem.getIntAttrName());\n+            return Collections.emptyList();\n+        }\n \n         List<PlainAttrValue> values = new ArrayList<>();\n         boolean transform = true;\n \n         if (intAttrName.getField() != null) {\n+            AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n+            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+\n             switch (intAttrName.getField()) {\n                 case \"key\":\n-                    for (Any<?> any : anys) {\n-                        AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                        PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                        attrValue.setStringValue(any.getKey());\n-                        values.add(attrValue);\n-                    }\n+                    attrValue.setStringValue(reference.getKey());\n+                    values.add(attrValue);\n+                    break;\n+\n+                case \"password\":\n+                    // ignore\n                     break;\n \n                 case \"username\":\n-                    for (Any<?> any : anys) {\n-                        if (any instanceof User) {\n-                            UPlainAttrValue attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n-                            attrValue.setStringValue(((User) any).getUsername());\n-                            values.add(attrValue);\n-                        }\n+                    if (reference instanceof User) {\n+                        attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n+                        attrValue.setStringValue(((User) reference).getUsername());\n+                        values.add(attrValue);\n                     }\n                     break;\n \n                 case \"name\":\n-                    for (Any<?> any : anys) {\n-                        if (any instanceof Group) {\n-                            GPlainAttrValue attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n-                            attrValue.setStringValue(((Group) any).getName());\n-                            values.add(attrValue);\n-                        } else if (any instanceof AnyObject) {\n-                            APlainAttrValue attrValue = entityFactory.newEntity(APlainAttrValue.class);\n-                            attrValue.setStringValue(((AnyObject) any).getName());\n-                            values.add(attrValue);\n-                        }\n+                    if (reference instanceof Group) {\n+                        attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n+                        attrValue.setStringValue(((Group) reference).getName());\n+                        values.add(attrValue);\n+                    } else if (reference instanceof AnyObject) {\n+                        attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n+                        attrValue.setStringValue(((AnyObject) reference).getName());\n+                        values.add(attrValue);\n                     }\n                     break;\n \n-                case \"owner\":\n+                case \"userOwner\":\n+                case \"groupOwner\":\n                     Mapping uMapping = provision.getAnyType().equals(anyTypeDAO.findUser())\n                             ? provision.getMapping()\n                             : null;\n                     Mapping gMapping = provision.getAnyType().equals(anyTypeDAO.findGroup())\n                             ? provision.getMapping()\n                             : null;\n \n-                    for (Any<?> any : anys) {\n-                        if (any instanceof Group) {\n-                            Group group = (Group) any;\n-                            String groupOwnerValue = null;\n-                            if (group.getUserOwner() != null && uMapping != null) {\n-                                groupOwnerValue = getGroupOwnerValue(provision, group.getUserOwner());\n-                            }\n-                            if (group.getGroupOwner() != null && gMapping != null) {\n-                                groupOwnerValue = getGroupOwnerValue(provision, group.getGroupOwner());\n-                            }\n+                    if (reference instanceof Group) {\n+                        Group group = (Group) reference;\n+                        String groupOwnerValue = null;\n+                        if (group.getUserOwner() != null && uMapping != null) {\n+                            groupOwnerValue = getGroupOwnerValue(provision, group.getUserOwner());\n+                        }\n+                        if (group.getGroupOwner() != null && gMapping != null) {\n+                            groupOwnerValue = getGroupOwnerValue(provision, group.getGroupOwner());\n+                        }\n \n-                            if (StringUtils.isNotBlank(groupOwnerValue)) {\n-                                GPlainAttrValue attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n-                                attrValue.setStringValue(groupOwnerValue);\n-                                values.add(attrValue);\n-                            }\n+                        if (StringUtils.isNotBlank(groupOwnerValue)) {\n+                            attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n+                            attrValue.setStringValue(groupOwnerValue);\n+                            values.add(attrValue);\n                         }\n                     }\n                     break;\n \n                 default:\n+                    try {\n+                        attrValue.setStringValue(FieldUtils.readField(\n+                                reference, intAttrName.getField(), true).toString());\n+                        values.add(attrValue);\n+                    } catch (IllegalAccessException e) {\n+                        LOG.error(\"Could not read value of '{}' from {}\", intAttrName.getField(), reference, e);\n+                    }\n             }\n         } else if (intAttrName.getSchemaType() != null) {\n             switch (intAttrName.getSchemaType()) {\n                 case PLAIN:\n-                    for (Any<?> any : anys) {\n-                        PlainAttr<?> attr = any.getPlainAttr(intAttrName.getSchemaName());\n-                        if (attr != null) {\n-                            if (attr.getUniqueValue() != null) {\n-                                PlainAttrUniqueValue value = SerializationUtils.clone(attr.getUniqueValue());\n-                                value.setAttr(null);\n-                                values.add(value);\n-                            } else if (attr.getValues() != null) {\n-                                for (PlainAttrValue value : attr.getValues()) {\n-                                    PlainAttrValue shadow = SerializationUtils.clone(value);\n-                                    shadow.setAttr(null);\n-                                    values.add(shadow);\n-                                }\n+                    PlainAttr<?> attr;\n+                    if (membership == null) {\n+                        attr = reference.getPlainAttr(intAttrName.getSchemaName());\n+                    } else {\n+                        attr = ((GroupableRelatable<?, ?, ?, ?, ?>) reference).getPlainAttr(\n+                                intAttrName.getSchemaName(), membership);\n+                    }\n+                    if (attr != null) {\n+                        if (attr.getUniqueValue() != null) {\n+                            PlainAttrUniqueValue value = SerializationUtils.clone(attr.getUniqueValue());\n+                            value.setAttr(null);\n+                            values.add(value);\n+                        } else if (attr.getValues() != null) {\n+                            for (PlainAttrValue value : attr.getValues()) {\n+                                PlainAttrValue shadow = SerializationUtils.clone(value);\n+                                shadow.setAttr(null);\n+                                values.add(shadow);\n                             }\n                         }\n                     }\n@@ -641,14 +446,14 @@ public List<PlainAttrValue> getIntValues(\n                 case DERIVED:\n                     DerSchema derSchema = derSchemaDAO.find(intAttrName.getSchemaName());\n                     if (derSchema != null) {\n-                        for (Any<?> any : anys) {\n-                            String value = derAttrHandler.getValue(any, derSchema);\n-                            if (value != null) {\n-                                AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                                PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                                attrValue.setStringValue(value);\n-                                values.add(attrValue);\n-                            }\n+                        String value = membership == null\n+                                ? derAttrHandler.getValue(reference, derSchema)\n+                                : derAttrHandler.getValue(reference, membership, derSchema);\n+                        if (value != null) {\n+                            AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n+                            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                            attrValue.setStringValue(value);\n+                            values.add(attrValue);\n                         }\n                     }\n                     break;\n@@ -659,16 +464,18 @@ public List<PlainAttrValue> getIntValues(\n \n                     VirSchema virSchema = virSchemaDAO.find(intAttrName.getSchemaName());\n                     if (virSchema != null) {\n-                        for (Any<?> any : anys) {\n-                            LOG.debug(\"Expire entry cache {}-{}\", any.getKey(), intAttrName.getSchemaName());\n-                            virAttrCache.expire(any.getType().getKey(), any.getKey(), intAttrName.getSchemaName());\n-\n-                            AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                            for (String value : virAttrHandler.getValues(any, virSchema)) {\n-                                PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                                attrValue.setStringValue(value);\n-                                values.add(attrValue);\n-                            }\n+                        LOG.debug(\"Expire entry cache {}-{}\", reference, intAttrName.getSchemaName());\n+                        virAttrCache.expire(\n+                                reference.getType().getKey(), reference.getKey(), intAttrName.getSchemaName());\n+\n+                        AnyUtils anyUtils = anyUtilsFactory.getInstance(reference);\n+                        List<String> virValues = membership == null\n+                                ? virAttrHandler.getValues(reference, virSchema)\n+                                : virAttrHandler.getValues(reference, membership, virSchema);\n+                        for (String value : virValues) {\n+                            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                            attrValue.setStringValue(value);\n+                            values.add(attrValue);\n                         }\n                     }\n                     break;\n@@ -677,27 +484,39 @@ public List<PlainAttrValue> getIntValues(\n             }\n         }\n \n-        LOG.debug(\"Values for propagation: {}\", values);\n+        LOG.debug(\"Internal values: {}\", values);\n \n         List<PlainAttrValue> transformed = values;\n         if (transform) {\n-            for (MappingItemTransformer transformer : getMappingItemTransformers(mapItem)) {\n-                transformed = transformer.beforePropagation(mapItem, anys, transformed);\n+            for (MappingItemTransformer transformer : MappingUtils.getMappingItemTransformers(mapItem)) {\n+                transformed = transformer.beforePropagation(mapItem, any, transformed);\n             }\n-            LOG.debug(\"Transformed values for propagation: {}\", values);\n+            LOG.debug(\"Transformed values: {}\", values);\n         } else {\n             LOG.debug(\"No transformation occurred\");\n         }\n \n         return transformed;\n     }\n \n+    private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n+        Pair<String, Attribute> preparedAttr =\n+                prepareAttr(provision, MappingUtils.getConnObjectKeyItem(provision), any, null);\n+        String connObjectKey = preparedAttr.getKey();\n+\n+        return MappingUtils.evaluateNAME(any, provision, connObjectKey).getNameValue();\n+    }\n+\n     @Transactional(readOnly = true)\n     @Override\n     public String getConnObjectKeyValue(final Any<?> any, final Provision provision) {\n-        List<PlainAttrValue> values = getIntValues(provision, provision.getMapping().getConnObjectKeyItem(),\n-                Collections.<Any<?>>singletonList(any));\n-        return values == null || values.isEmpty()\n+        MappingItem mapItem = provision.getMapping().getConnObjectKeyItem();\n+        List<PlainAttrValue> values = getIntValues(\n+                provision,\n+                mapItem,\n+                intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind()),\n+                any);\n+        return values.isEmpty()\n                 ? null\n                 : values.get(0).getValueAsString();\n     }\n@@ -710,20 +529,17 @@ public void setIntValues(\n         List<Object> values = null;\n         if (attr != null) {\n             values = attr.getValue();\n-            for (MappingItemTransformer transformer : getMappingItemTransformers(mapItem)) {\n+            for (MappingItemTransformer transformer : MappingUtils.getMappingItemTransformers(mapItem)) {\n                 values = transformer.beforePull(mapItem, anyTO, values);\n             }\n         }\n         values = ListUtils.emptyIfNull(values);\n \n         IntAttrName intAttrName =\n-                IntAttrNameParser.parse(mapItem.getIntAttrName(), anyUtilsFactory, anyUtils.getAnyTypeKind());\n+                intAttrNameParser.parse(mapItem.getIntAttrName(), anyUtils.getAnyTypeKind());\n \n         if (intAttrName.getField() != null) {\n             switch (intAttrName.getField()) {\n-                case \"key\":\n-                    break;\n-\n                 case \"password\":\n                     if (anyTO instanceof UserTO && !values.isEmpty()) {\n                         ((UserTO) anyTO).setPassword(ConnObjectUtils.getPassword(values.get(0)));\n@@ -750,7 +566,8 @@ public void setIntValues(\n                     }\n                     break;\n \n-                case \"owner\":\n+                case \"userOwner\":\n+                case \"groupOwner\":\n                     if (anyTO instanceof GroupTO && attr != null) {\n                         // using a special attribute (with schema \"\", that will be ignored) for carrying the\n                         // GroupOwnerSchema value\n@@ -769,6 +586,13 @@ public void setIntValues(\n                 default:\n             }\n         } else if (intAttrName.getSchemaType() != null) {\n+            GroupableRelatableTO groupableTO = null;\n+            Group group = null;\n+            if (anyTO instanceof GroupableRelatableTO && intAttrName.getMembershipOfGroup() != null) {\n+                groupableTO = (GroupableRelatableTO) anyTO;\n+                group = groupDAO.findByName(intAttrName.getMembershipOfGroup());\n+            }\n+\n             switch (intAttrName.getSchemaType()) {\n                 case PLAIN:\n                     AttrTO attrTO = new AttrTO();\n@@ -803,13 +627,31 @@ public void setIntValues(\n                         }\n                     }\n \n-                    anyTO.getPlainAttrs().add(attrTO);\n+                    if (groupableTO == null || group == null) {\n+                        anyTO.getPlainAttrs().add(attrTO);\n+                    } else {\n+                        MembershipTO membership = groupableTO.getMembershipMap().get(group.getKey());\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(group.getKey(), group.getName()).build();\n+                            groupableTO.getMemberships().add(membership);\n+                        }\n+                        membership.getPlainAttrs().add(attrTO);\n+                    }\n                     break;\n \n                 case DERIVED:\n                     attrTO = new AttrTO();\n                     attrTO.setSchema(intAttrName.getSchemaName());\n-                    anyTO.getDerAttrs().add(attrTO);\n+                    if (groupableTO == null || group == null) {\n+                        anyTO.getDerAttrs().add(attrTO);\n+                    } else {\n+                        MembershipTO membership = groupableTO.getMembershipMap().get(group.getKey());\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(group.getKey(), group.getName()).build();\n+                            groupableTO.getMemberships().add(membership);\n+                        }\n+                        membership.getDerAttrs().add(attrTO);\n+                    }\n                     break;\n \n                 case VIRTUAL:\n@@ -825,7 +667,16 @@ public void setIntValues(\n                         }\n                     }\n \n-                    anyTO.getVirAttrs().add(attrTO);\n+                    if (groupableTO == null || group == null) {\n+                        anyTO.getVirAttrs().add(attrTO);\n+                    } else {\n+                        MembershipTO membership = groupableTO.getMembershipMap().get(group.getKey());\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(group.getKey(), group.getName()).build();\n+                            groupableTO.getMemberships().add(membership);\n+                        }\n+                        membership.getVirAttrs().add(attrTO);\n+                    }\n                     break;\n \n                 default:"},{"sha":"85e6522f9535b003ce1771b494e2b5c830d81b27","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -99,7 +100,7 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n         for (Map.Entry<Provision, Set<VirSchema>> entry : toRead.entrySet()) {\n             LOG.debug(\"About to read from {}: {}\", entry.getKey(), entry.getValue());\n \n-            String connObjectKey = MappingManagerImpl.getConnObjectKeyItem(entry.getKey()) == null\n+            String connObjectKey = MappingUtils.getConnObjectKeyItem(entry.getKey()) == null\n                     ? null\n                     : mappingManager.getConnObjectKeyValue(any, entry.getKey());\n             if (StringUtils.isBlank(connObjectKey)) {\n@@ -114,7 +115,7 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n                 try {\n                     ConnectorObject connectorObject = connector.getObject(entry.getKey().getObjectClass(),\n                             new Uid(connObjectKey),\n-                            MappingManagerImpl.buildOperationOptions(linkingMappingItems.iterator()));\n+                            MappingUtils.buildOperationOptions(linkingMappingItems.iterator()));\n \n                     if (connectorObject == null) {\n                         LOG.debug(\"No read from {} about {}\", entry.getKey(), connObjectKey);"},{"sha":"b826b6319d737c5fbd6729ee31baf689b5dea90a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -37,7 +37,6 @@\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidPlainAttrValueException;\n@@ -59,7 +58,6 @@\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.core.persistence.api.dao.AllowedSchemas;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -89,6 +87,9 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.apache.syncope.core.persistence.api.entity.GroupableRelatable;\n+import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n \n abstract class AbstractAnyDataBinder {\n \n@@ -154,6 +155,9 @@ abstract class AbstractAnyDataBinder {\n     @Autowired\n     protected MappingManager mappingManager;\n \n+    @Autowired\n+    protected IntAttrNameParser intAttrNameParser;\n+\n     protected void setRealm(final Any<?> any, final AnyPatch anyPatch) {\n         if (anyPatch.getRealm() != null && StringUtils.isNotBlank(anyPatch.getRealm().getValue())) {\n             Realm newRealm = realmDAO.findByFullPath(anyPatch.getRealm().getValue());\n@@ -215,24 +219,21 @@ private void fillAttr(\n     private List<String> evaluateMandatoryCondition(final Provision provision, final Any<?> any) {\n         List<String> missingAttrNames = new ArrayList<>();\n \n-        if (provision != null) {\n-            for (MappingItem item : provision.getMapping().getItems()) {\n-                if ((item.getPurpose() == MappingPurpose.PROPAGATION || item.getPurpose() == MappingPurpose.BOTH)) {\n-                    List<PlainAttrValue> values = mappingManager.getIntValues(\n-                            provision, item, Collections.<Any<?>>singletonList(any));\n-                    if (values.isEmpty() && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any)) {\n-                        missingAttrNames.add(item.getIntAttrName());\n-                    }\n+        for (MappingItem mapItem : MappingUtils.getPropagationMappingItems(provision)) {\n+            IntAttrName intAttrName =\n+                    intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n+            if (intAttrName.getSchemaType() != null) {\n+                List<PlainAttrValue> values = mappingManager.getIntValues(provision, mapItem, intAttrName, any);\n+                if (values.isEmpty() && JexlUtils.evaluateMandatoryCondition(mapItem.getMandatoryCondition(), any)) {\n+                    missingAttrNames.add(mapItem.getIntAttrName());\n                 }\n             }\n         }\n \n         return missingAttrNames;\n     }\n \n-    private SyncopeClientException checkMandatoryOnResources(\n-            final Any<?> any, final Set<ExternalResource> resources) {\n-\n+    private SyncopeClientException checkMandatoryOnResources(final Any<?> any, final Set<ExternalResource> resources) {\n         SyncopeClientException reqValMissing = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n \n         for (ExternalResource resource : resources) {\n@@ -338,13 +339,11 @@ protected void processAttrPatch(\n         }\n \n         for (ExternalResource resource : resources) {\n-            for (MappingItem mapItem\n-                    : MappingManagerImpl.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n-\n-                if (schema.getKey().equals(mapItem.getIntAttrName())) {\n+            for (MappingItem item : MappingUtils.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n+                if (schema.getKey().equals(item.getIntAttrName())) {\n                     propByRes.add(ResourceOperation.UPDATE, resource.getKey());\n \n-                    if (mapItem.isConnObjectKey() && !attr.getValuesAsStrings().isEmpty()) {\n+                    if (item.isConnObjectKey() && !attr.getValuesAsStrings().isEmpty()) {\n                         propByRes.addOldConnObjectKey(resource.getKey(), attr.getValuesAsStrings().get(0));\n                     }\n                 }\n@@ -646,7 +645,7 @@ protected Map<String, String> getConnObjectKeys(final Any<?> any) {\n         for (ExternalResource resource : iterable) {\n             Provision provision = resource.getProvision(any.getType());\n             if (provision != null && provision.getMapping() != null) {\n-                MappingItem connObjectKeyItem = MappingManagerImpl.getConnObjectKeyItem(provision);\n+                MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n                 if (connObjectKeyItem == null) {\n                     throw new NotFoundException(\n                             \"ConnObjectKey mapping for \" + any.getType().getKey() + \" \" + any.getKey()"},{"sha":"37a471c2dddfb2ba087b401226bd1fcba59a13f7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DefaultMappingItemTransformer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -35,7 +35,7 @@ public class DefaultMappingItemTransformer implements MappingItemTransformer {\n     @Override\n     public List<PlainAttrValue> beforePropagation(\n             final MappingItem mappingItem,\n-            final List<Any<?>> anys,\n+            final Any<?> any,\n             final List<PlainAttrValue> values) {\n \n         return values;"},{"sha":"6fef0bbaa7a6111a49865dc85c086c54a4e6c01f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLMappingItemTransformer.java","status":"modified","additions":2,"deletions":44,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -20,18 +20,13 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.commons.jexl3.JexlContext;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n \n /**\n@@ -55,47 +50,10 @@ public void setPullJEXL(final String pullJEXL) {\n     @Override\n     public List<PlainAttrValue> beforePropagation(\n             final MappingItem mappingItem,\n-            final List<Any<?>> anys,\n+            final Any<?> any,\n             final List<PlainAttrValue> values) {\n \n         if (StringUtils.isNotBlank(propagationJEXL) && values != null) {\n-            Any<?> any = null;\n-            if (!anys.isEmpty()) {\n-                switch (mappingItem.getMapping().getProvision().getAnyType().getKind()) {\n-                    case USER:\n-                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n-\n-                            @Override\n-                            public boolean evaluate(final Any<?> object) {\n-                                return object instanceof User;\n-                            }\n-                        });\n-                        break;\n-\n-                    case GROUP:\n-                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n-\n-                            @Override\n-                            public boolean evaluate(final Any<?> object) {\n-                                return object instanceof Group;\n-                            }\n-                        });\n-                        break;\n-\n-                    case ANY_OBJECT:\n-                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n-\n-                            @Override\n-                            public boolean evaluate(final Any<?> object) {\n-                                return object instanceof AnyObject;\n-                            }\n-                        });\n-                        break;\n-\n-                    default:\n-                }\n-            }\n-\n             for (PlainAttrValue value : values) {\n                 JexlContext jexlContext = new MapContext();\n                 if (any != null) {\n@@ -111,7 +69,7 @@ public boolean evaluate(final Any<?> object) {\n             return values;\n         }\n \n-        return super.beforePropagation(mappingItem, anys, values);\n+        return super.beforePropagation(mappingItem, any, values);\n     }\n \n     @Override"},{"sha":"11b4cb00bdbeb59ba3f3ea6ccc13e28c7dfea067","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/NotificationDataBinderImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -34,9 +34,8 @@\n import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n+import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -59,7 +58,7 @@ public class NotificationDataBinderImpl implements NotificationDataBinder {\n     private EntityFactory entityFactory;\n \n     @Autowired\n-    private AnyUtilsFactory anyUtilsFactory;\n+    private IntAttrNameParser intAttrNameParser;\n \n     @Override\n     public NotificationTO getNotificationTO(final Notification notification) {\n@@ -126,6 +125,6 @@ public boolean evaluate(final AnyAbout anyAbout) {\n         });\n \n         // 3. verify recipientAttrName\n-        IntAttrNameParser.parse(notification.getRecipientAttrName(), anyUtilsFactory, AnyTypeKind.USER);\n+        intAttrNameParser.parse(notification.getRecipientAttrName(), AnyTypeKind.USER);\n     }\n }"},{"sha":"7eea7444fe2c2b6e28c1845d679d828b781ace9c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":45,"deletions":15,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n@@ -48,14 +49,13 @@\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser.IntAttrName;\n+import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.data.ResourceDataBinder;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -90,7 +90,7 @@ public class ResourceDataBinderImpl implements ResourceDataBinder {\n     private EntityFactory entityFactory;\n \n     @Autowired\n-    private AnyUtilsFactory anyUtilsFactory;\n+    private IntAttrNameParser intAttrNameParser;\n \n     @Override\n     public ExternalResource create(final ResourceTO resourceTO) {\n@@ -268,30 +268,29 @@ private void populateMapping(\n             if (itemTO == null) {\n                 LOG.error(\"Null {}\", MappingItemTO.class.getSimpleName());\n                 invalidMapping.getElements().add(\"Null \" + MappingItemTO.class.getSimpleName());\n+            } else if (itemTO.getIntAttrName() == null) {\n+                requiredValuesMissing.getElements().add(\"intAttrName\");\n+                scce.addException(requiredValuesMissing);\n             } else {\n-                if (itemTO.getIntAttrName() == null) {\n-                    requiredValuesMissing.getElements().add(\"intAttrName\");\n-                    scce.addException(requiredValuesMissing);\n-                }\n-\n-                IntAttrName intAttrName = IntAttrNameParser.parse(\n+                IntAttrName intAttrName = intAttrNameParser.parse(\n                         itemTO.getIntAttrName(),\n-                        anyUtilsFactory,\n                         mapping.getProvision().getAnyType().getKind());\n \n                 boolean allowed = true;\n-                if (intAttrName.getSchemaType() != null) {\n+                if (intAttrName.getSchemaType() != null\n+                        && intAttrName.getEnclosingGroup() == null && intAttrName.getRelatedAnyObject() == null) {\n+\n                     switch (intAttrName.getSchemaType()) {\n                         case PLAIN:\n-                            allowed = allowedSchemas.getPlainSchemas().contains(itemTO.getIntAttrName());\n+                            allowed = allowedSchemas.getPlainSchemas().contains(intAttrName.getSchemaName());\n                             break;\n \n                         case DERIVED:\n-                            allowed = allowedSchemas.getDerSchemas().contains(itemTO.getIntAttrName());\n+                            allowed = allowedSchemas.getDerSchemas().contains(intAttrName.getSchemaName());\n                             break;\n \n                         case VIRTUAL:\n-                            allowed = allowedSchemas.getVirSchemas().contains(itemTO.getIntAttrName());\n+                            allowed = allowedSchemas.getVirSchemas().contains(intAttrName.getSchemaName());\n                             break;\n \n                         default:\n@@ -324,6 +323,37 @@ private void populateMapping(\n                     } else {\n                         mapping.add(item);\n                     }\n+\n+                    if (intAttrName.getEnclosingGroup() != null\n+                            && item.getPurpose() != MappingPurpose.PROPAGATION) {\n+\n+                        invalidMapping.getElements().add(\n+                                \"Only \" + MappingPurpose.PROPAGATION.name() + \" allowed when referring to groups\");\n+                    }\n+                    if (intAttrName.getRelatedAnyObject() != null\n+                            && item.getPurpose() != MappingPurpose.PROPAGATION) {\n+\n+                        invalidMapping.getElements().add(\n+                                \"Only \" + MappingPurpose.PROPAGATION.name() + \" allowed when referring to any objects\");\n+                    }\n+                    if (intAttrName.getSchemaType() == SchemaType.DERIVED\n+                            && item.getPurpose() != MappingPurpose.PROPAGATION) {\n+\n+                        invalidMapping.getElements().add(\n+                                \"Only \" + MappingPurpose.PROPAGATION.name() + \" allowed for derived\");\n+                    }\n+                    if (intAttrName.getSchemaType() == SchemaType.VIRTUAL) {\n+                        if (item.getPurpose() != MappingPurpose.PROPAGATION) {\n+                            invalidMapping.getElements().add(\n+                                    \"Only \" + MappingPurpose.PROPAGATION.name() + \" allowed for virtual\");\n+                        }\n+\n+                        VirSchema schema = virSchemaDAO.find(item.getIntAttrName());\n+                        if (schema != null && schema.getProvision().equals(item.getMapping().getProvision())) {\n+                            invalidMapping.getElements().add(\n+                                    \"No need to map virtual schema on linking resource\");\n+                        }\n+                    }\n                 } else {\n                     LOG.error(\"{} not allowed\", itemTO.getIntAttrName());\n                     invalidMapping.getElements().add(itemTO.getIntAttrName() + \" not allowed\");"},{"sha":"5a532d76d22e969cb24cd0de9a456cf8c793e55e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -159,8 +159,7 @@ private void setPassword(final User user, final String password, final SyncopeCl\n             CipherAlgorithm predefined = CipherAlgorithm.valueOf(algorithm);\n             user.setPassword(password, predefined);\n         } catch (IllegalArgumentException e) {\n-            final SyncopeClientException invalidCiperAlgorithm =\n-                    SyncopeClientException.build(ClientExceptionType.NotFound);\n+            SyncopeClientException invalidCiperAlgorithm = SyncopeClientException.build(ClientExceptionType.NotFound);\n             invalidCiperAlgorithm.getElements().add(e.getMessage());\n             scce.addException(invalidCiperAlgorithm);\n \n@@ -305,7 +304,7 @@ public boolean evaluate(final MappingItem item) {\n     @Override\n     public PropagationByResource update(final User toBeUpdated, final UserPatch userPatch) {\n         // Re-merge any pending change from workflow tasks\n-        final User user = userDAO.save(toBeUpdated);\n+        User user = userDAO.save(toBeUpdated);\n \n         PropagationByResource propByRes = new PropagationByResource();\n "},{"sha":"3509bfe0005dfc920b1ad61c93c2198aa1572480","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":22,"deletions":8,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -62,13 +62,13 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.provisioning.api.DerAttrHandler;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser.IntAttrName;\n+import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n@@ -153,7 +153,7 @@ public class NotificationManagerImpl implements NotificationManager {\n     private EntityFactory entityFactory;\n \n     @Autowired\n-    private AnyUtilsFactory anyUtilsFactory;\n+    private IntAttrNameParser intAttrNameParser;\n \n     @Transactional(readOnly = true)\n     @Override\n@@ -346,14 +346,24 @@ public List<NotificationTask> createTasks(\n     private String getRecipientEmail(final String recipientAttrName, final User user) {\n         String email = null;\n \n-        IntAttrName intAttrName = IntAttrNameParser.parse(recipientAttrName, anyUtilsFactory, AnyTypeKind.USER);\n+        IntAttrName intAttrName = intAttrNameParser.parse(recipientAttrName, AnyTypeKind.USER);\n \n         if (\"username\".equals(intAttrName.getField())) {\n             email = user.getUsername();\n         } else if (intAttrName.getSchemaType() != null) {\n+            UMembership membership = null;\n+            if (intAttrName.getMembershipOfGroup() != null) {\n+                Group group = groupDAO.findByName(intAttrName.getMembershipOfGroup());\n+                if (group != null) {\n+                    membership = user.getMembership(group.getKey());\n+                }\n+            }\n+\n             switch (intAttrName.getSchemaType()) {\n                 case PLAIN:\n-                    UPlainAttr attr = user.getPlainAttr(recipientAttrName);\n+                    UPlainAttr attr = membership == null\n+                            ? user.getPlainAttr(recipientAttrName)\n+                            : user.getPlainAttr(recipientAttrName, membership);\n                     if (attr != null) {\n                         email = attr.getValuesAsStrings().isEmpty() ? null : attr.getValuesAsStrings().get(0);\n                     }\n@@ -364,7 +374,9 @@ private String getRecipientEmail(final String recipientAttrName, final User user\n                     if (schema == null) {\n                         LOG.warn(\"Ignoring non existing {} {}\", DerSchema.class.getSimpleName(), recipientAttrName);\n                     } else {\n-                        email = derAttrHander.getValue(user, schema);\n+                        email = membership == null\n+                                ? derAttrHander.getValue(user, schema)\n+                                : derAttrHander.getValue(user, membership, schema);\n                     }\n                     break;\n \n@@ -373,7 +385,9 @@ private String getRecipientEmail(final String recipientAttrName, final User user\n                     if (virSchema == null) {\n                         LOG.warn(\"Ignoring non existing {} {}\", VirSchema.class.getSimpleName(), recipientAttrName);\n                     } else {\n-                        List<String> virAttrValues = virAttrHander.getValues(user, virSchema);\n+                        List<String> virAttrValues = membership == null\n+                                ? virAttrHander.getValues(user, virSchema)\n+                                : virAttrHander.getValues(user, membership, virSchema);\n                         email = virAttrValues.isEmpty() ? null : virAttrValues.get(0);\n                     }\n                     break;"},{"sha":"a1b54340c7ce4db0356647965362cfe00189aee1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n@@ -63,6 +62,7 @@\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -599,8 +599,8 @@ protected ConnectorObject getRemoteObject(\n         try {\n             obj = connector.getObject(new ObjectClass(task.getObjectClassName()),\n                     new Uid(connObjectKey),\n-                    MappingManagerImpl.buildOperationOptions(IteratorUtils.chainedIterator(\n-                            MappingManagerImpl.getPropagationMappingItems(provision).iterator(),\n+                    MappingUtils.buildOperationOptions(IteratorUtils.chainedIterator(\n+                            MappingUtils.getPropagationMappingItems(provision).iterator(),\n                             linkingMappingItems.iterator())));\n \n             for (MappingItem item : linkingMappingItems) {"},{"sha":"a0007f15b42c05cbe545c227973035074dfd2c86","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -44,7 +44,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -59,6 +58,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -375,7 +375,7 @@ protected List<PropagationTask> createTasks(final Any<?> any,\n             Provision provision = resource == null ? null : resource.getProvision(any.getType());\n             List<MappingItem> mappingItems = provision == null\n                     ? Collections.<MappingItem>emptyList()\n-                    : MappingManagerImpl.getPropagationMappingItems(provision);\n+                    : MappingUtils.getPropagationMappingItems(provision);\n \n             if (resource == null) {\n                 LOG.error(\"Invalid resource name specified: {}, ignoring...\", entry.getKey());"},{"sha":"31732fd73bcaac1620165bf601c73c1b8e3805b6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -37,7 +37,6 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n@@ -48,6 +47,7 @@\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -134,7 +134,7 @@ protected ConnectorObject getRemoteObject(final String connObjectKey, final Obje\n \n             obj = profile.getConnector().getObject(objectClass,\n                     uid,\n-                    MappingManagerImpl.buildOperationOptions(IteratorUtils.<MappingItem>emptyIterator()));\n+                    MappingUtils.buildOperationOptions(IteratorUtils.<MappingItem>emptyIterator()));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n             throw toe;"},{"sha":"e5a1c88f650f01b04588d0dd24d9e54b3e67a3b9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -22,7 +22,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n@@ -32,6 +31,7 @@\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n \n public class PlainAttrsPullCorrelationRule implements PullCorrelationRule {\n \n@@ -47,7 +47,7 @@ public PlainAttrsPullCorrelationRule(final String[] plainSchemaNames, final Prov\n     @Override\n     public SearchCond getSearchCond(final ConnectorObject connObj) {\n         Map<String, MappingItem> mappingItems = new HashMap<>();\n-        for (MappingItem item : MappingManagerImpl.getPullMappingItems(provision)) {\n+        for (MappingItem item : MappingUtils.getPullMappingItems(provision)) {\n             mappingItems.put(item.getIntAttrName(), item);\n         }\n \n@@ -65,7 +65,7 @@ public SearchCond getSearchCond(final ConnectorObject connObj) {\n             }\n \n             List<Object> values = attr.getValue();\n-            for (MappingItemTransformer transformer : MappingManagerImpl.getMappingItemTransformers(mappingItem)) {\n+            for (MappingItemTransformer transformer : MappingUtils.getMappingItemTransformers(mappingItem)) {\n                 values = transformer.beforePull(mappingItem, null, values);\n             }\n "},{"sha":"b5a7dfeaf6a381d8e874f4f2f675bd185dc00db5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -28,7 +28,6 @@\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.policy.PullPolicySpec;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -52,6 +51,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.SyncToken;\n \n@@ -157,7 +157,7 @@ protected String doExecuteProvisioning(\n         ghandler.setPullExecutor(this);\n \n         latestSyncTokens.clear();\n-        \n+\n         if (!profile.isDryRun()) {\n             for (PullActions action : actions) {\n                 action.beforeAll(profile);\n@@ -196,7 +196,7 @@ protected String doExecuteProvisioning(\n                                     provision.getObjectClass(),\n                                     provision.getSyncToken(),\n                                     handler,\n-                                    MappingManagerImpl.buildOperationOptions(mapItems));\n+                                    MappingUtils.buildOperationOptions(mapItems));\n                             if (!dryRun) {\n                                 provision.setSyncToken(latestSyncTokens.get(provision.getObjectClass()));\n                                 resourceDAO.save(provision.getResource());\n@@ -211,14 +211,14 @@ protected String doExecuteProvisioning(\n                             connector.filteredReconciliation(provision.getObjectClass(),\n                                     filterBuilder,\n                                     handler,\n-                                    MappingManagerImpl.buildOperationOptions(mapItems));\n+                                    MappingUtils.buildOperationOptions(mapItems));\n                             break;\n \n                         case FULL_RECONCILIATION:\n                         default:\n                             connector.fullReconciliation(provision.getObjectClass(),\n                                     handler,\n-                                    MappingManagerImpl.buildOperationOptions(mapItems));\n+                                    MappingUtils.buildOperationOptions(mapItems));\n                             break;\n                     }\n                 } catch (Throwable t) {"},{"sha":"4c44b7fd261794375cbf4ef5fcf985ba4674df55","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.policy.PullPolicySpec;\n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n@@ -47,8 +46,8 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser;\n-import org.apache.syncope.core.provisioning.api.IntAttrNameParser.IntAttrName;\n+import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -63,6 +62,7 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n \n @Transactional(readOnly = true)\n @Component\n@@ -103,6 +103,9 @@ public class PullUtils {\n     @Autowired\n     private AnyUtilsFactory anyUtilsFactory;\n \n+    @Autowired\n+    private IntAttrNameParser intAttrNameParser;\n+\n     public String findMatchingAnyKey(\n             final AnyType anyType,\n             final String name,\n@@ -127,7 +130,7 @@ public String findMatchingAnyKey(\n             public boolean handle(final ConnectorObject obj) {\n                 return found.add(obj);\n             }\n-        }, MappingManagerImpl.buildOperationOptions(MappingManagerImpl.getPullMappingItems(provision).iterator()));\n+        }, MappingUtils.buildOperationOptions(MappingUtils.getPullMappingItems(provision).iterator()));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", provision.getObjectClass(), resource, name);\n@@ -170,10 +173,10 @@ private List<String> findByConnObjectKeyItem(\n \n         List<String> result = new ArrayList<>();\n \n-        MappingItem connObjectKeyItem = MappingManagerImpl.getConnObjectKeyItem(provision);\n+        MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n \n         String transfUid = uid;\n-        for (MappingItemTransformer transformer : MappingManagerImpl.getMappingItemTransformers(connObjectKeyItem)) {\n+        for (MappingItemTransformer transformer : MappingUtils.getMappingItemTransformers(connObjectKeyItem)) {\n             List<Object> output = transformer.beforePull(\n                     connObjectKeyItem,\n                     null,\n@@ -183,9 +186,8 @@ private List<String> findByConnObjectKeyItem(\n             }\n         }\n \n-        IntAttrName intAttrName = IntAttrNameParser.parse(\n+        IntAttrName intAttrName = intAttrNameParser.parse(\n                 connObjectKeyItem.getIntAttrName(),\n-                anyUtilsFactory,\n                 provision.getAnyType().getKind());\n \n         if (intAttrName.getField() != null) {\n@@ -214,6 +216,8 @@ private List<String> findByConnObjectKeyItem(\n                         result.add(anyObject.getKey());\n                     }\n                     break;\n+\n+                default:\n             }\n         } else if (intAttrName.getSchemaType() != null) {\n             switch (intAttrName.getSchemaType()) {\n@@ -246,6 +250,8 @@ private List<String> findByConnObjectKeyItem(\n                         result.add(any.getKey());\n                     }\n                     break;\n+\n+                default:\n             }\n         }\n "},{"sha":"c0ed5fc62f7e012ba70e254c079a7cc62a681059","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.utils;\n \n-import org.apache.syncope.core.provisioning.java.MappingManagerImpl;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -222,7 +221,7 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n \n         // 1. fill with data from connector object\n         anyTO.setRealm(pullTask.getDestinatioRealm().getFullPath());\n-        for (MappingItem item : MappingManagerImpl.getPullMappingItems(provision)) {\n+        for (MappingItem item : MappingUtils.getPullMappingItems(provision)) {\n             mappingManager.setIntValues(item, obj.getAttributeByName(item.getExtAttrName()), anyTO, anyUtils);\n         }\n "},{"sha":"63ceb98404d77adb48b0f46d04942f76305dc6c1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/MappingUtils.java","status":"added","additions":239,"deletions":0,"changes":239,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FMappingUtils.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -0,0 +1,239 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.utils;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.MapContext;\n+import org.apache.commons.lang3.ClassUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.identityconnectors.framework.common.objects.Name;\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.framework.common.objects.OperationOptionsBuilder;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n+import org.identityconnectors.framework.common.objects.Uid;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+\n+public final class MappingUtils {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(MappingUtils.class);\n+\n+    public static MappingItem getConnObjectKeyItem(final Provision provision) {\n+        Mapping mapping = null;\n+        if (provision != null) {\n+            mapping = provision.getMapping();\n+        }\n+\n+        return mapping == null\n+                ? null\n+                : mapping.getConnObjectKeyItem();\n+    }\n+\n+    private static List<MappingItem> getMappingItems(final Provision provision, final MappingPurpose purpose) {\n+        List<? extends MappingItem> items = Collections.<MappingItem>emptyList();\n+        if (provision != null) {\n+            items = provision.getMapping().getItems();\n+        }\n+\n+        List<MappingItem> result = new ArrayList<>();\n+\n+        switch (purpose) {\n+            case PULL:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.PROPAGATION != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case PROPAGATION:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.PULL != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case BOTH:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.NONE != item.getPurpose()) {\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case NONE:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.NONE == item.getPurpose()) {\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+    public static List<MappingItem> getPropagationMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.PROPAGATION);\n+    }\n+\n+    public static List<MappingItem> getPullMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.PULL);\n+    }\n+\n+    /**\n+     * Build __NAME__ for propagation. First look if there ia a defined connObjectLink for the given resource (and in\n+     * this case evaluate as JEXL); otherwise, take given connObjectKey.\n+     *\n+     * @param any given any object\n+     * @param provision external resource\n+     * @param connObjectKey connector object key\n+     * @return the value to be propagated as __NAME__\n+     */\n+    public static Name evaluateNAME(final Any<?> any, final Provision provision, final String connObjectKey) {\n+        if (StringUtils.isBlank(connObjectKey)) {\n+            // LOG error but avoid to throw exception: leave it to the external resource\n+            LOG.error(\"Missing ConnObjectKey for '{}': \", provision.getResource());\n+        }\n+\n+        // Evaluate connObjectKey expression\n+        String connObjectLink = provision == null || provision.getMapping() == null\n+                ? null\n+                : provision.getMapping().getConnObjectLink();\n+        String evalConnObjectLink = null;\n+        if (StringUtils.isNotBlank(connObjectLink)) {\n+            JexlContext jexlContext = new MapContext();\n+            JexlUtils.addFieldsToContext(any, jexlContext);\n+            JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n+            JexlUtils.addDerAttrsToContext(any, jexlContext);\n+            evalConnObjectLink = JexlUtils.evaluate(connObjectLink, jexlContext);\n+        }\n+\n+        // If connObjectLink evaluates to an empty string, just use the provided connObjectKey as Name(),\n+        // otherwise evaluated connObjectLink expression is taken as Name().\n+        Name name;\n+        if (StringUtils.isBlank(evalConnObjectLink)) {\n+            // add connObjectKey as __NAME__ attribute ...\n+            LOG.debug(\"Add connObjectKey [{}] as __NAME__\", connObjectKey);\n+            name = new Name(connObjectKey);\n+        } else {\n+            LOG.debug(\"Add connObjectLink [{}] as __NAME__\", evalConnObjectLink);\n+            name = new Name(evalConnObjectLink);\n+\n+            // connObjectKey not propagated: it will be used to set the value for __UID__ attribute\n+            LOG.debug(\"connObjectKey will be used just as __UID__ attribute\");\n+        }\n+\n+        return name;\n+    }\n+\n+    public static List<MappingItemTransformer> getMappingItemTransformers(final MappingItem mappingItem) {\n+        List<MappingItemTransformer> result = new ArrayList<>();\n+\n+        // First consider the JEXL transformation expressions\n+        JEXLMappingItemTransformer jexlTransformer = null;\n+        if (StringUtils.isNotBlank(mappingItem.getPropagationJEXLTransformer())\n+                || StringUtils.isNotBlank(mappingItem.getPullJEXLTransformer())) {\n+\n+            try {\n+                jexlTransformer = (JEXLMappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n+                        createBean(JEXLMappingItemTransformer.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+\n+                jexlTransformer.setPropagationJEXL(mappingItem.getPropagationJEXLTransformer());\n+                jexlTransformer.setPullJEXL(mappingItem.getPullJEXLTransformer());\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}, ignoring...\", JEXLMappingItemTransformer.class.getName(), e);\n+            }\n+        }\n+        if (jexlTransformer != null) {\n+            result.add(jexlTransformer);\n+        }\n+\n+        // Then other custom tranaformers\n+        for (String className : mappingItem.getMappingItemTransformerClassNames()) {\n+            try {\n+                Class<?> transformerClass = ClassUtils.getClass(className);\n+\n+                result.add((MappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n+                        createBean(transformerClass, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false));\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}, ignoring...\", className, e);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    /**\n+     * Build options for requesting all mapped connector attributes.\n+     *\n+     * @param mapItems mapping items\n+     * @return options for requesting all mapped connector attributes\n+     * @see OperationOptions\n+     */\n+    public static OperationOptions buildOperationOptions(final Iterator<? extends MappingItem> mapItems) {\n+        OperationOptionsBuilder builder = new OperationOptionsBuilder();\n+\n+        Set<String> attrsToGet = new HashSet<>();\n+        attrsToGet.add(Name.NAME);\n+        attrsToGet.add(Uid.NAME);\n+        attrsToGet.add(OperationalAttributes.ENABLE_NAME);\n+\n+        while (mapItems.hasNext()) {\n+            MappingItem mapItem = mapItems.next();\n+            if (mapItem.getPurpose() != MappingPurpose.NONE) {\n+                attrsToGet.add(mapItem.getExtAttrName());\n+            }\n+        }\n+\n+        builder.setAttributesToGet(attrsToGet);\n+        // -------------------------------------\n+\n+        return builder.build();\n+    }\n+\n+    /**\n+     * Private default constructor, for static-only classes.\n+     */\n+    private MappingUtils() {\n+    }\n+}"},{"sha":"37c81819fda2baff9a10680abb2505fa34d4ebd5","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -122,4 +122,5 @@ under the License.\n     <property name=\"stringLocations\" value=\"${connid.locations}\"/>\n   </bean>\n \n+  <bean class=\"org.apache.syncope.core.provisioning.java.IntAttrNameParser\"/>\n </beans>"},{"sha":"c603f8acd76fcda3c64fc818327684c43b65c218","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/IntAttrNameParserTest.java","status":"added","additions":161,"deletions":0,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -0,0 +1,161 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.fail;\n+\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.core.provisioning.api.IntAttrName;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional(\"Master\")\n+public class IntAttrNameParserTest extends AbstractTest {\n+\n+    @Autowired\n+    private IntAttrNameParser intAttrNameParser;\n+\n+    @Test\n+    public void ownFields() {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"key\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n+        assertNotNull(intAttrName.getField());\n+        assertEquals(\"key\", intAttrName.getField());\n+        assertNull(intAttrName.getSchemaName());\n+        assertNull(intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+\n+        intAttrName = intAttrNameParser.parse(\"name\", AnyTypeKind.GROUP);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.GROUP, intAttrName.getAnyTypeKind());\n+        assertNotNull(intAttrName.getField());\n+        assertEquals(\"name\", intAttrName.getField());\n+        assertNull(intAttrName.getSchemaName());\n+        assertNull(intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+\n+        intAttrName = intAttrNameParser.parse(\"userOwner\", AnyTypeKind.GROUP);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.GROUP, intAttrName.getAnyTypeKind());\n+        assertNotNull(intAttrName.getField());\n+        assertEquals(\"userOwner\", intAttrName.getField());\n+        assertNull(intAttrName.getSchemaName());\n+        assertNull(intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+\n+        intAttrName = intAttrNameParser.parse(\"name\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+    }\n+\n+    @Test\n+    public void ownSchema() {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"email\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertEquals(\"email\", intAttrName.getSchemaName());\n+        assertEquals(SchemaType.PLAIN, intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+\n+        intAttrName = intAttrNameParser.parse(\"cn\", AnyTypeKind.ANY_OBJECT);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.ANY_OBJECT, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertEquals(\"cn\", intAttrName.getSchemaName());\n+        assertEquals(SchemaType.DERIVED, intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+\n+        intAttrName = intAttrNameParser.parse(\"rvirtualdata\", AnyTypeKind.ANY_OBJECT);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.ANY_OBJECT, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertEquals(\"rvirtualdata\", intAttrName.getSchemaName());\n+        assertEquals(SchemaType.VIRTUAL, intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+    }\n+\n+    @Test\n+    public void enclosingGroup() {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"groups[readers].cn\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.GROUP, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertEquals(\"cn\", intAttrName.getSchemaName());\n+        assertEquals(SchemaType.DERIVED, intAttrName.getSchemaType());\n+        assertEquals(\"readers\", intAttrName.getEnclosingGroup());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+    }\n+\n+    @Test\n+    public void relatedAnyObject() {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"anyObjects[hp].name\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.ANY_OBJECT, intAttrName.getAnyTypeKind());\n+        assertEquals(\"name\", intAttrName.getField());\n+        assertNull(intAttrName.getSchemaName());\n+        assertNull(intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertEquals(\"hp\", intAttrName.getRelatedAnyObject());\n+        assertNull(intAttrName.getMembershipOfGroup());\n+    }\n+\n+    @Test\n+    public void membership() {\n+        IntAttrName intAttrName = intAttrNameParser.parse(\"memberships[top].cn\", AnyTypeKind.USER);\n+        assertNotNull(intAttrName);\n+        assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n+        assertNull(intAttrName.getField());\n+        assertEquals(\"cn\", intAttrName.getSchemaName());\n+        assertEquals(SchemaType.DERIVED, intAttrName.getSchemaType());\n+        assertNull(intAttrName.getEnclosingGroup());\n+        assertEquals(\"top\", intAttrName.getMembershipOfGroup());\n+        assertNull(intAttrName.getRelatedAnyObject());\n+    }\n+\n+    @Test\n+    public void invalid() {\n+        try {\n+            intAttrNameParser.parse(\"memberships.cn\", AnyTypeKind.USER);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertNotNull(e);\n+        }\n+    }\n+}"},{"sha":"0e84b686dcf7ae6c5c85534899bc6c73179d7e34","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/MappingTest.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingTest.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -57,12 +58,12 @@ public void connObjectLink() {\n         User user = userDAO.findByUsername(\"rossini\");\n         assertNotNull(user);\n \n-        Name name = MappingManagerImpl.evaluateNAME(user, provision, user.getUsername());\n+        Name name = MappingUtils.evaluateNAME(user, provision, user.getUsername());\n         assertEquals(\"uid=rossini,ou=people,o=isp\", name.getNameValue());\n \n         provision.getMapping().setConnObjectLink(\"'uid=' + username + ',o=' + realm + ',ou=people,o=isp'\");\n \n-        name = MappingManagerImpl.evaluateNAME(user, provision, user.getUsername());\n+        name = MappingUtils.evaluateNAME(user, provision, user.getUsername());\n         assertEquals(\"uid=rossini,o=even,ou=people,o=isp\", name.getNameValue());\n     }\n }"},{"sha":"822860fdad3b900f061e354f6503a836c2e6c982","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/PrefixMappingItemTransformer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -34,11 +34,11 @@ public class PrefixMappingItemTransformer extends DefaultMappingItemTransformer\n     @Override\n     public List<PlainAttrValue> beforePropagation(\n             final MappingItem mappingItem,\n-            final List<Any<?>> anys,\n+            final Any<?> any,\n             final List<PlainAttrValue> values) {\n \n         if (values == null || values.isEmpty() || values.get(0).getStringValue() == null) {\n-            return super.beforePropagation(mappingItem, anys, values);\n+            return super.beforePropagation(mappingItem, any, values);\n         } else {\n             String value = values.get(0).getStringValue();\n             values.get(0).setStringValue(PREFIX + value);"},{"sha":"849db319a17fdd1126d26da67051f2f9df374a47","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -43,17 +43,7 @@ private void createNotification(final String sender, final String subject) {\n         FormTester formTester = wicketTester.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n \n-        // -------------------------------\n-        // generate event to populate recipientAttrName\n-        // -------------------------------\n-        formTester.setValue(\"content:form:view:recipientAttrType:dropDownChoiceField\", \"3\");\n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n-                + \"form:view:recipientAttrType:dropDownChoiceField\", Constants.ON_CHANGE);\n-        // -------------------------------\n-\n-        formTester.select(\"content:form:view:recipientAttrType:dropDownChoiceField\", 3);\n-        formTester.setValue(\"content:form:view:recipientAttrType:dropDownChoiceField\", \"3\");\n-        formTester.setValue(\"content:form:view:recipientAttrName:dropDownChoiceField\", \"0\");\n+        formTester.setValue(\"content:form:view:recipientAttrName:textField\", \"email\");\n         formTester.select(\"content:form:view:template:dropDownChoiceField\", 2);\n         formTester.select(\"content:form:view:traceLevel:dropDownChoiceField\", 0);\n         formTester.setValue(\"content:form:view:sender:textField\", sender);"},{"sha":"1ad33eaecfb1e9666d6bb5bcfc5db7a161e43757","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -168,23 +168,12 @@ public void createNewResurceAndProvisionRules() {\n         formTester = wicketTester.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n-        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n-        wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n-                + \":view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", Constants.ON_CHANGE);\n-\n-        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", \"4\");\n-        wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n-                + \":view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", Constants.ON_CHANGE);\n-\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n         wicketTester.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n \n-        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n-        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", \"4\");\n+        formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intAttrName:textField\", \"key\");\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:extAttrName:textField\", \"ID\");\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n "},{"sha":"326cf96807208f3f604bd9bbb7c34d17315d0ed8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":20,"deletions":11,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -867,8 +867,17 @@ public void issue178() {\n \n     @Test\n     public void issueSYNCOPE632() {\n-        GroupTO groupTO = null;\n+        GroupTO groupTO = getSampleTO(\"lastGroup\");\n         try {\n+            // 0. create group\n+            groupTO.getPlainAttrs().add(attrTO(\"icon\", \"anIcon\"));\n+            groupTO.getPlainAttrs().add(attrTO(\"show\", \"true\"));\n+            groupTO.getDerAttrs().add(attrTO(\"displayProperty\", null));\n+            groupTO.getResources().clear();\n+\n+            groupTO = createGroup(groupTO).getAny();\n+            assertNotNull(groupTO);\n+\n             // 1. create new LDAP resource having ConnObjectKey mapped to a derived attribute\n             ResourceTO newLDAP = resourceService.read(RESOURCE_NAME_LDAP);\n             newLDAP.setKey(\"new-ldap\");\n@@ -887,22 +896,22 @@ public void issueSYNCOPE632() {\n             mapping.setConnObjectLink(\"'cn=' + displayProperty + ',ou=groups,o=isp'\");\n \n             MappingItemTO description = new MappingItemTO();\n+            description.setIntAttrName(\"key\");\n             description.setExtAttrName(\"description\");\n-            description.setPurpose(MappingPurpose.BOTH);\n+            description.setPurpose(MappingPurpose.PROPAGATION);\n             mapping.add(description);\n \n             newLDAP = createResource(newLDAP);\n             assertNotNull(newLDAP);\n \n-            // 2. create a group and give the resource created above\n-            groupTO = getSampleTO(\"lastGroup\" + getUUIDString());\n-            groupTO.getPlainAttrs().add(attrTO(\"icon\", \"anIcon\"));\n-            groupTO.getPlainAttrs().add(attrTO(\"show\", \"true\"));\n-            groupTO.getDerAttrs().add(attrTO(\"displayProperty\", null));\n-            groupTO.getResources().clear();\n-            groupTO.getResources().add(\"new-ldap\");\n+            // 2. update group and give the resource created above\n+            GroupPatch patch = new GroupPatch();\n+            patch.setKey(groupTO.getKey());\n+            patch.getResources().add(new StringPatchItem.Builder().\n+                    operation(PatchOperation.ADD_REPLACE).\n+                    value(\"new-ldap\").build());\n \n-            groupTO = createGroup(groupTO).getAny();\n+            groupTO = updateGroup(patch).getAny();\n             assertNotNull(groupTO);\n \n             // 3. update the group\n@@ -943,7 +952,7 @@ public void issueSYNCOPE632() {\n \n             assertEquals(1, entries);\n         } finally {\n-            if (groupTO != null) {\n+            if (groupTO.getKey() != null) {\n                 groupService.delete(groupTO.getKey());\n             }\n             resourceService.delete(\"new-ldap\");"},{"sha":"3d98f2823ce54aa51b402bc87f80c092790de5a0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MembershipITCase.java","status":"modified","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -18,30 +18,47 @@\n  */\n package org.apache.syncope.fit.core;\n \n+import static org.apache.syncope.fit.core.AbstractTaskITCase.execProvisioningTask;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.AttrPatch;\n+import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.patch.MembershipPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PatchOperation;\n+import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n+import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n+import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class MembershipITCase extends AbstractITCase {\n@@ -203,4 +220,99 @@ public void onGroupDelete() {\n         user = userService.read(user.getKey());\n         assertTrue(user.getMemberships().isEmpty());\n     }\n+\n+    @Test\n+    public void syncWithMembershipAttr() {\n+        // 0. create ad-hoc resource, with adequate mapping\n+        ResourceTO newResource = resourceService.read(RESOURCE_NAME_DBPULL);\n+        newResource.setKey(getUUIDString());\n+\n+        MappingItemTO item = IterableUtils.find(newResource.getProvision(\"USER\").getMapping().getItems(),\n+                new Predicate<MappingItemTO>() {\n+\n+            @Override\n+            public boolean evaluate(final MappingItemTO object) {\n+                return \"firstname\".equals(object.getIntAttrName());\n+            }\n+        });\n+        assertNotNull(item);\n+        assertEquals(\"ID\", item.getExtAttrName());\n+        item.setIntAttrName(\"memberships[additional].aLong\");\n+        item.setPurpose(MappingPurpose.BOTH);\n+\n+        item = IterableUtils.find(newResource.getProvision(\"USER\").getMapping().getItems(),\n+                new Predicate<MappingItemTO>() {\n+\n+            @Override\n+            public boolean evaluate(final MappingItemTO object) {\n+                return \"fullname\".equals(object.getIntAttrName());\n+            }\n+        });\n+        item.setPurpose(MappingPurpose.PULL);\n+\n+        PullTaskTO newTask = null;\n+        try {\n+            newResource = createResource(newResource);\n+            assertNotNull(newResource);\n+\n+            // 1. create user with new resource assigned\n+            UserTO user = UserITCase.getUniqueSampleTO(\"memb@apache.org\");\n+            user.setRealm(\"/even/two\");\n+            user.getPlainAttrs().remove(user.getPlainAttrMap().get(\"ctype\"));\n+            user.getResources().clear();\n+            user.getResources().add(newResource.getKey());\n+\n+            MembershipTO membership = new MembershipTO.Builder().group(\"034740a9-fa10-453b-af37-dc7897e98fb1\").build();\n+            membership.getPlainAttrs().add(new AttrTO.Builder().schema(\"aLong\").value(\"5432\").build());\n+            user.getMemberships().add(membership);\n+\n+            user = createUser(user).getAny();\n+            assertNotNull(user);\n+\n+            // 2. verify that user was found on resource\n+            JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+            String idOnResource = jdbcTemplate.queryForObject(\n+                    \"SELECT id FROM testpull WHERE id=?\", String.class, \"5432\");\n+            assertEquals(\"5432\", idOnResource);\n+\n+            // 3. unlink user from resource, then remove it\n+            DeassociationPatch patch = new DeassociationPatch();\n+            patch.setKey(user.getKey());\n+            patch.setAction(ResourceDeassociationAction.UNLINK);\n+            patch.getResources().add(newResource.getKey());\n+            assertNotNull(userService.deassociate(patch).readEntity(BulkActionResult.class));\n+\n+            userService.delete(user.getKey());\n+\n+            // 4. create pull task and execute\n+            newTask = taskService.read(\"7c2242f4-14af-4ab5-af31-cdae23783655\", true);\n+            newTask.setResource(newResource.getKey());\n+            newTask.setDestinationRealm(\"/even/two\");\n+\n+            Response response = taskService.create(newTask);\n+            newTask = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n+            assertNotNull(newTask);\n+\n+            ExecTO execution = execProvisioningTask(taskService, newTask.getKey(), 50, false);\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+\n+            // 5. verify that pulled user has\n+            PagedResult<UserTO> users = userService.search(new AnySearchQuery.Builder().\n+                    realm(\"/\").\n+                    fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                            is(\"username\").equalTo(user.getUsername()).query()).build());\n+            assertEquals(1, users.getTotalCount());\n+            assertEquals(1, users.getResult().get(0).getMemberships().size());\n+            assertEquals(\"5432\", users.getResult().get(0).getMemberships().get(0).\n+                    getPlainAttrMap().get(\"aLong\").getValues().get(0));\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected error\", e);\n+            fail(e.getMessage());\n+        } finally {\n+            if (newTask != null && !\"83f7e85d-9774-43fe-adba-ccd856312994\".equals(newTask.getKey())) {\n+                taskService.delete(newTask.getKey());\n+            }\n+            resourceService.delete(newResource.getKey());\n+        }\n+    }\n }"},{"sha":"59de26b0d63763e85e3fe5e9543a96bff860604f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MigrationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -339,7 +339,7 @@ private void setupResource(final String connectorKey, final String anyTypeClass)\n         provisionTO.setMapping(mapping);\n \n         item = new MappingItemTO();\n-        item.setIntAttrName(\"groupName\");\n+        item.setIntAttrName(\"name\");\n         item.setExtAttrName(\"name\");\n         item.setMandatoryCondition(\"true\");\n         item.setPurpose(MappingPurpose.PULL);\n@@ -417,7 +417,7 @@ private String setupPullTask() {\n     public void migrateFromSyncope12() throws InterruptedException {\n         // 1. cleanup\n         try {\n-            realmService.delete(MIGRATION_REALM);\n+            realmService.delete(\"/\" + MIGRATION_REALM);\n         } catch (Exception e) {\n             // ignore\n         }"},{"sha":"6d7dd0dc93d060a06297446a0fc7320f823b3805","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":32,"deletions":4,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7517772baae1da11aa2364e2f2cbd52c9514715/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=d7517772baae1da11aa2364e2f2cbd52c9514715","patch":"@@ -255,10 +255,8 @@ public void createWithInvalidMapping() {\n             createResource(resourceTO);\n             fail(\"Create should not have worked\");\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.Composite, e.getType());\n-            SyncopeClientException rvm = e.asComposite().getException(ClientExceptionType.RequiredValuesMissing);\n-            assertNotNull(rvm);\n-            assertEquals(\"intAttrName\", rvm.getElements().iterator().next());\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n+            assertEquals(\"intAttrName\", e.getElements().iterator().next());\n         }\n     }\n \n@@ -701,4 +699,34 @@ public void issueSYNCOPE493() {\n             }\n         }\n     }\n+\n+    public void issueSYNCOPE645() {\n+        ResourceTO resource = new ResourceTO();\n+        resource.setKey(\"ws-target-resource-basic-save-invalid\");\n+\n+        String connector = resourceService.read(\"ws-target-resource-1\").getConnector();\n+        resource.setConnector(connector);\n+\n+        ProvisionTO provision = new ProvisionTO();\n+        provision.setAnyType(AnyTypeKind.USER.name());\n+        provision.setObjectClass(\"__ACCOUNT__\");\n+        resource.getProvisions().add(provision);\n+\n+        MappingTO mapping = new MappingTO();\n+        provision.setMapping(mapping);\n+\n+        MappingItemTO item = new MappingItemTO();\n+        item.setIntAttrName(\"icon\");\n+        item.setExtAttrName(\"icon\");\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.setConnObjectKeyItem(item);\n+\n+        // save the resource\n+        try {\n+            resourceService.create(resource);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidMapping, e.getType());\n+        }\n+    }\n }"}]}