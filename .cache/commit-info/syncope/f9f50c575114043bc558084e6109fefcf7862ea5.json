{"sha":"f9f50c575114043bc558084e6109fefcf7862ea5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY5ZjUwYzU3NTExNDA0M2JjNTU4MDg0ZTYxMDlmZWZjZjc4NjJlYTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-07T15:51:20Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-07T15:51:20Z"},"message":"[SYNCOPE-744] Here is the reconciliation status widget","tree":{"sha":"3b220febffdad345eba2e8f1427c229dd3fc8cc6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3b220febffdad345eba2e8f1427c229dd3fc8cc6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f9f50c575114043bc558084e6109fefcf7862ea5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f9f50c575114043bc558084e6109fefcf7862ea5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f9f50c575114043bc558084e6109fefcf7862ea5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f9f50c575114043bc558084e6109fefcf7862ea5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"581f5247dfbece310ca4fb3fcdaca6fdc116ca20","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/581f5247dfbece310ca4fb3fcdaca6fdc116ca20","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/581f5247dfbece310ca4fb3fcdaca6fdc116ca20"}],"stats":{"total":2819,"additions":2258,"deletions":561},"files":[{"sha":"9588709e64525ebbb333e39d98016428fb8172bf","filename":"client/console/pom.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -94,11 +94,6 @@ under the License.\n       <groupId>com.pingunaut</groupId>\n       <artifactId>wicket-chartjs</artifactId>\n     </dependency>\t\n-      \n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.syncope.client</groupId>\n@@ -139,6 +134,11 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery-ui</artifactId>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency>\n   </dependencies>\n   \n   <build>"},{"sha":"396752a7a40e5c86098d73700743ab0d4ff04740","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -183,6 +183,11 @@ public Roles getRoles() {\n         return roles;\n     }\n \n+    public void refreshAuth() {\n+        authenticate(username, password);\n+        roles = null;\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     private <T> T getCachedService(final Class<T> serviceClass) {\n         T service;"},{"sha":"033ee0a7b3fb2913aa3fc0d898a7aff9e266fe28","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkActionModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -42,7 +42,7 @@ public BulkActionModal(\n             final String keyFieldName) {\n \n         super(modal, pageRef);\n-        add(new BulkContent<T, S>(\"content\", modal, pageRef, items, columns, actions, bulkActionExecutor, keyFieldName).\n+        add(new BulkContent<>(\"content\", modal, items, columns, actions, bulkActionExecutor, keyFieldName).\n                 setRenderBodyOnly(true));\n     }\n }"},{"sha":"153c39c12231ed19f2993fad4a4c65f2c2857ef4","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -38,13 +38,11 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n@@ -65,20 +63,19 @@\n \n     public BulkContent(\n             final BaseModal<?> modal,\n-            final PageReference pageRef,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,\n             final Collection<ActionLink.ActionType> actions,\n             final BaseRestClient bulkActionExecutor,\n             final String keyFieldName) {\n+\n         this(MultilevelPanel.SECOND_LEVEL_ID,\n-                modal, pageRef, items, columns, actions, bulkActionExecutor, keyFieldName);\n+                modal, items, columns, actions, bulkActionExecutor, keyFieldName);\n     }\n \n     public BulkContent(\n             final String id,\n             final BaseModal<?> modal,\n-            final PageReference pageRef,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,\n             final Collection<ActionLink.ActionType> actions,\n@@ -117,7 +114,7 @@ public IModel<T> model(final T object) {\n                 dataProvider,\n                 Integer.MAX_VALUE).setMarkupId(\"selectedObjects\").setVisible(items != null && !items.isEmpty()));\n \n-        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n+        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder().build(\"actions\");\n         container.add(actionPanel);\n \n         for (ActionLink.ActionType action : actions) {\n@@ -149,8 +146,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n-                            final AbstractAnyRestClient<?> anyRestClient\n-                                    = AbstractAnyRestClient.class.cast(bulkActionExecutor);\n+                            final AbstractAnyRestClient<?> anyRestClient =\n+                                    AbstractAnyRestClient.class.cast(bulkActionExecutor);\n \n                             if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {\n                                 throw new IllegalArgumentException(\"Invalid items\");\n@@ -227,11 +224,9 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         target.add(actionPanel);\n \n                         info(getString(Constants.OPERATION_SUCCEEDED));\n-                    } catch (SyncopeClientException | NoSuchMethodException | SecurityException | IllegalAccessException\n-                            | IllegalArgumentException | InvocationTargetException e) {\n+                    } catch (Exception e) {\n                         LOG.error(\"Bulk action failure\", e);\n-                        error(getString(Constants.ERROR)\n-                                + \": Operation \" + actionToBeAddresed.getActionId() + \" not supported\");\n+                        error(\"Operation \" + actionToBeAddresed.getActionId() + \" not supported\");\n                     }\n                     SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                 }"},{"sha":"a25636b9b2a0e623618cff7ed0633f5e071bae6c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/MustChangePassword.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMustChangePassword.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.UserSelfRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -93,7 +93,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 } catch (Exception e) {\n                     LOG.error(\"While changing password for {}\",\n                             SyncopeConsoleSession.get().getSelfTO().getUsername(), e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                 }\n             }"},{"sha":"2ee818f70fff03f832902781d9de45dac1b0170e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -157,8 +157,8 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     target.add(content);                  \n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);\n-                    // Excape line breaks\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage().replace(\"\\n\", \" \"));\n+                    // Escape line breaks\n+                    error(e.getMessage().replace(\"\\n\", \" \"));\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }"},{"sha":"dbd79a7c87a1002cd13840646f4ef367a2793da7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -48,7 +49,7 @@ public AbstractLogsPanel(\n             final String id,\n             final PageReference pageRef,\n             final List<LoggerTO> loggerTOs) {\n-        \n+\n         super(id);\n \n         WebMarkupContainer container = new WebMarkupContainer(\"loggerContainer\");\n@@ -79,7 +80,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                                 target.add(loggerTOs);\n                             } catch (SyncopeClientException e) {\n                                 LOG.error(\"Error updating the logger level\", e);\n-                                error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                             }\n                             SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                         }"},{"sha":"8c465f3c8e16b43730f2130b6e2c13e529a3a239","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.wicket.AttributeModifier;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -50,19 +49,14 @@\n \n     private final ActionLinksPanel<Serializable> actionPanel;\n \n-    private final PageReference pageRef;\n-\n     public ActionDataTablePanel(\n             final String id,\n             final List<IColumn<T, S>> columns,\n             final ISortableDataProvider<T, S> dataProvider,\n-            final int rowsPerPage,\n-            final PageReference pageRef) {\n+            final int rowsPerPage) {\n \n         super(id);\n \n-        this.pageRef = pageRef;\n-\n         bulkActionForm = new Form<>(\"groupForm\");\n         add(bulkActionForm);\n \n@@ -93,7 +87,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         final WebMarkupContainer actionPanelContainer = new WebMarkupContainer(\"actionPanelContainer\");\n         bulkActionForm.add(actionPanelContainer);\n \n-        actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n+        actionPanel = ActionLinksPanel.builder().build(\"actions\");\n         actionPanelContainer.add(actionPanel);\n \n         if (dataTable.getRowCount() == 0) {"},{"sha":"d02a784ba0ea6c5cb1fce3dc17c1d014484659d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -223,9 +223,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     bulkModal.show(true);\n                 } else {\n-                    builder.multiLevelPanel.next(\"bulk.action\", new BulkContent<T, S>(\n+                    builder.multiLevelPanel.next(\"bulk.action\", new BulkContent<>(\n                             builder.baseModal,\n-                            builder.pageRef,\n                             group.getModelObject(),\n                             // serialization problem with sublist only\n                             new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),"},{"sha":"8eeb37bf59f788dd2b37f63a35362a4c13f79bcb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,6 +24,7 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n@@ -74,9 +75,7 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n \n             final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n \n-            if (\"token\".equalsIgnoreCase(name)) {\n-                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n+            if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             } else {\n                 columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n@@ -104,30 +103,29 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n             for (String name : AnyObjectDisplayAttributesModalPage.ANY_OBJECT_DEFAULT_SELECTION) {\n                 columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             }\n-\n         }\n \n         setWindowClosedReloadCallback(displayAttributeModal);\n-        \n+\n         columns.add(new ActionColumn<AnyObjectTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n \n             @Override\n             public ActionLinksPanel<AnyObjectTO> getActions(final String componentId, final IModel<AnyObjectTO> model) {\n-                final ActionLinksPanel.Builder<AnyObjectTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<AnyObjectTO> panel = ActionLinksPanel.builder();\n \n                 panel.add(new ActionLink<AnyObjectTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770645L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                                final IModel<AnyHandler<AnyObjectTO>> formModel\n-                                        = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        final IModel<AnyHandler<AnyObjectTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n                         altDefaultModal.setFormModel(formModel);\n \n-                        target.add(altDefaultModal.setContent(new StatusModal<AnyObjectTO>(\n+                        target.add(altDefaultModal.setContent(new StatusModal<>(\n                                 altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n \n                         altDefaultModal.header(new Model<>(\n@@ -173,7 +171,8 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n                                     LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -184,7 +183,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n \n             @Override\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n \n                 panel.add(new ActionLink<Serializable>() {\n "},{"sha":"8fa1b5a38847a37d29ecb4e852f8471ccbacf06d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -84,7 +84,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                             modal.close(target);\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating AnyTypeClassTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n@@ -156,7 +156,7 @@ public String getCssClass() {\n             public ActionLinksPanel<AnyTypeClassTO> getActions(\n                     final String componentId, final IModel<AnyTypeClassTO> model) {\n \n-                ActionLinksPanel<AnyTypeClassTO> panel = ActionLinksPanel.<AnyTypeClassTO>builder(pageRef).\n+                ActionLinksPanel<AnyTypeClassTO> panel = ActionLinksPanel.<AnyTypeClassTO>builder().\n                         add(new ActionLink<AnyTypeClassTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -180,7 +180,8 @@ public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore)\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -192,8 +193,7 @@ public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore)\n \n             @Override\n             public ActionLinksPanel<AnyTypeClassTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AnyTypeClassTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<AnyTypeClassTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<AnyTypeClassTO>() {\n "},{"sha":"978c29924e6e0d129351eaaf55d30f9b1cf30300","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -78,14 +78,15 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         try {\n                             if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n                                 SyncopeConsoleSession.get().getService(AnyTypeService.class).create(modelObject);\n+                                SyncopeConsoleSession.get().refreshAuth();\n                             } else {\n                                 SyncopeConsoleSession.get().getService(AnyTypeService.class).update(modelObject);\n                             }\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             modal.close(target);\n                         } catch (Exception e) {\n-                            LOG.error(\"While creating or updating AnyTypeTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            LOG.error(\"While creating or updating {}\", modelObject, e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n@@ -157,7 +158,7 @@ public String getCssClass() {\n             public ActionLinksPanel<AnyTypeTO> getActions(\n                     final String componentId, final IModel<AnyTypeTO> model) {\n \n-                ActionLinksPanel<AnyTypeTO> panel = ActionLinksPanel.<AnyTypeTO>builder(pageRef).\n+                ActionLinksPanel<AnyTypeTO> panel = ActionLinksPanel.<AnyTypeTO>builder().\n                         add(new ActionLink<AnyTypeTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -177,11 +178,14 @@ public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n                                 try {\n                                     SyncopeConsoleSession.get().\n                                             getService(AnyTypeService.class).delete(model.getObject().getKey());\n+                                    SyncopeConsoleSession.get().refreshAuth();\n+\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage()) \n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -193,8 +197,7 @@ public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n \n             @Override\n             public ActionLinksPanel<AnyTypeTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AnyTypeTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<AnyTypeTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<AnyTypeTO>() {\n "},{"sha":"33b04bc02daccc988c198d967b40dd7f5d574b47","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n@@ -166,8 +167,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             modal.close(target);\n             info(getString(Constants.OPERATION_SUCCEEDED));\n         } catch (Exception e) {\n-            LOG.error(\"Failure managing resource {}\", connInstanceTO, e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            LOG.error(\"Failure managing {}\", connInstanceTO, e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }"},{"sha":"8641aa14e0675399782371e7126e6d2b4583835a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DashboardControlPanel.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.widgets.JobWidget;\n+import org.apache.syncope.client.console.widgets.ReconciliationWidget;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -39,5 +40,13 @@ public DashboardControlPanel(final String id, final PageReference pageRef) {\n                         StandardEntitlement.TASK_LIST,\n                         StandardEntitlement.REPORT_LIST));\n         add(job);\n+\n+        ReconciliationWidget reconciliation = new ReconciliationWidget(\"reconciliation\", pageRef);\n+        MetaDataRoleAuthorizationStrategy.authorize(job, WebPage.ENABLE,\n+                String.format(\"%s,%s,%s\",\n+                        StandardEntitlement.REPORT_EXECUTE,\n+                        StandardEntitlement.REPORT_READ,\n+                        StandardEntitlement.REPORT_LIST));\n+        add(reconciliation);\n     }\n }"},{"sha":"c82b56fa6bd91430b7d360663ce4fc9db81adca2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -25,6 +25,7 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -105,14 +106,14 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n         }\n \n         setWindowClosedReloadCallback(displayAttributeModal);\n-        \n+\n         columns.add(new ActionColumn<GroupTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n \n             @Override\n             public ActionLinksPanel<GroupTO> getActions(final String componentId, final IModel<GroupTO> model) {\n-                final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder();\n \n                 panel.\n                         add(new ActionLink<GroupTO>() {\n@@ -121,11 +122,11 @@ public ActionLinksPanel<GroupTO> getActions(final String componentId, final IMod\n \n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                                final IModel<AnyHandler<GroupTO>> formModel\n-                                        = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                                final IModel<AnyHandler<GroupTO>> formModel =\n+                                        new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n                                 altDefaultModal.setFormModel(formModel);\n \n-                                target.add(altDefaultModal.setContent(new StatusModal<GroupTO>(\n+                                target.add(altDefaultModal.setContent(new StatusModal<>(\n                                         altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n \n                                 altDefaultModal.header(new Model<>(\n@@ -169,8 +170,9 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                                     LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -181,7 +183,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n \n             @Override\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<Serializable>() {\n "},{"sha":"ebc0b183bd62700900e18e141668542b2ed0c7d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -154,7 +154,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void populateItem(final ListItem<T> beanItem) {\n-                beanItem.add(new Check<T>(\"check\", beanItem.getModel(), checkGroup).setOutputMarkupId(true)\n+                beanItem.add(new Check<>(\"check\", beanItem.getModel(), checkGroup).setOutputMarkupId(true)\n                         .setOutputMarkupPlaceholderTag(true)\n                         .setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n                                 || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED)\n@@ -234,7 +234,7 @@ public Builder(final Class<T> reference, final PageReference pageRef) {\n             super(pageRef);\n             this.reference = reference;\n             this.items = null;\n-            this.actions = ActionLinksPanel.<T>builder(pageRef);\n+            this.actions = ActionLinksPanel.<T>builder();\n         }\n \n         public Builder<T> setModel(final IModel<? extends Collection<T>> model) {"},{"sha":"4d2795a0024994eaa752b8e2f8eabe9c51089631","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersEditModalPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersEditModalPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -58,7 +59,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             info(getString(Constants.OPERATION_SUCCEEDED));\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating AttrTO\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }"},{"sha":"6ee4ae06117d8026396f4b865f875f631858c018","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,6 +24,7 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n@@ -142,7 +143,7 @@ protected List<IColumn<AttrTO, String>> getColumns() {\n \n             @Override\n             public ActionLinksPanel<AttrTO> getActions(final String componentId, final IModel<AttrTO> model) {\n-                ActionLinksPanel<AttrTO> panel = ActionLinksPanel.<AttrTO>builder(pageRef).\n+                ActionLinksPanel<AttrTO> panel = ActionLinksPanel.<AttrTO>builder().\n                         add(new ActionLink<AttrTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -172,7 +173,8 @@ public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -184,8 +186,7 @@ public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n \n             @Override\n             public ActionLinksPanel<AttrTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AttrTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<AttrTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<AttrTO>() {\n "},{"sha":"73118b42a16efbb853171ec79732cf4ecb10dadf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -78,7 +78,7 @@ public RealmTO getRealmTO() {\n         return realmTO;\n     }\n \n-    private List<ITab> buildTabList(final PageReference pageReference) {\n+    private List<ITab> buildTabList(final PageReference pageRef) {\n \n         final List<ITab> tabs = new ArrayList<>();\n \n@@ -88,7 +88,7 @@ private List<ITab> buildTabList(final PageReference pageReference) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                final ActionLinksPanel<RealmTO> actionLinksPanel = ActionLinksPanel.<RealmTO>builder(pageRef).\n+                final ActionLinksPanel<RealmTO> actionLinksPanel = ActionLinksPanel.<RealmTO>builder().\n                         add(new ActionLink<RealmTO>(realmTO) {\n \n                             private static final long serialVersionUID = 2802988981431379827L;\n@@ -133,14 +133,14 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return getAnyPanel(panelId, pageReference, anyTypeTO);\n+                    return getAnyPanel(panelId, pageRef, anyTypeTO);\n                 }\n             });\n         }\n         return tabs;\n     }\n \n-    private Panel getAnyPanel(final String id, final PageReference pageReference, final AnyTypeTO anyTypeTO) {\n+    private Panel getAnyPanel(final String id, final PageReference pageRef, final AnyTypeTO anyTypeTO) {\n         final Panel panel;\n         switch (anyTypeTO.getKind()) {\n             case USER:\n@@ -149,7 +149,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 panel = new UserSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageReference).setRealm(realmTO.getFullPath()).\n+                        pageRef).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new UserWizardBuilder(\n                                 BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n@@ -160,7 +160,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 panel = new GroupSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageReference).setRealm(realmTO.getFullPath()).\n+                        pageRef).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new GroupWizardBuilder(\n                                 BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 // list of group is available to all authenticated users\n@@ -172,7 +172,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 panel = new AnyObjectSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageReference).setRealm(realmTO.getFullPath()).\n+                        pageRef).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,"},{"sha":"287e2a65cbac771f5c244610f59138329d0138bb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n@@ -82,7 +83,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             info(getString(Constants.OPERATION_SUCCEEDED));\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating realm\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }"},{"sha":"81df00e83fb4efe5bc245e3775840982f2bc52d7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -86,8 +86,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             modal.close(target);\n                         } catch (Exception e) {\n-                            LOG.error(\"While creating or updating RelationshipTypeTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            LOG.error(\"While creating or updating {}\", modelObject, e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n@@ -160,7 +160,7 @@ public String getCssClass() {\n             public ActionLinksPanel<RelationshipTypeTO> getActions(\n                     final String componentId, final IModel<RelationshipTypeTO> model) {\n \n-                ActionLinksPanel<RelationshipTypeTO> panel = ActionLinksPanel.<RelationshipTypeTO>builder(pageRef).\n+                ActionLinksPanel<RelationshipTypeTO> panel = ActionLinksPanel.<RelationshipTypeTO>builder().\n                         add(new ActionLink<RelationshipTypeTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -184,7 +184,8 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ign\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -196,8 +197,7 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ign\n \n             @Override\n             public ActionLinksPanel<RelationshipTypeTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<RelationshipTypeTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<RelationshipTypeTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<RelationshipTypeTO>() {\n "},{"sha":"06132965b59c67ab4ea98c559d16fcae187ffaa5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -221,9 +221,7 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                     entity = mapItem.getIntMappingType().getAnyTypeKind();\n                 }\n \n-                final ActionLinksPanel.Builder<Serializable> actions = ActionLinksPanel.builder(\n-                        getPage().getPageReference());\n-\n+                final ActionLinksPanel.Builder<Serializable> actions = ActionLinksPanel.builder();\n                 actions.add(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"b3405b792ecc127e9077cd0330074ed913442b5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,6 +24,7 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n@@ -255,8 +256,8 @@ public boolean evaluate(final MappingItemTO item) {\n                 info(getString(Constants.OPERATION_SUCCEEDED));\n                 modal.close(target);\n             } catch (Exception e) {\n-                LOG.error(\"Failure managing resource {}\", resourceTO, e);\n-                error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                LOG.error(\"Failure managing {}\", resourceTO, e);\n+                error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n             }\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);"},{"sha":"385637505e2aab0ee38dc1deebe72c827d2a033d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -23,6 +23,7 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.RoleDataProvider;\n@@ -87,7 +88,7 @@ protected List<IColumn<RoleTO, String>> getColumns() {\n \n             @Override\n             public ActionLinksPanel<RoleTO> getActions(final String componentId, final IModel<RoleTO> model) {\n-                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder();\n \n                 panel.add(new ActionLink<RoleTO>() {\n \n@@ -123,7 +124,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n@@ -134,7 +135,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n             @Override\n             public ActionLinksPanel<RoleTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<RoleTO>() {\n "},{"sha":"b06318da039cc0fbc3601cc029893ccb1ae71c50","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -115,8 +115,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                 info(getString(Constants.OPERATION_SUCCEEDED));\n                                 modal.close(target);\n                             } catch (Exception e) {\n-                                LOG.error(\"While creating or updating schema\", e);\n-                                error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                LOG.error(\"While creating or updating {}\", modelObject, e);\n+                                error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                             }\n                             SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                         }\n@@ -187,7 +187,7 @@ public String getCssClass() {\n             public ActionLinksPanel<AbstractSchemaTO> getActions(\n                     final String componentId, final IModel<AbstractSchemaTO> model) {\n \n-                ActionLinksPanel<AbstractSchemaTO> panel = ActionLinksPanel.<AbstractSchemaTO>builder(pageRef).\n+                ActionLinksPanel<AbstractSchemaTO> panel = ActionLinksPanel.<AbstractSchemaTO>builder().\n                         add(new ActionLink<AbstractSchemaTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -222,8 +222,9 @@ public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignor\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {\n-                                    LOG.error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                                    error(StringUtils.isBlank(e.getMessage()) \n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -235,8 +236,7 @@ public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignor\n \n             @Override\n             public ActionLinksPanel<AbstractSchemaTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AbstractSchemaTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<AbstractSchemaTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<AbstractSchemaTO>() {\n "},{"sha":"0d27f0ca9fb99a84d2f7bf88ab494651bf35648b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsModalPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -59,8 +60,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n-            LOG.error(\"While creating or updating SecutiryQuestionTO\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            LOG.error(\"While creating or updating {}\", securityQuestionTO, e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }"},{"sha":"bac8481a69df43eda5e6422438fd71683d99f319","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -154,7 +154,7 @@ public String getCssClass() {\n             public ActionLinksPanel<SecurityQuestionTO> getActions(\n                     final String componentId, final IModel<SecurityQuestionTO> model) {\n \n-                ActionLinksPanel<SecurityQuestionTO> panel = ActionLinksPanel.<SecurityQuestionTO>builder(pageRef).\n+                ActionLinksPanel<SecurityQuestionTO> panel = ActionLinksPanel.<SecurityQuestionTO>builder().\n                         add(new ActionLink<SecurityQuestionTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -178,7 +178,8 @@ public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ign\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -190,8 +191,7 @@ public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ign\n \n             @Override\n             public ActionLinksPanel<SecurityQuestionTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<SecurityQuestionTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<SecurityQuestionTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<SecurityQuestionTO>() {\n "},{"sha":"7cb3bb54dc166e63e438c0e6248b8cad9820cdef","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -25,6 +25,7 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.UserRestClient;\n@@ -105,15 +106,14 @@ protected List<IColumn<UserTO, String>> getColumns() {\n         }\n \n         setWindowClosedReloadCallback(displayAttributeModal);\n-        \n+\n         columns.add(new ActionColumn<UserTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n \n             @Override\n             public ActionLinksPanel<UserTO> getActions(final String componentId, final IModel<UserTO> model) {\n-\n-                final ActionLinksPanel.Builder<UserTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<UserTO> panel = ActionLinksPanel.builder();\n \n                 panel.add(new ActionLink<UserTO>() {\n \n@@ -122,11 +122,11 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n-                        final IModel<AnyHandler<UserTO>> formModel\n-                                = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n                         altDefaultModal.setFormModel(formModel);\n \n-                        target.add(altDefaultModal.setContent(new StatusModal<UserTO>(\n+                        target.add(altDefaultModal.setContent(new StatusModal<>(\n                                 altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n \n                         altDefaultModal.header(new Model<>(\n@@ -140,11 +140,11 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel\n-                                = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n                         altDefaultModal.setFormModel(formModel);\n \n-                        target.add(altDefaultModal.setContent(new StatusModal<UserTO>(\n+                        target.add(altDefaultModal.setContent(new StatusModal<>(\n                                 altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n \n                         altDefaultModal.header(new Model<>(\n@@ -186,7 +186,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n@@ -197,7 +197,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             @Override\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<Serializable>() {\n "},{"sha":"5c4138d8093426386380cb640cb10520cb115a5c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/XMLWorkflowEditorModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -78,7 +78,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             modal.show(false);\n             modal.close(target);\n         } catch (SyncopeClientException e) {\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n     }"},{"sha":"b6ddc5ad8b5c2588579f410c5e07d97f48a3a7e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionSearchResultPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -100,8 +100,7 @@ protected List<IColumn<T, String>> getColumns() {\n \n             @Override\n             public ActionLinksPanel<T> getActions(final String componentId, final IModel<T> model) {\n-\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder();\n \n                 panel.add(new ActionLink<T>() {\n \n@@ -110,7 +109,7 @@ public ActionLinksPanel<T> getActions(final String componentId, final IModel<T>\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final T ignore) {\n                         send(AnySelectionSearchResultPanel.this,\n-                                Broadcast.BUBBLE, new ItemSelection<T>(target, model.getObject()));\n+                                Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n                     }\n                 }, ActionLink.ActionType.SELECT, String.format(\"%s_%s\", type, AnyEntitlement.READ));\n \n@@ -119,7 +118,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n \n             @Override\n             public ActionLinksPanel<T> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder();\n \n                 return panel.\n                         add(new ActionLink<T>() {"},{"sha":"176ec79b0fbadace9f31db150fcf10529d33ed3f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -115,7 +115,6 @@ public ProvisioningResult<AnyObjectTO> delete(final String etag, final Long key)\n \n     @Override\n     public BulkActionResult bulkAction(final BulkAction action) {\n-        throw new UnsupportedOperationException(\"Not supported yet.\");\n+        return getService(AnyObjectService.class).bulk(action);\n     }\n-\n }"},{"sha":"7659a5d24034313b6db4232afca26fb044ff05e7","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ExecutionRestClient.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -19,10 +19,14 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.ExecTO;\n \n public interface ExecutionRestClient {\n \n-    void startExecution(long executionCollectorId, Date start);\n+    void startExecution(long executionCollectorKey, Date start);\n \n-    void deleteExecution(long executionId);\n+    void deleteExecution(long executionKeyI);\n+\n+    List<ExecTO> listRecentExecutions(final int max);\n }"},{"sha":"632f6cf551fe7b40cdbe723a7d4d0191a6397a27","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -118,5 +118,4 @@ public ProvisioningResult<GroupTO> delete(final String etag, final Long key) {\n     public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(GroupService.class).bulk(action);\n     }\n-\n }"},{"sha":"4a9b28e9f51c94ac3237ccc83cc0f4f1e2a538a9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -21,6 +21,8 @@\n import java.util.Date;\n import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n@@ -51,7 +53,7 @@ public void update(final ReportTO reportTO) {\n      *\n      * @param reportKey report to delete\n      */\n-    public void delete(final Long reportKey) {\n+    public void delete(final long reportKey) {\n         getService(ReportService.class).delete(reportKey);\n     }\n \n@@ -60,17 +62,17 @@ public void startExecution(final long reportKey, final Date start) {\n         getService(ReportService.class).execute(new ExecuteQuery.Builder().key(reportKey).startAt(start).build());\n     }\n \n-    /**\n-     * Delete specified report execution.\n-     *\n-     * @param reportExecId report execution id\n-     */\n     @Override\n-    public void deleteExecution(final long reportExecId) {\n-        getService(ReportService.class).deleteExecution(reportExecId);\n+    public void deleteExecution(final long reportExecKey) {\n+        getService(ReportService.class).deleteExecution(reportExecKey);\n+    }\n+\n+    @Override\n+    public List<ExecTO> listRecentExecutions(final int max) {\n+        return SyncopeConsoleSession.get().getService(ReportService.class).listRecentExecutions(max);\n     }\n \n-    public Response exportExecutionResult(final Long executionId, final ReportExecExportFormat fmt) {\n+    public Response exportExecutionResult(final long executionId, final ReportExecExportFormat fmt) {\n         return getService(ReportService.class).exportExecutionResult(executionId, fmt);\n     }\n }"},{"sha":"2338911e06b5ce7457044a37a1ad93f8f7962141","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -165,6 +165,11 @@ public void deleteExecution(final long taskExecId) {\n         getService(TaskService.class).deleteExecution(taskExecId);\n     }\n \n+    @Override\n+    public List<ExecTO> listRecentExecutions(final int max) {\n+        return SyncopeConsoleSession.get().getService(TaskService.class).listRecentExecutions(max);\n+    }\n+\n     public void create(final SchedTaskTO taskTO) {\n         getService(TaskService.class).create(taskTO);\n     }"},{"sha":"2f572d5f786b8fc575ec4929f8ea02c900418a8a","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskSearchResultPanel.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,6 +24,7 @@\n import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n@@ -69,7 +70,7 @@ protected PropagationTaskSearchResultPanel(\n \n     @Override\n     protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n-        final List<IColumn<PropagationTaskTO, String>> columns = new ArrayList<IColumn<PropagationTaskTO, String>>();\n+        final List<IColumn<PropagationTaskTO, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<PropagationTaskTO, String>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n@@ -110,7 +111,7 @@ public ActionLinksPanel<PropagationTaskTO> getActions(\n \n                 final PropagationTaskTO taskTO = model.getObject();\n \n-                final ActionLinksPanel<PropagationTaskTO> panel = ActionLinksPanel.<PropagationTaskTO>builder(pageRef).\n+                final ActionLinksPanel<PropagationTaskTO> panel = ActionLinksPanel.<PropagationTaskTO>builder().\n                         add(new ActionLink<PropagationTaskTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -119,7 +120,7 @@ public ActionLinksPanel<PropagationTaskTO> getActions(\n                             public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n                                 viewTask(taskTO, target);\n                             }\n-                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n+                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n                         add(new ActionLink<PropagationTaskTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -131,8 +132,9 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                                    LOG.error(\"While running propagation task {}\", taskTO.getKey(), e);\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n+                                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -148,8 +150,9 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                                    LOG.error(\"While deleting propagation task {}\", taskTO.getKey(), e);\n+                                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n@@ -160,8 +163,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n \n             @Override\n             public ActionLinksPanel<PropagationTaskTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<PropagationTaskTO> panel = ActionLinksPanel.builder(page.\n-                        getPageReference());\n+                final ActionLinksPanel.Builder<PropagationTaskTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<PropagationTaskTO>() {\n "},{"sha":"8345fb4bcc4df07ba13d446b85c7f4b287aada47","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,6 +24,7 @@\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n@@ -165,7 +166,7 @@ public ActionLinksPanel<T> getActions(\n \n                 final T taskTO = model.getObject();\n \n-                final ActionLinksPanel<T> panel = ActionLinksPanel.<T>builder(pageRef).\n+                final ActionLinksPanel<T> panel = ActionLinksPanel.<T>builder().\n                         add(new ActionLink<T>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -174,7 +175,7 @@ public ActionLinksPanel<T> getActions(\n                             public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 viewTask(taskTO, target);\n                             }\n-                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n+                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n                         add(new ActionLink<T>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -220,7 +221,8 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                     LOG.error(\"While running propagation task {}\", taskTO.getKey(), e);\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -237,7 +239,8 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n-                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n                                     LOG.error(\"While deleting propagation task {}\", taskTO.getKey(), e);\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -249,7 +252,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n \n             @Override\n             public ActionLinksPanel<T> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<T>() {\n "},{"sha":"7219c4cea315d1509a660c884a6de03d43aeeb0e","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/StartAtTogglePanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.Date;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.TogglePanel;\n@@ -48,7 +49,7 @@ public StartAtTogglePanel(final WebMarkupContainer container) {\n         final Form<?> form = new Form<>(\"startAtForm\");\n         addInnerObject(form);\n \n-        final Model<Date> startAtDateModel = new Model<Date>();\n+        final Model<Date> startAtDateModel = new Model<>();\n \n         final AjaxDateFieldPanel startAtDate = new AjaxDateFieldPanel(\n                 \"startAtDate\", \"startAtDate\", startAtDateModel, SyncopeConstants.DATE_PATTERNS[3]);\n@@ -57,7 +58,7 @@ public StartAtTogglePanel(final WebMarkupContainer container) {\n         form.add(startAtDate);\n \n         final AjaxCheckBoxPanel startAtCheck = new AjaxCheckBoxPanel(\n-                \"startAtCheck\", \"startAtCheck\", new Model<Boolean>(false), false);\n+                \"startAtCheck\", \"startAtCheck\", new Model<>(false), false);\n \n         form.add(startAtCheck);\n \n@@ -83,7 +84,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     toggle(target, false);\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     LOG.error(\"While running propagation task {}\", taskTO.getKey(), e);\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);"},{"sha":"43de894d5a00e810b459e593f5543d90f09ae5c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutions.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -103,12 +103,10 @@ protected List<IColumn<ExecTO, String>> getColumns() {\n             private static final long serialVersionUID = -3503023501954863131L;\n \n             @Override\n-            public ActionLinksPanel<ExecTO> getActions(\n-                    final String componentId, final IModel<ExecTO> model) {\n-\n+            public ActionLinksPanel<ExecTO> getActions(final String componentId, final IModel<ExecTO> model) {\n                 final ExecTO taskExecutionTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<ExecTO> panel = ActionLinksPanel.builder(pageRef);\n+                final ActionLinksPanel.Builder<ExecTO> panel = ActionLinksPanel.builder();\n \n                 panel.\n                         add(new ActionLink<ExecTO>() {\n@@ -120,7 +118,7 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                                 next(new StringResourceModel(\"execution.view\", TaskExecutions.this, model).getObject(),\n                                         new ExecMessage(model.getObject().getMessage()), target);\n                             }\n-                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n+                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n                         add(new ActionLink<ExecTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -144,7 +142,7 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n             @Override\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(pageRef);\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<Serializable>() {\n "},{"sha":"2b90e96904f34fbd3b7306c8ce9e16867bc91801","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -167,7 +167,7 @@ public void onClose(final AjaxRequestTarget target) {\n         // -----------------------------------------\n         // Add Zoom panel\n         // -----------------------------------------\n-        final ActionLinksPanel.Builder<Serializable> zoomActionPanel = ActionLinksPanel.builder(getPageReference());\n+        final ActionLinksPanel.Builder<Serializable> zoomActionPanel = ActionLinksPanel.builder();\n         zoomActionPanel.setDisableIndicator(true);\n \n         zoomActionPanel.add(new ActionLink<Serializable>() {"},{"sha":"48f25887ffcb0b94fc66d23304635fae3550129f","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -21,6 +21,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.text.MessageFormat;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ConnectorModal;\n@@ -185,7 +186,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (SyncopeClientException e) {\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -266,7 +267,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (SyncopeClientException e) {\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);"},{"sha":"6026ecf0ec5cf09133755f196734611f1219bb58","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/IndicatorAjaxTimerBehavior.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2FIndicatorAjaxTimerBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2FIndicatorAjaxTimerBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2FIndicatorAjaxTimerBehavior.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,7 +24,7 @@\n import org.apache.wicket.util.time.Duration;\n \n /**\n- * An {@link AbstractAjaxTimerBehavior} not showin veil.\n+ * An {@link AbstractAjaxTimerBehavior} not showing veil.\n  */\n public abstract class IndicatorAjaxTimerBehavior extends AbstractAjaxTimerBehavior implements IAjaxIndicatorAware {\n "},{"sha":"449bcd381c5e3b0e7bb85955b2be897d1d21e267","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxButton.java","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/581f5247dfbece310ca4fb3fcdaca6fdc116ca20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/581f5247dfbece310ca4fb3fcdaca6fdc116ca20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java?ref=581f5247dfbece310ca4fb3fcdaca6fdc116ca20","patch":"@@ -1,66 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.ajax.markup.html;\n-\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.IModel;\n-\n-public abstract class ClearIndicatingAjaxButton extends IndicatingAjaxButton {\n-\n-    private static final long serialVersionUID = 7206379812788748287L;\n-\n-    private final PageReference pageRef;\n-\n-    public ClearIndicatingAjaxButton(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-    }\n-\n-    public ClearIndicatingAjaxButton(final String id, final Form<?> form, final PageReference pageRef) {\n-        super(id, form);\n-        this.pageRef = pageRef;\n-    }\n-\n-    public ClearIndicatingAjaxButton(final String id, final IModel<String> model, final PageReference pageRef) {\n-        super(id, model);\n-        this.pageRef = pageRef;\n-    }\n-\n-    public ClearIndicatingAjaxButton(final String id, final IModel<String> model, final Form<?> form,\n-            final PageReference pageRef) {\n-\n-        super(id, model, form);\n-        this.pageRef = pageRef;\n-    }\n-\n-    protected abstract void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form);\n-\n-    public ClearIndicatingAjaxButton feedbackPanelAutomaticReload(final boolean reloadFeedbackPanel) {\n-        return this;\n-    }\n-\n-    @Override\n-    protected final void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        super.onSubmit(target, form);\n-        onSubmitInternal(target, form);\n-    }\n-}"},{"sha":"adab32039edae04b6727df8f695b1ca18e3df876","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/581f5247dfbece310ca4fb3fcdaca6fdc116ca20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/581f5247dfbece310ca4fb3fcdaca6fdc116ca20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=581f5247dfbece310ca4fb3fcdaca6fdc116ca20","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.ajax.markup.html;\n-\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.model.IModel;\n-\n-public abstract class ClearIndicatingAjaxLink<T> extends IndicatingAjaxLink<T> {\n-\n-    private static final long serialVersionUID = 7913625094362339643L;\n-\n-    private final PageReference pageRef;\n-\n-    private boolean reloadFeedbackPanel = true;\n-\n-    public ClearIndicatingAjaxLink(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-        setOutputMarkupId(true);\n-    }\n-\n-    public ClearIndicatingAjaxLink(final String id, final IModel<T> model, final PageReference pageRef) {\n-        super(id, model);\n-        this.pageRef = pageRef;\n-        setOutputMarkupId(true);\n-    }\n-\n-    public ClearIndicatingAjaxLink<T> feedbackPanelAutomaticReload(final boolean reloadFeedbackPanel) {\n-        this.reloadFeedbackPanel = reloadFeedbackPanel;\n-        return this;\n-    }\n-\n-    protected abstract void onClickInternal(final AjaxRequestTarget target);\n-\n-    @Override\n-    public final void onClick(final AjaxRequestTarget target) {\n-//        final Page page = pageRef.getPage();\n-//        if (reloadFeedbackPanel && page instanceof NotificationAwareComponent) {\n-//            ((NotificationAwareComponent) page).getNotification().refresh(target);\n-//        }\n-        onClickInternal(target);\n-    }\n-}"},{"sha":"d8949546b11249749234128ef76c73d9d01428e7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/IndicatorAjaxLink.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatorAjaxLink.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.markup.html;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+\n+/**\n+ * An {@link AjaxLink} not showing veil.\n+ */\n+public abstract class IndicatorAjaxLink<T> extends AjaxLink<T> implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = -1390762132437554937L;\n+\n+    public IndicatorAjaxLink(final String id) {\n+        super(id);\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return StringUtils.EMPTY;\n+    }\n+\n+}"},{"sha":"c069470f2031133ac2cc2c0da560cefcda9a716c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BooleanPropertyColumn.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -43,7 +43,6 @@ public BooleanPropertyColumn(final IModel<String> displayModel, final String sor\n \n     @Override\n     public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n-\n         BeanWrapper bwi = new BeanWrapperImpl(rowModel.getObject());\n         Object obj = bwi.getPropertyValue(getPropertyExpression());\n "},{"sha":"93fda5627e58f3d6d790e22c2e765a5ab7dc16c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -50,7 +50,9 @@ public enum ActionType {\n         GROUP_TEMPLATE(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n-        SEARCH(\"read\"),\n+        NOT_FOND(\"read\"),\n+        VIEW(\"view\"),\n+        SEARCH(\"search\"),\n         DELETE(\"delete\"),\n         EXECUTE(\"execute\"),\n         DRYRUN(\"execute\"),"},{"sha":"b56da38bbb5703d9bddfa0f72945d896ee29dc2e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":116,"deletions":120,"changes":236,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,8 +24,6 @@\n import java.util.Map.Entry;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n@@ -43,16 +41,13 @@\n \n     private static final long serialVersionUID = 322966537010107771L;\n \n-    private final PageReference pageRef;\n-\n     private final IModel<T> model;\n \n     private boolean disableIndicator = false;\n \n-    private ActionLinksPanel(final String componentId, final IModel<T> model, final PageReference pageRef) {\n+    private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super(componentId, model);\n         this.model = model;\n-        this.pageRef = pageRef;\n \n         setOutputMarkupId(true);\n \n@@ -70,6 +65,8 @@ private ActionLinksPanel(final String componentId, final IModel<T> model, final\n         super.add(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelGroupTemplate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelView\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n@@ -104,192 +101,183 @@ public ActionLinksPanel<T> add(\n             case CLAIM:\n                 fragment = new Fragment(\"panelClaim\", \"fragmentClaim\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"claimLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"claimLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_RESOURCES:\n                 fragment = new Fragment(\"panelManageResources\", \"fragmentManageResources\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"manageResourcesLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageResourcesLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610291L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_USERS:\n                 fragment = new Fragment(\"panelManageUsers\", \"fragmentManageUsers\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"manageUsersLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageUsersLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610292L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_GROUPS:\n                 fragment = new Fragment(\"panelManageGroups\", \"fragmentManageGroups\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"manageGroupsLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageGroupsLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610293L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MAPPING:\n                 fragment = new Fragment(\"panelMapping\", \"fragmentMapping\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"mappingLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"mappingLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ACCOUNT_LINK:\n                 fragment = new Fragment(\"panelAccountLink\", \"fragmentAccountLink\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"accountLinkLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"accountLinkLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RESET_TIME:\n                 fragment = new Fragment(\"panelResetTime\", \"fragmentResetTime\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"resetTimeLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetTimeLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CLONE:\n                 fragment = new Fragment(\"panelClone\", \"fragmentClone\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"cloneLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"cloneLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CREATE:\n                 fragment = new Fragment(\"panelCreate\", \"fragmentCreate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"createLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"createLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RESET:\n                 fragment = new Fragment(\"panelReset\", \"fragmentReset\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"resetLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610290L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n@@ -303,141 +291,156 @@ public String getAjaxIndicatorMarkupId() {\n             case EDIT:\n                 fragment = new Fragment(\"panelEdit\", \"fragmentEdit\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"editLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"editLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case USER_TEMPLATE:\n                 fragment = new Fragment(\"panelUserTemplate\", \"fragmentUserTemplate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"userTemplateLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"userTemplateLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case GROUP_TEMPLATE:\n                 fragment = new Fragment(\"panelGroupTemplate\", \"fragmentGroupTemplate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"groupTemplateLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"groupTemplateLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ENABLE:\n                 fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"enableLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"enableLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n+            case NOT_FOND:\n+                fragment = new Fragment(\"panelNotFound\", \"fragmentNotFound\", this);\n+                break;\n+\n+            case VIEW:\n+                fragment = new Fragment(\"panelView\", \"fragmentView\", this);\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"viewLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case SEARCH:\n                 fragment = new Fragment(\"panelSearch\", \"fragmentSearch\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"searchLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"searchLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case EXECUTE:\n                 fragment = new Fragment(\"panelExecute\", \"fragmentExecute\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"executeLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"executeLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DRYRUN:\n                 fragment = new Fragment(\"panelDryRun\", \"fragmentDryRun\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"dryRunLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"dryRunLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DELETE:\n@@ -463,12 +466,12 @@ public String getAjaxIndicatorMarkupId() {\n             case SELECT:\n                 fragment = new Fragment(\"panelSelect\", \"fragmentSelect\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"selectLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"selectLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n@@ -482,12 +485,12 @@ public String getAjaxIndicatorMarkupId() {\n             case CLOSE:\n                 fragment = new Fragment(\"panelClose\", \"fragmentClose\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"closeLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"closeLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n@@ -502,12 +505,12 @@ public String getAjaxIndicatorMarkupId() {\n             case EXPORT:\n                 fragment = new Fragment(\"panelExport\", \"fragmentExport\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"exportLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n@@ -521,81 +524,77 @@ public String getAjaxIndicatorMarkupId() {\n             case SUSPEND:\n                 fragment = new Fragment(\"panelSuspend\", \"fragmentSuspend\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"suspendLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"suspendLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610291L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case REACTIVATE:\n                 fragment = new Fragment(\"panelReactivate\", \"fragmentReactivate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"reactivateLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"reactivateLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610292L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RELOAD:\n                 fragment = new Fragment(\"panelReload\", \"fragmentReload\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"reloadLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"reloadLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610293L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CHANGE_VIEW:\n                 fragment = new Fragment(\"panelChangeView\", \"fragmentChangeView\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"changeViewLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"changeViewLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610292L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case UNLINK:\n@@ -659,21 +658,20 @@ public String getAjaxIndicatorMarkupId() {\n             case ASSIGN:\n                 fragment = new Fragment(\"panelAssign\", \"fragmentAssign\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"assignLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"assignLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610304L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DEPROVISION:\n@@ -699,60 +697,60 @@ public String getAjaxIndicatorMarkupId() {\n             case PROVISION:\n                 fragment = new Fragment(\"panelProvision\", \"fragmentProvision\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"provisionLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"provisionLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610305L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n+\n             case ZOOM_IN:\n                 fragment = new Fragment(\"panelZoomIn\", \"fragmentZoomIn\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"zoomInLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"zoomInLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610305L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n+\n             case ZOOM_OUT:\n                 fragment = new Fragment(\"panelZoomOut\", \"fragmentZoomOut\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"zoomOutLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"zoomOutLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610305L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n+\n             default:\n             // do nothing\n         }\n@@ -814,6 +812,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n                 break;\n \n+            case VIEW:\n+                super.addOrReplace(new Fragment(\"panelView\", \"emptyFragment\", this));\n+                break;\n+\n             case SEARCH:\n                 super.addOrReplace(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n                 break;\n@@ -897,8 +899,8 @@ private ActionLinksPanel<T> setDisableIndicator(final boolean disableIndicator)\n         return this;\n     }\n \n-    public static <T extends Serializable> Builder<T> builder(final PageReference pageRef) {\n-        return new Builder<T>(pageRef);\n+    public static <T extends Serializable> Builder<T> builder() {\n+        return new Builder<>();\n     }\n \n     /**\n@@ -912,14 +914,8 @@ public static <T extends Serializable> Builder<T> builder(final PageReference pa\n \n         private final Map<ActionLink.ActionType, Triple<ActionLink<T>, String, Boolean>> actions = new HashMap<>();\n \n-        private final PageReference pageRef;\n-\n         private boolean disableIndicator = false;\n \n-        private Builder(final PageReference pageRef) {\n-            this.pageRef = pageRef;\n-        }\n-\n         public Builder<T> setDisableIndicator(final boolean disableIndicator) {\n             this.disableIndicator = disableIndicator;\n             return this;\n@@ -982,8 +978,8 @@ public ActionLinksPanel<T> build(final String id) {\n          */\n         public ActionLinksPanel<T> build(final String id, final T modelObject) {\n             final ActionLinksPanel<T> panel = modelObject == null\n-                    ? new ActionLinksPanel<>(id, new Model<T>(), this.pageRef)\n-                    : new ActionLinksPanel<>(id, new Model<>(modelObject), this.pageRef);\n+                    ? new ActionLinksPanel<>(id, new Model<T>())\n+                    : new ActionLinksPanel<>(id, new Model<>(modelObject));\n \n             panel.setDisableIndicator(disableIndicator);\n "},{"sha":"6ef9a94b902676abb00d3c5dcc3ef077e91590a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -139,7 +139,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);\n                 } catch (Exception e) {\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                 }\n             }\n         };"},{"sha":"9c20635f29b301304ac3b36dce036cd8ad1fa4d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobActionPanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -19,15 +19,16 @@\n package org.apache.syncope.client.console.widgets;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxLink;\n import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -47,7 +48,7 @@ public JobActionPanel(final String id, final JobTO jobTO, final JobWidget widget\n         Fragment controls;\n         if (jobTO.isRunning()) {\n             controls = new Fragment(\"controls\", \"runningFragment\", this);\n-            controls.add(new AjaxLink<Void>(\"stop\") {\n+            controls.add(new IndicatorAjaxLink<Void>(\"stop\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -76,14 +77,14 @@ public void onClick(final AjaxRequestTarget target) {\n                         send(widget, Broadcast.EXACT, new JobActionPayload(target));\n                     } catch (Exception e) {\n                         LOG.error(\"While stopping {}\", jobTO.getRefDesc(), e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     }\n                     SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                 }\n             });\n         } else {\n             controls = new Fragment(\"controls\", \"notRunningFragment\", this);\n-            controls.add(new AjaxLink<Void>(\"start\") {\n+            controls.add(new IndicatorAjaxLink<Void>(\"start\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -111,8 +112,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         info(getString(Constants.OPERATION_SUCCEEDED));\n                         send(widget, Broadcast.EXACT, new JobActionPayload(target));\n                     } catch (Exception e) {\n-                        LOG.error(\"While stopping {}\", jobTO.getRefDesc(), e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        LOG.error(\"While starting {}\", jobTO.getRefDesc(), e);\n+                        error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n                     }\n                     SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                 }"},{"sha":"9fd5186cb90bde98ec3a56004dd545709ca68bfc","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":46,"deletions":15,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -51,7 +52,10 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n@@ -97,26 +101,20 @@ private static List<ExecTO> getRecent(final SyncopeConsoleSession session) {\n \n     private final List<JobTO> available;\n \n-    private final AvailableJobsPanel availableJobsPanel;\n+    private AvailableJobsPanel availableJobsPanel;\n \n     private final List<ExecTO> recent;\n \n-    private final RecentExecPanel recentExecPanel;\n+    private RecentExecPanel recentExecPanel;\n \n     public JobWidget(final String id, final PageReference pageRef) {\n         super(id);\n-\n         setOutputMarkupId(true);\n \n         available = getAvailable(SyncopeConsoleSession.get());\n-        availableJobsPanel = new AvailableJobsPanel(\"available\", pageRef);\n-        availableJobsPanel.setOutputMarkupId(true);\n-        add(availableJobsPanel);\n-\n         recent = getRecent(SyncopeConsoleSession.get());\n-        recentExecPanel = new RecentExecPanel(\"recent\", pageRef);\n-        recentExecPanel.setOutputMarkupId(true);\n-        add(recentExecPanel);\n+\n+        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n \n         add(new WebSocketBehavior() {\n \n@@ -130,6 +128,36 @@ protected void onConnect(final ConnectedMessage message) {\n         });\n     }\n \n+    private List<ITab> buildTabList(final PageReference pageRef) {\n+        final List<ITab> tabs = new ArrayList<>();\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"available\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                availableJobsPanel = new AvailableJobsPanel(panelId, pageRef);\n+                availableJobsPanel.setOutputMarkupId(true);\n+                return availableJobsPanel;\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"recent\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                recentExecPanel = new RecentExecPanel(panelId, pageRef);\n+                recentExecPanel.setOutputMarkupId(true);\n+                return recentExecPanel;\n+            }\n+        });\n+\n+        return tabs;\n+    }\n+\n     @Override\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof WebSocketPushPayload) {\n@@ -141,10 +169,14 @@ public void onEvent(final IEvent<?> event) {\n                 recent.clear();\n                 recent.addAll(((JobWidgetMessage) wsEvent.getMessage()).getUpdatedRecent());\n \n-                availableJobsPanel.modelChanged();\n-                wsEvent.getHandler().add(availableJobsPanel);\n-                recentExecPanel.modelChanged();\n-                wsEvent.getHandler().add(recentExecPanel);\n+                if (availableJobsPanel != null) {\n+                    availableJobsPanel.modelChanged();\n+                    wsEvent.getHandler().add(availableJobsPanel);\n+                }\n+                if (recentExecPanel != null) {\n+                    recentExecPanel.modelChanged();\n+                    wsEvent.getHandler().add(recentExecPanel);\n+                }\n             }\n         } else if (event.getPayload() instanceof JobActionPanel.JobActionPayload) {\n             available.clear();\n@@ -402,6 +434,5 @@ public List<JobTO> getUpdatedAvailable() {\n         public List<ExecTO> getUpdatedRecent() {\n             return updatedRecent;\n         }\n-\n     }\n }"},{"sha":"38824710ccb1c07abf8055a76a2896872e555d4e","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ProgressBean.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressBean.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import java.io.Serializable;\n+\n+public class ProgressBean implements Serializable {\n+\n+    private static final long serialVersionUID = 7135463859007124458L;\n+\n+    private String text;\n+\n+    private int fraction;\n+\n+    private int total;\n+\n+    private String cssClass;\n+\n+    public String getText() {\n+        return text;\n+    }\n+\n+    public void setText(final String text) {\n+        this.text = text;\n+    }\n+\n+    public int getFraction() {\n+        return fraction;\n+    }\n+\n+    public void setFraction(final int fraction) {\n+        this.fraction = fraction;\n+    }\n+\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    public void setTotal(final int total) {\n+        this.total = total;\n+    }\n+\n+    public float getPercent() {\n+        return getTotal() == 0 ? 0 : 100 * getFraction() / getTotal();\n+    }\n+\n+    public String getCssClass() {\n+        return cssClass;\n+    }\n+\n+    public void setCssClass(final String cssClass) {\n+        this.cssClass = cssClass;\n+    }\n+\n+}"},{"sha":"f82aedd51ea4f8d6e6f2304f4fc81f0d7f3644ba","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ProgressPanel.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.behavior.AttributeAppender;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class ProgressPanel extends Panel {\n+\n+    private static final long serialVersionUID = -8854916811656228816L;\n+\n+    public ProgressPanel(final String id, final ProgressBean progressBean) {\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        add(new Label(\"text\", progressBean.getText()));\n+        add(new Label(\"fraction\", progressBean.getFraction()));\n+        add(new Label(\"total\", progressBean.getTotal()));\n+\n+        WebMarkupContainer progress = new WebMarkupContainer(\"progress\");\n+        progress.add(new AttributeModifier(\"style\", \"width: \" + progressBean.getPercent() + \"%\"));\n+        progress.add(new AttributeAppender(\"class\", \" \" + progressBean.getCssClass()));\n+        add(progress);\n+    }\n+\n+}"},{"sha":"923a6530ae3df2142132ac9b43a48de50c557462","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ProgressesPanel.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class ProgressesPanel extends Panel {\n+\n+    private static final long serialVersionUID = 7837262802315339565L;\n+\n+    public ProgressesPanel(final String id, final Date lastUpdate, final List<ProgressBean> progressBeans) {\n+        super(id);\n+\n+        add(new Label(\"lastUpdate\", SyncopeConsoleSession.get().getDateFormat().format(lastUpdate)));\n+\n+        ListView<ProgressBean> progresses = new ListView<ProgressBean>(\"progresses\", progressBeans) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<ProgressBean> item) {\n+                item.add(new ProgressPanel(\"progress\", item.getModelObject()));\n+            }\n+        };\n+        progresses.setOutputMarkupId(true);\n+        add(progresses);\n+    }\n+\n+}"},{"sha":"0e5addc033682de056e80233cee0d0f845912216","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationDetailsModalPanel.java","status":"added","additions":177,"deletions":0,"changes":177,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,177 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.widgets.reconciliation.Any;\n+import org.apache.syncope.client.console.widgets.reconciliation.Misaligned;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class ReconciliationDetailsModalPanel extends AbstractModalPanel<Any> {\n+\n+    private static final long serialVersionUID = 1469396040405535283L;\n+\n+    private static final int ROWS = 10;\n+\n+    private final String resource;\n+\n+    private final List<Misaligned> misaligned;\n+\n+    public ReconciliationDetailsModalPanel(\n+            final BaseModal<Any> modal,\n+            final String resource,\n+            final List<Misaligned> misaligned,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.resource = resource;\n+        this.misaligned = misaligned;\n+\n+        add(new DiffPanel(\"diff\", pageRef));\n+    }\n+\n+    private class DiffPanel extends AbstractSearchResultPanel<\n+        Misaligned, Misaligned, DetailsProvider, BaseRestClient> {\n+\n+        private static final long serialVersionUID = -8214546246301342868L;\n+\n+        DiffPanel(final String id, final PageReference pageRef) {\n+            super(id, new Builder<Misaligned, Misaligned, BaseRestClient>(null, pageRef) {\n+\n+                private static final long serialVersionUID = 8769126634538601689L;\n+\n+                @Override\n+                protected WizardMgtPanel<Misaligned> newInstance(final String id) {\n+                    return new DiffPanel(id, pageRef);\n+                }\n+            }.disableCheckBoxes().hidePaginator());\n+\n+            rows = 10;\n+            initResultTable();\n+        }\n+\n+        @Override\n+        protected DetailsProvider dataProvider() {\n+            return new DetailsProvider();\n+        }\n+\n+        @Override\n+        protected String paginatorRowsKey() {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        @Override\n+        protected Collection<ActionLink.ActionType> getBulkActions() {\n+            return Collections.<ActionLink.ActionType>emptyList();\n+        }\n+\n+        @Override\n+        protected List<IColumn<Misaligned, String>> getColumns() {\n+            List<IColumn<Misaligned, String>> columns = new ArrayList<>();\n+\n+            columns.add(new PropertyColumn<Misaligned, String>(new ResourceModel(\"key\"), \"name\", \"name\"));\n+\n+            columns.add(new AbstractColumn<Misaligned, String>(Model.of(\"Syncope\")) {\n+\n+                private static final long serialVersionUID = 2054811145491901166L;\n+\n+                @Override\n+                public void populateItem(\n+                        final Item<ICellPopulator<Misaligned>> cellItem,\n+                        final String componentId,\n+                        final IModel<Misaligned> rowModel) {\n+\n+                    cellItem.add(new Label(componentId, rowModel.getObject().getOnSyncope().toString()));\n+                    cellItem.add(new AttributeModifier(\"class\", \"code-deletion\"));\n+                }\n+            });\n+\n+            columns.add(new AbstractColumn<Misaligned, String>(Model.of(resource)) {\n+\n+                private static final long serialVersionUID = 2054811145491901166L;\n+\n+                @Override\n+                public void populateItem(\n+                        final Item<ICellPopulator<Misaligned>> cellItem,\n+                        final String componentId,\n+                        final IModel<Misaligned> rowModel) {\n+\n+                    cellItem.add(new Label(componentId, rowModel.getObject().getOnResource().toString()));\n+                    cellItem.add(new AttributeModifier(\"class\", \"code-addition\"));\n+                }\n+            });\n+\n+            return columns;\n+        }\n+    }\n+\n+    protected final class DetailsProvider extends SearchableDataProvider<Misaligned> {\n+\n+        private static final long serialVersionUID = -1500081449932597854L;\n+\n+        private final SortableDataProviderComparator<Misaligned> comparator;\n+\n+        private DetailsProvider() {\n+            super(ROWS);\n+            setSort(\"name\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<Misaligned> iterator(final long first, final long count) {\n+            Collections.sort(misaligned, comparator);\n+            return misaligned.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return misaligned.size();\n+        }\n+\n+        @Override\n+        public IModel<Misaligned> model(final Misaligned object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"1ac8c9a74ef9ad1104d544d80772be6de87f62a1","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"added","additions":532,"deletions":0,"changes":532,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,532 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxLink;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.widgets.reconciliation.Any;\n+import org.apache.syncope.client.console.widgets.reconciliation.Anys;\n+import org.apache.syncope.client.console.widgets.reconciliation.Misaligned;\n+import org.apache.syncope.client.console.widgets.reconciliation.Missing;\n+import org.apache.syncope.client.console.widgets.reconciliation.ReconciliationReport;\n+import org.apache.syncope.client.console.widgets.reconciliation.ReconciliationReportParser;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.JobTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.apache.syncope.common.rest.api.service.ReportService;\n+import org.apache.wicket.Application;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ThreadContext;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.protocol.ws.WebSocketSettings;\n+import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n+import org.apache.wicket.protocol.ws.api.WebSocketPushBroadcaster;\n+import org.apache.wicket.protocol.ws.api.event.WebSocketPushPayload;\n+import org.apache.wicket.protocol.ws.api.message.ConnectedMessage;\n+import org.apache.wicket.protocol.ws.api.message.IWebSocketPushMessage;\n+import org.apache.wicket.protocol.ws.api.registry.IKey;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ReconciliationWidget extends AbstractWidget {\n+\n+    private static final long serialVersionUID = -816175678514035085L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ReconciliationWidget.class);\n+\n+    private static final long RECONCILIATION_REPORT_KEY = 2L;\n+\n+    private static final int ROWS = 10;\n+\n+    private final BaseModal<Any> detailsModal = new BaseModal<>(\"detailsModal\");\n+\n+    private final PageReference pageRef;\n+\n+    private final ReportRestClient restClient = new ReportRestClient();\n+\n+    private final WebMarkupContainer overlay;\n+\n+    private boolean checkReconciliationJob = false;\n+\n+    public ReconciliationWidget(final String id, final PageReference pageRef) {\n+        super(id);\n+        this.pageRef = pageRef;\n+        setOutputMarkupId(true);\n+        add(detailsModal);\n+\n+        overlay = new WebMarkupContainer(\"overlay\");\n+        overlay.setOutputMarkupPlaceholderTag(true);\n+        overlay.setVisible(false);\n+        add(overlay);\n+\n+        ReportTO reconciliationReport = restClient.read(RECONCILIATION_REPORT_KEY);\n+\n+        Fragment reportResult = reconciliationReport.getExecutions().isEmpty()\n+                ? new Fragment(\"reportResult\", \"noExecFragment\", this)\n+                : buildExecFragment();\n+        reportResult.setOutputMarkupId(true);\n+        add(reportResult);\n+\n+        add(new WebSocketBehavior() {\n+\n+            private static final long serialVersionUID = 3507933905864454312L;\n+\n+            @Override\n+            protected void onConnect(final ConnectedMessage message) {\n+                super.onConnect(message);\n+\n+                SyncopeConsoleSession.get().scheduleAtFixedRate(\n+                        new ReconciliationJobInfoUpdater(message), 0, 10, TimeUnit.SECONDS);\n+            }\n+        });\n+\n+        add(new IndicatorAjaxLink<Void>(\"refresh\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    restClient.startExecution(RECONCILIATION_REPORT_KEY, null);\n+\n+                    overlay.setVisible(true);\n+                    target.add(ReconciliationWidget.this);\n+\n+                    synchronized (this) {\n+                        checkReconciliationJob = true;\n+                    }\n+\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                } catch (Exception e) {\n+                    LOG.error(\"While starting reconciliation report\", e);\n+                    error(\"Could not start reconciliation report\");\n+                }\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+        });\n+    }\n+\n+    private Fragment buildExecFragment() {\n+        Fragment execFragment = new Fragment(\"reportResult\", \"execFragment\", this);\n+        execFragment.setOutputMarkupId(true);\n+\n+        Pair<List<ProgressBean>, ReconciliationReport> execResult;\n+        try {\n+            execResult = parseReconciliationReportExec();\n+        } catch (Exception e) {\n+            LOG.error(\"Could not parse the reconciliation report result\", e);\n+            execResult = Pair.of(Collections.<ProgressBean>emptyList(), null);\n+        }\n+        final List<ProgressBean> progressBeans = execResult.getLeft();\n+        final ReconciliationReport report = execResult.getRight();\n+\n+        List<ITab> tabs = new ArrayList<>();\n+        tabs.add(new AbstractTab(new ResourceModel(\"summary\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new ProgressesPanel(panelId, report.getRun(), progressBeans);\n+            }\n+        });\n+        tabs.add(new AbstractTab(new ResourceModel(\"users\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AnysReconciliationPanel(panelId, report.getUsers(), pageRef);\n+            }\n+        });\n+        tabs.add(new AbstractTab(new ResourceModel(\"groups\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AnysReconciliationPanel(panelId, report.getGroups(), pageRef);\n+            }\n+        });\n+        for (final Anys anys : report.getAnyObjects()) {\n+            tabs.add(new AbstractTab(Model.of(anys.getAnyType())) {\n+\n+                private static final long serialVersionUID = -6815067322125799251L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AnysReconciliationPanel(panelId, anys, pageRef);\n+                }\n+            });\n+        }\n+\n+        execFragment.add(new AjaxBootstrapTabbedPanel<>(\"execResult\", tabs));\n+\n+        return execFragment;\n+    }\n+\n+    private Pair<List<ProgressBean>, ReconciliationReport> parseReconciliationReportExec() throws IOException {\n+        List<ProgressBean> beans = Collections.emptyList();\n+        ReconciliationReport report = null;\n+\n+        ExecTO exec = IterableUtils.find(restClient.listRecentExecutions(ROWS), new Predicate<ExecTO>() {\n+\n+            @Override\n+            public boolean evaluate(final ExecTO exec) {\n+                return exec.getRefKey() == RECONCILIATION_REPORT_KEY;\n+            }\n+        });\n+        if (exec == null) {\n+            LOG.error(\"Could not find the last execution of reconciliation report\");\n+        } else {\n+            Object entity = restClient.exportExecutionResult(exec.getKey(), ReportExecExportFormat.XML).getEntity();\n+            if (entity instanceof InputStream) {\n+                try {\n+                    report = ReconciliationReportParser.parse(exec.getEnd(), (InputStream) entity);\n+\n+                    beans = new ArrayList<>();\n+\n+                    ProgressBean progressBean = new ProgressBean();\n+                    progressBean.setText(getString(\"users\"));\n+                    progressBean.setTotal(report.getUsers().getTotal());\n+                    progressBean.setFraction(report.getUsers().getTotal() - report.getUsers().getAnys().size());\n+                    progressBean.setCssClass(\"progress-bar-yellow\");\n+                    beans.add(progressBean);\n+\n+                    progressBean = new ProgressBean();\n+                    progressBean.setText(getString(\"groups\"));\n+                    progressBean.setTotal(report.getGroups().getTotal());\n+                    progressBean.setFraction(report.getGroups().getTotal() - report.getGroups().getAnys().size());\n+                    progressBean.setCssClass(\"progress-bar-red\");\n+                    beans.add(progressBean);\n+\n+                    int i = 0;\n+                    for (Anys anys : report.getAnyObjects()) {\n+                        progressBean = new ProgressBean();\n+                        progressBean.setText(anys.getAnyType());\n+                        progressBean.setTotal(anys.getTotal());\n+                        progressBean.setFraction(anys.getTotal() - anys.getAnys().size());\n+                        progressBean.setCssClass(\"progress-bar-\" + (i % 2 == 0 ? \"green\" : \"aqua\"));\n+                        beans.add(progressBean);\n+\n+                        i++;\n+                    }\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not parse the last execution available of reconciliation report\", e);\n+                }\n+            }\n+        }\n+\n+        return Pair.of(beans, report);\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof WebSocketPushPayload) {\n+            WebSocketPushPayload wsEvent = (WebSocketPushPayload) event.getPayload();\n+            if (wsEvent.getMessage() instanceof ReconciliationJobNotRunningMessage) {\n+                overlay.setVisible(false);\n+\n+                addOrReplace(buildExecFragment());\n+\n+                wsEvent.getHandler().add(ReconciliationWidget.this);\n+\n+                synchronized (this) {\n+                    checkReconciliationJob = false;\n+                }\n+            }\n+        }\n+    }\n+\n+    private class AnysReconciliationPanel extends AbstractSearchResultPanel<\n+        Any, Any, AnysReconciliationProvider, BaseRestClient> {\n+\n+        private static final long serialVersionUID = -8214546246301342868L;\n+\n+        private final Anys anys;\n+\n+        AnysReconciliationPanel(final String id, final Anys anys, final PageReference pageRef) {\n+            super(id, new Builder<Any, Any, BaseRestClient>(null, pageRef) {\n+\n+                private static final long serialVersionUID = 8769126634538601689L;\n+\n+                @Override\n+                protected WizardMgtPanel<Any> newInstance(final String id) {\n+                    return new AnysReconciliationPanel(id, anys, pageRef);\n+                }\n+            }.disableCheckBoxes().hidePaginator());\n+\n+            this.anys = anys;\n+            this.rows = ROWS;\n+            initResultTable();\n+        }\n+\n+        @Override\n+        protected AnysReconciliationProvider dataProvider() {\n+            return new AnysReconciliationProvider(anys);\n+        }\n+\n+        @Override\n+        protected String paginatorRowsKey() {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        @Override\n+        protected Collection<ActionLink.ActionType> getBulkActions() {\n+            return Collections.<ActionLink.ActionType>emptyList();\n+        }\n+\n+        @Override\n+        protected List<IColumn<Any, String>> getColumns() {\n+            List<IColumn<Any, String>> columns = new ArrayList<>();\n+\n+            columns.add(new AbstractColumn<Any, String>(new ResourceModel(\"reference\"), \"key\") {\n+\n+                private static final long serialVersionUID = -1822504503325964706L;\n+\n+                @Override\n+                public void populateItem(\n+                        final Item<ICellPopulator<Any>> cellItem,\n+                        final String componentId,\n+                        final IModel<Any> rowModel) {\n+\n+                    cellItem.add(new Label(componentId,\n+                            rowModel.getObject().getKey()\n+                            + (StringUtils.isBlank(rowModel.getObject().getName())\n+                            ? StringUtils.EMPTY\n+                            : \" \" + rowModel.getObject().getName())));\n+                }\n+            });\n+\n+            final Set<String> resources = new HashSet<>();\n+            for (Any any : anys.getAnys()) {\n+                resources.addAll(CollectionUtils.collect(any.getMissing(), new Transformer<Missing, String>() {\n+\n+                    @Override\n+                    public String transform(final Missing input) {\n+                        return input.getResource();\n+                    }\n+                }));\n+                resources.addAll(CollectionUtils.collect(any.getMisaligned(), new Transformer<Misaligned, String>() {\n+\n+                    @Override\n+                    public String transform(final Misaligned input) {\n+                        return input.getResource();\n+                    }\n+                }));\n+            }\n+            for (final String resource : resources) {\n+                columns.add(new AbstractColumn<Any, String>(Model.of(resource)) {\n+\n+                    private static final long serialVersionUID = -1822504503325964706L;\n+\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<Any>> cellItem,\n+                            final String componentId,\n+                            final IModel<Any> rowModel) {\n+\n+                        final Any any = rowModel.getObject();\n+\n+                        Missing missing = IterableUtils.find(any.getMissing(), new Predicate<Missing>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Missing object) {\n+                                return resource.equals(object.getResource());\n+                            }\n+                        });\n+                        final List<Misaligned> misaligned = CollectionUtils.select(\n+                                any.getMisaligned(), new Predicate<Misaligned>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Misaligned object) {\n+                                return resource.equals(object.getResource());\n+                            }\n+                        }, new ArrayList<Misaligned>());\n+                        Component content = missing == null\n+                                ? misaligned == null || misaligned.isEmpty()\n+                                        ? new Label(componentId, StringUtils.EMPTY)\n+                                        : ActionLinksPanel.<Any>builder().add(new ActionLink<Any>() {\n+\n+                                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                                            @Override\n+                                            public void onClick(final AjaxRequestTarget target, final Any ignore) {\n+                                                modal.header(Model.of(\n+                                                        rowModel.getObject().getType()\n+                                                        + \" \" + rowModel.getObject().getKey()\n+                                                        + \" \" + rowModel.getObject().getName()));\n+                                                modal.setContent(new ReconciliationDetailsModalPanel(\n+                                                        modal,\n+                                                        resource,\n+                                                        misaligned,\n+                                                        ReconciliationWidget.this.pageRef));\n+                                                modal.show(true);\n+                                                target.add(modal);\n+                                            }\n+                                        }, ActionLink.ActionType.VIEW).\n+                                        build(componentId)\n+                                : ActionLinksPanel.<Any>builder().add(null, ActionLink.ActionType.NOT_FOND).\n+                                build(componentId);\n+                        cellItem.add(content);\n+                        cellItem.add(new AttributeModifier(\"class\", \"text-center\"));\n+                    }\n+                });\n+            }\n+\n+            return columns;\n+        }\n+    }\n+\n+    protected final class AnysReconciliationProvider extends SearchableDataProvider<Any> {\n+\n+        private static final long serialVersionUID = -1500081449932597854L;\n+\n+        private final Anys anys;\n+\n+        private final SortableDataProviderComparator<Any> comparator;\n+\n+        private AnysReconciliationProvider(final Anys anys) {\n+            super(ROWS);\n+            this.anys = anys;\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<Any> iterator(final long first, final long count) {\n+            Collections.sort(anys.getAnys(), comparator);\n+            return anys.getAnys().subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return anys.getAnys().size();\n+        }\n+\n+        @Override\n+        public IModel<Any> model(final Any object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+\n+    protected final class ReconciliationJobInfoUpdater implements Runnable {\n+\n+        private final String applicationName;\n+\n+        private final SyncopeConsoleSession session;\n+\n+        private final IKey key;\n+\n+        public ReconciliationJobInfoUpdater(final ConnectedMessage message) {\n+            this.applicationName = message.getApplication().getName();\n+            this.session = SyncopeConsoleSession.get();\n+            this.key = message.getKey();\n+        }\n+\n+        @Override\n+        public void run() {\n+            synchronized (ReconciliationWidget.this) {\n+                if (ReconciliationWidget.this.checkReconciliationJob) {\n+                    try {\n+                        Application application = Application.get(applicationName);\n+                        ThreadContext.setApplication(application);\n+                        ThreadContext.setSession(session);\n+\n+                        JobTO reportJobTO = IterableUtils.find(session.getService(ReportService.class).listJobs(),\n+                                new Predicate<JobTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final JobTO jobTO) {\n+                                return RECONCILIATION_REPORT_KEY == jobTO.getRefKey();\n+                            }\n+                        });\n+                        if (reportJobTO != null && !reportJobTO.isRunning()) {\n+                            LOG.debug(\"Report {} is not running\", RECONCILIATION_REPORT_KEY);\n+\n+                            WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(application);\n+                            WebSocketPushBroadcaster broadcaster =\n+                                    new WebSocketPushBroadcaster(webSocketSettings.getConnectionRegistry());\n+                            broadcaster.broadcast(\n+                                    new ConnectedMessage(application, session.getId(), key),\n+                                    new ReconciliationJobNotRunningMessage());\n+                        }\n+                    } catch (Throwable t) {\n+                        LOG.error(\"Unexpected error while checking for updated reconciliation job info\", t);\n+                    } finally {\n+                        ThreadContext.detach();\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private static class ReconciliationJobNotRunningMessage implements IWebSocketPushMessage, Serializable {\n+\n+        private static final long serialVersionUID = -824793424112532838L;\n+\n+    }\n+}"},{"sha":"5e915b4f018580184c082add694ac59f102c7148","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Any.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+public class Any extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 2421645848049271898L;\n+\n+    private String type;\n+\n+    private long key;\n+\n+    private String name;\n+\n+    private final List<Missing> missing = new ArrayList<>();\n+\n+    private final List<Misaligned> misaligned = new ArrayList<>();\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(final String type) {\n+        this.type = type;\n+    }\n+\n+    public long getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(final long key) {\n+        this.key = key;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n+    public List<Missing> getMissing() {\n+        return missing;\n+    }\n+\n+    public List<Misaligned> getMisaligned() {\n+        return misaligned;\n+    }\n+\n+}"},{"sha":"fecdfee099c2c4ab02b8a56396658fc47e2c3cd6","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Anys.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+public class Anys extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -2482591351364634179L;\n+\n+    private int total = 0;\n+\n+    private String anyType;\n+\n+    private final List<Any> anys = new ArrayList<>();\n+\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    public void setTotal(final int total) {\n+        this.total = total;\n+    }\n+\n+    public String getAnyType() {\n+        return anyType;\n+    }\n+\n+    public void setAnyType(final String anyType) {\n+        this.anyType = anyType;\n+    }\n+\n+    public List<Any> getAnys() {\n+        return anys;\n+    }\n+\n+}"},{"sha":"bd189e6a67416f5d39df217790a4c91aea2793cb","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Misaligned.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMisaligned.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMisaligned.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMisaligned.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class Misaligned extends Missing {\n+\n+    private static final long serialVersionUID = -2287634884015557714L;\n+\n+    private final String name;\n+\n+    private final Set<String> onSyncope = new HashSet<>();\n+\n+    private final Set<String> onResource = new HashSet<>();\n+\n+    public Misaligned(final String resource, final String connObjectKeyValue, final String name) {\n+        super(resource, connObjectKeyValue);\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public Set<String> getOnSyncope() {\n+        return onSyncope;\n+    }\n+\n+    public Set<String> getOnResource() {\n+        return onResource;\n+    }\n+\n+}"},{"sha":"2d0254a047d195488ebdae05567ac9d599b75fdf","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Missing.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+public class Missing extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -4779715117027316991L;\n+\n+    private final String resource;\n+\n+    private final String connObjectKeyValue;\n+\n+    public Missing(final String resource, final String connObjectKeyValue) {\n+        this.resource = resource;\n+        this.connObjectKeyValue = connObjectKeyValue;\n+    }\n+\n+    public String getResource() {\n+        return resource;\n+    }\n+\n+    public String getConnObjectKeyValue() {\n+        return connObjectKeyValue;\n+    }\n+\n+}"},{"sha":"b1074261be4b33b403ad7bdab37b908fb5667af0","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReport.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+public class ReconciliationReport extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 931063230006747313L;\n+\n+    private final Date run;\n+\n+    private Anys users;\n+\n+    private Anys groups;\n+\n+    private final List<Anys> anyObjects = new ArrayList<>();\n+\n+    public ReconciliationReport(final Date run) {\n+        this.run = run;\n+    }\n+\n+    public Date getRun() {\n+        return run == null ? null : new Date(run.getTime());\n+    }\n+\n+    public Anys getUsers() {\n+        return users;\n+    }\n+\n+    public void setUsers(final Anys users) {\n+        this.users = users;\n+    }\n+\n+    public Anys getGroups() {\n+        return groups;\n+    }\n+\n+    public void setGroups(final Anys groups) {\n+        this.groups = groups;\n+    }\n+\n+    public List<Anys> getAnyObjects() {\n+        return anyObjects;\n+    }\n+\n+}"},{"sha":"c99b7e340673da7a894106dc9c5b61b7eab34cdd","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReportParser.java","status":"added","additions":192,"deletions":0,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets.reconciliation;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+\n+public final class ReconciliationReportParser {\n+\n+    private static final XMLInputFactory INPUT_FACTORY = XMLInputFactory.newInstance();\n+\n+    public static ReconciliationReport parse(final Date run, final InputStream in) throws XMLStreamException {\n+        XMLStreamReader streamReader = INPUT_FACTORY.createXMLStreamReader(in);\n+        streamReader.nextTag(); // root\n+        streamReader.nextTag(); // report\n+        streamReader.nextTag(); // reportlet\n+\n+        ReconciliationReport report = new ReconciliationReport(run);\n+\n+        List<Missing> missing = new ArrayList<>();\n+        List<Misaligned> misaligned = new ArrayList<>();\n+        Set<String> onSyncope = null;\n+        Set<String> onResource = null;\n+\n+        Any user = null;\n+        Any group = null;\n+        Any anyObject = null;\n+        String lastAnyType = null;\n+        while (streamReader.hasNext()) {\n+            if (streamReader.isStartElement()) {\n+                switch (streamReader.getLocalName()) {\n+                    case \"users\":\n+                        Anys users = new Anys();\n+                        users.setTotal(Integer.valueOf(streamReader.getAttributeValue(\"\", \"total\")));\n+                        report.setUsers(users);\n+                        break;\n+\n+                    case \"user\":\n+                        user = new Any();\n+                        user.setType(AnyTypeKind.USER.name());\n+                        user.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        user.setName(streamReader.getAttributeValue(\"\", \"username\"));\n+                        report.getUsers().getAnys().add(user);\n+                        break;\n+\n+                    case \"groups\":\n+                        Anys groups = new Anys();\n+                        groups.setTotal(Integer.valueOf(streamReader.getAttributeValue(\"\", \"total\")));\n+                        report.setGroups(groups);\n+                        break;\n+\n+                    case \"group\":\n+                        group = new Any();\n+                        group.setType(AnyTypeKind.GROUP.name());\n+                        group.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        group.setName(streamReader.getAttributeValue(\"\", \"groupName\"));\n+                        report.getGroups().getAnys().add(group);\n+                        break;\n+\n+                    case \"anyObjects\":\n+                        lastAnyType = streamReader.getAttributeValue(\"\", \"type\");\n+                        Anys anyObjects = new Anys();\n+                        anyObjects.setAnyType(lastAnyType);\n+                        anyObjects.setTotal(Integer.valueOf(streamReader.getAttributeValue(\"\", \"total\")));\n+                        report.getAnyObjects().add(anyObjects);\n+                        break;\n+\n+                    case \"anyObject\":\n+                        anyObject = new Any();\n+                        anyObject.setType(lastAnyType);\n+                        anyObject.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        final String anyType = lastAnyType;\n+                        IterableUtils.find(report.getAnyObjects(), new Predicate<Anys>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Anys anys) {\n+                                return anyType.equals(anys.getAnyType());\n+                            }\n+                        }).getAnys().add(anyObject);\n+                        break;\n+\n+                    case \"missing\":\n+                        missing.add(new Missing(\n+                                streamReader.getAttributeValue(\"\", \"resource\"),\n+                                streamReader.getAttributeValue(\"\", \"connObjectKeyValue\")));\n+                        break;\n+\n+                    case \"misaligned\":\n+                        misaligned.add(new Misaligned(\n+                                streamReader.getAttributeValue(\"\", \"resource\"),\n+                                streamReader.getAttributeValue(\"\", \"connObjectKeyValue\"),\n+                                streamReader.getAttributeValue(\"\", \"name\")));\n+                        break;\n+\n+                    case \"onSyncope\":\n+                        onSyncope = new HashSet<>();\n+                        break;\n+\n+                    case \"onResource\":\n+                        onResource = new HashSet<>();\n+                        break;\n+\n+                    case \"value\":\n+                        Set<String> set = onSyncope == null ? onResource : onSyncope;\n+                        set.add(streamReader.getElementText());\n+                        break;\n+\n+                    default:\n+                }\n+            } else if (streamReader.isEndElement()) {\n+                switch (streamReader.getLocalName()) {\n+                    case \"user\":\n+                        user.getMissing().addAll(missing);\n+                        user.getMisaligned().addAll(misaligned);\n+                        missing.clear();\n+                        misaligned.clear();\n+                        break;\n+\n+                    case \"group\":\n+                        group.getMissing().addAll(missing);\n+                        group.getMisaligned().addAll(misaligned);\n+                        missing.clear();\n+                        misaligned.clear();\n+                        break;\n+\n+                    case \"anyObject\":\n+                        anyObject.getMissing().addAll(missing);\n+                        anyObject.getMisaligned().addAll(misaligned);\n+                        missing.clear();\n+                        misaligned.clear();\n+                        break;\n+\n+                    case \"onSyncope\":\n+                        misaligned.get(misaligned.size() - 1).getOnSyncope().addAll(onSyncope);\n+                        onSyncope = null;\n+                        break;\n+\n+                    case \"onResource\":\n+                        misaligned.get(misaligned.size() - 1).getOnResource().addAll(onResource);\n+                        onResource = null;\n+                        break;\n+\n+                    default:\n+                }\n+\n+            }\n+\n+            streamReader.next();\n+        }\n+\n+        try {\n+            System.out.println(\"QQQQQQQQQ\\n\" + new ObjectMapper().writeValueAsString(report));\n+        } catch (JsonProcessingException ex) {\n+            System.err.println(\"nuuuuuuuuuuuuuuuuuuuuuuuu\");\n+            ex.printStackTrace();\n+        }\n+\n+        return report;\n+    }\n+\n+    private ReconciliationReportParser() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"59bb335063542f703e78416a74e261618ffbce9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.client.console.wizards;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -87,7 +87,7 @@ public final void onCancel() {\n             send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemCancelEvent<>(item, target));\n         } catch (Exception e) {\n             LOG.warn(\"Wizard error on cancel\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n             SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n         }\n     }\n@@ -103,7 +103,7 @@ public final void onFinish() {\n             send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemFinishEvent<>(item, target).setResult(res));\n         } catch (Exception e) {\n             LOG.error(\"Wizard error on finish\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n             SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n         }\n     }"},{"sha":"34dc4a33c9e2032d618a1f643d5287ab4b7e6fc3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -82,9 +82,9 @@ protected void onConfigure() {\n     /**\n      * Modal window.\n      */\n-    protected final BaseModal<T> altDefaultModal = new BaseModal<T>(\"alternativeDefaultModal\");\n+    protected final BaseModal<T> altDefaultModal = new BaseModal<>(\"alternativeDefaultModal\");\n     \n-    protected final BaseModal<T> displayAttributeModal = new BaseModal<T>(\"displayAttributeModal\");\n+    protected final BaseModal<T> displayAttributeModal = new BaseModal<>(\"displayAttributeModal\");\n \n     protected WizardMgtPanel(final String id) {\n         this(id, false);\n@@ -166,10 +166,9 @@ public void onEvent(final IEvent<?> event) {\n                 if (wizardInModal && showResultPage) {\n                     modal.setContent(new ResultPage<T>(\n                             item,\n-                            AjaxWizard.NewItemFinishEvent.class.cast(newItemEvent).getResult(),\n-                            pageRef) {\n+                            AjaxWizard.NewItemFinishEvent.class.cast(newItemEvent).getResult()) {\n \n-                        private static final long serialVersionUID = 1L;\n+                        private static final long serialVersionUID = -2630573849050255233L;\n \n                         @Override\n                         protected void closeAction(final AjaxRequestTarget target) {"},{"sha":"fc2a9413ee9809b2feed0cc682ecd8a6de2f615c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -153,7 +154,7 @@ public void renderHead(final IHeaderResponse response) {\n             }\n         });\n \n-        viewFragment.add(ActionLinksPanel.<RelationshipTO>builder(pageRef).add(new ActionLink<RelationshipTO>() {\n+        viewFragment.add(ActionLinksPanel.<RelationshipTO>builder().add(new ActionLink<RelationshipTO>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n \n@@ -192,9 +193,7 @@ private void addRelationship(\n     }\n \n     private void addNewRelationships(final RelationshipTO... rels) {\n-        for (RelationshipTO relationship : rels) {\n-            getCurrentRelationships().add(relationship);\n-        }\n+        getCurrentRelationships().addAll(Arrays.asList(rels));\n     }\n \n     private void removeRelationships(\n@@ -330,7 +329,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                         anyObjectSearchPanel = new AnyObjectSearchPanel.Builder(\n                                 anyType.getKey(),\n-                                new ListModel<SearchClause>(new ArrayList<SearchClause>())).\n+                                new ListModel<>(new ArrayList<SearchClause>())).\n                                 enableSearch().\n                                 build(\"searchPanel\");\n                         fragment.add(anyObjectSearchPanel.setRenderBodyOnly(true));"},{"sha":"45b4aa3499bd7e67c0acd47abe5eb60405ee350b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -38,14 +37,14 @@\n \n     private final T item;\n \n-    public ResultPage(final T item, final Serializable result, final PageReference pageRef) {\n+    public ResultPage(final T item, final Serializable result) {\n         super(BaseModal.CONTENT_ID);\n         setOutputMarkupId(true);\n         this.item = item;\n \n         add(customResultBody(\"customResultBody\", item, result));\n \n-        add(ActionLinksPanel.<T>builder(pageRef).add(new ActionLink<T>() {\n+        add(ActionLinksPanel.<T>builder().add(new ActionLink<T>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n "},{"sha":"14d1d240921f10a9366dc5068242d004e4b7d5e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -177,7 +177,7 @@ protected boolean statusCondition(final StatusBean bean) {\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                 mlp.next(bean.getResourceName(), new RemoteObjectPanel(bean, connObjects), target);\n             }\n-        }, ActionLink.ActionType.SEARCH, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n \n         listViewPanel = ListViewPanel.class.cast(builder.build(MultilevelPanel.FIRST_LEVEL_ID));\n         mlp.setFirstLevel(listViewPanel);"},{"sha":"c3940eb8d73e82391b2a322cb55e6c2a4886f2ae","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -531,3 +531,13 @@ END - Result page\n .nav-tabs-custom > .nav-tabs > li.active {\n   border-top-color: #d2d6de !important;\n }\n+\n+.code-deletion {\n+  background-color: #ffdddd;\n+  border-color: #f1c0c0;\n+}\n+\n+.code-addition {\n+  background-color: #dbffdb;\n+  border-color: #c1e9c1;\n+}"},{"sha":"e2c59483cf12124a8fdb62e7092aef9780b2fddb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":15,"deletions":4,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -17,23 +17,34 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <script type=\"text/javascript\">\n+      $(document).ready(function () {\n+        $(\"#pageTitleInBradcrumb\").append($(\"#pageTitle\").text());\n+      });\n+    </script>\n+  </wicket:head>\n   <wicket:extend>\n+    <script lang=\"text/javascript\">\n+\n+    </script>\n     <section class=\"content-header\">\n       <h1>&nbsp;</h1>\n       <ol class=\"breadcrumb\">\n         <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n-        <li class=\"active\"><wicket:message key=\"realms\"/></li>\n+        <li class=\"active\" id=\"pageTitleInBradcrumb\"/>\n       </ol>\n+      <div id=\"pageTitle\" style=\"visibility: hidden;\"><wicket:message key='realms'/></div>\n     </section>\n \n     <section class=\"content\" wicket:id=\"content\">\n       <div class=\"box\">\n         <div class=\"box-body\">\n-          <span wicket:id=\"realmChoicePanel\">[Realm Sidebar Panel]</span>\n-          <wicket:container wicket:id=\"body\"></wicket:container>\n+          <span wicket:id=\"realmChoicePanel\"/>\n+          <wicket:container wicket:id=\"body\"/>\n         </div>\n       </div>\n-      <div wicket:id=\"modal\"></div>\n+      <div wicket:id=\"modal\"/>\n     </section>\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"bc6f76212fba8f914d033dc78ae07215524d9e97","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DashboardControlPanel.html","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -23,5 +23,11 @@\n         <span wicket:id=\"job\"/>\n       </div>\n     </div>\n+\n+    <div class=\"row\">\n+      <div class=\"col-md-12\">\n+        <span wicket:id=\"reconciliation\"/>\n+      </div>\n+    </div>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"3550ace741a7e0ce1ac938bff8b1105b281527e0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,6 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <div wicket:id=\"modalDetails\" />\n+    <div wicket:id=\"modalDetails\"/>\n   </wicket:extend>\n </html>"},{"sha":"cb025677df9550a8ff8a014c5fcd895a6d6d3d5d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/WorkflowTogglePanel.html","status":"modified","additions":24,"deletions":27,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -17,33 +17,30 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title>toggle menu</title></head>\n-  <body>\n-    <wicket:head>\n-      <script type=\"text/javascript\">\n-        $(document).ready(function () {\n-          $(\"div.inactive-topology-menu\").toggle(\"slow\");\n-          $(\"div.inactive-topology-menu\").attr(\"class\", \"topology-menu active-topology-menu\");\n-        });\n-      </script>\n+  <wicket:head>\n+    <script type=\"text/javascript\">\n+      $(document).ready(function () {\n+        $(\"div.inactive-topology-menu\").toggle(\"slow\");\n+        $(\"div.inactive-topology-menu\").attr(\"class\", \"topology-menu active-topology-menu\");\n+      });\n+    </script>\n \n-      <style type=\"text/css\">\n-        div.topology-menu {\n-          top: 65px !important;\n-        }\n+    <style type=\"text/css\">\n+      div.topology-menu {\n+        top: 65px !important;\n+      }\n \n-        div.topology-menu div.header {\n-          display: none !important;\n-        }\n-      </style>\n-    </wicket:head>\n-    <wicket:extend>\n-      <div wicket:id=\"container\">\n-        <ul class=\"menu\">\n-          <li><i class=\"fa fa-file-image-o\"></i><a href=\"#\" wicket:id=\"activitiModeler\">Activiti Modeler</a></li>\n-          <li><i class=\"fa fa-file-text-o\"></i><a href=\"#\" wicket:id=\"xmlEditor\">XML editor</a></li>\n-        </ul>\n-      </div>\n-    </wicket:extend>\n-  </body>\n+      div.topology-menu div.header {\n+        display: none !important;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <div wicket:id=\"container\">\n+      <ul class=\"menu\">\n+        <li><i class=\"fa fa-file-image-o\"></i><a href=\"#\" wicket:id=\"activitiModeler\">Activiti Modeler</a></li>\n+        <li><i class=\"fa fa-file-text-o\"></i><a href=\"#\" wicket:id=\"xmlEditor\">XML editor</a></li>\n+      </ul>\n+    </div>\n+  </wicket:extend>\n </html>"},{"sha":"78d09278f7757c86e1994e87bae6fa7a51d67672","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -34,6 +34,8 @@\n     <span wicket:id=\"panelExecute\">[plus]</span>\n     <span wicket:id=\"panelEnable\">[plus]</span>\n     <span wicket:id=\"panelSearch\">[plus]</span>\n+    <span wicket:id=\"panelNotFound\">[plus]</span>\n+    <span wicket:id=\"panelView\">[plus]</span>\n     <span wicket:id=\"panelMapping\">[plus]</span>\n     <span wicket:id=\"panelAccountLink\">[plus]</span>\n     <span wicket:id=\"panelResetTime\">[plus]</span>\n@@ -96,6 +98,14 @@\n       <a href=\"#\" wicket:id=\"createLink\" class=\"btn\"><i class=\"glyphicon glyphicon-plus\" alt=\"create icon\" title=\"Create\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentNotFound\">\n+      <i class=\"fa fa-eye-slash\" alt=\"notFound icon\" title=\"Not Found\"></i>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentView\">\n+      <a href=\"#\" wicket:id=\"viewLink\" class=\"btn\"><i class=\"fa fa-eye\" alt=\"view icon\" title=\"View\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentSearch\">\n       <a href=\"#\" wicket:id=\"searchLink\" class=\"btn\"><i class=\"glyphicon glyphicon-search\" alt=\"search icon\" title=\"Search\"></i></a>\n     </wicket:fragment>"},{"sha":"a476bc2706945b8f07ed441021e5f0380f91369d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/AnyByRealmWidget.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"box\">\n+    <div class=\"box box-default box-solid\">\n       <div class=\"box-header with-border\">\n         <h3 class=\"box-title\"><wicket:message key=\"usersGroupsAndAnyObjectsDistribution\"/></h3>\n         <div class=\"box-tools pull-right\">"},{"sha":"2e48d08482f700a080d507475c5d6f30009ad9a5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"box\">\n+    <div class=\"box box-default box-solid\">\n       <div class=\"box-header with-border\">\n         <h3 class=\"box-title\"><wicket:message key=\"configurationStatus\"/></h3>\n         <div class=\"box-tools pull-right\">"},{"sha":"fdf5373a46f287394b559c2177e0cdf8577adbac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobWidget.html","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,20 +18,16 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"nav-tabs-custom\">\n-      <ul class=\"nav nav-tabs pull-right ui-sortable-handle\">\n-        <li class=\"active\"><a data-toggle=\"tab\" href=\"#running\">Available</a></li>\n-        <li><a data-toggle=\"tab\" href=\"#recent\">Recent</a></li>\n-        <li class=\"pull-left header\"><i class=\"fa fa-gears\"></i> Jobs</li>\n-      </ul>\n-      <div class=\"tab-content no-padding\">\n-        <div style=\"position: relative;\" id=\"running\" class=\"chart tab-pane active\">\n-          <span wicket:id=\"available\"/>\n-        </div>\n-        <div style=\"position: relative;\" id=\"recent\" class=\"chart tab-pane\">\n-          <span wicket:id=\"recent\"/>\n+    <div class=\"box box-default box-solid\">\n+      <div class=\"box-header with-border\">\n+        <h3 class=\"box-title\"><wicket:message key=\"jobs\"/></h3>\n+        <div class=\"box-tools pull-right\">\n+          <button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i></button>\n         </div>\n       </div>\n+      <div class=\"box-body\">\n+        <div class=\"box-body\" wicket:id=\"tabbedPanel\"/>\n+      </div>\n     </div>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"273253a043904ca7c214e2a3e9e4ecfe8d3959dc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobWidget.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -20,3 +20,6 @@ scheduled=Scheduled\n start=Start\n message=Message\n end=End\n+available=Available\n+recent=Recent\n+jobs=Jobs"},{"sha":"19a26b95894daa78d0c67b14162814c2c7dcdf6d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobWidget_it.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_it.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -20,3 +20,6 @@ scheduled=Programmato\n start=Inizio\n message=Messaggio\n end=Fine\n+available=Disponibili\n+recent=Recenti\n+jobs=Job"},{"sha":"e300f115bbc167270c36a1a475eee8d7f2891775","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JobWidget_pt_BR.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget_pt_BR.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -20,3 +20,6 @@ scheduled=Programado\n start=Come\\u00e7o\n message=Mensagem\n end=Final\n+available=Dispon\\u00edvel\n+recent=Recente\n+jobs=Job"},{"sha":"8ce2e9f6ebc86a89566dd89f22c8f555fe867783","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/LoadWidget.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"box\">\n+    <div class=\"box box-default box-solid\">\n       <div class=\"box-header with-border\">\n         <h3 class=\"box-title\"><wicket:message key=\"systemLoad\"/></h3>\n         <div class=\"box-tools pull-right\">"},{"sha":"98550e53ef5280093723d1aa4244248258785081","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ProgressPanel.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"progress-group\">\n+      <span class=\"progress-text\" wicket:id=\"text\"></span>\n+      <span class=\"progress-number\"><b><span wicket:id=\"fraction\"/></b>/<span wicket:id=\"total\"/></span>\n+\n+      <div class=\"progress sm\">\n+        <div wicket:id=\"progress\" class=\"progress-bar progress-bar-striped\"></div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"7aba7587a96d65478b2ca2f8c2a291055ceae617","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ProgressesPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"text-right\"><em><wicket:message key=\"lastUpdateMsg\"/>: <span wicket:id=\"lastUpdate\"/></em></div><br/>\n+    <span wicket:id=\"progresses\"><span wicket:id=\"progress\"/></span>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"41f94c6adc618e48ae295ae4c138db50a575ef19","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ProgressesPanel.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+lastUpdateMsg=Last Update"},{"sha":"c32f22c5f9cbac8d770c1bcb20c91f84ab7d15a5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ProgressesPanel_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_it.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+lastUpdateMsg=Ultimo Aggiornamento"},{"sha":"878c51957e13dd42e49ba8d39b62b086bd4bc63f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ProgressesPanel_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel_pt_BR.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+lastUpdateMsg=\\u00daltima Atualiza\\u00e7\\u00e3o"},{"sha":"645039da0512d8ea681868d2469148724ce9f652","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ReconciliationDetailsModalPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"diff\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"30a980ac5f686049a004acb8fd3f4ab6a50be038","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ReconciliationWidget.html","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,55 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"box box-default box-solid\">\n+      <div class=\"box-header with-border\">\n+        <h3 class=\"box-title\"><wicket:message key=\"reconciliationStatus\"/></h3>\n+        <div class=\"box-tools pull-right\">\n+          <div class=\"btn-group\">\n+            <button class=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\">\n+              <i class=\"fa fa-wrench\"></i>\n+            </button>\n+            <ul class=\"dropdown-menu\" role=\"menu\">\n+              <li><a wicket:id=\"refresh\"><wicket:message key=\"refresh\"/></a></li>\n+            </ul>\n+          </div>\n+          <button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i></button>\n+        </div>\n+      </div>\n+      <div class=\"box-body\">\n+        <div wicket:id=\"reportResult\"/>\n+\n+        <wicket:fragment wicket:id=\"noExecFragment\">\n+          <wicket:message key=\"nothingToShow\"/>\n+        </wicket:fragment>\n+\n+        <wicket:fragment wicket:id=\"execFragment\">\n+          <div wicket:id=\"execResult\"/>\n+        </wicket:fragment>\n+\n+      </div>\n+      <div wicket:id=\"overlay\" class=\"overlay\">\n+        <i class=\"fa fa-refresh fa-spin\"></i>\n+      </div>\n+    </div>\n+\n+    <div wicket:id=\"detailsModal\"/>\n+  </wicket:panel>\n+</html>"},{"sha":"562c79c18d7fda1e5ac97b4434c4bf49c2cf5c01","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ReconciliationWidget.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reconciliationStatus=Reconciliation Status\n+refresh=Refresh\n+nothingToShow=Nothing to show yet. Please refresh.\n+summary=Summary\n+reference=Reference"},{"sha":"59918abdbbf1bbe13cf9b917e3cfb2b5ad6f7012","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ReconciliationWidget_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_it.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reconciliationStatus=Stato della Riconciliazione\n+refresh=Ricarica\n+nothingToShow=Nessun risultato disponibile. Ricaricare per favore.\n+summary=Sommario\n+reference=Riferimento"},{"sha":"9d4cc1cc6db57597368746be0fb4c9d1db49ca0e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ReconciliationWidget_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget_pt_BR.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reconciliationStatus=Estado Reconcilia\\u00e7\\u00e3o\n+refresh=Atualize\n+nothingToShow=Nada para mostrar ainda. Por favor, atualize.\n+summary=Resumo\n+reference=Refer\\u00eancia"},{"sha":"d5cf2fc9ca98e8e979d80df9949859559e9ba828","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/UsersByStatusWidget.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.html?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"box\">\n+    <div class=\"box box-default box-solid\">\n       <div class=\"box-header with-border\">\n         <h3 class=\"box-title\"><wicket:message key=\"userStatus\"/></h3>\n         <div class=\"box-tools pull-right\">"},{"sha":"8dc0c102bfa33e89a027dd31eff4c6f1bebce426","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -15,6 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-mapping.title=Specify the maping about the provisioning  object\n+mapping.title=Specify the mapping for this provisioning object\n mapping.summary=\n "},{"sha":"63e44cedb7043500f9c8ad69dcb67f081656175c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping_it.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -15,6 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-mapping.title=Specify the maping about the provisioning  object\n+mapping.title=Specify the mapping for this provisioning object\n mapping.summary=\n-"},{"sha":"8dc0c102bfa33e89a027dd31eff4c6f1bebce426","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -15,6 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-mapping.title=Specify the maping about the provisioning  object\n+mapping.title=Specify the mapping for this provisioning object\n mapping.summary=\n "},{"sha":"7200ed89481b08f0406884b5c6c16bbf7749b6dd","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -105,5 +105,7 @@ public interface NotificationService extends JAXRSService {\n      *\n      * @param action action to execute\n      */\n+    @POST\n+    @Path(\"job\")\n     void actionJob(@QueryParam(\"action\") JobAction action);\n }"},{"sha":"235cfcb0a045c90cd8eac72d3d5c24e72ad71574","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -171,6 +171,6 @@ Response exportExecutionResult(\n      * @param action action to execute\n      */\n     @POST\n-    @Path(\"/job/{key}\")\n+    @Path(\"jobs/{key}\")\n     void actionJob(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"2e34de61b7ba08756442d7daae7d0ab7968f4e19","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -190,6 +190,6 @@ <T extends AbstractTaskTO> T read(\n      * @param action action to execute\n      */\n     @POST\n-    @Path(\"/job/{key}\")\n+    @Path(\"jobs/{key}\")\n     void actionJob(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"413a6652d8aa9145fcf6503119fb4b50794898c8","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -280,7 +280,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n \n     private int count() {\n         return StringUtils.isBlank(conf.getMatchingCond())\n-                ? groupDAO.count(SyncopeConstants.FULL_ADMIN_REALMS)\n+                ? groupDAO.count()\n                 : searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS,\n                         SearchCondConverter.convert(conf.getMatchingCond()), AnyTypeKind.GROUP);\n     }"},{"sha":"9fcd7bbbed3912f149f83d56fa045e8b186dfc78","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java","status":"modified","additions":62,"deletions":31,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -24,12 +24,14 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n import org.apache.commons.collections4.Closure;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.ReconciliationReportletConf;\n import org.apache.syncope.common.lib.report.ReconciliationReportletConf.Feature;\n@@ -61,6 +63,7 @@\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -232,22 +235,26 @@ private void doExtract(\n             handler.startElement(\"\", \"\", \"misaligned\", atts);\n \n             handler.startElement(\"\", \"\", \"onSyncope\", null);\n-            for (Object value : item.getOnSyncope()) {\n-                char[] asChars = value.toString().toCharArray();\n+            if (item.getOnSyncope() != null) {\n+                for (Object value : item.getOnSyncope()) {\n+                    char[] asChars = value.toString().toCharArray();\n \n-                handler.startElement(\"\", \"\", \"value\", null);\n-                handler.characters(asChars, 0, asChars.length);\n-                handler.endElement(\"\", \"\", \"value\");\n+                    handler.startElement(\"\", \"\", \"value\", null);\n+                    handler.characters(asChars, 0, asChars.length);\n+                    handler.endElement(\"\", \"\", \"value\");\n+                }\n             }\n             handler.endElement(\"\", \"\", \"onSyncope\");\n \n             handler.startElement(\"\", \"\", \"onResource\", null);\n-            for (Object value : item.getOnResource()) {\n-                char[] asChars = value.toString().toCharArray();\n+            if (item.getOnResource() != null) {\n+                for (Object value : item.getOnResource()) {\n+                    char[] asChars = value.toString().toCharArray();\n \n-                handler.startElement(\"\", \"\", \"value\", null);\n-                handler.characters(asChars, 0, asChars.length);\n-                handler.endElement(\"\", \"\", \"value\");\n+                    handler.startElement(\"\", \"\", \"value\", null);\n+                    handler.characters(asChars, 0, asChars.length);\n+                    handler.endElement(\"\", \"\", \"value\");\n+                }\n             }\n             handler.endElement(\"\", \"\", \"onResource\");\n \n@@ -299,18 +306,28 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n                         missing.add(new Missing(resource.getKey(), connObjectKeyValue));\n                     } else {\n                         // 5. found but misaligned?\n+                        Pair<String, Set<Attribute>> preparedAttrs =\n+                                mappingUtils.prepareAttrs(any, null, false, null, provision);\n+                        preparedAttrs.getRight().add(AttributeBuilder.build(\n+                                Uid.NAME, preparedAttrs.getLeft()));\n+                        preparedAttrs.getRight().add(AttributeBuilder.build(\n+                                connObjectKeyItem.getExtAttrName(), preparedAttrs.getLeft()));\n \n                         final Map<String, Set<Object>> syncopeAttrs = new HashMap<>();\n-                        for (Attribute attr : mappingUtils.prepareAttrs(any, null, false, null, provision).getRight()) {\n-                            syncopeAttrs.put(attr.getName(), new HashSet<>(attr.getValue()));\n+                        for (Attribute attr : preparedAttrs.getRight()) {\n+                            syncopeAttrs.put(\n+                                    attr.getName(),\n+                                    attr.getValue() == null ? null : new HashSet<>(attr.getValue()));\n                         }\n \n                         final Map<String, Set<Object>> resourceAttrs = new HashMap<>();\n                         for (Attribute attr : connectorObject.getAttributes()) {\n                             if (!OperationalAttributes.PASSWORD_NAME.equals(attr.getName())\n                                     && !OperationalAttributes.ENABLE_NAME.equals(attr.getName())) {\n \n-                                resourceAttrs.put(attr.getName(), new HashSet<>(attr.getValue()));\n+                                resourceAttrs.put(\n+                                        attr.getName(),\n+                                        attr.getValue() == null ? null : new HashSet<>(attr.getValue()));\n                             }\n                         }\n \n@@ -330,7 +347,7 @@ public void execute(final String name) {\n \n                         for (Map.Entry<String, Set<Object>> entry : resourceAttrs.entrySet()) {\n                             if (syncopeAttrs.containsKey(entry.getKey())) {\n-                                if (!syncopeAttrs.get(entry.getKey()).equals(entry.getValue())) {\n+                                if (!Objects.equals(syncopeAttrs.get(entry.getKey()), entry.getValue())) {\n                                     misaligned.add(new Misaligned(\n                                             resource.getKey(),\n                                             connObjectKeyValue,\n@@ -357,14 +374,10 @@ public void execute(final String name) {\n         }\n     }\n \n-    private void doExtract(final ContentHandler handler, final SearchCond cond, final AnyTypeKind anyTypeKind)\n+    private void doExtract(\n+            final ContentHandler handler, final int count, final SearchCond cond, final AnyTypeKind anyTypeKind)\n             throws SAXException {\n \n-        int count = searchDAO.count(\n-                SyncopeConstants.FULL_ADMIN_REALMS,\n-                cond,\n-                anyTypeKind);\n-\n         for (int page = 1; page <= (count / PAGE_SIZE) + 1; page++) {\n             List<AnyObject> anys = searchDAO.search(\n                     SyncopeConstants.FULL_ADMIN_REALMS,\n@@ -386,32 +399,43 @@ protected void doExtract(final ReportletConf conf, final ContentHandler handler)\n             throw new ReportException(new IllegalArgumentException(\"Invalid configuration provided\"));\n         }\n \n-        handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.USER) + \"s\", null);\n+        AttributesImpl atts = new AttributesImpl();\n+\n         if (StringUtils.isBlank(this.conf.getUserMatchingCond())) {\n+            atts.addAttribute(\"\", \"\", \"total\", ReportXMLConst.XSD_INT, String.valueOf(userDAO.count()));\n+            handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.USER) + \"s\", atts);\n+\n             doExtract(handler, userDAO.findAll());\n         } else {\n             SearchCond cond = SearchCondConverter.convert(this.conf.getUserMatchingCond());\n-            doExtract(handler, cond, AnyTypeKind.USER);\n+\n+            int count = searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, cond, AnyTypeKind.USER);\n+            atts.addAttribute(\"\", \"\", \"total\", ReportXMLConst.XSD_INT, String.valueOf(count));\n+            handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.USER) + \"s\", atts);\n+\n+            doExtract(handler, count, cond, AnyTypeKind.USER);\n         }\n         handler.endElement(\"\", \"\", getAnyElementName(AnyTypeKind.USER) + \"s\");\n \n-        handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.GROUP) + \"s\", null);\n+        atts.clear();\n         if (StringUtils.isBlank(this.conf.getGroupMatchingCond())) {\n+            atts.addAttribute(\"\", \"\", \"total\", ReportXMLConst.XSD_INT, String.valueOf(groupDAO.count()));\n+            handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.GROUP) + \"s\", atts);\n+\n             doExtract(handler, groupDAO.findAll());\n         } else {\n             SearchCond cond = SearchCondConverter.convert(this.conf.getUserMatchingCond());\n-            doExtract(handler, cond, AnyTypeKind.GROUP);\n+\n+            int count = searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, cond, AnyTypeKind.GROUP);\n+            atts.addAttribute(\"\", \"\", \"total\", ReportXMLConst.XSD_INT, String.valueOf(count));\n+            handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.GROUP) + \"s\", atts);\n+\n+            doExtract(handler, count, cond, AnyTypeKind.GROUP);\n         }\n         handler.endElement(\"\", \"\", getAnyElementName(AnyTypeKind.GROUP) + \"s\");\n \n-        AttributesImpl atts = new AttributesImpl();\n-\n         for (AnyType anyType : anyTypeDAO.findAll()) {\n             if (!anyType.equals(anyTypeDAO.findUser()) && !anyType.equals(anyTypeDAO.findGroup())) {\n-                atts.clear();\n-                atts.addAttribute(\"\", \"\", \"type\", ReportXMLConst.XSD_STRING, anyType.getKey());\n-                handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.ANY_OBJECT) + \"s\", atts);\n-\n                 AnyTypeCond anyTypeCond = new AnyTypeCond();\n                 anyTypeCond.setAnyTypeName(anyType.getKey());\n                 SearchCond cond = StringUtils.isBlank(this.conf.getAnyObjectMatchingCond())\n@@ -420,7 +444,14 @@ protected void doExtract(final ReportletConf conf, final ContentHandler handler)\n                                 SearchCond.getLeafCond(anyTypeCond),\n                                 SearchCondConverter.convert(this.conf.getAnyObjectMatchingCond()));\n \n-                doExtract(handler, cond, AnyTypeKind.ANY_OBJECT);\n+                int count = searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, cond, AnyTypeKind.ANY_OBJECT);\n+\n+                atts.clear();\n+                atts.addAttribute(\"\", \"\", \"type\", ReportXMLConst.XSD_STRING, anyType.getKey());\n+                atts.addAttribute(\"\", \"\", \"total\", ReportXMLConst.XSD_INT, String.valueOf(count));\n+                handler.startElement(\"\", \"\", getAnyElementName(AnyTypeKind.ANY_OBJECT) + \"s\", atts);\n+\n+                doExtract(handler, count, cond, AnyTypeKind.ANY_OBJECT);\n \n                 handler.endElement(\"\", \"\", getAnyElementName(AnyTypeKind.ANY_OBJECT) + \"s\");\n             }"},{"sha":"1a447d86e50e5866c98f0b7ba557a4064e71ced8","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -349,7 +349,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n \n     private int count() {\n         return StringUtils.isBlank(conf.getMatchingCond())\n-                ? userDAO.count(SyncopeConstants.FULL_ADMIN_REALMS)\n+                ? userDAO.count()\n                 : searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS,\n                         SearchCondConverter.convert(conf.getMatchingCond()), AnyTypeKind.USER);\n     }"},{"sha":"9d2fc074ae71814504635fd67a358c89e86bcffd","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/utils/MappingUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -376,7 +376,7 @@ public Pair<String, Set<Attribute>> prepareAttrs(\n      * @param mapItem mapping item for the given attribute\n      * @param any any object\n      * @param password clear-text password\n-     * @return connObjectLink + prepared attribute\n+     * @return connObjectKey + prepared attribute\n      */\n     private Pair<String, Attribute> prepareAttr(\n             final Provision provision, final MappingItem mapItem, final Any<?> any, final String password) {"},{"sha":"0787b63949d27924ba06298862d5c1b0a9fa8faf","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -810,15 +810,15 @@ under the License.\n   <Provision id=\"7\" resource_name=\"resource-testdb\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"7\" provision_id=\"7\"/>\n   <MappingItem id=\"119\" mapping_id=\"7\"\n-               extAttrName=\"id\" intMappingType=\"Username\" mandatoryCondition=\"true\"\n+               extAttrName=\"ID\" intMappingType=\"Username\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"120\" mapping_id=\"7\"\n                extAttrName=\"__PASSWORD__\" intMappingType=\"Password\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"1\" purpose=\"BOTH\"/>\n                      \n   <Provision id=\"8\" resource_name=\"resource-testdb2\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"8\" provision_id=\"8\"/>\n-  <MappingItem id=\"121\" mapping_id=\"8\" extAttrName=\"id\" \n+  <MappingItem id=\"121\" mapping_id=\"8\" extAttrName=\"ID\" \n                intMappingType=\"Username\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"122\" mapping_id=\"8\" extAttrName=\"__PASSWORD__\" \n@@ -944,7 +944,7 @@ under the License.\n   <Provision id=\"17\" resource_name=\"resource-db-virattr\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"17\" provision_id=\"17\"/>\n   <MappingItem id=\"331\" mapping_id=\"17\" connObjectKey=\"1\" password=\"0\"\n-               extAttrName=\"id\" intMappingType=\"UserKey\" \n+               extAttrName=\"ID\" intMappingType=\"UserKey\" \n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n                 \n   <VirSchema name=\"virtualdata\" anyTypeClass_name=\"minimal user\" provision_id=\"17\" extAttrName=\"USERNAME\"/>\n@@ -963,10 +963,10 @@ under the License.\n \n   <Provision id=\"21\" resource_name=\"resource-db-scripted\" anyType_name=\"PRINTER\" objectClass=\"__PRINTER__\"/>\n   <Mapping id=\"21\" provision_id=\"21\"/>\n-  <MappingItem id=\"405\" mapping_id=\"21\" extAttrName=\"id\" \n+  <MappingItem id=\"405\" mapping_id=\"21\" extAttrName=\"ID\" \n                intMappingType=\"AnyObjectKey\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"BOTH\"/>\n-  <MappingItem id=\"406\" mapping_id=\"21\" extAttrName=\"location\" \n+  <MappingItem id=\"406\" mapping_id=\"21\" extAttrName=\"LOCATION\" \n                intAttrName=\"location\" intMappingType=\"AnyObjectPlainSchema\"\n                mandatoryCondition=\"false\" connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n     "},{"sha":"c1c325439fa7ed3f92cdb4d4eefcd692466f5138","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":38,"deletions":4,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -21,6 +21,7 @@\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -33,6 +34,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.provisioning.api.data.RealmDataBinder;\n@@ -98,10 +100,26 @@ public Realm create(final String parentPath, final RealmTO realmTO) {\n         realm.setParent(realmDAO.find(parentPath));\n \n         if (realmTO.getPasswordPolicy() != null) {\n-            realm.setPasswordPolicy((PasswordPolicy) policyDAO.find(realmTO.getPasswordPolicy()));\n+            Policy policy = policyDAO.find(realmTO.getPasswordPolicy());\n+            if (policy instanceof PasswordPolicy) {\n+                realm.setPasswordPolicy((PasswordPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + PasswordPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n         }\n         if (realmTO.getAccountPolicy() != null) {\n-            realm.setAccountPolicy((AccountPolicy) policyDAO.find(realmTO.getAccountPolicy()));\n+            Policy policy = policyDAO.find(realmTO.getAccountPolicy());\n+            if (policy instanceof AccountPolicy) {\n+                realm.setAccountPolicy((AccountPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + AccountPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n         }\n \n         realm.getActionsClassNames().addAll(realmTO.getActionsClassNames());\n@@ -117,10 +135,26 @@ public void update(final Realm realm, final RealmTO realmTO) {\n         realm.setParent(realmTO.getParent() == 0 ? null : realmDAO.find(realmTO.getParent()));\n \n         if (realmTO.getPasswordPolicy() != null) {\n-            realm.setPasswordPolicy((PasswordPolicy) policyDAO.find(realmTO.getPasswordPolicy()));\n+            Policy policy = policyDAO.find(realmTO.getPasswordPolicy());\n+            if (policy instanceof PasswordPolicy) {\n+                realm.setPasswordPolicy((PasswordPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + PasswordPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n         }\n         if (realmTO.getAccountPolicy() != null) {\n-            realm.setAccountPolicy((AccountPolicy) policyDAO.find(realmTO.getAccountPolicy()));\n+            Policy policy = policyDAO.find(realmTO.getAccountPolicy());\n+            if (policy instanceof AccountPolicy) {\n+                realm.setAccountPolicy((AccountPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + AccountPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n         }\n \n         realm.getActionsClassNames().clear();"},{"sha":"2d1afa47fef8730a6a266f19b62a81afef5e2a68","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -154,7 +154,7 @@ protected List<IColumn<CamelRouteTO, String>> getColumns() {\n             public ActionLinksPanel<CamelRouteTO> getActions(\n                     final String componentId, final IModel<CamelRouteTO> model) {\n \n-                ActionLinksPanel<CamelRouteTO> panel = ActionLinksPanel.<CamelRouteTO>builder(pageRef).\n+                ActionLinksPanel<CamelRouteTO> panel = ActionLinksPanel.<CamelRouteTO>builder().\n                         add(new ActionLink<CamelRouteTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -172,8 +172,7 @@ public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n \n             @Override\n             public ActionLinksPanel<CamelRouteTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<CamelRouteTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<CamelRouteTO> panel = ActionLinksPanel.builder();\n \n                 return panel.add(new ActionLink<CamelRouteTO>() {\n "},{"sha":"01ec468536659e82f2c000aa7294130e77f7ebfb","filename":"ext/swagger-ui/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/ext%2Fswagger-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/ext%2Fswagger-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fpom.xml?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -45,12 +45,10 @@ under the License.\n     <dependency>\n       <groupId>com.fasterxml.jackson.dataformat</groupId>\n       <artifactId>jackson-dataformat-yaml</artifactId>\n-      <version>${jackson.version}</version>\n     </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.dataformat</groupId>\n       <artifactId>jackson-dataformat-xml</artifactId>\n-      <version>${jackson.version}</version>\n     </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.datatype</groupId>"},{"sha":"3f9d841066a10792021d340bb8e16bc547075c00","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -48,7 +48,6 @@ public abstract class AbstractConsoleITCase extends AbstractITCase {\n \n     @Before\n     public void setUp() {\n-\n         testApplicaton = new SyncopeConsoleApplication() {\n \n             @Override"},{"sha":"5173a68b71b68af5fb0647cc1101442df79d8afc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -61,8 +61,13 @@ public void createParameter() {\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n+        try {\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-\n+        } catch(Throwable t) {\n+            System.err.println(\"EEEEEEEEEEEEEE \" + wicketTester.getLastResponseAsString());\n+            t.printStackTrace();\n+        }\n+        \n         wicketTester.cleanupFeedbackMessages();\n         wicketTester.assertRenderedPage(Parameters.class);\n     }"},{"sha":"d18c94b507b50ba300ce4b5e33b01820e2d9703c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -235,6 +235,21 @@ public void searchByBooleanAnyCond() {\n         assertFalse(groups.getResult().isEmpty());\n     }\n \n+    @Test\n+    public void searchByDate() {\n+        clientFactory.create(\"bellini\", \"password\").self();\n+\n+        PagedResult<UserTO> users = userService.search(\n+                new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                        is(\"lastLoginDate\").lexicalNotBefore(\"2016-03-02 15:21:22\").\n+                        and(\"username\").equalTo(\"bellini\").query()).\n+                build());\n+        assertNotNull(users);\n+        assertEquals(1, users.getTotalCount());\n+        assertEquals(1, users.getResult().size());\n+    }\n+\n     @Test\n     public void searchByRelationshipAnyCond() {\n         PagedResult<GroupTO> groups = groupService.search(\n@@ -405,7 +420,7 @@ public void issueSYNCOPE768() {\n                 getResult();\n \n         assertFalse(usersWithType.isEmpty());\n-        \n+\n         final PagedResult<UserTO> matchedUsers = userService.search(\n                 new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").notNullValue().query())."},{"sha":"5ee8d554a61abef036182ce1192330cbe0d27d14","filename":"fit/core-reference/src/test/resources/scriptedsql/CreateScript.groovy","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FCreateScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FCreateScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FCreateScript.groovy?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -35,12 +35,12 @@ log.info(\"Entering \" + action + \" Script\");\n \n def sql = new Sql(connection);\n \n-switch ( objectClass ) {\n+switch ( objectClass ) {  \n case \"__PRINTER__\":\n   sql.execute(\"INSERT INTO TESTPRINTER (id, location, lastmodification) values (?,?,?)\",\n     [\n       id,\n-      attributes.get(\"location\").get(0),\n+      attributes.get(\"LOCATION\").get(0),\n       new Date()\n     ])\n   break"},{"sha":"4d1ce5e767fbf9c4a33f641d308be79bc1372856","filename":"fit/core-reference/src/test/resources/scriptedsql/UpdateScript.groovy","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FUpdateScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FUpdateScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fscriptedsql%2FUpdateScript.groovy?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -50,9 +50,9 @@ def sql = new Sql(connection);\n \n switch (action) {\n case \"UPDATE\":\n-  if (attributes.get(\"location\").get(0) != null) {\n+  if (attributes.get(\"LOCATION\").get(0) != null) {\n     sql.executeUpdate(\"UPDATE TESTPRINTER SET location = ?, lastmodification = ? where id = ?\", \n-      [attributes.get(\"location\").get(0), new Date(), attributes.get(\"__NAME__\").get(0)])\n+      [attributes.get(\"LOCATION\").get(0), new Date(), attributes.get(\"__NAME__\").get(0)])\n     \n     return attributes.get(\"__NAME__\").get(0);\n   }"},{"sha":"8d579717289275d07aee503683a1b2390d70ce7d","filename":"pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f9f50c575114043bc558084e6109fefcf7862ea5/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f9f50c575114043bc558084e6109fefcf7862ea5/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=f9f50c575114043bc558084e6109fefcf7862ea5","patch":"@@ -633,6 +633,16 @@ under the License.\n         <artifactId>jackson-module-afterburner</artifactId>\n         <version>${jackson.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.dataformat</groupId>\n+        <artifactId>jackson-dataformat-yaml</artifactId>\n+        <version>${jackson.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.dataformat</groupId>\n+        <artifactId>jackson-dataformat-xml</artifactId>\n+        <version>${jackson.version}</version>\n+      </dependency>\n \n       <dependency>\n         <groupId>org.springframework</groupId>"}]}