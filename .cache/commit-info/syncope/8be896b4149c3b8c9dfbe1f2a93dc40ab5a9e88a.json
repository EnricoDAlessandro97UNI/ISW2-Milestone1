{"sha":"8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiZTg5NmI0MTQ5YzNiOGM5ZGZiZTFmMmE5M2RjNDBhYjVhOWU4OGE=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-04-26T16:02:05Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-04-26T16:02:05Z"},"message":"merged from 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1476263 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"82cc4c9fcebdbb8873eb9fa9943eb9343da9bc76","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/82cc4c9fcebdbb8873eb9fa9943eb9343da9bc76"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"90359e4e3f6159cbd3de494a27ee1ae42ffafe3c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/90359e4e3f6159cbd3de494a27ee1ae42ffafe3c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/90359e4e3f6159cbd3de494a27ee1ae42ffafe3c"},{"sha":"4cabd59ef5a9b4c73e910ba926e11cf360f4deee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cabd59ef5a9b4c73e910ba926e11cf360f4deee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4cabd59ef5a9b4c73e910ba926e11cf360f4deee"}],"stats":{"total":211,"additions":121,"deletions":90},"files":[{"sha":"9d4ef56c88f7b52d50c3117c2cf59597d1853e4a","filename":"common/src/main/java/org/apache/syncope/common/types/EntityViolationType.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FEntityViolationType.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -60,14 +60,11 @@ private EntityViolationType(final String message) {\n         this.message = message;\r\n     }\r\n \r\n-    public void setMessageTemplate(final String message) {\r\n+    public void setMessage(final String message) {\r\n         this.message = message;\r\n     }\r\n \r\n-    @Override\r\n-    public String toString() {\r\n-        return this == Standard\r\n-                ? message\r\n-                : super.toString();\r\n+    public String getMessage() {\r\n+        return message;\r\n     }\r\n }\r"},{"sha":"66dc3d50bd60603f5e13f8bc230cf844e3e45747","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractValidator.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.validation.entity;\n \n+import org.apache.syncope.common.types.EntityViolationType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -28,4 +29,7 @@ public abstract class AbstractValidator {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n+    protected final String getTemplate(final EntityViolationType type, final String message) {\n+        return type.name() + \";\" + message;\n+    }\n }"},{"sha":"799161f7bbb036fbe1f76e3a07223d15cdfb9c58","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrValidator.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,7 +20,6 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n \n@@ -53,9 +52,11 @@ public boolean isValid(final AbstractAttr object, final ConstraintValidatorConte\n                         + \", \" + \"values={}\", object.getValuesAsStrings());\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidValueList.toString()).addNode(\n-                        object + \"(\" + object.getSchema().getName() + \")\" + \"{\" + object.getValuesAsStrings() + \"}\")\n-                        .addConstraintViolation();\n+\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidValueList,\n+                        \"Invalid values \" + object.getValuesAsStrings())).\n+                        addNode(object.getSchema().getName()).addConstraintViolation();\n             }\n         }\n "},{"sha":"b00072c0e60e7f08b4a342548bdc3572628f757d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrValueValidator.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,7 +20,6 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -63,8 +62,10 @@ public boolean isValid(final AbstractAttrValue object, final ConstraintValidator\n                 LOG.error(\"More than one non-null value for \" + object);\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.MoreThanOneNonNull.toString())\n-                        .addNode(object.toString().replaceAll(\"\\\\n\", \" \")).addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.MoreThanOneNonNull, \"More than one non-null value found\")).\n+                        addNode(object.getClass().getSimpleName().replaceAll(\"\\\\n\", \" \")).addConstraintViolation();\n+\n             } else if (object instanceof AbstractAttrUniqueValue) {\n                 AbstractSchema uniqueValueSchema = ((AbstractAttrUniqueValue) object).getSchema();\n                 AbstractSchema attrSchema = object.getAttribute().getSchema();\n@@ -73,15 +74,14 @@ public boolean isValid(final AbstractAttrValue object, final ConstraintValidator\n \n                 if (!isValid) {\n                     LOG.error(\"Unique value schema for \" + object.getClass().getSimpleName() + \"[\" + object.getId()\n-                            + \"]\" + \" is \" + uniqueValueSchema + \", while owning \" + \"attribute schema is \"\n-                            + attrSchema);\n+                            + \"]\" + \" is \" + uniqueValueSchema + \", while owning attribute schema is \" + attrSchema);\n \n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n-                            EntityViolationType.valueOf(\"Invalid\" + attrSchema.getClass().getSimpleName()).toString())\n-                            .addNode(\n-                                    object.getClass().getSimpleName() + \"[\" + object.getId() + \"].schema=\"\n-                                            + uniqueValueSchema + \" != \" + attrSchema).addConstraintViolation();\n+                            getTemplate(EntityViolationType.valueOf(\"Invalid\" + attrSchema.getClass().getSimpleName()),\n+                            \"Unique value schema is \" + uniqueValueSchema\n+                            + \", while owning attribute schema is \" + attrSchema)).addNode(\"schema\").\n+                            addConstraintViolation();\n                 }\n             }\n         }"},{"sha":"314737be935f0fc0dd237bd3140a0fbf6d62074d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ConnInstanceValidator.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -42,8 +42,10 @@ public boolean isValid(final ConnInstance connInstance, final ConstraintValidato\n             LOG.error(\"While validating {}\", connInstance.getLocation(), e);\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidConnInstanceLocation.toString())\n-                    .addNode(\"location\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidConnInstanceLocation, e.getMessage())).\n+                    addNode(\"location\").addConstraintViolation();\n+\n             isValid = false;\n         }\n "},{"sha":"890ca09184673f94ce5454331249c42bbdc82e72","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/EntitlementValidator.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,10 +20,8 @@\n \n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n \n@@ -52,11 +50,12 @@ public boolean isValid(final Entitlement object, final ConstraintValidatorContex\n             }\n \n             if (!isValid) {\n-                LOG.error(object + \" cannot have name \" + \"starting by ROLE_\");\n+                LOG.error(object + \" cannot have name starting by ROLE_\");\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidEntitlementName.toString())\n-                        .addNode(object.toString()).addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(getTemplate(\n+                        EntityViolationType.InvalidEntitlementName, object + \" cannot have name starting by ROLE_\")).\n+                        addNode(\"name\").addConstraintViolation();\n             }\n         }\n "},{"sha":"6a0a05a49935f1630f29cb4a8c870313a98e8357","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":19,"deletions":14,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,7 +20,6 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n@@ -37,22 +36,25 @@ public void initialize(final ExternalResourceCheck constraintAnnotation) {\n \n     private boolean isValid(final AbstractMappingItem item, final ConstraintValidatorContext context) {\n         if (StringUtils.isBlank(item.getExtAttrName())) {\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidMapping.toString())\n-                    .addNode(item + \".extAttrName is null\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, item + \".extAttrName is null\")).\n+                    addNode(\"extAttrName\").addConstraintViolation();\n \n             return false;\n         }\n \n         if (StringUtils.isBlank(item.getIntAttrName())) {\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidMapping.toString())\n-                    .addNode(item + \".intAttrName is null\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, item + \".intAttrName is null\")).\n+                    addNode(\"intAttrName\").addConstraintViolation();\n \n             return false;\n         }\n-        \n+\n         if (item.getPurpose() == null) {\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidMapping.toString())\n-                    .addNode(item + \".purpose is null\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, item + \".purpose is null\")).\n+                    addNode(\"purpose\").addConstraintViolation();\n \n             return false;\n         }\n@@ -72,8 +74,9 @@ private boolean isValid(final AbstractMapping mapping, final ConstraintValidator\n             }\n         }\n         if (accountIds != 1) {\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidMapping.toString())\n-                    .addNode(mapping + \".accountId.size==\" + accountIds).addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, \"One and only one accountId mapping is needed\")).\n+                    addNode(\"accountId.size\").addConstraintViolation();\n             return false;\n         }\n \n@@ -88,8 +91,9 @@ private boolean isValid(final AbstractMapping mapping, final ConstraintValidator\n             }\n         }\n         if (passwords > 1) {\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidMapping.toString())\n-                    .addNode(mapping + \".password.size==\" + passwords).addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping, \"One and only one password mapping is allowed\")).\n+                    addNode(\"password.size\").addConstraintViolation();\n             isValid = false;\n         }\n \n@@ -111,8 +115,9 @@ public boolean isValid(final ExternalResource resource, final ConstraintValidato\n             }\n \n             if (actionsClass == null || !isAssignable) {\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidResource.toString())\n-                        .addNode(resource + \".actionsClassName is not valid\").addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidResource, \"Ivalid actions class name\")).\n+                        addNode(\"actionsClassName\").addConstraintViolation();\n                 return false;\n             }\n         }"},{"sha":"67553958555f854abfedffb16dc2cdfb1dfe74c8","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/InvalidEntityException.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -22,10 +22,8 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n-\n import javax.validation.ConstraintViolation;\n import javax.validation.ValidationException;\n-\n import org.apache.syncope.common.types.EntityViolationType;\n \n public class InvalidEntityException extends ValidationException {\n@@ -44,15 +42,24 @@ public InvalidEntityException(final String entityClassSimpleName,\n         this.entityClassSimpleName = entityClassSimpleName;\n \n         this.violations = new HashMap<Class, Set<EntityViolationType>>();\n-        EntityViolationType entityViolationType;\n         for (ConstraintViolation<Object> violation : violations) {\n+            int firstComma = violation.getMessageTemplate().indexOf(';');\n+\n+            final String key = violation.getMessageTemplate().substring(\n+                    0, firstComma > 0 ? firstComma : violation.getMessageTemplate().length());\n+\n+            final String message = violation.getMessageTemplate().substring(firstComma > 0 ? firstComma + 1 : 0);\n+\n+            EntityViolationType entityViolationType;\n+\n             try {\n-                entityViolationType = EntityViolationType.valueOf(violation.getMessageTemplate());\n+                entityViolationType = EntityViolationType.valueOf(key.trim());\n             } catch (IllegalArgumentException e) {\n                 entityViolationType = EntityViolationType.Standard;\n-                entityViolationType.setMessageTemplate(violation.getPropertyPath() + \": \" + violation.getMessage());\n             }\n \n+            entityViolationType.setMessage(message.trim());\n+\n             if (!this.violations.containsKey(violation.getLeafBean().getClass())) {\n                 this.violations.put(violation.getLeafBean().getClass(), EnumSet.noneOf(EntityViolationType.class));\n             }"},{"sha":"1b3cddff5ba5c35fb4f507bc612ca0367c736c87","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/NotificationValidator.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -41,21 +41,23 @@ public boolean isValid(final Notification value, final ConstraintValidatorContex\n         if (value.getEvents().isEmpty()) {\n             isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\"No events\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).addNode(\"events\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidNotification, \"No events\")).\n+                    addNode(\"events\").addConstraintViolation();\n         }\n         if (!value.getAbout().isValid()) {\n             isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\"Invalid about search condition\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).addNode(\"about\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidNotification, \"Invalid about search condition\")).\n+                    addNode(\"about\").addConstraintViolation();\n         }\n         if (value.getRecipients() != null) {\n             if (!value.getRecipients().isValid() && !value.isSelfAsRecipient()) {\n                 isValid = false;\n \n-                context.buildConstraintViolationWithTemplate(\"Invalid recipients search condition\").addNode(\n-                        EntityViolationType.InvalidNotification.toString()).\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidNotification, \"Invalid recipients search condition\")).\n                         addNode(\"recipients\").addConstraintViolation();\n             }\n         }"},{"sha":"928f22b41abbbaff30626249e1d83c185e766989","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PolicyValidator.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,7 +20,6 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.syncope.common.types.AccountPolicySpec;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.PasswordPolicySpec;\n@@ -50,8 +49,9 @@ public boolean isValid(final Policy object, final ConstraintValidatorContext con\n                 || ((object instanceof AccountPolicy && !(object.getSpecification() instanceof AccountPolicySpec)))\n                 || ((object instanceof SyncPolicy && !(object.getSpecification() instanceof SyncPolicySpec))))) {\n \n-            context.buildConstraintViolationWithTemplate(\"Invalid policy specification\").\n-                    addNode(EntityViolationType.valueOf(\"Invalid\" + object.getClass().getSimpleName()).name()).\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.valueOf(\"Invalid\" + object.getClass().getSimpleName()),\n+                    \"Invalid policy specification\")).addNode(\"specification\").\n                     addConstraintViolation();\n \n             return false;\n@@ -63,8 +63,9 @@ public boolean isValid(final Policy object, final ConstraintValidatorContext con\n                 final PasswordPolicy passwordPolicy = policyDAO.getGlobalPasswordPolicy();\n \n                 if (passwordPolicy != null && !passwordPolicy.getId().equals(object.getId())) {\n-                    context.buildConstraintViolationWithTemplate(\"Password policy already exists\").addNode(\n-                            EntityViolationType.InvalidPasswordPolicy.name()).addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidPasswordPolicy, \"Password policy already exists\")).\n+                            addNode(object.getClass().getSimpleName()).addConstraintViolation();\n \n                     return false;\n                 }\n@@ -75,8 +76,9 @@ public boolean isValid(final Policy object, final ConstraintValidatorContext con\n                 final AccountPolicy accountPolicy = policyDAO.getGlobalAccountPolicy();\n \n                 if (accountPolicy != null && !accountPolicy.getId().equals(object.getId())) {\n-                    context.buildConstraintViolationWithTemplate(\"Global Account policy already exists\").addNode(\n-                            EntityViolationType.InvalidAccountPolicy.name()).addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(getTemplate(\n+                            EntityViolationType.InvalidAccountPolicy, \"Global Account policy already exists\")).\n+                            addNode(object.getClass().getSimpleName()).addConstraintViolation();\n \n                     return false;\n                 }\n@@ -87,8 +89,9 @@ public boolean isValid(final Policy object, final ConstraintValidatorContext con\n                 final SyncPolicy syncPolicy = policyDAO.getGlobalSyncPolicy();\n \n                 if (syncPolicy != null && !syncPolicy.getId().equals(object.getId())) {\n-                    context.buildConstraintViolationWithTemplate(\"Global Sync policy already exists\").addNode(\n-                            EntityViolationType.InvalidSyncPolicy.name()).addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(getTemplate(\n+                            EntityViolationType.InvalidSyncPolicy, \"Global Sync policy already exists\")).\n+                            addNode(object.getClass().getSimpleName()).addConstraintViolation();\n \n                     return false;\n                 }"},{"sha":"d2f7c904012ee27327cbaf3863bc0356c9b6a500","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PropagationTaskValidator.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -62,8 +62,9 @@ public boolean isValid(final PropagationTask task, final ConstraintValidatorCont\n \n             if (!isValid) {\n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidPropagationTask.toString())\n-                        .addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidPropagationTask, \"Invalid task\")).\n+                        addNode(task.getClass().getSimpleName()).addConstraintViolation();\n             }\n         }\n "},{"sha":"f63dd436394bf82c2c60762cf203bb50b5047b35","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ReportValidator.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -50,8 +50,9 @@ public boolean isValid(final Report object, final ConstraintValidatorContext con\n                 isValid = false;\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).addNode(\n-                        object + \".cronExpression==\" + object.getCronExpression()).addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidReport, \"Invalid cron expression\")).\n+                        addNode(\"cronExpression\").addConstraintViolation();\n             }\n         }\n \n@@ -64,8 +65,9 @@ public boolean isValid(final Report object, final ConstraintValidatorContext con\n             isValid = false;\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).addNode(\n-                    object + \".reportletConfs with duplicate names\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidReport, \"Reportlet name must be unique\")).\n+                    addNode(\"reportletConfs\").addConstraintViolation();\n         }\n \n         return isValid;"},{"sha":"256f76733fc9de81fdba0a31669013d4e7652d75","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchedTaskValidator.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -51,8 +51,9 @@ public boolean isValid(final SchedTask object, final ConstraintValidatorContext\n             isValid = false;\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSchedTask.toString()).addNode(\n-                    object + \".jobClassName is not valid\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidSchedTask, \"Invalid job class name\")).\n+                    addNode(\"jobClassName\").addConstraintViolation();\n         }\n \n         if (isValid && object.getCronExpression() != null) {\n@@ -63,8 +64,9 @@ public boolean isValid(final SchedTask object, final ConstraintValidatorContext\n                 isValid = false;\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSchedTask.toString()).addNode(\n-                        object + \".cronExpression==\" + object.getCronExpression()).addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidSchedTask, \"Invalid cron expression\")).\n+                        addNode(\"cronExpression\").addConstraintViolation();\n             }\n         }\n "},{"sha":"5d7042b1e73f8424847fcbb3b5e8dd8ea2624b7c","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaValidator.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -57,8 +57,7 @@ public boolean isValid(final AbstractSchema object, final ConstraintValidatorCon\n                 if (!isValid) {\n                     violation = EntityViolationType.MultivalueAndUniqueConstraint;\n \n-                    throw new Exception(object + \" cannot be multivalue and have \"\n-                            + \"unique constraint at the same time\");\n+                    throw new Exception(object + \" cannot be multivalue and have unique constraint at the same time\");\n                 }\n             }\n \n@@ -67,8 +66,8 @@ public boolean isValid(final AbstractSchema object, final ConstraintValidatorCon\n             LOG.error(\"Error saving schema\", e);\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(violation.toString()).addNode(object.toString())\n-                    .addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(getTemplate(violation, e.getMessage())).\n+                    addNode(object.getClass().getSimpleName()).addConstraintViolation();\n \n             return false;\n         }"},{"sha":"eaa8446daa7431a16d8f6fcdb7bd0902b1b226a3","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncTaskValidator.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -56,8 +56,9 @@ public boolean isValid(final SyncTask object, final ConstraintValidatorContext c\n                     LOG.error(\"Resource is null\");\n \n                     context.disableDefaultConstraintViolation();\n-                    context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSyncTask.toString())\n-                            .addNode(object + \".resource is NULL\").addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidSyncTask, \"Resource cannot be null\")).\n+                            addNode(\"resource\").addConstraintViolation();\n                 }\n \n                 if (StringUtils.isNotBlank(object.getActionsClassName())) {\n@@ -75,8 +76,9 @@ public boolean isValid(final SyncTask object, final ConstraintValidatorContext c\n                         isValid = false;\n \n                         context.disableDefaultConstraintViolation();\n-                        context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSyncTask.toString())\n-                                .addNode(object + \".actionsClassName is not valid\").addConstraintViolation();\n+                        context.buildConstraintViolationWithTemplate(\n+                                getTemplate(EntityViolationType.InvalidSyncTask, \"Invalid class name\")).\n+                                addNode(\"actionsClassName\").addConstraintViolation();\n                     }\n                 }\n             }"},{"sha":"dea3d28c1079c58b3da3403b16cb0131d6af58cb","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeRoleValidator.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -20,7 +20,6 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n \n@@ -40,8 +39,10 @@ public boolean isValid(final SyncopeRole object, final ConstraintValidatorContex\n         if (object.getUserOwner() != null && object.getRoleOwner() != null) {\n             isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\"A role must either be owned by an user or a role, not both\").\n-                    addNode(EntityViolationType.InvalidRoleOwner.toString()).addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidRoleOwner,\n+                    \"A role must either be owned by an user or a role, not both\")).\n+                    addNode(\"owner\").addConstraintViolation();\n         }\n \n         return isValid;"},{"sha":"1487bc7ebc5c8d1c07129b543a6b4d2ca46f39f9","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeUserValidator.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -92,8 +92,9 @@ public boolean isValid(final SyncopeUser object, final ConstraintValidatorContex\n             } catch (Exception e) {\n                 LOG.debug(\"Invalid password\");\n \n-                context.buildConstraintViolationWithTemplate(e.getMessage()).addNode(\n-                        EntityViolationType.InvalidPassword.toString()).addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\n+                        getTemplate(EntityViolationType.InvalidPassword, e.getMessage())).\n+                        addNode(\"password\").addConstraintViolation();\n \n                 return false;\n             } finally {\n@@ -120,8 +121,9 @@ public boolean isValid(final SyncopeUser object, final ConstraintValidatorContex\n         } catch (Exception e) {\n             LOG.debug(\"Invalid username\");\n \n-            context.buildConstraintViolationWithTemplate(e.getMessage()).addNode(\n-                    EntityViolationType.InvalidUsername.toString()).addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidUsername, e.getMessage()))\n+                    .addNode(\"username\").addConstraintViolation();\n \n             return false;\n         }"},{"sha":"4177b96dc9fefefb7b6a0c090ae2f1642855a51d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/USchemaValidator.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FUSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FUSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FUSchemaValidator.java?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -33,8 +33,8 @@\n public class USchemaValidator extends AbstractValidator implements ConstraintValidator<USchemaCheck, Object> {\n \n     @Transient\n-    private static List<String> PERMITTED_USCHEMA_NAMES = Arrays.asList(new String[] { \"failedLogins\", \"username\",\n-            \"password\", \"lastLoginDate\", \"creationDate\", \"changePwdDate\" });\n+    private static List<String> PERMITTED_USCHEMA_NAMES = Arrays.asList(new String[]{\"failedLogins\", \"username\",\n+                \"password\", \"lastLoginDate\", \"creationDate\", \"changePwdDate\"});\n \n     @Override\n     public void initialize(final USchemaCheck constraintAnnotation) {\n@@ -72,8 +72,10 @@ public boolean isValid(final Object object, final ConstraintValidatorContext con\n             LOG.error(\"Error saving schema\", e);\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(violation.toString()).addNode(object.toString())\n-                    .addConstraintViolation();\n+\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(violation, e.getMessage())).\n+                    addNode(object.getClass().getSimpleName()).addConstraintViolation();\n \n             return false;\n         }"},{"sha":"be9127d91e6207c070604b990be435274daf8366","filename":"core/src/main/webapp/syncopeClientError.jsp","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp?ref=8be896b4149c3b8c9dfbe1f2a93dc40ab5a9e88a","patch":"@@ -60,7 +60,7 @@ under the License.\n \n             for (EntityViolationType violationType : violation.getValue()) {\n                 response.addHeader(exType.getElementHeaderName(),\n-                        violation.getClass().getSimpleName() + \": \" + violationType);\n+                        violationType.name() + \": \" + violationType.getMessage());\n             }\n         }\n "}]}