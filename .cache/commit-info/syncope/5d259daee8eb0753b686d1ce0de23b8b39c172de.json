{"sha":"5d259daee8eb0753b686d1ce0de23b8b39c172de","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkMjU5ZGFlZThlYjA3NTNiNjg2ZDFjZTBkZTIzYjhiMzljMTcyZGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-13T08:36:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-13T08:36:31Z"},"message":"[SYNCOPE-152] Password management, serviceProviderConfig alignment","tree":{"sha":"bad89f8fd20cf392b61c1f4f3197413218facc69","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bad89f8fd20cf392b61c1f4f3197413218facc69"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5d259daee8eb0753b686d1ce0de23b8b39c172de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d259daee8eb0753b686d1ce0de23b8b39c172de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d259daee8eb0753b686d1ce0de23b8b39c172de","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d259daee8eb0753b686d1ce0de23b8b39c172de/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fba4a8bdcaea1b848852c4e4f7d6f6802a1d99fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fba4a8bdcaea1b848852c4e4f7d6f6802a1d99fc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fba4a8bdcaea1b848852c4e4f7d6f6802a1d99fc"}],"stats":{"total":37,"additions":29,"deletions":8},"files":[{"sha":"80c90d9857334510b0f4833e1ede53739d017391","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=5d259daee8eb0753b686d1ce0de23b8b39c172de","patch":"@@ -445,6 +445,7 @@ public UserTO toUserTO(final SCIMUser user) {\n         UserTO userTO = new UserTO();\n         userTO.setRealm(SyncopeConstants.ROOT_REALM);\n         userTO.setKey(user.getId());\n+        userTO.setPassword(user.getPassword());\n         userTO.setUsername(user.getUserName());\n \n         SCIMConf conf = confManager.get();"},{"sha":"04757f24225274fd06dcea2bdd1338f56fb158f7","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java?ref=5d259daee8eb0753b686d1ce0de23b8b39c172de","patch":"@@ -102,7 +102,7 @@ public ServiceProviderConfig serviceProviderConfig(final UriBuilder uriBuilder)\n                                 conf.getLastChangeDate(),\n                                 conf.getETagValue(),\n                                 uriBuilder.build().toASCIIString()),\n-                        new ConfigurationOption(true),\n+                        new ConfigurationOption(false),\n                         new BulkConfigurationOption(false, conf.getBulkMaxOperations(), conf.getBulkMaxPayloadSize()),\n                         new FilterConfigurationOption(true, conf.getFilterMaxResults()),\n                         new ConfigurationOption(true),"},{"sha":"2fb73c64e1cb028b4c0cb0a094e5af0544571db5","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMSearchRequest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMSearchRequest.java?ref=5d259daee8eb0753b686d1ce0de23b8b39c172de","patch":"@@ -85,12 +85,12 @@ public SortOrder getSortOrder() {\n         return sortOrder;\n     }\n \n-    public Integer getStartIndex() {\n-        return startIndex;\n+    public int getStartIndex() {\n+        return startIndex == null ? 1 : startIndex;\n     }\n \n-    public Integer getCount() {\n-        return count;\n+    public int getCount() {\n+        return count == null ? 25 : count;\n     }\n \n }"},{"sha":"cb8bb5f7e2108707abbce4b0070c1ade6fb28299","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractService.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d259daee8eb0753b686d1ce0de23b8b39c172de/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java?ref=5d259daee8eb0753b686d1ce0de23b8b39c172de","patch":"@@ -46,9 +46,11 @@\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.ext.scimv2.api.BadRequestException;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n+import org.apache.syncope.ext.scimv2.api.type.ErrorType;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n import org.slf4j.Logger;\n@@ -187,13 +189,17 @@ protected ListResponse<R> doSearch(\n             throw new UnsupportedOperationException();\n         }\n \n+        if (request.getCount() > confManager().get().getFilterMaxResults()) {\n+            throw new BadRequestException(ErrorType.tooMany, \"Too many results requested\");\n+        }\n+\n         SearchCondVisitor visitor = new SearchCondVisitor(type, confManager().get());\n \n-        int startIndex = request.getStartIndex() == null || request.getStartIndex() <= 1\n+        int startIndex = request.getStartIndex() <= 1\n                 ? 1\n                 : (request.getStartIndex() / AnyDAO.DEFAULT_PAGE_SIZE) + 1;\n \n-        int itemsPerPage = request.getCount() == null ? AnyDAO.DEFAULT_PAGE_SIZE : request.getCount();\n+        int itemsPerPage = request.getCount() <= 1 ? AnyDAO.DEFAULT_PAGE_SIZE : request.getCount();\n \n         List<OrderByClause> sort;\n         if (request.getSortBy() == null) {\n@@ -217,6 +223,10 @@ protected ListResponse<R> doSearch(\n                 SyncopeConstants.ROOT_REALM,\n                 false);\n \n+        if (result.getLeft() > confManager().get().getFilterMaxResults()) {\n+            throw new BadRequestException(ErrorType.tooMany, \"Too many results found\");\n+        }\n+\n         ListResponse<R> response = new ListResponse<>(\n                 result.getLeft(), startIndex == 1 ? 1 : startIndex - 1, itemsPerPage);\n "},{"sha":"290f8885bcc9625c602e4afa395fdb14c14133dc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d259daee8eb0753b686d1ce0de23b8b39c172de/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d259daee8eb0753b686d1ce0de23b8b39c172de/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=5d259daee8eb0753b686d1ce0de23b8b39c172de","patch":"@@ -124,7 +124,11 @@ public void serviceProviderConfig() {\n \n         ServiceProviderConfig serviceProviderConfig = response.readEntity(ServiceProviderConfig.class);\n         assertNotNull(serviceProviderConfig);\n+        assertFalse(serviceProviderConfig.getPatch().isSupported());\n+        assertFalse(serviceProviderConfig.getBulk().isSupported());\n+        assertTrue(serviceProviderConfig.getChangePassword().isSupported());\n         assertTrue(serviceProviderConfig.getEtag().isSupported());\n+        assertTrue(serviceProviderConfig.getSort().isSupported());\n     }\n \n     @Test\n@@ -238,7 +242,12 @@ public void conf() {\n     public void list() throws IOException {\n         assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n \n-        Response response = webClient().path(\"Groups\").\n+        Response response = webClient().path(\"Groups\").query(\"count\", 1100000).get();\n+        assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\n+        SCIMError error = response.readEntity(SCIMError.class);\n+        assertEquals(ErrorType.tooMany, error.getScimType());\n+\n+        response = webClient().path(\"Groups\").\n                 query(\"sortBy\", \"displayName\").\n                 query(\"count\", 11).\n                 get();\n@@ -327,6 +336,7 @@ public void search() {\n \n     private SCIMUser getSampleUser(final String username) {\n         SCIMUser user = new SCIMUser(null, Collections.singletonList(Resource.User.schema()), null, username, true);\n+        user.setPassword(\"password123\");\n \n         SCIMUserName name = new SCIMUserName();\n         name.setGivenName(username);"}]}