{"sha":"6a5fa8416222ff60fb627a748fc9be9f948339e2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhNWZhODQxNjIyMmZmNjBmYjYyN2E3NDhmYzliZTlmOTQ4MzM5ZTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-24T14:31:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-24T14:31:12Z"},"message":"[SYNCOPE-879] Fix","tree":{"sha":"debd90dd9ab45c9dfe31f58082b1ce624e7a4a66","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/debd90dd9ab45c9dfe31f58082b1ce624e7a4a66"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6a5fa8416222ff60fb627a748fc9be9f948339e2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a5fa8416222ff60fb627a748fc9be9f948339e2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a5fa8416222ff60fb627a748fc9be9f948339e2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a5fa8416222ff60fb627a748fc9be9f948339e2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"21658a50f6668c1d0c4f2afa3190123e8091d073","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/21658a50f6668c1d0c4f2afa3190123e8091d073","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/21658a50f6668c1d0c4f2afa3190123e8091d073"}],"stats":{"total":112,"additions":58,"deletions":54},"files":[{"sha":"f6df407d0593e8475053efad5d224a3c89cd7724","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=6a5fa8416222ff60fb627a748fc9be9f948339e2","patch":"@@ -24,6 +24,8 @@\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -64,6 +66,26 @@ public ConnInstanceTO create(final ConnInstanceTO connectorTO) {\n         return getObject(service, response.getLocation(), ConnInstanceTO.class);\n     }\n \n+    public List<String> getExtAttrNames(\n+            final String objectClass, final String connectorKey, final Set<ConnConfProperty> conf) {\n+\n+        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+        connInstanceTO.setKey(connectorKey);\n+        connInstanceTO.getConf().addAll(conf);\n+\n+        // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n+        ConnIdObjectClassTO connIdObjectClass = IterableUtils.find(\n+                buildObjectClassInfo(connInstanceTO, false), new Predicate<ConnIdObjectClassTO>() {\n+\n+            @Override\n+            public boolean evaluate(final ConnIdObjectClassTO object) {\n+                return object.getType().equalsIgnoreCase(objectClass);\n+            }\n+        });\n+\n+        return connIdObjectClass == null ? new ArrayList<String>() : connIdObjectClass.getAttributes();\n+    }\n+\n     /**\n      * Load an already existent connector by its name.\n      *"},{"sha":"476cb5c8470023b255747108584ebde9be351cae","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":25,"deletions":24,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=6a5fa8416222ff60fb627a748fc9be9f948339e2","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -67,6 +68,7 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -137,14 +139,6 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n      */\n     private final WebMarkupContainer mappingContainer;\n \n-    private MappingTO getMapping() {\n-        if (provisionTO.getMapping() == null) {\n-            provisionTO.setMapping(new MappingTO());\n-        }\n-\n-        return provisionTO.getMapping();\n-    }\n-\n     /**\n      * Attribute Mapping Panel.\n      *\n@@ -164,16 +158,26 @@ public ResourceMappingPanel(\n         super(id);\n         setOutputMarkupId(true);\n \n-        this.provisionTO = provisionTO == null ? new ProvisionTO() : provisionTO;\n-        if (provisionTO == null) {\n-            getMapping().getItems().clear();\n-            getMapping().setConnObjectLink(null);\n+        this.provisionTO = provisionTO;\n+        if (provisionTO.getMapping() == null) {\n+            provisionTO.setMapping(new MappingTO());\n         }\n \n+        final LoadableDetachableModel<List<String>> extAttrNames = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return new ConnectorRestClient().getExtAttrNames(\n+                        provisionTO.getObjectClass(),\n+                        resourceTO.getConnector(),\n+                        resourceTO.getConfOverride());\n+            }\n+        };\n+\n         this.mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n         this.mappingContainer.setOutputMarkupId(true);\n-        this.mappingContainer.setEnabled(provisionTO != null);\n-        this.mappingContainer.setVisible(provisionTO != null);\n         add(this.mappingContainer);\n \n         mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n@@ -199,7 +203,7 @@ protected String createRelAttribute() {\n         passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n         mappingContainer.add(passwordLabel);\n \n-        Collections.sort(getMapping().getItems(), new Comparator<MappingItemTO>() {\n+        Collections.sort(provisionTO.getMapping().getItems(), new Comparator<MappingItemTO>() {\n \n             @Override\n             public int compare(final MappingItemTO left, final MappingItemTO right) {\n@@ -242,7 +246,7 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n             }\n         });\n \n-        mappings = new ListView<MappingItemTO>(\"mappings\", getMapping().getItems()) {\n+        mappings = new ListView<MappingItemTO>(\"mappings\", provisionTO.getMapping().getItems()) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -273,10 +277,7 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                         \"extAttrName\",\n                         getString(\"extAttrName\"),\n                         new PropertyModel<String>(mapItem, \"extAttrName\"));\n-                extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n-                        ResourceMappingPanel.this.provisionTO.getObjectClass(),\n-                        resourceTO.getConnector(),\n-                        resourceTO.getConfOverride()));\n+                extAttrName.setChoices(extAttrNames.getObject());\n \n                 boolean required = !mapItem.isPassword();\n                 extAttrName.setRequired(required).hideLabel();\n@@ -355,14 +356,14 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         int index = -1;\n-                        for (int i = 0; i < getMapping().getItems().size() && index == -1; i++) {\n-                            if (mapItem.equals(getMapping().getItems().get(i))) {\n+                        for (int i = 0; i < provisionTO.getMapping().getItems().size() && index == -1; i++) {\n+                            if (mapItem.equals(provisionTO.getMapping().getItems().get(i))) {\n                                 index = i;\n                             }\n                         }\n \n                         if (index != -1) {\n-                            getMapping().getItems().remove(index);\n+                            provisionTO.getMapping().getItems().remove(index);\n                             item.getParent().removeAll();\n                             target.add(ResourceMappingPanel.this);\n                         }\n@@ -440,7 +441,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                getMapping().getItems().add(new MappingItemTO());\n+                provisionTO.getMapping().getItems().add(new MappingItemTO());\n                 target.add(ResourceMappingPanel.this);\n             }\n         };"},{"sha":"28f0346ecf66ab5962eadc0ced212f64c428f4e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":11,"deletions":30,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a5fa8416222ff60fb627a748fc9be9f948339e2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=6a5fa8416222ff60fb627a748fc9be9f948339e2","patch":"@@ -22,7 +22,6 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n-import java.util.Set;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -43,13 +42,10 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.OrgUnitTO;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.wicket.PageReference;\n@@ -67,6 +63,8 @@ public class ResourceProvisionPanel extends AbstractModalPanel<Serializable> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n+    private final ConnectorRestClient connectorRestClient = new ConnectorRestClient();\n+    \n     private final ResourceTO resourceTO;\n \n     private Model<OrgUnitTO> baseModel;\n@@ -77,6 +75,7 @@ public ResourceProvisionPanel(\n             final BaseModal<Serializable> modal,\n             final ResourceTO resourceTO,\n             final PageReference pageRef) {\n+\n         super(modal, pageRef);\n         this.resourceTO = resourceTO;\n \n@@ -117,10 +116,12 @@ public ResourceProvisionPanel(\n                 getString(\"extAttrName\"),\n                 new PropertyModel<String>(baseModel.getObject(), \"extAttrName\"),\n                 false);\n-        extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n-                resourceTO.getOrgUnit() == null ? StringUtils.EMPTY : resourceTO.getOrgUnit().getObjectClass(),\n-                resourceTO.getConnector(),\n-                resourceTO.getConfOverride()));\n+        if (resourceTO.getOrgUnit() != null) {\n+            extAttrName.setChoices(connectorRestClient.getExtAttrNames(\n+                    resourceTO.getOrgUnit().getObjectClass(),\n+                    resourceTO.getConnector(),\n+                    resourceTO.getConfOverride()));\n+        }\n         realmsProvisionContainer.add(extAttrName.addRequiredLabel());\n \n         objectClass.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n@@ -129,7 +130,7 @@ public ResourceProvisionPanel(\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n+                extAttrName.setChoices(connectorRestClient.getExtAttrNames(\n                         objectClass.getModelObject(),\n                         resourceTO.getConnector(),\n                         resourceTO.getConfOverride()));\n@@ -281,7 +282,7 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n                         resourceTO.getProvisions().remove(provisionTO);\n-                        send(ResourceProvisionPanel.this, Broadcast.DEPTH, new ListViewReload<Serializable>(target));\n+                        send(ResourceProvisionPanel.this, Broadcast.DEPTH, new ListViewReload<>(target));\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_DELETE);\n \n@@ -334,28 +335,8 @@ public boolean evaluate(final MappingItemTO item) {\n         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n \n-    protected static List<String> getExtAttrNames(\n-            final String objectClass, final String connectorKey, final Set<ConnConfProperty> conf) {\n-        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(connectorKey);\n-        connInstanceTO.getConf().addAll(conf);\n-\n-        // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n-        ConnIdObjectClassTO connIdObjectClass = IterableUtils.find(new ConnectorRestClient().\n-                buildObjectClassInfo(connInstanceTO, false), new Predicate<ConnIdObjectClassTO>() {\n-\n-            @Override\n-            public boolean evaluate(final ConnIdObjectClassTO object) {\n-                return object.getType().equalsIgnoreCase(objectClass);\n-            }\n-        });\n-\n-        return connIdObjectClass == null ? new ArrayList<String>() : connIdObjectClass.getAttributes();\n-    }\n-\n     @Override\n     public void onEvent(final IEvent<?> event) {\n-\n         if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n             aboutRealmProvison.setVisible(false);\n             ((AjaxWizard.NewItemEvent) event.getPayload()).getTarget().add(aboutRealmProvison);"}]}