{"sha":"3675dc52b3a92d25023ff767875813d6c4e6202d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM2NzVkYzUyYjNhOTJkMjUwMjNmZjc2Nzg3NTgxM2Q2YzRlNjIwMmQ=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-17T21:35:21Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-17T21:35:21Z"},"message":"Merge from 1_1_X branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1484000 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5be06d0a76c0475cc9ad10846a708496d9a2ec1a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5be06d0a76c0475cc9ad10846a708496d9a2ec1a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3675dc52b3a92d25023ff767875813d6c4e6202d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3675dc52b3a92d25023ff767875813d6c4e6202d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3675dc52b3a92d25023ff767875813d6c4e6202d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3675dc52b3a92d25023ff767875813d6c4e6202d/comments","author":null,"committer":null,"parents":[{"sha":"23fcd39988c3db798b9d37bdc7f5270b34315a8b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23fcd39988c3db798b9d37bdc7f5270b34315a8b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/23fcd39988c3db798b9d37bdc7f5270b34315a8b"}],"stats":{"total":411,"additions":231,"deletions":180},"files":[{"sha":"08332be267ff33a07c5c8a7f30177a5f84cb1693","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -49,4 +49,9 @@ public class SyncopeConstants {\n \r\n     public static final String ON_BLUR = \"onblur\";\r\n \r\n+    /**\r\n+     * Default image suffix\r\n+     */\r\n+    public static final String DEFAULT_IMG_SUFFIX = \".png\";\r\n+\r\n }\r"},{"sha":"10aa40dbb4d487a7f6b30f22cdaabb0cdfdff576","filename":"console/src/main/java/org/apache/syncope/console/SyncopeApplication.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console;\n \n import java.io.Serializable;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.Configuration;\n import org.apache.syncope.console.pages.InfoModalPage;\n@@ -64,8 +65,6 @@\n \n     public static final String IMG_NOTSEL = \"notsel/\";\n \n-    public static final String IMG_SUFFIX = \".png\";\n-\n     private static final long serialVersionUID = -2920378752291913495L;\n \n     @Override\n@@ -118,45 +117,45 @@ public void onClick(final AjaxRequestTarget target) {\n         page.add(schemaLink);\n         schemaLink.add(new Image(\"schemaIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"schema\" + IMG_SUFFIX)));\n+                : \"\") + \"schema\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> usersLink = new BookmarkablePageLink<Void>(\"users\", Users.class);\n         String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\");\n         MetaDataRoleAuthorizationStrategy.authorize(usersLink, WebPage.ENABLE, allowedUsersRoles);\n         page.add(usersLink);\n         usersLink.add(new Image(\"usersIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"users\" + IMG_SUFFIX)));\n+                : \"\") + \"users\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> rolesLink = new BookmarkablePageLink<Void>(\"roles\", Roles.class);\n         MetaDataRoleAuthorizationStrategy.authorizeAll(rolesLink, WebPage.ENABLE);\n         page.add(rolesLink);\n         rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"roles\" + IMG_SUFFIX)));\n+                : \"\") + \"roles\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> resourcesLink = new BookmarkablePageLink<Void>(\"resources\", Resources.class);\n         MetaDataRoleAuthorizationStrategy.authorizeAll(resourcesLink, WebPage.ENABLE);\n         page.add(resourcesLink);\n         resourcesLink.add(new Image(\"resourcesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"resources\" + IMG_SUFFIX)));\n+                : \"\") + \"resources\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> todoLink = new BookmarkablePageLink<Void>(\"todo\", Todo.class);\n         MetaDataRoleAuthorizationStrategy.authorize(todoLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\n                 \"Approval\", \"list\"));\n         page.add(todoLink);\n         todoLink.add(new Image(\"todoIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"todo\" + IMG_SUFFIX)));\n+                : \"\") + \"todo\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> reportLink = new BookmarkablePageLink<Void>(\"reports\", Reports.class);\n         String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\");\n         MetaDataRoleAuthorizationStrategy.authorize(reportLink, WebPage.ENABLE, allowedReportRoles);\n         page.add(reportLink);\n         reportLink.add(new Image(\"reportsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"reports\" + IMG_SUFFIX)));\n+                : \"\") + \"reports\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> configurationLink = new BookmarkablePageLink<Void>(\"configuration\",\n                 Configuration.class);\n@@ -165,15 +164,15 @@ public void onClick(final AjaxRequestTarget target) {\n         page.add(configurationLink);\n         configurationLink.add(new Image(\"configurationIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"configuration\" + IMG_SUFFIX)));\n+                : \"\") + \"configuration\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         BookmarkablePageLink<Void> taskLink = new BookmarkablePageLink<Void>(\"tasks\", Tasks.class);\n         String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\");\n         MetaDataRoleAuthorizationStrategy.authorize(taskLink, WebPage.ENABLE, allowedTasksRoles);\n         page.add(taskLink);\n         taskLink.add(new Image(\"tasksIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : \"\") + \"tasks\" + IMG_SUFFIX)));\n+                : \"\") + \"tasks\" + SyncopeConstants.DEFAULT_IMG_SUFFIX)));\n \n         page.add(new BookmarkablePageLink<Void>(\"logout\", Logout.class));\n     }"},{"sha":"82c22d340c3d61e902f10de1f49ce4274e9b7120","filename":"console/src/main/java/org/apache/syncope/console/commons/ConnidAttribute.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConnidAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConnidAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConnidAttribute.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.console.commons;\n+\n+/**\n+ *\n+ * @author massi\n+ */\n+public final class ConnidAttribute {\n+    \n+    public static final String ENABLE = \"__ENABLE__\";\n+\n+    public static final String NAME = \"__NAME__\";\n+\n+    public static final String UID = \"__UID__\";\n+\n+    public static final String PASSWORD = \"__PASSWORD__\";\n+    \n+    private ConnidAttribute() {\n+        // private constructor for static utility class\n+    }\n+    \n+}"},{"sha":"97e0da6b3ded2a9949cedb63c3a9aa7b8ac94b6b","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -41,16 +41,27 @@ public class StatusUtils implements Serializable {\n \n     public enum Status {\n \n-        NOT_YET_SUBMITTED,\n-        CREATED,\n-        ACTIVE,\n-        SUSPENDED,\n-        UNDEFINED,\n-        OBJECT_NOT_FOUND;\n+        NOT_YET_SUBMITTED(\"\"),\n+        CREATED(\"created\"),\n+        ACTIVE(\"active\"),\n+        SUSPENDED(\"inactive\"),\n+        UNDEFINED(\"undefined\"),\n+        OBJECT_NOT_FOUND(\"objectnotfound\");\n \n         public boolean isActive() {\n             return this == ACTIVE;\n         }\n+\n+        private Status(final String name) {\n+            this.name = name;\n+        }\n+\n+        private final String name;\n+\n+        @Override\n+        public String toString() {\n+            return name;\n+        }\n     }\n \n     /**\n@@ -104,7 +115,7 @@ public StatusBean getStatusBean(final String resourceName, final ConnObjectTO ob\n     }\n \n     private Boolean isEnabled(final ConnObjectTO objectTO) {\n-        final String STATUSATTR = \"__ENABLE__\";\n+        final String STATUSATTR = ConnidAttribute.ENABLE;\n \n         final Map<String, AttributeTO> attributeTOs = objectTO.getAttributeMap();\n \n@@ -116,7 +127,7 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n     }\n \n     private String getAccountLink(final ConnObjectTO objectTO) {\n-        final String NAME = \"__NAME__\";\n+        final String NAME = ConnidAttribute.NAME;\n \n         final Map<String, AttributeTO> attributeTOs = objectTO == null\n                 ? Collections.<String, AttributeTO>emptyMap()"},{"sha":"978a6b79617a17160e23fc9650216c5041e1d546","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractBasePage.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.console.pages;\n \n import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.markup.head.MetaHeaderItem;\n+import org.apache.wicket.markup.head.HeaderItem;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -35,6 +37,8 @@ public class AbstractBasePage extends WebPage {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractBasePage.class);\n \n+    protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n+\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n "},{"sha":"3e9b59b386f3c47064f82eac157a2daa019d348f","filename":"console/src/main/java/org/apache/syncope/console/pages/BaseModalPage.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -19,8 +19,6 @@\n package org.apache.syncope.console.pages;\n \n import org.apache.syncope.console.commons.CloseOnESCBehavior;\n-import org.apache.syncope.markup.head.MetaHeaderItem;\n-import org.apache.wicket.markup.head.HeaderItem;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.PriorityHeaderItem;\n \n@@ -31,8 +29,6 @@ public abstract class BaseModalPage extends AbstractBasePage {\n \n     private static final long serialVersionUID = -1443079028368471943L;\n \n-    private final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n-\n     public BaseModalPage() {\n         super();\n "},{"sha":"1c815c7dc9bae9708be02066328c1edc43d29390","filename":"console/src/main/java/org/apache/syncope/console/pages/BasePage.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.SyncopeApplication;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.rest.UserRestClient;\n-import org.apache.syncope.markup.head.MetaHeaderItem;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -31,7 +31,6 @@\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.head.HeaderItem;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.PriorityHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -47,8 +46,6 @@ public class BasePage extends AbstractBasePage implements IAjaxIndicatorAware {\n \n     private static final long serialVersionUID = 1571997737305598502L;\n \n-    private final static HeaderItem META_IE_COMPATIBILITY = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n-\n     private final static int EDIT_PROFILE_WIN_HEIGHT = 550;\n \n     private final static int EDIT_PROFILE_WIN_WIDTH = 800;\n@@ -94,7 +91,8 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                     @Override\n                     public void onComponentTag(final Component component, final ComponentTag tag) {\n \n-                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind + SyncopeApplication.IMG_SUFFIX);\n+                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                     }\n                 });\n             }\n@@ -174,6 +172,6 @@ public void onClose(final AjaxRequestTarget target) {\n     @Override\n     public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n-        response.render(new PriorityHeaderItem(META_IE_COMPATIBILITY));\n+        response.render(new PriorityHeaderItem(meta));\n     }\n }"},{"sha":"c6c168acde7a5f7ebfef64f27bf29a7eab222219","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionModalPage.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -62,6 +62,8 @@ public BulkActionModalPage(\n \n         final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n \n+            private static final long serialVersionUID = 5291903859908641954L;\n+\n             @Override\n             public Iterator<? extends T> iterator(long first, long count) {\n                 return items.iterator();\n@@ -119,6 +121,8 @@ public IModel<T> model(T object) {\n \n             actionPanel.add(new ActionLink() {\n \n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n@@ -140,13 +144,13 @@ public void onClick(final AjaxRequestTarget target) {\n         final AjaxButton cancel =\n                 new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), getPageReference()) {\n \n-                    private static final long serialVersionUID = -958724007591692537L;\n+            private static final long serialVersionUID = -958724007591692537L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        window.close(target);\n-                    }\n-                };\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+        };\n \n         cancel.setDefaultFormProcessing(false);\n         form.add(cancel);"},{"sha":"b7b96cf1d06ec0c0e6b0117f99c9701c042e0c04","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionResultModalPage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -58,6 +58,7 @@ public BulkActionResultModalPage(\n         newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(results, idFieldName));\n \n         final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n+            private static final long serialVersionUID = 5291903859908641954L;\n \n             @Override\n             public Iterator<? extends T> iterator(long first, long count) {"},{"sha":"7485da4cbf3d677949bd3d84d7a9e45b7cece087","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":20,"deletions":12,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -24,13 +24,15 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PropagationStatusTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n+import org.apache.syncope.console.commons.ConnidAttribute;\n import org.apache.syncope.console.commons.StatusUtils;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.Component;\n@@ -59,6 +61,8 @@ public class ResultStatusModalPage extends BaseModalPage {\n      */\n     private static final long serialVersionUID = 2646115294319713723L;\n \n+    public static final String IMG_STATUES = \"statuses/\";\n+\n     @SpringBean\n     private UserRestClient userRestClient;\n \n@@ -146,13 +150,15 @@ protected void populateItem(final ListItem<PropagationStatusTO> item) {\n                         case SUCCESS:\n                         case SUBMITTED:\n                         case CREATED:\n-                            image = new Image(\"icon\", \"statuses/active.png\");\n+                            image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.ACTIVE.toString()\n+                                    + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                             alt = \"success icon\";\n                             title = \"success\";\n                             break;\n \n                         default:\n-                            image = new Image(\"icon\", \"statuses/inactive.png\");\n+                            image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.SUSPENDED.toString()\n+                                    + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                             alt = \"failure icon\";\n                             title = \"failure\";\n                     }\n@@ -201,11 +207,11 @@ private ListView getConnObjectView(final PropagationStatusTO propTO) {\n         // sorted in reversed presentation order\n         final List<String> head = new ArrayList<String>();\n         if (attributable instanceof UserTO) {\n-            head.add(\"__PASSWORD__\");\n-            head.add(\"__ENABLE__\");\n+            head.add(ConnidAttribute.PASSWORD);\n+            head.add(ConnidAttribute.ENABLE);\n         }\n-        head.add(\"__UID__\");\n-        head.add(\"__NAME__\");\n+        head.add(ConnidAttribute.UID);\n+        head.add(ConnidAttribute.NAME);\n \n         final Map<String, AttributeTO> beforeAttrMap;\n         if (before == null) {\n@@ -226,8 +232,8 @@ private ListView getConnObjectView(final PropagationStatusTO propTO) {\n         attributes.addAll(afterAttrMap.keySet());\n \n         if (!(attributable instanceof UserTO)) {\n-            attributes.remove(\"__PASSWORD__\");\n-            attributes.remove(\"__ENABLE__\");\n+            attributes.remove(ConnidAttribute.PASSWORD);\n+            attributes.remove(ConnidAttribute.ENABLE);\n         }\n \n         final List<String> profile = new ArrayList<String>();\n@@ -251,7 +257,7 @@ protected void populateItem(final ListItem item) {\n \n                 final Fragment beforeValue;\n                 final Fragment afterValue;\n-                if (\"__ENABLE__\".equals(name)) {\n+                if (ConnidAttribute.ENABLE.equals(name)) {\n                     beforeValue = getStatusIcon(\"beforeValue\", propTO.getResource(), before);\n                     afterValue = getStatusIcon(\"afterValue\", propTO.getResource(), after);\n                 } else {\n@@ -283,7 +289,7 @@ private Fragment getLabelValue(final String id, final String attrName, final Map\n         if (attr == null || attr.getValues() == null || attr.getValues().isEmpty()) {\n             value = \"\";\n         } else {\n-            if (\"__PASSWORD__\".equals(attrName)) {\n+            if (ConnidAttribute.PASSWORD.equals(attrName)) {\n                 value = \"********\";\n             } else {\n                 value = attr.getValues().size() > 1\n@@ -322,13 +328,15 @@ private Fragment getStatusIcon(final String id, final String resourceName, final\n         switch (statusUtils.getStatusBean(resourceName, objectTO).getStatus()) {\n \n             case ACTIVE:\n-                image = new Image(\"status\", \"statuses/active.png\");\n+                image = new Image(\"status\", IMG_STATUES + StatusUtils.Status.ACTIVE.toString()\n+                        + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                 alt = \"active icon\";\n                 title = \"Enabled\";\n                 break;\n \n             case SUSPENDED:\n-                image = new Image(\"status\", \"statuses/inactive.png\");\n+                image = new Image(\"status\", IMG_STATUES + StatusUtils.Status.SUSPENDED.toString()\n+                        + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                 alt = \"inactive icon\";\n                 title = \"Disabled\";\n                 break;"},{"sha":"c8d1dd2385d3b2e915adb8165c1babc026d45fa2","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractTasks.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractTasks.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.console.pages.panels;\n+\n+import org.apache.syncope.console.commons.PreferenceManager;\n+import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.rest.TaskRestClient;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public abstract class AbstractTasks extends Panel {\n+\n+    private static final long serialVersionUID = -1190836516156843561L;\n+\n+    protected static final String VIEW_TASK_WIN_COOKIE_NAME = \"view-task-win\";\n+\n+    protected static final String TASKS = \"Tasks\";\n+\n+    protected static final String FEEDBACK = \"feedback\";\n+\n+    protected final String OPERATION_SUCCEEDED = getString(\"operation_succeeded\");\n+\n+    protected static final int WIN_HEIGHT = 500;\n+\n+    protected static final int WIN_WIDTH = 700;\n+\n+    @SpringBean\n+    protected TaskRestClient restClient;\n+\n+    @SpringBean\n+    protected PreferenceManager prefMan;\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    public AbstractTasks(final String id) {\n+        super(id);\n+    }\n+}"},{"sha":"951a3199faa72cbc07b1c06e1365d4e4f69bb142","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":12,"deletions":30,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -25,12 +25,9 @@\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.NotificationTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Tasks.TasksProvider;\n-import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -46,28 +43,16 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class NotificationTasks extends Panel {\n-\n-    private static final int WIN_HEIGHT = 500;\n-\n-    private static final int WIN_WIDTH = 700;\n+public class NotificationTasks extends AbstractTasks {\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    @SpringBean\n-    private TaskRestClient restClient;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n     private int paginatorRows;\n \n     private WebMarkupContainer container;\n@@ -76,9 +61,6 @@ public class NotificationTasks extends Panel {\n \n     private ModalWindow window;\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     private final List<IColumn<TaskTO, String>> columns;\n \n     private AjaxDataTablePanel<TaskTO, String> table;\n@@ -139,7 +121,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\");\n+                }, ActionLink.ActionType.EDIT, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -149,15 +131,15 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n+                }, ActionLink.ActionType.EXECUTE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -167,14 +149,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), NotificationTaskTO.class);\n-                            info(getString(\"operation_succeeded\"));\n+                            info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\");\n+                }, ActionLink.ActionType.DELETE, TASKS);\n \n                 return panel;\n             }\n@@ -193,7 +175,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             target.add(table);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, \"Tasks\", \"list\");\n+                }, ActionLink.ActionType.RELOAD, TASKS, \"list\");\n \n                 return panel;\n             }\n@@ -217,8 +199,8 @@ public void onClick(final AjaxRequestTarget target) {\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(container);\n                 if (operationResult) {\n-                    info(getString(\"operation_succeeded\"));\n-                    target.add(getPage().get(\"feedback\"));\n+                    info(OPERATION_SUCCEEDED);\n+                    target.add(getPage().get(FEEDBACK));\n                     operationResult = false;\n                 }\n             }\n@@ -227,7 +209,7 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n         window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n+        window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n "},{"sha":"16ab10dc0af1bb67600d0cce9cc4508a6902d84d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -93,6 +93,7 @@ protected List<String> load() {\n     };\n \n     final IModel<List<String>> correlationRules = new LoadableDetachableModel<List<String>>() {\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {"},{"sha":"2a83523bc69c34f3dde11c4d1d01aea490a658a9","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":12,"deletions":30,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -25,13 +25,10 @@\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.PropagationTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Tasks.TasksProvider;\n import org.apache.syncope.console.pages.panels.AbstractSearchResultPanel.EventDataWrapper;\n-import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n@@ -48,31 +45,19 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n  * Tasks page.\n  */\n-public class PropagationTasks extends Panel {\n-\n-    private static final int WIN_HEIGHT = 500;\n-\n-    private static final int WIN_WIDTH = 700;\n+public class PropagationTasks extends AbstractTasks {\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    @SpringBean\n-    private TaskRestClient restClient;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n     private int paginatorRows;\n \n     private WebMarkupContainer container;\n@@ -81,9 +66,6 @@ public class PropagationTasks extends Panel {\n \n     private ModalWindow window;\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     private final List<IColumn<TaskTO, String>> columns;\n \n     private AjaxDataTablePanel<TaskTO, String> table;\n@@ -160,7 +142,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\");\n+                }, ActionLink.ActionType.EDIT, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -170,15 +152,15 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n+                }, ActionLink.ActionType.EXECUTE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -188,14 +170,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), PropagationTaskTO.class);\n-                            info(getString(\"operation_succeeded\"));\n+                            info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\");\n+                }, ActionLink.ActionType.DELETE, TASKS);\n \n                 return panel;\n             }\n@@ -214,7 +196,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             target.add(table);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, \"Tasks\", \"list\");\n+                }, ActionLink.ActionType.RELOAD, TASKS, \"list\");\n \n                 return panel;\n             }\n@@ -236,8 +218,8 @@ public void onClick(final AjaxRequestTarget target) {\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(container);\n                 if (operationResult) {\n-                    info(getString(\"operation_succeeded\"));\n-                    target.add(getPage().get(\"feedback\"));\n+                    info(OPERATION_SUCCEEDED);\n+                    target.add(getPage().get(FEEDBACK));\n                     operationResult = false;\n                 }\n             }\n@@ -246,7 +228,7 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n         window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n+        window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n "},{"sha":"12d6bf6f341f29feb5f4c4e2cced740ace086c15","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":15,"deletions":34,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -25,12 +25,9 @@\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.SchedTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Tasks.TasksProvider;\n-import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n@@ -50,43 +47,27 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class SchedTasks extends Panel {\n-\n-    private static final int WIN_HEIGHT = 500;\n-\n-    private static final int WIN_WIDTH = 700;\n+public class SchedTasks extends AbstractTasks {\n \n     private static final long serialVersionUID = 525486152284253354L;\n \n-    @SpringBean\n-    private TaskRestClient restClient;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n     private int paginatorRows;\n \n     private WebMarkupContainer container;\n \n     private ModalWindow window;\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     private final List<IColumn<TaskTO, String>> columns;\n \n     private AjaxDataTablePanel<TaskTO, String> table;\n \n     public SchedTasks(final String id, final PageReference pageRef) {\n-\n         super(id);\n \n         container = new WebMarkupContainer(\"container\");\n@@ -97,7 +78,7 @@ public SchedTasks(final String id, final PageReference pageRef) {\n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n         window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n+        window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n         add(window);\n \n         ((Tasks) pageRef.getPage()).setWindowClosedCallback(window, container);\n@@ -150,7 +131,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\");\n+                }, ActionLink.ActionType.EDIT, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -160,15 +141,15 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n+                }, ActionLink.ActionType.EXECUTE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -178,15 +159,15 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), true);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.DRYRUN, \"Tasks\");\n+                }, ActionLink.ActionType.DRYRUN, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -196,14 +177,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), SchedTaskTO.class);\n-                            info(getString(\"operation_succeeded\"));\n+                            info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\");\n+                }, ActionLink.ActionType.DELETE, TASKS);\n \n                 return panel;\n             }\n@@ -222,7 +203,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             target.add(table);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, \"Tasks\", \"list\");\n+                }, ActionLink.ActionType.RELOAD, TASKS, \"list\");\n \n                 return panel;\n             }\n@@ -287,8 +268,8 @@ public Page createPage() {\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n-                \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                createLink, RENDER, xmlRolesReader.getAllAllowedRoles(TASKS, \"create\"));\n \n         add(createLink);\n     }"},{"sha":"ca534ff6d62b9b2c649317cc7d932139dac4ae2d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n@@ -71,6 +72,8 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n \n     private static final long serialVersionUID = -4064294905566247728L;\n \n+    public static final String IMG_STATUES = \"../statuses/\";\n+\n     private static final int CONNOBJECT_WIN_HEIGHT = 400;\n \n     private static final int CONNOBJECT_WIN_WIDTH = 600;\n@@ -162,33 +165,39 @@ protected void populateItem(final ListItem<StatusBean> item) {\n                 switch (item.getModelObject().getStatus()) {\n \n                     case NOT_YET_SUBMITTED:\n-                        image = new Image(\"icon\", \"../statuses/undefined.png\");\n+                        image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.UNDEFINED.toString()\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                         alt = \"undefined icon\";\n                         title = \"Not yet submitted\";\n                         break;\n \n                     case ACTIVE:\n-                        image = new Image(\"icon\", \"../statuses/active.png\");\n+                        image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.ACTIVE.toString()\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                         alt = \"active icon\";\n                         title = \"Enabled\";\n                         break;\n \n                     case UNDEFINED:\n-                        image = new Image(\"icon\", \"../statuses/undefined.png\");\n+                        image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.UNDEFINED.toString()\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                         checkVisibility = false;\n                         alt = \"undefined icon\";\n                         title = \"Undefined status\";\n                         break;\n \n                     case OBJECT_NOT_FOUND:\n-                        image = new Image(\"icon\", \"../statuses/objectnotfound.png\");\n+                        image =\n+                                new Image(\"icon\", IMG_STATUES + StatusUtils.Status.OBJECT_NOT_FOUND.toString()\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                         checkVisibility = false;\n                         alt = \"notfound icon\";\n                         title = \"User not found\";\n                         break;\n \n                     default:\n-                        image = new Image(\"icon\", \"../statuses/inactive.png\");\n+                        image = new Image(\"icon\", IMG_STATUES + StatusUtils.Status.SUSPENDED.toString()\n+                                + SyncopeConstants.DEFAULT_IMG_SUFFIX);\n                         alt = \"inactive icon\";\n                         title = \"Disabled\";\n                 }"},{"sha":"f40a653e554139ff70fc5b586816a30e1bd44288","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":16,"deletions":34,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -25,14 +25,11 @@\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.RoleTemplateModalPage;\n import org.apache.syncope.console.pages.SyncTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n import org.apache.syncope.console.pages.Tasks.TasksProvider;\n import org.apache.syncope.console.pages.UserTemplateModalPage;\n-import org.apache.syncope.console.rest.TaskRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n@@ -52,37 +49,22 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.http.WebResponse;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class SyncTasks extends Panel {\n-\n-    private static final int WIN_HEIGHT = 500;\n-\n-    private static final int WIN_WIDTH = 700;\n+public class SyncTasks extends AbstractTasks {\n \n     private static final long serialVersionUID = -8674781241465369244L;\n \n-    @SpringBean\n-    private TaskRestClient restClient;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n     private int paginatorRows;\n \n     private WebMarkupContainer container;\n \n     private ModalWindow window;\n \n-    @SpringBean\n-    protected XMLRolesReader xmlRolesReader;\n-\n     private final List<IColumn<TaskTO, String>> columns;\n \n     private AjaxDataTablePanel<TaskTO, String> table;\n@@ -98,7 +80,7 @@ public SyncTasks(final String id, final PageReference pageRef) {\n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n         window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n+        window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n         add(window);\n \n         ((Tasks) pageRef.getPage()).setWindowClosedCallback(window, container);\n@@ -151,7 +133,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\");\n+                }, ActionLink.ActionType.EDIT, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -172,7 +154,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.USER_TEMPLATE, \"Tasks\");\n+                }, ActionLink.ActionType.USER_TEMPLATE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -193,7 +175,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.ROLE_TEMPLATE, \"Tasks\");\n+                }, ActionLink.ActionType.ROLE_TEMPLATE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -203,15 +185,15 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n+                }, ActionLink.ActionType.EXECUTE, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -221,15 +203,15 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), true);\n-                            getSession().info(getString(\"operation_succeeded\"));\n+                            getSession().info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.DRYRUN, \"Tasks\");\n+                }, ActionLink.ActionType.DRYRUN, TASKS);\n \n                 panel.add(new ActionLink() {\n \n@@ -239,14 +221,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), SyncTaskTO.class);\n-                            info(getString(\"operation_succeeded\"));\n+                            info(OPERATION_SUCCEEDED);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);\n-                        target.add(getPage().get(\"feedback\"));\n+                        target.add(getPage().get(FEEDBACK));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\");\n+                }, ActionLink.ActionType.DELETE, TASKS);\n \n                 return panel;\n             }\n@@ -265,7 +247,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             target.add(table);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, \"Tasks\", \"list\");\n+                }, ActionLink.ActionType.RELOAD, TASKS, \"list\");\n \n                 return panel;\n             }\n@@ -332,7 +314,7 @@ public Page createPage() {\n         };\n \n         MetaDataRoleAuthorizationStrategy.authorize(\n-                createLink, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n+                createLink, RENDER, xmlRolesReader.getAllAllowedRoles(TASKS, \"create\"));\n \n         add(createLink);\n     }"},{"sha":"875adae40518e144a0c32592e6220e3330f66e75","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3675dc52b3a92d25023ff767875813d6c4e6202d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3675dc52b3a92d25023ff767875813d6c4e6202d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=3675dc52b3a92d25023ff767875813d6c4e6202d","patch":"@@ -123,7 +123,7 @@ public void dbExport() throws IOException {\n \n         Object entity = response.getEntity();\n         assertTrue(entity instanceof InputStream);\n-        String configExport = IOUtils.toString((InputStream) entity, \"UTF-8\");\n+        String configExport = IOUtils.toString((InputStream) entity, SyncopeConstants.DEFAULT_ENCODING);\n         assertFalse(configExport.isEmpty());\n         assertTrue(configExport.length() > 1000);\n     }"}]}