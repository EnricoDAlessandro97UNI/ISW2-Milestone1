{"sha":"6649c5941aa33641c60abd3d56aff7ee1f0a7f20","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY2NDljNTk0MWFhMzM2NDFjNjBhYmQzZDU2YWZmN2VlMWYwYTdmMjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-15T16:05:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-15T16:05:47Z"},"message":"[SYNCOPE-156] Clean up clean up","tree":{"sha":"53508f62dda46e2e07f87d473185596dee38add5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/53508f62dda46e2e07f87d473185596dee38add5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6649c5941aa33641c60abd3d56aff7ee1f0a7f20","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6649c5941aa33641c60abd3d56aff7ee1f0a7f20","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6649c5941aa33641c60abd3d56aff7ee1f0a7f20","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1c3ed3acfaf44603eb8d6311099ee5c9161b859","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a1c3ed3acfaf44603eb8d6311099ee5c9161b859","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a1c3ed3acfaf44603eb8d6311099ee5c9161b859"}],"stats":{"total":257,"additions":118,"deletions":139},"files":[{"sha":"9534d6b56474217f9c758da92a7bf6cb6f5495dd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n@@ -63,6 +64,8 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n+    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n+\n     private final UserRestClient userRestClient = new UserRestClient();\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n@@ -75,7 +78,7 @@ public abstract class Realm extends Panel {\n     public Realm(final String id, final RealmTO realmTO, final PageReference pageRef) {\n         super(id);\n         this.realmTO = realmTO;\n-        this.anyTypeTOs = anyTypeRestClient.getAll();\n+        this.anyTypeTOs = anyTypeRestClient.list();\n         this.pageRef = pageRef;\n \n         add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n@@ -155,7 +158,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final UserTO userTO = new UserTO();\n                 userTO.setRealm(realmTO.getFullPath());\n                 panel = new UserSearchResultPanel.Builder(\n-                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         userRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n@@ -169,7 +172,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final GroupTO groupTO = new GroupTO();\n                 groupTO.setRealm(realmTO.getFullPath());\n                 panel = new GroupSearchResultPanel.Builder(\n-                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         groupRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n@@ -184,7 +187,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n                 anyObjectTO.setType(anyTypeTO.getKey());\n                 panel = new AnyObjectSearchResultPanel.Builder(\n-                        anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyObjectRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath())."},{"sha":"53201ba0f5d30026e0bf17d706e29c2442b31983","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -19,8 +19,10 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n@@ -33,12 +35,10 @@\n import org.apache.syncope.common.rest.api.service.AnyObjectService;\n import org.apache.syncope.common.rest.api.service.AnyService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest any type class services.\n  */\n-@Component\n public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO> {\n \n     private static final long serialVersionUID = -8874495991295283249L;\n@@ -99,16 +99,18 @@ public <T extends AnyTO> T read(final long id) {\n         return anyObjectTO;\n     }\n \n-    public AnyObjectTO create(final AnyObjectTO anyObjectTO) {\n-        final Response response = getService(AnyObjectService.class).create(anyObjectTO);\n-        return response.readEntity(AnyObjectTO.class);\n+    public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO) {\n+        Response response = getService(AnyObjectService.class).create(anyObjectTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+        });\n     }\n \n-    public AnyObjectTO update(final String etag, final AnyObjectTO anyObjectTO) {\n-        AnyObjectTO result;\n+    public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectPatch anyObjectPatch) {\n+        ProvisioningResult<AnyObjectTO> result;\n         synchronized (this) {\n             AnyObjectService service = getService(etag, AnyObjectService.class);\n-            result = service.update(anyObjectTO).readEntity(AnyObjectTO.class);\n+            result = service.update(anyObjectPatch).readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+            });\n             resetClient(AnyObjectService.class);\n         }\n         return result;"},{"sha":"10375ca6b9fb4c7f12ef554348ef175994354b10","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeClassRestClient.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeClassRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeClassRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeClassRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+\n+public class AnyTypeClassRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -2211371717449597247L;\n+\n+    public List<AnyTypeClassTO> list() {\n+        List<AnyTypeClassTO> types = Collections.emptyList();\n+\n+        try {\n+            types = getService(AnyTypeClassService.class).list();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any type classes\", e);\n+        }\n+\n+        return types;\n+    }\n+\n+    public List<AnyTypeClassTO> list(final Collection<String> anyTypeClassNames) {\n+        List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n+        for (String anyTypeClass : anyTypeClassNames) {\n+            anyTypeClassTOs.add(getService(AnyTypeClassService.class).read(anyTypeClass));\n+        }\n+        return anyTypeClassTOs;\n+    }\n+}"},{"sha":"33b9552d5eaa0a3e9628bf6c2343fcb02b2d9eba","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"modified","additions":4,"deletions":53,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -18,28 +18,15 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n-import javax.ws.rs.core.GenericType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.rest.api.service.AnyObjectService;\n-import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n-import org.springframework.stereotype.Component;\n \n-/**\n- * Console client for invoking Rest AnyType services.\n- */\n-@Component\n public class AnyTypeRestClient extends BaseRestClient {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = -2211371717449597247L;\n \n     public AnyTypeTO get(final String kind) {\n         AnyTypeTO type = null;\n@@ -53,8 +40,8 @@ public AnyTypeTO get(final String kind) {\n         return type;\n     }\n \n-    public List<AnyTypeTO> getAll() {\n-        List<AnyTypeTO> types = null;\n+    public List<AnyTypeTO> list() {\n+        List<AnyTypeTO> types = Collections.emptyList();\n \n         try {\n             types = getService(AnyTypeService.class).list();\n@@ -65,40 +52,4 @@ public List<AnyTypeTO> getAll() {\n         return types;\n     }\n \n-    public List<AnyTypeClassTO> getAllAnyTypeClass() {\n-        List<AnyTypeClassTO> types = null;\n-\n-        try {\n-            types = getService(AnyTypeClassService.class).list();\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While reading all any types\", e);\n-        }\n-\n-        return types;\n-    }\n-\n-    public List<AnyTypeClassTO> getAnyTypeClass(final String... anyTypeClassNames) {\n-        List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<>();\n-        for (String anyTypeClass : anyTypeClassNames) {\n-            anyTypeClassTOs.add(getService(AnyTypeClassService.class).read(anyTypeClass));\n-        }\n-        return anyTypeClassTOs;\n-    }\n-\n-    public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO) {\n-        Response response = getService(AnyObjectService.class).create(anyObjectTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n-        });\n-    }\n-\n-    public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectPatch anyObjectPatch) {\n-        ProvisioningResult<AnyObjectTO> result;\n-        synchronized (this) {\n-            AnyObjectService service = getService(etag, AnyObjectService.class);\n-            result = service.update(anyObjectPatch).readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n-            });\n-            resetClient(AnyObjectService.class);\n-        }\n-        return result;\n-    }\n }"},{"sha":"e28a91461d577a214d625e25242530d1a8a22506","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -26,9 +26,7 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;"},{"sha":"8dbc8f6e196f96eccf181f49051a1e4941a7eccd","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -36,12 +36,10 @@\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.springframework.beans.BeanUtils;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Connectors services.\n  */\n-@Component\n public class ConnectorRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -6870366819966266617L;"},{"sha":"63f8b933c009cb2081cbd1f9ba08d7e89f6944d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -35,12 +35,10 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Group's services.\n  */\n-@Component\n public class GroupRestClient extends AbstractAnyRestClient<GroupTO> {\n \n     private static final long serialVersionUID = -8549081557283519638L;"},{"sha":"985d54cb9f2ea9655811debf1799358f89d6dccc","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/LoggerRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -31,9 +31,7 @@\n import org.apache.syncope.common.lib.types.LoggerType;\n import org.apache.syncope.common.rest.api.LoggerWrapper;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class LoggerRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 4579786978763032240L;"},{"sha":"053768aa6c0787583771827392f317089d3edef1","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -21,9 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.NotificationTO;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class NotificationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 6328933265096511690L;"},{"sha":"6abe254dca0010c523ee26fff19680e6d67358f2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -25,12 +25,10 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Policy services.\n  */\n-@Component\n public class PolicyRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -1392090291817187902L;"},{"sha":"cd22cfc75b376fbb92d6fd1189b6d5fdf701196f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -21,12 +21,10 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.rest.api.service.RealmService;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking REST Realm's services.\n  */\n-@Component\n public class RealmRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -8549081557283519638L;"},{"sha":"73e530325c38257d23d9dc3503fe86a7560f9813","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -25,9 +25,7 @@\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.service.ReportService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class ReportRestClient extends BaseRestClient implements ExecutionRestClient {\n \n     private static final long serialVersionUID = 1644689667998953604L;"},{"sha":"9809562a81156b23e97dc2ea333caacd7270a3b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -29,12 +29,10 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Resources services.\n  */\n-@Component\n public class ResourceRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -6898907679835668987L;"},{"sha":"2441892167993c0e3ca03474deb19c523d5a5ec2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -22,12 +22,10 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.service.RoleService;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Group's services.\n  */\n-@Component\n public class RoleRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 1L;"},{"sha":"f9765c21ac626e50e50855a80662fa03d986b539","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -33,12 +33,10 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking rest schema services.\n  */\n-@Component\n public class SchemaRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2479730152700312373L;"},{"sha":"2ed516c6e4d9f75d5532f1a0f317e23a46ee9348","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SecurityQuestionRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -21,9 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class SecurityQuestionRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -3167730221361895176L;"},{"sha":"a97c06654f10b630f57c0841c1e0c13e9f711cad","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -35,12 +35,10 @@\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Tasks services.\n  */\n-@Component\n public class TaskRestClient extends BaseRestClient implements ExecutionRestClient {\n \n     private static final long serialVersionUID = 6284485820911028843L;"},{"sha":"b4b879b96b5b3cda37deaf3b57e19d829d512054","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -39,12 +39,10 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking rest users services.\n  */\n-@Component\n public class UserRestClient extends AbstractAnyRestClient<UserTO> {\n \n     private static final long serialVersionUID = -1575748964398293968L;"},{"sha":"d4bc603df59c78fa53da709cf93fd3f8e8e7f815","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserSelfRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -23,9 +23,7 @@\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class UserSelfRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 2994691796924731295L;"},{"sha":"c9d6436023ad11325e2edc41b1e4bc0aeaf46ffb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserWorkflowRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserWorkflowRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -21,9 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.rest.api.service.UserWorkflowService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class UserWorkflowRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -4785231164900813921L;"},{"sha":"b21ba417b73d5c1c43ba4dbab6110c92e825b88f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/WorkflowRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -27,9 +27,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class WorkflowRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 5049285686167071017L;"},{"sha":"14fc6c70f4ea458011a43112e3b9a71a6e7f959e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -25,7 +25,7 @@\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -41,7 +41,7 @@ public abstract class AbstractAttrs extends WizardStep {\n \n     protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n-    protected final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+    protected final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n "},{"sha":"9ccbd2e1ccf9924f28867e092bc43ae4def9f76a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -52,13 +52,13 @@ protected Serializable onApplyInternal(final AnyHandler<AnyObjectTO> modelObject\n         final ProvisioningResult<AnyObjectTO> actual;\n \n         if (inner.getKey() == 0) {\n-            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(inner));\n+            actual = anyObjectRestClient.create(AnyObjectTO.class.cast(inner));\n         } else {\n             final AnyObjectPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n \n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = anyTypeRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n+                actual = anyObjectRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             } else {\n                 actual = new ProvisioningResult<>();\n                 actual.setAny(inner);"},{"sha":"92f41167d6101e20a3b89fed27257a2e39a6e754","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -22,7 +22,7 @@\n \n import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -36,7 +36,7 @@\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n-    protected final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+    protected final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n \n     protected final List<String> anyTypeClasses;\n \n@@ -50,7 +50,8 @@\n      */\n     public AnyWizardBuilder(\n             final String id, final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(id, new AnyHandler<T>(anyTO), pageRef);\n+\n+        super(id, new AnyHandler<>(anyTO), pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n     }\n "},{"sha":"3b8b1f6eca81f8a54551393dd0fbcaee20506647","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -24,7 +24,7 @@\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -71,8 +71,8 @@ public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeCla\n                 dyngroups = Collections.<Long>emptyList();\n             }\n \n-            final AjaxPalettePanel.Builder<MembershipTO> builder\n-                    = new AjaxPalettePanel.Builder<MembershipTO>().setRenderer(new IChoiceRenderer<MembershipTO>() {\n+            final AjaxPalettePanel.Builder<MembershipTO> builder =\n+                    new AjaxPalettePanel.Builder<MembershipTO>().setRenderer(new IChoiceRenderer<MembershipTO>() {\n \n                         private static final long serialVersionUID = 1L;\n \n@@ -99,7 +99,7 @@ public MembershipTO getObject(\n                     });\n \n             fragment.add(builder.setAllowOrder(true).withFilter().build(\n-                    \"groups\", new ListModel<MembershipTO>(memberships),\n+                    \"groups\", new ListModel<>(memberships),\n                     new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n \n                 private static final long serialVersionUID = 1L;\n@@ -142,15 +142,15 @@ public String transform(final Long input) {\n \n             fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n                     \"dyngroups\",\n-                    new ListModel<String>(dynamics),\n+                    new ListModel<>(dynamics),\n                     new ListModel<>(dynamics)).setEnabled(false).setOutputMarkupId(true));\n         }\n         add(fragment);\n \n         final List<String> current = Arrays.asList(anyTypeClass);\n \n         final List<String> choices = new ArrayList<>();\n-        for (AnyTypeClassTO aux : new AnyTypeRestClient().getAllAnyTypeClass()) {\n+        for (AnyTypeClassTO aux : new AnyTypeClassRestClient().list()) {\n             if (!current.contains(aux.getKey())) {\n                 choices.add(aux.getKey());\n             }"},{"sha":"3ad0232e39614750c3a960043097800f8722f441","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -53,29 +53,29 @@ public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass\n \n         final LoadableDetachableModel<List<AttrTO>> derAttrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<AttrTO> load() {\n                 final List<String> classes = CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(getAllAuxClasses()),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                     @Override\n                     public String transform(final AnyTypeClassTO input) {\n                         return input.getKey();\n                     }\n-                }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n+                }, new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n-                final List<DerSchemaTO> derSchemas\n-                        = schemaRestClient.getSchemas(SchemaType.DERIVED, classes.toArray(new String[] {}));\n+                final List<DerSchemaTO> derSchemas =\n+                        schemaRestClient.getSchemas(SchemaType.DERIVED, classes.toArray(new String[] {}));\n \n                 final Map<String, AttrTO> currents = entityTO.getDerAttrMap();\n                 entityTO.getDerAttrs().clear();\n \n                 // This conversion from set to lis is required by the ListView.\n-                // Didn't performed by using collect parameter because entityTO change is required.\n-                return new ArrayList<AttrTO>(\n+                // Not performed by using collect parameter because entityTO change is required.\n+                return new ArrayList<>(\n                         CollectionUtils.collect(derSchemas, new Transformer<DerSchemaTO, AttrTO>() {\n \n                             @Override"},{"sha":"7cd23ea5c45dfe41973033bd490dd3c4b257e318","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -59,7 +59,7 @@ public DynamicMemberships(final GroupHandler groupHandler) {\n \n             @Override\n             protected List<AnyTypeTO> load() {\n-                return CollectionUtils.select(anyTypeRestClient.getAll(), new Predicate<AnyTypeTO>() {\n+                return CollectionUtils.select(anyTypeRestClient.list(), new Predicate<AnyTypeTO>() {\n \n                     @Override\n                     public boolean evaluate(final AnyTypeTO t) {"},{"sha":"dc712c08fc1ea0d012b7f91bac242b35535997ac","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.panels.search.UserSelectionSearchResultPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n@@ -69,6 +70,7 @@ public class Ownership extends WizardStep {\n     private final WebMarkupContainer ownerContainer;\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n     private final GroupSearchPanel groupSearchPanel;\n \n@@ -159,7 +161,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         AnyTypeTO anyTypeTO = anyTypeRestClient.get(AnyTypeKind.GROUP.name());\n \n         groupSearchResultPanel = GroupSelectionSearchResultPanel.class.cast(new GroupSelectionSearchResultPanel.Builder(\n-                anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                 groupRestClient,\n                 anyTypeTO.getKey(),\n                 pageRef).build(\"searchResult\"));\n@@ -174,7 +176,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         anyTypeTO = anyTypeRestClient.get(AnyTypeKind.USER.name());\n \n         userSearchResultPanel = UserSelectionSearchResultPanel.class.cast(new UserSelectionSearchResultPanel.Builder(\n-                anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                 userRestClient,\n                 anyTypeTO.getKey(),\n                 pageRef).build(\"searchResult\"));\n@@ -236,8 +238,7 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n         userSearchFragment.add(userOwnerReset);\n \n-        final AjaxTextFieldPanel groupOwner\n-                = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\",\n+        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\",\n                         new PropertyModel<String>(groupHandler.getInnerObject(), \"groupOwner\") {\n \n                     private static final long serialVersionUID = -3743432456095828573L;"},{"sha":"cf167922e60ecd3cbe814d6219b7ca6728391edf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -80,14 +80,14 @@ public <T extends AnyTO> PlainAttrs(\n             @Override\n             protected List<AttrTO> load() {\n                 setSchemas(CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(getAllAuxClasses()),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                             @Override\n                             public String transform(final AnyTypeClassTO input) {\n                                 return input.getKey();\n                             }\n-                        }, new ArrayList<String>(Arrays.asList(anyTypeClass))));\n+                        }, new ArrayList<>(Arrays.asList(anyTypeClass))));\n                 setAttrs();\n                 return new ArrayList<>(entityTO.getPlainAttrs());\n             }\n@@ -118,7 +118,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                     item.add(panel);\n                     panel.setNewModel(attributeTO.getValues());\n                 } else {\n-                    item.add(new MultiFieldPanel.Builder<String>(\n+                    item.add(new MultiFieldPanel.Builder<>(\n                             new PropertyModel<List<String>>(attributeTO, \"values\")).build(\n                                     \"panel\",\n                                     attributeTO.getSchema(),"},{"sha":"2411c1602542f7c73e2d89d4b8eba95401778e8b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -82,6 +83,7 @@ public class Relationships extends WizardStep {\n     private final PageReference pageRef;\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n     private final AnyTO anyTO;\n \n@@ -234,21 +236,21 @@ public String transform(final RelationshipTypeTO input) {\n                 }\n             }, new ArrayList<String>());\n \n-            final AjaxDropDownChoicePanel<String> type = new AjaxDropDownChoicePanel<String>(\n+            final AjaxDropDownChoicePanel<String> type = new AjaxDropDownChoicePanel<>(\n                     \"type\", \"type\", new PropertyModel<String>(rel, \"type\"));\n             type.setChoices(availableRels);\n             add(type.setRenderBodyOnly(true));\n \n-            final List<AnyTypeTO> availableTypes\n-                    = ListUtils.select(anyTypeRestClient.getAll(), new Predicate<AnyTypeTO>() {\n+            final List<AnyTypeTO> availableTypes =\n+                    ListUtils.select(anyTypeRestClient.list(), new Predicate<AnyTypeTO>() {\n \n                         @Override\n                         public boolean evaluate(final AnyTypeTO object) {\n                             return object.getKind() != AnyTypeKind.GROUP && object.getKind() != AnyTypeKind.USER;\n                         }\n                     });\n \n-            final AjaxDropDownChoicePanel<AnyTypeTO> rightType = new AjaxDropDownChoicePanel<AnyTypeTO>(\n+            final AjaxDropDownChoicePanel<AnyTypeTO> rightType = new AjaxDropDownChoicePanel<>(\n                     \"rightType\", \"rightType\", new PropertyModel<AnyTypeTO>(rel, \"rightType\") {\n \n                 private static final long serialVersionUID = -5861057041758169508L;\n@@ -339,7 +341,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         fragment.add(anyObjectSearchPanel.setRenderBodyOnly(true));\n \n                         anyObjectSearchResultPanel = new AnyObjectSelectionSearchResultPanel.Builder(\n-                                anyTypeRestClient.getAnyTypeClass(anyType.getClasses().toArray(new String[] {})),\n+                                anyTypeClassRestClient.list(anyType.getClasses()),\n                                 new AnyObjectRestClient(),\n                                 anyType.getKey(),\n                                 pageRef).setFiltered(true).\n@@ -375,7 +377,6 @@ public void onEvent(final IEvent<?> event) {\n             } else {\n                 super.onEvent(event);\n             }\n-\n         }\n     }\n }"},{"sha":"e81896007b9ba00338b009a1a32eb76f7ed1fd1f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -56,17 +56,17 @@ public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass\n             @Override\n             protected List<AttrTO> load() {\n                 final List<String> classes = CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n+                        anyTypeClassRestClient.list(getAllAuxClasses()),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                     @Override\n                     public String transform(final AnyTypeClassTO input) {\n                         return input.getKey();\n                     }\n-                }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n+                }, new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n-                final List<VirSchemaTO> virSchemas\n-                        = schemaRestClient.getSchemas(SchemaType.VIRTUAL, classes.toArray(new String[] {}));\n+                final List<VirSchemaTO> virSchemas =\n+                        schemaRestClient.getSchemas(SchemaType.VIRTUAL, classes.toArray(new String[] {}));\n \n                 final Map<String, AttrTO> currents = entityTO.getVirAttrMap();\n                 entityTO.getVirAttrs().clear();\n@@ -120,7 +120,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                 final AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n                         \"panel\", attrTO.getSchema(), new Model<String>(), false);\n \n-                item.add(new MultiFieldPanel.Builder<String>(\n+                item.add(new MultiFieldPanel.Builder<>(\n                         new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                         \"panel\",\n                         attrTO.getSchema(),"},{"sha":"06b14cf75e6dc9d0737849d509ee0bf277b84385","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6649c5941aa33641c60abd3d56aff7ee1f0a7f20/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=6649c5941aa33641c60abd3d56aff7ee1f0a7f20","patch":"@@ -73,7 +73,7 @@ public String transform(final ProvisionTO provisionTO) {\n             final List<String> res = new ArrayList<>();\n \n             CollectionUtils.filter(\n-                    CollectionUtils.collect(new AnyTypeRestClient().getAll(), new Transformer<AnyTypeTO, String>() {\n+                    CollectionUtils.collect(new AnyTypeRestClient().list(), new Transformer<AnyTypeTO, String>() {\n \n                         @Override\n                         public String transform(final AnyTypeTO anyTypeTO) {"}]}