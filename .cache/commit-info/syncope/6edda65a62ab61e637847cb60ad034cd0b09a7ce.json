{"sha":"6edda65a62ab61e637847cb60ad034cd0b09a7ce","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZlZGRhNjVhNjJhYjYxZTYzNzg0N2NiNjBhZDAzNGNkMGIwOWE3Y2U=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-06-03T12:06:26Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-06-03T12:06:26Z"},"message":"Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/syncope","tree":{"sha":"430661de4d06cf4bf099612692f60b57e64894d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/430661de4d06cf4bf099612692f60b57e64894d3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6edda65a62ab61e637847cb60ad034cd0b09a7ce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6edda65a62ab61e637847cb60ad034cd0b09a7ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6edda65a62ab61e637847cb60ad034cd0b09a7ce","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6edda65a62ab61e637847cb60ad034cd0b09a7ce/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"7610c62da3df9863a33c7c047537fd26d95c5577","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7610c62da3df9863a33c7c047537fd26d95c5577","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7610c62da3df9863a33c7c047537fd26d95c5577"},{"sha":"4ded5ba28b77069b95d61619b6f2a97eb784a4c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ded5ba28b77069b95d61619b6f2a97eb784a4c5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ded5ba28b77069b95d61619b6f2a97eb784a4c5"}],"stats":{"total":402,"additions":398,"deletions":4},"files":[{"sha":"ff32fef858bc9dcc3e4d6e01e01156ce24dd0169","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Reports.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -60,6 +61,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -122,6 +124,8 @@ private void setupReport() {\n         columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n         columns.add(new PropertyColumn<ReportTO, String>(\n                 new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new JobColumn<ReportTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n+                getPageReference(), reportRestClient));\n         columns.add(new ActionColumn<ReportTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n@@ -409,4 +413,12 @@ public ReportTO getObject() {\n             };\n         }\n     }\n+\n+    /**\n+     * IndicatorMarkupId behaviour is embedded in Reports.html\n+     */\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return \"\";\n+    }\n }"},{"sha":"df2a87f7cab426682cdb9575b1e48411ad7ccd99","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Tasks.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -227,4 +227,13 @@ public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n \n         return table;\n     }\n+\n+    /**\n+     * IndicatorMarkupId behaviour is embedded in Tasks.html\n+     */\n+    @Override\n+\n+    public String getAjaxIndicatorMarkupId() {\n+        return \"\";\n+    }\n }"},{"sha":"6449450d70e493e59ae2d88cb24d4c81905efee2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/NotificationTasks.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.console.pages.Tasks;\n import org.apache.syncope.client.console.pages.Tasks.TasksProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -151,6 +152,8 @@ private List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"traceLevel\", this, null), \"traceLevel\", \"traceLevel\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n+                pageRef, restClient));\n \n         columns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n "},{"sha":"4831acd2606887a2bbafc3e92834a0c34263724f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/RuntimePanel.java","status":"added","additions":130,"deletions":0,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.rest.JobRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.util.time.Duration;\n+\n+public class RuntimePanel extends Panel {\n+\n+    private static final long serialVersionUID = -9002724127542172464L;\n+\n+    private boolean latestStatus;\n+\n+    private Fragment fragmentStop, fragmentSpinner;\n+\n+    public AbstractAjaxTimerBehavior timer;\n+\n+    private final PageReference pageRef;\n+\n+    private final long jobId;\n+\n+    private final JobRestClient jobRestClient;\n+\n+    public RuntimePanel(final String componentId, final IModel<?> model, final PageReference pageRef, final long jobId,\n+            final JobRestClient jobRestClient) {\n+        super(componentId, model);\n+        this.pageRef = pageRef;\n+        this.jobId = jobId;\n+        this.jobRestClient = jobRestClient;\n+        latestStatus = false;\n+        this.refresh();\n+\n+    }\n+\n+    public final RuntimePanel refresh() {\n+        boolean currentStatus = jobRestClient.isJobRunning(jobId);\n+        if (currentStatus && !latestStatus) {\n+            setRunning();\n+        } else if (!currentStatus) {\n+            setNotRunning();\n+        }\n+        latestStatus = currentStatus;\n+        return this;\n+    }\n+\n+    public void setRunning() {\n+        fragmentStop = new Fragment(\"panelStop\", \"fragmentStop\", this);\n+        fragmentStop.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"stopLink\", pageRef) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                jobRestClient.stopJob(jobId);\n+                this.setEnabled(false);\n+                target.add(this);\n+            }\n+\n+            @Override\n+            public String getAjaxIndicatorMarkupId() {\n+                return \"\";\n+            }\n+        });\n+        addOrReplace(fragmentStop);\n+        fragmentSpinner = new Fragment(\"panelSpinner\", \"fragmentSpinner\", this);\n+        addOrReplace(fragmentSpinner);\n+    }\n+\n+    public void setNotRunning() {\n+        fragmentStop = new Fragment(\"panelStop\", \"emptyFragment\", this);\n+        addOrReplace(fragmentStop);\n+        fragmentSpinner = new Fragment(\"panelSpinner\", \"emptyFragment\", this);\n+        addOrReplace(fragmentSpinner);\n+    }\n+\n+    public void setTimer(AbstractAjaxTimerBehavior timer) {\n+        if (this.timer != null) {\n+            remove(this.timer);\n+        }\n+        this.timer = timer;\n+        this.add(this.timer);\n+    }\n+\n+    public void startPolling(final int seconds) {\n+        AbstractAjaxTimerBehavior timer = new AbstractAjaxTimerBehavior(Duration.seconds(seconds)) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onTimer(AjaxRequestTarget target) {                \n+                target.add(refresh());\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+                attributes.getExtraParameters().put(\"pollingTimeout\", \"true\");\n+            }\n+\n+        };\n+\n+        panel.setTimer(timer);\n+\n+    }\n+\n+}"},{"sha":"9a64c83c89c03a2c749ab147afd24ec30fa85aaf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SchedTasks.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -166,6 +167,8 @@ private List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n+                pageRef, restClient));\n \n         columns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n "},{"sha":"50d91df1397e6f81e8d3516993b8d0cf82b6a3f7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SyncTasksPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.client.console.pages.UserTemplateModalPage;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -69,8 +70,11 @@ protected List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+        syncTaskscolumns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"),\n+                \"runtime\", pageRef, restClient));\n \n-        syncTaskscolumns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n+        syncTaskscolumns.add(\n+                new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n                     private static final long serialVersionUID = 2054811145491901166L;\n "},{"sha":"06346583ce47ab45fc5dec517aaa226d3252aa7a","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/JobRestClient.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FJobRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FJobRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FJobRestClient.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public abstract class JobRestClient extends BaseRestClient{\n+\n+    public abstract boolean isJobRunning(final long id);\n+\n+    public abstract void startJob(final long id);\n+\n+    public abstract void stopJob(final long id);\n+}"},{"sha":"5cfe83f625ed2da518297fc4f46e2d73917ee874","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -25,12 +25,14 @@\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.lib.wrap.ReportletConfClass;\n+import org.apache.syncope.common.lib.types.JobAction;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class ReportRestClient extends BaseRestClient implements ExecutionRestClient {\n+public class ReportRestClient extends JobRestClient implements ExecutionRestClient {\n \n     private static final long serialVersionUID = 1644689667998953604L;\n \n@@ -105,4 +107,25 @@ public void deleteExecution(final long reportExecId) {\n     public Response exportExecutionResult(final Long executionId, final ReportExecExportFormat fmt) {\n         return getService(ReportService.class).exportExecutionResult(executionId, fmt);\n     }\n+    \n+    \n+    @Override\n+    public boolean isJobRunning(final long reportId) {\n+        for (ReportExecTO reportExecTO : getService(ReportService.class).listJobs(JobStatusType.RUNNING)) {\n+            if (reportExecTO.getReport() == reportId) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public void startJob(final long reportId) {\n+        getService(ReportService.class).actionJob(reportId, JobAction.START);\n+    }\n+\n+    @Override\n+    public void stopJob(final long reportId) {\n+        getService(ReportService.class).actionJob(reportId, JobAction.STOP);\n+    }\n }"},{"sha":"2b09630fad9c7b567402f42560ee9c640ef561bf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -29,6 +29,9 @@\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.JobAction;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n@@ -37,7 +40,7 @@\n  * Console client for invoking Rest Tasks services.\n  */\n @Component\n-public class TaskRestClient extends BaseRestClient implements ExecutionRestClient {\n+public class TaskRestClient extends JobRestClient implements ExecutionRestClient {\n \n     private static final long serialVersionUID = 6284485820911028843L;\n \n@@ -136,4 +139,24 @@ public void updateSyncTask(final SyncTaskTO taskTO) {\n     public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(TaskService.class).bulk(action);\n     }\n+\n+    @Override\n+    public boolean isJobRunning(final long taskId) {\n+        for (TaskExecTO taskExecTO : getService(TaskService.class).listJobs(JobStatusType.RUNNING)) {\n+            if (taskExecTO.getTask() == taskId) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public void startJob(final long taskId) {\n+        getService(TaskService.class).actionJob(taskId, JobAction.START);\n+    }\n+\n+    @Override\n+    public void stopJob(final long taskId) {\n+        getService(TaskService.class).actionJob(taskId, JobAction.STOP);\n+    }\n }"},{"sha":"70d70743a45ee552782deb85188b25588dcda40f","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/JobColumn.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.syncope.client.console.panels.RuntimePanel;\n+import org.apache.syncope.client.console.rest.JobRestClient;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JobColumn<T, S> extends AbstractColumn<T, S> {\n+\n+    private static final long serialVersionUID = 7955560320949560725L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(JobColumn.class);\n+\n+    private final PageReference pageRef;\n+\n+    private RuntimePanel panel;\n+\n+    private final JobRestClient jobRestClient;\n+\n+    public JobColumn(final IModel<String> displayModel, final S sortProperty, final PageReference pageRef,\n+            final JobRestClient jobRestClient) {\n+        super(displayModel, sortProperty);\n+        this.pageRef = pageRef;\n+        this.jobRestClient = jobRestClient;\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> model) {\n+        Long jobId = null;\n+        if (model.getObject() instanceof AbstractTaskTO) {\n+            jobId = ((AbstractTaskTO) model.getObject()).getId();\n+        } else if (model.getObject() instanceof ReportTO) {\n+            jobId = ((ReportTO) model.getObject()).getId();\n+        }\n+        if (jobId != null) {\n+            panel = new RuntimePanel(componentId, model, pageRef, jobId, jobRestClient);\n+            panel.startPolling(10);\n+            item.add(panel);\n+        }\n+    }\n+}"},{"sha":"ff5fb37f86f50a853d37fff9a481d8f0bd8338c8","filename":"client/old_console/src/main/resources/org/apache/syncope/client/console/pages/Reports.html","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.html?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -18,7 +18,20 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n+    <script type=\"text/javascript\">\n+      window.onload = setupFunc;\n \n+      function setupFunc() {\n+        Wicket.Event.subscribe('/ajax/call/beforeSend', function (attributes, jqXHR, settings) {\n+          if (!jqXHR.ep || !jqXHR.ep[0] || !jqXHR.ep[0][\"value\"]) {\n+            document.getElementById(\"veil\").style.display = \"block\";\n+          }\n+        });\n+        Wicket.Event.subscribe('/ajax/call/complete', function (attributes, jqXHR, textStatus) {\n+          document.getElementById(\"veil\").style.display = \"none\";\n+        });\n+      }\n+    </script>\n     <div id=\"tabs\">\n       <ul>\n         <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"reports\"/></span></a></li>"},{"sha":"81c9237ce574ebd257cd6d715682d02753137c4d","filename":"client/old_console/src/main/resources/org/apache/syncope/client/console/pages/Tasks.html","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.html?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -18,6 +18,21 @@\n -->\n <wicket:extend>\n \n+  <script type=\"text/javascript\">\n+    window.onload = setupFunc;\n+\n+    function setupFunc() {\n+      Wicket.Event.subscribe('/ajax/call/beforeSend', function (attributes, jqXHR, settings) {\n+        if (!jqXHR.ep || !jqXHR.ep[0] || !jqXHR.ep[0][\"value\"]){\n+          document.getElementById(\"veil\").style.display = \"block\";\n+        }\n+      });\n+      Wicket.Event.subscribe('/ajax/call/complete', function (attributes, jqXHR, textStatus) {\n+        document.getElementById(\"veil\").style.display = \"none\";\n+      });\n+    }\n+  </script>\n+\n   <div id=\"tabs\">\n     <ul>\n       <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>"},{"sha":"828192c85851884a464af28682581ad91272f6c4","filename":"client/old_console/src/main/resources/org/apache/syncope/client/console/panels/RuntimePanel.html","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.html?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -0,0 +1,49 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      #runtime{\n+        text-align: center;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel wicket:id=\"runtime\">\n+    <div>\n+      <div id=\"runtime\">\n+        <div id=\"runtimePanel\">\n+          <span wicket:id=\"panelStop\"></span>\n+          <span wicket:id=\"panelSpinner\"></span>\n+\n+          <wicket:fragment wicket:id=\"fragmentStop\">\n+            <a href=\"#\" wicket:id=\"stopLink\"><img src=\"img/actions/suspend.png\" alt=\"stop icon\" title=\"Stop Now\"/></a>\n+          </wicket:fragment>\n+\n+          <wicket:fragment wicket:id=\"fragmentSpinner\">\n+            <img src=\"img/loading.gif\" alt=\"spinner icon\" title=\"Spinner\"/>\n+          </wicket:fragment>\n+\n+          <wicket:fragment wicket:id=\"emptyFragment\"></wicket:fragment>\n+\n+        </div>\n+\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"fb5648f956a50d1d8c3fea0c98c9653d611ec869","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractJobLogic.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6edda65a62ab61e637847cb60ad034cd0b09a7ce/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6edda65a62ab61e637847cb60ad034cd0b09a7ce/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java?ref=6edda65a62ab61e637847cb60ad034cd0b09a7ce","patch":"@@ -156,7 +156,20 @@ protected void actionJob(final String jobName, final JobAction action) {\n                 if (scheduler.getScheduler().checkExists(jobKey)) {\n                     switch (action) {\n                         case START:\n-                            scheduler.getScheduler().triggerJob(jobKey);\n+                            Long currentKey = getKeyFromJobName(jobKey);\n+                            boolean found = false;\n+                            //Two or more equals jobs cannot be executed concurrently\n+                            for (int i = 0; i < scheduler.getScheduler().getCurrentlyExecutingJobs().size() && !found;\n+                                    i++) {\n+                                JobExecutionContext jec = scheduler.getScheduler().getCurrentlyExecutingJobs().get(i);\n+                                Long execJobKey = getKeyFromJobName(jec.getJobDetail().getKey());\n+                                if (execJobKey == currentKey) {\n+                                    found = true;\n+                                }\n+                            }\n+                            if (!found) {\n+                                scheduler.getScheduler().triggerJob(jobKey);\n+                            }\n                             break;\n \n                         case STOP:"}]}