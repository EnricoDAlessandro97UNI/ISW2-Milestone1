{"sha":"a9bd3ce15ab684befa28024fd25c1f10e763ff4c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE5YmQzY2UxNWFiNjg0YmVmYTI4MDI0ZmQyNWMxZjEwZTc2M2ZmNGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T14:58:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-06T14:58:11Z"},"message":"[SYNCOPE-893] Fixing by removing NotNull constraint on realm at JPA level, as it is already enforced at DataBinder level","tree":{"sha":"0a66c82a796e3d218bbe44f311aeff205b658451","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0a66c82a796e3d218bbe44f311aeff205b658451"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a9bd3ce15ab684befa28024fd25c1f10e763ff4c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9bd3ce15ab684befa28024fd25c1f10e763ff4c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9bd3ce15ab684befa28024fd25c1f10e763ff4c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8943d287e1fa17b48795a9b96a0776bff8772a98","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8943d287e1fa17b48795a9b96a0776bff8772a98","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8943d287e1fa17b48795a9b96a0776bff8772a98"}],"stats":{"total":126,"additions":81,"deletions":45},"files":[{"sha":"449b0f3d8062c45b660df8faca188c29d41966d9","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAny.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java?ref=a9bd3ce15ab684befa28024fd25c1f10e763ff4c","patch":"@@ -38,7 +38,7 @@\n \n     private static final long serialVersionUID = -2666540708092702810L;\n \n-    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    @ManyToOne(fetch = FetchType.EAGER)\n     private JPARealm realm;\n \n     private String workflowId;"},{"sha":"64d8776a4ff82015a9c651ab1798faf435f4365f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":80,"deletions":40,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=a9bd3ce15ab684befa28024fd25c1f10e763ff4c","patch":"@@ -427,52 +427,92 @@ public boolean evaluate(final Provision object) {\n         // Succeeded, only if on 'ALL' level\n         if (traceLevel == TraceLevel.ALL) {\n             if (includeUser) {\n-                report.append(\"\\n\\nUsers created:\\n\").\n-                        append(ProvisioningReport.generate(uSuccCreate, traceLevel)).\n-                        append(\"\\nUsers updated:\\n\").\n-                        append(ProvisioningReport.generate(uSuccUpdate, traceLevel)).\n-                        append(\"\\nUsers deleted:\\n\").\n-                        append(ProvisioningReport.generate(uSuccDelete, traceLevel)).\n-                        append(\"\\nUsers no operation:\\n\").\n-                        append(ProvisioningReport.generate(uSuccNone, traceLevel)).\n-                        append(\"\\nUsers ignored:\\n\").\n-                        append(ProvisioningReport.generate(uIgnore, traceLevel));\n+                if (!uSuccCreate.isEmpty()) {\n+                    report.append(\"\\n\\nUsers created:\\n\").\n+                            append(ProvisioningReport.generate(uSuccCreate, traceLevel));\n+                }\n+                if (!uSuccUpdate.isEmpty()) {\n+                    report.append(\"\\nUsers updated:\\n\").\n+                            append(ProvisioningReport.generate(uSuccUpdate, traceLevel));\n+                }\n+                if (!uSuccDelete.isEmpty()) {\n+                    report.append(\"\\nUsers deleted:\\n\").\n+                            append(ProvisioningReport.generate(uSuccDelete, traceLevel));\n+                }\n+                if (!uSuccNone.isEmpty()) {\n+                    report.append(\"\\nUsers no operation:\\n\").\n+                            append(ProvisioningReport.generate(uSuccNone, traceLevel));\n+                }\n+                if (!uIgnore.isEmpty()) {\n+                    report.append(\"\\nUsers ignored:\\n\").\n+                            append(ProvisioningReport.generate(uIgnore, traceLevel));\n+                }\n             }\n             if (includeGroup) {\n-                report.append(\"\\n\\nGroups created:\\n\").\n-                        append(ProvisioningReport.generate(gSuccCreate, traceLevel)).\n-                        append(\"\\nGroups updated:\\n\").\n-                        append(ProvisioningReport.generate(gSuccUpdate, traceLevel)).\n-                        append(\"\\nGroups deleted:\\n\").\n-                        append(ProvisioningReport.generate(gSuccDelete, traceLevel)).\n-                        append(\"\\nGroups no operation:\\n\").\n-                        append(ProvisioningReport.generate(gSuccNone, traceLevel)).\n-                        append(\"\\nGroups ignored:\\n\").\n-                        append(ProvisioningReport.generate(gSuccNone, traceLevel));\n+                if (!gSuccCreate.isEmpty()) {\n+                    report.append(\"\\n\\nGroups created:\\n\").\n+                            append(ProvisioningReport.generate(gSuccCreate, traceLevel));\n+                }\n+                if (!gSuccUpdate.isEmpty()) {\n+                    report.append(\"\\nGroups updated:\\n\").\n+                            append(ProvisioningReport.generate(gSuccUpdate, traceLevel));\n+                }\n+                if (!gSuccDelete.isEmpty()) {\n+                    report.append(\"\\nGroups deleted:\\n\").\n+                            append(ProvisioningReport.generate(gSuccDelete, traceLevel));\n+                }\n+                if (!gSuccNone.isEmpty()) {\n+                    report.append(\"\\nGroups no operation:\\n\").\n+                            append(ProvisioningReport.generate(gSuccNone, traceLevel));\n+                }\n+                if (!gIgnore.isEmpty()) {\n+                    report.append(\"\\nGroups ignored:\\n\").\n+                            append(ProvisioningReport.generate(gIgnore, traceLevel));\n+                }\n             }\n             if (includeAnyObject) {\n-                report.append(\"\\n\\nAny objects created:\\n\").\n-                        append(ProvisioningReport.generate(aSuccCreate, traceLevel)).\n-                        append(\"\\nAny objects updated:\\n\").\n-                        append(ProvisioningReport.generate(aSuccUpdate, traceLevel)).\n-                        append(\"\\nAny objects deleted:\\n\").\n-                        append(ProvisioningReport.generate(aSuccDelete, traceLevel)).\n-                        append(\"\\nAny objects no operation:\\n\").\n-                        append(ProvisioningReport.generate(aSuccNone, traceLevel)).\n-                        append(\"\\nAny objects ignored:\\n\").\n-                        append(ProvisioningReport.generate(aSuccNone, traceLevel));\n+                if (!aSuccCreate.isEmpty()) {\n+                    report.append(\"\\n\\nAny objects created:\\n\").\n+                            append(ProvisioningReport.generate(aSuccCreate, traceLevel));\n+                }\n+                if (!aSuccUpdate.isEmpty()) {\n+                    report.append(\"\\nAny objects updated:\\n\").\n+                            append(ProvisioningReport.generate(aSuccUpdate, traceLevel));\n+                }\n+                if (!aSuccDelete.isEmpty()) {\n+                    report.append(\"\\nAny objects deleted:\\n\").\n+                            append(ProvisioningReport.generate(aSuccDelete, traceLevel));\n+                }\n+                if (!aSuccNone.isEmpty()) {\n+                    report.append(\"\\nAny objects no operation:\\n\").\n+                            append(ProvisioningReport.generate(aSuccNone, traceLevel));\n+                }\n+                if (!aIgnore.isEmpty()) {\n+                    report.append(\"\\nAny objects ignored:\\n\").\n+                            append(ProvisioningReport.generate(aIgnore, traceLevel));\n+                }\n             }\n             if (includeRealm) {\n-                report.append(\"\\n\\nRealms created:\\n\").\n-                        append(ProvisioningReport.generate(rSuccCreate, traceLevel)).\n-                        append(\"\\nRealms updated:\\n\").\n-                        append(ProvisioningReport.generate(rSuccUpdate, traceLevel)).\n-                        append(\"\\nRealms deleted:\\n\").\n-                        append(ProvisioningReport.generate(rSuccDelete, traceLevel)).\n-                        append(\"\\nRealms no operation:\\n\").\n-                        append(ProvisioningReport.generate(rSuccNone, traceLevel)).\n-                        append(\"\\nRealms ignored:\\n\").\n-                        append(ProvisioningReport.generate(rSuccNone, traceLevel));\n+                if (!rSuccCreate.isEmpty()) {\n+                    report.append(\"\\n\\nRealms created:\\n\").\n+                            append(ProvisioningReport.generate(rSuccCreate, traceLevel));\n+                }\n+                if (!rSuccUpdate.isEmpty()) {\n+                    report.append(\"\\nRealms updated:\\n\").\n+                            append(ProvisioningReport.generate(rSuccUpdate, traceLevel));\n+                }\n+                if (!rSuccDelete.isEmpty()) {\n+                    report.append(\"\\nRealms deleted:\\n\").\n+                            append(ProvisioningReport.generate(rSuccDelete, traceLevel));\n+                }\n+                if (!rSuccNone.isEmpty()) {\n+                    report.append(\"\\nRealms no operation:\\n\").\n+                            append(ProvisioningReport.generate(rSuccNone, traceLevel));\n+                }\n+                if (!rIgnore.isEmpty()) {\n+                    report.append(\"\\nRealms ignored:\\n\").\n+                            append(ProvisioningReport.generate(rIgnore, traceLevel));\n+                }\n             }\n         }\n "},{"sha":"3994923d71ce87550628b1b0dd323433d0bad0db","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultAnyObjectWorkflowAdapter.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java?ref=a9bd3ce15ab684befa28024fd25c1f10e763ff4c","patch":"@@ -30,12 +30,10 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n-import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Simple implementation basically not involving any workflow engine.\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n public class DefaultAnyObjectWorkflowAdapter extends AbstractAnyObjectWorkflowAdapter {\n \n     @Override"},{"sha":"6b557d6f1546a74b0b471fd4f08b1a2922ee607e","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9bd3ce15ab684befa28024fd25c1f10e763ff4c/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=a9bd3ce15ab684befa28024fd25c1f10e763ff4c","patch":"@@ -30,12 +30,10 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n-import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Simple implementation basically not involving any workflow engine.\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n public class DefaultGroupWorkflowAdapter extends AbstractGroupWorkflowAdapter {\n \n     @Override"}]}