{"sha":"ed22a4f65f91f8b479dd7b409fb863c03acb37bc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkMjJhNGY2NWY5MWY4YjQ3OWRkN2I0MDlmYjg2M2MwM2FjYjM3YmM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-30T15:25:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-30T15:42:28Z"},"message":"[SYNCOPE-1466] Added creationContext and lastChangeContext to metadata","tree":{"sha":"7fb353b412a9befcea7297e8af602feb683d5935","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7fb353b412a9befcea7297e8af602feb683d5935"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ed22a4f65f91f8b479dd7b409fb863c03acb37bc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed22a4f65f91f8b479dd7b409fb863c03acb37bc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ed22a4f65f91f8b479dd7b409fb863c03acb37bc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bede4787b34f1b33965c6a41b0d67d9157685a29","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bede4787b34f1b33965c6a41b0d67d9157685a29","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bede4787b34f1b33965c6a41b0d67d9157685a29"}],"stats":{"total":2143,"additions":1242,"deletions":901},"files":[{"sha":"b5fad0ad566aab7c93d07e527d5037749db051b2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n import org.apache.syncope.common.lib.log.AuditEntry;\n-import org.apache.syncope.common.lib.to.AbstractAnnotatedBean;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n@@ -57,9 +57,9 @@ public AuditHistoryDetails(\n         super();\n \n         AuditEntry current = new AuditEntry();\n-        if (currentEntity instanceof AbstractAnnotatedBean) {\n-            current.setWho(((AbstractAnnotatedBean) currentEntity).getCreator());\n-            current.setDate(((AbstractAnnotatedBean) currentEntity).getCreationDate());\n+        if (currentEntity instanceof AnyTO) {\n+            current.setWho(((AnyTO) currentEntity).getCreator());\n+            current.setDate(((AnyTO) currentEntity).getCreationDate());\n         } else {\n             current.setWho(SyncopeConsoleSession.get().getSelfTO().getUsername());\n             current.setDate(new Date());"},{"sha":"8d3e616ca2aa79147d24d801facabb7e1849aa3d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -133,12 +133,7 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        try {\n-            updateRealmContent(realmChoicePanel.getCurrentRealm(), parameters.get(\"selectedIndex\").toInteger());\n-        } catch (Exception e) {\n-            LOG.debug(\"Unexpected error\", e);\n-            updateRealmContent(realmChoicePanel.getCurrentRealm(), 0);\n-        }\n+        updateRealmContent(realmChoicePanel.getCurrentRealm(), parameters.get(\"selectedIndex\").toInt(0));\n     }\n \n     @Override"},{"sha":"c9a232ac96ae246f5c9923442dd2ccf7255266b6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel.java","status":"modified","additions":25,"deletions":12,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.common.lib.to.AbstractAnnotatedBean;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -29,38 +29,51 @@ public class AnnotatedBeanPanel extends Panel {\n \n     private static final long serialVersionUID = 4228064224811390809L;\n \n-    public <T extends AnyTO> AnnotatedBeanPanel(\n-            final String id, final AbstractAnnotatedBean sysInfoTO) {\n-\n+    public <T extends AnyTO> AnnotatedBeanPanel(final String id, final T anyTO) {\n         super(id);\n \n         // ------------------------\n         // Creation date\n         // ------------------------\n-        add(new Label(\"creationDate\", new Model<>(sysInfoTO.getCreationDate() != null\n-                ? SyncopeConsoleSession.get().getDateFormat().format(sysInfoTO.getCreationDate()) : \"\")));\n+        add(new Label(\"creationDate\", new Model<>(anyTO.getCreationDate() == null\n+                ? StringUtils.EMPTY\n+                : SyncopeConsoleSession.get().getDateFormat().format(anyTO.getCreationDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Last change date\n         // ------------------------\n-        add(new Label(\"lastChangeDate\", new Model<>(sysInfoTO.getLastChangeDate() != null\n-                ? SyncopeConsoleSession.get().getDateFormat().format(sysInfoTO.getLastChangeDate()) : \"\")));\n+        add(new Label(\"lastChangeDate\", new Model<>(anyTO.getLastChangeDate() == null\n+                ? StringUtils.EMPTY\n+                : SyncopeConsoleSession.get().getDateFormat().format(anyTO.getLastChangeDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Creator\n         // ------------------------\n-        add(new Label(\"creator\", new Model<>(sysInfoTO.getCreator() != null\n-                ? sysInfoTO.getCreator() : \"\")));\n+        add(new Label(\"creator\", new Model<>(anyTO.getCreator() == null\n+                ? StringUtils.EMPTY : anyTO.getCreator())));\n         // ------------------------\n \n         // ------------------------\n         // Last modifier\n         // ------------------------\n-        add(new Label(\"lastModifier\", new Model<>(sysInfoTO.getLastModifier() != null\n-                ? sysInfoTO.getLastModifier() : \"\")));\n+        add(new Label(\"lastModifier\", new Model<>(anyTO.getLastModifier() != null\n+                ? StringUtils.EMPTY : anyTO.getLastModifier())));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Creator\n+        // ------------------------\n+        add(new Label(\"creationContext\", new Model<>(anyTO.getCreationContext() == null\n+                ? StringUtils.EMPTY : anyTO.getCreationContext())));\n         // ------------------------\n \n+        // ------------------------\n+        // Last modifier\n+        // ------------------------\n+        add(new Label(\"lastChangeContext\", new Model<>(anyTO.getLastChangeContext() != null\n+                ? StringUtils.EMPTY : anyTO.getLastChangeContext())));\n+        // ------------------------\n     }\n }"},{"sha":"39806e54fc114b57ff155ea14426a0532582f77e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel.html","status":"modified","additions":23,"deletions":5,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.html?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -24,7 +24,7 @@\n           <wicket:message key=\"creationDate\"/>:\n         </div>\n         <div>\n-          <span wicket:id=\"creationDate\" />\n+          <span wicket:id=\"creationDate\"/>\n         </div>\n       </div>\n \n@@ -33,7 +33,7 @@\n           <wicket:message key=\"lastChangeDate\"/>:\n         </div>\n         <div>\n-          <span wicket:id=\"lastChangeDate\" />\n+          <span wicket:id=\"lastChangeDate\"/>\n         </div>\n       </div>\n \n@@ -42,7 +42,7 @@\n           <wicket:message key=\"creator\"/>:\n         </div>\n         <div>\n-          <span wicket:id=\"creator\" />\n+          <span wicket:id=\"creator\"/>\n         </div>\n       </div>\n \n@@ -51,11 +51,29 @@\n           <wicket:message key=\"lastModifier\"/>:\n         </div>\n         <div>\n-          <span wicket:id=\"lastModifier\" />\n+          <span wicket:id=\"lastModifier\"/>\n         </div>\n       </div>\n \n-      <wicket:child />\n+      <div class=\"infoleft\">\n+        <div class=\"infolabel\">\n+          <wicket:message key=\"creationContext\"/>:\n+        </div>\n+        <div>\n+          <span wicket:id=\"creationContext\"/>\n+        </div>\n+      </div>\n+\n+      <div class=\"inforight\">\n+        <div class=\"infolabel\">\n+          <wicket:message key=\"lastChangeContext\"/>:\n+        </div>\n+        <div>\n+          <span wicket:id=\"lastChangeContext\"/>\n+        </div>\n+      </div>\n+\n+      <wicket:child/>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"b8c984ba8a7c9ba3f0c82aa6009ba72302edb6e4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel.properties","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -16,5 +16,7 @@\n # under the License.\n creationDate=Creation Date\n creator=Creator\n-lastChangeDate=Last change date\n-lastModifier=Last modifier\n+lastChangeDate=Last Change Date\n+lastModifier=Last Modifier\n+creationContext=Creation Context\n+lastChangeContext=Last Change Context"},{"sha":"70ae07b977dc439918bca0e456d8b5be37e2e096","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel_fr_CA.properties","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_fr_CA.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-creationDate=Date de cr�ation\n-creator=Cr�ateur\n-lastChangeDate=Date de la derni�re modification\n+creationDate=Date de cr\\u00e9ation\n+creator=Cr\\u00e9ateur\n+lastChangeDate=Date de la derni\\u00e8re modification\n lastModifier=Dernier modificateur\n+creationContext=Creation Context\n+lastChangeContext=Last Change Context"},{"sha":"5dcfa2e2b4cf712ef21fc37234b1ddb04e90d5cc","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_it.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,3 +18,5 @@ creationDate=Data Di Creazione\n creator=Creatore\n lastChangeDate=Data Di Ultima Modifica\n lastModifier=Ultimo Modificatore\n+creationContext=Contesto Di Crezione\n+lastChangeContext=Contesto Di Ultima Modifica"},{"sha":"934d7018e006e8bfaa61798c5bd4906f03c99f00","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel_ja.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ja.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,3 +18,5 @@ creationDate=\\u4f5c\\u6210\\u65e5\n creator=\\u4f5c\\u6210\\u8005\n lastChangeDate=\\u6700\\u7d42\\u66f4\\u65b0\\u65e5\n lastModifier=\\u6700\\u7d42\\u66f4\\u65b0\\u8005\n+creationContext=Creation Context\n+lastChangeContext=Last Change Context"},{"sha":"ee4221af6ed578dce86f75c90b7ae20796596f7b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_pt_BR.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,3 +18,5 @@ creationDate=Data de Cria\\u00e7\\u00e3o\n creator=Criador\n lastChangeDate=Data De \\u00daltima Altera\\u00e7\\u00e3o\n lastModifier=\\u00daltima Modificador\n+creationContext=Creation Context\n+lastChangeContext=Last Change Context"},{"sha":"6284ae4c21546b7808b2d68e5c3ae7caed9f194f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AnnotatedBeanPanel_ru.properties","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnnotatedBeanPanel_ru.properties?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -15,11 +15,13 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# creationDate=Дата создания\n+# creationDate=\\u00d0\\u0094\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b0 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n creationDate=\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044f\n-# creator=Создал\n+# creator=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\n creator=\\u0421\\u043e\\u0437\\u0434\\u0430\\u043b\n-# lastChangeDate=Дата изменения\n+# lastChangeDate=\\u00d0\\u0094\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b0 \\u00d0\\u00b8\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n lastChangeDate=\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f\n-# lastModifier=Изменил\n+# lastModifier=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00bb\n lastModifier=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u043b\n+creationContext=Creation Context\n+lastChangeContext=Last Change Context"},{"sha":"99400fdaa4bad98d2c3ef5f4d6b01789ae5f7e41","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jaxb/XmlEntityTOAdapter.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -62,5 +62,4 @@ public EntityTOType marshal(final E v) throws Exception {\n \n         return result;\n     }\n-\n }"},{"sha":"538405d3bf795be6e106de34661a4832cecfd436","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractAnnotatedBean.java","status":"removed","additions":0,"deletions":153,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bede4787b34f1b33965c6a41b0d67d9157685a29/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bede4787b34f1b33965c6a41b0d67d9157685a29/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java?ref=bede4787b34f1b33965c6a41b0d67d9157685a29","patch":"@@ -1,153 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import java.util.Date;\n-import java.util.Optional;\n-\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.lib.BaseBean;\n-\n-/**\n- * Abstract wrapper for common system information.\n- */\n-@XmlType\n-public abstract class AbstractAnnotatedBean extends BaseBean implements EntityTO {\n-\n-    private static final long serialVersionUID = -930797879027642457L;\n-\n-    /**\n-     * Username of the user that has created this profile.\n-     * <p>\n-     * Cannot be used a reference to an existing user for two main reasons: the creator can be the user {@code admin};\n-     * the creator could have been removed.\n-     */\n-    private String creator;\n-\n-    /**\n-     * Creation date.\n-     */\n-    private Date creationDate;\n-\n-    /**\n-     * Username of the user that has performed the last modification to this profile.\n-     * <p>\n-     * This field cannot be null: at creation time it have to be initialized with the creator username.\n-     * <p>\n-     * The modifier can be the user itself whether the last performed change has been a self-modification.\n-     * <p>\n-     * Cannot be used a reference to an existing user for two main reasons: the modifier can be the user {@code admin};\n-     * the modifier could have been removed.\n-     */\n-    private String lastModifier;\n-\n-    /**\n-     * Last change date.\n-     * <p>\n-     * This field cannot be null: at creation time it has to be initialized with {@code creationDate} field value.\n-     */\n-    private Date lastChangeDate;\n-\n-    public String getCreator() {\n-        return creator;\n-    }\n-\n-    public void setCreator(final String creator) {\n-        this.creator = creator;\n-    }\n-\n-    public Date getCreationDate() {\n-        if (creationDate != null) {\n-            return new Date(creationDate.getTime());\n-        }\n-        return null;\n-    }\n-\n-    public void setCreationDate(final Date creationDate) {\n-        if (creationDate != null) {\n-            this.creationDate = new Date(creationDate.getTime());\n-        } else {\n-            this.creationDate = null;\n-        }\n-    }\n-\n-    public String getLastModifier() {\n-        return lastModifier;\n-    }\n-\n-    public void setLastModifier(final String lastModifier) {\n-        this.lastModifier = lastModifier;\n-    }\n-\n-    public Date getLastChangeDate() {\n-        if (lastChangeDate != null) {\n-            return new Date(lastChangeDate.getTime());\n-        }\n-        return null;\n-    }\n-\n-    public void setLastChangeDate(final Date lastChangeDate) {\n-        if (lastChangeDate != null) {\n-            this.lastChangeDate = new Date(lastChangeDate.getTime());\n-        } else {\n-            this.lastChangeDate = null;\n-        }\n-    }\n-\n-    @JsonIgnore\n-    public String getETagValue() {\n-        Date etagDate = getLastChangeDate() == null\n-                ? getCreationDate() : getLastChangeDate();\n-        return Optional.ofNullable(etagDate).map(date -> String.valueOf(date.getTime())).orElse(StringUtils.EMPTY);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder().\n-                append(creator).\n-                append(creationDate).\n-                append(lastModifier).\n-                append(lastChangeDate).\n-                build();\n-    }\n-\n-    @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AbstractAnnotatedBean other = (AbstractAnnotatedBean) obj;\n-        return new EqualsBuilder().\n-                append(creator, other.creator).\n-                append(creationDate, other.creationDate).\n-                append(lastModifier, other.lastModifier).\n-                append(lastChangeDate, other.lastChangeDate).\n-                build();\n-    }\n-}"},{"sha":"5eef16c4f738db1dbd029880a70c4d6479eff4a9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":95,"deletions":3,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -25,6 +25,7 @@\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n@@ -34,23 +35,49 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.RealmMember;\n \n @XmlType\n @XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n @JsonPropertyOrder(value = { \"@class\", \"key\", \"type\", \"realm\", \"username\", \"name\" })\n @Schema(subTypes = { UserTO.class, GroupTO.class, AnyObjectTO.class }, discriminatorProperty = \"@class\")\n-public abstract class AnyTO extends AbstractAnnotatedBean implements EntityTO, RealmMember {\n+public abstract class AnyTO extends BaseBean implements EntityTO, RealmMember {\n \n     private static final long serialVersionUID = -754311920679872084L;\n \n     @XmlTransient\n     @JsonProperty(\"@class\")\n     private String discriminator;\n \n+    /**\n+     * Username of the user that has created the related instance.\n+     */\n+    private String creator;\n+\n+    private Date creationDate;\n+\n+    /**\n+     * Context information about create.\n+     */\n+    private String creationContext;\n+\n+    /**\n+     * Username of the user that has performed the last modification to the related instance.\n+     */\n+    private String lastModifier;\n+\n+    private Date lastChangeDate;\n+\n+    /**\n+     * Context information about last change.\n+     */\n+    private String lastChangeContext;\n+\n     private String key;\n \n     private String type;\n@@ -78,6 +105,61 @@ public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n+    public String getCreator() {\n+        return creator;\n+    }\n+\n+    public void setCreator(final String creator) {\n+        this.creator = creator;\n+    }\n+\n+    public Date getCreationDate() {\n+        return Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    public void setCreationDate(final Date creationDate) {\n+        this.creationDate = Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    public String getCreationContext() {\n+        return creationContext;\n+    }\n+\n+    public void setCreationContext(final String creationContext) {\n+        this.creationContext = creationContext;\n+    }\n+\n+    public String getLastModifier() {\n+        return lastModifier;\n+    }\n+\n+    public void setLastModifier(final String lastModifier) {\n+        this.lastModifier = lastModifier;\n+    }\n+\n+    public Date getLastChangeDate() {\n+        return Optional.ofNullable(lastChangeDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    public void setLastChangeDate(final Date lastChangeDate) {\n+        this.lastChangeDate = Optional.ofNullable(lastChangeDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    public String getLastChangeContext() {\n+        return lastChangeContext;\n+    }\n+\n+    public void setLastChangeContext(final String lastChangeContext) {\n+        this.lastChangeContext = lastChangeContext;\n+    }\n+\n+    @JsonIgnore\n+    public String getETagValue() {\n+        Date etagDate = getLastChangeDate() == null\n+                ? getCreationDate() : getLastChangeDate();\n+        return Optional.ofNullable(etagDate).map(date -> String.valueOf(date.getTime())).orElse(StringUtils.EMPTY);\n+    }\n+\n     @Override\n     public String getKey() {\n         return key;\n@@ -182,7 +264,12 @@ public Set<String> getResources() {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n-                appendSuper(super.hashCode()).\n+                append(creator).\n+                append(creationDate).\n+                append(creationContext).\n+                append(lastModifier).\n+                append(lastChangeDate).\n+                append(lastChangeContext).\n                 append(key).\n                 append(type).\n                 append(realm).\n@@ -209,7 +296,12 @@ public boolean equals(final Object obj) {\n         }\n         final AnyTO other = (AnyTO) obj;\n         return new EqualsBuilder().\n-                appendSuper(super.equals(obj)).\n+                append(creator, other.creator).\n+                append(creationDate, other.creationDate).\n+                append(creationContext, other.creationContext).\n+                append(lastModifier, other.lastModifier).\n+                append(lastChangeDate, other.lastChangeDate).\n+                append(lastChangeContext, other.lastChangeContext).\n                 append(key, other.key).\n                 append(type, other.type).\n                 append(realm, other.realm)."},{"sha":"5db142ce1f5be2a86e2b5c026a5ff7ff7c95edce","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -54,6 +54,8 @@\n public abstract class AbstractAnyLogic<TO extends AnyTO, C extends AnyCR, U extends AnyUR>\n         extends AbstractResourceAssociator<TO> {\n \n+    protected static final String REST_CONTEXT = \"REST\";\n+\n     @Autowired\n     protected UserDAO userDAO;\n "},{"sha":"ce1dd371bd9356d4f177ee6910090bd179042c90","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -116,7 +116,8 @@ public ProvisioningResult<AnyObjectTO> create(final AnyObjectCR createReq, final\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n-        Pair<String, List<PropagationStatus>> created = provisioningManager.create(before.getLeft(), nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> created = provisioningManager.create(\n+                before.getLeft(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterCreate(binder.getAnyObjectTO(created.getKey()), created.getRight(), before.getRight());\n     }\n@@ -139,7 +140,7 @@ public ProvisioningResult<AnyObjectTO> update(\n         boolean authDynRealms = securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n         Pair<AnyObjectUR, List<PropagationStatus>> updated =\n-                provisioningManager.update(updateReq, nullPriorityAsync);\n+                provisioningManager.update(updateReq, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterUpdate(\n                 binder.getAnyObjectTO(updated.getLeft().getKey()),\n@@ -159,7 +160,8 @@ public ProvisioningResult<AnyObjectTO> delete(final String key, final boolean nu\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), before.getLeft().getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.delete(before.getLeft().getKey(), nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.delete(\n+                before.getLeft().getKey(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         AnyObjectTO anyObjectTO = new AnyObjectTO();\n         anyObjectTO.setKey(before.getLeft().getKey());\n@@ -182,7 +184,7 @@ public AnyObjectTO unlink(final String key, final Collection<String> resources)\n                 -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(resource).build()).\n                 collect(Collectors.toList()));\n \n-        return binder.getAnyObjectTO(provisioningManager.unlink(req));\n+        return binder.getAnyObjectTO(provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n \n     @Override\n@@ -200,7 +202,7 @@ public AnyObjectTO link(final String key, final Collection<String> resources) {\n                 -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(resource).build()).\n                 collect(Collectors.toList()));\n \n-        return binder.getAnyObjectTO(provisioningManager.link(req));\n+        return binder.getAnyObjectTO(provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n \n     @Override\n@@ -258,7 +260,8 @@ public ProvisioningResult<AnyObjectTO> deprovision(\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.deprovision(key, resources, nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(\n+                key, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<AnyObjectTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getAnyObjectTO(key));\n@@ -281,7 +284,8 @@ public ProvisioningResult<AnyObjectTO> provision(\n                 anyObjectTO.getRealm());\n         securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.provision(key, resources, nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.provision(\n+                key, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<AnyObjectTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getAnyObjectTO(key));"},{"sha":"231b07453c7c2b83c4f8fd88e84d8c777b2c4ca8","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -186,8 +186,8 @@ public ProvisioningResult<GroupTO> create(final GroupCR createReq, final boolean\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n-        Pair<String, List<PropagationStatus>> created =\n-                provisioningManager.create(before.getLeft(), nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> created = provisioningManager.create(\n+                before.getLeft(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterCreate(binder.getGroupTO(created.getKey()), created.getRight(), before.getRight());\n     }\n@@ -208,7 +208,8 @@ public ProvisioningResult<GroupTO> update(final GroupUR req, final boolean nullP\n                 realm);\n         boolean authDynRealms = securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n-        Pair<GroupUR, List<PropagationStatus>> updated = provisioningManager.update(req, nullPriorityAsync);\n+        Pair<GroupUR, List<PropagationStatus>> updated =\n+                provisioningManager.update(req, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterUpdate(\n                 binder.getGroupTO(updated.getLeft().getKey()),\n@@ -237,7 +238,8 @@ public ProvisioningResult<GroupTO> delete(final String key, final boolean nullPr\n             throw sce;\n         }\n \n-        List<PropagationStatus> statuses = provisioningManager.delete(before.getLeft().getKey(), nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.delete(\n+                before.getLeft().getKey(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         GroupTO groupTO = new GroupTO();\n         groupTO.setKey(before.getLeft().getKey());\n@@ -263,7 +265,7 @@ public GroupTO unlink(final String key, final Collection<String> resources) {\n         req.setUDynMembershipCond(group.getUDynMembershipCond());\n         req.getADynMembershipConds().putAll(group.getADynMembershipConds());\n \n-        return binder.getGroupTO(provisioningManager.unlink(req));\n+        return binder.getGroupTO(provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.GROUP_UPDATE + \"')\")\n@@ -284,7 +286,7 @@ public GroupTO link(final String key, final Collection<String> resources) {\n         req.getADynMembershipConds().putAll(group.getADynMembershipConds());\n         req.setUDynMembershipCond(group.getUDynMembershipCond());\n \n-        return binder.getGroupTO(provisioningManager.link(req));\n+        return binder.getGroupTO(provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.GROUP_UPDATE + \"')\")\n@@ -349,7 +351,8 @@ public ProvisioningResult<GroupTO> deprovision(\n                 group.getRealm());\n         securityChecks(effectiveRealms, group.getRealm(), group.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.deprovision(key, resources, nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(\n+                key, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<GroupTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getGroupTO(key));\n@@ -373,7 +376,8 @@ public ProvisioningResult<GroupTO> provision(\n                 group.getRealm());\n         securityChecks(effectiveRealms, group.getRealm(), group.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.provision(key, resources, nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.provision(\n+                key, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<GroupTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.getGroupTO(key));"},{"sha":"57dd2bcf9912bf1f86da88ea5cea98bad9efa525","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -272,15 +272,13 @@ public ExecTO execute(final String key, final Date startAt, final boolean dryRun\n                     Map<String, Object> jobDataMap = jobManager.register(\n                             (SchedTask) task,\n                             startAt,\n-                            confParamOps.get(AuthContextUtils.getDomain(),\n-                                    \"tasks.interruptMaxRetries\", 1L, Long.class), executor);\n+                            confParamOps.get(AuthContextUtils.getDomain(), \"tasks.interruptMaxRetries\", 1L, Long.class),\n+                            executor);\n \n                     jobDataMap.put(TaskJob.DRY_RUN_JOBDETAIL_KEY, dryRun);\n \n                     if (startAt == null) {\n-                        scheduler.getScheduler().triggerJob(\n-                                JobNamer.getJobKey(task),\n-                                new JobDataMap(jobDataMap));\n+                        scheduler.getScheduler().triggerJob(JobNamer.getJobKey(task), new JobDataMap(jobDataMap));\n                     }\n                 } catch (Exception e) {\n                     LOG.error(\"While executing task {}\", task, e);"},{"sha":"ba7cb92e297fe062683d02c7f49265da707d1a8a","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":23,"deletions":14,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -153,7 +153,8 @@ protected ProvisioningResult<UserTO> doCreate(\n             securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n         }\n \n-        Pair<String, List<PropagationStatus>> created = provisioningManager.create(before.getLeft(), nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> created = provisioningManager.create(\n+                before.getLeft(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterCreate(\n                 binder.returnUserTO(binder.getUserTO(created.getKey())), created.getRight(), before.getRight());\n@@ -206,8 +207,8 @@ protected ProvisioningResult<UserTO> doUpdate(\n                     securityChecks(effectiveRealms, before.getLeft().getRealm().getValue(), before.getLeft().getKey());\n         }\n \n-        Pair<UserUR, List<PropagationStatus>> updated =\n-                provisioningManager.update(before.getLeft(), nullPriorityAsync);\n+        Pair<UserUR, List<PropagationStatus>> updated = provisioningManager.update(\n+                before.getLeft(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         return afterUpdate(\n                 binder.returnUserTO(binder.getUserTO(updated.getLeft().getKey())),\n@@ -224,16 +225,19 @@ protected Pair<String, List<PropagationStatus>> setStatusOnWfAdapter(\n \n         switch (statusR.getType()) {\n             case SUSPEND:\n-                updated = provisioningManager.suspend(statusR, nullPriorityAsync);\n+                updated = provisioningManager.suspend(\n+                        statusR, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n                 break;\n \n             case REACTIVATE:\n-                updated = provisioningManager.reactivate(statusR, nullPriorityAsync);\n+                updated = provisioningManager.reactivate(\n+                        statusR, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n                 break;\n \n             case ACTIVATE:\n             default:\n-                updated = provisioningManager.activate(statusR, nullPriorityAsync);\n+                updated = provisioningManager.activate(\n+                        statusR, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n                 break;\n \n         }\n@@ -302,7 +306,7 @@ public void requestPasswordReset(final String username, final String securityAns\n             throw SyncopeClientException.build(ClientExceptionType.InvalidSecurityAnswer);\n         }\n \n-        provisioningManager.requestPasswordReset(user.getKey());\n+        provisioningManager.requestPasswordReset(user.getKey(), AuthContextUtils.getUsername(), REST_CONTEXT);\n     }\n \n     @PreAuthorize(\"isAnonymous() or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n@@ -312,7 +316,8 @@ public void confirmPasswordReset(final String token, final String password) {\n         if (user == null) {\n             throw new NotFoundException(\"User with token \" + token);\n         }\n-        provisioningManager.confirmPasswordReset(user.getKey(), token, password);\n+        provisioningManager.confirmPasswordReset(\n+                user.getKey(), token, password, AuthContextUtils.getUsername(), REST_CONTEXT);\n     }\n \n     @PreAuthorize(\"isAuthenticated() \"\n@@ -350,7 +355,8 @@ protected ProvisioningResult<UserTO> doDelete(\n             throw sce;\n         }\n \n-        List<PropagationStatus> statuses = provisioningManager.delete(before.getLeft().getKey(), nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.delete(\n+                before.getLeft().getKey(), nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         UserTO deletedTO;\n         if (userDAO.find(before.getLeft().getKey()) == null) {\n@@ -379,7 +385,8 @@ public UserTO unlink(final String key, final Collection<String> resources) {\n                 -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(resource).build()).\n                 collect(Collectors.toList()));\n \n-        return binder.returnUserTO(binder.getUserTO(provisioningManager.unlink(req)));\n+        return binder.returnUserTO(binder.getUserTO(\n+                provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT)));\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.USER_UPDATE + \"')\")\n@@ -398,7 +405,8 @@ public UserTO link(final String key, final Collection<String> resources) {\n                 -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(resource).build()).\n                 collect(Collectors.toList()));\n \n-        return binder.returnUserTO(binder.getUserTO(provisioningManager.link(req)));\n+        return binder.returnUserTO(binder.getUserTO(\n+                provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT)));\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.USER_UPDATE + \"')\")\n@@ -464,7 +472,8 @@ public ProvisioningResult<UserTO> deprovision(\n                 user.getRealm());\n         securityChecks(effectiveRealms, user.getRealm(), user.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.deprovision(key, resources, nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(\n+                key, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<UserTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.returnUserTO(binder.getUserTO(key)));\n@@ -488,8 +497,8 @@ public ProvisioningResult<UserTO> provision(\n                 user.getRealm());\n         securityChecks(effectiveRealms, user.getRealm(), user.getKey());\n \n-        List<PropagationStatus> statuses = provisioningManager.provision(key, changePwd, password, resources,\n-                nullPriorityAsync);\n+        List<PropagationStatus> statuses = provisioningManager.provision(\n+                key, changePwd, password, resources, nullPriorityAsync, AuthContextUtils.getUsername(), REST_CONTEXT);\n \n         ProvisioningResult<UserTO> result = new ProvisioningResult<>();\n         result.setEntity(binder.returnUserTO(binder.getUserTO(key)));"},{"sha":"98b1db2142322122b482b4bfc09a48189f203f4e","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/AddETagFilter.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FAddETagFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FAddETagFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FAddETagFilter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -26,7 +26,7 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.ext.Provider;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.to.AbstractAnnotatedBean;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n \n@@ -40,13 +40,13 @@ public class AddETagFilter implements ContainerResponseFilter {\n     @Override\n     public void filter(final ContainerRequestContext reqCtx, final ContainerResponseContext resCtx) throws IOException {\n         if (resCtx.getEntityTag() == null) {\n-            AbstractAnnotatedBean annotated = null;\n-            if (resCtx.getEntity() instanceof AbstractAnnotatedBean) {\n-                annotated = (AbstractAnnotatedBean) resCtx.getEntity();\n+            AnyTO annotated = null;\n+            if (resCtx.getEntity() instanceof AnyTO) {\n+                annotated = (AnyTO) resCtx.getEntity();\n             } else if (resCtx.getEntity() instanceof ProvisioningResult) {\n                 EntityTO entity = ((ProvisioningResult<?>) resCtx.getEntity()).getEntity();\n-                if (entity instanceof AbstractAnnotatedBean) {\n-                    annotated = (AbstractAnnotatedBean) entity;\n+                if (entity instanceof AnyTO) {\n+                    annotated = (AnyTO) entity;\n                 }\n             }\n             if (annotated != null) {"},{"sha":"a658cd9abe438bd65a2ec02db807f0fb68c13588","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Any.java","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,10 +18,35 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import java.util.Date;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import java.util.List;\n \n-public interface Any<P extends PlainAttr<?>> extends Attributable<P>, AnnotatedEntity {\n+public interface Any<P extends PlainAttr<?>> extends Attributable<P>, Entity {\n+\n+    Date getCreationDate();\n+\n+    String getCreator();\n+\n+    String getCreationContext();\n+\n+    Date getLastChangeDate();\n+\n+    String getLastModifier();\n+\n+    String getLastChangeContext();\n+\n+    void setCreationDate(Date creationDate);\n+\n+    void setCreator(String creator);\n+\n+    void setCreationContext(String context);\n+\n+    void setLastChangeDate(Date lastChangeDate);\n+\n+    void setLastModifier(String lastModifier);\n+\n+    void setLastChangeContext(String context);\n \n     AnyType getType();\n "},{"sha":"743c08b790a319360726338e86192c47739095e1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/ProvisioningTask.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -57,5 +57,4 @@ public interface ProvisioningTask extends SchedTask {\n     boolean isSyncStatus();\n \n     void setSyncStatus(boolean syncStatus);\n-\n }"},{"sha":"d0746cfdea66b6dc857384a1e626ccc84cc74b35","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAnnotatedEntity.java","status":"removed","additions":0,"deletions":112,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java?ref=bede4787b34f1b33965c6a41b0d67d9157685a29","patch":"@@ -1,112 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import java.util.Date;\n-import java.util.Optional;\n-\n-import javax.persistence.EntityListeners;\n-import javax.persistence.MappedSuperclass;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n-\n-/**\n- * Abstract wrapper for common system information.\n- */\n-@MappedSuperclass\n-@EntityListeners(value = AnnotatedEntityListener.class)\n-public abstract class AbstractAnnotatedEntity extends AbstractGeneratedKeyEntity implements AnnotatedEntity {\n-\n-    private static final long serialVersionUID = -4801685541488201219L;\n-\n-    /**\n-     * Username of the user that has created this profile.\n-     * Reference to existing user cannot be used: the creator can either be {@code admin} or was deleted.\n-     */\n-    private String creator;\n-\n-    /**\n-     * Creation date.\n-     */\n-    @Temporal(TemporalType.TIMESTAMP)\n-    private Date creationDate;\n-\n-    /**\n-     * Username of the user that has performed the last modification to this profile.\n-     * This field cannot be null: at creation time it needs to be initialized with the creator username.\n-     * The modifier can be the user itself if the last performed change was a self-modification.\n-     * Reference to existing user cannot be used: the creator can either be {@code admin} or was deleted.\n-     */\n-    private String lastModifier;\n-\n-    /**\n-     * Last change date.\n-     * This field cannot be null: at creation time it needs to be initialized with {@code creationDate} field value.\n-     */\n-    @Temporal(TemporalType.TIMESTAMP)\n-    private Date lastChangeDate;\n-\n-    @Override\n-    public String getCreator() {\n-        return creator;\n-    }\n-\n-    @Override\n-    public void setCreator(final String creator) {\n-        this.creator = creator;\n-    }\n-\n-    @Override\n-    public Date getCreationDate() {\n-        return Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-\n-    @Override\n-    public void setCreationDate(final Date creationDate) {\n-        this.creationDate = Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-\n-    @Override\n-    public String getLastModifier() {\n-        return lastModifier;\n-    }\n-\n-    @Override\n-    public void setLastModifier(final String lastModifier) {\n-        this.lastModifier = lastModifier;\n-    }\n-\n-    @Override\n-    public Date getLastChangeDate() {\n-        if (lastChangeDate != null) {\n-            return new Date(lastChangeDate.getTime());\n-        } else if (creationDate != null) {\n-            return new Date(creationDate.getTime());\n-        }\n-\n-        return null;\n-    }\n-\n-    @Override\n-    public void setLastChangeDate(final Date lastChangeDate) {\n-        this.lastChangeDate = Optional.ofNullable(lastChangeDate)\n-            .map(changeDate -> new Date(changeDate.getTime())).orElse(null);\n-    }\n-}"},{"sha":"a667e1974a694c5972dfe49fddd6c211f8447c7d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAny.java","status":"modified","additions":100,"deletions":1,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,27 +18,126 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import java.util.Date;\n+import java.util.Optional;\n import javax.persistence.Column;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.jpa.validation.entity.AnyCheck;\n \n @AnyCheck\n @MappedSuperclass\n-public abstract class AbstractAny<P extends PlainAttr<?>> extends AbstractAnnotatedEntity implements Any<P> {\n+public abstract class AbstractAny<P extends PlainAttr<?>> extends AbstractGeneratedKeyEntity implements Any<P> {\n \n     private static final long serialVersionUID = -2666540708092702810L;\n \n+    /**\n+     * Username of the user that has created the related instance.\n+     */\n+    private String creator;\n+\n+    /**\n+     * Creation date.\n+     */\n+    @Temporal(TemporalType.TIMESTAMP)\n+    private Date creationDate;\n+\n+    /**\n+     * Context information about create.\n+     */\n+    private String creationContext;\n+\n+    /**\n+     * Username of the user that has performed the last modification to the related instance.\n+     */\n+    private String lastModifier;\n+\n+    @Temporal(TemporalType.TIMESTAMP)\n+    private Date lastChangeDate;\n+\n+    /**\n+     * Context information about last update.\n+     */\n+    private String lastChangeContext;\n+\n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     private JPARealm realm;\n \n     @Column(nullable = true)\n     private String status;\n \n+    @Override\n+    public String getCreator() {\n+        return creator;\n+    }\n+\n+    @Override\n+    public void setCreator(final String creator) {\n+        this.creator = creator;\n+    }\n+\n+    @Override\n+    public Date getCreationDate() {\n+        return Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    @Override\n+    public void setCreationDate(final Date creationDate) {\n+        this.creationDate = Optional.ofNullable(creationDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    @Override\n+    public String getCreationContext() {\n+        return creationContext;\n+    }\n+\n+    @Override\n+    public void setCreationContext(final String creationContext) {\n+        this.creationContext = creationContext;\n+    }\n+\n+    @Override\n+    public String getLastModifier() {\n+        return lastModifier;\n+    }\n+\n+    @Override\n+    public void setLastModifier(final String lastModifier) {\n+        this.lastModifier = lastModifier;\n+    }\n+\n+    @Override\n+    public Date getLastChangeDate() {\n+        if (lastChangeDate != null) {\n+            return new Date(lastChangeDate.getTime());\n+        } else if (creationDate != null) {\n+            return new Date(creationDate.getTime());\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public void setLastChangeDate(final Date lastChangeDate) {\n+        this.lastChangeDate = Optional.ofNullable(lastChangeDate).map(date -> new Date(date.getTime())).orElse(null);\n+    }\n+\n+    @Override\n+    public String getLastChangeContext() {\n+        return lastChangeContext;\n+    }\n+\n+    @Override\n+    public void setLastChangeContext(final String lastChangeContext) {\n+        this.lastChangeContext = lastChangeContext;\n+    }\n+\n     @Override\n     public Realm getRealm() {\n         return realm;"},{"sha":"b3dfd3d213b3d7dfe5a00cea4b3dc656cf51471b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttr.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import javax.persistence.Column;\n-import javax.persistence.EntityListeners;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n@@ -37,7 +36,6 @@\n \n @MappedSuperclass\n @PlainAttrCheck\n-@EntityListeners(value = PlainAttrListener.class)\n public abstract class AbstractPlainAttr<O extends Any<?>> extends AbstractGeneratedKeyEntity implements PlainAttr<O> {\n \n     private static final long serialVersionUID = -9115431608821806124L;"},{"sha":"2009a78f09862c4d3aa18c7286962c61fe3071fc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractSysInfoListener.java","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java?ref=bede4787b34f1b33965c6a41b0d67d9157685a29","patch":"@@ -1,47 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import java.util.Date;\n-import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public abstract class AbstractSysInfoListener {\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(AnnotatedEntityListener.class);\n-\n-    protected void setSysInfoOnAnnotatedEntity(final AnnotatedEntity entity) {\n-        String username = AuthContextUtils.getUsername();\n-        LOG.debug(\"Set system properties for '{}'\", entity);\n-\n-        Date now = new Date();\n-\n-        if (entity.getCreationDate() == null) {\n-            LOG.debug(\"Set creation date '{}' and creator '{}' for '{}'\", now, username, entity);\n-            entity.setCreationDate(now);\n-            entity.setCreator(username);\n-        }\n-\n-        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, username, entity);\n-        entity.setLastModifier(username);\n-        entity.setLastChangeDate(now);\n-    }\n-}"},{"sha":"b6a47a601a4d68d78c94e5d30544de0914ca9b4a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AnnotatedEntityListener.java","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java?ref=bede4787b34f1b33965c6a41b0d67d9157685a29","patch":"@@ -1,32 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import javax.persistence.PrePersist;\n-import javax.persistence.PreUpdate;\n-import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n-\n-public class AnnotatedEntityListener extends AbstractSysInfoListener {\n-\n-    @PrePersist\n-    @PreUpdate\n-    public void setSysInfo(final AnnotatedEntity entity) {\n-        setSysInfoOnAnnotatedEntity(entity);\n-    }\n-}"},{"sha":"a3aa93a52a706f5aaa3583123628be0b7a3227c3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PlainAttrListener.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bede4787b34f1b33965c6a41b0d67d9157685a29/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java?ref=bede4787b34f1b33965c6a41b0d67d9157685a29","patch":"@@ -1,35 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import javax.persistence.PrePersist;\n-import javax.persistence.PreUpdate;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-\n-public class PlainAttrListener extends AbstractSysInfoListener {\n-\n-    @PrePersist\n-    @PreUpdate\n-    public void setSysInfoOnOwner(final PlainAttr<?> plainAttr) {\n-        if (plainAttr.getOwner() != null) {\n-            LOG.debug(\"Set system properties for owner of '{}'\", plainAttr);\n-            setSysInfoOnAnnotatedEntity(plainAttr.getOwner());\n-        }\n-    }\n-}"},{"sha":"acde817cbfad0d6d7fab97030e58a7200f273585","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/EntityValidationListener.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FEntityValidationListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FEntityValidationListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FEntityValidationListener.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -26,7 +26,6 @@\n import org.apache.commons.lang3.ClassUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.DynMembership;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n@@ -56,7 +55,6 @@ public void validate(final Object object) {\n             Class<?> entityInt = null;\n             for (Class<?> interf : ClassUtils.getAllInterfaces(object.getClass())) {\n                 if (!Entity.class.equals(interf)\n-                        && !AnnotatedEntity.class.equals(interf)\n                         && !ProvidedKeyEntity.class.equals(interf)\n                         && !Schema.class.equals(interf)\n                         && !Task.class.equals(interf)\n@@ -71,7 +69,7 @@ public void validate(final Object object) {\n             }\n \n             throw new InvalidEntityException(entityInt == null\n-                ? \"Entity\" : entityInt.getSimpleName(), violations);\n+                    ? \"Entity\" : entityInt.getSimpleName(), violations);\n         }\n     }\n }"},{"sha":"f63950322f1ca7738bc4ed4dbce6b5fa436a00b0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -25,7 +25,6 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n \n-import java.util.Date;\n import java.util.List;\n import java.util.Objects;\n import java.util.UUID;\n@@ -355,27 +354,4 @@ public void issueSYNCOPE800() {\n         list = userDAO.findByDerAttrValue(derSchemaDAO.find(\"kprefix\"), 'k' + firstname, false);\n         assertEquals(1, list.size());\n     }\n-\n-    @Test\n-    public void issueSYNCOPE1016() {\n-        User user = userDAO.findByUsername(\"rossini\");\n-        Date initial = user.getLastChangeDate();\n-        assertNotNull(initial);\n-\n-        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n-        attr.setOwner(user);\n-        attr.setSchema(plainSchemaDAO.find(\"obscure\"));\n-        attr.add(\"testvalue\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-        user.add(attr);\n-\n-        userDAO.save(user);\n-\n-        entityManager().flush();\n-\n-        user = userDAO.findByUsername(\"rossini\");\n-        Date afterwards = user.getLastChangeDate();\n-        assertNotNull(afterwards);\n-\n-        assertTrue(afterwards.after(initial));\n-    }\n }"},{"sha":"bb4074105131253c7e9ad19e798cb9c9eb8adb3b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/AnyObjectProvisioningManager.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAnyObjectProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -29,7 +29,12 @@\n public interface AnyObjectProvisioningManager extends ProvisioningManager<AnyObjectCR, AnyObjectUR> {\n \n     Pair<String, List<PropagationStatus>> create(\n-            AnyObjectCR anyObjectCR, Set<String> excludedResources, boolean nullPriorityAsync);\n+            AnyObjectCR anyObjectCR,\n+            Set<String> excludedResources,\n+            boolean nullPriorityAsync,\n+            String creator,\n+            String context);\n \n-    List<PropagationStatus> provision(String key, Collection<String> resources, boolean nullPriorityAsync);\n+    List<PropagationStatus> provision(\n+            String key, Collection<String> resources, boolean nullPriorityAsync, String updater, String context);\n }"},{"sha":"2209b885a47d4d75af60be71a0b04e8f91d8a919","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/GroupProvisioningManager.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FGroupProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -33,7 +33,10 @@ Pair<String, List<PropagationStatus>> create(\n             GroupCR groupCR,\n             Map<String, String> groupOwnerMap,\n             Set<String> excludedResources,\n-            boolean nullPriorityAsync);\n+            boolean nullPriorityAsync,\n+            String creator,\n+            String context);\n \n-    List<PropagationStatus> provision(String key, Collection<String> resources, boolean nullPriorityAsync);\n+    List<PropagationStatus> provision(\n+            String key, Collection<String> resources, boolean nullPriorityAsync, String updater, String context);\n }"},{"sha":"43d11fe7650616bf2b7c9c8f03faced818cd653d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ProvisioningManager.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -28,19 +28,23 @@\n \n public interface ProvisioningManager<C extends AnyCR, U extends AnyUR> {\n \n-    Pair<String, List<PropagationStatus>> create(C anyCR, boolean nullPriorityAsync);\n+    Pair<String, List<PropagationStatus>> create(\n+            C anyCR, boolean nullPriorityAsync, String creator, String context);\n \n-    Pair<U, List<PropagationStatus>> update(U anyUR, boolean nullPriorityAsync);\n+    Pair<U, List<PropagationStatus>> update(U anyUR, boolean nullPriorityAsync, String updater, String context);\n \n-    Pair<U, List<PropagationStatus>> update(U anyUR, Set<String> excludedResources, boolean nullPriorityAsync);\n+    Pair<U, List<PropagationStatus>> update(\n+            U anyUR, Set<String> excludedResources, boolean nullPriorityAsync, String updater, String context);\n \n-    List<PropagationStatus> delete(String anyKey, boolean nullPriorityAsync);\n+    String unlink(U anyUR, String updater, String context);\n \n-    List<PropagationStatus> delete(String anyKey, Set<String> excludedResources, boolean nullPriorityAsync);\n+    String link(U anyUR, String updater, String context);\n \n-    String unlink(U anyUR);\n+    List<PropagationStatus> deprovision(\n+            String anyKey, Collection<String> resources, boolean nullPriorityAsync, String updater, String context);\n \n-    String link(U anyUR);\n+    List<PropagationStatus> delete(String anyKey, boolean nullPriorityAsync, String eraser, String context);\n \n-    List<PropagationStatus> deprovision(String anyKey, Collection<String> resources, boolean nullPriorityAsync);\n+    List<PropagationStatus> delete(\n+            String anyKey, Set<String> excludedResources, boolean nullPriorityAsync, String eraser, String context);\n }"},{"sha":"44502eafcd5ffef481049e69c05a179c09a1e805","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/UserProvisioningManager.java","status":"modified","additions":26,"deletions":14,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -30,33 +30,45 @@\n \n public interface UserProvisioningManager extends ProvisioningManager<UserCR, UserUR> {\n \n-    Pair<String, List<PropagationStatus>> activate(StatusR statusR, boolean nullPriorityAsync);\n-\n-    Pair<String, List<PropagationStatus>> reactivate(StatusR statusR, boolean nullPriorityAsync);\n-\n-    Pair<String, List<PropagationStatus>> suspend(StatusR statusR, boolean nullPriorityAsync);\n-\n-    void internalSuspend(String key);\n-\n     Pair<String, List<PropagationStatus>> create(\n             UserCR userCR,\n             boolean disablePwdPolicyCheck,\n             Boolean enabled,\n             Set<String> excludedResources,\n-            boolean nullPriorityAsync);\n+            boolean nullPriorityAsync,\n+            String creator,\n+            String context);\n \n     Pair<UserUR, List<PropagationStatus>> update(\n             UserUR userUR,\n             ProvisioningReport result,\n             Boolean enabled,\n             Set<String> excludedResources,\n-            boolean nullPriorityAsync);\n+            boolean nullPriorityAsync,\n+            String updater,\n+            String context);\n \n-    void requestPasswordReset(String key);\n+    Pair<String, List<PropagationStatus>> activate(\n+            StatusR statusR, boolean nullPriorityAsync, String updater, String context);\n \n-    void confirmPasswordReset(String key, String token, String password);\n+    Pair<String, List<PropagationStatus>> reactivate(\n+            StatusR statusR, boolean nullPriorityAsync, String updater, String context);\n \n-    List<PropagationStatus> provision(\n-            String key, boolean changePwd, String password, Collection<String> resources, boolean nullPriorityAsync);\n+    Pair<String, List<PropagationStatus>> suspend(\n+            StatusR statusR, boolean nullPriorityAsync, String updater, String context);\n \n+    void internalSuspend(String key, String updater, String context);\n+\n+    void requestPasswordReset(String key, String updater, String context);\n+\n+    void confirmPasswordReset(String key, String token, String password, String updater, String context);\n+\n+    List<PropagationStatus> provision(\n+            String key,\n+            boolean changePwd,\n+            String password,\n+            Collection<String> resources,\n+            boolean nullPriorityAsync,\n+            String updater,\n+            String context);\n }"},{"sha":"d03b45ef9a6736fe2b1c48703001d506de0fd81d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -37,6 +37,8 @@\n \n     private ConflictResolutionAction conflictResolutionAction;\n \n+    private String executor;\n+\n     private final List<A> actions = new ArrayList<>();\n \n     public ProvisioningProfile(final Connector connector, final T task) {\n@@ -72,6 +74,14 @@ public void setConflictResolutionAction(final ConflictResolutionAction conflictR\n         this.conflictResolutionAction = conflictResolutionAction;\n     }\n \n+    public String getExecutor() {\n+        return executor;\n+    }\n+\n+    public void setExecutor(final String executor) {\n+        this.executor = executor;\n+    }\n+\n     public List<A> getActions() {\n         return actions;\n     }"},{"sha":"ac2414c6bb33aa8511c1cf3e59ca756990f92030","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":50,"deletions":26,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -42,13 +42,9 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n-import javax.annotation.Resource;\n \n public class DefaultAnyObjectProvisioningManager implements AnyObjectProvisioningManager {\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n     @Autowired\n     protected AnyObjectWorkflowAdapter awfAdapter;\n \n@@ -66,17 +62,24 @@ public class DefaultAnyObjectProvisioningManager implements AnyObjectProvisionin\n \n     @Override\n     public Pair<String, List<PropagationStatus>> create(\n-            final AnyObjectCR anyObjectCR, final boolean nullPriorityAsync) {\n+            final AnyObjectCR anyObjectCR,\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n-        return create(anyObjectCR, Set.of(), nullPriorityAsync);\n+        return create(anyObjectCR, Set.of(), nullPriorityAsync, creator, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<String, List<PropagationStatus>> create(\n-            final AnyObjectCR anyObjectCR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final AnyObjectCR anyObjectCR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n-        WorkflowResult<String> created = awfAdapter.create(anyObjectCR);\n+        WorkflowResult<String> created = awfAdapter.create(anyObjectCR, creator, context);\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getCreateTasks(\n                 AnyTypeKind.ANY_OBJECT,\n@@ -85,24 +88,31 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 anyObjectCR.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, creator);\n \n         return Pair.of(created.getResult(), propagationReporter.getStatuses());\n     }\n \n     @Override\n     public Pair<AnyObjectUR, List<PropagationStatus>> update(\n-            final AnyObjectUR anyObjectUR, final boolean nullPriorityAsync) {\n+            final AnyObjectUR anyObjectUR,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n-        return update(anyObjectUR, Set.of(), nullPriorityAsync);\n+        return update(anyObjectUR, Set.of(), nullPriorityAsync, updater, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<AnyObjectUR, List<PropagationStatus>> update(\n-            final AnyObjectUR anyObjectUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final AnyObjectUR anyObjectUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n-        WorkflowResult<AnyObjectUR> updated = awfAdapter.update(anyObjectUR);\n+        WorkflowResult<AnyObjectUR> updated = awfAdapter.update(anyObjectUR, updater, context);\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUpdateTasks(\n                 AnyTypeKind.ANY_OBJECT,\n@@ -113,20 +123,26 @@ public Pair<AnyObjectUR, List<PropagationStatus>> update(\n                 null,\n                 anyObjectUR.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return Pair.of(updated.getResult(), propagationReporter.getStatuses());\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n-        return delete(key, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String key, final boolean nullPriorityAsync, final String eraser, final String context) {\n+\n+        return delete(key, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.set(ResourceOperation.DELETE, anyObjectDAO.findAllResourceKeys(key));\n@@ -142,7 +158,7 @@ public List<PropagationStatus> delete(\n                 propByRes,\n                 null,\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, eraser);\n \n         try {\n             awfAdapter.delete(key);\n@@ -154,18 +170,22 @@ public List<PropagationStatus> delete(\n     }\n \n     @Override\n-    public String unlink(final AnyObjectUR anyObjectUR) {\n-        return awfAdapter.update(anyObjectUR).getResult().getKey();\n+    public String unlink(final AnyObjectUR anyObjectUR, final String updater, final String context) {\n+        return awfAdapter.update(anyObjectUR, updater, context).getResult().getKey();\n     }\n \n     @Override\n-    public String link(final AnyObjectUR anyObjectUR) {\n-        return awfAdapter.update(anyObjectUR).getResult().getKey();\n+    public String link(final AnyObjectUR anyObjectUR, final String updater, final String context) {\n+        return awfAdapter.update(anyObjectUR, updater, context).getResult().getKey();\n     }\n \n     @Override\n     public List<PropagationStatus> provision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.addAll(ResourceOperation.UPDATE, resources);\n@@ -179,14 +199,18 @@ public List<PropagationStatus> provision(\n                 null,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n     public List<PropagationStatus> deprovision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.addAll(ResourceOperation.DELETE, resources);\n@@ -199,7 +223,7 @@ public List<PropagationStatus> deprovision(\n                 anyObjectDAO.findAllResourceKeys(key).stream().\n                         filter(resource -> !resources.contains(resource)).\n                         collect(Collectors.toList()));\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }"},{"sha":"fd749384626386c73003a32e877906b56003af72","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":48,"deletions":30,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -45,13 +45,9 @@\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n-import javax.annotation.Resource;\n \n public class DefaultGroupProvisioningManager implements GroupProvisioningManager {\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n     @Autowired\n     protected GroupWorkflowAdapter gwfAdapter;\n \n@@ -71,8 +67,10 @@ public class DefaultGroupProvisioningManager implements GroupProvisioningManager\n     protected VirAttrHandler virtAttrHandler;\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> create(final GroupCR groupCR, final boolean nullPriorityAsync) {\n-        WorkflowResult<String> created = gwfAdapter.create(groupCR);\n+    public Pair<String, List<PropagationStatus>> create(\n+            final GroupCR groupCR, final boolean nullPriorityAsync, final String creator, final String context) {\n+\n+        WorkflowResult<String> created = gwfAdapter.create(groupCR, creator, context);\n \n         List<PropagationTaskInfo> tasks = propagationManager.getCreateTasks(\n                 AnyTypeKind.GROUP,\n@@ -81,7 +79,7 @@ public Pair<String, List<PropagationStatus>> create(final GroupCR groupCR, final\n                 created.getPropByRes(),\n                 groupCR.getVirAttrs(),\n                 Set.of());\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, creator);\n \n         return Pair.of(created.getResult(), propagationReporter.getStatuses());\n     }\n@@ -92,9 +90,11 @@ public Pair<String, List<PropagationStatus>> create(\n             final GroupCR groupCR,\n             final Map<String, String> groupOwnerMap,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n-        WorkflowResult<String> created = gwfAdapter.create(groupCR);\n+        WorkflowResult<String> created = gwfAdapter.create(groupCR, creator, context);\n \n         // see ConnObjectUtils#getAnyTOFromConnObject for GroupOwnerSchema\n         groupCR.getPlainAttr(StringUtils.EMPTY).\n@@ -107,24 +107,28 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByRes(),\n                 groupCR.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, creator);\n \n         return Pair.of(created.getResult(), propagationReporter.getStatuses());\n     }\n \n     @Override\n     public Pair<GroupUR, List<PropagationStatus>> update(\n-            final GroupUR groupUR, final boolean nullPriorityAsync) {\n+            final GroupUR groupUR, final boolean nullPriorityAsync, final String updater, final String context) {\n \n-        return update(groupUR, Set.of(), nullPriorityAsync);\n+        return update(groupUR, Set.of(), nullPriorityAsync, updater, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public Pair<GroupUR, List<PropagationStatus>> update(\n-            final GroupUR groupUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final GroupUR groupUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n-        WorkflowResult<GroupUR> updated = gwfAdapter.update(groupUR);\n+        WorkflowResult<GroupUR> updated = gwfAdapter.update(groupUR, updater, context);\n \n         List<PropagationTaskInfo> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.GROUP,\n@@ -135,20 +139,26 @@ public Pair<GroupUR, List<PropagationStatus>> update(\n                 null,\n                 groupUR.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync, updater);\n \n         return Pair.of(updated.getResult(), propagationReporter.getStatuses());\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n-        return delete(key, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String key, final boolean nullPriorityAsync, final String eraser, final String context) {\n+\n+        return delete(key, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         List<PropagationTaskInfo> taskInfos = new ArrayList<>();\n \n@@ -179,21 +189,30 @@ public List<PropagationStatus> delete(\n                 null,\n                 null));\n \n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, eraser);\n \n         gwfAdapter.delete(key);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public String unlink(final GroupUR groupUR) {\n-        return gwfAdapter.update(groupUR).getResult().getKey();\n+    public String link(final GroupUR groupUR, final String updater, final String context) {\n+        return gwfAdapter.update(groupUR, updater, context).getResult().getKey();\n+    }\n+\n+    @Override\n+    public String unlink(final GroupUR groupUR, final String updater, final String context) {\n+        return gwfAdapter.update(groupUR, updater, context).getResult().getKey();\n     }\n \n     @Override\n     public List<PropagationStatus> provision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.addAll(ResourceOperation.UPDATE, resources);\n@@ -207,14 +226,18 @@ public List<PropagationStatus> provision(\n                 null,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n     public List<PropagationStatus> deprovision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.addAll(ResourceOperation.DELETE, resources);\n@@ -227,13 +250,8 @@ public List<PropagationStatus> deprovision(\n                 groupDAO.findAllResourceKeys(key).stream().\n                         filter(resource -> !resources.contains(resource)).\n                         collect(Collectors.toList()));\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n-\n-    @Override\n-    public String link(final GroupUR groupUR) {\n-        return gwfAdapter.update(groupUR).getResult().getKey();\n-    }\n }"},{"sha":"dd3a2ef69579a8540b8931e8a60493ec54c1982e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":84,"deletions":58,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.StatusRType;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n@@ -53,15 +52,10 @@\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n-import javax.annotation.Resource;\n-\n public class DefaultUserProvisioningManager implements UserProvisioningManager {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(UserProvisioningManager.class);\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n     @Autowired\n     protected UserWorkflowAdapter uwfAdapter;\n \n@@ -78,8 +72,10 @@ public class DefaultUserProvisioningManager implements UserProvisioningManager {\n     protected UserDAO userDAO;\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> create(final UserCR userCR, final boolean nullPriorityAsync) {\n-        return create(userCR, false, null, Set.of(), nullPriorityAsync);\n+    public Pair<String, List<PropagationStatus>> create(\n+            final UserCR userCR, final boolean nullPriorityAsync, final String creator, final String context) {\n+\n+        return create(userCR, false, null, Set.of(), nullPriorityAsync, creator, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n@@ -89,9 +85,12 @@ public Pair<String, List<PropagationStatus>> create(\n             final boolean disablePwdPolicyCheck,\n             final Boolean enabled,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n-        UserWorkflowResult<Pair<String, Boolean>> created = uwfAdapter.create(userCR, disablePwdPolicyCheck, enabled);\n+        UserWorkflowResult<Pair<String, Boolean>> created =\n+                uwfAdapter.create(userCR, disablePwdPolicyCheck, enabled, creator, context);\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUserCreateTasks(\n                 created.getResult().getLeft(),\n@@ -101,26 +100,32 @@ public Pair<String, List<PropagationStatus>> create(\n                 created.getPropByLinkedAccount(),\n                 userCR.getVirAttrs(),\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, creator);\n \n         return Pair.of(created.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override\n-    public Pair<UserUR, List<PropagationStatus>> update(final UserUR userUR, final boolean nullPriorityAsync) {\n-        UserWorkflowResult<Pair<UserUR, Boolean>> updated = uwfAdapter.update(userUR);\n+    public Pair<UserUR, List<PropagationStatus>> update(\n+            final UserUR userUR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n+        UserWorkflowResult<Pair<UserUR, Boolean>> updated = uwfAdapter.update(userUR, updater, context);\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUserUpdateTasks(updated);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return Pair.of(updated.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override\n     public Pair<UserUR, List<PropagationStatus>> update(\n-            final UserUR userUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final UserUR userUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n-        return update(userUR, new ProvisioningReport(), null, excludedResources, nullPriorityAsync);\n+        return update(userUR, new ProvisioningReport(), null, excludedResources, nullPriorityAsync, updater, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n@@ -130,11 +135,13 @@ public Pair<UserUR, List<PropagationStatus>> update(\n             final ProvisioningReport result,\n             final Boolean enabled,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         UserWorkflowResult<Pair<UserUR, Boolean>> updated;\n         try {\n-            updated = uwfAdapter.update(userUR);\n+            updated = uwfAdapter.update(userUR, updater, context);\n         } catch (Exception e) {\n             LOG.error(\"Update of user {} failed, trying to pull its status anyway (if configured)\",\n                     userUR.getKey(), e);\n@@ -154,11 +161,11 @@ public Pair<UserUR, List<PropagationStatus>> update(\n \n             UserWorkflowResult<String> enableUpdate = null;\n             if (user.isSuspended() == null) {\n-                enableUpdate = uwfAdapter.activate(userUR.getKey(), null);\n+                enableUpdate = uwfAdapter.activate(userUR.getKey(), null, updater, context);\n             } else if (enabled && user.isSuspended()) {\n-                enableUpdate = uwfAdapter.reactivate(userUR.getKey());\n+                enableUpdate = uwfAdapter.reactivate(userUR.getKey(), updater, context);\n             } else if (!enabled && !user.isSuspended()) {\n-                enableUpdate = uwfAdapter.suspend(userUR.getKey());\n+                enableUpdate = uwfAdapter.suspend(userUR.getKey(), updater, context);\n             }\n \n             if (enableUpdate != null) {\n@@ -172,20 +179,26 @@ public Pair<UserUR, List<PropagationStatus>> update(\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUserUpdateTasks(\n                 updated, updated.getResult().getLeft().getPassword() != null, excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return Pair.of(updated.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n-        return delete(key, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String key, final boolean nullPriorityAsync, final String eraser, final String context) {\n+\n+        return delete(key, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceKeys(key));\n@@ -205,56 +218,60 @@ public List<PropagationStatus> delete(\n                 propByRes,\n                 propByLinkedAccount,\n                 excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, eraser);\n \n-        try {\n-            uwfAdapter.delete(key);\n-        } catch (PropagationException e) {\n-            throw e;\n-        }\n+        uwfAdapter.delete(key);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public String unlink(final UserUR userUR) {\n-        UserWorkflowResult<Pair<UserUR, Boolean>> updated = uwfAdapter.update(userUR);\n+    public String unlink(final UserUR userUR, final String updater, final String context) {\n+        UserWorkflowResult<Pair<UserUR, Boolean>> updated = uwfAdapter.update(userUR, updater, context);\n         return updated.getResult().getLeft().getKey();\n     }\n \n     @Override\n-    public String link(final UserUR userUR) {\n-        return uwfAdapter.update(userUR).getResult().getLeft().getKey();\n+    public String link(final UserUR userUR, final String updater, final String context) {\n+        return uwfAdapter.update(userUR, updater, context).getResult().getLeft().getKey();\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> activate(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> activate(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         UserWorkflowResult<String> updated = statusR.isOnSyncope()\n-                ? uwfAdapter.activate(statusR.getKey(), statusR.getToken())\n+                ? uwfAdapter.activate(statusR.getKey(), statusR.getToken(), updater, context)\n                 : new UserWorkflowResult<>(statusR.getKey(), null, null, statusR.getType().name().toLowerCase());\n \n-        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync));\n+        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync, updater));\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> reactivate(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> reactivate(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         UserWorkflowResult<String> updated = statusR.isOnSyncope()\n-                ? uwfAdapter.reactivate(statusR.getKey())\n+                ? uwfAdapter.reactivate(statusR.getKey(), updater, context)\n                 : new UserWorkflowResult<>(statusR.getKey(), null, null, statusR.getType().name().toLowerCase());\n \n-        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync));\n+        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync, updater));\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> suspend(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> suspend(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         UserWorkflowResult<String> updated = statusR.isOnSyncope()\n-                ? uwfAdapter.suspend(statusR.getKey())\n+                ? uwfAdapter.suspend(statusR.getKey(), updater, context)\n                 : new UserWorkflowResult<>(statusR.getKey(), null, null, statusR.getType().name().toLowerCase());\n \n-        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync));\n+        return Pair.of(updated.getResult(), propagateStatus(statusR, nullPriorityAsync, updater));\n     }\n \n-    protected List<PropagationStatus> propagateStatus(final StatusR statusR, final boolean nullPriorityAsync) {\n+    protected List<PropagationStatus> propagateStatus(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater) {\n+\n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.addAll(ResourceOperation.UPDATE, statusR.getResources());\n         List<PropagationTaskInfo> taskInfos = propagationManager.getUpdateTasks(\n@@ -266,14 +283,14 @@ protected List<PropagationStatus> propagateStatus(final StatusR statusR, final b\n                 null,\n                 null,\n                 null);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public void internalSuspend(final String key) {\n-        Pair<UserWorkflowResult<String>, Boolean> updated = uwfAdapter.internalSuspend(key);\n+    public void internalSuspend(final String key, final String updater, final String context) {\n+        Pair<UserWorkflowResult<String>, Boolean> updated = uwfAdapter.internalSuspend(key, updater, context);\n \n         // propagate suspension if and only if it is required by policy\n         if (updated != null && updated.getRight()) {\n@@ -285,7 +302,7 @@ public void internalSuspend(final String key) {\n                     updated.getLeft().getPropByRes(),\n                     updated.getLeft().getPropByLinkedAccount(),\n                     updated.getLeft().getPerformedTasks()));\n-            taskExecutor.execute(taskInfos, false, adminUser);\n+            taskExecutor.execute(taskInfos, false, updater);\n         }\n     }\n \n@@ -295,7 +312,9 @@ public List<PropagationStatus> provision(\n             final boolean changePwd,\n             final String password,\n             final Collection<String> resources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         UserUR userUR = new UserUR();\n         userUR.setKey(key);\n@@ -318,14 +337,18 @@ public List<PropagationStatus> provision(\n                 Pair.of(userUR, (Boolean) null), propByRes, null, \"update\");\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUserUpdateTasks(wfResult, changePwd, null);\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n     public List<PropagationStatus> deprovision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n         propByRes.set(ResourceOperation.DELETE, resources);\n@@ -345,21 +368,24 @@ public List<PropagationStatus> deprovision(\n                 userDAO.findAllResourceKeys(key).stream().\n                         filter(resource -> !resources.contains(resource)).\n                         collect(Collectors.toList()));\n-        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, adminUser);\n+        PropagationReporter propagationReporter = taskExecutor.execute(taskInfos, nullPriorityAsync, updater);\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public void requestPasswordReset(final String key) {\n-        uwfAdapter.requestPasswordReset(key);\n+    public void requestPasswordReset(final String key, final String updater, final String context) {\n+        uwfAdapter.requestPasswordReset(key, updater, context);\n     }\n \n     @Override\n-    public void confirmPasswordReset(final String key, final String token, final String password) {\n-        UserWorkflowResult<Pair<UserUR, Boolean>> updated = uwfAdapter.confirmPasswordReset(key, token, password);\n+    public void confirmPasswordReset(\n+            final String key, final String token, final String password, final String updater, final String context) {\n+\n+        UserWorkflowResult<Pair<UserUR, Boolean>> updated =\n+                uwfAdapter.confirmPasswordReset(key, token, password, updater, context);\n \n         List<PropagationTaskInfo> taskInfos = propagationManager.getUserUpdateTasks(updated);\n-        taskExecutor.execute(taskInfos, false, adminUser);\n+        taskExecutor.execute(taskInfos, false, updater);\n     }\n }"},{"sha":"3f2b43b8bc74892f66c5bef750d9c53c23a7acb0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -76,13 +76,17 @@ public AnyObjectTO getAnyObjectTO(final String key) {\n     @Override\n     public AnyObjectTO getAnyObjectTO(final AnyObject anyObject, final boolean details) {\n         AnyObjectTO anyObjectTO = new AnyObjectTO();\n+\n+        anyObjectTO.setCreator(anyObject.getCreator());\n+        anyObjectTO.setCreationDate(anyObject.getCreationDate());\n+        anyObjectTO.setCreationContext(anyObject.getCreationContext());\n+        anyObjectTO.setLastModifier(anyObject.getLastModifier());\n+        anyObjectTO.setLastChangeDate(anyObject.getLastChangeDate());\n+        anyObjectTO.setLastChangeContext(anyObject.getLastChangeContext());\n+\n         anyObjectTO.setKey(anyObject.getKey());\n         anyObjectTO.setName(anyObject.getName());\n         anyObjectTO.setType(anyObject.getType().getKey());\n-        anyObjectTO.setCreationDate(anyObject.getCreationDate());\n-        anyObjectTO.setCreator(anyObject.getCreator());\n-        anyObjectTO.setLastChangeDate(anyObject.getLastChangeDate());\n-        anyObjectTO.setLastModifier(anyObject.getLastModifier());\n         anyObjectTO.setStatus(anyObject.getStatus());\n \n         Map<VirSchema, List<String>> virAttrValues = details"},{"sha":"402a7e130aae74964a6db449be4c09015dfd2526","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -329,15 +329,16 @@ public TypeExtensionTO getTypeExtensionTO(final TypeExtension typeExt) {\n     public GroupTO getGroupTO(final Group group, final boolean details) {\n         GroupTO groupTO = new GroupTO();\n \n-        // set sys info\n         groupTO.setCreator(group.getCreator());\n         groupTO.setCreationDate(group.getCreationDate());\n+        groupTO.setCreationContext(group.getCreationContext());\n         groupTO.setLastModifier(group.getLastModifier());\n         groupTO.setLastChangeDate(group.getLastChangeDate());\n-        groupTO.setStatus(group.getStatus());\n+        groupTO.setLastChangeContext(group.getLastChangeContext());\n \n         groupTO.setKey(group.getKey());\n         groupTO.setName(group.getName());\n+        groupTO.setStatus(group.getStatus());\n \n         if (group.getUserOwner() != null) {\n             groupTO.setUserOwner(group.getUserOwner().getKey());"},{"sha":"d760612700749ad1250641bd71b810bcb138967c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":14,"deletions":9,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -709,23 +709,28 @@ public LinkedAccountTO getLinkedAccountTO(final LinkedAccount account) {\n     @Override\n     public UserTO getUserTO(final User user, final boolean details) {\n         UserTO userTO = new UserTO();\n-        userTO.setKey(user.getKey());\n-        userTO.setUsername(user.getUsername());\n-        userTO.setPassword(user.getPassword());\n-        userTO.setType(user.getType().getKey());\n-        userTO.setCreationDate(user.getCreationDate());\n+\n         userTO.setCreator(user.getCreator());\n-        userTO.setLastChangeDate(user.getLastChangeDate());\n+        userTO.setCreationDate(user.getCreationDate());\n+        userTO.setCreationContext(user.getCreationContext());\n         userTO.setLastModifier(user.getLastModifier());\n-        userTO.setStatus(user.getStatus());\n-        userTO.setSuspended(BooleanUtils.isTrue(user.isSuspended()));\n+        userTO.setLastChangeDate(user.getLastChangeDate());\n+        userTO.setLastChangeContext(user.getLastChangeContext());\n+\n         userTO.setChangePwdDate(user.getChangePwdDate());\n         userTO.setFailedLogins(user.getFailedLogins());\n         userTO.setLastLoginDate(user.getLastLoginDate());\n-        userTO.setMustChangePassword(user.isMustChangePassword());\n         userTO.setToken(user.getToken());\n         userTO.setTokenExpireTime(user.getTokenExpireTime());\n \n+        userTO.setKey(user.getKey());\n+        userTO.setUsername(user.getUsername());\n+        userTO.setPassword(user.getPassword());\n+        userTO.setType(user.getType().getKey());\n+        userTO.setStatus(user.getStatus());\n+        userTO.setSuspended(BooleanUtils.isTrue(user.isSuspended()));\n+        userTO.setMustChangePassword(user.isMustChangePassword());\n+\n         if (user.getSecurityQuestion() != null) {\n             userTO.setSecurityQuestion(user.getSecurityQuestion().getKey());\n         }"},{"sha":"bdc510ffcec98696fa03cc2eeccabd59c8c33c8a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import java.util.Date;\n+import java.util.Optional;\n import java.util.concurrent.atomic.AtomicReference;\n+import javax.annotation.Resource;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n@@ -43,6 +45,9 @@ public abstract class AbstractSchedTaskJobDelegate implements SchedTaskJobDelega\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SchedTaskJobDelegate.class);\n \n+    @Resource(name = \"adminUser\")\n+    protected String adminUser;\n+\n     /**\n      * The actual task to be executed.\n      */\n@@ -111,7 +116,8 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n             return;\n         }\n \n-        String executor = context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY);\n+        String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n+                orElse(adminUser);\n         TaskExec execution = entityFactory.newEntity(TaskExec.class);\n         execution.setStart(new Date());\n         execution.setTask(task);\n@@ -122,7 +128,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         AuditElements.Result result;\n \n         try {\n-            execution.setMessage(doExecute(dryRun));\n+            execution.setMessage(doExecute(dryRun, executor));\n             execution.setStatus(TaskJob.Status.SUCCESS.name());\n             result = AuditElements.Result.SUCCESS;\n         } catch (JobExecutionException e) {\n@@ -166,10 +172,11 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n      * The actual execution, delegated to child classes.\n      *\n      * @param dryRun whether to actually touch the data\n+     * @param executor the user executing this task\n      * @return the task execution status to be set\n      * @throws JobExecutionException if anything goes wrong\n      */\n-    protected abstract String doExecute(boolean dryRun) throws JobExecutionException;\n+    protected abstract String doExecute(boolean dryRun, String executor) throws JobExecutionException;\n \n     /**\n      * Template method to determine whether this job's task execution has to be persisted or not.\n@@ -180,5 +187,4 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n     protected boolean hasToBeRegistered(final TaskExec execution) {\n         return false;\n     }\n-\n }"},{"sha":"0ae54fcbe4d2905c1b427d613db4a7f91b2c6f03","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredAccessTokenCleanup.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -28,13 +28,12 @@ public class ExpiredAccessTokenCleanup extends AbstractSchedTaskJobDelegate {\n     private AccessTokenDAO accessTokenDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         if (!dryRun) {\n             int deleted = accessTokenDAO.deleteExpired();\n             LOG.debug(\"Successfully deleted {} expired access tokens\", deleted);\n         }\n \n         return \"SUCCESS\";\n     }\n-\n }"},{"sha":"74379e4c0b20713d90df084aec6c6a166ae96a56","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredBatchCleanup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -28,7 +28,7 @@ public class ExpiredBatchCleanup extends AbstractSchedTaskJobDelegate {\n     private BatchDAO batchDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         if (!dryRun) {\n             int deleted = batchDAO.deleteExpired();\n             LOG.debug(\"Successfully deleted {} expired batch requests\", deleted);"},{"sha":"f7b12f2f98e820202711ec91321a5a1aeed1c528","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/GroupMemberProvisionTaskJobDelegate.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -73,7 +73,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n     }\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         Group group = groupDAO.authFind(groupKey);\n \n         StringBuilder result = new StringBuilder(\"Group \").append(group.getName()).append(\" members \");\n@@ -87,15 +87,17 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setGroup(groupKey);\n         List<User> users = searchDAO.search(SearchCond.getLeaf(membershipCond), AnyTypeKind.USER);\n-        Collection<String> groupResourceKeys = groupDAO.findAllResourceKeys(groupKey);\n+        Collection<String> gResources = groupDAO.findAllResourceKeys(groupKey);\n         status.set(\"About to \"\n                 + (action == ProvisionAction.DEPROVISION ? \"de\" : \"\") + \"provision \"\n-                + users.size() + \" users from \" + groupResourceKeys);\n+                + users.size() + \" users from \" + gResources);\n \n         for (int i = 0; i < users.size() && !interrupt; i++) {\n             List<PropagationStatus> statuses = action == ProvisionAction.DEPROVISION\n-                    ? userProvisioningManager.deprovision(users.get(i).getKey(), groupResourceKeys, false)\n-                    : userProvisioningManager.provision(users.get(i).getKey(), true, null, groupResourceKeys, false);\n+                    ? userProvisioningManager.deprovision(\n+                            users.get(i).getKey(), gResources, false, executor, getClass().getSimpleName())\n+                    : userProvisioningManager.provision(\n+                            users.get(i).getKey(), true, null, gResources, false, executor, getClass().getSimpleName());\n             for (PropagationStatus propagationStatus : statuses) {\n                 result.append(\"User \").append(users.get(i).getKey()).append('\\t').\n                         append(\"Resource \").append(propagationStatus.getResource()).append('\\t').\n@@ -118,12 +120,14 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         List<AnyObject> anyObjects = searchDAO.search(SearchCond.getLeaf(membershipCond), AnyTypeKind.ANY_OBJECT);\n         status.set(\"About to \"\n                 + (action == ProvisionAction.DEPROVISION ? \"de\" : \"\") + \"provision \"\n-                + anyObjects.size() + \" any objects from \" + groupResourceKeys);\n+                + anyObjects.size() + \" any objects from \" + gResources);\n \n         for (int i = 0; i < anyObjects.size() && !interrupt; i++) {\n             List<PropagationStatus> statuses = action == ProvisionAction.DEPROVISION\n-                    ? anyObjectProvisioningManager.deprovision(anyObjects.get(i).getKey(), groupResourceKeys, false)\n-                    : anyObjectProvisioningManager.provision(anyObjects.get(i).getKey(), groupResourceKeys, false);\n+                    ? anyObjectProvisioningManager.deprovision(\n+                            anyObjects.get(i).getKey(), gResources, false, executor, getClass().getSimpleName())\n+                    : anyObjectProvisioningManager.provision(\n+                            anyObjects.get(i).getKey(), gResources, false, executor, getClass().getSimpleName());\n \n             for (PropagationStatus propagationStatus : statuses) {\n                 result.append(anyObjects.get(i).getType().getKey()).append(' ')."},{"sha":"e9f82fc4a733865c03acf4b2841cb09d9a5b561f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SetUMembershipsJob.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -21,7 +21,9 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n+import javax.annotation.Resource;\n import org.apache.syncope.common.lib.request.MembershipUR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.types.PatchOperation;\n@@ -46,11 +48,19 @@ public class SetUMembershipsJob extends AbstractInterruptableJob {\n \n     public static final String MEMBERSHIPS_AFTER_KEY = \"membershipsAfter\";\n \n+    public static final String CONTEXT = \"context\";\n+\n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n     @Autowired\n     private UserProvisioningManager userProvisioningManager;\n \n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n+        String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n+                orElse(adminUser);\n+\n         try {\n             AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {\n \n@@ -102,7 +112,8 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n \n                 updateReqs.stream().filter(req -> !req.isEmpty()).forEach(req -> {\n                     LOG.debug(\"About to update User {}\", req);\n-                    userProvisioningManager.update(req, true);\n+                    userProvisioningManager.update(\n+                            req, true, executor, context.getMergedJobDataMap().getString(CONTEXT));\n                 });\n \n                 return null;"},{"sha":"cb4eaf5e75152fc503d7cd4808e7a6fec22e5752","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/NotificationJob.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.provisioning.java.job.notification;\n \n+import java.util.Optional;\n+import javax.annotation.Resource;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n@@ -50,6 +52,9 @@ public enum Status {\n \n     private static final Logger LOG = LoggerFactory.getLogger(NotificationJob.class);\n \n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n     @Autowired\n     private DomainHolder domainHolder;\n \n@@ -64,7 +69,8 @@ public JobDelegate getDelegate() {\n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         LOG.debug(\"Waking up...\");\n-        String executor = context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY);\n+        String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n+                orElse(adminUser);\n         for (String domain : domainHolder.getDomains().keySet()) {\n             try {\n                 AuthContextUtils.callAsAdmin(domain, () -> {"},{"sha":"ddebbb445abc882066c0cec5784ed38b49338103","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJob.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.provisioning.java.job.report;\n \n+import java.util.Optional;\n+import javax.annotation.Resource;\n import org.apache.syncope.core.provisioning.api.job.JobDelegate;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.java.job.AbstractInterruptableJob;\n@@ -36,6 +38,9 @@ public class ReportJob extends AbstractInterruptableJob {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ReportJob.class);\n \n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n     /**\n      * Key, set by the caller, for identifying the report to be executed.\n      */\n@@ -62,23 +67,22 @@ public JobDelegate getDelegate() {\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         try {\n             String domainKey = context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY);\n-            String executor = context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY);\n+            String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n+                    orElse(adminUser);\n \n-            AuthContextUtils.callAsAdmin(domainKey,\n-                    () -> {\n-                        try {\n-                            delegate.execute(reportKey, executor);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While executing report {}\", reportKey, e);\n-                            throw new RuntimeException(e);\n-                        }\n+            AuthContextUtils.callAsAdmin(domainKey, () -> {\n+                try {\n+                    delegate.execute(reportKey, executor);\n+                } catch (Exception e) {\n+                    LOG.error(\"While executing report {}\", reportKey, e);\n+                    throw new RuntimeException(e);\n+                }\n \n-                        return null;\n-                    });\n+                return null;\n+            });\n         } catch (RuntimeException e) {\n             LOG.error(\"While executing report {}\", reportKey, e);\n             throw new JobExecutionException(\"While executing report \" + reportKey, e);\n         }\n     }\n-\n }"},{"sha":"d81f40cae235908db1f8bb4bd552ba31ea724d80","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -630,7 +630,7 @@ protected String createReport(\n     }\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         try {\n             Class<T> clazz = getTaskClassReference();\n             if (!clazz.isAssignableFrom(task.getClass())) {\n@@ -665,17 +665,14 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n                 return \"No provisions nor orgUnit available: aborting...\";\n             }\n \n-            return doExecuteProvisioning(\n-                    provisioningTask,\n-                    connector,\n-                    dryRun);\n+            return doExecuteProvisioning(provisioningTask, connector, dryRun, executor);\n         } catch (Throwable t) {\n             LOG.error(\"While executing provisioning job {}\", getClass().getName(), t);\n             throw t;\n         }\n     }\n \n-    protected abstract String doExecuteProvisioning(T task, Connector connector, boolean dryRun)\n+    protected abstract String doExecuteProvisioning(T task, Connector connector, boolean dryRun, String executor)\n             throws JobExecutionException;\n \n     @Override"},{"sha":"ad936fed7639c79699bc42e32e5d98b5f9d7e220","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -651,7 +651,9 @@ protected List<ProvisioningReport> delete(\n                         getProvisioningManager().delete(\n                                 match.getAny().getKey(),\n                                 Set.of(profile.getTask().getResource().getKey()),\n-                                true);\n+                                true,\n+                                profile.getExecutor(),\n+                                getContext());\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n "},{"sha":"54f9cdf88b31ba11eb0c312b4314ab3d5cc84548","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -108,4 +108,9 @@ public void setProfile(final ProvisioningProfile<T, A> profile) {\n     public ProvisioningProfile<T, A> getProfile() {\n         return profile;\n     }\n+\n+    protected String getContext() {\n+        return (getClass().getSimpleName().contains(\"Pull\") ? \"PullTask\" : \"PushTask\")\n+                + \" \" + profile.getTask().getKey() + \" '\" + profile.getTask().getName() + \"'\";\n+    }\n }"},{"sha":"e617ae54103a5bfc1b30066be65cef5aa79cec60","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultAnyObjectPullResultHandler.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -74,15 +74,19 @@ protected AnyTO getAnyTO(final Any<?> any) {\n \n     @Override\n     protected WorkflowResult<? extends AnyUR> update(final AnyUR req) {\n-        return awfAdapter.update((AnyObjectUR) req);\n+        return awfAdapter.update((AnyObjectUR) req, profile.getExecutor(), getContext());\n     }\n \n     @Override\n     protected AnyTO doCreate(final AnyCR anyCR, final SyncDelta delta) {\n         AnyObjectCR anyObjectCR = AnyObjectCR.class.cast(anyCR);\n \n         Map.Entry<String, List<PropagationStatus>> created = anyObjectProvisioningManager.create(\n-                anyObjectCR, Set.of(profile.getTask().getResource().getKey()), true);\n+                anyObjectCR,\n+                Set.of(profile.getTask().getResource().getKey()),\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         return anyObjectDataBinder.getAnyObjectTO(created.getKey());\n     }\n@@ -97,7 +101,11 @@ protected AnyUR doUpdate(\n         AnyObjectUR anyObjectUR = AnyObjectUR.class.cast(req);\n \n         Pair<AnyObjectUR, List<PropagationStatus>> updated = anyObjectProvisioningManager.update(\n-                anyObjectUR, Set.of(profile.getTask().getResource().getKey()), true);\n+                anyObjectUR,\n+                Set.of(profile.getTask().getResource().getKey()),\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         return updated.getLeft();\n     }"},{"sha":"2cf00226915fba330c122527c5814b61e643c88e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultAnyObjectPushResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -47,6 +47,6 @@ protected AnyTO getAnyTO(final Any<?> any) {\n \n     @Override\n     protected WorkflowResult<? extends AnyObjectUR> update(final AnyUR req) {\n-        return awfAdapter.update((AnyObjectUR) req);\n+        return awfAdapter.update((AnyObjectUR) req, profile.getExecutor(), getContext());\n     }\n }"},{"sha":"6d23fd948ba8d123c15f06dbe14e0fbfb9b83881","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultGroupPullResultHandler.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -84,7 +84,7 @@ protected AnyTO getAnyTO(final Any<?> any) {\n \n     @Override\n     protected WorkflowResult<? extends AnyUR> update(final AnyUR req) {\n-        return gwfAdapter.update((GroupUR) req);\n+        return gwfAdapter.update((GroupUR) req, profile.getExecutor(), getContext());\n     }\n \n     @Override\n@@ -95,7 +95,9 @@ protected AnyTO doCreate(final AnyCR anyCR, final SyncDelta delta) {\n                 groupCR,\n                 groupOwnerMap,\n                 Set.of(profile.getTask().getResource().getKey()),\n-                true);\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         return groupDataBinder.getGroupTO(created.getKey());\n     }\n@@ -110,7 +112,11 @@ protected AnyUR doUpdate(\n         GroupUR groupUR = GroupUR.class.cast(req);\n \n         Pair<GroupUR, List<PropagationStatus>> updated = groupProvisioningManager.update(\n-                groupUR, Set.of(profile.getTask().getResource().getKey()), true);\n+                groupUR,\n+                Set.of(profile.getTask().getResource().getKey()),\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         String groupOwner = null;\n         for (AttrPatch attrPatch : groupUR.getPlainAttrs()) {\n@@ -126,5 +132,4 @@ protected AnyUR doUpdate(\n \n         return req;\n     }\n-\n }"},{"sha":"b5420fda4ce4e4f96983928ffb174c42f8f49adc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultGroupPushResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -47,6 +47,6 @@ protected AnyTO getAnyTO(final Any<?> any) {\n \n     @Override\n     protected WorkflowResult<? extends AnyUR> update(final AnyUR req) {\n-        return gwfAdapter.update((GroupUR) req);\n+        return gwfAdapter.update((GroupUR) req, profile.getExecutor(), getContext());\n     }\n }"},{"sha":"e85a4519536f19dfbc01aeca0947b70ce0904f3b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -99,7 +99,8 @@ protected AnyTO getAnyTO(final Any<?> any) {\n \n     @Override\n     protected WorkflowResult<? extends AnyUR> update(final AnyUR req) {\n-        WorkflowResult<Pair<UserUR, Boolean>> update = uwfAdapter.update((UserUR) req);\n+        WorkflowResult<Pair<UserUR, Boolean>> update =\n+                uwfAdapter.update((UserUR) req, profile.getExecutor(), getContext());\n         return new WorkflowResult<>(update.getResult().getLeft(), update.getPropByRes(), update.getPerformedTasks());\n     }\n \n@@ -114,7 +115,9 @@ protected AnyTO doCreate(final AnyCR anyCR, final SyncDelta delta) {\n                 true,\n                 enabled(delta),\n                 Set.of(profile.getTask().getResource().getKey()),\n-                true);\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         return userDataBinder.getUserTO(created.getKey());\n     }\n@@ -131,7 +134,9 @@ protected AnyUR doUpdate(\n                 result,\n                 enabled(delta),\n                 Set.of(profile.getTask().getResource().getKey()),\n-                true);\n+                true,\n+                profile.getExecutor(),\n+                getContext());\n \n         return updated.getLeft();\n     }\n@@ -369,7 +374,9 @@ protected Optional<ProvisioningReport> provision(\n                         report,\n                         null,\n                         Set.of(profile.getTask().getResource().getKey()),\n-                        true);\n+                        true,\n+                        profile.getExecutor(),\n+                        getContext());\n \n                 LinkedAccountTO created = userDAO.find(req.getKey()).\n                         getLinkedAccount(accountTO.getResource(), accountTO.getConnObjectKeyValue()).\n@@ -494,7 +501,9 @@ protected Optional<ProvisioningReport> update(\n                         report,\n                         null,\n                         Set.of(profile.getTask().getResource().getKey()),\n-                        true);\n+                        true,\n+                        profile.getExecutor(),\n+                        getContext());\n                 resultStatus = Result.SUCCESS;\n \n                 LinkedAccountTO updated = userDAO.find(patch.getKey()).\n@@ -588,7 +597,9 @@ protected Optional<ProvisioningReport> delete(\n                             report,\n                             null,\n                             Set.of(profile.getTask().getResource().getKey()),\n-                            true);\n+                            true,\n+                            profile.getExecutor(),\n+                            getContext());\n                     resultStatus = Result.SUCCESS;\n \n                     output = null;"},{"sha":"3de89ebe14e58209bb4213ab2d3a6fe8cc67c7e0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPushResultHandler.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -174,7 +174,8 @@ protected void deprovision(final Any<?> any, final ConnectorObject beforeObj, fi\n \n     @Override\n     protected WorkflowResult<? extends AnyUR> update(final AnyUR req) {\n-        WorkflowResult<Pair<UserUR, Boolean>> update = uwfAdapter.update((UserUR) req);\n+        WorkflowResult<Pair<UserUR, Boolean>> update =\n+                uwfAdapter.update((UserUR) req, profile.getExecutor(), getContext());\n         return new WorkflowResult<>(update.getResult().getLeft(), update.getPropByRes(), update.getPerformedTasks());\n     }\n "},{"sha":"d29fd5fd7bd13946ecf1f7a6f4f5a601f2121220","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPMembershipPullActions.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.PullMatch;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -193,6 +194,10 @@ public void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutio\n         Map<String, Object> jobMap = new HashMap<>();\n         jobMap.put(SetUMembershipsJob.MEMBERSHIPS_BEFORE_KEY, membershipsBefore);\n         jobMap.put(SetUMembershipsJob.MEMBERSHIPS_AFTER_KEY, membershipsAfter);\n+        jobMap.put(JobManager.EXECUTOR_KEY, profile.getExecutor());\n+        jobMap.put(\n+                SetUMembershipsJob.CONTEXT,\n+                \"PullTask \" + profile.getTask().getKey() + \" '\" + profile.getTask().getName() + \"'\");\n         schedule(SetUMembershipsJob.class, jobMap);\n     }\n }"},{"sha":"ebd847c14b233ab22f51606ec551376461cbabc6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -187,7 +187,8 @@ protected GroupPullResultHandler buildGroupHandler() {\n     protected String doExecuteProvisioning(\n             final PullTask pullTask,\n             final Connector connector,\n-            final boolean dryRun) throws JobExecutionException {\n+            final boolean dryRun,\n+            final String executor) throws JobExecutionException {\n \n         LOG.debug(\"Executing pull on {}\", pullTask.getResource());\n \n@@ -206,6 +207,7 @@ protected String doExecuteProvisioning(\n         profile.setConflictResolutionAction(pullTask.getResource().getPullPolicy() == null\n                 ? ConflictResolutionAction.IGNORE\n                 : pullTask.getResource().getPullPolicy().getConflictResolutionAction());\n+        profile.setExecutor(executor);\n \n         latestSyncTokens.clear();\n "},{"sha":"f115233a14e3121a3ed1784d7f91ba1f347cfd6e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -154,7 +154,8 @@ protected GroupPushResultHandler buildGroupHandler() {\n     protected String doExecuteProvisioning(\n             final PushTask pushTask,\n             final Connector connector,\n-            final boolean dryRun) throws JobExecutionException {\n+            final boolean dryRun,\n+            final String executor) throws JobExecutionException {\n \n         LOG.debug(\"Executing push on {}\", pushTask.getResource());\n \n@@ -173,6 +174,7 @@ protected String doExecuteProvisioning(\n         profile.setConflictResolutionAction(pushTask.getResource().getPushPolicy() == null\n                 ? ConflictResolutionAction.IGNORE\n                 : pushTask.getResource().getPushPolicy().getConflictResolutionAction());\n+        profile.setExecutor(executor);\n \n         if (!profile.isDryRun()) {\n             for (PushActions action : actions) {"},{"sha":"9e7f712abce508e0c7115e039badd4ba18f0e1b5","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -142,7 +142,8 @@ public Authentication authenticate(final Authentication authentication) {\n \n                 if (!authResult.getRight()) {\n                     AuthContextUtils.callAsAdmin(domain.getKey(), () -> {\n-                        provisioningManager.internalSuspend(authResult.getLeft().getKey());\n+                        provisioningManager.internalSuspend(\n+                                authResult.getLeft().getKey(), adminUser, \"Failed authentication\");\n                         return null;\n                     });\n                 }"},{"sha":"3c67721e362ff80ae91bee20898e0f909712e224","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/AnyObjectWorkflowAdapter.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,17 +31,21 @@ public interface AnyObjectWorkflowAdapter extends WorkflowAdapter {\n      * Create a anyObject.\n      *\n      * @param anyObjectCR anyObject to be created and whether to propagate it as active\n+     * @param creator username that requested this operation\n+     * @param context context information\n      * @return anyObject just created\n      */\n-    WorkflowResult<String> create(AnyObjectCR anyObjectCR);\n+    WorkflowResult<String> create(AnyObjectCR anyObjectCR, String creator, String context);\n \n     /**\n      * Update a anyObject.\n      *\n      * @param anyObjectUR modification set to be performed\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return anyObject just updated and propagations to be performed\n      */\n-    WorkflowResult<AnyObjectUR> update(AnyObjectUR anyObjectUR);\n+    WorkflowResult<AnyObjectUR> update(AnyObjectUR anyObjectUR, String updater, String context);\n \n     /**\n      * Delete a anyObject."},{"sha":"3c3bb8afb0d4eb9626dc7664a9681e91a65de730","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/GroupWorkflowAdapter.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,17 +31,21 @@ public interface GroupWorkflowAdapter extends WorkflowAdapter {\n      * Create a group.\n      *\n      * @param groupCR group to be created and whether to propagate it as active\n+     * @param creator username that requested this operation\n+     * @param context context information\n      * @return group just created\n      */\n-    WorkflowResult<String> create(GroupCR groupCR);\n+    WorkflowResult<String> create(GroupCR groupCR, String creator, String context);\n \n     /**\n      * Update a group.\n      *\n      * @param groupUR modification set to be performed\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return group just updated and propagations to be performed\n      */\n-    WorkflowResult<GroupUR> update(GroupUR groupUR);\n+    WorkflowResult<GroupUR> update(GroupUR groupUR, String updater, String context);\n \n     /**\n      * Delete a group."},{"sha":"7d9012fd81fea5fb582862715063bc07d8e93d0a","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/UserWorkflowAdapter.java","status":"modified","additions":29,"deletions":9,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -32,77 +32,97 @@ public interface UserWorkflowAdapter extends WorkflowAdapter {\n      * Create an user.\n      *\n      * @param userCR user to be created and whether to propagate it as active\n+     * @param creator username that requested this operation\n+     * @param context context information\n      * @return user just created\n      */\n-    UserWorkflowResult<Pair<String, Boolean>> create(UserCR userCR);\n+    UserWorkflowResult<Pair<String, Boolean>> create(UserCR userCR, String creator, String context);\n \n     /**\n      * Create an user, optionally disabling password policy check.\n      *\n      * @param userCR user to be created and whether to propagate it as active\n      * @param disablePwdPolicyCheck disable password policy check?\n      * @param enabled specify true/false to force active/supended status\n+     * @param creator username that requested this operation\n+     * @param context context information\n      * @return user just created\n      */\n-    UserWorkflowResult<Pair<String, Boolean>> create(UserCR userCR, boolean disablePwdPolicyCheck, Boolean enabled);\n+    UserWorkflowResult<Pair<String, Boolean>> create(\n+            UserCR userCR, boolean disablePwdPolicyCheck, Boolean enabled, String creator, String context);\n \n     /**\n      * Activate an user.\n      *\n      * @param userKey user to be activated\n      * @param token to be verified for activation\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just updated\n      */\n-    UserWorkflowResult<String> activate(String userKey, String token);\n+    UserWorkflowResult<String> activate(String userKey, String token, String updater, String context);\n \n     /**\n      * Update an user.\n      *\n      * @param userUR modification set to be performed\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just updated and propagations to be performed\n      */\n-    UserWorkflowResult<Pair<UserUR, Boolean>> update(UserUR userUR);\n+    UserWorkflowResult<Pair<UserUR, Boolean>> update(UserUR userUR, String updater, String context);\n \n     /**\n      * Suspend an user.\n      *\n      * @param key to be suspended\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just suspended\n      */\n-    UserWorkflowResult<String> suspend(String key);\n+    UserWorkflowResult<String> suspend(String key, String updater, String context);\n \n     /**\n      * Suspend an user (used by internal authentication process)\n      *\n      * @param key to be suspended\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just suspended and information whether to propagate suspension\n      */\n-    Pair<UserWorkflowResult<String>, Boolean> internalSuspend(String key);\n+    Pair<UserWorkflowResult<String>, Boolean> internalSuspend(String key, String updater, String context);\n \n     /**\n      * Reactivate an user.\n      *\n      * @param userKey user to be reactivated\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just reactivated\n      */\n-    UserWorkflowResult<String> reactivate(String userKey);\n+    UserWorkflowResult<String> reactivate(String userKey, String updater, String context);\n \n     /**\n      * Request password reset for an user.\n      *\n      * @param userKey user requesting password reset\n+     * @param updater username that requested this operation\n+     * @param context context information\n      */\n-    void requestPasswordReset(String userKey);\n+    void requestPasswordReset(String userKey, String updater, String context);\n \n     /**\n      * Confirm password reset for an user.\n      *\n      * @param userKey user confirming password reset\n      * @param token security token\n      * @param password new password value\n+     * @param updater username that requested this operation\n+     * @param context context information\n      * @return user just updated and propagations to be performed\n      */\n-    UserWorkflowResult<Pair<UserUR, Boolean>> confirmPasswordReset(String userKey, String token, String password);\n+    UserWorkflowResult<Pair<UserUR, Boolean>> confirmPasswordReset(\n+            String userKey, String token, String password, String updater, String context);\n \n     /**\n      * Delete an user."},{"sha":"8c11d00f3c582395abfbfbe1ef674e26f22083e4","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractAnyObjectWorkflowAdapter.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,7 +31,8 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractAnyObjectWorkflowAdapter implements AnyObjectWorkflowAdapter {\n+public abstract class AbstractAnyObjectWorkflowAdapter\n+        extends AbstractWorkflowAdapter implements AnyObjectWorkflowAdapter {\n \n     @Autowired\n     protected AnyObjectDataBinder dataBinder;\n@@ -47,18 +48,22 @@ public String getPrefix() {\n         return null;\n     }\n \n-    protected abstract WorkflowResult<String> doCreate(AnyObjectCR anyObjectCR);\n+    protected abstract WorkflowResult<String> doCreate(AnyObjectCR anyObjectCR, String creator, String context);\n \n     @Override\n-    public WorkflowResult<String> create(final AnyObjectCR anyObjectCR) {\n-        return doCreate(anyObjectCR);\n+    public WorkflowResult<String> create(final AnyObjectCR anyObjectCR, final String creator, final String context) {\n+        return doCreate(anyObjectCR, creator, context);\n     }\n \n-    protected abstract WorkflowResult<AnyObjectUR> doUpdate(AnyObject anyObject, AnyObjectUR anyObjectUR);\n+    protected abstract WorkflowResult<AnyObjectUR> doUpdate(\n+            AnyObject anyObject, AnyObjectUR anyObjectUR, String updater, String context);\n \n     @Override\n-    public WorkflowResult<AnyObjectUR> update(final AnyObjectUR anyObjectUR) {\n-        WorkflowResult<AnyObjectUR> result = doUpdate(anyObjectDAO.authFind(anyObjectUR.getKey()), anyObjectUR);\n+    public WorkflowResult<AnyObjectUR> update(\n+            final AnyObjectUR anyObjectUR, final String updater, final String context) {\n+\n+        WorkflowResult<AnyObjectUR> result = doUpdate(\n+                anyObjectDAO.authFind(anyObjectUR.getKey()), anyObjectUR, updater, context);\n \n         // re-read to ensure that requester's administration rights are still valid\n         anyObjectDAO.authFind(anyObjectUR.getKey());"},{"sha":"7c2f46fc32e85482e8cdd1647e136b3c17e1d64e","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractGroupWorkflowAdapter.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,7 +31,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractGroupWorkflowAdapter implements GroupWorkflowAdapter {\n+public abstract class AbstractGroupWorkflowAdapter extends AbstractWorkflowAdapter implements GroupWorkflowAdapter {\n \n     @Autowired\n     protected GroupDataBinder dataBinder;\n@@ -47,18 +47,18 @@ public String getPrefix() {\n         return null;\n     }\n \n-    protected abstract WorkflowResult<String> doCreate(GroupCR groupCR);\n+    protected abstract WorkflowResult<String> doCreate(GroupCR groupCR, String creator, String context);\n \n     @Override\n-    public WorkflowResult<String> create(final GroupCR groupCR) {\n-        return doCreate(groupCR);\n+    public WorkflowResult<String> create(final GroupCR groupCR, final String creator, final String context) {\n+        return doCreate(groupCR, creator, context);\n     }\n \n-    protected abstract WorkflowResult<GroupUR> doUpdate(Group group, GroupUR groupUR);\n+    protected abstract WorkflowResult<GroupUR> doUpdate(Group group, GroupUR groupUR, String updater, String context);\n \n     @Override\n-    public WorkflowResult<GroupUR> update(final GroupUR groupUR) {\n-        WorkflowResult<GroupUR> result = doUpdate(groupDAO.authFind(groupUR.getKey()), groupUR);\n+    public WorkflowResult<GroupUR> update(final GroupUR groupUR, final String updater, final String context) {\n+        WorkflowResult<GroupUR> result = doUpdate(groupDAO.authFind(groupUR.getKey()), groupUR, updater, context);\n \n         // re-read to ensure that requester's administration rights are still valid\n         groupDAO.authFind(groupUR.getKey());"},{"sha":"ae41d829d51d258f189df30a6c25e92104195087","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractUserWorkflowAdapter.java","status":"modified","additions":38,"deletions":26,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -34,7 +34,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractUserWorkflowAdapter implements UserWorkflowAdapter {\n+public abstract class AbstractUserWorkflowAdapter extends AbstractWorkflowAdapter implements UserWorkflowAdapter {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(UserWorkflowAdapter.class);\n \n@@ -53,55 +53,67 @@ public String getPrefix() {\n     }\n \n     @Override\n-    public UserWorkflowResult<Pair<String, Boolean>> create(final UserCR userCR) {\n-        return create(userCR, false, null);\n+    public UserWorkflowResult<Pair<String, Boolean>> create(\n+            final UserCR userCR, final String creator, final String context) {\n+\n+        return create(userCR, false, null, creator, context);\n     }\n \n     protected abstract UserWorkflowResult<Pair<String, Boolean>> doCreate(\n-            UserCR userCR, boolean disablePwdPolicyCheck, Boolean enabled);\n+            UserCR userCR, boolean disablePwdPolicyCheck, Boolean enabled, String creator, String context);\n \n     @Override\n     public UserWorkflowResult<Pair<String, Boolean>> create(\n             final UserCR userCR,\n             final boolean disablePwdPolicyCheck,\n-            final Boolean enabled) {\n+            final Boolean enabled,\n+            final String creator,\n+            final String context) {\n \n-        return doCreate(userCR, disablePwdPolicyCheck, enabled);\n+        return doCreate(userCR, disablePwdPolicyCheck, enabled, creator, context);\n     }\n \n-    protected abstract UserWorkflowResult<String> doActivate(User user, String token);\n+    protected abstract UserWorkflowResult<String> doActivate(User user, String token, String updater, String context);\n \n     @Override\n-    public UserWorkflowResult<String> activate(final String key, final String token) {\n-        return doActivate(userDAO.authFind(key), token);\n+    public UserWorkflowResult<String> activate(\n+            final String key, final String token, final String updater, final String context) {\n+\n+        return doActivate(userDAO.authFind(key), token, updater, context);\n     }\n \n-    protected abstract UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(User user, UserUR userUR);\n+    protected abstract UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(\n+            User user, UserUR userUR, String updater, String context);\n \n     @Override\n-    public UserWorkflowResult<Pair<UserUR, Boolean>> update(final UserUR userUR) {\n-        UserWorkflowResult<Pair<UserUR, Boolean>> result = doUpdate(userDAO.authFind(userUR.getKey()), userUR);\n+    public UserWorkflowResult<Pair<UserUR, Boolean>> update(\n+            final UserUR userUR, final String updater, final String context) {\n+\n+        UserWorkflowResult<Pair<UserUR, Boolean>> result = doUpdate(\n+                userDAO.authFind(userUR.getKey()), userUR, updater, context);\n \n         // re-read to ensure that requester's administration rights are still valid\n         userDAO.authFind(userUR.getKey());\n \n         return result;\n     }\n \n-    protected abstract UserWorkflowResult<String> doSuspend(User user);\n+    protected abstract UserWorkflowResult<String> doSuspend(User user, String updater, String context);\n \n     @Override\n-    public UserWorkflowResult<String> suspend(final String key) {\n+    public UserWorkflowResult<String> suspend(final String key, final String updater, final String context) {\n         User user = userDAO.authFind(key);\n \n         // set suspended flag\n         user.setSuspended(Boolean.TRUE);\n \n-        return doSuspend(user);\n+        return doSuspend(user, updater, context);\n     }\n \n     @Override\n-    public Pair<UserWorkflowResult<String>, Boolean> internalSuspend(final String key) {\n+    public Pair<UserWorkflowResult<String>, Boolean> internalSuspend(\n+            final String key, final String updater, final String context) {\n+\n         User user = userDAO.authFind(key);\n \n         Pair<UserWorkflowResult<String>, Boolean> result = null;\n@@ -116,16 +128,16 @@ public Pair<UserWorkflowResult<String>, Boolean> internalSuspend(final String ke\n             // set suspended flag\n             user.setSuspended(Boolean.TRUE);\n \n-            result = Pair.of(doSuspend(user), enforce.getValue());\n+            result = Pair.of(doSuspend(user, updater, context), enforce.getValue());\n         }\n \n         return result;\n     }\n \n-    protected abstract UserWorkflowResult<String> doReactivate(User user);\n+    protected abstract UserWorkflowResult<String> doReactivate(User user, String updater, String context);\n \n     @Override\n-    public UserWorkflowResult<String> reactivate(final String key) {\n+    public UserWorkflowResult<String> reactivate(final String key, final String updater, final String context) {\n         User user = userDAO.authFind(key);\n \n         // reset failed logins\n@@ -134,24 +146,24 @@ public UserWorkflowResult<String> reactivate(final String key) {\n         // reset suspended flag\n         user.setSuspended(Boolean.FALSE);\n \n-        return doReactivate(user);\n+        return doReactivate(user, updater, context);\n     }\n \n-    protected abstract void doRequestPasswordReset(User user);\n+    protected abstract void doRequestPasswordReset(User user, String updater, String context);\n \n     @Override\n-    public void requestPasswordReset(final String key) {\n-        doRequestPasswordReset(userDAO.authFind(key));\n+    public void requestPasswordReset(final String key, final String updater, final String context) {\n+        doRequestPasswordReset(userDAO.authFind(key), updater, context);\n     }\n \n     protected abstract UserWorkflowResult<Pair<UserUR, Boolean>> doConfirmPasswordReset(\n-            User user, String token, String password);\n+            User user, String token, String password, String updater, String context);\n \n     @Override\n     public UserWorkflowResult<Pair<UserUR, Boolean>> confirmPasswordReset(\n-            final String key, final String token, final String password) {\n+            final String key, final String token, final String password, final String updater, final String context) {\n \n-        return doConfirmPasswordReset(userDAO.authFind(key), token, password);\n+        return doConfirmPasswordReset(userDAO.authFind(key), token, password, updater, context);\n     }\n \n     protected abstract void doDelete(User user);"},{"sha":"422ec1f1fef0337918fa9e4de3497ac237c86d6b","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractWorkflowAdapter.java","status":"renamed","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -16,25 +16,24 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity;\n+package org.apache.syncope.core.workflow.java;\n \n import java.util.Date;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n \n-public interface AnnotatedEntity extends Entity {\n+public abstract class AbstractWorkflowAdapter {\n \n-    Date getCreationDate();\n+    protected void metadata(final Any<?> any, final String username, final String context) {\n+        Date now = new Date();\n \n-    String getCreator();\n+        if (any.getCreationDate() == null) {\n+            any.setCreationDate(now);\n+            any.setCreator(username);\n+            any.setCreationContext(context);\n+        }\n \n-    Date getLastChangeDate();\n-\n-    String getLastModifier();\n-\n-    void setCreationDate(Date creationDate);\n-\n-    void setCreator(String creator);\n-\n-    void setLastChangeDate(Date lastChangeDate);\n-\n-    void setLastModifier(String lastModifier);\n+        any.setLastModifier(username);\n+        any.setLastChangeDate(now);\n+        any.setLastChangeContext(context);\n+    }\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnnotatedEntity.java"},{"sha":"fa1e6d2f34f6d6c885286f53bcee7f117beeb767","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultAnyObjectWorkflowAdapter.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,9 +31,12 @@\n public class DefaultAnyObjectWorkflowAdapter extends AbstractAnyObjectWorkflowAdapter {\n \n     @Override\n-    protected WorkflowResult<String> doCreate(final AnyObjectCR anyObjectCR) {\n+    protected WorkflowResult<String> doCreate(\n+            final AnyObjectCR anyObjectCR, final String creator, final String context) {\n+\n         AnyObject anyObject = entityFactory.newEntity(AnyObject.class);\n         dataBinder.create(anyObject, anyObjectCR);\n+        metadata(anyObject, creator, context);\n         anyObject = anyObjectDAO.save(anyObject);\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n@@ -43,8 +46,13 @@ protected WorkflowResult<String> doCreate(final AnyObjectCR anyObjectCR) {\n     }\n \n     @Override\n-    protected WorkflowResult<AnyObjectUR> doUpdate(final AnyObject anyObject, final AnyObjectUR anyObjectUR) {\n+    protected WorkflowResult<AnyObjectUR> doUpdate(\n+            final AnyObject anyObject, final AnyObjectUR anyObjectUR, final String updater, final String context) {\n+\n         PropagationByResource<String> propByRes = dataBinder.update(anyObject, anyObjectUR);\n+        metadata(anyObject, updater, context);\n+        anyObjectDAO.save(anyObject);\n+\n         return new WorkflowResult<>(anyObjectUR, propByRes, \"update\");\n     }\n "},{"sha":"ba3f8c70d6e90611491e42dd9da4ca8a26cb108f","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -31,9 +31,10 @@\n public class DefaultGroupWorkflowAdapter extends AbstractGroupWorkflowAdapter {\n \n     @Override\n-    protected WorkflowResult<String> doCreate(final GroupCR groupCR) {\n+    protected WorkflowResult<String> doCreate(final GroupCR groupCR, final String creator, final String context) {\n         Group group = entityFactory.newEntity(Group.class);\n         dataBinder.create(group, groupCR);\n+        metadata(group, creator, context);\n         group = groupDAO.saveAndRefreshDynMemberships(group);\n \n         PropagationByResource<String> propByRes = new PropagationByResource<>();\n@@ -43,8 +44,13 @@ protected WorkflowResult<String> doCreate(final GroupCR groupCR) {\n     }\n \n     @Override\n-    protected WorkflowResult<GroupUR> doUpdate(final Group group, final GroupUR groupUR) {\n+    protected WorkflowResult<GroupUR> doUpdate(\n+            final Group group, final GroupUR groupUR, final String updater, final String context) {\n+\n         PropagationByResource<String> propByRes = dataBinder.update(group, groupUR);\n+        metadata(group, updater, context);\n+        groupDAO.save(group);\n+\n         return new WorkflowResult<>(groupUR, propByRes, \"update\");\n     }\n "},{"sha":"66ec8749ca8a2ad5a09ff594b3ecab7929a28b9e","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":23,"deletions":8,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -43,7 +43,9 @@ public class DefaultUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n             final UserCR userCR,\n             final boolean disablePwdPolicyCheck,\n-            final Boolean enabled) {\n+            final Boolean enabled,\n+            final String creator,\n+            final String context) {\n \n         User user = entityFactory.newEntity(User.class);\n         dataBinder.create(user, userCR);\n@@ -66,6 +68,7 @@ protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n             user.setSuspended(!enabled);\n         }\n \n+        metadata(user, creator, context);\n         user.setStatus(status);\n         user = userDAO.save(user);\n \n@@ -85,11 +88,14 @@ protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doActivate(final User user, final String token) {\n+    protected UserWorkflowResult<String> doActivate(\n+            final User user, final String token, final String updater, final String context) {\n+\n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n         }\n \n+        metadata(user, updater, context);\n         user.removeToken();\n         user.setStatus(\"active\");\n         User updated = userDAO.save(user);\n@@ -98,9 +104,15 @@ protected UserWorkflowResult<String> doActivate(final User user, final String to\n     }\n \n     @Override\n-    protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, final UserUR userUR) {\n+    protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(\n+            final User user, final UserUR userUR, final String updater, final String context) {\n+\n         Pair<PropagationByResource<String>, PropagationByResource<Pair<String, String>>> propInfo =\n                 dataBinder.update(user, userUR);\n+\n+        metadata(user, updater, context);\n+        userDAO.save(user);\n+\n         return new UserWorkflowResult<>(\n                 Pair.of(userUR, !user.isSuspended()),\n                 propInfo.getLeft(),\n@@ -109,32 +121,35 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, fi\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doSuspend(final User user) {\n+    protected UserWorkflowResult<String> doSuspend(final User user, final String updater, final String context) {\n+        metadata(user, updater, context);\n         user.setStatus(\"suspended\");\n         User updated = userDAO.save(user);\n \n         return new UserWorkflowResult<>(updated.getKey(), null, null, \"suspend\");\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doReactivate(final User user) {\n+    protected UserWorkflowResult<String> doReactivate(final User user, final String updater, final String context) {\n+        metadata(user, updater, context);\n         user.setStatus(\"active\");\n         User updated = userDAO.save(user);\n \n         return new UserWorkflowResult<>(updated.getKey(), null, null, \"reactivate\");\n     }\n \n     @Override\n-    protected void doRequestPasswordReset(final User user) {\n+    protected void doRequestPasswordReset(final User user, final String updater, final String context) {\n         user.generateToken(\n                 confParamOps.get(AuthContextUtils.getDomain(), \"token.length\", 256, Integer.class),\n                 confParamOps.get(AuthContextUtils.getDomain(), \"token.expireTime\", 60, Integer.class));\n+        metadata(user, updater, context);\n         userDAO.save(user);\n     }\n \n     @Override\n     protected UserWorkflowResult<Pair<UserUR, Boolean>> doConfirmPasswordReset(\n-            final User user, final String token, final String password) {\n+            final User user, final String token, final String password, final String updater, final String context) {\n \n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n@@ -149,7 +164,7 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doConfirmPasswordReset(\n                 resources(userDAO.findAllResourceKeys(user.getKey())).\n                 value(password).build());\n \n-        return doUpdate(user, userUR);\n+        return doUpdate(user, userUR, updater, context);\n     }\n \n     @Override"},{"sha":"f6511cdfdefaf4bb049ecc5e15bea7e3f90e653e","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelAnyObjectProvisioningManager.java","status":"modified","additions":60,"deletions":16,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -37,21 +37,29 @@\n         extends AbstractCamelProvisioningManager implements AnyObjectProvisioningManager {\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> create(final AnyObjectCR req, final boolean nullPriorityAsync) {\n-        return create(req, Set.of(), nullPriorityAsync);\n+    public Pair<String, List<PropagationStatus>> create(\n+            final AnyObjectCR req, final boolean nullPriorityAsync, final String creator, final String context) {\n+\n+        return create(req, Set.of(), nullPriorityAsync, creator, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<String, List<PropagationStatus>> create(\n-            final AnyObjectCR req, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final AnyObjectCR req,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:createAnyObjectPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"creator\", creator);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:createAnyObject\", req, props);\n \n@@ -66,22 +74,28 @@ public Pair<String, List<PropagationStatus>> create(\n \n     @Override\n     public Pair<AnyObjectUR, List<PropagationStatus>> update(\n-            final AnyObjectUR anyUR, final boolean nullPriorityAsync) {\n+            final AnyObjectUR anyUR, final boolean nullPriorityAsync, final String updater, final String context) {\n \n-        return update(anyUR, Set.of(), nullPriorityAsync);\n+        return update(anyUR, Set.of(), nullPriorityAsync, updater, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<AnyObjectUR, List<PropagationStatus>> update(\n-            final AnyObjectUR anyUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final AnyObjectUR anyUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateAnyObjectPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:updateAnyObject\", anyUR, props);\n \n@@ -95,21 +109,32 @@ public Pair<AnyObjectUR, List<PropagationStatus>> update(\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String anyObjectObjectKey, final boolean nullPriorityAsync) {\n-        return delete(anyObjectObjectKey, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String anyObjectObjectKey,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n+\n+        return delete(anyObjectObjectKey, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deleteAnyObjectPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"eraser\", eraser);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deleteAnyObject\", key, props);\n \n@@ -123,10 +148,14 @@ public List<PropagationStatus> delete(\n     }\n \n     @Override\n-    public String unlink(final AnyObjectUR anyObjectUR) {\n+    public String unlink(final AnyObjectUR anyObjectUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:unlinkAnyObjectPort\");\n \n-        sendMessage(\"direct:unlinkAnyObject\", anyObjectUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:unlinkAnyObject\", anyObjectUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -138,10 +167,14 @@ public String unlink(final AnyObjectUR anyObjectUR) {\n     }\n \n     @Override\n-    public String link(final AnyObjectUR anyObjectUR) {\n+    public String link(final AnyObjectUR anyObjectUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:linkAnyObjectPort\");\n \n-        sendMessage(\"direct:linkAnyObject\", anyObjectUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:linkAnyObject\", anyObjectUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -155,13 +188,19 @@ public String link(final AnyObjectUR anyObjectUR) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> provision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:provisionAnyObjectPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:provisionAnyObject\", key, props);\n \n@@ -177,13 +216,19 @@ public List<PropagationStatus> provision(\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> deprovision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deprovisionAnyObjectPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deprovisionAnyObject\", key, props);\n \n@@ -195,5 +240,4 @@ public List<PropagationStatus> deprovision(\n \n         return exchange.getIn().getBody(List.class);\n     }\n-\n }"},{"sha":"85b451e806664602593839991062290cd5bdef61","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":58,"deletions":15,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -38,12 +38,16 @@\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> create(final GroupCR req, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> create(\n+            final GroupCR req, final boolean nullPriorityAsync, final String creator, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", Set.of());\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"creator\", creator);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:createGroup\", req, props);\n \n@@ -63,14 +67,18 @@ public Pair<String, List<PropagationStatus>> create(\n             final GroupCR req,\n             final Map<String, String> groupOwnerMap,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupInPullPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"groupOwnerMap\", groupOwnerMap);\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"creator\", creator);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:createGroupInPull\", req, props);\n \n@@ -84,21 +92,29 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<GroupUR, List<PropagationStatus>> update(final GroupUR groupUR, final boolean nullPriorityAsync) {\n-        return update(groupUR, Set.of(), nullPriorityAsync);\n+    public Pair<GroupUR, List<PropagationStatus>> update(\n+            final GroupUR groupUR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n+        return update(groupUR, Set.of(), nullPriorityAsync, updater, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<GroupUR, List<PropagationStatus>> update(\n-            final GroupUR groupUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final GroupUR groupUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:updateGroup\", groupUR, props);\n \n@@ -112,21 +128,29 @@ public Pair<GroupUR, List<PropagationStatus>> update(\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n-        return delete(key, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String key, final boolean nullPriorityAsync, final String eraser, final String context) {\n+\n+        return delete(key, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deleteGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"eraser\", eraser);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deleteGroup\", key, props);\n \n@@ -140,10 +164,14 @@ public List<PropagationStatus> delete(\n     }\n \n     @Override\n-    public String unlink(final GroupUR groupUR) {\n+    public String unlink(final GroupUR groupUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:unlinkGroupPort\");\n \n-        sendMessage(\"direct:unlinkGroup\", groupUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:unlinkGroup\", groupUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -155,10 +183,14 @@ public String unlink(final GroupUR groupUR) {\n     }\n \n     @Override\n-    public String link(final GroupUR groupUR) {\n+    public String link(final GroupUR groupUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:linkGroupPort\");\n \n-        sendMessage(\"direct:linkGroup\", groupUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:linkGroup\", groupUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -172,13 +204,19 @@ public String link(final GroupUR groupUR) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> provision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:provisionGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:provisionGroup\", key, props);\n \n@@ -194,13 +232,19 @@ public List<PropagationStatus> provision(\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> deprovision(\n-            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deprovisionGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deprovisionGroup\", key, props);\n \n@@ -212,5 +256,4 @@ public List<PropagationStatus> deprovision(\n \n         return exchange.getIn().getBody(List.class);\n     }\n-\n }"},{"sha":"f3da2e0e36504167dde90d2a30b7571d40264d1b","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":92,"deletions":24,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -45,8 +45,10 @@ public class CamelUserProvisioningManager extends AbstractCamelProvisioningManag\n     private static final Logger LOG = LoggerFactory.getLogger(CamelUserProvisioningManager.class);\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> create(final UserCR req, final boolean nullPriorityAsync) {\n-        return create(req, false, null, Set.of(), nullPriorityAsync);\n+    public Pair<String, List<PropagationStatus>> create(\n+            final UserCR req, final boolean nullPriorityAsync, final String creator, final String context) {\n+\n+        return create(req, false, null, Set.of(), nullPriorityAsync, creator, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n@@ -57,7 +59,9 @@ public Pair<String, List<PropagationStatus>> create(\n             final boolean disablePwdPolicyCheck,\n             final Boolean enabled,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String creator,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:createPort\");\n \n@@ -66,6 +70,8 @@ public Pair<String, List<PropagationStatus>> create(\n         props.put(\"enabled\", enabled);\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"creator\", creator);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:createUser\", req, props);\n \n@@ -80,11 +86,15 @@ public Pair<String, List<PropagationStatus>> create(\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<UserUR, List<PropagationStatus>> update(final UserUR userUR, final boolean nullPriorityAsync) {\n+    public Pair<UserUR, List<PropagationStatus>> update(\n+            final UserUR userUR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:updatePort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:updateUser\", userUR, props);\n \n@@ -99,27 +109,39 @@ public Pair<UserUR, List<PropagationStatus>> update(final UserUR userUR, final b\n \n     @Override\n     public Pair<UserUR, List<PropagationStatus>> update(\n-            final UserUR userUR, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final UserUR userUR,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n-        return update(userUR, new ProvisioningReport(), null, excludedResources, nullPriorityAsync);\n+        return update(userUR, new ProvisioningReport(), null, excludedResources, nullPriorityAsync, updater, context);\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(final String key, final boolean nullPriorityAsync) {\n-        return delete(key, Set.of(), nullPriorityAsync);\n+    public List<PropagationStatus> delete(\n+            final String key, final boolean nullPriorityAsync, final String eraser, final String context) {\n+\n+        return delete(key, Set.of(), nullPriorityAsync, eraser, context);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> delete(\n-            final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n+            final String key,\n+            final Set<String> excludedResources,\n+            final boolean nullPriorityAsync,\n+            final String eraser,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deletePort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"eraser\", eraser);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deleteUser\", key, props);\n \n@@ -133,10 +155,14 @@ public List<PropagationStatus> delete(\n     }\n \n     @Override\n-    public String unlink(final UserUR userUR) {\n+    public String unlink(final UserUR userUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:unlinkPort\");\n \n-        sendMessage(\"direct:unlinkUser\", userUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:unlinkUser\", userUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -149,14 +175,18 @@ public String unlink(final UserUR userUR) {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> activate(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> activate(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:statusPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"token\", statusR.getToken());\n         props.put(\"key\", statusR.getKey());\n         props.put(\"statusR\", statusR);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         if (statusR.isOnSyncope()) {\n             sendMessage(\"direct:activateUser\", statusR.getKey(), props);\n@@ -177,13 +207,17 @@ public Pair<String, List<PropagationStatus>> activate(final StatusR statusR, fin\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> reactivate(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> reactivate(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:statusPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"key\", statusR.getKey());\n         props.put(\"statusR\", statusR);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         if (statusR.isOnSyncope()) {\n             sendMessage(\"direct:reactivateUser\", statusR.getKey(), props);\n@@ -204,13 +238,17 @@ public Pair<String, List<PropagationStatus>> reactivate(final StatusR statusR, f\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> suspend(final StatusR statusR, final boolean nullPriorityAsync) {\n+    public Pair<String, List<PropagationStatus>> suspend(\n+            final StatusR statusR, final boolean nullPriorityAsync, final String updater, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:statusPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"key\", statusR.getKey());\n         props.put(\"statusR\", statusR);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         if (statusR.isOnSyncope()) {\n             sendMessage(\"direct:suspendUser\", statusR.getKey(), props);\n@@ -230,10 +268,14 @@ public Pair<String, List<PropagationStatus>> suspend(final StatusR statusR, fina\n     }\n \n     @Override\n-    public String link(final UserUR userUR) {\n+    public String link(final UserUR userUR, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:linkPort\");\n \n-        sendMessage(\"direct:linkUser\", userUR);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:linkUser\", userUR, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -251,7 +293,9 @@ public List<PropagationStatus> provision(\n             final boolean changePwd,\n             final String password,\n             final Collection<String> resources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:provisionPort\");\n \n@@ -261,6 +305,8 @@ public List<PropagationStatus> provision(\n         props.put(\"password\", password);\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:provisionUser\", key, props);\n \n@@ -276,13 +322,19 @@ public List<PropagationStatus> provision(\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<PropagationStatus> deprovision(\n-            final String user, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String user,\n+            final Collection<String> resources,\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:deprovisionPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"resources\", resources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:deprovisionUser\", user, props);\n \n@@ -303,7 +355,9 @@ public Pair<UserUR, List<PropagationStatus>> update(\n             final ProvisioningReport result,\n             final Boolean enabled,\n             final Set<String> excludedResources,\n-            final boolean nullPriorityAsync) {\n+            final boolean nullPriorityAsync,\n+            final String updater,\n+            final String context) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateInPullPort\");\n \n@@ -313,6 +367,8 @@ public Pair<UserUR, List<PropagationStatus>> update(\n         props.put(\"enabled\", enabled);\n         props.put(\"excludedResources\", excludedResources);\n         props.put(\"nullPriorityAsync\", nullPriorityAsync);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:updateUserInPull\", userUR, props);\n \n@@ -339,10 +395,14 @@ public Pair<UserUR, List<PropagationStatus>> update(\n     }\n \n     @Override\n-    public void internalSuspend(final String key) {\n+    public void internalSuspend(final String key, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:internalSuspendUserPort\");\n \n-        sendMessage(\"direct:internalSuspendUser\", key);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:internalSuspendUser\", key, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -352,10 +412,14 @@ public void internalSuspend(final String key) {\n     }\n \n     @Override\n-    public void requestPasswordReset(final String key) {\n+    public void requestPasswordReset(final String key, final String updater, final String context) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:requestPwdResetPort\");\n \n-        sendMessage(\"direct:requestPwdReset\", key);\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n+\n+        sendMessage(\"direct:requestPwdReset\", key, props);\n \n         Exchange exchange = pollingConsumer.receive();\n \n@@ -365,13 +429,17 @@ public void requestPasswordReset(final String key) {\n     }\n \n     @Override\n-    public void confirmPasswordReset(final String key, final String token, final String password) {\n+    public void confirmPasswordReset(\n+            final String key, final String token, final String password, final String updater, final String context) {\n+\n         PollingConsumer pollingConsumer = getConsumer(\"direct:confirmPwdResetPort\");\n \n         Map<String, Object> props = new HashMap<>();\n         props.put(\"key\", key);\n         props.put(\"token\", token);\n         props.put(\"password\", password);\n+        props.put(\"updater\", updater);\n+        props.put(\"context\", context);\n \n         sendMessage(\"direct:confirmPwdReset\", key, props);\n "},{"sha":"93274edc99389b000d0eaa49eb5b7b808df849dc","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/component/PropagateComponent.java","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.provisioning.camel.component;\n \n import java.util.Map;\n-\n+import javax.annotation.Resource;\n import org.apache.camel.Endpoint;\n import org.apache.camel.support.DefaultComponent;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -31,8 +31,6 @@\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-import javax.annotation.Resource;\n-\n public class PropagateComponent extends DefaultComponent {\n \n     @Autowired\n@@ -60,8 +58,11 @@ public class PropagateComponent extends DefaultComponent {\n     protected String adminUser;\n \n     @Override\n-    protected Endpoint createEndpoint(final String uri, final String remaining,\n+    protected Endpoint createEndpoint(\n+            final String uri,\n+            final String remaining,\n             final Map<String, Object> parameters) throws Exception {\n+\n         PropagateType type = PropagateType.valueOf(remaining);\n         PropagateEndpoint endpoint = new PropagateEndpoint(uri, this);\n         endpoint.setPropagateType(type);\n@@ -72,10 +73,20 @@ protected Endpoint createEndpoint(final String uri, final String remaining,\n         endpoint.setAnyObjectDAO(anyObjectDAO);\n         endpoint.setGroupDataBinder(groupDataBinder);\n         endpoint.setUwfAdapter(uwfAdapter);\n-        endpoint.setExecutor(adminUser);\n-        \n+\n+        String executor = (String) parameters.get(\"creator\");\n+        if (executor == null) {\n+            executor = (String) parameters.get(\"updater\");\n+        }\n+        if (executor == null) {\n+            executor = (String) parameters.get(\"eraser\");\n+        }\n+        if (executor == null) {\n+            executor = adminUser;\n+        }\n+        endpoint.setExecutor(executor);\n+\n         setProperties(endpoint, parameters);\n         return endpoint;\n     }\n-\n }"},{"sha":"c1014987975e385936ae20a640e5e3b89808fb9e","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/CreateProducer.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -61,18 +61,18 @@ public void process(final Exchange exchange) throws Exception {\n                         created.getPropByLinkedAccount(),\n                         ((UserCR) actual).getVirAttrs(),\n                         excludedResources);\n-                PropagationReporter reporter = getPropagationTaskExecutor()\n-                    .execute(taskInfos, nullPriorityAsync, getExecutor());\n+                PropagationReporter reporter = getPropagationTaskExecutor().\n+                        execute(taskInfos, nullPriorityAsync, getExecutor());\n \n-                exchange.getMessage().setBody(\n-                        Pair.of(created.getResult().getKey(), reporter.getStatuses()));\n+                exchange.getMessage().setBody(Pair.of(created.getResult().getKey(), reporter.getStatuses()));\n             } else if (actual instanceof AnyCR) {\n                 WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n \n                 if (actual instanceof GroupCR && isPull()) {\n                     Map<String, String> groupOwnerMap = exchange.getProperty(\"groupOwnerMap\", Map.class);\n-                    ((GroupCR) actual).getPlainAttr(StringUtils.EMPTY).ifPresent(groupOwner\n-                            -> groupOwnerMap.put(created.getResult(), groupOwner.getValues().iterator().next()));\n+                    ((GroupCR) actual).getPlainAttr(StringUtils.EMPTY).\n+                            ifPresent(groupOwner -> groupOwnerMap.put(\n+                            created.getResult(), groupOwner.getValues().iterator().next()));\n \n                     List<PropagationTaskInfo> taskInfos = getPropagationManager().getCreateTasks(\n                             AnyTypeKind.GROUP,\n@@ -93,7 +93,7 @@ public void process(final Exchange exchange) throws Exception {\n                             ((AnyCR) actual).getVirAttrs(),\n                             excludedResources);\n                     PropagationReporter reporter =\n-                        getPropagationTaskExecutor().execute(taskInfos, nullPriorityAsync, getExecutor());\n+                            getPropagationTaskExecutor().execute(taskInfos, nullPriorityAsync, getExecutor());\n \n                     exchange.getMessage().setBody(Pair.of(created.getResult(), reporter.getStatuses()));\n                 }"},{"sha":"b81cd1e10308ef3b30b9b5056c7d77e6a8afcade","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/StatusProducer.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -63,17 +63,19 @@ public void process(final Exchange exchange) throws Exception {\n \n             Boolean enabled = exchange.getProperty(\"enabled\", Boolean.class);\n             String key = exchange.getProperty(\"key\", String.class);\n+            String updater = exchange.getProperty(\"updater\", String.class);\n+            String context = exchange.getProperty(\"context\", String.class);\n \n             if (enabled != null) {\n                 User user = userDAO.find(key);\n \n                 WorkflowResult<String> enableUpdate = null;\n                 if (user.isSuspended() == null) {\n-                    enableUpdate = uwfAdapter.activate(key, null);\n+                    enableUpdate = uwfAdapter.activate(key, null, updater, context);\n                 } else if (enabled && user.isSuspended()) {\n-                    enableUpdate = uwfAdapter.reactivate(key);\n+                    enableUpdate = uwfAdapter.reactivate(key, updater, context);\n                 } else if (!enabled && !user.isSuspended()) {\n-                    enableUpdate = uwfAdapter.suspend(key);\n+                    enableUpdate = uwfAdapter.suspend(key, updater, context);\n                 }\n \n                 if (enableUpdate != null) {\n@@ -109,7 +111,7 @@ public void process(final Exchange exchange) throws Exception {\n                     null,\n                     null);\n             PropagationReporter reporter =\n-                getPropagationTaskExecutor().execute(taskInfos, nullPriorityAsync, getExecutor());\n+                    getPropagationTaskExecutor().execute(taskInfos, nullPriorityAsync, getExecutor());\n \n             exchange.getMessage().setBody(Pair.of(updated.getResult(), reporter.getStatuses()));\n         }"},{"sha":"717ed3c1f48635c1c88587c69dbc532cd203fb3a","filename":"ext/camel/provisioning-camel/src/main/resources/anyObjectRoutes.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -25,7 +25,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"awfAdapter\" method=\"create(${body})\"/>\n+      <bean ref=\"awfAdapter\" method=\"create(${body},${exchangeProperty.creator},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:create?anyTypeKind=ANY_OBJECT\"/>\n       <to uri=\"direct:createAnyObjectPort\"/>\n       <doCatch>        \n@@ -44,7 +44,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"awfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:update?anyTypeKind=ANY_OBJECT\"/>\n       <to uri=\"direct:updateAnyObjectPort\"/>\n       <doCatch>        \n@@ -79,7 +79,7 @@ under the License.\n   <route id=\"unlinkAnyObject\">\n     <from uri=\"direct:unlinkAnyObject\"/>\n     <doTry>\n-      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"awfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult}</simple>\n       </setBody>\n@@ -97,7 +97,7 @@ under the License.\n   <route id=\"linkAnyObject\">\n     <from uri=\"direct:linkAnyObject\"/>\n     <doTry>\n-      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"awfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult}</simple>\n       </setBody>"},{"sha":"4b5d5fb2b4f5b5b511777cebeccdaf1ef88adc95","filename":"ext/camel/provisioning-camel/src/main/resources/groupRoutes.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -25,7 +25,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"gwfAdapter\" method=\"create(${body})\"/>\n+      <bean ref=\"gwfAdapter\" method=\"create(${body},${exchangeProperty.creator},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:create?anyTypeKind=GROUP\"/>\n       <to uri=\"direct:createGroupPort\"/>\n       <doCatch>        \n@@ -44,7 +44,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"gwfAdapter\" method=\"create(${body})\"/>\n+      <bean ref=\"gwfAdapter\" method=\"create(${body},${exchangeProperty.creator},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:create?anyTypeKind=GROUP&amp;pull=true\"/>\n       <to uri=\"direct:createGroupInPullPort\"/>\n       <doCatch>        \n@@ -63,7 +63,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"gwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"gwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:update?anyTypeKind=GROUP\"/>\n       <to uri=\"direct:updateGroupPort\"/>\n       <doCatch>        \n@@ -98,7 +98,7 @@ under the License.\n   <route id=\"unlinkGroup\">\n     <from uri=\"direct:unlinkGroup\"/>\n     <doTry>\n-      <bean ref=\"gwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"gwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult}</simple>\n       </setBody>\n@@ -116,7 +116,7 @@ under the License.\n   <route id=\"linkGroup\">\n     <from uri=\"direct:linkGroup\"/>\n     <doTry>\n-      <bean ref=\"gwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"gwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult}</simple>\n       </setBody>"},{"sha":"d40d8f09d1fd58f2a4fd8deb30ffbbc7cd87fc6d","filename":"ext/camel/provisioning-camel/src/main/resources/userRoutes.xml","status":"modified","additions":26,"deletions":11,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -25,7 +25,11 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean method=\"create(${body},${exchangeProperty.disablePwdPolicyCheck},${exchangeProperty.enabled})\"\n+      <bean method=\"create(${body},\n+                           ${exchangeProperty.disablePwdPolicyCheck},\n+                           ${exchangeProperty.enabled},\n+                           ${exchangeProperty.creator},\n+                           ${exchangeProperty.context})\"\n             ref=\"uwfAdapter\" />\n       <to uri=\"propagate:create?anyTypeKind=USER\"/>\n       <to uri=\"direct:createPort\"/>\n@@ -45,7 +49,7 @@ under the License.\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"propagate:update?anyTypeKind=USER\"/>\n       <to uri=\"direct:updatePort\"/>\n       <doCatch>        \n@@ -61,7 +65,7 @@ under the License.\n   <route id=\"updateUserInPull\">\n     <from uri=\"direct:updateUserInPull\"/>            \n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"direct:userInPull\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n@@ -102,7 +106,7 @@ under the License.\n   <route id=\"unlinkUser\">\n     <from uri=\"direct:unlinkUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult.getKey}</simple>\n       </setBody>\n@@ -120,7 +124,7 @@ under the License.\n   <route id=\"linkUser\">\n     <from uri=\"direct:linkUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"update(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <setBody>\n         <simple>${body.getResult.getKey}</simple>\n       </setBody>\n@@ -138,7 +142,10 @@ under the License.\n   <route id=\"activateUser\">\n     <from uri=\"direct:activateUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${exchangeProperty.token})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"activate(${body},\n+                                              ${exchangeProperty.token},\n+                                              ${exchangeProperty.updater},\n+                                              ${exchangeProperty.context})\"/>\n       <to uri=\"direct:userStatusPropagation\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n@@ -153,7 +160,7 @@ under the License.\n   <route id=\"reactivateUser\">\n     <from uri=\"direct:reactivateUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"reactivate(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"direct:userStatusPropagation\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n@@ -168,7 +175,7 @@ under the License.\n   <route id=\"suspendUser\">\n     <from uri=\"direct:suspendUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"suspend(${body},${exchangeProperty.updater},${exchangeProperty.context})\"/>\n       <to uri=\"direct:userStatusPropagation\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n@@ -201,7 +208,9 @@ under the License.\n   <route id=\"internalSuspendUser\">\n     <from uri=\"direct:internalSuspendUser\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"internalSuspend(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"internalSuspend(${body},\n+                                                     ${exchangeProperty.updater},\n+                                                     ${exchangeProperty.context})\"/>\n       <to uri=\"propagate:suspend?anyTypeKind=USER\"/>\n       <to uri=\"direct:internalSuspendUserPort\"/>\n       <doCatch>        \n@@ -217,7 +226,9 @@ under the License.\n   <route id=\"requestPwdReset\">\n     <from uri=\"direct:requestPwdReset\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"requestPasswordReset(${body})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"requestPasswordReset(${body},\n+                                                          ${exchangeProperty.updater},\n+                                                          ${exchangeProperty.context})\"/>\n       <to uri=\"direct:requestPwdResetPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>\n@@ -232,7 +243,11 @@ under the License.\n   <route id=\"confirmPwdReset\">\n     <from uri=\"direct:confirmPwdReset\"/>\n     <doTry>\n-      <bean ref=\"uwfAdapter\" method=\"confirmPasswordReset(${exchangeProperty.key},${exchangeProperty.token},${exchangeProperty.password})\"/>\n+      <bean ref=\"uwfAdapter\" method=\"confirmPasswordReset(${exchangeProperty.key},\n+                                                          ${exchangeProperty.token},\n+                                                          ${exchangeProperty.password},\n+                                                          ${exchangeProperty.updater},\n+                                                          ${exchangeProperty.context})\"/>\n       <to uri=\"propagate:confirmPasswordReset?anyTypeKind=USER\"/>\n       <to uri=\"direct:confirmPwdResetPort\"/>\n       <doCatch>        "},{"sha":"14b5041fcdeb5ce1dbf3b40d2705929160474572","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchUtils.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -109,9 +109,11 @@ public XContentBuilder builder(final Any<?> any) throws IOException {\n                 field(\"realm\", any.getRealm().getFullPath()).\n                 field(\"anyType\", any.getType().getKey()).\n                 field(\"creationDate\", any.getCreationDate()).\n+                field(\"creationContext\", any.getCreationContext()).\n                 field(\"creator\", any.getCreator()).\n                 field(\"lastChangeDate\", any.getLastChangeDate()).\n-                field(\"lastModified\", any.getLastModifier()).\n+                field(\"lastModifier\", any.getLastModifier()).\n+                field(\"lastChangeContext\", any.getLastChangeContext()).\n                 field(\"status\", any.getStatus()).\n                 field(\"resources\",\n                         any instanceof User"},{"sha":"19817755695e864b58a89f3a2c29506c33303c9e","filename":"ext/elasticsearch/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ElasticsearchReindex.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -58,7 +58,7 @@ public class ElasticsearchReindex extends AbstractSchedTaskJobDelegate {\n     private AnyObjectDAO anyObjectDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         if (!dryRun) {\n             LOG.debug(\"Start rebuilding indexes\");\n "},{"sha":"2eff0292d32e63d51f1beca44d6fe519aa9b2465","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserWorkflowAdapter.java","status":"modified","additions":23,"deletions":8,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -85,7 +85,9 @@ protected User lazyLoad(final User user) {\n     protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n             final UserCR userCR,\n             final boolean disablePwdPolicyCheck,\n-            final Boolean enabled) {\n+            final Boolean enabled,\n+            final String creator,\n+            final String context) {\n \n         Map<String, Object> variables = new HashMap<>();\n         variables.put(FlowableRuntimeUtils.WF_EXECUTOR, AuthContextUtils.getUsername());\n@@ -126,6 +128,7 @@ protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n             user.removeClearPassword();\n         }\n \n+        metadata(user, creator, context);\n         FlowableRuntimeUtils.updateStatus(engine, procInst.getProcessInstanceId(), user);\n         User created = userDAO.save(user);\n \n@@ -206,7 +209,9 @@ protected Set<String> doExecuteNextTask(\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doActivate(final User user, final String token) {\n+    protected UserWorkflowResult<String> doActivate(\n+            final User user, final String token, final String updater, final String context) {\n+\n         String procInstID = FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey());\n \n         Map<String, Object> variables = new HashMap<>(2);\n@@ -215,6 +220,7 @@ protected UserWorkflowResult<String> doActivate(final User user, final String to\n \n         Set<String> tasks = doExecuteNextTask(procInstID, user, variables);\n \n+        metadata(user, updater, context);\n         FlowableRuntimeUtils.updateStatus(engine, procInstID, user);\n         User updated = userDAO.save(user);\n \n@@ -226,7 +232,9 @@ protected UserWorkflowResult<String> doActivate(final User user, final String to\n     }\n \n     @Override\n-    protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, final UserUR userUR) {\n+    protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(\n+            final User user, final UserUR userUR, final String updater, final String context) {\n+\n         String procInstID = FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey());\n \n         // save some existing variable values for later processing, after actual update is made \n@@ -248,6 +256,7 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, fi\n \n         Set<String> tasks = doExecuteNextTask(procInstID, user, variables);\n \n+        metadata(user, updater, context);\n         FlowableRuntimeUtils.updateStatus(engine, procInstID, user);\n         User updated = userDAO.save(user);\n \n@@ -298,11 +307,13 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, fi\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doSuspend(final User user) {\n+    protected UserWorkflowResult<String> doSuspend(final User user, final String updater, final String context) {\n         String procInstID = FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey());\n \n         Set<String> performedTasks =\n                 doExecuteNextTask(procInstID, user, Map.of(FlowableRuntimeUtils.TASK, \"suspend\"));\n+\n+        metadata(user, updater, context);\n         FlowableRuntimeUtils.updateStatus(engine, procInstID, user);\n         User updated = userDAO.save(user);\n \n@@ -314,13 +325,14 @@ protected UserWorkflowResult<String> doSuspend(final User user) {\n     }\n \n     @Override\n-    protected UserWorkflowResult<String> doReactivate(final User user) {\n+    protected UserWorkflowResult<String> doReactivate(final User user, final String updater, final String context) {\n         String procInstID = FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey());\n \n         Set<String> performedTasks =\n                 doExecuteNextTask(procInstID, user, Map.of(FlowableRuntimeUtils.TASK, \"reactivate\"));\n-        FlowableRuntimeUtils.updateStatus(engine, procInstID, user);\n \n+        metadata(user, updater, context);\n+        FlowableRuntimeUtils.updateStatus(engine, procInstID, user);\n         User updated = userDAO.save(user);\n \n         engine.getRuntimeService().removeVariable(procInstID, FlowableRuntimeUtils.TASK);\n@@ -331,7 +343,7 @@ protected UserWorkflowResult<String> doReactivate(final User user) {\n     }\n \n     @Override\n-    protected void doRequestPasswordReset(final User user) {\n+    protected void doRequestPasswordReset(final User user, final String updater, final String context) {\n         Map<String, Object> variables = new HashMap<>(3);\n         variables.put(FlowableRuntimeUtils.USER_TO, dataBinder.getUserTO(user, true));\n         variables.put(FlowableRuntimeUtils.TASK, \"requestPasswordReset\");\n@@ -340,6 +352,8 @@ protected void doRequestPasswordReset(final User user) {\n         String procInstID = FlowableRuntimeUtils.getWFProcInstID(engine, user.getKey());\n \n         doExecuteNextTask(procInstID, user, variables);\n+\n+        metadata(user, updater, context);\n         userDAO.save(user);\n \n         variables.keySet().forEach(key -> engine.getRuntimeService().removeVariable(procInstID, key));\n@@ -349,7 +363,7 @@ protected void doRequestPasswordReset(final User user) {\n \n     @Override\n     protected UserWorkflowResult<Pair<UserUR, Boolean>> doConfirmPasswordReset(\n-            final User user, final String token, final String password) {\n+            final User user, final String token, final String password, final String updater, final String context) {\n \n         Map<String, Object> variables = new HashMap<>(5);\n         variables.put(FlowableRuntimeUtils.TOKEN, token);\n@@ -362,6 +376,7 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doConfirmPasswordReset(\n \n         Set<String> tasks = doExecuteNextTask(procInstID, user, variables);\n \n+        metadata(user, updater, context);\n         userDAO.save(user);\n \n         variables.keySet().forEach(key -> engine.getRuntimeService().removeVariable(procInstID, key));"},{"sha":"f6d13fed34b76a468cad00785e83b9652132d36b","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/oidc/OIDCUserManager.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FOIDCUserManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -61,6 +61,8 @@ public class OIDCUserManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(OIDCUserManager.class);\n \n+    private static final String OIDC_CLIENT_CONTEXT = \"ODIC Client\";\n+\n     @Autowired\n     private InboundMatcher inboundMatcher;\n \n@@ -183,7 +185,8 @@ public String create(final OIDCProvider op, final OIDCLoginResponseTO responseTO\n             userCR.setUsername(email);\n         }\n \n-        Pair<String, List<PropagationStatus>> created = provisioningManager.create(userCR, false);\n+        Pair<String, List<PropagationStatus>> created =\n+                provisioningManager.create(userCR, false, userCR.getUsername(), OIDC_CLIENT_CONTEXT);\n         userTO = binder.getUserTO(created.getKey());\n \n         for (OIDCProviderActions action : actions) {\n@@ -207,7 +210,8 @@ public String update(final String username, final OIDCProvider op, final OIDCLog\n             userUR = action.beforeUpdate(userUR, responseTO);\n         }\n \n-        Pair<UserUR, List<PropagationStatus>> updated = provisioningManager.update(userUR, false);\n+        Pair<UserUR, List<PropagationStatus>> updated =\n+                provisioningManager.update(userUR, false, userTO.getUsername(), OIDC_CLIENT_CONTEXT);\n         userTO = binder.getUserTO(updated.getLeft().getKey());\n \n         for (OIDCProviderActions action : actions) {"},{"sha":"8c04f420c9fd61c58390d241e25ae35d292b1626","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -63,6 +63,8 @@ public class SAML2UserManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SAML2UserManager.class);\n \n+    private static final String SAML2SP_CONTEXT = \"SAML 2.0 SP\";\n+\n     @Autowired\n     private SAML2IdPDAO idpDAO;\n \n@@ -204,7 +206,8 @@ public String create(final SAML2IdPEntity idp, final SAML2LoginResponseTO respon\n             userCR.setUsername(nameID);\n         }\n \n-        Pair<String, List<PropagationStatus>> created = provisioningManager.create(userCR, false);\n+        Pair<String, List<PropagationStatus>> created =\n+                provisioningManager.create(userCR, false, userCR.getUsername(), SAML2SP_CONTEXT);\n         userTO = binder.getUserTO(created.getKey());\n \n         for (SAML2IdPActions action : actions) {\n@@ -228,7 +231,8 @@ public String update(final String username, final SAML2IdPEntity idp, final SAML\n             userUR = action.beforeUpdate(userUR, responseTO);\n         }\n \n-        Pair<UserUR, List<PropagationStatus>> updated = provisioningManager.update(userUR, false);\n+        Pair<UserUR, List<PropagationStatus>> updated =\n+                provisioningManager.update(userUR, false, userTO.getUsername(), SAML2SP_CONTEXT);\n         userTO = binder.getUserTO(updated.getLeft().getKey());\n \n         for (SAML2IdPActions action : actions) {"},{"sha":"223873c05df4aad625cffc77d010e6b088a66c91","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSampleJobDelegate.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -29,7 +29,7 @@\n public class TestSampleJobDelegate extends AbstractSchedTaskJobDelegate {\n \n     @Override\n-    protected String doExecute(final boolean dryRun) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n         for (int i = 0; i < 2; i++) {\n             LOG.debug(\"TestSampleJob#doExecute round {} time {}\", i, new Date().toString());\n             try {\n@@ -61,5 +61,4 @@ public boolean isInterrupted() {\n     protected boolean hasToBeRegistered(final TaskExec execution) {\n         return true;\n     }\n-\n }"},{"sha":"657c55feae1f80f7c498696563a712885dd0dc7b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -63,6 +63,8 @@ public void create() {\n \n         AnyObjectTO anyObjectTO = createAnyObject(anyObjectCR).getEntity();\n         assertNotNull(anyObjectTO);\n+        assertEquals(\"REST\", anyObjectTO.getCreationContext());\n+        assertEquals(\"REST\", anyObjectTO.getLastChangeContext());\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());"},{"sha":"27cb5aae40b48073bc90ce9d0ae05c3bc4e0c38a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -363,17 +363,18 @@ public void reconcileFromLDAP() {\n         // 1. verify execution status\n         assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n+        // SYNCOPE-898\n+        PullTaskTO task = taskService.read(TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", false);\n+        assertEquals(SyncopeConstants.ROOT_REALM, task.getDestinationRealm());\n+\n         // 2. verify that pulled group is found\n         PagedResult<GroupTO> matchingGroups = groupService.search(new AnyQuery.Builder().realm(\n                 SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(\"testLDAPGroup\").query()).\n                 build());\n         assertNotNull(matchingGroups);\n         assertEquals(1, matchingGroups.getResult().size());\n-        // SYNCOPE-898\n-        PullTaskTO task = taskService.read(TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", false);\n-        assertEquals(\"/\", task.getDestinationRealm());\n-        assertEquals(\"/\", matchingGroups.getResult().get(0).getRealm());\n+        assertEquals(SyncopeConstants.ROOT_REALM, matchingGroups.getResult().get(0).getRealm());\n \n         // 3. verify that pulled user is found\n         PagedResult<UserTO> matchingUsers = userService.search(\n@@ -396,9 +397,18 @@ public void reconcileFromLDAP() {\n         // Check for SYNCOPE-1343\n         assertEquals(\"odd\", matchingUsers.getResult().get(0).getPlainAttr(\"title\").get().getValues().get(0));\n \n+        PagedResult<UserTO> matchByLastChangeContext = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"lastChangeContext\").\n+                                equalTo(\"*PullTask \" + task.getKey() + \"*\").query()).\n+                        build());\n+        assertNotNull(matchByLastChangeContext);\n+        assertTrue(matchByLastChangeContext.getResult().contains(matchingUsers.getResult().get(0)));\n+\n         GroupTO groupTO = matchingGroups.getResult().get(0);\n         assertNotNull(groupTO);\n         assertEquals(\"testLDAPGroup\", groupTO.getName());\n+        assertTrue(groupTO.getLastChangeContext().contains(\"PullTask \" + task.getKey()));\n         assertEquals(\"true\", groupTO.getPlainAttr(\"show\").get().getValues().get(0));\n         assertEquals(matchingUsers.getResult().get(0).getKey(), groupTO.getUserOwner());\n         assertNull(groupTO.getGroupOwner());"},{"sha":"7d9da1f02f56facc7211294079e94e3a6a5d7b8b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ed22a4f65f91f8b479dd7b409fb863c03acb37bc/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=ed22a4f65f91f8b479dd7b409fb863c03acb37bc","patch":"@@ -73,10 +73,7 @@ public void searchUser() {\n                                 is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query()).build());\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());\n-\n-        for (UserTO user : matchingUsers.getResult()) {\n-            assertNotNull(user);\n-        }\n+        matchingUsers.getResult().stream().forEach(Assertions::assertNotNull);\n \n         // ISNULL\n         matchingUsers = userService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n@@ -169,13 +166,20 @@ public void searchByDynGroup() {\n             }\n         }\n \n+        PagedResult<GroupTO> matchingGroups = groupService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getGroupSearchConditionBuilder().\n+                                is(\"creationContext\").equalTo(\"REST\").query()).\n+                        build());\n+        assertNotNull(matchingGroups);\n+        assertTrue(matchingGroups.getTotalCount() > 0);\n+\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                         fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(group.getKey()).query()).\n                         build());\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());\n-\n         assertTrue(matchingUsers.getResult().stream().\n                 anyMatch(user -> \"c9b2dec2-00a7-4855-97c0-d854842b4b24\".equals(user.getKey())));\n     }\n@@ -237,7 +241,8 @@ public void searchByDynRole() {\n     public void searchUserByResourceName() {\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(SyncopeClient.getUserSearchConditionBuilder().hasResources(RESOURCE_NAME_MAPPINGS2).query()).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                                hasResources(RESOURCE_NAME_MAPPINGS2).query()).\n                         build());\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());\n@@ -325,7 +330,8 @@ public void searchByRelationshipAnyCond() {\n     public void nested() {\n         PagedResult<UserTO> matchingUsers = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(\"((fullname==*o*,fullname==*i*);$resources!=ws-target-resource-1)\").page(1).size(2).build());\n+                        fiql(\"((fullname==*o*,fullname==*i*);$resources!=ws-target-resource-1)\").\n+                        page(1).size(2).build());\n         assertNotNull(matchingUsers);\n \n         assertFalse(matchingUsers.getResult().isEmpty());"}]}