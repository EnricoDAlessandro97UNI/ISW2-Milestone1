{"sha":"c34dd05eace2e3db9235f614639567f536d1937e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMzNGRkMDVlYWNlMmUzZGI5MjM1ZjYxNDYzOTU2N2Y1MzZkMTkzN2U=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-12-29T11:47:36Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-12-29T11:47:44Z"},"message":"[SYNCOPE-156] New notification component","tree":{"sha":"3a477d7375ad535d771ed8409de963a01d831ab7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3a477d7375ad535d771ed8409de963a01d831ab7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c34dd05eace2e3db9235f614639567f536d1937e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c34dd05eace2e3db9235f614639567f536d1937e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c34dd05eace2e3db9235f614639567f536d1937e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c34dd05eace2e3db9235f614639567f536d1937e/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"57a120244baeb9d8dd38e9f242b0f54631b7083a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/57a120244baeb9d8dd38e9f242b0f54631b7083a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/57a120244baeb9d8dd38e9f242b0f54631b7083a"}],"stats":{"total":1001,"additions":461,"deletions":540},"files":[{"sha":"a78d5c4f2bbd83bb895fbee87c9ba308a5e55b8d","filename":"client/console/pom.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -70,6 +70,14 @@ under the License.\n       <groupId>com.googlecode.wicket-jquery-ui</groupId>\n       <artifactId>wicket-jquery-ui</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-kendo-ui</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+      <artifactId>wicket-kendo-ui-theme-bootstrap</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-native-websocket-javax</artifactId>"},{"sha":"7c03f020576411dc189ba7822e007c5004566b10","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -48,6 +48,9 @@\n import org.apache.wicket.authroles.authentication.AuthenticatedWebApplication;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.feedback.DefaultCleanupFeedbackMessageFilter;\n+import org.apache.wicket.feedback.FeedbackMessage;\n+import org.apache.wicket.feedback.IFeedbackMessageFilter;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.request.resource.IResource;\n@@ -84,6 +87,8 @@ public static SyncopeConsoleApplication get() {\n \n     private SyncopeClientFactoryBean clientFactory;\n \n+    private IFeedbackMessageFilter feedbackMessageCleanupFilter = new DefaultCleanupFeedbackMessageFilter();\n+\n     @Override\n     protected void init() {\n         super.init();\n@@ -153,6 +158,16 @@ protected void init() {\n \n         getRequestCycleListeners().add(new SyncopeConsoleRequestCycleListener());\n \n+        getApplicationSettings().setFeedbackMessageCleanupFilter(new DefaultCleanupFeedbackMessageFilter() {\n+\n+            private static final long serialVersionUID = 4419535854770831722L;\n+\n+            @Override\n+            public boolean accept(final FeedbackMessage message) {\n+                return true;\n+            }\n+        });\n+\n         mountPage(\"/login\", getSignInPageClass());\n \n         activitiModelerDirectory = props.getProperty(\"activitiModelerDirectory\");\n@@ -201,8 +216,8 @@ protected Class<? extends WebPage> getSignInPageClass() {\n     public Class<? extends Page> getHomePage() {\n         return AuthenticatedWebSession.get().isSignedIn()\n                 && SyncopeConsoleSession.get().owns(StandardEntitlement.MUST_CHANGE_PASSWORD)\n-                        ? MustChangePassword.class\n-                        : Dashboard.class;\n+                ? MustChangePassword.class\n+                : Dashboard.class;\n     }\n \n     public String getVersion() {"},{"sha":"d674b2af9a67cba72d5615842cabf3fcdd550b11","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/NotificationAwareComponent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -21,5 +21,5 @@\n import org.apache.syncope.client.console.panels.NotificationPanel;\n \n public interface NotificationAwareComponent {\n-    NotificationPanel getFeedbackPanel();\n+    NotificationPanel getNotificationPanel();\n }"},{"sha":"98f53ecc4ffaf9661512b456e1ec18d1babcea13","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/StyledNotificationBehavior.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import com.googlecode.wicket.jquery.core.Options;\n+import com.googlecode.wicket.kendo.ui.widget.notification.NotificationBehavior;\n+import java.io.Serializable;\n+import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n+\n+public class StyledNotificationBehavior extends NotificationBehavior {\n+\n+    private static final long serialVersionUID = -3985689554352173472L;\n+\n+    public StyledNotificationBehavior(final String selector, final Options options) {\n+        super(selector, options);\n+    }\n+\n+    @Override\n+    public void show(final IPartialPageRequestHandler handler, final Serializable message, final String level) {\n+        handler.appendJavaScript(String.format(\"%s.show( { message: '%s' } , '%s');\", this.widget(), this.format(String.\n+                valueOf(message), level), level.toLowerCase()));\n+    }\n+}"},{"sha":"20753465609e417b671975927bdda52b2fdd0703","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractBasePage.java","status":"modified","additions":5,"deletions":18,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n@@ -46,7 +45,7 @@ public class AbstractBasePage extends WebPage implements NotificationAwareCompon\n \n     protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n-    protected NotificationPanel feedbackPanel;\n+    protected NotificationPanel notificationPanel;\n \n     /**\n      * Response flag set by the Modal Window after the operation is completed.\n@@ -60,22 +59,6 @@ public AbstractBasePage() {\n     public AbstractBasePage(final PageParameters parameters) {\n         super(parameters);\n \n-        feedbackPanel = new NotificationPanel(Constants.FEEDBACK);\n-        feedbackPanel.setOutputMarkupId(true);\n-        add(feedbackPanel);\n-    }\n-\n-    @Override\n-    public NotificationPanel getFeedbackPanel() {\n-        return feedbackPanel;\n-    }\n-\n-    public boolean isModalResult() {\n-        return modalResult;\n-    }\n-\n-    public void setModalResult(final boolean modalResult) {\n-        this.modalResult = modalResult;\n     }\n \n     @Override\n@@ -84,4 +67,8 @@ public void renderHead(final IHeaderResponse response) {\n         response.render(new PriorityHeaderItem(meta));\n     }\n \n+    @Override\n+    public NotificationPanel getNotificationPanel() {\n+        return notificationPanel;\n+    }\n }"},{"sha":"6c91a913eb91e39add6705711b6fffbd7f980c1f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":10,"deletions":33,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.UserWorkflowRestClient;\n import org.apache.syncope.client.console.topology.Topology;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -52,6 +52,10 @@ public BasePage() {\n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n+        notificationPanel = new NotificationPanel(\"feedback\");\n+        notificationPanel.setOutputMarkupId(true);\n+        addOrReplace(notificationPanel);\n+\n         // header, footer\n         add(new Label(\"version\", SyncopeConsoleApplication.get().getVersion()));\n         add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n@@ -124,7 +128,7 @@ public BasePage(final PageParameters parameters) {\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"roles\", Roles.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.ROLE_LIST);\n-        \n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"policies\", Policies.class));\n@@ -204,32 +208,6 @@ public String getAjaxIndicatorMarkupId() {\n         return \"veil\";\n     }\n \n-    /**\n-     * Set a WindowClosedCallback for a ModalWindow instance.\n-     *\n-     * @param window window\n-     * @param container container\n-     */\n-    public void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n-        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                if (container != null) {\n-                    target.add(container);\n-                }\n-\n-                if (isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    setModalResult(false);\n-                }\n-            }\n-        });\n-    }\n-\n     /**\n      * Set a WindowClosedCallback for a Modal instance.\n      *\n@@ -247,11 +225,10 @@ public void onClose(final AjaxRequestTarget target) {\n                     target.add(container);\n                 }\n \n-                if (isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    setModalResult(false);\n-                }\n+//                if (isModalResult()) {\n+//                    notification.success(target, getString(Constants.OPERATION_SUCCEEDED));\n+//                    setModalResult(false);\n+//                }\n             }\n         });\n     }"},{"sha":"9a1609840364018e7ec8ed66e0a32f013312aaa1","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -36,6 +35,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n@@ -88,8 +88,8 @@ public IModel<T> model(final T object) {\n                 Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n \n         @SuppressWarnings(\"rawtypes\")\n-        final ActionLinksPanel<Serializable> actionPanel\n-                = ActionLinksPanel.builder(pageRef).build(\"actions\");\n+        final ActionLinksPanel<Serializable> actionPanel =\n+                ActionLinksPanel.builder(pageRef).build(\"actions\");\n         add(actionPanel);\n \n         for (ActionLink.ActionType action : actions) {\n@@ -139,7 +139,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             | IllegalArgumentException | InvocationTargetException e) {\n                         error(getString(Constants.ERROR)\n                                 + \": Operation \" + bulkAction.getType() + \" not supported\");\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n \n                 }\n@@ -149,14 +149,15 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         final Form<Void> form = new Form<>(FORM);\n         add(form);\n \n-        final AjaxButton cancel = new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), pageRef) {\n+        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 modal.close(target);\n             }\n+\n         };\n \n         cancel.setDefaultFormProcessing(false);"},{"sha":"a6c029886d7992854124b3183d31c6b09255d256","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.client.console.PreferenceManager;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.search.SearchableFields;\n@@ -200,15 +201,15 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     prefMan.setList(getRequest(), getResponse(), prefs);\n \n-                    ((BasePage) pageRef.getPage()).setModalResult(true);\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n \n                     modal.close(target);\n                 }\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                modal.getFeedbackPanel().refresh(target);\n+                modal.getNotificationPanel().refresh(target);\n             }\n         };\n "},{"sha":"53cd426ff3a87a34f1b0e17fa043778e0edd249e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.client.console.panels.RealmSidebarPanel;\n import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -33,6 +32,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -79,12 +79,6 @@ public void onClose(final AjaxRequestTarget target) {\n                 target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n \n                 modal.show(false);\n-\n-                if (isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    setModalResult(false);\n-                }\n             }\n         });\n \n@@ -135,12 +129,11 @@ public void onClick(final AjaxRequestTarget target) {\n                     target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n \n                     info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    getFeedbackPanel().refresh(target);\n                 }\n+                notificationPanel.refresh(target);\n             }\n         };\n \n@@ -152,12 +145,12 @@ public void onClick(final AjaxRequestTarget target) {\n \n     private void setupCreateLink() {\n \n-        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", getPageReference()) {\n+        final AjaxLink<Void> createLink = new IndicatingAjaxLink<Void>(\"createLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 modal.header(new ResourceModel(\"createRealm\"));\n \n                 final RealmTO realmTO = new RealmTO();\n@@ -182,12 +175,12 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n     }\n \n     private void setupEditLink() {\n-        final AjaxLink<Void> editLink = new ClearIndicatingAjaxLink<Void>(\"editLink\", getPageReference()) {\n+        final AjaxLink<Void> editLink = new IndicatingAjaxLink<Void>(\"editLink\") {\n \n             private static final long serialVersionUID = -6957616042924610290L;\n \n             @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 modal.header(Model.of(realmSidebarPanel.getCurrentRealm().getName()));\n \n                 final RealmTO realmTO = realmSidebarPanel.getCurrentRealm();"},{"sha":"6b0df5038ddd5707c309e53f04d09c25cd66820a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestions.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,16 +20,15 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.SecurityQuestionModalPanel;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -56,13 +55,12 @@ public SecurityQuestions(final PageParameters parameters) {\n         addWindowWindowClosedCallback(securityQuestionModal);\n         add(securityQuestionModal);\n \n-        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\n-                \"createSecurityQuestion\", getPageReference()) {\n+        final AjaxLink<Void> createLink = new IndicatingAjaxLink<Void>(\"createSecurityQuestion\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 securityQuestionModal.header(new ResourceModel(\"createSecurityQuestion\"));\n                 securityQuestionModal.setFormModel(new SecurityQuestionTO());\n                 securityQuestionModal.size(Modal.Size.Large);\n@@ -96,12 +94,9 @@ public void onClose(final AjaxRequestTarget target) {\n                 target.add(securityQuestionsPanel);\n                 modal.show(false);\n \n-                if (((AbstractBasePage) SecurityQuestions.this.getPage()).isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    ((AbstractBasePage) SecurityQuestions.this.getPage()).setModalResult(false);\n-                }\n+                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }\n+        );\n     }\n }"},{"sha":"d59088a0a6be01a560feb817e377f21eb1d731fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModal.java","status":"modified","additions":29,"deletions":37,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -47,6 +46,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -85,7 +85,7 @@\n     // --------------------------------\n     // password management fields ..\n     // --------------------------------\n-    private final ClearIndicatingAjaxButton cancel;\n+    private final IndicatingAjaxButton cancel;\n \n     private final WebMarkupContainer pwdMgt;\n \n@@ -232,26 +232,25 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        cancel = new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), pageRef) {\n+        cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n \n             private static final long serialVersionUID = -2341391430136818026L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 // ignore\n                 modal.close(target);\n             }\n-        }.feedbackPanelAutomaticReload(false);\n+        };\n \n         pwdMgtForm.add(cancel);\n \n-        final ClearIndicatingAjaxButton goon = new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"),\n-                pageRef) {\n+        final IndicatingAjaxButton goon = new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\")) {\n \n             private static final long serialVersionUID = -2341391430136818027L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 // none\n             }\n         };\n@@ -271,13 +270,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 anyTO.getKey(),\n                                 new ArrayList<>(table.getModelObject()));\n \n-                        ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         modal.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error enabling resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.REACTIVATE, pageId);\n@@ -294,15 +292,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 anyTO.getKey(),\n                                 new ArrayList<>(table.getModelObject()));\n \n-                        if (pageRef.getPage() instanceof BasePage) {\n-                            ((BasePage) pageRef.getPage()).setModalResult(true);\n-                        }\n-\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         modal.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error disabling resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.SUSPEND, pageId);\n@@ -326,12 +321,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     new ArrayList<>(table.getModelObject()));\n                         }\n \n-                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         modal.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error unlinking resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.UNLINK, pageId);\n@@ -355,12 +350,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     new ArrayList<>(table.getModelObject()));\n                         }\n \n-                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         modal.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error linking resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.LINK, pageId);\n@@ -385,12 +380,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     new ArrayList<>(table.getModelObject()));\n                         }\n \n-                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n                     } catch (Exception e) {\n                         LOG.error(\"Error de-provisioning user\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.DEPROVISION, pageId);\n@@ -412,12 +407,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     anyTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n \n-                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n                             loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n                         } catch (Exception e) {\n                             LOG.error(\"Error provisioning user\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            modal.getFeedbackPanel().refresh(target);\n+                            modal.getNotificationPanel().refresh(target);\n                         }\n                     }\n                 }\n@@ -443,12 +438,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     new ArrayList<>(table.getModelObject()));\n                         }\n \n-                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n                         loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n                     } catch (Exception e) {\n                         LOG.error(\"Error unassigning resources\", e);\n                         error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }\n             }, ActionLink.ActionType.UNASSIGN, pageId);\n@@ -469,12 +464,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     anyTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n \n-                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n                             loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n                         } catch (Exception e) {\n                             LOG.error(\"Error assigning resources\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            modal.getFeedbackPanel().refresh(target);\n+                            modal.getNotificationPanel().refresh(target);\n                         }\n                     }\n                 }\n@@ -552,13 +547,13 @@ private void passwordManagement(\n             final ResourceAssociationAction type,\n             final Collection<StatusBean> selection) {\n \n-        final ClearIndicatingAjaxButton goon = new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\",\n-                \"Continue\"), pageRef) {\n+        final IndicatingAjaxButton goon =\n+                new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\")) {\n \n             private static final long serialVersionUID = -2341391430136818027L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 try {\n                     if (StringUtils.isNotBlank(password.getModelObject())\n                             && !password.getModelObject().equals(confirm.getModelObject())) {\n@@ -588,22 +583,19 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                         // ignore\n                     }\n \n-                    ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n                     if (bulkActionResult != null) {\n                         loadBulkActionResultPage(target, selection, bulkActionResult);\n                     } else {\n-\n-                        target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                        modal.getNotificationPanel().refresh(target);\n                         modal.close(target);\n                     }\n                 } catch (Exception e) {\n                     LOG.error(\"Error provisioning resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    modal.getFeedbackPanel().refresh(target);\n+                    modal.getNotificationPanel().refresh(target);\n                 }\n             }\n-        }.feedbackPanelAutomaticReload(false);\n+        };\n \n         pwdMgtForm.addOrReplace(goon);\n "},{"sha":"0cad78a3cb385bc50ea26d20e46bdafe7c4ae7c8","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -23,7 +23,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AnyTypeClassModalPanel;\n import org.apache.syncope.client.console.panels.AnyTypeClassesPanel;\n import org.apache.syncope.client.console.panels.AnyTypeModalPanel;\n@@ -32,7 +31,6 @@\n import org.apache.syncope.client.console.panels.RelationshipTypeModalPanel;\n import org.apache.syncope.client.console.panels.RelationshipTypePanel;\n import org.apache.syncope.client.console.panels.SchemasPanel;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -52,6 +50,7 @@\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n public class Types extends BasePage {\n@@ -185,12 +184,12 @@ public Panel getPanel(final String panelId) {\n \n     private AjaxLink<Void> buildCreateLink(final String label, final BaseModal<?> modal, final Type type) {\n \n-        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(label, getPageReference()) {\n+        final AjaxLink<Void> createLink = new IndicatingAjaxLink<Void>(label) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 modal.header(new ResourceModel(label));\n                 target.add(modal.setContent(buildModalPanel(type)));\n                 modal.addSumbitButton();\n@@ -237,12 +236,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 tabbedPanel.setSelectedTab(tabbedPanel.getSelectedTab());\n                 target.add(tabbedPanel);\n                 modal.show(false);\n-\n-                if (((AbstractBasePage) Types.this.getPage()).isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    ((AbstractBasePage) Types.this.getPage()).setModalResult(false);\n-                }\n+                notificationPanel.refresh(target);\n             }\n         });\n     }"},{"sha":"a885c0c92a9b94054c6664b000c301adca8abd89","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/XMLEditorPopupPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -68,12 +68,12 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 } catch (SyncopeClientException scee) {\n                     error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                 }\n-                feedbackPanel.refresh(target);\n+                notificationPanel.refresh(target);\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                feedbackPanel.refresh(target);\n+                notificationPanel.refresh(target);\n             }\n         };\n "},{"sha":"627e75d552bafee09aed0ccbde4214d41b487083","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -44,14 +44,11 @@\n \n     private static final long serialVersionUID = -6313532280206208227L;\n \n-    protected final NotificationPanel feedbackPanel;\n-\n     public AbstractLogsPanel(\n-            final String id, \n+            final String id,\n             final PageReference pageRef,\n             final List<LoggerTO> loggerTOs) {\n         super(id);\n-        this.feedbackPanel = ((AbstractBasePage) pageRef.getPage()).getFeedbackPanel();\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"loggerContainer\");\n         container.setOutputMarkupId(true);\n@@ -82,9 +79,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                                 info(getString(Constants.OPERATION_SUCCEEDED));\n                             } catch (SyncopeClientException e) {\n                                 LOG.error(\"Error updating the logger level\", e);\n-                                info(getString(Constants.OPERATION_ERROR));\n+                                error(getString(Constants.OPERATION_ERROR + e.getMessage()));\n                             }\n-                            feedbackPanel.refresh(target);\n+                            ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                         }\n                     });\n                     return loggerTOs;"},{"sha":"38118730fee128b2717b49dd7700c1ec11a3abce","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -68,11 +68,11 @@ protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n \n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        modal.getFeedbackPanel().refresh(target);\n+        modal.getNotificationPanel().refresh(target);\n     }\n \n     @Override\n     public void onError(final AjaxRequestTarget target, final Form<?> form) {\n-        modal.getFeedbackPanel().refresh(target);\n+        modal.getNotificationPanel().refresh(target);\n     }\n }"},{"sha":"68fcc19b8b75409f30e3f5cecbf589ca83fcd66f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractResourceModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -73,7 +73,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 @Override\n                 protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                    modal.getFeedbackPanel().refresh(target);\n+                    modal.getNotificationPanel().refresh(target);\n                 }\n             };\n         }"},{"sha":"6faced04ced9a611caf6c21b7098f70ad4fd6a8f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSchemaDetailsPanel.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -44,12 +44,7 @@ public abstract class AbstractSchemaDetailsPanel extends Panel {\n      * Schema rest client for create and update operations\n      */\n     protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-    /**\n-     * Feedback panel specified by the caller.\n-     */\n-    protected final NotificationPanel feedbackPanel;\n-\n+    \n     /**\n      * Schema form\n      */\n@@ -66,7 +61,6 @@ public AbstractSchemaDetailsPanel(\n         super(id);\n \n         this.page = (AbstractBasePage) pageReference.getPage();\n-        this.feedbackPanel = page.getFeedbackPanel();\n         this.schemaTO = modal.getFormModel();\n \n         schemaForm = new Form<>(FORM);"},{"sha":"c633a4f94420fe21e182cba22a7ca061ab7935ef","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -68,11 +68,6 @@\n      */\n     protected final WebMarkupContainer container;\n \n-    /**\n-     * Feedback panel specified by the caller.\n-     */\n-    protected final NotificationPanel feedbackPanel;\n-\n     /**\n      * Specify if results are about a filtered search or not. Using this attribute it is possible to use this panel to\n      * show results about user list and user search.\n@@ -106,7 +101,6 @@ protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> buil\n \n         this.filtered = builder.filtered;\n         this.checkBoxEnabled = builder.checkBoxEnabled;\n-        this.feedbackPanel = page.getFeedbackPanel();\n \n         this.restClient = builder.restClient;\n \n@@ -223,15 +217,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 data.setRows(rows);\n \n                 send(getParent(), Broadcast.BREADTH, data);\n-\n-                if (page.isModalResult()) {\n-                    // reset modal result\n-                    page.setModalResult(false);\n-                    // set operation succeeded\n-                    getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    // refresh feedback panel\n-                    feedbackPanel.refresh(target);\n-                }\n+                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         });\n     }"},{"sha":"cad794e91e691114274115b799ab3a92d73817a6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractTypesPanel.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import org.apache.syncope.client.console.PreferenceManager;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -42,17 +41,13 @@\n \n     protected final PreferenceManager prefMan = new PreferenceManager();\n \n-    protected final NotificationPanel feedbackPanel;\n-\n     protected final PageReference pageRef;\n \n     protected int pageRows;\n \n     public AbstractTypesPanel(final String id, final PageReference pageRef) {\n         super(id);\n-\n         this.pageRef = pageRef;\n-        this.feedbackPanel = ((AbstractBasePage) pageRef.getPage()).getFeedbackPanel();\n     }\n \n     protected void buildDataTable(final WebMarkupContainer container, final List<IColumn<T, String>> tableCols,"},{"sha":"8c063b2a5930c5b792cb5c929ebf17748060accc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -23,7 +23,6 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.ActionTableCheckGroup;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -34,6 +33,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -100,12 +100,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             actionPanelContainer.add(new AttributeModifier(\"style\", \"display: none\"));\n         }\n \n-        bulkActionForm.add(new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), pageRef) {\n+        bulkActionForm.add(new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n \n             private static final long serialVersionUID = -2341391430136818025L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 // ignore\n             }\n         }.setVisible(false).setEnabled(false));\n@@ -123,15 +123,15 @@ public void addAction(\n \n     public void addCancelButton(final BaseModal<?> modal) {\n \n-        final AjaxButton cancel = new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), pageRef) {\n+        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n \n-            private static final long serialVersionUID = -2341391430136818025L;\n+            private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 modal.close(target);\n             }\n-        }.feedbackPanelAutomaticReload(false);\n+        };\n \n         cancel.setDefaultFormProcessing(false);\n         bulkActionForm.addOrReplace(cancel);"},{"sha":"f740fc3714a28287143d11fed92f13ae8fbecb37","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":5,"deletions":13,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -26,17 +26,17 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel.EventDataWrapper;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.pages.BulkActionModalPage;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n@@ -164,15 +164,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n \n                 final AbstractBasePage page = (AbstractBasePage) builder.pageRef.getPage();\n-\n-                if (page.isModalResult()) {\n-                    // reset modal result\n-                    page.setModalResult(false);\n-                    // set operation succeeded\n-                    getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    // refresh feedback panel\n-                    target.add(page.getFeedbackPanel());\n-                }\n+                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         });\n \n@@ -203,12 +195,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         group.add(dataTable);\n \n-        fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, builder.pageRef) {\n+        fragment.add(new IndicatingAjaxButton(\"bulkActionLink\", bulkActionForm) {\n \n             private static final long serialVersionUID = 382302811235019988L;\n \n             @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 bulkModalWin.setContent(new BulkActionModalPage<>(\n                         bulkModalWin,\n                         builder.pageRef,"},{"sha":"fa0b7d7716f49a66f3cac07ddffd8f350667a1b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -201,7 +201,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                                     LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                                 }\n-                                ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n                             }\n                         }, ActionLink.ActionType.DELETE, String.format(\"%s_%s\", type, AnyEntitlement.DELETE));\n "},{"sha":"a5eae89a5ba10a0082709c3e9f01ac47c3b6c1d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -74,14 +73,12 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 SyncopeConsoleSession.get().getService(AnyTypeClassService.class).update(updatedAnyTypeClassTO);\n             }\n \n-            if (pageRef.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating AnyTypeClass\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"f5dba790d4e8950d08130785f13f5ef7e927457e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -154,7 +154,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     LOG.error(\"While deleting AnyTypeClass\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                 }\n-                ((AbstractBasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n+                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n "},{"sha":"76acff00d59c1cec85902263b306447959756463","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeModalPanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n@@ -51,15 +50,12 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             } else {\n                 SyncopeConsoleSession.get().getService(AnyTypeService.class).update(updateAnyTypeTO);\n             }\n-\n-            if (pageRef.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating AnyTypeTO\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"ccdfd77aecbac4c90f087d00c06df7ea3a280db2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -166,17 +167,14 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         try {\n-                            SyncopeConsoleSession.get().getService(AnyTypeService.class\n-                            ).delete(anyTypeTO.getKey());\n+                            SyncopeConsoleSession.get().getService(AnyTypeService.class).delete(anyTypeTO.getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                            feedbackPanel.refresh(target);\n                             target.add(webContainer);\n                         } catch (Exception e) {\n                             LOG.error(\"While deleting AnyTypeTO\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            feedbackPanel.refresh(target);\n                         }\n-\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPE_DELETE);\n "},{"sha":"03a836d7633fc671a0c116424de3a7e95a48ea68","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -26,7 +26,6 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -102,7 +101,7 @@ protected void check(final AjaxRequestTarget target) {\n                         } else {\n                             error(getString(\"error_connection\"));\n                         }\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n \n                 };\n@@ -127,7 +126,7 @@ public Panel getPanel(final String panelId) {\n \n     @Override\n     public void onError(final AjaxRequestTarget target, final Form<?> form) {\n-        modal.getFeedbackPanel().refresh(target);\n+        modal.getNotificationPanel().refresh(target);\n     }\n \n     @Override\n@@ -163,15 +162,12 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             } else {\n                 connectorRestClient.update(connInstanceTO);\n             }\n-\n-            if (pageRef.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"Failure managing resource {}\", connInstanceTO, e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n "},{"sha":"e013dcb3f79e9c859c835c8cbe39ed0c0de4e077","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerSchemaDetails.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n@@ -65,14 +64,12 @@ public void getOnSubmit(final AjaxRequestTarget target,\n                 schemaRestClient.updateDerSchema(updatedDerSchemaTO);\n             }\n \n-            if (pageReference.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating derived schema\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"86702652c31e1362469f07b7a7233b27985d75b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -27,7 +27,7 @@\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -151,7 +151,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n-                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n "},{"sha":"03102ae36c3a09b46eac3fa21c155288adb402a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":28,"deletions":66,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -18,93 +18,55 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import com.googlecode.wicket.jquery.core.Options;\n+import com.googlecode.wicket.kendo.ui.widget.notification.Notification;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.wicket.AttributeModifier;\n-import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.syncope.client.console.commons.StyledNotificationBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.feedback.FeedbackMessage;\n-import org.apache.wicket.feedback.IFeedbackMessageFilter;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.feedback.FeedbackMessage;\n \n public class NotificationPanel extends FeedbackPanel {\n \n     private static final long serialVersionUID = 5895940553202128621L;\n \n-    public NotificationPanel(final String id) {\n-        this(id, null);\n-    }\n+    private final Notification notification;\n \n-    public NotificationPanel(\n-            final String id, final IFeedbackMessageFilter feedbackMessageFilter) {\n+    private StyledNotificationBehavior behavior;\n \n-        super(id, feedbackMessageFilter);\n+    public NotificationPanel(final String id) {\n+        super(id);\n \n-        this.add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+        final Options options = new Options();\n+        options.set(\"position\", \"{ pinned: true }\");\n+        options.set(\"autoHideAfter\", \"0\");\n+        options.set(\"templates\",\n+                \"[ { type: 'success' , template: $('#successTemplate').html() },\"\n+                + \"  { type: 'error', template: $('#errorTemplate').html() } ] \");\n \n-            private static final long serialVersionUID = -7133385027739964990L;\n+        notification = new Notification(Constants.FEEDBACK, options) {\n+\n+            private static final long serialVersionUID = 785830249476640904L;\n \n             @Override\n-            protected void onEvent(final AjaxRequestTarget target) {\n-                target.appendJavaScript(\"setTimeout(\\\"$('div#\" + getMarkupId() + \"').fadeOut('normal')\\\", 0);\");\n+            public StyledNotificationBehavior newWidgetBehavior(final String selector) {\n+                behavior = new StyledNotificationBehavior(selector, options);\n+                return behavior;\n             }\n-        });\n-\n-        setOutputMarkupId(true);\n-\n-        this.add(new AttributeModifier(\"class\", new Model<>(\"alert\")));\n-        this.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 1; display: none;\")));\n-    }\n+        };\n \n-    private String getCSSClass(final int level) {\n-        return level == FeedbackMessage.SUCCESS\n-                ? \"alert alert-success\"\n-                : level == FeedbackMessage.INFO\n-                        ? \"alert alert-info\"\n-                        : level == FeedbackMessage.WARNING\n-                                ? \"alert alert-warning\"\n-                                : \"alert alert-danger\";\n+        add(notification);\n     }\n \n-    /**\n-     * Method to refresh the notification panel.\n-     *\n-     * If there are any feedback messages for the user, find the gravest level, format the notification panel\n-     * accordingly and show it.\n-     *\n-     * @param target AjaxRequestTarget to add panel and the calling javascript function\n-     */\n     public void refresh(final AjaxRequestTarget target) {\n-        // any feedback at all in the current form?\n         if (anyMessage()) {\n-            int highestFeedbackLevel = FeedbackMessage.INFO;\n-\n-            // any feedback with the given level?\n-            if (anyMessage(FeedbackMessage.WARNING)) {\n-                highestFeedbackLevel = FeedbackMessage.WARNING;\n-            }\n-            if (anyMessage(FeedbackMessage.ERROR)) {\n-                highestFeedbackLevel = FeedbackMessage.ERROR;\n-            }\n-\n-            // add the css classes to the notification panel,\n-            add(new AttributeModifier(\"class\", new Model<>(getCSSClass(highestFeedbackLevel))));\n-\n-            // refresh the panel and call the js function with the panel markup id \n-            // and the total count of messages\n-            target.add(this);\n-\n-            if (anyMessage(FeedbackMessage.ERROR)) {\n-                target.appendJavaScript(\"$('div#\" + getMarkupId() + \"').fadeTo('normal', 1.0);\");\n-            } else {\n-                target.appendJavaScript(\n-                        \"showNotification('\" + getMarkupId() + \"', \" + getCurrentMessages().size() + \");\");\n+            for (FeedbackMessage message : getCurrentMessages()) {\n+                if (anyErrorMessage()) {\n+                    notification.error(target, message.getMessage());\n+                } else {\n+                    notification.success(target, message.getMessage());\n+                }\n             }\n         }\n     }\n-\n-    @Override\n-    protected String getCSSClass(final FeedbackMessage message) {\n-        return \"notificationpanel_row\";\n-    }\n }"},{"sha":"f5566801f9bfc9fed2602c5ad832326011f3a4c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -412,14 +411,12 @@ public void getOnSubmit(final AjaxRequestTarget target, final BaseModal<?> modal\n                 schemaRestClient.updatePlainSchema(updatedPlainSchemaTO);\n             }\n \n-            if (pageReference.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating plain schema\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"ae5988576cd53471dfcf76cfd9a7680f54cbdc49","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -22,7 +22,6 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -127,7 +126,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new UserWizardBuilder(\n                                 BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).\n-                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getPopupComponent()).\n                         build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n                 break;\n@@ -141,7 +140,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new GroupWizardBuilder(\n                                 BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).\n-                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel).\n                         build(id);\n                 // list of group is available to all authenticated users\n                 break;\n@@ -156,7 +155,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new AnyWizardBuilder<AnyObjectTO>(\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n-                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n+                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getPopupComponent()).\n                         build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n                         String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));"},{"sha":"b7692fb41f52438c89b5916805e26fa5f39a698b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,8 +20,6 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -83,18 +81,13 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             } else {\n                 realmRestClient.update(updatedRealmTO);\n             }\n-\n-            if (pageRef.getPage() instanceof BasePage) {\n-                ((BasePage) pageRef.getPage()).setModalResult(true);\n-            }\n-\n-            AbstractBasePage.class.cast(pageRef.getPage()).setModalResult(true);\n-\n+            \n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             closeAction(target, form);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating realm\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"dd119598a5429cabc18c0b0ee53350d52b603f0f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypeModalPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n@@ -54,14 +53,12 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 SyncopeConsoleSession.get().getService(RelationshipTypeService.class).update(updateRelationshipTypeTO);\n             }\n \n-            if (pageRef.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating RelationshipTypeTO\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"2467a4a2ea1f791c8a74ff57d5cd0c5fb63d3f1c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -151,13 +151,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             SyncopeConsoleSession.get().getService(\n                                     RelationshipTypeService.class).delete(relationshipTypeTO.getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                            feedbackPanel.refresh(target);\n                             target.add(webContainer);\n                         } catch (Exception e) {\n                             LOG.error(\"While deleting RelationshipType\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            feedbackPanel.refresh(target);\n                         }\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.RELATIONSHIPTYPE_DELETE);\n "},{"sha":"3864322cdc7a00a6978f8a813549aa2c3f7a2619","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.topology.TopologyNode;\n@@ -145,7 +144,7 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_DELETE);\n \n         builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(\"wizard\", model.getObject(), pageRef));\n-        builder.addNotificationPanel(modal.getFeedbackPanel());\n+        builder.addNotificationPanel(modal.getNotificationPanel());\n \n         tabs.add(new AbstractTab(new ResourceModel(\"provisions\", \"provisions\")) {\n \n@@ -178,7 +177,7 @@ protected void check(final AjaxRequestTarget target) {\n                         } else {\n                             error(getString(\"error_connection\"));\n                         }\n-                        modal.getFeedbackPanel().refresh(target);\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 };\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE, StandardEntitlement.CONNECTOR_READ);\n@@ -204,7 +203,7 @@ public Panel getPanel(final String panelId) {\n \n     @Override\n     public void onError(final AjaxRequestTarget target, final Form<?> form) {\n-        modal.getFeedbackPanel().refresh(target);\n+        modal.getNotificationPanel().refresh(target);\n     }\n \n     @Override\n@@ -236,7 +235,6 @@ public boolean evaluate(final MappingItemTO item) {\n \n         if (connObjectKeyError) {\n             error(getString(\"connObjectKeyValidation\"));\n-            modal.getFeedbackPanel().refresh(target);\n         } else {\n             try {\n                 if (createFlag) {\n@@ -251,16 +249,13 @@ public boolean evaluate(final MappingItemTO item) {\n                     resourceRestClient.update(resourceTO);\n                 }\n \n-                if (pageRef.getPage() instanceof AbstractBasePage) {\n-                    ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-                }\n+                info(getString(Constants.OPERATION_SUCCEEDED));\n                 modal.close(target);\n             } catch (Exception e) {\n                 LOG.error(\"Failure managing resource {}\", resourceTO, e);\n                 error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                modal.getFeedbackPanel().refresh(target);\n             }\n         }\n+        modal.getNotificationPanel().refresh(target);\n     }\n-\n }"},{"sha":"c84ff3c5f5d6cb7aa87a9fdf01ea8a79a4e6a218","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -25,7 +25,7 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.RoleDataProvider;\n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -122,7 +122,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n-                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.ROLE_DELETE);\n "},{"sha":"03899e94ac1412caf2982348314db710a10e9f86","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -98,8 +98,6 @@ public class SchemasPanel extends Panel {\n         }\n     };\n \n-    private final NotificationPanel feedbackPanel;\n-\n     private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     private final PreferenceManager prefMan = new PreferenceManager();\n@@ -112,7 +110,6 @@ public SchemasPanel(final String id, final PageReference pageReference, final Ba\n         super(id);\n \n         this.pageReference = pageReference;\n-        this.feedbackPanel = ((AbstractBasePage) pageReference.getPage()).getFeedbackPanel();\n         this.modal = modal;\n \n         final Collapsible collapsible = new Collapsible(\"collapsePanel\", buildTabList());\n@@ -231,25 +228,28 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        try {\n+                            switch (schemaType) {\n+                                case DERIVED:\n+                                    schemaRestClient.deleteDerSchema(schemaTO.getKey());\n+                                    break;\n+\n+                                case VIRTUAL:\n+                                    schemaRestClient.deleteVirSchema(schemaTO.getKey());\n+                                    break;\n+\n+                                default:\n+                                    schemaRestClient.deletePlainSchema(schemaTO.getKey());\n+                                    break;\n+                            }\n \n-                        switch (schemaType) {\n-                            case DERIVED:\n-                                schemaRestClient.deleteDerSchema(schemaTO.getKey());\n-                                break;\n-\n-                            case VIRTUAL:\n-                                schemaRestClient.deleteVirSchema(schemaTO.getKey());\n-                                break;\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(webContainer);\n \n-                            default:\n-                                schemaRestClient.deletePlainSchema(schemaTO.getKey());\n-                                break;\n+                        } catch (Exception e) {\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        feedbackPanel.refresh(target);\n-\n-                        target.add(webContainer);\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE);\n "},{"sha":"e3d083c74048a6f70dd30e81fc7f7f8f2e961298","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionModalPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n@@ -54,14 +53,12 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 SyncopeConsoleSession.get().getService(SecurityQuestionService.class).update(securityQuestionTO);\n             }\n \n-            if (pageRef.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n-            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating SecutiryQuestionTO\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n }"},{"sha":"45e80fe57b0a86cbc6b2dd59a1fae7aabd54bd9a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -171,13 +172,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     SyncopeConsoleSession.get().getService(SecurityQuestionService.class\n                                     ).delete(securityQuestionTO.getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    feedbackPanel.refresh(target);\n                                     target.add(webContainer);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting SecutiryQuestionTO\", e);\n                                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                                    feedbackPanel.refresh(target);\n                                 }\n+                                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n \n                             }\n                         }, ActionLink.ActionType.DELETE, StandardEntitlement.SECURITY_QUESTION_DELETE);"},{"sha":"6f5a9857eda5ecb5d8ab939b6a78c59c01991b22","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -28,7 +28,7 @@\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.pages.StatusModal;\n import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n@@ -126,8 +126,8 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel\n-                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n@@ -143,8 +143,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel\n-                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n@@ -191,7 +191,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n-                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n+\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.USER_DELETE);\n "},{"sha":"54c6688153200d4e8da05f907c9cad9fb7ca9ae4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -126,16 +125,13 @@ public void getOnSubmit(final AjaxRequestTarget target,\n             } else {\n                 schemaRestClient.updateVirSchema(updatedVirSchemaTO);\n             }\n-\n-            if (pageReference.getPage() instanceof AbstractBasePage) {\n-                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n-            }\n+            \n+            info(getString(Constants.OPERATION_SUCCEEDED));\n             modal.close(target);\n-\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating VirSchema\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getFeedbackPanel().refresh(target);\n+            modal.getNotificationPanel().refresh(target);\n         }\n     }\n "},{"sha":"17ee0cebf851dd69b34373e304f4848547eb6948","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":21,"deletions":23,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -34,8 +34,6 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.feedback.FeedbackMessage;\n-import org.apache.wicket.feedback.IFeedbackMessageFilter;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -129,27 +127,27 @@ protected AbstractSearchPanel(\n         searchFormContainer.setOutputMarkupId(true);\n         add(searchFormContainer);\n \n-        searchFeedback = new NotificationPanel(\"searchFeedback\", new IFeedbackMessageFilter() {\n-\n-            private static final long serialVersionUID = 6895024863321391672L;\n-\n-            @Override\n-            public boolean accept(final FeedbackMessage message) {\n-                boolean result;\n-\n-                // messages reported on the session have a null reporter\n-                if (message.getReporter() == null) {\n-                    result = false;\n-                } else {\n-                    // only accept messages coming from the children of the search form container\n-                    result = searchFormContainer.contains(message.getReporter(), true);\n-                }\n-\n-                return result;\n-            }\n-        });\n-        searchFeedback.setOutputMarkupId(true);\n-        add(searchFeedback);\n+//        searchFeedback = new NotificationPanel(\"searchFeedback\", new IFeedbackMessageFilter() {\n+//\n+//            private static final long serialVersionUID = 6895024863321391672L;\n+//\n+//            @Override\n+//            public boolean accept(final FeedbackMessage message) {\n+//                boolean result;\n+//\n+//                // messages reported on the session have a null reporter\n+//                if (message.getReporter() == null) {\n+//                    result = false;\n+//                } else {\n+//                    // only accept messages coming from the children of the search form container\n+//                    result = searchFormContainer.contains(message.getReporter(), true);\n+//                }\n+//\n+//                return result;\n+//            }\n+//        });\n+//        searchFeedback.setOutputMarkupId(true);\n+//        add(searchFeedback);\n \n         final SearchClausePanel searchClausePanel = new SearchClausePanel(\"panel\", \"panel\",\n                 Model.of(new SearchClause()),"},{"sha":"e11e2342332c3b11348386bb38a636b5ded8b438","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -30,7 +30,6 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractResourceModal.CreateEvent;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n@@ -156,11 +155,10 @@ public Topology() {\n             public void onClose(final AjaxRequestTarget target) {\n                 modal.show(false);\n \n-                if (isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    setModalResult(false);\n-                }\n+//                if (isModalResult()) {\n+//                    info(getString(Constants.OPERATION_SUCCEEDED));\n+//                    notificationPanel.refresh(target);\n+//                }\n             }\n         });\n "},{"sha":"3c6f72c7c485314cb3b426ac49a8b9fa387c5a64","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -22,12 +22,12 @@\n import java.text.MessageFormat;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ConnectorModal;\n import org.apache.syncope.client.console.panels.ResourceModal;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -41,6 +41,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.behavior.AttributeAppender;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -123,12 +124,12 @@ private Fragment getSyncopeFragment() {\n     private Fragment getLocationFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"locationActions\", this);\n \n-        final AjaxLink<String> create = new ClearIndicatingAjaxLink<String>(\"create\", pageRef) {\n+        final AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 final ConnInstanceTO modelObject = new ConnInstanceTO();\n                 modelObject.setLocation(node.getKey().toString());\n \n@@ -155,12 +156,12 @@ public void onClickInternal(final AjaxRequestTarget target) {\n     private Fragment getConnectorFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"connectorActions\", this);\n \n-        final AjaxLink<String> delete = new ClearIndicatingAjaxLink<String>(\"delete\", pageRef) {\n+        final AjaxLink<String> delete = new IndicatingAjaxLink<String>(\"delete\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 try {\n                     connectorRestClient.delete(Long.class.cast(node.getKey()));\n                     target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n@@ -169,20 +170,21 @@ public void onClickInternal(final AjaxRequestTarget target) {\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                 }\n-                ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n+                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n+        \n         fragment.add(delete);\n         delete.add(new ConfirmationModalBehavior());\n \n         MetaDataRoleAuthorizationStrategy.authorize(delete, ENABLE, StandardEntitlement.CONNECTOR_DELETE);\n \n-        final AjaxLink<String> create = new ClearIndicatingAjaxLink<String>(\"create\", pageRef) {\n+        final AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 final ResourceTO modelObject = new ResourceTO();\n                 modelObject.setConnector(Long.class.cast(node.getKey()));\n                 modelObject.setConnectorDisplayName(node.getDisplayName());\n@@ -204,12 +206,12 @@ public void onClickInternal(final AjaxRequestTarget target) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(create, ENABLE, StandardEntitlement.RESOURCE_CREATE);\n \n-        final AjaxLink<String> edit = new ClearIndicatingAjaxLink<String>(\"edit\", pageRef) {\n+        final AjaxLink<String> edit = new IndicatingAjaxLink<String>(\"edit\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 final ConnInstanceTO modelObject = connectorRestClient.read(Long.class.cast(node.getKey()));\n \n                 final IModel<ConnInstanceTO> model = new CompoundPropertyModel<>(modelObject);\n@@ -235,12 +237,12 @@ public void onClickInternal(final AjaxRequestTarget target) {\n     private Fragment getResurceFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"resourceActions\", this);\n \n-        final AjaxLink<String> delete = new ClearIndicatingAjaxLink<String>(\"delete\", pageRef) {\n+        final AjaxLink<String> delete = new IndicatingAjaxLink<String>(\"delete\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 try {\n                     resourceRestClient.delete(node.getKey().toString());\n                     target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n@@ -249,8 +251,7 @@ public void onClickInternal(final AjaxRequestTarget target) {\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                 }\n-\n-                ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n+                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n         fragment.add(delete);\n@@ -259,12 +260,12 @@ public void onClickInternal(final AjaxRequestTarget target) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(delete, ENABLE, StandardEntitlement.RESOURCE_DELETE);\n \n-        final AjaxLink<String> edit = new ClearIndicatingAjaxLink<String>(\"edit\", pageRef) {\n+        final AjaxLink<String> edit = new IndicatingAjaxLink<String>(\"edit\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClickInternal(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target) {\n                 final ResourceTO modelObject = resourceRestClient.read(node.getKey().toString());\n \n                 final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);"},{"sha":"4682de87ebff52578429c4183f9373411b838494","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxButton.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxButton.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -69,7 +69,7 @@ protected final void onSubmit(final AjaxRequestTarget target, final Form<?> form\n \n         Page page = pageRef.getPage();\n         if (reloadFeebackPanel && page instanceof BasePage) {\n-            target.add(((BasePage) page).getFeedbackPanel());\n+            target.add(((BasePage) page).getNotificationPanel());\n         }\n         onSubmitInternal(target, form);\n     }"},{"sha":"adab32039edae04b6727df8f695b1ca18e3df876","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.wicket.ajax.markup.html;\n \n-import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n-import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n@@ -54,10 +52,10 @@ public ClearIndicatingAjaxLink<T> feedbackPanelAutomaticReload(final boolean rel\n \n     @Override\n     public final void onClick(final AjaxRequestTarget target) {\n-        final Page page = pageRef.getPage();\n-        if (reloadFeedbackPanel && page instanceof NotificationAwareComponent) {\n-            ((NotificationAwareComponent) page).getFeedbackPanel().refresh(target);\n-        }\n+//        final Page page = pageRef.getPage();\n+//        if (reloadFeedbackPanel && page instanceof NotificationAwareComponent) {\n+//            ((NotificationAwareComponent) page).getNotification().refresh(target);\n+//        }\n         onClickInternal(target);\n     }\n }"},{"sha":"566991ede51d38f7a0ffdbcf8cc23bcee3b43a33","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -60,7 +60,7 @@\n \n     private static final String FORM = \"form\";\n \n-    private final NotificationPanel feedbackPanel;\n+    protected NotificationPanel notificationPanel;\n \n     private final List<Component> components;\n \n@@ -75,9 +75,9 @@\n     public BaseModal(final String id) {\n         super(id);\n \n-        feedbackPanel = new NotificationPanel(Constants.FEEDBACK);\n-        feedbackPanel.setOutputMarkupId(true);\n-        add(feedbackPanel);\n+        notificationPanel = new NotificationPanel(Constants.FEEDBACK);\n+        notificationPanel.setOutputMarkupId(true);\n+        addOrReplace(notificationPanel);\n \n         form = new Form<>(FORM);\n         add(form);\n@@ -109,8 +109,8 @@ public BaseModal(final String id) {\n     }\n \n     @Override\n-    public NotificationPanel getFeedbackPanel() {\n-        return feedbackPanel;\n+    public NotificationPanel getNotificationPanel() {\n+        return notificationPanel;\n     }\n \n     public Form<T> getForm() {"},{"sha":"2b2dfd3657c0f94d81959bb67c7a595723ff8185","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":34,"deletions":40,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -28,6 +28,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -441,21 +442,20 @@ public String getAjaxIndicatorMarkupId() {\n             case DELETE:\n                 fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n \n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"deleteLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"deleteLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }).setVisible(link.isEnabled(model.getObject()));\n \n                 break;\n \n@@ -475,8 +475,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }).setVisible(link.isEnabled(model.getObject()));\n \n                 break;\n \n@@ -496,8 +495,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case SUSPEND:\n@@ -583,62 +581,59 @@ public String getAjaxIndicatorMarkupId() {\n             case UNLINK:\n                 fragment = new Fragment(\"panelUnlink\", \"fragmentUnlink\", this);\n \n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", pageRef, \"confirmUnlink\") {\n+                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", \"confirmUnlink\") {\n \n                     private static final long serialVersionUID = -6957616042924610293L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case LINK:\n                 fragment = new Fragment(\"panelLink\", \"fragmentLink\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"linkLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"linkLink\") {\n \n                     private static final long serialVersionUID = -6957616042924610303L;\n \n                     @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         link.onClick(target, model.getObject());\n                     }\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case UNASSIGN:\n                 fragment = new Fragment(\"panelUnassign\", \"fragmentUnassign\", this);\n \n                 fragment.addOrReplace(\n-                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", pageRef, \"confirmUnassign\") {\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", \"confirmUnassign\") {\n \n-                            private static final long serialVersionUID = -6957616042924610294L;\n+                    private static final long serialVersionUID = -6957616042924610294L;\n \n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target, model.getObject());\n-                            }\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n \n-                            @Override\n-                            public String getAjaxIndicatorMarkupId() {\n-                                return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                            }\n-                        }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ASSIGN:\n@@ -665,21 +660,20 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment = new Fragment(\"panelDeprovision\", \"fragmentDeprovision\", this);\n \n                 fragment.addOrReplace(\n-                        new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", pageRef, \"confirmDeprovision\") {\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", \"confirmDeprovision\") {\n \n-                            private static final long serialVersionUID = -6957616042924610295L;\n+                    private static final long serialVersionUID = -6957616042924610295L;\n \n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target, model.getObject());\n-                            }\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n \n-                            @Override\n-                            public String getAjaxIndicatorMarkupId() {\n-                                return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                            }\n-                        }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n-                        setVisible(link.isEnabled(model.getObject())));\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case PROVISION:"},{"sha":"bbd9182a7330ad17fdca19bbcbb804efa7f1242e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/IndicatingOnConfirmAjaxLink.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -18,22 +18,21 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n-import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n \n-public abstract class IndicatingOnConfirmAjaxLink<T> extends ClearIndicatingAjaxLink<T> {\n+public abstract class IndicatingOnConfirmAjaxLink<T> extends IndicatingAjaxLink<T> {\n \n     private static final long serialVersionUID = 2228670850922265663L;\n \n     private final String msg;\n \n-    public IndicatingOnConfirmAjaxLink(final String id, final PageReference pageRef) {\n-        this(id, pageRef, \"confirmDelete\");\n+    public IndicatingOnConfirmAjaxLink(final String id) {\n+        this(id, \"confirmDelete\");\n     }\n \n-    public IndicatingOnConfirmAjaxLink(final String id, final PageReference pageRef, final String msg) {\n-        super(id, pageRef);\n+    public IndicatingOnConfirmAjaxLink(final String id, final String msg) {\n+        super(id);\n         this.msg = msg;\n         this.add(new ConfirmationModalBehavior(msg));\n     }"},{"sha":"8478d22867b6228b32a5ff6b08ae02d37ba012bb","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":57,"deletions":27,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -16,18 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-.feedbackPanel {\n-  padding-left: 0px;\n-  text-align: center;\n-}\n-\n-.notificationpanel_row {  \n-  list-style-type: none;\n-}  \n-\n-.notificationpanel_row span {  \n-  border:0 none;\n-}\n \n pre {\n   white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n@@ -361,22 +349,64 @@ div.searchResult{\n }\n \n *::after, *::before {\n-    box-sizing: border-box;\n+  box-sizing: border-box;\n }\n \n \n .wicket-aa-container {\n-    border-color: #eee;\n-    box-shadow: none;\n-    background-clip: padding-box;\n-    background-color: #fff;\n-    border: 1px solid rgba(0, 0, 0, 0.15);\n-    border-radius: 4px;\n-    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.176);\n-    float: left;\n-    font-size: 14px;\n-    list-style: outside none none;\n-    min-width: 160px;\n-    text-align: left;\n-    max-height: 250px;\n-}\n\\ No newline at end of file\n+  border-color: #eee;\n+  box-shadow: none;\n+  background-clip: padding-box;\n+  background-color: #fff;\n+  border: 1px solid rgba(0, 0, 0, 0.15);\n+  border-radius: 4px;\n+  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.176);\n+  float: left;\n+  font-size: 14px;\n+  list-style: outside none none;\n+  min-width: 160px;\n+  text-align: left;\n+  max-height: 250px;\n+}\n+\n+.k-notification-error.k-group {\n+  background: rgba(100% , 0% , 0% , .7);\n+  color: red;\n+}\n+\n+.errorNotification {\n+  width: 300px;\n+  height: 100px;\n+}\n+\n+.errorNotification h3 {\n+  font-size: 1em;\n+  padding: 10px 10px 5px;\n+}\n+\n+.errorNotification span {\n+  float: left;\n+  margin: 30px 15px 30px 15px;\n+  font-size: 2em;\n+}\n+\n+.k-notification-success.k-group {\n+  background: rgba(0% , 60% , 0% , .7);\n+  color: #fff;\n+}\n+\n+.successNotification {\n+  width: 300px;\n+  height: 100px;\n+}\n+\n+.successNotification h3 {\n+  font-size: 1em;\n+  padding: 32px 10px 5px;\n+}\n+\n+.successNotification span {\n+  float: left;\n+  margin: 30px 15px 30px 15px;\n+  font-size: 2em;\n+}"},{"sha":"8db121414e1a7c4a567409bf15655f5760e074b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -34,21 +34,11 @@\n     <link href=\"css/fieldstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n \n     <script type=\"text/javascript\" src=\"webjars/bootbox/${bootbox.version}/bootbox.js\"></script>\n-\n-    <script type=\"text/javascript\">\n-      var notificationShownTimes = 0;\n-      function showNotification(componentId, messagecount) {\n-        notificationShownTimes++;\n-        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n-        $('div#' + componentId).fadeTo('normal', 1.0);\n-        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n-      }\n-    </script>\n   </head>\n   <body class=\"skin-green\">\n \n     <div class=\"wrapper\">\n-\n+      <span wicket:id=\"feedback\"></span>\n       <header class=\"main-header block-header\">\n         <div class=\"logo logo-pos\">\n           <img src=\"img/logo.png\"/>\n@@ -130,9 +120,7 @@\n         </section>\n       </aside>\n \n-      <div class=\"content-wrapper basepage-content\">\n-        <div wicket:id=\"feedback\" role=\"alert\"/>\n-\n+      <div id=\"main-content\" class=\"content-wrapper basepage-content\">\n         <wicket:child />\n       </div>\n "},{"sha":"04500bd6db7fa06a5542dfa67c6902f222fb7961","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePopupPage.html","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -32,20 +32,8 @@\n       }\n     </style>\n \n-    <script type=\"text/javascript\">\n-      var notificationShownTimes = 0;\n-\n-      function showNotification(componentId, messagecount) {\n-        notificationShownTimes++;\n-        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n-        $('div#' + componentId).fadeTo('normal', 1.0);\n-        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n-      }\n-    </script>\n   </head>\n   <body onload=\"setTimeout('window.focus();', 0);\">\n-    <div wicket:id=\"feedback\"/>\n-\n     <wicket:child />\n   </body>\n </html>"},{"sha":"b68b8cdab6571885d2b0ebdfd4af48fa5948a08b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Logs.html","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -21,6 +21,7 @@\n   <wicket:extend>\n     <div class=\"wrapper\">\n       <div class=\"admin-content-page\" wicket:id=\"content\">\n+\n         <div class=\"box box-solid box-primary\">\n           <div class=\"box-header with-border\">\n             <h3 class=\"box-title\">\n@@ -29,10 +30,13 @@ <h3 class=\"box-title\">\n           </div>\n           <div class=\"box-body\">\n             <div class=\"realms\">\n-              <div wicket:id=\"tabbedPanel\"></div>\n+              <form wicket:id=\"form\">\n+                <div wicket:id=\"tabbedPanel\"></div>\n+              </form>\n             </div>\n           </div>\n         </div>\n+\n       </div>\n     </div>\n   </wicket:extend>"},{"sha":"ec489d142dad7dee7263a98dc665ff20581d2972","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/NotificationPanel.html","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.html?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -0,0 +1,38 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+\n+    <span wicket:id=\"feedback\"></span>\n+\n+    <script id=\"errorTemplate\" type=\"text/x-kendo-template\">\n+      <div data-time=\"0\" class=\"errorNotification\">\n+      <span class=\"glyphicon glyphicon-remove-circle\"></span>\n+      <h3>#= message #</h3>\n+      </div>\n+    </script>\n+\n+    <script id=\"successTemplate\" type=\"text/x-kendo-template\">\n+      <div data-time=\"3000\" class=\"successNotification\">\n+      <span class=\"glyphicon glyphicon-ok-circle\"></span>\n+      <h3>#= message #</h3>\n+      </div>\n+    </script>\n+  </wicket:panel>\n+</html>"},{"sha":"8c7cfb54267f7a4c6cf3adf08825ca7d4219bac8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.html","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -19,17 +19,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:head>\n-    <script type=\"text/javascript\">\n-      var notificationShownTimes = 0;\n-\n-      function showNotification(componentId, messagecount) {\n-        notificationShownTimes++;\n-        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n-        $('div#' + componentId).fadeTo('normal', 1.0);\n-        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n-      }\n-    </script>\n-\n+    \n     <style type=\"text/css\">\n       table.palette td.header {\n         background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n@@ -45,7 +35,6 @@\n           <h4 wicket:id=\"header-label\" class=\"modal-title\">Modal header</h4>\n         </div>\n         <div class=\"modal-body\">\n-          <div wicket:id=\"feedback\"/>\n           <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\" wicket:id=\"form\">\n             <span wicket:id=\"content\">[modal content]</span>\n           </form>"},{"sha":"6737d912c390a86840edb423a74dad51ec800b02","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRouteModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -74,12 +74,12 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 } catch (SyncopeClientException scee) {\n                     error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                 }\n-                modal.getFeedbackPanel().refresh(target);\n+                modal.getNotificationPanel().refresh(target);\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                modal.getFeedbackPanel().refresh(target);\n+                modal.getNotificationPanel().refresh(target);\n             }\n \n         };"},{"sha":"18d3781fb2ce9250e0c92dd478bb7cd0c776ccb2","filename":"pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c34dd05eace2e3db9235f614639567f536d1937e/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c34dd05eace2e3db9235f614639567f536d1937e/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c34dd05eace2e3db9235f614639567f536d1937e","patch":"@@ -898,6 +898,16 @@ under the License.\n         <artifactId>wicket-jquery-ui</artifactId>\n         <version>${wicket-jqueryui.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+        <artifactId>wicket-kendo-ui</artifactId>\n+        <version>${wicket-jqueryui.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.googlecode.wicket-jquery-ui</groupId>\n+        <artifactId>wicket-kendo-ui-theme-bootstrap</artifactId>\n+        <version>${wicket-jqueryui.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.apache.wicket</groupId>\n         <artifactId>wicket-native-websocket-javax</artifactId>"}]}