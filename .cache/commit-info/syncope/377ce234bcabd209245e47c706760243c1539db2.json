{"sha":"377ce234bcabd209245e47c706760243c1539db2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM3N2NlMjM0YmNhYmQyMDkyNDVlNDdjNzA2NzYwMjQzYzE1MzlkYjI=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-07-27T13:28:27Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-07-27T15:21:34Z"},"message":"SYNCOPE-909 - Consolidate \"Create\" functionality","tree":{"sha":"2e2e6fa44f99e0e4b6668565105113e653b22ce5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2e2e6fa44f99e0e4b6668565105113e653b22ce5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/377ce234bcabd209245e47c706760243c1539db2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/377ce234bcabd209245e47c706760243c1539db2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/377ce234bcabd209245e47c706760243c1539db2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/377ce234bcabd209245e47c706760243c1539db2/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"1b325bb8e8ed2305a69f85adca6478aadaf30cb2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1b325bb8e8ed2305a69f85adca6478aadaf30cb2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1b325bb8e8ed2305a69f85adca6478aadaf30cb2"}],"stats":{"total":192,"additions":43,"deletions":149},"files":[{"sha":"426ab818a7f6770c940fca4d4a50e019cc1c680d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectCreateProcessor.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b325bb8e8ed2305a69f85adca6478aadaf30cb2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b325bb8e8ed2305a69f85adca6478aadaf30cb2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java?ref=1b325bb8e8ed2305a69f85adca6478aadaf30cb2","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.camel.processor;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.camel.Exchange;\n-import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class AnyObjectCreateProcessor implements Processor {\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public void process(final Exchange exchange) {\n-        WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n-        AnyObjectTO any = exchange.getProperty(\"any\", AnyObjectTO.class);\n-        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n-        Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n-\n-        List<PropagationTask> tasks = propagationManager.getCreateTasks(\n-                AnyTypeKind.ANY_OBJECT,\n-                created.getResult(),\n-                created.getPropByRes(),\n-                any.getVirAttrs(),\n-                excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n-    }\n-\n-}"},{"sha":"494e3193e802ba801ef703b8984746a5c20cfa91","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/CreateProcessor.java","status":"renamed","additions":36,"deletions":14,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FCreateProcessor.java?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -24,7 +24,10 @@\n import org.apache.camel.Processor;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -34,7 +37,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class UserCreateProcessor implements Processor {\n+public class CreateProcessor implements Processor {\n \n     @Autowired\n     protected PropagationManager propagationManager;\n@@ -46,23 +49,42 @@ public class UserCreateProcessor implements Processor {\n     @Override\n     public void process(final Exchange exchange) {\n         if ((exchange.getIn().getBody() instanceof WorkflowResult)) {\n-            WorkflowResult<Pair<String, Boolean>> created =\n-                    (WorkflowResult<Pair<String, Boolean>>) exchange.getIn().getBody();\n-            UserTO actual = exchange.getProperty(\"actual\", UserTO.class);\n+            Object actual = exchange.getProperty(\"actual\");\n             Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n             Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n+            \n+            if (actual instanceof UserTO) {\n+                WorkflowResult<Pair<String, Boolean>> created =\n+                        (WorkflowResult<Pair<String, Boolean>>) exchange.getIn().getBody();\n+    \n+                List<PropagationTask> tasks = propagationManager.getUserCreateTasks(\n+                        created.getResult().getKey(),\n+                        ((UserTO) actual).getPassword(),\n+                        created.getResult().getValue(),\n+                        created.getPropByRes(),\n+                        ((UserTO) actual).getVirAttrs(),\n+                        excludedResources);\n+                PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-            List<PropagationTask> tasks = propagationManager.getUserCreateTasks(\n-                    created.getResult().getKey(),\n-                    actual.getPassword(),\n-                    created.getResult().getValue(),\n-                    created.getPropByRes(),\n-                    actual.getVirAttrs(),\n-                    excludedResources);\n-            PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n+                exchange.getOut().setBody(\n+                        new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses()));\n+            } else if (actual instanceof AnyTO) {\n+                WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n \n-            exchange.getOut().setBody(\n-                    new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses()));\n+                AnyTypeKind anyTypeKind = AnyTypeKind.GROUP;\n+                if (actual instanceof AnyObjectTO) {\n+                    anyTypeKind = AnyTypeKind.ANY_OBJECT;\n+                }\n+                List<PropagationTask> tasks = propagationManager.getCreateTasks(\n+                        anyTypeKind,\n+                        created.getResult(),\n+                        created.getPropByRes(),\n+                        ((AnyTO) actual).getVirAttrs(),\n+                        excludedResources);\n+                PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n+\n+                exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n+            }\n         }\n     }\n ","previous_filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserCreateProcessor.java"},{"sha":"c70074305ba2b7566ae9c3ca54ee8cbe985fc954","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupCreateProcessor.java","status":"removed","additions":0,"deletions":64,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b325bb8e8ed2305a69f85adca6478aadaf30cb2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b325bb8e8ed2305a69f85adca6478aadaf30cb2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupCreateProcessor.java?ref=1b325bb8e8ed2305a69f85adca6478aadaf30cb2","patch":"@@ -1,64 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.camel.processor;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.camel.Exchange;\n-import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class GroupCreateProcessor implements Processor {\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public void process(final Exchange exchange) {\n-        WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n-        GroupTO any = exchange.getProperty(\"any\", GroupTO.class);\n-        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n-        Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n-\n-        List<PropagationTask> tasks = propagationManager.getCreateTasks(\n-                AnyTypeKind.GROUP,\n-                created.getResult(),\n-                created.getPropByRes(),\n-                any.getVirAttrs(),\n-                excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n-    }\n-\n-}"},{"sha":"d4e56e4ff4f943661a1c4ef67ec0de7ef94cb558","filename":"ext/camel/provisioning-camel/src/main/resources/anyObjectRoutes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -21,12 +21,12 @@ under the License.\n      \n   <route id=\"createAnyObject\">\n     <from uri=\"direct:createAnyObject\"/>\n-    <setProperty propertyName=\"any\">\n+    <setProperty propertyName=\"actual\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n       <bean ref=\"awfAdapter\" method=\"create(${body})\"/>\n-      <process ref=\"anyObjectCreateProcessor\"/>\n+      <process ref=\"createProcessor\"/>\n       <to uri=\"direct:createAnyObjectPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"},{"sha":"c71b59076321f873226a6e68147b8b945d16fe34","filename":"ext/camel/provisioning-camel/src/main/resources/groupRoutes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -21,12 +21,12 @@ under the License.\n      \n   <route id=\"createGroup\">\n     <from uri=\"direct:createGroup\"/>\n-    <setProperty propertyName=\"any\">\n+    <setProperty propertyName=\"actual\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n       <bean ref=\"gwfAdapter\" method=\"create(${body})\"/>\n-      <process ref=\"groupCreateProcessor\"/>\n+      <process ref=\"createProcessor\"/>\n       <to uri=\"direct:createGroupPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"},{"sha":"7936129719eb016f0edbbaffac2cea6fd38c0502","filename":"ext/camel/provisioning-camel/src/main/resources/userRoutes.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -27,7 +27,7 @@ under the License.\n     <doTry>\n       <bean method=\"create(${body},${property.disablePwdPolicyCheck},${property.enabled},${property.storePassword})\"\n             ref=\"uwfAdapter\" />\n-      <process ref=\"userCreateProcessor\"/>\n+      <process ref=\"createProcessor\"/>\n       <to uri=\"direct:createPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"},{"sha":"ce2c6387177a06f1257fc44d3c74435e32ea6870","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -87,7 +87,7 @@ public void update() {\n                 + \"  <doTry>\\n\"\n                 + \"    <bean ref=\\\"uwfAdapter\\\" method=\\\"create(${body},${property.disablePwdPolicyCheck},\\n\"\n                 + \"                             ${property.enabled},${property.storePassword})\\\"/>\\n\"\n-                + \"    <process ref=\\\"userCreateProcessor\\\" />\\n\"\n+                + \"    <process ref=\\\"createProcessor\\\" />\\n\"\n                 + \"    <to uri=\\\"direct:createPort\\\"/>\\n\"\n                 + \"    <to uri=\\\"log:myLog\\\"/>\\n\"\n                 + \"    <doCatch>        \\n\"\n@@ -129,7 +129,7 @@ public void scriptingUpdate() {\n                 + \"    <doTry>\\n\"\n                 + \"      <bean ref=\\\"uwfAdapter\\\" method=\\\"create(${body},${property.disablePwdPolicyCheck},\\n\"\n                 + \"                                     ${property.enabled},${property.storePassword})\\\"/>\\n\"\n-                + \"      <process ref=\\\"userCreateProcessor\\\"/>\\n\"\n+                + \"      <process ref=\\\"createProcessor\\\"/>\\n\"\n                 + \"      <to uri=\\\"direct:createPort\\\"/>\\n\"\n                 + \"      <doCatch>        \\n\"\n                 + \"        <exception>java.lang.RuntimeException</exception>\\n\""}]}