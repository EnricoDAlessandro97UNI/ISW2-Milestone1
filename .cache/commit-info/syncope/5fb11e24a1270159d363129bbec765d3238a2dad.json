{"sha":"5fb11e24a1270159d363129bbec765d3238a2dad","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVmYjExZTI0YTEyNzAxNTlkMzYzMTI5YmJlYzc2NWQzMjM4YTJkYWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-02T07:51:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-02T07:51:25Z"},"message":"Upgrading Camel","tree":{"sha":"d7c1aadd5d403c9221e8d5628d0bc7ceda3d3906","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d7c1aadd5d403c9221e8d5628d0bc7ceda3d3906"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5fb11e24a1270159d363129bbec765d3238a2dad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5fb11e24a1270159d363129bbec765d3238a2dad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5fb11e24a1270159d363129bbec765d3238a2dad","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5fb11e24a1270159d363129bbec765d3238a2dad/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1a69c11d5e1d4043ff6a45345cb0c9ed711db33","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a1a69c11d5e1d4043ff6a45345cb0c9ed711db33","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a1a69c11d5e1d4043ff6a45345cb0c9ed711db33"}],"stats":{"total":28,"additions":17,"deletions":11},"files":[{"sha":"f51a0e08cd5f9e8426a9fd6b47979c350c30f870","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/AbstractCamelProvisioningManager.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5fb11e24a1270159d363129bbec765d3238a2dad/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5fb11e24a1270159d363129bbec765d3238a2dad/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java?ref=5fb11e24a1270159d363129bbec765d3238a2dad","patch":"@@ -22,6 +22,8 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n import org.apache.camel.PollingConsumer;\n@@ -63,7 +65,11 @@ protected void sendMessage(final String uri, final Object obj) {\n \n     protected void sendMessage(final String uri, final Object body, final Map<String, Object> properties) {\n         DefaultExchange exchange = new DefaultExchange(contextFactory.getCamelContext());\n-        exchange.setProperties(properties);\n+        // exclude properties with null value, otherwise DefaultExchange#properties, being a ConcurrentHashMap,\n+        // will raise NPE; no problems for later usage, as Map#get will return null for missing keys anyway\n+        exchange.setProperties(properties.keySet().stream().\n+                filter(key -> properties.get(key) != null).\n+                collect(Collectors.toMap(Function.identity(), properties::get)));\n \n         DefaultMessage message = new DefaultMessage(contextFactory.getCamelContext());\n         message.setBody(body);"},{"sha":"f7e8b616031bea7d062ae546fc3cfed549537ac0","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5fb11e24a1270159d363129bbec765d3238a2dad/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5fb11e24a1270159d363129bbec765d3238a2dad/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=5fb11e24a1270159d363129bbec765d3238a2dad","patch":"@@ -21,12 +21,11 @@\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n import java.util.stream.Collectors;\n+import org.apache.camel.ExtendedCamelContext;\n import org.apache.camel.component.metrics.routepolicy.MetricsRoutePolicyFactory;\n-import org.apache.camel.model.ModelHelper;\n import org.apache.camel.model.RoutesDefinition;\n import org.apache.camel.spring.SpringCamelContext;\n import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.dao.CamelRouteDAO;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n@@ -67,11 +66,12 @@ public SpringCamelContext getCamelContext() {\n \n     private void loadRouteDefinitions(final List<String> routes) {\n         try {\n-            RoutesDefinition routeDefs = ModelHelper.loadRoutesDefinition(\n-                    camelContext,\n-                    IOUtils.toInputStream(\"<routes xmlns=\\\"http://camel.apache.org/schema/spring\\\">\"\n-                            + StringUtils.join(routes)\n-                            + \"</routes>\", StandardCharsets.UTF_8));\n+            RoutesDefinition routeDefs = (RoutesDefinition) camelContext.adapt(ExtendedCamelContext.class).\n+                    getXMLRoutesDefinitionLoader().loadRoutesDefinition(\n+                            camelContext,\n+                            IOUtils.toInputStream(\"<routes xmlns=\\\"http://camel.apache.org/schema/spring\\\">\"\n+                                    + routes.stream().collect(Collectors.joining())\n+                                    + \"</routes>\", StandardCharsets.UTF_8));\n             camelContext.addRouteDefinitions(routeDefs.getRoutes());\n         } catch (Exception e) {\n             LOG.error(\"While adding route definitions into Camel Context {}\", getCamelContext(), e);"},{"sha":"a09f02bdfb0dfbda838ee75cc31da0880ef20abf","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5fb11e24a1270159d363129bbec765d3238a2dad/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5fb11e24a1270159d363129bbec765d3238a2dad/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5fb11e24a1270159d363129bbec765d3238a2dad","patch":"@@ -427,7 +427,7 @@ under the License.\n \n     <flowable.version>6.5.0</flowable.version>\n \n-    <camel.version>3.0.1</camel.version>\n+    <camel.version>3.1.0</camel.version>\n \n     <slf4j.version>1.7.30</slf4j.version>\n     <opensaml.version>3.3.1</opensaml.version>\n@@ -2452,8 +2452,8 @@ under the License.\n             <link>http://fasterxml.github.io/jackson-dataformats-text/javadoc/yaml/2.10/</link>\n             <link>http://fasterxml.github.io/jackson-dataformats-text/javadoc/csv/2.10/</link>\n             <link>http://fasterxml.github.io/jackson-datatype-joda/javadoc/2.10/</link>\n-            <link>http://www.javadoc.io/doc/org.apache.camel/camel-core/3.0.1/</link>\n-            <link>http://www.javadoc.io/doc/org.apache.camel/camel-spring/3.0.1/</link>\n+            <link>http://www.javadoc.io/doc/org.apache.camel/camel-core/3.1.0/</link>\n+            <link>http://www.javadoc.io/doc/org.apache.camel/camel-spring/3.1.0/</link>\n             <link>https://ci.apache.org/projects/wicket/apidocs/8.x/</link>\n             <link>https://commons.apache.org/proper/commons-lang/javadocs/api-release/</link>\n             <link>https://commons.apache.org/proper/commons-jexl/apidocs/</link>"}]}