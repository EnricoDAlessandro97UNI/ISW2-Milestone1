{"sha":"58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU4Y2U2MGMyNTZiZmRiZjdjNmVlZmJlMzUyMmMzZmQ1MmQzOTViNDA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-25T08:20:12Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-25T08:20:12Z"},"message":"Fixes issue 220\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247214 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"48686abee96d523a31d61fa48f6ed3e83a185bbf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/48686abee96d523a31d61fa48f6ed3e83a185bbf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40/comments","author":null,"committer":null,"parents":[{"sha":"a51b2704e9ebc151eb14c318125196327d7e6feb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a51b2704e9ebc151eb14c318125196327d7e6feb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a51b2704e9ebc151eb14c318125196327d7e6feb"}],"stats":{"total":30,"additions":21,"deletions":9},"files":[{"sha":"af25c03327ed8128afd3130c0455ae82ff565105","filename":"console/src/main/java/org/syncope/console/wicket/extensions/markup/html/repeater/data/table/UserAttrColumn.java","status":"modified","additions":21,"deletions":9,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java?ref=58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","patch":"@@ -53,31 +53,43 @@ public void populateItem(\n             final String componentId,\n             final IModel<UserTO> rowModel) {\n \n-        final List<String> values;\n+        List<String> values = null;\n \n         switch (schemaType) {\n             case schema:\n-                values = rowModel.getObject().getAttributeMap().\n-                        get(name).getValues();\n+                if (rowModel.getObject().getAttributeMap().containsKey(name)) {\n+                    values = rowModel.getObject().getAttributeMap().\n+                            get(name).getValues();\n+                }\n                 break;\n+\n             case virtualSchema:\n-                values = rowModel.getObject().getVirtualAttributeMap().\n-                        get(name).getValues();\n+                if (rowModel.getObject().getVirtualAttributeMap().\n+                        containsKey(name)) {\n+\n+                    values = rowModel.getObject().getVirtualAttributeMap().\n+                            get(name).getValues();\n+                }\n                 break;\n+\n             case derivedSchema:\n-                values = rowModel.getObject().getDerivedAttributeMap().\n-                        get(name).getValues();\n+                if (rowModel.getObject().getDerivedAttributeMap().\n+                        containsKey(name)) {\n+\n+                    values = rowModel.getObject().getDerivedAttributeMap().\n+                            get(name).getValues();\n+                }\n                 break;\n+\n             default:\n-                values = null;\n         }\n \n         if (values == null || values.isEmpty()) {\n             cellItem.add(new Label(componentId, \"\"));\n         } else {\n             if (values.size() == 1) {\n                 cellItem.add(\n-                        new Label(componentId, values.iterator().next()));\n+                        new Label(componentId, values.get(0)));\n             } else {\n                 cellItem.add(\n                         new Label(componentId, values.toString()));"}]}