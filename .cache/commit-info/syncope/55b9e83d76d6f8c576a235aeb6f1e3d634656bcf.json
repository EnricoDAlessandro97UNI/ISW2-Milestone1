{"sha":"55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU1YjllODNkNzZkNmY4YzU3NmEyMzVhZWI2ZjFlM2Q2MzQ2NTZiY2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-29T13:59:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-29T14:00:14Z"},"message":"[SYNCOPE-952] Realm management now working for enduser","tree":{"sha":"ee9d15691c3545e406a263da11e20ff77edb45c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ee9d15691c3545e406a263da11e20ff77edb45c1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bf1b6270e2114c3cf0f82240dcbc8d28747de1a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bf1b6270e2114c3cf0f82240dcbc8d28747de1a1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bf1b6270e2114c3cf0f82240dcbc8d28747de1a1"}],"stats":{"total":260,"additions":167,"deletions":93},"files":[{"sha":"f47ec8be237bcdd5d8f477ff50dc85f1d64fc2d2","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -31,10 +31,11 @@\n import org.apache.syncope.client.enduser.resources.LogoutResource;\n import org.apache.syncope.client.enduser.resources.SchemaResource;\n import org.apache.syncope.client.enduser.resources.SecurityQuestionResource;\n-import org.apache.syncope.client.enduser.resources.SyncopeAnyClassTypeResource;\n-import org.apache.syncope.client.enduser.resources.SyncopeAnyTypeResource;\n-import org.apache.syncope.client.enduser.resources.SyncopeGroupResource;\n-import org.apache.syncope.client.enduser.resources.SyncopeResourceResource;\n+import org.apache.syncope.client.enduser.resources.AnyTypeClassResource;\n+import org.apache.syncope.client.enduser.resources.AnyTypeResource;\n+import org.apache.syncope.client.enduser.resources.GroupResource;\n+import org.apache.syncope.client.enduser.resources.ExternalResourceResource;\n+import org.apache.syncope.client.enduser.resources.RealmResource;\n import org.apache.syncope.client.enduser.resources.UserSelfChangePassword;\n import org.apache.syncope.client.enduser.resources.UserSelfConfirmPasswordReset;\n import org.apache.syncope.client.enduser.resources.UserSelfCreateResource;\n@@ -245,7 +246,7 @@ public IResource getResource() {\n \n             @Override\n             public IResource getResource() {\n-                return new SyncopeResourceResource();\n+                return new ExternalResourceResource();\n             }\n         });\n \n@@ -290,13 +291,23 @@ public IResource getResource() {\n             }\n         });\n \n+        mountResource(\"/api/realms\", new ResourceReference(\"realms\") {\n+\n+            private static final long serialVersionUID = -128426276529456602L;\n+\n+            @Override\n+            public IResource getResource() {\n+                return new RealmResource();\n+            }\n+        });\n+\n         mountResource(\"/api/groups\", new ResourceReference(\"groups\") {\n \n             private static final long serialVersionUID = -128426276529456602L;\n \n             @Override\n             public IResource getResource() {\n-                return new SyncopeGroupResource();\n+                return new GroupResource();\n             }\n         });\n \n@@ -306,7 +317,7 @@ public IResource getResource() {\n \n             @Override\n             public IResource getResource() {\n-                return new SyncopeAnyClassTypeResource();\n+                return new AnyTypeClassResource();\n             }\n         });\n \n@@ -316,7 +327,7 @@ public IResource getResource() {\n \n             @Override\n             public IResource getResource() {\n-                return new SyncopeAnyTypeResource();\n+                return new AnyTypeResource();\n             }\n         });\n "},{"sha":"6d230c19b27b1012b47b9d23beb6ef8bffead1f0","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AnyTypeClassResource.java","status":"renamed","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeClassResource.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -26,18 +26,14 @@\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.request.resource.AbstractResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class SyncopeAnyClassTypeResource extends AbstractBaseResource {\n+public class AnyTypeClassResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = 7475706378304995200L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeAnyClassTypeResource.class);\n-\n     private final AnyTypeClassService anyTypeClassService;\n \n-    public SyncopeAnyClassTypeResource() {\n+    public AnyTypeClassResource() {\n         anyTypeClassService = SyncopeEnduserSession.get().getService(AnyTypeClassService.class);\n     }\n ","previous_filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyClassTypeResource.java"},{"sha":"5d58f3741c02e4739c481882ed19dfa7481828a7","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AnyTypeResource.java","status":"renamed","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAnyTypeResource.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -25,18 +25,14 @@\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.wicket.request.resource.AbstractResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class SyncopeAnyTypeResource extends AbstractBaseResource {\n+public class AnyTypeResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = 7475706378304995200L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeAnyTypeResource.class);\n-\n     private final AnyTypeService anyTypeService;\n \n-    public SyncopeAnyTypeResource() {\n+    public AnyTypeResource() {\n         anyTypeService = SyncopeEnduserSession.get().getService(AnyTypeService.class);\n     }\n ","previous_filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyTypeResource.java"},{"sha":"e779a94279056324d2d8fad1a711aa247c65d59f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/ExternalResourceResource.java","status":"renamed","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -27,18 +27,14 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class SyncopeResourceResource extends AbstractBaseResource {\n+public class ExternalResourceResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = 7475706378304995200L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeResourceResource.class);\n-\n     private final ResourceService resourceService;\n \n-    public SyncopeResourceResource() {\n+    public ExternalResourceResource() {\n         resourceService = SyncopeEnduserSession.get().getService(ResourceService.class);\n     }\n ","previous_filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeResourceResource.java"},{"sha":"365d7dfbddc1aa3c24155a6d1b1afd4c1a07ac14","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"renamed","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -29,23 +29,21 @@\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.wicket.request.resource.AbstractResource;\n \n-public class SyncopeGroupResource extends AbstractBaseResource {\n+public class GroupResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = 7475706378304995200L;\n \n     private final GroupService groupService;\n \n-    public SyncopeGroupResource() {\n+    public GroupResource() {\n         groupService = SyncopeEnduserSession.get().getService(GroupService.class);\n     }\n \n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n-\n         LOG.debug(\"Search all available groups\");\n \n         ResourceResponse response = new ResourceResponse();\n-\n         try {\n \n             HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n@@ -55,10 +53,9 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n                 return response;\n             }\n \n-            String realm = java.net.URLDecoder.decode(attributes.getParameters().get(\"realm\").toString(\n-                    SyncopeConstants.ROOT_REALM), \"UTF-8\");\n-            final List<GroupTO> groupTOs = groupService.search(new AnyQuery.Builder().realm(realm).build()).\n-                    getResult();\n+            String realm = java.net.URLDecoder.decode(attributes.getParameters().get(\"realm\").\n+                    toString(SyncopeConstants.ROOT_REALM), \"UTF-8\");\n+            final List<GroupTO> groupTOs = groupService.search(new AnyQuery.Builder().realm(realm).build()).getResult();\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n \n@@ -69,7 +66,7 @@ public void writeData(final Attributes attributes) throws IOException {\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());\n         } catch (Exception e) {\n-            LOG.error(\"Error retrieving available grupss\", e);\n+            LOG.error(\"Error retrieving available groups\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n                     .append(\"ErrorMessage{{ \")\n                     .append(e.getMessage())","previous_filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeGroupResource.java"},{"sha":"6d5049b834a2fc443b4263900b74a0d059583e2e","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/RealmResource.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FRealmResource.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.rest.api.service.RealmService;\n+import org.apache.wicket.request.resource.AbstractResource;\n+\n+public class RealmResource extends AbstractBaseResource {\n+\n+    private static final long serialVersionUID = 7475706378304995200L;\n+\n+    private final RealmService realmService;\n+\n+    public RealmResource() {\n+        realmService = SyncopeEnduserSession.get().getService(RealmService.class);\n+    }\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        LOG.debug(\"Search all available realms\");\n+\n+        ResourceResponse response = new ResourceResponse();\n+\n+        try {\n+            HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+            if (!xsrfCheck(request)) {\n+                LOG.error(\"XSRF TOKEN does not match\");\n+                response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n+                return response;\n+            }\n+\n+            final List<RealmTO> realmTOs = realmService.list();\n+\n+            response.setWriteCallback(new AbstractResource.WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(realmTOs));\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving available realms\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+\n+        return response;\n+    }\n+\n+}"},{"sha":"1d33e3d0fdb1012d95cbcbd4aa8cb96022dcf577","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -21,9 +21,9 @@\n \n 'use strict';\n \n-angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', '$compile', \"$state\", 'AuthService',\n-  'UserSelfService', 'SchemaService', 'RealmService', 'ResourceService', 'SecurityQuestionService', 'GroupService',\n-  'AnyService', 'UserUtil', 'GenericUtil', \"ValidationExecutor\",\n+angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', '$compile', \"$state\",\n+  'AuthService', 'UserSelfService', 'SchemaService', 'RealmService', 'ResourceService', 'SecurityQuestionService',\n+  'GroupService', 'AnyService', 'UserUtil', 'GenericUtil', \"ValidationExecutor\",\n   function ($scope, $rootScope, $location, $compile, $state, AuthService, UserSelfService, SchemaService, RealmService,\n           ResourceService, SecurityQuestionService, GroupService, AnyService, UserUtil, GenericUtil, ValidationExecutor) {\n \n@@ -106,7 +106,8 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             };\n             // add other values\n             for (var j = 1; j < $scope.user.plainAttrs[plainSchemaKey].values.length; j++) {\n-              $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key].fields.push(schemas.plainSchemas[i].key + \"_\" + j);\n+              $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key].fields.\n+                      push(schemas.plainSchemas[i].key + \"_\" + j);\n             }\n           }\n         }\n@@ -141,7 +142,8 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             };\n             // add other values\n             for (var j = 1; j < $scope.user.virAttrs[virSchemaKey].values.length; j++) {\n-              $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key].fields.push(schemas.virSchemas[i].key + \"_\" + j);\n+              $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key].fields.\n+                      push(schemas.virSchemas[i].key + \"_\" + j);\n             }\n           }\n         }\n@@ -166,11 +168,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n       };\n \n       var initRealms = function () {\n-        $scope.availableRealms = RealmService.getAvailableRealmsStub();\n-      };\n-\n-      var initUserRealm = function () {\n-        $scope.user.realm = RealmService.getUserRealm();\n+        RealmService.getAvailableRealms().then(function (response) {\n+          for (var i in response) {\n+            $scope.availableRealms.push(response[i].fullPath);\n+          }\n+          $scope.availableRealms.sort();\n+        });\n       };\n \n       var initResources = function () {\n@@ -193,6 +196,10 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n+      $scope.refreshGroups = function () {\n+        initGroups();\n+      }\n+\n       var initAuxClasses = function () {\n         //fetching default user classes, that should remain in any case\n         AnyService.getAnyType(\"USER\").then(function (response) {\n@@ -330,7 +337,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         $scope.user = {\n           username: '',\n           password: '',\n-          realm: '',\n+          realm: '/',\n           securityQuestion: undefined,\n           securityAnswer: '',\n           plainAttrs: {},\n@@ -339,8 +346,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           resources: [],\n           auxClasses: []\n         };\n-        // retrieve user realm or all available realms\n-        initUserRealm();\n         // initialize auxiliary schemas in case of pre-existing classes\n         for (var index in $scope.dynamicForm.selectedAuxClasses) {\n           initUserSchemas($scope.dynamicForm.selectedAuxClasses[index]);"},{"sha":"59f8ec3c9e103d2d691ae7f176e0f063d551cede","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/anyService.js","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -30,7 +30,8 @@ angular.module('self')\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {\n-                        console.debug(\"Something went wrong during auxiliaryClasses retrieval, exit with status: \", response);\n+                        console.error(\"Something went wrong during auxiliaryClasses retrieval, exit with status: \",\n+                                response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n@@ -40,7 +41,8 @@ angular.module('self')\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {\n-                        console.error(\"Something went wrong during anyType user API retrieval, exit with status: \", response);\n+                        console.error(\"Something went wrong during anyType user API retrieval, exit with status: \",\n+                                response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };"},{"sha":"1de1ef154580615135a78fff9a2468c862ef335b","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/groupService.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -26,7 +26,7 @@ angular.module('self')\n             var groupService = {};\n \n             groupService.getGroups = function (realm) {\n-              return  $http.get(\"/syncope-enduser/api/groups?realm=\"+encodeURI(realm))\n+              return  $http.get(\"/syncope-enduser/api/groups?realm=\" + encodeURI(realm))\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {"},{"sha":"a129df76d9e0656f9aaec57b53302cf318b666a6","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/realmService.js","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FrealmService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FrealmService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FrealmService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -25,23 +25,15 @@ angular.module('self')\n \n             var realmService = {};\n \n-            realmService.getAvailableRealmsStub = function () {\n-              return  [\"/\"];\n-            };\n-\n             realmService.getAvailableRealms = function () {\n-              return  $http.get(\"/syncope-enduser/api/realms\")\n+              return $http.get(\"/syncope-enduser/api/realms\")\n                       .then(function (response) {\n-                        console.debug(\"realms response: \", response);\n                         return response.data;\n                       }, function (response) {\n                         console.error(\"Something went wrong during realms retrieval, exit with status: \", response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n \n-            realmService.getUserRealm = function () {\n-              return  \"/\";\n-            };\n             return realmService;\n           }]);"},{"sha":"e5d2d2ab6ac15e3c0b42f18130c8a29eddcffbe0","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/resourceService.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FresourceService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FresourceService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FresourceService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -31,7 +31,7 @@ angular.module('self')\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {\n-                        console.debug(\"Something went wrong during resources retrieval, exit with status: \", response);\n+                        console.error(\"Something went wrong during resources retrieval, exit with status: \", response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };"},{"sha":"45fa80b8a8d9577a2e87ffa00189746031141c3b","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/securityQuestionService.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FsecurityQuestionService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FsecurityQuestionService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FsecurityQuestionService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -35,7 +35,7 @@ angular.module('self')\n             };\n \n             securityQuestionService.getSecurityQuestionByUser = function (username) {\n-              return  $http.get(\"/syncope-enduser/api/securityQuestions/byUser/\"+username)\n+              return  $http.get(\"/syncope-enduser/api/securityQuestions/byUser/\" + username)\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {"},{"sha":"9f9f444a1b92491221e72d9b1b54bb69522c2a44","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/userSelfService.js","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -40,7 +40,6 @@ angular.module('login')\n                                 headers: {'captcha': captcha}\n                               })\n                       .then(function (response) {\n-                        console.debug(\"response save: \", response);\n                         var username = response;\n                         return username;\n                       }, function (response) {"},{"sha":"632da03cb295d51aa0af1002f89435770a683277","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-groups.html","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -19,8 +19,7 @@\n <div id=\"attribute\" class=\"form-group row upper-select\">\n   <label>{{\"REALM\"|translate}}</label>\n   <select class=\"form-control\"\n-          ng-disabled=\"true\"\n-          ng-model=\"user.realm\"\n+          ng-model=\"user.realm\" ng-change=\"refreshGroups()\"\n           ng-required=\"true\">\n     <option ng-repeat=\"realm in availableRealms\" value=\"{{realm}}\">{{realm}}</option>\n   </select>"},{"sha":"e82e4956a54f4ed6f60547f51e6bf4c40d5ea291","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -48,6 +48,7 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -70,7 +71,7 @@ public class RealmLogic extends AbstractTransactionalLogic<RealmTO> {\n     @Autowired\n     private PropagationTaskExecutor taskExecutor;\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_LIST + \"')\")\n+    @PreAuthorize(\"isAuthenticated()\")\n     public List<RealmTO> list(final String fullPath) {\n         Realm realm = realmDAO.findByFullPath(fullPath);\n         if (realm == null) {\n@@ -79,11 +80,12 @@ public List<RealmTO> list(final String fullPath) {\n             throw new NotFoundException(fullPath);\n         }\n \n+        final boolean admin = AuthContextUtils.getAuthorizations().keySet().contains(StandardEntitlement.REALM_LIST);\n         return CollectionUtils.collect(realmDAO.findDescendants(realm), new Transformer<Realm, RealmTO>() {\n \n             @Override\n             public RealmTO transform(final Realm input) {\n-                return binder.getRealmTO(input);\n+                return binder.getRealmTO(input, admin);\n             }\n         }, new ArrayList<RealmTO>());\n     }\n@@ -105,7 +107,7 @@ public ProvisioningResult<RealmTO> create(final String parentPath, final RealmTO\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n-        result.setEntity(binder.getRealmTO(realm));\n+        result.setEntity(binder.getRealmTO(realm, true));\n         result.getPropagationStatuses().addAll(propagationReporter.getStatuses());\n \n         return result;\n@@ -127,7 +129,7 @@ public ProvisioningResult<RealmTO> update(final RealmTO realmTO) {\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n-        result.setEntity(binder.getRealmTO(realm));\n+        result.setEntity(binder.getRealmTO(realm, true));\n         result.getPropagationStatuses().addAll(propagationReporter.getStatuses());\n \n         return result;\n@@ -170,7 +172,7 @@ public ProvisioningResult<RealmTO> delete(final String fullPath) {\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n \n         ProvisioningResult<RealmTO> result = new ProvisioningResult<>();\n-        result.setEntity(binder.getRealmTO(realm));\n+        result.setEntity(binder.getRealmTO(realm, true));\n         result.getPropagationStatuses().addAll(propagationReporter.getStatuses());\n \n         realmDAO.delete(realm);\n@@ -196,7 +198,7 @@ protected RealmTO resolveReference(final Method method, final Object... args)\n \n         if (fullPath != null) {\n             try {\n-                return binder.getRealmTO(realmDAO.findByFullPath(fullPath));\n+                return binder.getRealmTO(realmDAO.findByFullPath(fullPath), true);\n             } catch (Throwable e) {\n                 LOG.debug(\"Unresolved reference\", e);\n                 throw new UnresolvedReferenceException(e);"},{"sha":"44e00fcbac31b7a5b37ed74035ebbb04fa5e7d8c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/RealmDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRealmDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRealmDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRealmDataBinder.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -28,6 +28,6 @@ public interface RealmDataBinder {\n \n     PropagationByResource update(Realm realm, RealmTO realmTO);\n \n-    RealmTO getRealmTO(Realm realm);\n+    RealmTO getRealmTO(Realm realm, boolean admin);\n \n }"},{"sha":"32678cc1d5aa9ee86cf15e58cf14d81af2032107","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -210,23 +210,26 @@ public boolean evaluate(final ExternalResource resource) {\n     }\n \n     @Override\n-    public RealmTO getRealmTO(final Realm realm) {\n+    public RealmTO getRealmTO(final Realm realm, final boolean admin) {\n         RealmTO realmTO = new RealmTO();\n \n         realmTO.setKey(realm.getKey());\n         realmTO.setName(realm.getName());\n         realmTO.setParent(realm.getParent() == null ? null : realm.getParent().getKey());\n         realmTO.setFullPath(realm.getFullPath());\n-        realmTO.setAccountPolicy(realm.getAccountPolicy() == null ? null : realm.getAccountPolicy().getKey());\n-        realmTO.setPasswordPolicy(realm.getPasswordPolicy() == null ? null : realm.getPasswordPolicy().getKey());\n-        realmTO.getActionsClassNames().addAll(realm.getActionsClassNames());\n \n-        for (AnyTemplate template : realm.getTemplates()) {\n-            realmTO.getTemplates().put(template.getAnyType().getKey(), template.get());\n-        }\n+        if (admin) {\n+            realmTO.setAccountPolicy(realm.getAccountPolicy() == null ? null : realm.getAccountPolicy().getKey());\n+            realmTO.setPasswordPolicy(realm.getPasswordPolicy() == null ? null : realm.getPasswordPolicy().getKey());\n+            realmTO.getActionsClassNames().addAll(realm.getActionsClassNames());\n+\n+            for (AnyTemplate template : realm.getTemplates()) {\n+                realmTO.getTemplates().put(template.getAnyType().getKey(), template.get());\n+            }\n \n-        for (ExternalResource resource : realm.getResources()) {\n-            realmTO.getResources().add(resource.getKey());\n+            for (ExternalResource resource : realm.getResources()) {\n+                realmTO.getResources().add(resource.getKey());\n+            }\n         }\n \n         return realmTO;"},{"sha":"db285a856c705f8f1b7413b51e2a3541581fccb3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPullResultHandlerImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPullResultHandlerImpl.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -221,9 +221,9 @@ private void create(\n                 propByRes.add(ResourceOperation.CREATE, resource);\n             }\n             List<PropagationTask> tasks = propagationManager.createTasks(realm, propByRes, null);\n-            PropagationReporter propagationReporter = taskExecutor.execute(tasks, false);\n+            taskExecutor.execute(tasks, false);\n \n-            RealmTO actual = binder.getRealmTO(realm);\n+            RealmTO actual = binder.getRealmTO(realm, true);\n \n             result.setKey(actual.getKey());\n             result.setName(profile.getTask().getDestinatioRealm().getFullPath() + \"/\" + actual.getName());\n@@ -265,7 +265,7 @@ private ProvisioningReport update(final SyncDelta delta, final Realm realm, fina\n \n         LOG.debug(\"About to update {}\", realm);\n \n-        RealmTO before = binder.getRealmTO(realm);\n+        RealmTO before = binder.getRealmTO(realm, true);\n \n         ProvisioningReport result = new ProvisioningReport();\n         result.setOperation(ResourceOperation.UPDATE);\n@@ -327,7 +327,7 @@ private ProvisioningReport deprovision(final SyncDelta delta, final Realm realm,\n         result.setStatus(ProvisioningReport.Status.SUCCESS);\n         result.setKey(realm.getKey());\n \n-        RealmTO before = binder.getRealmTO(realm);\n+        RealmTO before = binder.getRealmTO(realm, true);\n \n         Object output;\n         Result resultStatus;\n@@ -351,9 +351,9 @@ private ProvisioningReport deprovision(final SyncDelta delta, final Realm realm,\n \n                 if (unlink) {\n                     realm.getResources().remove(profile.getTask().getResource());\n-                    output = binder.getRealmTO(realmDAO.save(realm));\n+                    output = binder.getRealmTO(realmDAO.save(realm), true);\n                 } else {\n-                    output = binder.getRealmTO(realm);\n+                    output = binder.getRealmTO(realm, true);\n                 }\n \n                 for (PullActions action : profile.getActions()) {\n@@ -403,7 +403,7 @@ private ProvisioningReport link(final SyncDelta delta, final Realm realm, final\n         result.setStatus(ProvisioningReport.Status.SUCCESS);\n         result.setKey(realm.getKey());\n \n-        RealmTO before = binder.getRealmTO(realm);\n+        RealmTO before = binder.getRealmTO(realm, true);\n \n         Object output;\n         Result resultStatus;\n@@ -476,7 +476,7 @@ private ProvisioningReport delete(final SyncDelta delta, final Realm realm)\n         ProvisioningReport result = new ProvisioningReport();\n \n         try {\n-            RealmTO before = binder.getRealmTO(realm);\n+            RealmTO before = binder.getRealmTO(realm, true);\n \n             result.setKey(realm.getKey());\n             result.setName(realm.getFullPath());"},{"sha":"f0b44384aec45b8b3683113247511931c146a9e2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java?ref=55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","patch":"@@ -107,7 +107,7 @@ private void provision(final Realm realm) {\n     }\n \n     private void link(final Realm realm, final Boolean unlink) {\n-        RealmTO realmTO = binder.getRealmTO(realm);\n+        RealmTO realmTO = binder.getRealmTO(realm, true);\n         if (unlink) {\n             realmTO.getResources().remove(profile.getTask().getResource().getKey());\n         } else {\n@@ -118,14 +118,14 @@ private void link(final Realm realm, final Boolean unlink) {\n     }\n \n     private void unassign(final Realm realm) {\n-        RealmTO realmTO = binder.getRealmTO(realm);\n+        RealmTO realmTO = binder.getRealmTO(realm, true);\n         realmTO.getResources().remove(profile.getTask().getResource().getKey());\n \n         deprovision(update(realmTO));\n     }\n \n     private void assign(final Realm realm) {\n-        RealmTO realmTO = binder.getRealmTO(realm);\n+        RealmTO realmTO = binder.getRealmTO(realm, true);\n         realmTO.getResources().add(profile.getTask().getResource().getKey());\n \n         provision(update(realmTO));\n@@ -222,7 +222,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                             if (!profile.getTask().isPerformUpdate()) {\n                                 LOG.debug(\"PushTask not configured for update\");\n                             } else {\n-                                update(binder.getRealmTO(realm));\n+                                update(binder.getRealmTO(realm, true));\n                             }\n \n                             break;"}]}