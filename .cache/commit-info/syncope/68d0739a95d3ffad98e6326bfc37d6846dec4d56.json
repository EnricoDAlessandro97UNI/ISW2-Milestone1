{"sha":"68d0739a95d3ffad98e6326bfc37d6846dec4d56","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY4ZDA3MzlhOTVkM2ZmYWQ5OGU2MzI2YmZjMzdkNjg0NmRlYzRkNTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-22T14:32:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-22T14:32:25Z"},"message":"Attempt to increase readability","tree":{"sha":"d1095faebcf892e423b19f1a792d241bf2cc6972","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d1095faebcf892e423b19f1a792d241bf2cc6972"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/68d0739a95d3ffad98e6326bfc37d6846dec4d56","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/68d0739a95d3ffad98e6326bfc37d6846dec4d56","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/68d0739a95d3ffad98e6326bfc37d6846dec4d56","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/68d0739a95d3ffad98e6326bfc37d6846dec4d56/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"54767715466da6cdcd4eac8150672e9065f2407c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/54767715466da6cdcd4eac8150672e9065f2407c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/54767715466da6cdcd4eac8150672e9065f2407c"}],"stats":{"total":23,"additions":10,"deletions":13},"files":[{"sha":"a9e1f908ae203e841bc83dec0e2a50a14219170a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d0739a95d3ffad98e6326bfc37d6846dec4d56/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d0739a95d3ffad98e6326bfc37d6846dec4d56/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=68d0739a95d3ffad98e6326bfc37d6846dec4d56","patch":"@@ -411,26 +411,23 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                     }\n                     item.add(panel);\n \n-                    Optional<AttrTO> previousPlainAttr = previousObject == null\n+                    Optional<AttrTO> prevAttr = previousObject == null\n                             ? Optional.empty()\n                             : previousObject.getPlainAttr(attrTO.getSchema());\n                     if (previousObject != null\n-                            && ((!previousPlainAttr.isPresent() && isNotEmptyOrBlank(attrTO.getValues()))\n-                            || (previousPlainAttr.isPresent() && !ListUtils.isEqualList(\n-                            ListUtils.select(previousPlainAttr.get().getValues(),\n-                                    object -> StringUtils.isNotEmpty(object)),\n-                            ListUtils.select(attrTO.getValues(), object -> StringUtils.isNotEmpty(object)))))) {\n-\n-                        List<String> oldValues = previousPlainAttr.isPresent()\n-                                ? previousPlainAttr.get().getValues()\n+                            && ((!prevAttr.isPresent() && attrTO.getValues().stream().anyMatch(StringUtils::isNotBlank))\n+                            || (prevAttr.isPresent() && !ListUtils.isEqualList(\n+                            prevAttr.get().getValues().stream().\n+                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n+                            attrTO.getValues().stream().\n+                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n+\n+                        List<String> oldValues = prevAttr.isPresent()\n+                                ? prevAttr.get().getValues()\n                                 : Collections.<String>emptyList();\n                         panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n                     }\n                 }\n-\n-                protected boolean isNotEmptyOrBlank(final List<String> values) {\n-                    return values.stream().anyMatch(value -> StringUtils.isNotBlank(value));\n-                }\n             });\n         }\n     }"}]}