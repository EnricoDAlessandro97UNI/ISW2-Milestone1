{"sha":"961dfd372313151ef6a85bb96d2e4dbe01ab9f02","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2MWRmZDM3MjMxMzE1MWVmNmE4NWJiOTZkMmU0ZGJlMDFhYjlmMDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-21T05:29:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-21T05:29:13Z"},"message":"Merge branch 'master' into 2_0_X","tree":{"sha":"8443ca6c77d3c9a6b38013b3aea520636f77dd01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8443ca6c77d3c9a6b38013b3aea520636f77dd01"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/961dfd372313151ef6a85bb96d2e4dbe01ab9f02","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/961dfd372313151ef6a85bb96d2e4dbe01ab9f02","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/961dfd372313151ef6a85bb96d2e4dbe01ab9f02","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"49ad3c7fb467172d39730b57efa6aaae87eeb2b8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/49ad3c7fb467172d39730b57efa6aaae87eeb2b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/49ad3c7fb467172d39730b57efa6aaae87eeb2b8"},{"sha":"8d270a1e1771573e85b7519260f0cc91b1508bb8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d270a1e1771573e85b7519260f0cc91b1508bb8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d270a1e1771573e85b7519260f0cc91b1508bb8"}],"stats":{"total":73,"additions":71,"deletions":2},"files":[{"sha":"e7fd35b0f580b5a8e0524237be9104b918a0786a","filename":"core/src/main/java/org/apache/syncope/core/util/ContentExporter.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java?ref=961dfd372313151ef6a85bb96d2e4dbe01ab9f02","patch":"@@ -70,6 +70,9 @@ public class ContentExporter extends AbstractContentDealer {\n                 \"SYNCOPEUSER\", \"UATTR\", \"UATTRVALUE\", \"UATTRUNIQUEVALUE\", \"UDERATTR\", \"UVIRATTR\",\n                 \"MEMBERSHIP\", \"MATTR\", \"MATTRVALUE\", \"MATTRUNIQUEVALUE\", \"MDERATTR\", \"MVIRATTR\"\n             }));\n+    \n+    protected final static Set<String> TABLE_SUFFIXES_TO_BE_INCLUDED =\n+            new HashSet<String>(Arrays.asList(new String[] {\"TEMPLATE\"}));\n \n     protected static final Map<String, String> TABLES_TO_BE_FILTERED =\n             Collections.singletonMap(\"TASK\", \"DTYPE <> 'PropagationTask'\");\n@@ -81,7 +84,11 @@ private boolean isTableAllowed(final String tableName) {\n         boolean allowed = true;\n         for (String prefix : TABLE_PREFIXES_TO_BE_EXCLUDED) {\n             if (tableName.toUpperCase().startsWith(prefix)) {\n-                allowed = false;\n+                for (String suffix : TABLE_SUFFIXES_TO_BE_INCLUDED) {\n+                    if (!tableName.toUpperCase().endsWith(suffix)) {                       \n+                        allowed = false;\n+                    }\n+                }               \n             }\n         }\n         return allowed;"},{"sha":"cbe13d50ec6429fcb02fdf258d74dc8e87edc038","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=961dfd372313151ef6a85bb96d2e4dbe01ab9f02","patch":"@@ -31,11 +31,13 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n@@ -149,4 +151,64 @@ public void issueSYNCOPE418() {\n             assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n+    \n+    @Test\n+    public void issueSYNCOPE629() throws IOException{\n+        SchemaTO membershipKey = new SchemaTO();\n+        membershipKey.setName(\"membershipKey\"+getUUIDString());\n+        membershipKey.setType(AttributeSchemaType.String);\n+        createSchema(AttributableType.MEMBERSHIP, SchemaType.NORMAL, membershipKey);\n+        \n+        SchemaTO roleKey = new SchemaTO();\n+        roleKey.setName(\"roleKey\"+getUUIDString());\n+        roleKey.setType(AttributeSchemaType.String);\n+        createSchema(AttributableType.ROLE, SchemaType.NORMAL, roleKey);        \n+                \n+        RoleTO roleTO = new RoleTO();\n+        roleTO.setName(\"aRole\" + getUUIDString());\n+        roleTO.setParent(8L);        \n+        // verify inheritance password and account policies\n+        roleTO.setInheritAccountPolicy(false);\n+        // not inherited so setter execution shouldn't be ignored\n+        roleTO.setAccountPolicy(6L);\n+        roleTO.setInheritPasswordPolicy(true);\n+        // inherited so setter execution should be ignored\n+        roleTO.setPasswordPolicy(2L);\n+        roleTO.getRAttrTemplates().add(\"icon\");\n+        roleTO.getAttrs().add(attributeTO(\"icon\", \"anIcon\"));\n+        roleTO.getResources().add(RESOURCE_NAME_LDAP);       \n+        roleTO.getMAttrTemplates().add(membershipKey.getName());\n+        roleTO.getRAttrTemplates().add(roleKey.getName());\n+        RoleTO testRole = createRole(roleTO);\n+                       \n+        Response response = configurationService.export();\n+        assertNotNull(response);\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatusInfo().getStatusCode());\n+        assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_XML));\n+        String contentDisposition = response.getHeaderString(HttpHeaders.CONTENT_DISPOSITION);\n+        assertNotNull(contentDisposition);\n+\n+        Object entity = response.getEntity();\n+        assertTrue(entity instanceof InputStream);\n+        String configExport = IOUtils.toString((InputStream) entity, SyncopeConstants.DEFAULT_ENCODING);\n+        assertFalse(configExport.isEmpty());\n+        assertTrue(configExport.length() > 1000);\n+        \n+        String[] result = StringUtils.substringsBetween(configExport, \"<RATTRTEMPLATE\", \"/>\");\n+        boolean rattrExists = false;\n+        for(String entry : result){\n+            if(entry.contains(roleKey.getName())) rattrExists = true;\n+        }\n+        assertTrue(rattrExists);\n+        \n+        result = StringUtils.substringsBetween(configExport, \"<MATTRTEMPLATE\", \"/>\");\n+        boolean mattrExists = false;\n+        for(String entry : result){\n+            if(entry.contains(membershipKey.getName())) mattrExists = true;\n+        }\n+        assertTrue(mattrExists);\n+        \n+        deleteRole(testRole.getId());\n+\n+    }\n }"},{"sha":"924b4aa48218e1f0e4b5b1b18efd7f402ec12a8c","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/961dfd372313151ef6a85bb96d2e4dbe01ab9f02/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=961dfd372313151ef6a85bb96d2e4dbe01ab9f02","patch":"@@ -1524,7 +1524,7 @@ under the License.\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-gpg-plugin</artifactId>\n-            <version>1.5</version>\n+            <version>1.6</version>\n             <executions>\n               <execution>\n                 <id>sign-artifacts</id>"}]}