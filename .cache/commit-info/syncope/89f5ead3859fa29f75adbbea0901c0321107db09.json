{"sha":"89f5ead3859fa29f75adbbea0901c0321107db09","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5ZjVlYWQzODU5ZmEyOWY3NWFkYmJlYTA5MDFjMDMyMTEwN2RiMDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-05T14:29:20Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-05T14:29:20Z"},"message":"Merge branch '1_2_X'","tree":{"sha":"c2ecdaee4f4838a00d96b4cb27f427ad1847e2cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c2ecdaee4f4838a00d96b4cb27f427ad1847e2cb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/89f5ead3859fa29f75adbbea0901c0321107db09","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89f5ead3859fa29f75adbbea0901c0321107db09","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/89f5ead3859fa29f75adbbea0901c0321107db09","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89f5ead3859fa29f75adbbea0901c0321107db09/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b13e9fe4dd226d7ef48b249447289e3a4451c84b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b13e9fe4dd226d7ef48b249447289e3a4451c84b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b13e9fe4dd226d7ef48b249447289e3a4451c84b"},{"sha":"e1c2587634375dba6d58133a75aa0e61a2171263","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1c2587634375dba6d58133a75aa0e61a2171263","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e1c2587634375dba6d58133a75aa0e61a2171263"}],"stats":{"total":20,"additions":13,"deletions":7},"files":[{"sha":"67d72d179eccccf65363f98c7ea0adf03a4b93e2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89f5ead3859fa29f75adbbea0901c0321107db09/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89f5ead3859fa29f75adbbea0901c0321107db09/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=89f5ead3859fa29f75adbbea0901c0321107db09","patch":"@@ -37,7 +37,7 @@ public class DateTimeFieldPanel extends DateFieldPanel {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n-    private Form form = null;\n+    private Form<?> form = null;\n \n     public DateTimeFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n         super(id, name, model, datePattern);\n@@ -50,6 +50,7 @@ public DateTimeFieldPanel(final String id, final String name, final IModel<Date>\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n+            @SuppressWarnings(\"deprecation\")\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 final Integer hours = ((DateTimeField) field).getHours();\n@@ -64,6 +65,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n+            @SuppressWarnings(\"deprecation\")\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 final Integer minutes = ((DateTimeField) field).getMinutes();\n@@ -78,14 +80,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n+            @SuppressWarnings(\"deprecation\")\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 final Date date = ((DateTimeField) field).getDate();\n                 if (date == null) {\n                     field.setModelObject(null);\n                 } else {\n                     cal.setTime(date);\n-                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())\n+                            ? Calendar.PM\n                             : Calendar.AM);\n                     field.setModelObject(cal.getTime());\n                 }\n@@ -96,6 +100,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n+            @SuppressWarnings(\"deprecation\")\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n@@ -114,18 +119,18 @@ private class DateTimeFormValidator extends AbstractFormValidator {\n \n         private static final long serialVersionUID = 6842264694946633582L;\n \n-        private FormComponent[] dateTimeComponents;\n+        private FormComponent<?>[] dateTimeComponents;\n \n         public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n             if (dateTimeComponent == null) {\n                 throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n             }\n \n-            dateTimeComponents = new FormComponent[] { dateTimeComponent };\n+            dateTimeComponents = new FormComponent<?>[] { dateTimeComponent };\n         }\n \n         @Override\n-        public FormComponent[] getDependentFormComponents() {\n+        public FormComponent<?>[] getDependentFormComponents() {\n             return dateTimeComponents;\n         }\n \n@@ -134,8 +139,9 @@ public FormComponent[] getDependentFormComponents() {\n          *\n          * @param form\n          */\n+        @SuppressWarnings(\"deprecation\")\n         @Override\n-        public void validate(final Form form) {\n+        public void validate(final Form<?> form) {\n             final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n \n             if (!(dateTimeField.getDate() != null && dateTimeField.getHours() != null\n@@ -150,7 +156,7 @@ public void validate(final Form form) {\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n-    public FieldPanel<Date> setFormValidator(final Form form) {\n+    public FieldPanel<Date> setFormValidator(final Form<?> form) {\n         if (field == null) {\n             LOG.error(\"Error setting form validator\");\n         } else {"}]}