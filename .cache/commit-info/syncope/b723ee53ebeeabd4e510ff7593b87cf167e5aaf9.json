{"sha":"b723ee53ebeeabd4e510ff7593b87cf167e5aaf9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI3MjNlZTUzZWJlZWFiZDRlNTEwZmY3NTkzYjg3Y2YxNjdlNWFhZjk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-12T13:09:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-12T13:18:03Z"},"message":"[SYNCOPE-1450] Extending the masking filter for audit entries","tree":{"sha":"947c9092234ea1a01074ac3e1c69b82948f0e5ca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/947c9092234ea1a01074ac3e1c69b82948f0e5ca"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"480ea47befd1b651b373658960bd0beee9f6a9d7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/480ea47befd1b651b373658960bd0beee9f6a9d7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/480ea47befd1b651b373658960bd0beee9f6a9d7"}],"stats":{"total":40,"additions":29,"deletions":11},"files":[{"sha":"9870dc1a1f5de54ca1e4a8e77b8706d10413c402","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AuditEntry.java","status":"modified","additions":29,"deletions":11,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b723ee53ebeeabd4e510ff7593b87cf167e5aaf9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java?ref=b723ee53ebeeabd4e510ff7593b87cf167e5aaf9","patch":"@@ -23,13 +23,17 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.common.lib.request.UserCR;\n+import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n \n public class AuditEntry implements Serializable {\n \n     private static final long serialVersionUID = -2299082316063743582L;\n \n+    private static final String MASKED_VALUE = \"<MASKED>\";\n+\n     private final String who;\n \n     private final AuditLoggerName logger;\n@@ -52,28 +56,43 @@ public AuditEntry(\n \n         this.who = who;\n         this.logger = logger;\n-        this.before = filterUserPassword(before);\n-        this.output = filterUserPassword(output);\n+        this.before = maskSensitive(before);\n+        this.output = maskSensitive(output);\n         this.input = ArrayUtils.clone(input);\n         if (this.input != null) {\n             for (int i = 0; i < this.input.length; i++) {\n-                this.input[i] = filterUserPassword(this.input[i]);\n+                this.input[i] = maskSensitive(this.input[i]);\n             }\n         }\n     }\n \n-    private Object filterUserPassword(final Object object) {\n-        Object filtered;\n+    private Object maskSensitive(final Object object) {\n+        Object masked;\n \n         if (object instanceof UserTO) {\n-            UserTO user = SerializationUtils.clone((UserTO) object);\n-            user.setPassword(null);\n-            filtered = user;\n+            masked = SerializationUtils.clone((UserTO) object);\n+            if (((UserTO) masked).getPassword() != null) {\n+                ((UserTO) masked).setPassword(MASKED_VALUE);\n+            }\n+            if (((UserTO) masked).getSecurityAnswer() != null) {\n+                ((UserTO) masked).setSecurityAnswer(MASKED_VALUE);\n+            }\n+        } else if (object instanceof UserCR) {\n+            masked = SerializationUtils.clone((UserCR) object);\n+            if (((UserCR) masked).getPassword() != null) {\n+                ((UserCR) masked).setPassword(MASKED_VALUE);\n+            }\n+            if (((UserCR) masked).getSecurityAnswer() != null) {\n+                ((UserCR) masked).setSecurityAnswer(MASKED_VALUE);\n+            }\n+        } else if (object instanceof UserUR && ((UserUR) object).getPassword() != null) {\n+            masked = SerializationUtils.clone((UserUR) object);\n+            ((UserUR) masked).getPassword().setValue(MASKED_VALUE);\n         } else {\n-            filtered = object;\n+            masked = object;\n         }\n \n-        return filtered;\n+        return masked;\n     }\n \n     public String getWho() {\n@@ -95,5 +114,4 @@ public Object getOutput() {\n     public Object[] getInput() {\n         return input;\n     }\n-\n }"}]}