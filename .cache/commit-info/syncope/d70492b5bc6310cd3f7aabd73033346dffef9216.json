{"sha":"d70492b5bc6310cd3f7aabd73033346dffef9216","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ3MDQ5MmI1YmM2MzEwY2QzZjdhYWJkNzMwMzMzNDZkZmZlZjkyMTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-10T17:06:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-10T17:06:38Z"},"message":"Removing unneded commons httpclient dependency\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1540496 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"97e1434c65973156bf12a8eb3d7ded8531c1cffb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/97e1434c65973156bf12a8eb3d7ded8531c1cffb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d70492b5bc6310cd3f7aabd73033346dffef9216","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d70492b5bc6310cd3f7aabd73033346dffef9216","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d70492b5bc6310cd3f7aabd73033346dffef9216","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d70492b5bc6310cd3f7aabd73033346dffef9216/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"772d5f84764285b83fdcd3760fd3b6cd115c9b96","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/772d5f84764285b83fdcd3760fd3b6cd115c9b96","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/772d5f84764285b83fdcd3760fd3b6cd115c9b96"}],"stats":{"total":137,"additions":57,"deletions":80},"files":[{"sha":"7c8aad2d4f2639113eefeae88fc3b511d9d4e859","filename":"console/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -56,11 +56,6 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     \n-    <dependency>\n-      <groupId>org.apache.httpcomponents</groupId>\n-      <artifactId>httpclient</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>"},{"sha":"7f06da59d6153578f87e9fedae62063264bdce65","filename":"console/src/main/java/org/apache/syncope/console/commons/HttpResourceStream.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -25,7 +25,6 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.wicket.util.lang.Bytes;\n import org.apache.wicket.util.resource.AbstractResourceStream;\n@@ -43,8 +42,12 @@ public class HttpResourceStream extends AbstractResourceStream implements IFixed\n     private String filename;\n \n     public HttpResourceStream(final Response response) {\n+        super();\n+        \n         Object entity = response.getEntity();\n-        if (response.getStatus() == HttpStatus.SC_OK && (entity instanceof InputStream)) {\n+        if (response.getStatusInfo().getStatusCode() == Response.Status.OK.getStatusCode() \n+                && (entity instanceof InputStream)) {\n+\n             this.inputStream = (InputStream) entity;\n             this.contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n             String contentDisposition = response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString());"},{"sha":"8c57b3323a888c1c6ffd0a727939b4d9e6c988d1","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -18,13 +18,12 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import java.io.IOException;\n+import java.net.URL;\n+import java.net.URLConnection;\n import java.security.AccessControlException;\n import java.util.List;\n import java.util.Locale;\n-import org.apache.http.HttpResponse;\n-import org.apache.http.client.methods.HttpGet;\n-import org.apache.http.impl.client.DefaultHttpClient;\n-import org.apache.http.util.EntityUtils;\n import org.apache.syncope.common.services.EntitlementService;\n import org.apache.syncope.common.to.EntitlementTO;\n import org.apache.syncope.common.to.UserTO;\n@@ -54,6 +53,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.util.io.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -204,11 +204,11 @@ private void authenticate(final String username, final String password) {\n \n     private String getSyncopeVersion() {\n         String version = \"\";\n+        URLConnection conn = null;\n         try {\n-            HttpGet get = new HttpGet(baseURL + \"../version.jsp\");\n-            HttpResponse response = new DefaultHttpClient().execute(get);\n-            version = EntityUtils.toString(response.getEntity()).trim();\n-        } catch (Exception e) {\n+            conn = new URL(baseURL + \"../version.jsp\").openConnection();\n+            version = IOUtils.toString(conn.getInputStream());\n+        } catch (IOException e) {\n             LOG.error(\"While fetching version from core\", e);\n             getSession().error(e.getMessage());\n         }"},{"sha":"5bdba17315168053c55cf2efe15fd6b8a92f2b04","filename":"core/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -308,11 +308,6 @@ under the License.\n       <artifactId>h2</artifactId>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.httpcomponents</groupId>\n-      <artifactId>httpclient</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-test</artifactId>"},{"sha":"664fb373a74ec741fc8c4245f557e912eb0b9d07","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -29,7 +29,6 @@\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n \n-import org.apache.http.HttpStatus;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.syncope.common.mod.AttributeMod;\n@@ -199,7 +198,7 @@ protected static AttributeMod attributeMod(final String schema, final String val\n \n     protected UserTO createUser(final UserTO userTO) {\n         Response response = userService.create(userTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n             if (ex != null) {\n                 throw (RuntimeException) ex;\n@@ -226,7 +225,7 @@ protected <T extends AbstractSchemaTO> T createSchema(final AttributableType kin\n             final SchemaType type, final T schemaTO) {\n \n         Response response = schemaService.create(kind, type, schemaTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n             if (ex != null) {\n                 throw (RuntimeException) ex;\n@@ -238,7 +237,7 @@ protected <T extends AbstractSchemaTO> T createSchema(final AttributableType kin\n \n     protected RoleTO createRole(final RoleTO newRoleTO) {\n         Response response = roleService.create(newRoleTO);\n-        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n             if (ex != null) {\n                 throw (RuntimeException) ex;\n@@ -258,7 +257,7 @@ protected RoleTO deleteRole(final Long id) {\n     @SuppressWarnings(\"unchecked\")\n     protected <T extends AbstractPolicyTO> T createPolicy(final T policy) {\n         Response response = policyService.create(policy);\n-        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n             if (ex != null) {\n                 throw (RuntimeException) ex;\n@@ -269,7 +268,7 @@ protected <T extends AbstractPolicyTO> T createPolicy(final T policy) {\n \n     protected ResourceTO createResource(final ResourceTO resourceTO) {\n         Response response = resourceService.create(resourceTO);\n-        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n             if (ex != null) {\n                 throw (RuntimeException) ex;"},{"sha":"17a19f900232957d41c466b7f3d120f4e7864a25","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -31,7 +31,6 @@\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.mod.StatusMod;\n \n import org.apache.syncope.common.search.AttributeCond;\n@@ -146,7 +145,7 @@ public void testUserSchemaAuthorization() {\n             fail(\"Schemaupdate as user schould not work\");\n         } catch (SyncopeClientException e) {\n             assertNotNull(e);\n-            assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.UNAUTHORIZED, e.getType().getResponseStatus());\n         } catch (AccessControlException e) {\n             // CXF Service will throw this exception\n             assertNotNull(e);"},{"sha":"f654a58950670de3dda6a7a85e4d580b16a28d20","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -33,7 +33,6 @@\n import javax.ws.rs.core.Response;\n \n import org.apache.commons.io.IOUtils;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.services.ConfigurationService;\n import org.apache.syncope.common.to.ConfigurationTO;\n@@ -56,7 +55,7 @@ public void create() {\n \n         Response response = configurationService.create(configurationTO);\n         assertNotNull(response);\n-        assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n         ConfigurationTO newConfigurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n                 ConfigurationTO.class);\n         assertEquals(configurationTO, newConfigurationTO);\n@@ -67,7 +66,7 @@ public void delete() throws UnsupportedEncodingException {\n         try {\n             configurationService.delete(\"nonExistent\");\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n         ConfigurationTO tokenLengthTO = configurationService.read(\"token.length\");\n@@ -76,12 +75,12 @@ public void delete() throws UnsupportedEncodingException {\n         try {\n             configurationService.read(\"token.length\");\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n         Response response = configurationService.create(tokenLengthTO);\n         assertNotNull(response);\n-        assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n         ConfigurationTO newConfigurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n                 ConfigurationTO.class);\n         assertEquals(tokenLengthTO, newConfigurationTO);\n@@ -122,7 +121,7 @@ public void update() {\n     public void dbExport() throws IOException {\n         Response response = configurationService.export();\n         assertNotNull(response);\n-        assertEquals(HttpStatus.SC_OK, response.getStatus());\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatusInfo().getStatusCode());\n         String contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n         assertTrue(contentType.contains(\"xml\"));\n         String contentDisposition = response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString());"},{"sha":"3b2926c72d9396d9ef802db0bda33a5aa8f28bda","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -36,7 +36,6 @@\n import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.services.ConnectorService;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.to.BulkAction;\n@@ -90,7 +89,7 @@ public void createWithException() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n         Response response = connectorService.create(connectorTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n         }\n     }\n@@ -145,7 +144,7 @@ public void create() {\n         connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_UPDATE);\n \n         Response response = connectorService.create(connectorTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n         }\n \n@@ -193,7 +192,7 @@ public void create() {\n         try {\n             connectorService.read(actual.getId());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -283,7 +282,7 @@ public void issueSYNCOPE10() {\n         // Create a new connector instance.\n         // ----------------------------------\n         Response response = connectorService.create(connInstanceTO);\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n             throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n         }\n \n@@ -342,7 +341,7 @@ public void deleteWithException() {\n         try {\n             connectorService.delete(0L);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -616,7 +615,7 @@ public void issueSYNCOPE112() {\n             assertFalse(connectorService.check(connectorTO));\n \n             Response response = connectorService.create(connectorTO);\n-            if (response.getStatus() != HttpStatus.SC_CREATED) {\n+            if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n                 throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n             }\n "},{"sha":"ae9e78f19ca3c85f76f2c1c85eeff5b357a57e37","filename":"core/src/test/java/org/apache/syncope/core/rest/DerivedSchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -25,7 +25,7 @@\n import static org.junit.Assert.fail;\n \n import java.util.List;\n-import org.apache.http.HttpStatus;\n+import javax.ws.rs.core.Response;\n \n import org.apache.syncope.common.to.DerSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -121,7 +121,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.ROLE, SchemaType.DERIVED, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.CONFLICT, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n@@ -130,7 +130,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.ROLE, SchemaType.DERIVED, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.BAD_REQUEST, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }"},{"sha":"45ab5a31528f8a3f61e3a58a1ec6c29c2e33bb59","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -29,7 +29,6 @@\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.report.UserReportletConf;\n import org.apache.syncope.common.services.ReportService;\n@@ -49,7 +48,7 @@ public class ReportTestITCase extends AbstractTest {\n \n     public ReportTO createReport(final ReportTO report) {\n         Response response = reportService.create(report);\n-        assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n         return adminClient.getObject(response.getLocation(), ReportService.class, ReportTO.class);\n     }\n \n@@ -143,14 +142,14 @@ public void delete() {\n             reportService.read(report.getId());\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n     private void checkExport(final Long execId, final ReportExecExportFormat fmt) throws IOException {\n         final Response response = reportService.exportExecutionResult(execId, fmt);\n         assertNotNull(response);\n-        assertEquals(HttpStatus.SC_OK, response.getStatus());\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatusInfo().getStatusCode());\n         assertNotNull(response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString()));\n         assertTrue(response.getHeaderString(RESTHeaders.CONTENT_DISPOSITION.toString()).\n                 endsWith(\".\" + fmt.name().toLowerCase()));"},{"sha":"1450da2513ef5f29593b126d4f6da92394e9be7f","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -33,7 +33,6 @@\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.to.BulkAction;\n \n@@ -299,7 +298,7 @@ public void updateWithException() {\n \n             resourceService.update(resourceTO.getName(), resourceTO);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -355,7 +354,7 @@ public void deleteWithException() {\n         try {\n             resourceService.delete(\"resourcenotfound\");\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -388,7 +387,7 @@ public void delete() {\n         try {\n             resourceService.read(resourceName);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -428,7 +427,7 @@ public void issueSYNCOPE323() {\n             createResource(actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.CONFLICT, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n@@ -437,7 +436,7 @@ public void issueSYNCOPE323() {\n             createResource(actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.BAD_REQUEST, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }"},{"sha":"7532597361891c3324f34d01459e3d0028e864e7","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -27,7 +27,7 @@\n \n import java.security.AccessControlException;\n import java.util.List;\n-import org.apache.http.HttpStatus;\n+import javax.ws.rs.core.Response;\n \n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.services.RoleService;\n@@ -141,7 +141,7 @@ public void delete() {\n         try {\n             roleService.delete(0L);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n         RoleTO roleTO = new RoleTO();\n@@ -159,7 +159,7 @@ public void delete() {\n         try {\n             roleService.read(deletedRole.getId());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -312,7 +312,7 @@ public void updateAsRoleOwner() {\n             roleService2.update(roleMod.getId(), roleMod);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.UNAUTHORIZED, e.getType().getResponseStatus());\n         } catch (AccessControlException e) {\n             assertNotNull(e);\n         }"},{"sha":"a243426a6958e982856c0cb255c7ea97623b9a19","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -27,7 +27,7 @@\n \n import java.security.AccessControlException;\n import java.util.List;\n-import org.apache.http.HttpStatus;\n+import javax.ws.rs.core.Response;\n \n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.SchemaService;\n@@ -129,7 +129,7 @@ public void delete() {\n         try {\n             firstname = schemaService.read(AttributableType.USER, SchemaType.NORMAL, schemaTO.getName());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n         assertNull(firstname);\n     }\n@@ -252,7 +252,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.CONFLICT, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n@@ -261,7 +261,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.BAD_REQUEST, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }"},{"sha":"c5daa3f8724721948c4f2d034339be4ddeb71835","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -28,7 +28,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.http.HttpStatus;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.AttributableCond;\n import org.apache.syncope.common.search.AttributeCond;\n@@ -216,7 +215,7 @@ public void deal() {\n         try {\n             taskService.delete(0L);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n         TaskExecTO exec = taskService.execute(1L, false);\n         assertEquals(PropagationTaskExecStatus.SUBMITTED.name(), exec.getStatus());\n@@ -233,7 +232,7 @@ public void deal() {\n         try {\n             taskService.readExecution(exec.getId());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n "},{"sha":"d8e2850e4ed6d8ef2df9dfe6773e24c18600e983","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -34,7 +34,6 @@\n import java.util.List;\n \n import javax.ws.rs.core.Response;\n-import org.apache.http.HttpStatus;\n \n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n@@ -512,7 +511,7 @@ public void delete() {\n         try {\n             userService.delete(0L);\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n         UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n@@ -537,7 +536,7 @@ public void delete() {\n         try {\n             userService.delete(userTO.getId());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n \n@@ -565,7 +564,7 @@ public void deleteByUsername() {\n         try {\n             userService.read(userTO.getId());\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n     }\n "},{"sha":"7324b2dec7b9f07dc201587319df1721eca07fda","filename":"core/src/test/java/org/apache/syncope/core/rest/VirtualSchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -25,7 +25,7 @@\n import static org.junit.Assert.fail;\n \n import java.util.List;\n-import org.apache.http.HttpStatus;\n+import javax.ws.rs.core.Response;\n \n import org.apache.syncope.common.to.VirSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -92,7 +92,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.CONFLICT, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n@@ -101,7 +101,7 @@ public void issueSYNCOPE323() {\n             createSchema(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL, actual);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(Response.Status.BAD_REQUEST, e.getType().getResponseStatus());\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }"},{"sha":"3292eee63f9247726ac36f13d0b2cdc859c13ef2","filename":"pom.xml","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d70492b5bc6310cd3f7aabd73033346dffef9216/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d70492b5bc6310cd3f7aabd73033346dffef9216/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d70492b5bc6310cd3f7aabd73033346dffef9216","patch":"@@ -306,8 +306,6 @@ under the License.\n \n     <commons-jexl.version>2.1.1</commons-jexl.version>\n     <commons-lang.version>3.1</commons-lang.version>\n-        \n-    <hc.client.version>4.2.6</hc.client.version>\n \n     <activiti.version>5.14</activiti.version>\n \n@@ -420,12 +418,6 @@ under the License.\n         <version>${commons-lang.version}</version>\n       </dependency>\n \n-      <dependency>\n-        <groupId>org.apache.httpcomponents</groupId>\n-        <artifactId>httpclient</artifactId>\n-        <version>${hc.client.version}</version>\n-      </dependency>\n-\n       <dependency>\n         <groupId>org.connid</groupId>\n         <artifactId>connid-framework</artifactId>"}]}