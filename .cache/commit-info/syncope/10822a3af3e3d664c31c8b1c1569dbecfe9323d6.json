{"sha":"10822a3af3e3d664c31c8b1c1569dbecfe9323d6","node_id":"C_kwDOJfYA1toAKDEwODIyYTNhZjNlM2Q2NjRjMzFjOGIxYzE1NjlkYmVjZmU5MzIzZDY","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-09-07T18:39:28Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-09-07T18:39:28Z"},"message":"Task: one table per class + Preferring JSON arrays to @ElementCollection (#374)","tree":{"sha":"0843ca020b2fbcefbaea0eac12326e189c5880e8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0843ca020b2fbcefbaea0eac12326e189c5880e8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/10822a3af3e3d664c31c8b1c1569dbecfe9323d6","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjGOVgCRBK7hj4Ov3rIwAAefwIAALkxumtWCAsoyd1Qr1sX9Ks\nB+CwcZiTqpWyRTZOtcfi2FJU1IFt/E2vsyQ2KxEtxz76DfkHhJt19HK+EdKfR/Jj\nXV/kJE82ooaq7BGDaVp64tR4t9aIYtmEF4WYVuiJhEMx0WJggvNbsxCuH4G7MfOb\nJZjydXTuuPdB+I9QVEpYuAAxgOuV8jszpS+52Si+4gasd5igu6gWapteN6kmQ4zE\nFDF7ORtjphErniBDjX7dpWHYbAEJx6bp0DGLkUqfn6KjPjoGGMigR7wwB6PQMox2\nzi5FJY605ZkY3RjWxOIYKTlkFW3T0/h0zKJuH/YlLRlZh81/JY7g20T1f9T6MJc=\n=RCe1\n-----END PGP SIGNATURE-----\n","payload":"tree 0843ca020b2fbcefbaea0eac12326e189c5880e8\nparent 5758aa8e332bf48d5db687a09c424fda01cc7aa8\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1662575968 +0200\ncommitter GitHub <noreply@github.com> 1662575968 +0200\n\nTask: one table per class + Preferring JSON arrays to @ElementCollection (#374)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10822a3af3e3d664c31c8b1c1569dbecfe9323d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10822a3af3e3d664c31c8b1c1569dbecfe9323d6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"5758aa8e332bf48d5db687a09c424fda01cc7aa8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5758aa8e332bf48d5db687a09c424fda01cc7aa8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5758aa8e332bf48d5db687a09c424fda01cc7aa8"}],"stats":{"total":2909,"additions":1774,"deletions":1135},"files":[{"sha":"8d7f7cb3886c1ac069cd0d86937e77535aab5df0","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/ConnectorDataProvider.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -51,15 +51,15 @@ public class ConnectorDataProvider extends DirectoryDataProvider<Serializable> {\n \n     protected int currentPage;\n \n-    private String keyword;\n-\n-    private final ConnectorRestClient restClient = new ConnectorRestClient();\n+    private final String keyword;\n \n     public ConnectorDataProvider(\n             final int paginatorRows,\n             final PageReference pageRef,\n             final String keyword) {\n+\n         super(paginatorRows);\n+\n         setSort(\"displayNameSortParam\", SortOrder.ASCENDING);\n         this.pageRef = pageRef;\n         this.keyword = keyword;\n@@ -75,18 +75,18 @@ public Iterator<ConnInstanceTO> iterator(final long first, final long count) {\n                 currentPage = 0;\n             }\n             if (StringUtils.isBlank(keyword)) {\n-                result = restClient.getAllConnectors();\n+                result = ConnectorRestClient.getAllConnectors();\n             } else {\n-                result = restClient.getAllConnectors().stream().filter(conn ->\n-                        conn.getDisplayName().toLowerCase().contains(keyword)).collect(Collectors.toList());\n+                result = ConnectorRestClient.getAllConnectors().stream().\n+                        filter(conn -> conn.getDisplayName().toLowerCase().contains(keyword)).\n+                        collect(Collectors.toList());\n             }\n         } catch (Exception e) {\n             LOG.error(\"While searching\", e);\n             SyncopeConsoleSession.get().onException(e);\n \n             Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(ajaxRequestTarget ->\n-                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n+            target.ifPresent(t -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(t));\n         }\n \n         SortParam<String> sortParam = getSort();\n@@ -126,10 +126,10 @@ public long size() {\n \n         try {\n             if (StringUtils.isBlank(keyword)) {\n-                result = restClient.getAllConnectors().size();\n+                result = ConnectorRestClient.getAllConnectors().size();\n             } else {\n-                result = restClient.getAllConnectors().stream().filter(conn ->\n-                        conn.getDisplayName().toLowerCase().contains(keyword)).count();\n+                result = ConnectorRestClient.getAllConnectors().stream().filter(conn\n+                        -> conn.getDisplayName().toLowerCase().contains(keyword)).count();\n             }\n         } catch (Exception e) {\n             LOG.error(\"While requesting for size()\", e);\n@@ -144,7 +144,7 @@ public long size() {\n \n     @Override\n     public IModel<Serializable> model(final Serializable object) {\n-        return new CompoundPropertyModel<>((ConnInstanceTO) object);\n+        return new CompoundPropertyModel<>(object);\n     }\n \n     public int getCurrentPage() {"},{"sha":"b19c8c11731a03450eb77664537705d12a1b1638","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/ResourceDataProvider.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -51,15 +51,15 @@ public class ResourceDataProvider extends DirectoryDataProvider<Serializable> {\n \n     protected int currentPage;\n \n-    private String keyword;\n-\n-    private final ResourceRestClient restClient = new ResourceRestClient();\n+    private final String keyword;\n \n     public ResourceDataProvider(\n             final int paginatorRows,\n             final PageReference pageRef,\n             final String keyword) {\n+\n         super(paginatorRows);\n+\n         setSort(\"keySortParam\", SortOrder.ASCENDING);\n         this.pageRef = pageRef;\n         this.keyword = keyword;\n@@ -75,18 +75,19 @@ public Iterator<ResourceTO> iterator(final long first, final long count) {\n                 currentPage = 0;\n             }\n             if (StringUtils.isBlank(keyword)) {\n-                result = restClient.list();\n+                result = ResourceRestClient.list();\n             } else {\n-                result = restClient.list().stream().filter(resource ->\n-                        resource.getKey().toLowerCase().contains(keyword)).collect(Collectors.toList());\n+                result = ResourceRestClient.list().stream().\n+                        filter(resource -> resource.getKey().toLowerCase().contains(keyword)).\n+                        collect(Collectors.toList());\n             }\n         } catch (Exception e) {\n             LOG.error(\"While searching\", e);\n             SyncopeConsoleSession.get().onException(e);\n \n             Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(ajaxRequestTarget ->\n-                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n+            target.ifPresent(ajaxRequestTarget\n+                    -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n         }\n \n         SortParam<String> sortParam = getSort();\n@@ -126,10 +127,10 @@ public long size() {\n \n         try {\n             if (StringUtils.isBlank(keyword)) {\n-                result = restClient.list().size();\n+                result = ResourceRestClient.list().size();\n             } else {\n-                result = restClient.list().stream().filter(resource ->\n-                        resource.getKey().toLowerCase().contains(keyword)).count();\n+                result = ResourceRestClient.list().stream().filter(resource\n+                        -> resource.getKey().toLowerCase().contains(keyword)).count();\n             }\n         } catch (Exception e) {\n             LOG.error(\"While requesting for size()\", e);\n@@ -144,7 +145,7 @@ public long size() {\n \n     @Override\n     public IModel<Serializable> model(final Serializable object) {\n-        return new CompoundPropertyModel<>((ResourceTO) object);\n+        return new CompoundPropertyModel<>(object);\n     }\n \n     public int getCurrentPage() {"},{"sha":"529dd8037f2a4475548a040bcbc72e076092ae24","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -307,7 +307,7 @@ protected List<ConnObject> reloadItems(\n             final String cookie,\n             final String fiql) {\n \n-        Pair<String, List<ConnObject>> items = new ResourceRestClient().searchConnObjects(\n+        Pair<String, List<ConnObject>> items = ResourceRestClient.searchConnObjects(\n                 resource,\n                 anyType,\n                 new ConnObjectTOQuery.Builder()."},{"sha":"0ae25e60281b549b11667449c878d58040932b04","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/search/ConnObjectSearchPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -37,8 +37,6 @@ public class ConnObjectSearchPanel extends AbstractSearchPanel {\n \n     private static final long serialVersionUID = 21020550706646L;\n \n-    protected final ConnectorRestClient connectorRestClient = new ConnectorRestClient();\n-\n     protected final ResourceTO resource;\n \n     public static class Builder extends AbstractSearchPanel.Builder<ConnObjectSearchPanel> {\n@@ -118,11 +116,12 @@ protected Map<String, PlainSchemaTO> load() {\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n-                return connectorRestClient.buildObjectClassInfo(\n-                        connectorRestClient.read(resource.getConnector()), false).stream().\n+                return ConnectorRestClient.buildObjectClassInfo(\n+                        ConnectorRestClient.read(resource.getConnector()), false).stream().\n                         map(ConnIdObjectClass::getAttributes).\n                         flatMap(List::stream).\n-                        collect(Collectors.toMap(PlainSchemaTO::getKey, Function.identity(),\n+                        collect(Collectors.toMap(\n+                                PlainSchemaTO::getKey, Function.identity(),\n                                 (schema1, schema2) -> schema1));\n             }\n         };"},{"sha":"7acd107744a82062f98b1f6f15dbb23b0c7d5cc8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -33,8 +33,6 @@ public class LinkedAccountPrivilegesPanel extends WizardStep {\n \n     private static final long serialVersionUID = 3388483585148725922L;\n \n-    private final ApplicationRestClient applicationRestClient = new ApplicationRestClient();\n-\n     public LinkedAccountPrivilegesPanel(final LinkedAccountTO linkedAccountTO) {\n         super();\n         setOutputMarkupId(true);\n@@ -45,7 +43,7 @@ public LinkedAccountPrivilegesPanel(final LinkedAccountTO linkedAccountTO) {\n \n             @Override\n             protected List<String> load() {\n-                return applicationRestClient.list().stream().\n+                return ApplicationRestClient.list().stream().\n                     flatMap(app -> app.getPrivileges().stream()).\n                     map(PrivilegeTO::getKey).\n                     distinct().\n@@ -63,5 +61,4 @@ protected List<String> load() {\n         privilegesPanel.setOutputMarkupId(true);\n         add(privilegesPanel);\n     }\n-\n }"},{"sha":"e73e5c97282488f436d1fe77116b3ac8a04a12bd","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -50,10 +50,6 @@ public class MergeLinkedAccountsSearchPanel extends WizardStep {\n \n     private final UserSearchPanel userSearchPanel;\n \n-    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n-\n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n     private final UserSelectionDirectoryPanel userDirectoryPanel;\n \n     private final Fragment userSearchFragment;\n@@ -77,9 +73,9 @@ public MergeLinkedAccountsSearchPanel(final MergeLinkedAccountsWizardModel model\n                 build(\"usersearch\"));\n         userSearchFragment.add(userSearchPanel);\n \n-        AnyTypeTO anyTypeTO = anyTypeRestClient.read(AnyTypeKind.USER.name());\n+        AnyTypeTO anyTypeTO = AnyTypeRestClient.read(AnyTypeKind.USER.name());\n         userDirectoryPanel = UserSelectionDirectoryPanel.class.cast(new UserSelectionDirectoryPanel.Builder(\n-                anyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                AnyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n                 build(\"searchResult\"));\n \n         userSearchFragment.add(userDirectoryPanel);"},{"sha":"9c0f94aba05e93f76abefb43afb7663467a11cd3","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGrid.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -222,6 +222,8 @@ protected boolean allowDelete(final Item<Pair<K, V>> rowItem) {\n \n     protected class AjaxGridActionsPanel<T> extends EditableGridActionsPanel<Pair<K, V>> {\n \n+        private static final long serialVersionUID = -1239486389000098745L;\n+\n         private final Item<Pair<K, V>> rowItem;\n \n         @SuppressWarnings(\"unchecked\")\n@@ -231,10 +233,12 @@ public AjaxGridActionsPanel(final String id, final Item<ICellPopulator<Pair<K, V\n             rowItem = item.findParent(Item.class);\n             addOrReplace(new AjaxLink<String>(\"delete\") {\n \n+                private static final long serialVersionUID = 1049203640150071039L;\n+\n                 @SuppressWarnings(\"unchecked\")\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n-                    EditableDataTable eventTarget = rowItem.findParent(EditableDataTable.class);\n+                    EditableDataTable<?, ?> eventTarget = rowItem.findParent(EditableDataTable.class);\n                     send(getPage(), Broadcast.BREADTH, new GridOperationData<>(\n                             OperationType.DELETE, (T) rowItem.getDefaultModelObject(), eventTarget));\n                     target.add(eventTarget);"},{"sha":"05c8973b87b50a9743b4c4170c03b7ceca8ceb73","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/AnyLayoutUtils.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutUtils.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -41,8 +41,6 @@\n \n public final class AnyLayoutUtils {\n \n-    private static final RoleRestClient ROLE_REST_CLIENT = new RoleRestClient();\n-\n     private static final JsonMapper MAPPER = JsonMapper.builder().findAndAddModules().build();\n \n     private static void setUserIfEmpty(final AnyLayout anyLayout) {\n@@ -81,7 +79,7 @@ public static AnyLayout fetch(final List<String> anyTypes) {\n         try {\n             AnyLayout anyLayout = null;\n             for (int i = 0; i < ownedRoles.size() && anyLayout == null; i++) {\n-                String anyLayoutJSON = ROLE_REST_CLIENT.readAnyLayout(ownedRoles.get(i));\n+                String anyLayoutJSON = RoleRestClient.readAnyLayout(ownedRoles.get(i));\n                 if (StringUtils.isNotBlank(anyLayoutJSON)) {\n                     anyLayout = MAPPER.readValue(anyLayoutJSON, AnyLayout.class);\n                 }"},{"sha":"a2fe99d098e8e27f190badc40b8a607c0a30b567","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -103,13 +103,10 @@ protected GroupDirectoryPanel(final String id, final Builder builder, final bool\n             protected Serializable onApplyInternal(\n                     final GroupTO groupTO, final String type, final AjaxRequestTarget target) {\n \n-                AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-                AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n-\n-                AnyLayout layout = AnyLayoutUtils.fetch(anyTypeRestClient.list());\n+                AnyLayout layout = AnyLayoutUtils.fetch(AnyTypeRestClient.list());\n                 ModalPanel anyPanel = AnyLayoutUtils.newAnyPanel(\n                         layout.getAnyPanelClass(),\n-                        BaseModal.CONTENT_ID, anyTypeRestClient.read(type), null, layout, false,\n+                        BaseModal.CONTENT_ID, AnyTypeRestClient.read(type), null, layout, false,\n                         (id, anyTypeTO, realmTO, anyLayout, pageRef) -> {\n                             final Panel panel;\n                             if (AnyTypeKind.USER.name().equals(type)) {\n@@ -119,7 +116,8 @@ protected Serializable onApplyInternal(\n                                                 is(Constants.KEY_FIELD_NAME).notNullValue()).query();\n \n                                 panel = new UserDirectoryPanel.Builder(\n-                                        classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                        AnyTypeClassRestClient.list(\n+                                                anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n                                         setRealm(realm).\n                                         setFiltered(true).\n                                         setFiql(query).\n@@ -141,7 +139,8 @@ protected Serializable onApplyInternal(\n                                                 is(Constants.KEY_FIELD_NAME).notNullValue()).query();\n \n                                 panel = new AnyObjectDirectoryPanel.Builder(\n-                                        classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                        AnyTypeClassRestClient.list(\n+                                                anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n                                         setRealm(realm).\n                                         setFiltered(true).\n                                         setFiql(query)."},{"sha":"3aa524bf1fcfd0c2badbb4477c32bcbf9d7d6865","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -261,7 +261,7 @@ public void populateItem(\n \n                 Component panel;\n                 try {\n-                    JobTO jobTO = restClient.getJob(rowModel.getObject().getKey());\n+                    JobTO jobTO = TaskRestClient.getJob(rowModel.getObject().getKey());\n                     panel = new JobActionPanel(componentId, jobTO, false, SchedTaskDirectoryPanel.this);\n                     MetaDataRoleAuthorizationStrategy.authorize(\n                         panel, WebPage.ENABLE,"},{"sha":"2492e96e619829cd55a0f50787a38dbc755a0724","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -29,7 +29,7 @@ public class CollectionPanel extends Panel {\n \n     private static final long serialVersionUID = -4042497356836230377L;\n \n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public CollectionPanel(final String id, final List values) {\n         super(id);\n \n@@ -39,7 +39,7 @@ public CollectionPanel(final String id, final List values) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n-                final String value = item.getModelObject() == null ? null : item.getModelObject().toString();\n+                String value = item.getModelObject() == null ? null : item.getModelObject().toString();\n                 item.add(new Label(\"item\", new ResourceModel(value, value)));\n             }\n         });"},{"sha":"bad84d811519f1f5ac876c40d4fc63c2a1541f39","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPropertyColumn.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -31,21 +31,19 @@\n \n     private static final long serialVersionUID = 8077865338230121496L;\n \n-    public CollectionPropertyColumn(\n-            final IModel<String> displayModel,\n-            final String propertyExpression) {\n+    public CollectionPropertyColumn(final IModel<String> displayModel, final String propertyExpression) {\n         super(displayModel, propertyExpression);\n     }\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     @Override\n-    @SuppressWarnings(\"unchecked\")\n     public void populateItem(\n             final Item<ICellPopulator<T>> cellItem, final String componentId, final IModel<T> rowModel) {\n \n-        final Object value = getDataModel(rowModel).getObject();\n+        Object value = getDataModel(rowModel).getObject();\n \n         if (value instanceof Collection) {\n-            final List values = new ArrayList((Collection) value);\n+            List values = new ArrayList((Collection) value);\n             Collections.sort(values);\n             cellItem.add(new CollectionPanel(componentId, values));\n         }"},{"sha":"91a1d4932c2be39c229eaa62a18dd04188ea3189","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":18,"deletions":32,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -154,7 +154,7 @@ public <T extends SchedTaskTO> T createSchedTask(final TaskType type, final T ta\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_UPDATE + \"')\")\n     public <T extends SchedTaskTO> T updateSchedTask(final TaskType type, final SchedTaskTO taskTO) {\n-        SchedTask task = taskDAO.find(taskTO.getKey());\n+        SchedTask task = taskDAO.find(type, taskTO.getKey());\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + taskTO.getKey());\n         }\n@@ -224,7 +224,7 @@ public <T extends TaskTO> Pair<Integer, List<T>> search(\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_READ + \"')\")\n     @Transactional(readOnly = true)\n     public <T extends TaskTO> T read(final TaskType type, final String key, final boolean details) {\n-        Task task = taskDAO.find(key);\n+        Task<?> task = taskDAO.find(type, key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n         }\n@@ -242,10 +242,7 @@ public <T extends TaskTO> T read(final TaskType type, final String key, final bo\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_EXECUTE + \"')\")\n     @Override\n     public ExecTO execute(final String key, final OffsetDateTime startAt, final boolean dryRun) {\n-        Task task = taskDAO.find(key);\n-        if (task == null) {\n-            throw new NotFoundException(\"Task \" + key);\n-        }\n+        Task<?> task = taskDAO.find(key).orElseThrow(() -> new NotFoundException(\"Task \" + key));\n         if (startAt != null && startAt.isBefore(OffsetDateTime.now())) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n             sce.getElements().add(\"Cannot schedule in the past\");\n@@ -270,12 +267,14 @@ public ExecTO execute(final String key, final OffsetDateTime startAt, final bool\n                         propagationTask.getPropagationData());\n                 taskInfo.setOldConnObjectKey(propagationTask.getOldConnObjectKey());\n \n-                TaskExec propExec = taskExecutor.execute(taskInfo, new DefaultPropagationReporter(), executor);\n+                TaskExec<PropagationTask> propExec = taskExecutor.execute(\n+                        taskInfo, new DefaultPropagationReporter(), executor);\n                 result = binder.getExecTO(propExec);\n                 break;\n \n             case NOTIFICATION:\n-                TaskExec notExec = notificationJobDelegate.executeSingle((NotificationTask) task, executor);\n+                TaskExec<NotificationTask> notExec = notificationJobDelegate.executeSingle(\n+                        (NotificationTask) task, executor);\n                 result = binder.getExecTO(notExec);\n                 break;\n \n@@ -326,7 +325,7 @@ public ExecTO execute(final String key, final OffsetDateTime startAt, final bool\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_DELETE + \"')\")\n     public <T extends TaskTO> T delete(final TaskType type, final String key) {\n-        Task task = taskDAO.find(key);\n+        Task<?> task = taskDAO.find(type, key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n         }\n@@ -356,12 +355,9 @@ public <T extends TaskTO> T delete(final TaskType type, final String key) {\n     public Pair<Integer, List<ExecTO>> listExecutions(\n             final String key, final int page, final int size, final List<OrderByClause> orderByClauses) {\n \n-        Task task = taskDAO.find(key);\n-        if (task == null) {\n-            throw new NotFoundException(\"Task \" + key);\n-        }\n+        Task<?> task = taskDAO.find(key).orElseThrow(() -> new NotFoundException(\"Task \" + key));\n \n-        Integer count = taskExecDAO.count(key);\n+        Integer count = taskExecDAO.count(task);\n \n         List<ExecTO> result = taskExecDAO.findAll(task, page, size, orderByClauses).stream().\n                 map(taskExec -> binder.getExecTO(taskExec)).collect(Collectors.toList());\n@@ -379,10 +375,8 @@ public List<ExecTO> listRecentExecutions(final int max) {\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_DELETE + \"')\")\n     @Override\n     public ExecTO deleteExecution(final String execKey) {\n-        TaskExec taskExec = taskExecDAO.find(execKey);\n-        if (taskExec == null) {\n-            throw new NotFoundException(\"Task execution \" + execKey);\n-        }\n+        TaskExec<?> taskExec = taskExecDAO.find(execKey).\n+                orElseThrow(() -> new NotFoundException(\"Task execution \" + execKey));\n \n         ExecTO taskExecutionToDelete = binder.getExecTO(taskExec);\n         taskExecDAO.delete(taskExec);\n@@ -398,10 +392,7 @@ public List<BatchResponseItem> deleteExecutions(\n             final OffsetDateTime endedBefore,\n             final OffsetDateTime endedAfter) {\n \n-        Task task = taskDAO.find(key);\n-        if (task == null) {\n-            throw new NotFoundException(\"Task \" + key);\n-        }\n+        Task<?> task = taskDAO.find(key).orElseThrow(() -> new NotFoundException(\"Task \" + key));\n \n         List<BatchResponseItem> batchResponseItems = new ArrayList<>();\n \n@@ -427,7 +418,7 @@ public List<BatchResponseItem> deleteExecutions(\n     protected Triple<JobType, String, String> getReference(final JobKey jobKey) {\n         String key = JobNamer.getTaskKeyFromJobName(jobKey.getName());\n \n-        Task task = taskDAO.find(key);\n+        Task<?> task = taskDAO.find(key).orElse(null);\n         return task == null || !(task instanceof SchedTask)\n                 ? null\n                 : Triple.of(JobType.TASK, key, binder.buildRefDesc(task));\n@@ -442,10 +433,7 @@ public List<JobTO> listJobs() {\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_READ + \"')\")\n     @Override\n     public JobTO getJob(final String key) {\n-        Task task = taskDAO.find(key);\n-        if (task == null) {\n-            throw new NotFoundException(\"Task \" + key);\n-        }\n+        Task<?> task = taskDAO.find(key).orElseThrow(() -> new NotFoundException(\"Task \" + key));\n \n         JobTO jobTO = null;\n         try {\n@@ -466,10 +454,7 @@ public JobTO getJob(final String key) {\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.TASK_EXECUTE + \"')\")\n     @Override\n     public void actionJob(final String key, final JobAction action) {\n-        Task task = taskDAO.find(key);\n-        if (task == null) {\n-            throw new NotFoundException(\"Task \" + key);\n-        }\n+        Task<?> task = taskDAO.find(key).orElseThrow(() -> new NotFoundException(\"Task \" + key));\n \n         doActionJob(JobNamer.getJobKey(task), action);\n     }\n@@ -505,8 +490,9 @@ protected TaskTO resolveReference(final Method method, final Object... args)\n         }\n \n         if (key != null) {\n+            String taskKey = key;\n             try {\n-                final Task task = taskDAO.find(key);\n+                Task<?> task = taskDAO.find(taskKey).orElseThrow(() -> new NotFoundException(\"Task \" + taskKey));\n                 return binder.getTaskTO(task, taskUtilsFactory.getInstance(task), false);\n             } catch (Throwable ignore) {\n                 LOG.debug(\"Unresolved reference\", ignore);"},{"sha":"6e03859157a9a8c244c46cef8c0c2924d59700c7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,6 +20,7 @@\n \n import java.time.OffsetDateTime;\n import java.util.List;\n+import java.util.Optional;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ExecStatus;\n@@ -33,13 +34,13 @@\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n \n-public interface TaskDAO extends DAO<Task> {\n-\n-    Class<? extends Task> getEntityReference(TaskType type);\n+public interface TaskDAO extends DAO<Task<?>> {\n \n     boolean exists(TaskType type, String key);\n \n-    <T extends Task> T find(String key);\n+    <T extends Task<T>> T find(TaskType type, String key);\n+\n+    Optional<Task<?>> find(String key);\n \n     List<SchedTask> findByDelegate(Implementation delegate);\n \n@@ -49,11 +50,11 @@ public interface TaskDAO extends DAO<Task> {\n \n     List<PushTask> findByPushActions(Implementation pushActions);\n \n-    <T extends Task> List<T> findToExec(TaskType type);\n+    <T extends Task<T>> List<T> findToExec(TaskType type);\n \n-    <T extends Task> List<T> findAll(TaskType type);\n+    <T extends Task<T>> List<T> findAll(TaskType type);\n \n-    <T extends Task> List<T> findAll(\n+    <T extends Task<T>> List<T> findAll(\n             TaskType type,\n             ExternalResource resource,\n             Notification notification,\n@@ -70,11 +71,11 @@ int count(\n             AnyTypeKind anyTypeKind,\n             String entityKey);\n \n-    <T extends Task> T save(T task);\n+    <T extends Task<T>> T save(T task);\n \n-    void delete(String key);\n+    void delete(TaskType type, String key);\n \n-    void delete(Task task);\n+    void delete(Task<?> task);\n \n     void deleteAll(ExternalResource resource, TaskType type);\n "},{"sha":"55edbc6c170645b091abe8400dc845f86486cf0c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskExecDAO.java","status":"modified","additions":17,"deletions":13,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,36 +20,40 @@\n \n import java.time.OffsetDateTime;\n import java.util.List;\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n \n-public interface TaskExecDAO extends DAO<TaskExec> {\n+public interface TaskExecDAO extends DAO<TaskExec<?>> {\n \n-    TaskExec find(String key);\n+    <T extends Task<T>> TaskExec<T> find(TaskType type, String key);\n \n-    List<TaskExec> findRecent(int max);\n+    Optional<TaskExec<?>> find(String key);\n \n-    <T extends Task> TaskExec findLatestStarted(T task);\n+    List<TaskExec<?>> findRecent(int max);\n \n-    <T extends Task> TaskExec findLatestEnded(T task);\n+    TaskExec<?> findLatestStarted(TaskType type, Task<?> task);\n \n-    int count(String taskKey);\n+    TaskExec<?> findLatestEnded(TaskType type, Task<?> task);\n \n-    <T extends Task> List<TaskExec> findAll(T task, int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n+    int count(Task<?> task);\n \n-    <T extends Task> List<TaskExec> findAll(\n-            T task,\n+    List<TaskExec<?>> findAll(Task<?> task, int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n+\n+    List<TaskExec<?>> findAll(\n+            Task<?> task,\n             OffsetDateTime startedBefore,\n             OffsetDateTime startedAfter,\n             OffsetDateTime endedBefore,\n             OffsetDateTime endedAfter);\n \n-    TaskExec save(TaskExec execution);\n+    <T extends Task<T>> TaskExec<T> save(TaskExec<T> execution);\n \n-    void saveAndAdd(String taskKey, TaskExec execution);\n+    <T extends Task<T>> void saveAndAdd(TaskType type, String taskKey, TaskExec<T> execution);\n \n-    void delete(String key);\n+    <T extends Task<T>> void delete(TaskType type, String key);\n \n-    void delete(TaskExec execution);\n+    <T extends Task<T>> void delete(TaskExec<T> execution);\n }"},{"sha":"ff2fd744dd9d1f56c5d002643f579164dd5b1af4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/EntityFactory.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,15 +18,19 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n public interface EntityFactory {\n \n     <E extends Entity> E newEntity(Class<E> reference);\n \n+    <E extends TaskExec<?>> E newTaskExec(TaskType taskType);\n+\n     ConnPoolConf newConnPoolConf();\n \n     Class<? extends User> userClass();"},{"sha":"2b4c948fed669fb40ff43b3d6fb80a5924698dd1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/NotificationTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n \n-public interface NotificationTask extends Task {\n+public interface NotificationTask extends Task<NotificationTask> {\n \n     Notification getNotification();\n "},{"sha":"387f425392eb9b272c758e5b28a30ac3395e2109","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PropagationTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n \n-public interface PropagationTask extends Task {\n+public interface PropagationTask extends Task<PropagationTask> {\n \n     String getConnObjectKey();\n "},{"sha":"0854ed8ee9441c8f067edfbfe1a612e645281678","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/ProvisioningTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n \n-public interface ProvisioningTask extends SchedTask {\n+public interface ProvisioningTask<T extends SchedTask> extends SchedTask {\n \n     ExternalResource getResource();\n "},{"sha":"970ee95589a88f8467ba3c0d0447f33a402cc417","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PullTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n-public interface PullTask extends ProvisioningTask {\n+public interface PullTask extends ProvisioningTask<PullTask> {\n \n     PullMode getPullMode();\n "},{"sha":"d831221c668e7775bb779664038c2a2e00bb42b8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n-public interface PushTask extends ProvisioningTask {\n+public interface PushTask extends ProvisioningTask<PushTask> {\n \n     Realm getSourceRealm();\n "},{"sha":"dd480294194843d8d1b24f763cdbc3cd2d759227","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/SchedTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSchedTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -21,7 +21,7 @@\n import java.time.OffsetDateTime;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n \n-public interface SchedTask extends Task {\n+public interface SchedTask extends Task<SchedTask> {\n \n     void setName(String name);\n "},{"sha":"1fe42e01b6f74f96b4cd6739c823703b0b9019af","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/Task.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -21,9 +21,9 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface Task extends Entity {\n+public interface Task<T extends Task<T>> extends Entity {\n \n-    boolean add(TaskExec exec);\n+    boolean add(TaskExec<T> exec);\n \n-    List<? extends TaskExec> getExecs();\n+    List<? extends TaskExec<T>> getExecs();\n }"},{"sha":"569aa3ad27717118f720c07fea6bd41eab09b856","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/TaskExec.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,9 +20,9 @@\n \n import org.apache.syncope.core.persistence.api.entity.Exec;\n \n-public interface TaskExec extends Exec {\n+public interface TaskExec<T extends Task<T>> extends Exec {\n \n-    Task getTask();\n+    T getTask();\n \n-    void setTask(Task task);\n+    void setTask(T task);\n }"},{"sha":"e8f5c15d384407c133234f22a8a2beaf4a70cf8f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/TaskUtils.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtils.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -25,12 +25,11 @@ public interface TaskUtils {\n \n     TaskType getType();\n \n-    <T extends Task> T newTask();\n+    <T extends Task<T>> T newTask();\n \n     <T extends TaskTO> T newTaskTO();\n \n-    <T extends Task> Class<T> taskClass();\n+    <T extends Task<T>> Class<T> taskClass();\n \n     <T extends TaskTO> Class<T> taskTOClass();\n-\n }"},{"sha":"9e9e88afe8a70c0236cb505a378307b9d779860f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/TaskUtilsFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtilsFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtilsFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTaskUtilsFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -25,7 +25,7 @@ public interface TaskUtilsFactory {\n \n     TaskUtils getInstance(TaskType type);\n \n-    TaskUtils getInstance(Task task);\n+    TaskUtils getInstance(Task<?> task);\n \n     TaskUtils getInstance(Class<? extends TaskTO> taskClass);\n "},{"sha":"f704859953193cc10bc12d60c318c2c04988eccf","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/User.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -47,6 +47,10 @@ public interface User extends Account, GroupableRelatable<User, UMembership, UPl\n \n     void setChangePwdDate(OffsetDateTime changePwdDate);\n \n+    void addToPasswordHistory(String password);\n+\n+    void removeOldestEntriesFromPasswordHistory(int n);\n+\n     List<String> getPasswordHistory();\n \n     SecurityQuestion getSecurityQuestion();"},{"sha":"88553bd2604d8542faa844ae958a27830a99b574","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -360,7 +360,7 @@ protected String getQuery(\n         }\n \n         query.append(\"SELECT DISTINCT any_id FROM \").\n-                append(svs.dynrolemembership().name).append(\" WHERE \").\n+                append(SearchSupport.dynrolemembership().name).append(\" WHERE \").\n                 append(\"role_id=?\").append(setParameter(parameters, cond.getRole())).\n                 append(')');\n \n@@ -421,7 +421,7 @@ protected String getQuery(\n         }\n \n         query.append(\"SELECT DISTINCT any_id FROM \").\n-                append(svs.dynrealmmembership().name).append(\" WHERE \").\n+                append(SearchSupport.dynrealmmembership().name).append(\" WHERE \").\n                 append(\"dynRealm_id=?\").append(setParameter(parameters, cond.getDynRealm())).\n                 append(')');\n "},{"sha":"bfb31ffff2101f72a85bdee22938961468238661","filename":"core/persistence-jpa-json/src/main/resources/domains/jpa-json/MasterContent.xml","status":"modified","additions":5,"deletions":22,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -47,11 +47,11 @@ under the License.\n \n   <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n+  <SchedTask id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n         jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n   <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n+  <SchedTask id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n         jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n \n   <!-- Password reset notifications -->\n@@ -95,14 +95,12 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"]'/> \n   <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" anyType_filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"]'/> \n \n   <ReportTemplate id=\"empty\"/>  \n \n@@ -111,20 +109,5 @@ we are happy to inform you that the password request was successfully executed f\n                   body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n+  <SyncopeRole id=\"GROUP_OWNER\" entitlements='[\"USER_SEARCH\",\"USER_READ\",\"USER_CREATE\",\"USER_UPDATE\",\"USER_DELETE\",\"ANYTYPECLASS_READ\",\"ANYTYPE_LIST\",\"ANYTYPECLASS_LIST\",\"RELATIONSHIPTYPE_LIST\",\"ANYTYPE_READ\",\"REALM_LIST\",\"GROUP_SEARCH\",\"GROUP_READ\",\"GROUP_UPDATE\",\"GROUP_DELETE\"]'/>\n </dataset>"},{"sha":"066bad35f1ce480492f0c0ea1971e35063ccfe3a","filename":"core/persistence-jpa-json/src/main/resources/myjson/indexes.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -42,8 +42,11 @@ under the License.\n   <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n   <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n \n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-  <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n+  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON NotificationTask(executed)</entry>\n+  <entry key=\"TaskExec1_TaskIdIndex\">CREATE INDEX TaskExec1_TaskIdIndex ON PropagationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec2_TaskIdIndex\">CREATE INDEX TaskExec2_TaskIdIndex ON PullTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec3_TaskIdIndex\">CREATE INDEX TaskExec3_TaskIdIndex ON PushTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec4_TaskIdIndex\">CREATE INDEX TaskExec4_TaskIdIndex ON NotificationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec5_TaskIdIndex\">CREATE INDEX TaskExec5_TaskIdIndex ON SchedTaskExec(task_id)</entry>\n   <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"8fc0de02a78753b71dca5629d1a399f257e97623","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/indexes.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -46,8 +46,11 @@ under the License.\n   <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n   <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n \n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-  <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n+  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON NotificationTask(executed)</entry>\n+  <entry key=\"TaskExec1_TaskIdIndex\">CREATE INDEX TaskExec1_TaskIdIndex ON PropagationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec2_TaskIdIndex\">CREATE INDEX TaskExec2_TaskIdIndex ON PullTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec3_TaskIdIndex\">CREATE INDEX TaskExec3_TaskIdIndex ON PushTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec4_TaskIdIndex\">CREATE INDEX TaskExec4_TaskIdIndex ON NotificationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec5_TaskIdIndex\">CREATE INDEX TaskExec5_TaskIdIndex ON SchedTaskExec(task_id)</entry>\n   <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"18e866db537cb3c8d63d3d4ce6bf3960c1a8557f","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":115,"deletions":166,"changes":281,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -287,51 +287,21 @@ under the License.\n              spec=\"{ &quot;method&quot;: &quot;GET&quot;, &quot;url&quot;: &quot;/a/b/c&quot; }\"\n              application_id=\"mightyApp\"/>\n \n-  <SyncopeRole id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_READ\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_READ\" role_id=\"User reviewer\"/>\n+  <SyncopeRole id=\"User reviewer\" entitlements='[\"USER_READ\",\"USER_LIST\",\"USER_SEARCH\",\"ANYTYPE_LIST\",\"ANYTYPE_READ\",\"ANYTYPECLASS_LIST\",\"ANYTYPECLASS_READ\"]'/>\n   <SyncopeRole_Realm role_id=\"User reviewer\" realm_id=\"722f3d84-9c2b-4525-8f6e-e4b82c55a36c\"/>\n   <SyncopeRole_Realm role_id=\"User reviewer\" realm_id=\"c5b75db1-fce7-470f-b780-3b9934d82a9d\"/>\n   \n-  <SyncopeRole id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_CLAIM\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_SUBMIT\" role_id=\"User manager\"/>\n+  <SyncopeRole id=\"User manager\" entitlements='[\"USER_READ\",\"USER_LIST\",\"USER_SEARCH\",\"ANYTYPE_LIST\",\"ANYTYPE_READ\",\"ANYTYPECLASS_LIST\",\"ANYTYPECLASS_READ\",\"USER_REQUEST_FORM_LIST\",\"USER_REQUEST_FORM_CLAIM\",\"USER_REQUEST_FORM_SUBMIT\"]'/>\n   <SyncopeRole_Realm role_id=\"User manager\" realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"/>\n \n-  <SyncopeRole id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"SCHEMA_READ\" role_id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"GROUP_READ\" role_id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_CLAIM\" role_id=\"Other\"/>\n+  <SyncopeRole id=\"Other\" entitlements='[\"SCHEMA_READ\",\"GROUP_READ\",\"USER_REQUEST_FORM_CLAIM\"]'/>\n   <SyncopeRole_Realm role_id=\"Other\" realm_id=\"722f3d84-9c2b-4525-8f6e-e4b82c55a36c\"/>\n   <SyncopeRole_Privilege role_id=\"Other\" privilege_id=\"postMighty\"/>\n   \n-  <SyncopeRole id=\"Search for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"Search for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"Search for realm evenTwo\"/>\n+  <SyncopeRole id=\"Search for realm evenTwo\" entitlements='[\"USER_READ\",\"USER_SEARCH\"]'/>\n   <SyncopeRole_Realm role_id=\"Search for realm evenTwo\" realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\"/>\n \n-  <SyncopeRole id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_READ\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_UPDATE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_DELETE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_LIST\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_READ\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_UPDATE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_DELETE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_LIST\" role_id=\"Connector and Resource for realm evenTwo\"/>\n+  <SyncopeRole id=\"Connector and Resource for realm evenTwo\" entitlements='[\"CONNECTOR_READ\",\"CONNECTOR_UPDATE\",\"CONNECTOR_DELETE\",\"CONNECTOR_LIST\",\"RESOURCE_READ\",\"RESOURCE_UPDATE\",\"RESOURCE_DELETE\",\"RESOURCE_LIST\"]'/>\n   <SyncopeRole_Realm role_id=\"Connector and Resource for realm evenTwo\"\n                      realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\"/>\n \n@@ -714,25 +684,25 @@ under the License.\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate\"/>\n   <Implementation id=\"PushJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\" task_id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"b8870cfb-3c1e-4fc4-abcb-2559826232e6\" operation=\"CREATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <Task DTYPE=\"PropagationTask\" id=\"316285cc-ae52-4ea2-a33b-7355e189ac3f\" operation=\"DELETE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTask id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\" task_id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PropagationTask id=\"b8870cfb-3c1e-4fc4-abcb-2559826232e6\" operation=\"CREATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTask id=\"316285cc-ae52-4ea2-a33b-7355e189ac3f\" operation=\"DELETE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n   <!--SYNCOPE-1641 to be purged-->\n-  <Task DTYPE=\"PropagationTask\" id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-1\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"c3290f8b-caf9-4a85-84fb-fb619b65cd49\" task_id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n-        pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"\n-        jobDelegate_id=\"PullJobDelegate\"/>\n+  <PropagationTask id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-1\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"c3290f8b-caf9-4a85-84fb-fb619b65cd49\" task_id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PullTask remediation=\"0\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+            pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"\n+            jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n@@ -741,131 +711,131 @@ under the License.\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Implementation id=\"TestSampleJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n-        jobDelegate_id=\"TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n+  <SchedTask id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n+             jobDelegate_id=\"TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"d789462f-e395-424f-bd8e-0db44a93222f\" task_id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <SchedTask id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\" active=\"1\"\n+             jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <PropagationTask id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"d789462f-e395-424f-bd8e-0db44a93222f\" task_id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PullTask remediation=\"0\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplatePullTask id=\"fda22ff3-98f3-42e4-a2ae-cd9a28282d57\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n   <Implementation id=\"LDAPMembershipPullActions\" type=\"PULL_ACTIONS\"  engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <PullTaskAction task_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" implementation_id=\"LDAPMembershipPullActions\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PushTask\" id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n+  <PullTask remediation=\"0\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PushTask id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n   <PushTaskAnyFilter id=\"1fdcff65-765f-4a6e-98a7-13ef7cca47e2\" anyType_id=\"USER\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"surname==Vivaldi\"/>\n   <PushTaskAnyFilter id=\"3b564c51-5d64-48b3-8da5-fd4ebc10e0a8\" anyType_id=\"GROUP\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"199efd21-5e89-46ac-95de-f47e9d0569fc\" anyType_id=\"USER\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"surname==Bellini\"/>\n   <PushTaskAnyFilter id=\"7672a167-77d6-4639-8b1d-0af561293c7d\" anyType_id=\"GROUP\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"39a11ba6-397a-4c94-8bfe-1f4f757d6501\" anyType_id=\"USER\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"surname==Puccini\"/>\n   <PushTaskAnyFilter id=\"5bd7501e-8a18-4fbd-a3fe-a1e731ba95db\" anyType_id=\"GROUP\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"0d0371a3-5772-4b4c-ad14-139adf1d346a\" anyType_id=\"USER\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"2e7488ae-a2fc-4657-a93b-159b8433c0e7\" anyType_id=\"GROUP\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"41bf22fe-a014-41af-9a75-402b987eb433\" anyType_id=\"USER\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"fa983fde-795e-4c89-a6f7-1ccd80a8adeb\" anyType_id=\"GROUP\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"e238a6dc-0b04-46cf-9bfa-be68bd9f2da0\" anyType_id=\"USER\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"0eaa643e-0add-4c46-8273-539f9d6abec5\" anyType_id=\"GROUP\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"335b4f11-589a-44c5-80b0-ba94892f0c62\" anyType_id=\"USER\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"surname==Rossini\"/>\n   <PushTaskAnyFilter id=\"b32eecc2-aa4f-43c6-a501-a692c3e93113\" anyType_id=\"GROUP\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"9f974a0d-87d8-4cae-9ea9-1fc245bc1dbf\" anyType_id=\"USER\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"0dc46ba4-1270-4fa9-b3e1-79f940d4308f\" anyType_id=\"GROUP\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"3aa3b0b8-7469-4859-89d5-476ae5915101\" anyType_id=\"USER\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"f054810e-6842-4017-8f60-5b4031fa2c72\" anyType_id=\"GROUP\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"95f047fc-1a8a-45f4-b56c-6e04d8ca5567\" anyType_id=\"USER\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"013a4298-4b14-4f8b-9f59-191c2d53dbd8\" anyType_id=\"GROUP\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"30842acc-f2dd-4d47-b359-20db06c30803\" anyType_id=\"USER\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"9e4c0233-440e-4b5b-9563-11ec0f55a334\" anyType_id=\"GROUP\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"name==citizen\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"INCREMENTAL\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PropagationTask id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PullTask remediation=\"0\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"INCREMENTAL\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <SchedTask id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\" active=\"1\"\n+             jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n \n   <MailTemplate id=\"requestPasswordReset\"\n                 textTemplate=\"Hi,\n@@ -967,26 +937,20 @@ $$ }&#10;\n \n   <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"]'/> \n   <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" anyType_filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n-  <Task DTYPE=\"NotificationTask\" id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\"\n-        sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" executed=\"0\"\n-        textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n-  <NotificationTask_recipients notificationTask_id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" address=\"recipient@prova.org\"/>  \n+  <NotificationTask id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\"\n+                    sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" executed=\"0\"\n+                    textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\" recipients='[\"recipient@prova.org\"]'/>\n   \n   <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"]'/> \n \n   <Notification id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template_id=\"test\" selfAsRecipient=\"0\" \n-                traceLevel=\"FAILURES\"\n-                recipientsFIQL=\"$groups==7\"\n-                recipientAttrName=\"email\" active=\"1\"/>\n+                traceLevel=\"FAILURES\" recipientsFIQL=\"$groups==7\" recipientAttrName=\"email\" active=\"1\"\n+                events='[\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\", \"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"]'/>\n   <AnyAbout id=\"2e2ee845-2abf-43c6-b543-49243a84e2f1\" anyType_id=\"USER\" notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" anyType_filter=\"fullname==*o*;fullname==*i*\"/>\n-  <Notification_events notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" event=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n-  <Notification_events notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" event=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n \n   <ReportTemplate id=\"empty\"/>  \n   <ReportTemplate id=\"sample\"\n@@ -2102,22 +2066,7 @@ $$ }&#10;\n             logout=\"0\" csrf=\"1\"\n             predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n \n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n+  <SyncopeRole id=\"GROUP_OWNER\" entitlements='[\"USER_SEARCH\",\"USER_READ\",\"USER_CREATE\",\"USER_UPDATE\",\"USER_DELETE\",\"ANYTYPECLASS_READ\",\"ANYTYPE_LIST\",\"ANYTYPECLASS_LIST\",\"RELATIONSHIPTYPE_LIST\",\"ANYTYPE_READ\",\"REALM_LIST\",\"GROUP_SEARCH\",\"GROUP_READ\",\"GROUP_UPDATE\",\"GROUP_DELETE\"]'/>\n \n   <AuditConf id=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" active=\"1\"/>\n "},{"sha":"79ea9fad17cbbd844ad73c81cc394e97bebd09ec","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -84,7 +84,11 @@\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrUniqueValue;\n@@ -107,9 +111,11 @@ public class XMLContentExporter implements ContentExporter {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(XMLContentExporter.class);\n \n-    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED = Stream.of(\n-            \"QRTZ_\", \"LOGGING\", \"NotificationTask_recipients\", AuditConfDAO.AUDIT_ENTRY_TABLE, JPAReportExec.TABLE,\n-            JPATaskExec.TABLE, JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE,\n+    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED = Stream.of(\"QRTZ_\", \"LOGGING\",\n+            AuditConfDAO.AUDIT_ENTRY_TABLE, JPAReportExec.TABLE,\n+            JPAPropagationTaskExec.TABLE, JPANotificationTaskExec.TABLE, JPASchedTaskExec.TABLE,\n+            JPAPushTaskExec.TABLE, JPAPullTaskExec.TABLE,\n+            JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE,\n             JPAUPlainAttrUniqueValue.TABLE, JPAURelationship.TABLE, JPAUMembership.TABLE,\n             JPAAnyObject.TABLE, JPAAPlainAttr.TABLE, JPAAPlainAttrValue.TABLE, JPAAPlainAttrUniqueValue.TABLE,\n             JPAARelationship.TABLE, JPAAMembership.TABLE, JPAAccessToken.TABLE"},{"sha":"3328a8f9e0c4a7cef86a1ebe2c5ceca8f328df40","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -796,7 +796,7 @@ protected String getQuery(\n         }\n \n         query.append(\"SELECT DISTINCT any_id FROM \").\n-                append(svs.dynrolemembership().name).append(\" WHERE \").\n+                append(SearchSupport.dynrolemembership().name).append(\" WHERE \").\n                 append(\"role_id=?\").append(setParameter(parameters, cond.getRole())).\n                 append(\"))\");\n \n@@ -853,7 +853,7 @@ protected String getQuery(\n         }\n \n         query.append(\"SELECT DISTINCT any_id FROM \").\n-                append(svs.dynrealmmembership().name).append(\" WHERE \").\n+                append(SearchSupport.dynrealmmembership().name).append(\" WHERE \").\n                 append(\"dynRealm_id=?\").append(setParameter(parameters, cond.getDynRealm())).\n                 append(\"))\");\n "},{"sha":"a56f171f62d4272ff2ecc2e5b24e94230b8b88c7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANotificationDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -74,6 +74,7 @@ public List<Notification> findAll() {\n \n     @Override\n     public Notification save(final Notification notification) {\n+        ((JPANotification) notification).list2json();\n         return entityManager().merge(notification);\n     }\n "},{"sha":"7f9f833b53a85de5e4186fa1ec5b0ad34e2548c6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAOIDCRPClientAppDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCRPClientAppDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCRPClientAppDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAOIDCRPClientAppDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -87,6 +87,7 @@ public List<OIDCRPClientApp> findAll() {\n \n     @Override\n     public OIDCRPClientApp save(final OIDCRPClientApp clientApp) {\n+        ((JPAOIDCRPClientApp) clientApp).list2json();\n         return entityManager().merge(clientApp);\n     }\n "},{"sha":"03d80be7d75b22b2e0961850f9b6bf56337742ba","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -107,6 +107,7 @@ public List<Role> findAll() {\n \n     @Override\n     public Role save(final Role role) {\n+        ((JPARole) role).list2json();\n         return entityManager().merge(role);\n     }\n "},{"sha":"e4764ee90ef3f8871187a68be91713d1d1af81c0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPASAML2SPClientAppDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASAML2SPClientAppDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASAML2SPClientAppDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASAML2SPClientAppDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -87,6 +87,7 @@ public List<SAML2SPClientApp> findAll() {\n \n     @Override\n     public SAML2SPClientApp save(final SAML2SPClientApp clientApp) {\n+        ((JPASAML2SPClientApp) clientApp).list2json();\n         return entityManager().merge(clientApp);\n     }\n "},{"sha":"54e032243c4a92f8aa1e049ce4392cf717c41901","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":108,"deletions":76,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,8 +22,8 @@\n import java.time.OffsetDateTime;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n-import javax.persistence.DiscriminatorValue;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n@@ -40,46 +40,70 @@\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n+import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n-import org.apache.syncope.core.persistence.jpa.entity.task.AbstractTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.CollectionUtils;\n import org.springframework.util.ReflectionUtils;\n \n-public class JPATaskDAO extends AbstractDAO<Task> implements TaskDAO {\n+public class JPATaskDAO extends AbstractDAO<Task<?>> implements TaskDAO {\n \n-    protected static String getEntityTableName(final TaskType type) {\n+    public static TaskType getTaskType(final Task<?> task) {\n+        if (task instanceof NotificationTask) {\n+            return TaskType.NOTIFICATION;\n+        }\n+\n+        if (task instanceof PropagationTask) {\n+            return TaskType.PROPAGATION;\n+        }\n+\n+        if (task instanceof PushTask) {\n+            return TaskType.PUSH;\n+        }\n+\n+        if (task instanceof PullTask) {\n+            return TaskType.PULL;\n+        }\n+\n+        if (task instanceof SchedTask) {\n+            return TaskType.SCHEDULED;\n+        }\n+\n+        return null;\n+    }\n+\n+    public static String getEntityTableName(final TaskType type) {\n         String result = null;\n \n         switch (type) {\n             case NOTIFICATION:\n-                result = JPANotificationTask.class.getAnnotation(DiscriminatorValue.class).value();\n+                result = JPANotificationTask.TABLE;\n                 break;\n \n             case PROPAGATION:\n-                result = JPAPropagationTask.class.getAnnotation(DiscriminatorValue.class).value();\n+                result = JPAPropagationTask.TABLE;\n                 break;\n \n             case PUSH:\n-                result = JPAPushTask.class.getAnnotation(DiscriminatorValue.class).value();\n+                result = JPAPushTask.TABLE;\n                 break;\n \n             case SCHEDULED:\n-                result = JPASchedTask.class.getAnnotation(DiscriminatorValue.class).value();\n+                result = JPASchedTask.TABLE;\n                 break;\n \n             case PULL:\n-                result = JPAPullTask.class.getAnnotation(DiscriminatorValue.class).value();\n+                result = JPAPullTask.TABLE;\n                 break;\n \n             default:\n@@ -88,15 +112,8 @@ protected static String getEntityTableName(final TaskType type) {\n         return result;\n     }\n \n-    protected final RemediationDAO remediationDAO;\n-\n-    public JPATaskDAO(final RemediationDAO remediationDAO) {\n-        this.remediationDAO = remediationDAO;\n-    }\n-\n-    @Override\n-    public Class<? extends Task> getEntityReference(final TaskType type) {\n-        Class<? extends Task> result = null;\n+    public static Class<? extends Task<?>> getEntityReference(final TaskType type) {\n+        Class<? extends Task<?>> result = null;\n \n         switch (type) {\n             case NOTIFICATION:\n@@ -125,21 +142,45 @@ public Class<? extends Task> getEntityReference(final TaskType type) {\n         return result;\n     }\n \n+    protected final RemediationDAO remediationDAO;\n+\n+    public JPATaskDAO(final RemediationDAO remediationDAO) {\n+        this.remediationDAO = remediationDAO;\n+    }\n+\n     @Transactional(readOnly = true)\n     @Override\n     public boolean exists(final TaskType type, final String key) {\n-        Query query = entityManager().createNativeQuery(\"SELECT id FROM Task WHERE id=? AND dtype=?\");\n+        Query query = entityManager().createNativeQuery(\"SELECT id FROM \" + getEntityTableName(type) + \" WHERE id=?\");\n         query.setParameter(1, key);\n-        query.setParameter(2, getEntityTableName(type));\n \n         return !query.getResultList().isEmpty();\n     }\n \n     @Transactional(readOnly = true)\n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Task> T find(final String key) {\n-        return (T) entityManager().find(AbstractTask.class, key);\n+    public <T extends Task<T>> T find(final TaskType type, final String key) {\n+        return (T) entityManager().find(getEntityReference(type), key);\n+    }\n+\n+    @Override\n+    public Optional<Task<?>> find(final String key) {\n+        Task<?> task = find(TaskType.SCHEDULED, key);\n+        if (task == null) {\n+            task = find(TaskType.PULL, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.PUSH, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.PROPAGATION, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.NOTIFICATION, key);\n+        }\n+\n+        return Optional.ofNullable(task);\n     }\n \n     @Override\n@@ -182,7 +223,7 @@ public List<PushTask> findByPushActions(final Implementation pushActions) {\n         return query.getResultList();\n     }\n \n-    protected final <T extends Task> StringBuilder buildFindAllQueryJPA(final TaskType type) {\n+    protected final <T extends Task<T>> StringBuilder buildFindAllQueryJPA(final TaskType type) {\n         StringBuilder builder = new StringBuilder(\"SELECT t FROM \").\n                 append(getEntityReference(type).getSimpleName()).\n                 append(\" t WHERE \");\n@@ -201,7 +242,7 @@ protected final <T extends Task> StringBuilder buildFindAllQueryJPA(final TaskTy\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public <T extends Task> List<T> findToExec(final TaskType type) {\n+    public <T extends Task<T>> List<T> findToExec(final TaskType type) {\n         StringBuilder queryString = buildFindAllQueryJPA(type).append(\"AND \");\n \n         if (type == TaskType.NOTIFICATION) {\n@@ -217,7 +258,7 @@ public <T extends Task> List<T> findToExec(final TaskType type) {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public <T extends Task> List<T> findAll(final TaskType type) {\n+    public <T extends Task<T>> List<T> findAll(final TaskType type) {\n         return findAll(type, null, null, null, null, -1, -1, List.of());\n     }\n \n@@ -246,77 +287,62 @@ protected StringBuilder buildFindAllQuery(\n             throw new IllegalArgumentException(type + \" is not related to notifications\");\n         }\n \n-        StringBuilder queryString = new StringBuilder(\"SELECT \").append(AbstractTask.TABLE).append(\".*\");\n+        String table = getEntityTableName(type);\n+        StringBuilder queryString = new StringBuilder(\"SELECT \").append(table).append(\".*\");\n \n         if (orderByTaskExecInfo) {\n-            queryString.append(',').append(JPATaskExec.TABLE).append(\".startDate AS startDate\").\n-                    append(',').append(JPATaskExec.TABLE).append(\".endDate AS endDate\").\n-                    append(',').append(JPATaskExec.TABLE).append(\".status AS status\").\n-                    append(\" FROM \").append(AbstractTask.TABLE).\n-                    append(',').append(JPATaskExec.TABLE).append(',').append(\"(SELECT \").\n-                    append(JPATaskExec.TABLE).append(\".task_id, \").\n-                    append(\"MAX(\").append(JPATaskExec.TABLE).append(\".startDate) AS startDate\").\n-                    append(\" FROM \").append(JPATaskExec.TABLE).\n-                    append(\" GROUP BY \").append(JPATaskExec.TABLE).append(\".task_id) GRP\").\n+            queryString.append(',').append(JPATaskExecDAO.getEntityTableName(type)).append(\".startDate AS startDate\").\n+                    append(',').append(JPATaskExecDAO.getEntityTableName(type)).append(\".endDate AS endDate\").\n+                    append(',').append(JPATaskExecDAO.getEntityTableName(type)).append(\".status AS status\").\n+                    append(\" FROM \").append(table).\n+                    append(',').append(JPATaskExecDAO.getEntityTableName(type)).append(',').append(\"(SELECT \").\n+                    append(JPATaskExecDAO.getEntityTableName(type)).append(\".task_id, \").\n+                    append(\"MAX(\").append(JPATaskExecDAO.getEntityTableName(type)).append(\".startDate) AS startDate\").\n+                    append(\" FROM \").append(JPATaskExecDAO.getEntityTableName(type)).\n+                    append(\" GROUP BY \").append(JPATaskExecDAO.getEntityTableName(type)).append(\".task_id) GRP\").\n                     append(\" WHERE \").\n-                    append(AbstractTask.TABLE).append(\".id=\").append(JPATaskExec.TABLE).append(\".task_id\").\n-                    append(\" AND \").append(AbstractTask.TABLE).append(\".id=\").append(\"GRP.task_id\").\n-                    append(\" AND \").append(JPATaskExec.TABLE).append(\".startDate=\").append(\"GRP.startDate\").\n-                    append(\" AND \").append(AbstractTask.TABLE).append(\".DTYPE = ?1\");\n+                    append(table).append(\".id=\").append(JPATaskExecDAO.getEntityTableName(type)).append(\".task_id\").\n+                    append(\" AND \").append(table).append(\".id=\").append(\"GRP.task_id\").\n+                    append(\" AND \").\n+                    append(JPATaskExecDAO.getEntityTableName(type)).append(\".startDate=\").append(\"GRP.startDate\");\n         } else {\n-            queryString.append(\", null AS startDate, null AS endDate, null AS status FROM \").append(AbstractTask.TABLE).\n-                    append(\" WHERE \").append(AbstractTask.TABLE).append(\".DTYPE = ?1\");\n+            queryString.append(\", null AS startDate, null AS endDate, null AS status FROM \").append(table).\n+                    append(\" WHERE 1=1 \");\n         }\n \n-        queryParameters.add(getEntityTableName(type));\n-        if (type == TaskType.SCHEDULED) {\n-            queryString.append(\" AND \").\n-                    append(AbstractTask.TABLE).\n-                    append(\".id NOT IN (SELECT \").append(AbstractTask.TABLE).append(\".id FROM \").\n-                    append(AbstractTask.TABLE).append(\" WHERE \").\n-                    append(AbstractTask.TABLE).append(\".DTYPE = ?2)\").\n-                    append(\" AND \").\n-                    append(AbstractTask.TABLE).\n-                    append(\".id NOT IN (SELECT id FROM \").\n-                    append(AbstractTask.TABLE).append(\" WHERE \").\n-                    append(AbstractTask.TABLE).append(\".DTYPE = ?3)\");\n-\n-            queryParameters.add(JPAPushTask.class.getAnnotation(DiscriminatorValue.class).value());\n-            queryParameters.add(JPAPullTask.class.getAnnotation(DiscriminatorValue.class).value());\n-        }\n         queryString.append(' ');\n \n         if (resource != null) {\n             queryParameters.add(resource.getKey());\n \n             queryString.append(\" AND \").\n-                    append(AbstractTask.TABLE).\n+                    append(table).\n                     append(\".resource_id=?\").append(queryParameters.size());\n         }\n         if (notification != null) {\n             queryParameters.add(notification.getKey());\n \n             queryString.append(\" AND \").\n-                    append(AbstractTask.TABLE).\n+                    append(table).\n                     append(\".notification_id=?\").append(queryParameters.size());\n         }\n         if (anyTypeKind != null && entityKey != null) {\n             queryParameters.add(anyTypeKind.name());\n             queryParameters.add(entityKey);\n \n             queryString.append(\" AND \").\n-                    append(AbstractTask.TABLE).\n+                    append(table).\n                     append(\".anyTypeKind=?\").append(queryParameters.size() - 1).\n                     append(\" AND \").\n-                    append(AbstractTask.TABLE).\n+                    append(table).\n                     append(\".entityKey=?\").append(queryParameters.size());\n         }\n \n         return queryString;\n     }\n \n     protected String toOrderByStatement(\n-            final Class<? extends Task> beanClass,\n+            final Class<? extends Task<?>> beanClass,\n             final List<OrderByClause> orderByClauses) {\n \n         StringBuilder statement = new StringBuilder();\n@@ -364,7 +390,7 @@ protected String toOrderByStatement(\n     }\n \n     @Override\n-    public <T extends Task> List<T> findAll(\n+    public <T extends Task<T>> List<T> findAll(\n             final TaskType type,\n             final ExternalResource resource,\n             final Notification notification,\n@@ -403,7 +429,7 @@ public <T extends Task> List<T> findAll(\n                             false,\n                             queryParameters)).\n                     append(\" AND id NOT IN \").\n-                    append(\"(SELECT task_id AS id FROM \").append(JPATaskExec.TABLE).append(')').\n+                    append(\"(SELECT task_id AS id FROM \").append(JPATaskExecDAO.getEntityTableName(type)).append(')').\n                     append(\")) T\");\n         } else {\n             queryString.insert(0, \"SELECT T.id FROM (\").append(\") T\");\n@@ -431,7 +457,7 @@ public <T extends Task> List<T> findAll(\n                 ? (String) ((Object[]) key)[0]\n                 : ((String) key)).forEach(key -> {\n \n-            T task = find(key);\n+            T task = find(type, key);\n             if (task == null) {\n                 LOG.error(\"Could not find task with key {}, even if returned by native query\", key);\n             } else if (!result.contains(task)) {\n@@ -457,8 +483,8 @@ public int count(\n \n         Query query = entityManager().createNativeQuery(StringUtils.replaceOnce(\n                 queryString.toString(),\n-                \"SELECT \" + AbstractTask.TABLE + \".*, null AS startDate, null AS endDate, null AS status\",\n-                \"SELECT COUNT(\" + AbstractTask.TABLE + \".id)\"));\n+                \"SELECT \" + getEntityTableName(type) + \".*, null AS startDate, null AS endDate, null AS status\",\n+                \"SELECT COUNT(\" + getEntityTableName(type) + \".id)\"));\n \n         for (int i = 1; i <= queryParameters.size(); i++) {\n             query.setParameter(i, queryParameters.get(i - 1));\n@@ -469,13 +495,16 @@ public int count(\n \n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n-    public <T extends Task> T save(final T task) {\n+    public <T extends Task<T>> T save(final T task) {\n+        if (task instanceof JPANotificationTask) {\n+            ((JPANotificationTask) task).list2json();\n+        }\n         return entityManager().merge(task);\n     }\n \n     @Override\n-    public void delete(final String id) {\n-        Task task = find(id);\n+    public void delete(final TaskType type, final String id) {\n+        Task<?> task = find(type, id);\n         if (task == null) {\n             return;\n         }\n@@ -484,7 +513,7 @@ public void delete(final String id) {\n     }\n \n     @Override\n-    public void delete(final Task task) {\n+    public void delete(final Task<?> task) {\n         if (task instanceof PullTask) {\n             remediationDAO.findByPullTask((PullTask) task).forEach(remediation -> remediation.setPullTask(null));\n         }\n@@ -495,7 +524,7 @@ public void delete(final Task task) {\n     @Override\n     public void deleteAll(final ExternalResource resource, final TaskType type) {\n         findAll(type, resource, null, null, null, -1, -1, List.of()).\n-                stream().map(Task::getKey).forEach(this::delete);\n+                stream().map(Task<?>::getKey).forEach(key -> delete(type, key));\n     }\n \n     @Override\n@@ -505,8 +534,11 @@ public List<PropagationTaskTO> purgePropagations(\n             final List<ExternalResource> externalResources) {\n \n         StringBuilder queryString = new StringBuilder(\"SELECT t.task_id \"\n-                + \"FROM TaskExec t INNER JOIN Task z ON t.task_id=z.id AND z.dtype='PropagationTask' \"\n-                + \"WHERE t.enddate=(SELECT MAX(e.enddate) FROM TaskExec e WHERE e.task_id=t.task_id) \");\n+                + \"FROM \" + JPAPropagationTaskExec.TABLE + \" t \"\n+                + \"INNER JOIN \" + JPAPropagationTask.TABLE + \" z \"\n+                + \"ON t.task_id=z.id \"\n+                + \"WHERE t.enddate=(SELECT MAX(e.enddate) FROM \" + JPAPropagationTaskExec.TABLE + \" e \"\n+                + \"WHERE e.task_id=t.task_id) \");\n \n         List<Object> queryParameters = new ArrayList<>();\n         if (since != null) {\n@@ -540,7 +572,7 @@ public List<PropagationTaskTO> purgePropagations(\n \n         List<PropagationTaskTO> purged = new ArrayList<>();\n         raw.stream().map(Object::toString).distinct().forEach(key -> {\n-            PropagationTask task = find(key);\n+            PropagationTask task = find(TaskType.PROPAGATION, key);\n             if (task != null) {\n                 PropagationTaskTO taskTO = new PropagationTaskTO();\n "},{"sha":"dbf6645e6ec422bed2294de5a3422b5d6801e712","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskExecDAO.java","status":"modified","additions":155,"deletions":41,"changes":196,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,73 +19,180 @@\n package org.apache.syncope.core.persistence.jpa.dao;\n \n import java.time.OffsetDateTime;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n import javax.persistence.Query;\n-import javax.persistence.TypedQuery;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.AbstractTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTaskExec;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.ReflectionUtils;\n \n-public class JPATaskExecDAO extends AbstractDAO<TaskExec> implements TaskExecDAO {\n+public class JPATaskExecDAO extends AbstractDAO<TaskExec<?>> implements TaskExecDAO {\n+\n+    public static String getEntityTableName(final TaskType type) {\n+        String result = null;\n+\n+        switch (type) {\n+            case NOTIFICATION:\n+                result = JPANotificationTaskExec.TABLE;\n+                break;\n+\n+            case PROPAGATION:\n+                result = JPAPropagationTaskExec.TABLE;\n+                break;\n+\n+            case PUSH:\n+                result = JPAPushTaskExec.TABLE;\n+                break;\n+\n+            case SCHEDULED:\n+                result = JPASchedTaskExec.TABLE;\n+                break;\n+\n+            case PULL:\n+                result = JPAPullTaskExec.TABLE;\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+    protected static Class<? extends TaskExec<?>> getEntityReference(final TaskType type) {\n+        Class<? extends TaskExec<?>> result = null;\n+\n+        switch (type) {\n+            case NOTIFICATION:\n+                result = JPANotificationTaskExec.class;\n+                break;\n+\n+            case PROPAGATION:\n+                result = JPAPropagationTaskExec.class;\n+                break;\n+\n+            case PUSH:\n+                result = JPAPushTaskExec.class;\n+                break;\n+\n+            case SCHEDULED:\n+                result = JPASchedTaskExec.class;\n+                break;\n+\n+            case PULL:\n+                result = JPAPullTaskExec.class;\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n \n     protected final TaskDAO taskDAO;\n \n     public JPATaskExecDAO(final TaskDAO taskDAO) {\n         this.taskDAO = taskDAO;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public TaskExec find(final String key) {\n-        return entityManager().find(JPATaskExec.class, key);\n+    public <T extends Task<T>> TaskExec<T> find(final TaskType type, final String key) {\n+        return (TaskExec<T>) entityManager().find(getEntityReference(type), key);\n     }\n \n     @Override\n-    public List<TaskExec> findRecent(final int max) {\n-        TypedQuery<TaskExec> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPATaskExec.class.getSimpleName() + \" e \"\n-                + \"WHERE e.end IS NOT NULL ORDER BY e.end DESC\", TaskExec.class);\n+    public Optional<TaskExec<?>> find(final String key) {\n+        TaskExec<?> task = find(TaskType.SCHEDULED, key);\n+        if (task == null) {\n+            task = find(TaskType.PULL, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.PUSH, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.PROPAGATION, key);\n+        }\n+        if (task == null) {\n+            task = find(TaskType.NOTIFICATION, key);\n+        }\n+\n+        return Optional.ofNullable(task);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    protected <T extends Task<T>> List<TaskExec<T>> findRecent(final TaskType type, final int max) {\n+        Query query = entityManager().createQuery(\n+                \"SELECT e FROM \" + getEntityReference(type).getSimpleName() + \" e \"\n+                + \"WHERE e.end IS NOT NULL ORDER BY e.end DESC\");\n         query.setMaxResults(max);\n \n-        return query.getResultList();\n+        List<Object> result = query.getResultList();\n+        return result.stream().map(e -> (TaskExec<T>) e).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public List<TaskExec<?>> findRecent(final int max) {\n+        List<TaskExec<?>> recent = new ArrayList<>();\n+\n+        for (TaskType taskType : TaskType.values()) {\n+            recent.addAll(findRecent(taskType, max));\n+        }\n+\n+        return recent.stream().\n+                sorted(Comparator.comparing(TaskExec<?>::getEnd).reversed()).\n+                limit(max).\n+                collect(Collectors.toList());\n     }\n \n-    protected <T extends Task> TaskExec findLatest(final T task, final String field) {\n-        TypedQuery<TaskExec> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPATaskExec.class.getSimpleName() + \" e \"\n-                + \"WHERE e.task=:task ORDER BY e.\" + field + \" DESC\", TaskExec.class);\n+    @SuppressWarnings(\"unchecked\")\n+    protected TaskExec<?> findLatest(final TaskType type, final Task<?> task, final String field) {\n+        Query query = entityManager().createQuery(\n+                \"SELECT e FROM \" + getEntityReference(type).getSimpleName() + \" e \"\n+                + \"WHERE e.task=:task ORDER BY e.\" + field + \" DESC\");\n         query.setParameter(\"task\", task);\n         query.setMaxResults(1);\n \n-        List<TaskExec> result = query.getResultList();\n+        List<Object> result = query.getResultList();\n         return result == null || result.isEmpty()\n                 ? null\n-                : result.iterator().next();\n+                : (TaskExec<?>) result.get(0);\n     }\n \n     @Override\n-    public <T extends Task> TaskExec findLatestStarted(final T task) {\n-        return findLatest(task, \"start\");\n+    public TaskExec<?> findLatestStarted(final TaskType type, final Task<?> task) {\n+        return findLatest(type, task, \"start\");\n     }\n \n     @Override\n-    public <T extends Task> TaskExec findLatestEnded(final T task) {\n-        return findLatest(task, \"end\");\n+    public TaskExec<?> findLatestEnded(final TaskType type, final Task<?> task) {\n+        return findLatest(type, task, \"end\");\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Task> List<TaskExec> findAll(\n-            final T task,\n+    public List<TaskExec<?>> findAll(\n+            final Task<?> task,\n             final OffsetDateTime startedBefore,\n             final OffsetDateTime startedAfter,\n             final OffsetDateTime endedBefore,\n             final OffsetDateTime endedAfter) {\n \n-        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(JPATaskExec.class.getSimpleName()).\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n+                append(getEntityReference(JPATaskDAO.getTaskType(task)).getSimpleName()).\n                 append(\" e WHERE e.task=:task \");\n \n         if (startedBefore != null) {\n@@ -101,7 +208,7 @@ public <T extends Task> List<TaskExec> findAll(\n             queryString.append(\" AND e.end > :endedAfter\");\n         }\n \n-        TypedQuery<TaskExec> query = entityManager().createQuery(queryString.toString(), TaskExec.class);\n+        Query query = entityManager().createQuery(queryString.toString());\n         query.setParameter(\"task\", task);\n         if (startedBefore != null) {\n             query.setParameter(\"startedBefore\", startedBefore);\n@@ -116,14 +223,16 @@ public <T extends Task> List<TaskExec> findAll(\n             query.setParameter(\"endedAfter\", endedAfter);\n         }\n \n-        return query.getResultList();\n+        List<Object> result = query.getResultList();\n+        return result.stream().map(e -> (TaskExec<?>) e).collect(Collectors.toList());\n     }\n \n     @Override\n-    public int count(final String taskKey) {\n+    public int count(final Task<?> task) {\n         Query countQuery = entityManager().createNativeQuery(\n-                \"SELECT COUNT(e.id) FROM \" + JPATaskExec.TABLE + \" e WHERE e.task_id=?1\");\n-        countQuery.setParameter(1, taskKey);\n+                \"SELECT COUNT(e.id) FROM \" + getEntityTableName(JPATaskDAO.getTaskType(task)) + \" e \"\n+                + \"WHERE e.task_id=?1\");\n+        countQuery.setParameter(1, task.getKey());\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n     }\n@@ -133,7 +242,7 @@ protected String toOrderByStatement(final List<OrderByClause> orderByClauses) {\n \n         orderByClauses.forEach(clause -> {\n             String field = clause.getField().trim();\n-            if (ReflectionUtils.findField(JPATaskExec.class, field) != null) {\n+            if (ReflectionUtils.findField(AbstractTaskExec.class, field) != null) {\n                 statement.append(\"e.\").append(field).append(' ').append(clause.getDirection().name());\n             }\n         });\n@@ -146,15 +255,17 @@ protected String toOrderByStatement(final List<OrderByClause> orderByClauses) {\n         return statement.toString();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Task> List<TaskExec> findAll(\n-            final T task, final int page, final int itemsPerPage, final List<OrderByClause> orderByClauses) {\n+    public List<TaskExec<?>> findAll(\n+            final Task<?> task, final int page, final int itemsPerPage, final List<OrderByClause> orderByClauses) {\n \n-        String queryString =\n-                \"SELECT e FROM \" + JPATaskExec.class.getSimpleName() + \" e WHERE e.task=:task \"\n+        String queryString = \"SELECT e \"\n+                + \"FROM \" + getEntityReference(JPATaskDAO.getTaskType(task)).getSimpleName() + \" e \"\n+                + \"WHERE e.task=:task \"\n                 + toOrderByStatement(orderByClauses);\n \n-        TypedQuery<TaskExec> query = entityManager().createQuery(queryString, TaskExec.class);\n+        Query query = entityManager().createQuery(queryString);\n         query.setParameter(\"task\", task);\n \n         // page starts from 1, while setFirtResult() starts from 0\n@@ -164,26 +275,29 @@ public <T extends Task> List<TaskExec> findAll(\n             query.setMaxResults(itemsPerPage);\n         }\n \n-        return query.getResultList();\n+        List<Object> result = query.getResultList();\n+        return result.stream().map(e -> (TaskExec<?>) e).collect(Collectors.toList());\n     }\n \n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n-    public TaskExec save(final TaskExec execution) {\n+    public <T extends Task<T>> TaskExec<T> save(final TaskExec<T> execution) {\n         return entityManager().merge(execution);\n     }\n \n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n-    public void saveAndAdd(final String taskKey, final TaskExec execution) {\n-        Task task = taskDAO.find(taskKey);\n+    public <T extends Task<T>> void saveAndAdd(\n+            final TaskType taskType, final String taskKey, final TaskExec<T> execution) {\n+\n+        T task = taskDAO.find(taskType, taskKey);\n         task.add(execution);\n         taskDAO.save(task);\n     }\n \n     @Override\n-    public void delete(final String key) {\n-        TaskExec execution = find(key);\n+    public <T extends Task<T>> void delete(final TaskType taskType, final String key) {\n+        TaskExec<T> execution = find(taskType, key);\n         if (execution == null) {\n             return;\n         }\n@@ -192,7 +306,7 @@ public void delete(final String key) {\n     }\n \n     @Override\n-    public void delete(final TaskExec execution) {\n+    public <T extends Task<T>> void delete(final TaskExec<T> execution) {\n         if (execution.getTask() != null) {\n             execution.getTask().getExecs().remove(execution);\n         }"},{"sha":"3eca4580b8164550ad4081e5db021b0862dd3547","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -407,16 +407,15 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n             }\n \n             // update user's password history with encrypted password\n-            if (maxPPSpecHistory > 0 && user.getPassword() != null\n+            if (maxPPSpecHistory > 0\n+                    && user.getPassword() != null\n                     && !user.getPasswordHistory().contains(user.getPassword())) {\n \n-                user.getPasswordHistory().add(user.getPassword());\n+                user.addToPasswordHistory(user.getPassword());\n             }\n             // keep only the last maxPPSpecHistory items in user's password history\n             if (maxPPSpecHistory < user.getPasswordHistory().size()) {\n-                for (int i = 0; i < user.getPasswordHistory().size() - maxPPSpecHistory; i++) {\n-                    user.getPasswordHistory().remove(i);\n-                }\n+                user.removeOldestEntriesFromPasswordHistory(user.getPasswordHistory().size() - maxPPSpecHistory);\n             }\n         } catch (PersistenceException | InvalidEntityException e) {\n             throw e;"},{"sha":"afa3303224fb63d6ee5f4482a00965c6a2ae7bcb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractGroupableRelatable.java","status":"modified","additions":23,"deletions":21,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -48,59 +48,61 @@ public boolean remove(final P attr) {\n \n     @Override\n     public Optional<? extends P> getPlainAttr(final String plainSchema) {\n-        return internalGetPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null && plainAttr.getMembership() == null\n-                && plainSchema.equals(plainAttr.getSchema().getKey())).findFirst();\n+        return internalGetPlainAttrs().stream().\n+                filter(attr -> attr != null && attr.getSchema() != null && attr.getMembership() == null\n+                && plainSchema.equals(attr.getSchema().getKey())).\n+                findFirst();\n     }\n \n     @Override\n     public Optional<? extends P> getPlainAttr(final String plainSchema, final Membership<?> membership) {\n-        return internalGetPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null\n-                && plainAttr.getMembership() != null && plainAttr.getMembership().equals(membership)\n-                && plainSchema.equals(plainAttr.getSchema().getKey())).findFirst();\n+        return internalGetPlainAttrs().stream().\n+                filter(attr -> attr != null && attr.getSchema() != null\n+                && attr.getMembership() != null && attr.getMembership().equals(membership)\n+                && plainSchema.equals(attr.getSchema().getKey())).\n+                findFirst();\n     }\n \n     @Override\n     public List<? extends P> getPlainAttrs() {\n-        return internalGetPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null && plainAttr.getMembership() == null).\n+        return internalGetPlainAttrs().stream().\n+                filter(attr -> attr != null && attr.getSchema() != null && attr.getMembership() == null).\n                 collect(Collectors.toList());\n     }\n \n     @Override\n     public Collection<? extends P> getPlainAttrs(final String plainSchema) {\n-        return internalGetPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null\n-                && plainSchema.equals(plainAttr.getSchema().getKey())).\n+        return internalGetPlainAttrs().stream().\n+                filter(attr -> attr != null && attr.getSchema() != null\n+                && plainSchema.equals(attr.getSchema().getKey())).\n                 collect(Collectors.toList());\n     }\n \n     @Override\n     public Collection<? extends P> getPlainAttrs(final Membership<?> membership) {\n-        return internalGetPlainAttrs().stream().filter(plainAttr\n-                -> plainAttr != null && plainAttr.getSchema() != null\n-                && membership.equals(plainAttr.getMembership())).\n+        return internalGetPlainAttrs().stream().\n+                filter(attr -> attr != null && attr.getSchema() != null && membership.equals(attr.getMembership())).\n                 collect(Collectors.toList());\n     }\n \n     @Override\n     public Optional<? extends M> getMembership(final String groupKey) {\n-        return getMemberships().stream().filter(membership\n-                -> groupKey != null && groupKey.equals(membership.getRightEnd().getKey())).findFirst();\n+        return getMemberships().stream().\n+                filter(membership -> groupKey != null && groupKey.equals(membership.getRightEnd().getKey())).\n+                findFirst();\n     }\n \n     @Override\n     public Collection<? extends REL> getRelationships(final RelationshipType relationshipType) {\n-        return getRelationships().stream().filter(relationship\n-                -> relationshipType != null && relationshipType.equals(relationship.getType())).\n+        return getRelationships().stream().\n+                filter(relationship -> relationshipType != null && relationshipType.equals(relationship.getType())).\n                 collect(Collectors.toList());\n     }\n \n     @Override\n     public Collection<? extends REL> getRelationships(final String otherEndKey) {\n-        return getRelationships().stream().filter(relationship\n-                -> otherEndKey != null && otherEndKey.equals(relationship.getRightEnd().getKey())).\n+        return getRelationships().stream().\n+                filter(relationship -> otherEndKey != null && otherEndKey.equals(relationship.getRightEnd().getKey())).\n                 collect(Collectors.toList());\n     }\n }"},{"sha":"1da1fb5d43d232fe3928c2deb272a56eeb79ee86","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":43,"deletions":3,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n@@ -140,12 +141,16 @@\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n+import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPALAPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPALAPlainAttrUniqueValue;\n@@ -278,8 +283,6 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAPullTask();\n         } else if (reference.equals(SchedTask.class)) {\n             result = (E) new JPASchedTask();\n-        } else if (reference.equals(TaskExec.class)) {\n-            result = (E) new JPATaskExec();\n         } else if (reference.equals(PushTaskAnyFilter.class)) {\n             result = (E) new JPAPushTaskAnyFilter();\n         } else if (reference.equals(AnyTemplatePullTask.class)) {\n@@ -345,6 +348,43 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n         return result;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <E extends TaskExec<?>> E newTaskExec(final TaskType taskType) {\n+        E result;\n+\n+        switch (taskType) {\n+            case NOTIFICATION:\n+                result = (E) new JPANotificationTaskExec();\n+                break;\n+\n+            case PROPAGATION:\n+                result = (E) new JPAPropagationTaskExec();\n+                break;\n+\n+            case PULL:\n+                result = (E) new JPAPullTaskExec();\n+                break;\n+\n+            case PUSH:\n+                result = (E) new JPAPushTaskExec();\n+                break;\n+\n+            case SCHEDULED:\n+                result = (E) new JPASchedTaskExec();\n+                break;\n+\n+            default:\n+                result = null;\n+        }\n+\n+        if (result instanceof AbstractGeneratedKeyEntity) {\n+            ((AbstractGeneratedKeyEntity) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public ConnPoolConf newConnPoolConf() {\n         return new JPAConnPoolConf();"},{"sha":"be5dde761a446202977d5d9b9eea9c08c7e6ec49","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANotification.java","status":"modified","additions":56,"deletions":17,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,21 +18,26 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n import javax.persistence.CascadeType;\n-import javax.persistence.CollectionTable;\n-import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n import javax.persistence.Table;\n+import javax.persistence.Transient;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -41,6 +46,7 @@\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPANotification.TABLE)\n@@ -50,24 +56,22 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n \n     public static final String TABLE = \"Notification\";\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"event\")\n-    @CollectionTable(name = \"Notification_events\",\n-            joinColumns =\n-            @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n-    private List<String> events = new ArrayList<>();\n+    @Lob\n+    private String events;\n+\n+    @Transient\n+    private List<String> eventsList = new ArrayList<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"notification\")\n     private List<JPAAnyAbout> abouts = new ArrayList<>();\n \n     private String recipientsFIQL;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @CollectionTable(name = \"Notification_staticRecipients\",\n-            joinColumns =\n-            @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n-    @Column(name = \"staticRecipients\")\n-    private List<String> staticRecipients = new ArrayList<>();\n+    @Lob\n+    private String staticRecipients;\n+\n+    @Transient\n+    private List<String> staticRecipientsList = new ArrayList<>();\n \n     @NotNull\n     private String recipientAttrName;\n@@ -129,7 +133,7 @@ public void setRecipientsProvider(final Implementation recipientsProvider) {\n \n     @Override\n     public List<String> getEvents() {\n-        return events;\n+        return eventsList;\n     }\n \n     @Override\n@@ -150,7 +154,7 @@ public List<? extends AnyAbout> getAbouts() {\n \n     @Override\n     public List<String> getStaticRecipients() {\n-        return staticRecipients;\n+        return staticRecipientsList;\n     }\n \n     @Override\n@@ -214,4 +218,39 @@ public boolean isActive() {\n     public void setActive(final boolean active) {\n         this.active = active;\n     }\n+\n+    protected void json2list(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getEvents().clear();\n+            getStaticRecipients().clear();\n+        }\n+        if (events != null) {\n+            getEvents().addAll(\n+                    POJOHelper.deserialize(events, new TypeReference<List<String>>() {\n+                    }));\n+        }\n+        if (staticRecipients != null) {\n+            getStaticRecipients().addAll(\n+                    POJOHelper.deserialize(staticRecipients, new TypeReference<List<String>>() {\n+                    }));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2list(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2list(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void list2json() {\n+        events = POJOHelper.serialize(getEvents());\n+        staticRecipients = POJOHelper.serialize(getStaticRecipients());\n+    }\n }"},{"sha":"ce773105daa60ffb68b7080f968220478202b8e2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARole.java","status":"modified","additions":41,"deletions":10,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARole.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,24 +18,28 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n-import javax.persistence.CollectionTable;\n-import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n import javax.persistence.Lob;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToOne;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n import javax.persistence.Table;\n+import javax.persistence.Transient;\n import javax.persistence.UniqueConstraint;\n import javax.validation.Valid;\n import org.apache.syncope.core.persistence.api.entity.Application;\n@@ -46,6 +50,7 @@\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership;\n import org.apache.syncope.core.persistence.jpa.validation.entity.RoleCheck;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPARole.TABLE)\n@@ -57,12 +62,11 @@ public class JPARole extends AbstractProvidedKeyEntity implements Role {\n \n     public static final String TABLE = \"SyncopeRole\";\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"entitlement\")\n-    @CollectionTable(name = \"SyncopeRole_entitlements\",\n-            joinColumns =\n-            @JoinColumn(name = \"role_id\", referencedColumnName = \"id\"))\n-    private Set<String> entitlements = new HashSet<>();\n+    @Lob\n+    private String entitlements;\n+\n+    @Transient\n+    private Set<String> entitlementsSet = new HashSet<>();\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n@@ -103,7 +107,7 @@ public class JPARole extends AbstractProvidedKeyEntity implements Role {\n \n     @Override\n     public Set<String> getEntitlements() {\n-        return entitlements;\n+        return entitlementsSet;\n     }\n \n     @Override\n@@ -167,4 +171,31 @@ public Set<? extends Privilege> getPrivileges() {\n         return privileges;\n     }\n \n+    protected void json2list(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getEntitlements().clear();\n+        }\n+        if (entitlements != null) {\n+            getEntitlements().addAll(\n+                    POJOHelper.deserialize(entitlements, new TypeReference<Set<String>>() {\n+                    }));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2list(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2list(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void list2json() {\n+        entitlements = POJOHelper.serialize(getEntitlements());\n+    }\n }"},{"sha":"3ca91b1b80b53ad033bd37ae1af6a97b5be360cd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/JPAOIDCRPClientApp.java","status":"modified","additions":69,"deletions":27,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,21 +18,26 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.am;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.util.HashSet;\n import java.util.Set;\n-import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n+import javax.persistence.Lob;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n import javax.persistence.Table;\n+import javax.persistence.Transient;\n import org.apache.syncope.common.lib.types.OIDCGrantType;\n import org.apache.syncope.common.lib.types.OIDCResponseType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.core.persistence.api.entity.am.OIDCRPClientApp;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPAOIDCRPClientApp.TABLE)\n@@ -56,34 +61,29 @@ public class JPAOIDCRPClientApp extends AbstractClientApp implements OIDCRPClien\n     @Enumerated(EnumType.STRING)\n     private OIDCSubjectType subjectType;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"redirectUri\")\n-    @CollectionTable(name = \"OIDCRPClientApp_RedirectUris\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_id\", referencedColumnName = \"id\"))\n-    private Set<String> redirectUris = new HashSet<>();\n+    @Lob\n+    private String redirectUris;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Enumerated(EnumType.STRING)\n-    @Column(name = \"supportedGrantType\")\n-    @CollectionTable(name = \"OIDCRPClientApp_SuppGrantTypes\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_id\", referencedColumnName = \"id\"))\n-    private Set<OIDCGrantType> supportedGrantTypes = new HashSet<>();\n+    @Transient\n+    private Set<String> redirectUrisSet = new HashSet<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Enumerated(EnumType.STRING)\n-    @Column(name = \"supportedResponseType\")\n-    @CollectionTable(name = \"OIDCRPClientApp_SuppResTypes\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_id\", referencedColumnName = \"id\"))\n-    private Set<OIDCResponseType> supportedResponseTypes = new HashSet<>();\n+    @Lob\n+    private String supportedGrantTypes;\n+\n+    @Transient\n+    private Set<OIDCGrantType> supportedGrantTypesSet = new HashSet<>();\n+\n+    @Lob\n+    private String supportedResponseTypes;\n+\n+    @Transient\n+    private Set<OIDCResponseType> supportedResponseTypesSet = new HashSet<>();\n \n     private String logoutUri;\n \n     @Override\n     public Set<String> getRedirectUris() {\n-        return redirectUris;\n+        return redirectUrisSet;\n     }\n \n     @Override\n@@ -148,12 +148,12 @@ public void setSubjectType(final OIDCSubjectType subjectType) {\n \n     @Override\n     public Set<OIDCGrantType> getSupportedGrantTypes() {\n-        return supportedGrantTypes;\n+        return supportedGrantTypesSet;\n     }\n \n     @Override\n     public Set<OIDCResponseType> getSupportedResponseTypes() {\n-        return supportedResponseTypes;\n+        return supportedResponseTypesSet;\n     }\n \n     @Override\n@@ -165,4 +165,46 @@ public String getLogoutUri() {\n     public void setLogoutUri(final String logoutUri) {\n         this.logoutUri = logoutUri;\n     }\n+\n+    protected void json2list(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getRedirectUris().clear();\n+            getSupportedGrantTypes().clear();\n+            getSupportedResponseTypes().clear();\n+        }\n+        if (redirectUris != null) {\n+            getRedirectUris().addAll(\n+                    POJOHelper.deserialize(redirectUris, new TypeReference<Set<String>>() {\n+                    }));\n+        }\n+        if (supportedGrantTypes != null) {\n+            getSupportedGrantTypes().addAll(\n+                    POJOHelper.deserialize(supportedGrantTypes, new TypeReference<Set<OIDCGrantType>>() {\n+                    }));\n+        }\n+        if (supportedResponseTypes != null) {\n+            getSupportedResponseTypes().addAll(\n+                    POJOHelper.deserialize(supportedResponseTypes, new TypeReference<Set<OIDCResponseType>>() {\n+                    }));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2list(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2list(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void list2json() {\n+        redirectUris = POJOHelper.serialize(getRedirectUris());\n+        supportedGrantTypes = POJOHelper.serialize(getSupportedGrantTypes());\n+        supportedResponseTypes = POJOHelper.serialize(getSupportedResponseTypes());\n+    }\n }"},{"sha":"555f5d008630e9e9610a4430194ab86c09b24c7c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/JPASAML2SPClientApp.java","status":"modified","additions":129,"deletions":48,"changes":177,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,20 +18,25 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.am;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n+import javax.persistence.Lob;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n import javax.persistence.Table;\n+import javax.persistence.Transient;\n import org.apache.syncope.common.lib.types.SAML2SPNameId;\n import org.apache.syncope.common.lib.types.XmlSecAlgorithm;\n import org.apache.syncope.core.persistence.api.entity.am.SAML2SPClientApp;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPASAML2SPClientApp.TABLE)\n@@ -66,57 +71,56 @@ public class JPASAML2SPClientApp extends AbstractClientApp implements SAML2SPCli\n \n     private String nameIdQualifier;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"assertionAudience\")\n-    @CollectionTable(name = \"SAML2SPClientApp_AssAud\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private Set<String> assertionAudiences = new HashSet<>();\n+    @Lob\n+    private String assertionAudiences;\n+\n+    @Transient\n+    private Set<String> assertionAudiencesSet = new HashSet<>();\n \n     @Column(name = \"spNameIdQualifier\")\n     private String serviceProviderNameIdQualifier;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"sigAlg\")\n-    @CollectionTable(name = \"SAML2SPClientApp_SigAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> signingSignatureAlgorithms = new ArrayList<>();\n+    @Column(name = \"sigAlgs\")\n+    @Lob\n+    private String signingSignatureAlgorithms;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> signingSignatureAlgorithmsList = new ArrayList<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"sigRefDigestMethod\")\n-    @CollectionTable(name = \"SAML2SPClientApp_SigRefDigAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> signingSignatureReferenceDigestMethods = new ArrayList<>();\n+    @Lob\n+    private String signingSignatureReferenceDigestMethods;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> signingSignatureReferenceDigestMethodsList = new ArrayList<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"encDataAlg\")\n-    @CollectionTable(name = \"SAML2SPClientApp_EncDataAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> encryptionDataAlgorithms = new ArrayList<>();\n+    @Lob\n+    private String encryptionDataAlgorithms;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> encryptionDataAlgorithmsList = new ArrayList<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"encKeyAlg\")\n-    @CollectionTable(name = \"SAML2SPClientApp_EncKeyAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> encryptionKeyAlgorithms = new ArrayList<>();\n+    @Lob\n+    private String encryptionKeyAlgorithms;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> encryptionKeyAlgorithmsList = new ArrayList<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"sigBlAlg\")\n-    @CollectionTable(name = \"SAML2SPClientApp_BlSigAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> signingSignatureBlackListedAlgorithms = new ArrayList<>();\n+    @Lob\n+    private String signingSignatureBlackListedAlgorithms;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> signingSignatureBlackListedAlgorithmsList = new ArrayList<>();\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"encBlAlg\")\n-    @CollectionTable(name = \"SAML2SPClientApp_BlEncAlgs\",\n-            joinColumns =\n-            @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n-    private List<XmlSecAlgorithm> encryptionBlackListedAlgorithms = new ArrayList<>();\n+    @Lob\n+    private String encryptionBlackListedAlgorithms;\n+\n+    @Transient\n+    private List<XmlSecAlgorithm> encryptionBlackListedAlgorithmsList = new ArrayList<>();\n \n     @Override\n     public String getEntityId() {\n@@ -230,7 +234,7 @@ public void setNameIdQualifier(final String nameIdQualifier) {\n \n     @Override\n     public Set<String> getAssertionAudiences() {\n-        return assertionAudiences;\n+        return assertionAudiencesSet;\n     }\n \n     @Override\n@@ -245,31 +249,108 @@ public void setServiceProviderNameIdQualifier(final String serviceProviderNameId\n \n     @Override\n     public List<XmlSecAlgorithm> getSigningSignatureAlgorithms() {\n-        return signingSignatureAlgorithms;\n+        return signingSignatureAlgorithmsList;\n     }\n \n     @Override\n     public List<XmlSecAlgorithm> getSigningSignatureReferenceDigestMethods() {\n-        return signingSignatureReferenceDigestMethods;\n+        return signingSignatureReferenceDigestMethodsList;\n     }\n \n     @Override\n     public List<XmlSecAlgorithm> getEncryptionDataAlgorithms() {\n-        return encryptionDataAlgorithms;\n+        return encryptionDataAlgorithmsList;\n     }\n \n     @Override\n     public List<XmlSecAlgorithm> getEncryptionKeyAlgorithms() {\n-        return encryptionKeyAlgorithms;\n+        return encryptionKeyAlgorithmsList;\n     }\n \n     @Override\n     public List<XmlSecAlgorithm> getSigningSignatureBlackListedAlgorithms() {\n-        return signingSignatureBlackListedAlgorithms;\n+        return signingSignatureBlackListedAlgorithmsList;\n     }\n \n     @Override\n     public List<XmlSecAlgorithm> getEncryptionBlackListedAlgorithms() {\n-        return encryptionBlackListedAlgorithms;\n+        return encryptionBlackListedAlgorithmsList;\n+    }\n+\n+    protected void json2list(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getAssertionAudiences().clear();\n+            getSigningSignatureAlgorithms().clear();\n+            getSigningSignatureReferenceDigestMethods().clear();\n+            getEncryptionDataAlgorithms().clear();\n+            getEncryptionKeyAlgorithms().clear();\n+            getSigningSignatureBlackListedAlgorithms().clear();\n+            getEncryptionBlackListedAlgorithms().clear();\n+        }\n+        if (assertionAudiences != null) {\n+            getAssertionAudiences().addAll(\n+                    POJOHelper.deserialize(assertionAudiences,\n+                            new TypeReference<Set<String>>() {\n+                    }));\n+        }\n+        if (signingSignatureAlgorithms != null) {\n+            getSigningSignatureAlgorithms().addAll(\n+                    POJOHelper.deserialize(signingSignatureAlgorithms,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+        if (signingSignatureReferenceDigestMethods != null) {\n+            getSigningSignatureReferenceDigestMethods().addAll(\n+                    POJOHelper.deserialize(signingSignatureReferenceDigestMethods,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+        if (encryptionDataAlgorithms != null) {\n+            getEncryptionDataAlgorithms().addAll(\n+                    POJOHelper.deserialize(encryptionDataAlgorithms,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+        if (encryptionKeyAlgorithms != null) {\n+            getEncryptionKeyAlgorithms().addAll(\n+                    POJOHelper.deserialize(encryptionKeyAlgorithms,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+        if (signingSignatureBlackListedAlgorithms != null) {\n+            getSigningSignatureBlackListedAlgorithms().addAll(\n+                    POJOHelper.deserialize(signingSignatureBlackListedAlgorithms,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+        if (encryptionBlackListedAlgorithms != null) {\n+            getEncryptionBlackListedAlgorithms().addAll(\n+                    POJOHelper.deserialize(encryptionBlackListedAlgorithms,\n+                            new TypeReference<List<XmlSecAlgorithm>>() {\n+                    }));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2list(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2list(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void list2json() {\n+        assertionAudiences = POJOHelper.serialize(getAssertionAudiences());\n+        signingSignatureAlgorithms = POJOHelper.serialize(getSigningSignatureAlgorithms());\n+        signingSignatureReferenceDigestMethods = POJOHelper.serialize(getSigningSignatureReferenceDigestMethods());\n+        encryptionDataAlgorithms = POJOHelper.serialize(getEncryptionDataAlgorithms());\n+        encryptionKeyAlgorithms = POJOHelper.serialize(getEncryptionKeyAlgorithms());\n+        signingSignatureBlackListedAlgorithms = POJOHelper.serialize(getSigningSignatureBlackListedAlgorithms());\n+        encryptionBlackListedAlgorithms = POJOHelper.serialize(getEncryptionBlackListedAlgorithms());\n     }\n }"},{"sha":"f2816122dc1a1ad643c29259fd744ea6070deda6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -27,12 +27,14 @@\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.jpa.entity.JPAExternalResource;\n import org.apache.syncope.core.persistence.jpa.validation.entity.ProvisioningTaskCheck;\n \n @MappedSuperclass\n @ProvisioningTaskCheck\n-public abstract class AbstractProvisioningTask extends JPASchedTask implements ProvisioningTask {\n+public abstract class AbstractProvisioningTask<T extends SchedTask>\n+        extends JPASchedTask implements ProvisioningTask<T> {\n \n     private static final long serialVersionUID = -4141057723006682562L;\n "},{"sha":"3b17cc5b8aed8ad7fe0f6f10119ad94c3a6045c2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractTask.java","status":"modified","additions":13,"deletions":22,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,41 +18,32 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n-import java.util.ArrayList;\n import java.util.List;\n-import javax.persistence.CascadeType;\n-import javax.persistence.DiscriminatorColumn;\n-import javax.persistence.Entity;\n-import javax.persistence.Inheritance;\n-import javax.persistence.InheritanceType;\n-import javax.persistence.OneToMany;\n-import javax.persistence.Table;\n+import javax.persistence.MappedSuperclass;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractGeneratedKeyEntity;\n \n-@Entity\n-@Table(name = AbstractTask.TABLE)\n-@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n-@DiscriminatorColumn(name = \"DTYPE\")\n-public abstract class AbstractTask extends AbstractGeneratedKeyEntity implements Task {\n+@MappedSuperclass\n+public abstract class AbstractTask<T extends Task<T>> extends AbstractGeneratedKeyEntity implements Task<T> {\n \n     private static final long serialVersionUID = 5837401178128177511L;\n \n-    public static final String TABLE = \"Task\";\n+    protected abstract List<TaskExec<T>> executions();\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n-    private List<JPATaskExec> executions = new ArrayList<>();\n+    protected abstract Class<? extends TaskExec<T>> executionClass();\n \n     @Override\n-    public boolean add(final TaskExec exec) {\n-        checkType(exec, JPATaskExec.class);\n-        return exec != null && !executions.contains((JPATaskExec) exec) && executions.add((JPATaskExec) exec);\n+    public boolean add(final TaskExec<T> exec) {\n+        Class<? extends TaskExec<T>> clazz = executionClass();\n+        checkType(exec, clazz);\n+        return exec != null\n+                && !executions().contains(clazz.cast(exec))\n+                && executions().add(clazz.cast(exec));\n     }\n \n     @Override\n-    public List<? extends TaskExec> getExecs() {\n-        return executions;\n+    public List<? extends TaskExec<T>> getExecs() {\n+        return executions();\n     }\n-\n }"},{"sha":"be18a7c3d865892b8ef6ddb1f7d396660554871e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractTaskExec.java","status":"renamed","additions":2,"deletions":31,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,50 +18,21 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n-import javax.persistence.Entity;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.Table;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractExec;\n \n-/**\n- * An execution (with result) of a Task.\n- *\n- * @see AbstractTask\n- */\n-@Entity\n-@Table(name = JPATaskExec.TABLE)\n-public class JPATaskExec extends AbstractExec implements TaskExec {\n+public abstract class AbstractTaskExec<T extends Task<T>> extends AbstractExec implements TaskExec<T> {\n \n     private static final long serialVersionUID = 1909033231464074554L;\n \n-    public static final String TABLE = \"TaskExec\";\n-\n-    /**\n-     * The referred task.\n-     */\n-    @ManyToOne(optional = false)\n-    private AbstractTask task;\n-\n-    @Override\n-    public Task getTask() {\n-        return task;\n-    }\n-\n-    @Override\n-    public void setTask(final Task task) {\n-        checkType(task, AbstractTask.class);\n-        this.task = (AbstractTask) task;\n-    }\n-\n     @Override\n     public String toString() {\n         return new StringBuilder(getClass().getSimpleName()).append('{').\n                 append(\"id=\").append(getKey()).append(\", \").\n                 append(\"start=\").append(start).append(\", \").\n                 append(\"end=\").append(end).append(\", \").\n-                append(\"task=\").append(task).append(\", \").\n+                append(\"task=\").append(getTask()).append(\", \").\n                 append(\"status=\").append(status).append(\", \").\n                 append(\"message=\").append(message).\n                 append('}').","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskExec.java"},{"sha":"aeb7c5f13735b3f145730b804185e174304a99b2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTask.java","status":"modified","additions":66,"deletions":15,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,32 +18,42 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n+import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n-import javax.persistence.CollectionTable;\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.ElementCollection;\n+import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n+import javax.persistence.Table;\n+import javax.persistence.Transient;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPANotification;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n-@DiscriminatorValue(\"NotificationTask\")\n-public class JPANotificationTask extends AbstractTask implements NotificationTask {\n+@Table(name = JPANotificationTask.TABLE)\n+public class JPANotificationTask extends AbstractTask<NotificationTask> implements NotificationTask {\n \n     private static final long serialVersionUID = 95731573485279180L;\n \n+    public static final String TABLE = \"NotificationTask\";\n+\n     @NotNull\n     @ManyToOne\n     private JPANotification notification;\n@@ -53,12 +63,15 @@ public class JPANotificationTask extends AbstractTask implements NotificationTas\n \n     private String entityKey;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"address\")\n-    @CollectionTable(name = \"NotificationTask_recipients\",\n-            joinColumns =\n-            @JoinColumn(name = \"notificationTask_id\", referencedColumnName = \"id\"))\n-    private Set<String> recipients = new HashSet<>();\n+    @Lob\n+    private String recipients;\n+\n+    @Transient\n+    private Set<String> recipientsSet = new HashSet<>();\n+\n+    @OneToMany(targetEntity = JPANotificationTaskExec.class,\n+            cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n+    private List<TaskExec<NotificationTask>> executions = new ArrayList<>();\n \n     @NotNull\n     private String sender;\n@@ -114,7 +127,7 @@ public void setEntityKey(final String entityKey) {\n \n     @Override\n     public Set<String> getRecipients() {\n-        return recipients;\n+        return recipientsSet;\n     }\n \n     @Override\n@@ -176,4 +189,42 @@ public TraceLevel getTraceLevel() {\n     public void setTraceLevel(final TraceLevel traceLevel) {\n         this.traceLevel = traceLevel;\n     }\n+\n+    @Override\n+    protected Class<? extends TaskExec<NotificationTask>> executionClass() {\n+        return JPANotificationTaskExec.class;\n+    }\n+\n+    @Override\n+    protected List<TaskExec<NotificationTask>> executions() {\n+        return executions;\n+    }\n+\n+    protected void json2list(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getRecipients().clear();\n+        }\n+        if (recipients != null) {\n+            getRecipients().addAll(\n+                    POJOHelper.deserialize(recipients, new TypeReference<List<String>>() {\n+                    }));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2list(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2list(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void list2json() {\n+        recipients = POJOHelper.serialize(getRecipients());\n+    }\n }"},{"sha":"f37917c9c39db7a3815a9c23b30e5fabe55cae65","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTaskExec.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.task;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+\n+@Entity\n+@Table(name = JPANotificationTaskExec.TABLE)\n+public class JPANotificationTaskExec extends AbstractTaskExec<NotificationTask> implements TaskExec<NotificationTask> {\n+\n+    private static final long serialVersionUID = 1909033231464074554L;\n+\n+    public static final String TABLE = \"NotificationTaskExec\";\n+\n+    @ManyToOne(optional = false)\n+    private JPANotificationTask task;\n+\n+    @Override\n+    public NotificationTask getTask() {\n+        return task;\n+    }\n+\n+    @Override\n+    public void setTask(final NotificationTask task) {\n+        checkType(task, NotificationTask.class);\n+        this.task = (JPANotificationTask) task;\n+    }\n+}"},{"sha":"67cc7796cab464c4ea89d13dcf78ded24c63c965","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPropagationTask.java","status":"modified","additions":35,"deletions":14,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,18 +18,23 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n-import javax.persistence.DiscriminatorValue;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationData;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAExternalResource;\n import org.apache.syncope.core.persistence.jpa.validation.entity.PropagationTaskCheck;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n@@ -38,12 +43,14 @@\n  * Encapsulate all information about a propagation task.\n  */\n @Entity\n-@DiscriminatorValue(\"PropagationTask\")\n+@Table(name = JPAPropagationTask.TABLE)\n @PropagationTaskCheck\n-public class JPAPropagationTask extends AbstractTask implements PropagationTask {\n+public class JPAPropagationTask extends AbstractTask<PropagationTask> implements PropagationTask {\n \n     private static final long serialVersionUID = 7086054884614511210L;\n \n+    public static final String TABLE = \"PropagationTask\";\n+\n     /**\n      * @see ResourceOperation\n      */\n@@ -81,6 +88,10 @@ public class JPAPropagationTask extends AbstractTask implements PropagationTask\n     @ManyToOne\n     private JPAExternalResource resource;\n \n+    @OneToMany(targetEntity = JPAPropagationTaskExec.class,\n+            cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n+    private List<TaskExec<PropagationTask>> executions = new ArrayList<>();\n+\n     @Override\n     public String getConnObjectKey() {\n         return connObjectKey;\n@@ -131,17 +142,6 @@ public void setOperation(final ResourceOperation operation) {\n         this.operation = operation;\n     }\n \n-    @Override\n-    public ExternalResource getResource() {\n-        return resource;\n-    }\n-\n-    @Override\n-    public void setResource(final ExternalResource resource) {\n-        checkType(resource, JPAExternalResource.class);\n-        this.resource = (JPAExternalResource) resource;\n-    }\n-\n     @Override\n     public String getObjectClassName() {\n         return objectClassName;\n@@ -181,4 +181,25 @@ public String getEntityKey() {\n     public void setEntityKey(final String entityKey) {\n         this.entityKey = entityKey;\n     }\n+\n+    @Override\n+    public ExternalResource getResource() {\n+        return resource;\n+    }\n+\n+    @Override\n+    public void setResource(final ExternalResource resource) {\n+        checkType(resource, JPAExternalResource.class);\n+        this.resource = (JPAExternalResource) resource;\n+    }\n+\n+    @Override\n+    protected Class<? extends TaskExec<PropagationTask>> executionClass() {\n+        return JPAPropagationTaskExec.class;\n+    }\n+\n+    @Override\n+    protected List<TaskExec<PropagationTask>> executions() {\n+        return executions;\n+    }\n }"},{"sha":"6653f484760d5830b19ae7a81c67f975282fb5de","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPropagationTaskExec.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.task;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+\n+@Entity\n+@Table(name = JPAPropagationTaskExec.TABLE)\n+public class JPAPropagationTaskExec extends AbstractTaskExec<PropagationTask> implements TaskExec<PropagationTask> {\n+\n+    private static final long serialVersionUID = 1909033231464074554L;\n+\n+    public static final String TABLE = \"PropagationTaskExec\";\n+\n+    @ManyToOne(optional = false)\n+    private JPAPropagationTask task;\n+\n+    @Override\n+    public PropagationTask getTask() {\n+        return task;\n+    }\n+\n+    @Override\n+    public void setTask(final PropagationTask task) {\n+        checkType(task, PropagationTask.class);\n+        this.task = (JPAPropagationTask) task;\n+    }\n+}"},{"sha":"cb630271cd3d01ef21986cacc5c5eb043f9d9c9e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTask.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.Optional;\n import javax.persistence.CascadeType;\n-import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n@@ -33,6 +32,7 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n+import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n@@ -41,15 +41,19 @@\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAImplementation;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n \n @Entity\n-@DiscriminatorValue(\"PullTask\")\n-public class JPAPullTask extends AbstractProvisioningTask implements PullTask {\n+@Table(name = JPAPullTask.TABLE)\n+public class JPAPullTask extends AbstractProvisioningTask<PullTask> implements PullTask {\n \n     private static final long serialVersionUID = -4141057723006682563L;\n \n+    public static final String TABLE = \"PullTask\";\n+\n     @Enumerated(EnumType.STRING)\n     @NotNull\n     private PullMode pullMode;\n@@ -73,6 +77,10 @@ public class JPAPullTask extends AbstractProvisioningTask implements PullTask {\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pullTask\")\n     private List<JPAAnyTemplatePullTask> templates = new ArrayList<>();\n \n+    @OneToMany(targetEntity = JPAPullTaskExec.class,\n+            cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n+    private List<TaskExec<SchedTask>> executions = new ArrayList<>();\n+\n     @NotNull\n     private Boolean remediation = false;\n \n@@ -148,4 +156,14 @@ public void setRemediation(final boolean remediation) {\n     public boolean isRemediation() {\n         return remediation;\n     }\n+\n+    @Override\n+    protected Class<? extends TaskExec<SchedTask>> executionClass() {\n+        return JPAPullTaskExec.class;\n+    }\n+\n+    @Override\n+    protected List<TaskExec<SchedTask>> executions() {\n+        return executions;\n+    }\n }"},{"sha":"2385084effe2a3494c64356eef939235edbf4f35","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTaskExec.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.task;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+\n+@Entity\n+@Table(name = JPAPullTaskExec.TABLE)\n+public class JPAPullTaskExec extends AbstractTaskExec<SchedTask> implements TaskExec<SchedTask> {\n+\n+    private static final long serialVersionUID = 1909033231464074554L;\n+\n+    public static final String TABLE = \"PullTaskExec\";\n+\n+    @ManyToOne(optional = false)\n+    private JPAPullTask task;\n+\n+    @Override\n+    public PullTask getTask() {\n+        return task;\n+    }\n+\n+    @Override\n+    public void setTask(final SchedTask task) {\n+        checkType(task, PullTask.class);\n+        this.task = (JPAPullTask) task;\n+    }\n+}"},{"sha":"a52922e1f766ce81047295ed40fd4d6b4dac040c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTask.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,30 +22,34 @@\n import java.util.List;\n import java.util.Optional;\n import javax.persistence.CascadeType;\n-import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAImplementation;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n \n @Entity\n-@DiscriminatorValue(\"PushTask\")\n-public class JPAPushTask extends AbstractProvisioningTask implements PushTask {\n+@Table(name = JPAPushTask.TABLE)\n+public class JPAPushTask extends AbstractProvisioningTask<PushTask> implements PushTask {\n \n     private static final long serialVersionUID = -4141057723006682564L;\n \n+    public static final String TABLE = \"PushTask\";\n+\n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     private JPARealm sourceRealm;\n \n@@ -62,6 +66,10 @@ public class JPAPushTask extends AbstractProvisioningTask implements PushTask {\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pushTask\")\n     private List<JPAPushTaskAnyFilter> filters = new ArrayList<>();\n \n+    @OneToMany(targetEntity = JPAPushTaskExec.class,\n+            cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n+    private List<TaskExec<SchedTask>> executions = new ArrayList<>();\n+\n     @Override\n     public JPARealm getSourceRealm() {\n         return sourceRealm;\n@@ -100,4 +108,14 @@ public Optional<? extends PushTaskAnyFilter> getFilter(final AnyType anyType) {\n     public List<? extends PushTaskAnyFilter> getFilters() {\n         return filters;\n     }\n+\n+    @Override\n+    protected Class<? extends TaskExec<SchedTask>> executionClass() {\n+        return JPAPushTaskExec.class;\n+    }\n+\n+    @Override\n+    protected List<TaskExec<SchedTask>> executions() {\n+        return executions;\n+    }\n }"},{"sha":"eef50c0c5750b42c90cc9b166ea9e673da416136","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTaskExec.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.task;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+\n+@Entity\n+@Table(name = JPAPushTaskExec.TABLE)\n+public class JPAPushTaskExec extends AbstractTaskExec<SchedTask> implements TaskExec<SchedTask> {\n+\n+    private static final long serialVersionUID = 1909033231464074554L;\n+\n+    public static final String TABLE = \"PushTaskExec\";\n+\n+    @ManyToOne(optional = false)\n+    private JPAPushTask task;\n+\n+    @Override\n+    public PushTask getTask() {\n+        return task;\n+    }\n+\n+    @Override\n+    public void setTask(final SchedTask task) {\n+        checkType(task, PushTask.class);\n+        this.task = (JPAPushTask) task;\n+    }\n+}"},{"sha":"aca10f3a64cf8e0fbc83667605e36774f93c9dd7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASchedTask.java","status":"modified","additions":42,"deletions":18,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,30 +19,40 @@\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n import java.time.OffsetDateTime;\n-import javax.persistence.DiscriminatorValue;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n+import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAImplementation;\n import org.apache.syncope.core.persistence.jpa.validation.entity.SchedTaskCheck;\n \n @Entity\n-@DiscriminatorValue(\"SchedTask\")\n+@Table(name = JPASchedTask.TABLE)\n+@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)\n @SchedTaskCheck\n-public class JPASchedTask extends AbstractTask implements SchedTask {\n+public class JPASchedTask extends AbstractTask<SchedTask> implements SchedTask {\n \n     private static final long serialVersionUID = 7596236684832602180L;\n \n-    private OffsetDateTime startAt;\n-\n-    private String cronExpression;\n+    public static final String TABLE = \"SchedTask\";\n \n     @OneToOne(optional = false)\n     private JPAImplementation jobDelegate;\n \n+    private OffsetDateTime startAt;\n+\n+    private String cronExpression;\n+\n     @NotNull\n     private String name;\n \n@@ -51,6 +61,32 @@ public class JPASchedTask extends AbstractTask implements SchedTask {\n     @NotNull\n     private Boolean active = true;\n \n+    @OneToMany(targetEntity = JPASchedTaskExec.class,\n+            cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n+    private List<TaskExec<SchedTask>> executions = new ArrayList<>();\n+\n+    @Override\n+    protected Class<? extends TaskExec<SchedTask>> executionClass() {\n+        return JPASchedTaskExec.class;\n+    }\n+\n+    @Override\n+    protected List<TaskExec<SchedTask>> executions() {\n+        return executions;\n+    }\n+\n+    @Override\n+    public Implementation getJobDelegate() {\n+        return jobDelegate;\n+    }\n+\n+    @Override\n+    public void setJobDelegate(final Implementation jobDelegate) {\n+        checkType(jobDelegate, JPAImplementation.class);\n+        checkImplementationType(jobDelegate, IdRepoImplementationType.TASKJOB_DELEGATE);\n+        this.jobDelegate = (JPAImplementation) jobDelegate;\n+    }\n+\n     @Override\n     public OffsetDateTime getStartAt() {\n         return startAt;\n@@ -71,18 +107,6 @@ public void setCronExpression(final String cronExpression) {\n         this.cronExpression = cronExpression;\n     }\n \n-    @Override\n-    public Implementation getJobDelegate() {\n-        return jobDelegate;\n-    }\n-\n-    @Override\n-    public void setJobDelegate(final Implementation jobDelegate) {\n-        checkType(jobDelegate, JPAImplementation.class);\n-        checkImplementationType(jobDelegate, IdRepoImplementationType.TASKJOB_DELEGATE);\n-        this.jobDelegate = (JPAImplementation) jobDelegate;\n-    }\n-\n     @Override\n     public String getDescription() {\n         return description;"},{"sha":"8d35e2289f5d00b5ece70f90b3b19f7712cb89d3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASchedTaskExec.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTaskExec.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.task;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+\n+@Entity\n+@Table(name = JPASchedTaskExec.TABLE)\n+public class JPASchedTaskExec extends AbstractTaskExec<SchedTask> implements TaskExec<SchedTask> {\n+\n+    private static final long serialVersionUID = 1909033231464074554L;\n+\n+    public static final String TABLE = \"SchedTaskExec\";\n+\n+    @ManyToOne(optional = false)\n+    private JPASchedTask task;\n+\n+    @Override\n+    public SchedTask getTask() {\n+        return task;\n+    }\n+\n+    @Override\n+    public void setTask(final SchedTask task) {\n+        checkType(task, SchedTask.class);\n+        this.task = (JPASchedTask) task;\n+    }\n+}"},{"sha":"df6f3a8ad1fa75db25307c1f646861f4d86c23f1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -52,7 +52,7 @@ public TaskType getType() {\n     }\n \n     @Override\n-    public <T extends Task> Class<T> taskClass() {\n+    public <T extends Task<T>> Class<T> taskClass() {\n         Class<T> result = null;\n \n         switch (type) {\n@@ -83,7 +83,7 @@ public <T extends Task> Class<T> taskClass() {\n     }\n \n     @Override\n-    public <T extends Task> T newTask() {\n+    public <T extends Task<T>> T newTask() {\n         T result = null;\n \n         switch (type) {\n@@ -146,7 +146,7 @@ public <T extends TaskTO> Class<T> taskTOClass() {\n \n     @Override\n     public <T extends TaskTO> T newTaskTO() {\n-        final Class<T> taskClass = taskTOClass();\n+        Class<T> taskClass = taskTOClass();\n         try {\n             return taskClass == null ? null : taskClass.getDeclaredConstructor().newInstance();\n         } catch (Exception e) {"},{"sha":"53c9575641e622acb85b28c4cc4786b6ea4e55ad","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskUtilsFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtilsFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -64,7 +64,7 @@ public TaskUtils getInstance(final TaskType type) {\n     }\n \n     @Override\n-    public TaskUtils getInstance(final Task task) {\n+    public TaskUtils getInstance(final Task<?> task) {\n         TaskType type;\n         if (task instanceof PullTask) {\n             type = TaskType.PULL;"},{"sha":"28fad86e1da313dc323a1f18a33eff7b47aff5bb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":22,"deletions":8,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,16 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.user;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.time.OffsetDateTime;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n-import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n@@ -62,6 +61,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyTypeClass;\n import org.apache.syncope.core.persistence.jpa.entity.JPAExternalResource;\n import org.apache.syncope.core.persistence.jpa.entity.JPARole;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.Encryptor;\n@@ -111,11 +111,8 @@\n     @Enumerated(EnumType.STRING)\n     private CipherAlgorithm cipherAlgorithm;\n \n-    @ElementCollection\n-    @Column(name = \"passwordHistoryValue\")\n-    @CollectionTable(name = \"SyncopeUser_passwordHistory\", joinColumns =\n-            @JoinColumn(name = \"user_id\", referencedColumnName = \"id\"))\n-    private List<String> passwordHistory = new ArrayList<>();\n+    @Lob\n+    private String passwordHistory;\n \n     /**\n      * Subsequent failed logins.\n@@ -339,9 +336,26 @@ public boolean hasTokenExpired() {\n                 isPresent();\n     }\n \n+    @Override\n+    public void addToPasswordHistory(final String password) {\n+        List<String> ph = getPasswordHistory();\n+        ph.add(password);\n+        passwordHistory = POJOHelper.serialize(ph);\n+    }\n+\n+    @Override\n+    public void removeOldestEntriesFromPasswordHistory(final int n) {\n+        List<String> ph = getPasswordHistory();\n+        ph.subList(n, ph.size());\n+        passwordHistory = POJOHelper.serialize(ph);\n+    }\n+\n     @Override\n     public List<String> getPasswordHistory() {\n-        return passwordHistory;\n+        return passwordHistory == null\n+                ? new ArrayList<>(0)\n+                : POJOHelper.deserialize(passwordHistory, new TypeReference<List<String>>() {\n+                });\n     }\n \n     @Override"},{"sha":"dbafb4119efb48c8d4d377e48703fa8f2e45f8d2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/AnyValidator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyValidator.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -34,9 +34,9 @@\n public class AnyValidator extends AbstractValidator<AnyCheck, Any> {\n \n     private static boolean raiseNotAllowedViolation(\n-        final ConstraintValidatorContext context,\n-        final String schema,\n-        final Group group) {\n+            final ConstraintValidatorContext context,\n+            final String schema,\n+            final Group group) {\n \n         if (group == null) {\n             context.buildConstraintViolationWithTemplate("},{"sha":"ffa2ad1017c1cc749ef51c2cddbbe058617b5980","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PropagationTaskValidator.java","status":"modified","additions":16,"deletions":24,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.validation.entity;\n \n-import java.util.List;\n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.common.lib.types.ExecStatus;\n@@ -29,33 +28,26 @@ public class PropagationTaskValidator extends AbstractValidator<PropagationTaskC\n \n     @Override\n     public boolean isValid(final PropagationTask task, final ConstraintValidatorContext context) {\n-        boolean isValid;\n+        boolean isValid = task.getOperation() != null\n+                && task.getPropagationData() != null\n+                && task.getResource() != null;\n \n-        if (task == null) {\n-            isValid = true;\n-        } else {\n-            isValid = task.getOperation() != null\n-                    && task.getPropagationData() != null\n-                    && task.getResource() != null;\n-\n-            if (isValid) {\n-                List<? extends TaskExec> executions = task.getExecs();\n-                for (TaskExec execution : executions) {\n-                    try {\n-                        ExecStatus.valueOf(execution.getStatus());\n-                    } catch (IllegalArgumentException e) {\n-                        LOG.error(\"Invalid execution status '\" + execution.getStatus() + '\\'', e);\n-                        isValid = false;\n-                    }\n+        if (isValid) {\n+            for (TaskExec<PropagationTask> execution : task.getExecs()) {\n+                try {\n+                    ExecStatus.valueOf(execution.getStatus());\n+                } catch (IllegalArgumentException e) {\n+                    LOG.error(\"Invalid execution status '\" + execution.getStatus() + '\\'', e);\n+                    isValid = false;\n                 }\n             }\n+        }\n \n-            if (!isValid) {\n-                context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidPropagationTask, \"Invalid task\")).\n-                        addPropertyNode(task.getClass().getSimpleName()).addConstraintViolation();\n-            }\n+        if (!isValid) {\n+            context.disableDefaultConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidPropagationTask, \"Invalid task\")).\n+                    addPropertyNode(task.getClass().getSimpleName()).addConstraintViolation();\n         }\n \n         return isValid;"},{"sha":"c029746818fc43864c68fef68875e99d313e7690","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ProvisioningTaskValidator.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,19 +22,13 @@\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n \n-public class ProvisioningTaskValidator extends AbstractValidator<ProvisioningTaskCheck, ProvisioningTask> {\n+public class ProvisioningTaskValidator extends AbstractValidator<ProvisioningTaskCheck, ProvisioningTask<?>> {\n \n-    private final SchedTaskValidator schedV;\n-\n-    public ProvisioningTaskValidator() {\n-        super();\n-\n-        schedV = new SchedTaskValidator();\n-    }\n+    private final SchedTaskValidator schedTaskValidator = new SchedTaskValidator();\n \n     @Override\n-    public boolean isValid(final ProvisioningTask task, final ConstraintValidatorContext context) {\n-        boolean isValid = schedV.isValid(task, context);\n+    public boolean isValid(final ProvisioningTask<?> task, final ConstraintValidatorContext context) {\n+        boolean isValid = schedTaskValidator.isValid(task, context);\n \n         if (isValid) {\n             isValid = task.getResource() != null;"},{"sha":"0d7ff8ba788591935109bacbb4e50f94569e2217","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":24,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -47,12 +47,12 @@ under the License.\n \n   <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <SchedTask id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n+             jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n   <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <SchedTask id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n+             jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n \n   <!-- Password reset notifications -->\n   <MailTemplate id=\"requestPasswordReset\"\n@@ -95,14 +95,12 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"]'/> \n   <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" anyType_filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"]'/> \n \n   <ReportTemplate id=\"empty\"/>  \n \n@@ -111,20 +109,5 @@ we are happy to inform you that the password request was successfully executed f\n                   body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n+  <SyncopeRole id=\"GROUP_OWNER\" entitlements='[\"USER_SEARCH\",\"USER_READ\",\"USER_CREATE\",\"USER_UPDATE\",\"USER_DELETE\",\"ANYTYPECLASS_READ\",\"ANYTYPE_LIST\",\"ANYTYPECLASS_LIST\",\"RELATIONSHIPTYPE_LIST\",\"ANYTYPE_READ\",\"REALM_LIST\",\"GROUP_SEARCH\",\"GROUP_READ\",\"GROUP_UPDATE\",\"GROUP_DELETE\"]'/>\n </dataset>"},{"sha":"939eb706a1d942208d7951b54770bc71e8bc868f","filename":"core/persistence-jpa/src/main/resources/indexes.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -80,8 +80,11 @@ under the License.\n   <entry key=\"APlainAttr_schema_Index\">CREATE INDEX APlainAttr_schema_Index on APlainAttr(schema_id)</entry>\n   <entry key=\"APlainAttr_membership_Index\">CREATE INDEX APlainAttr_membership_Index on APlainAttr(membership_id)</entry>\n \n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-  <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n+  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON NotificationTask(executed)</entry>\n+  <entry key=\"TaskExec1_TaskIdIndex\">CREATE INDEX TaskExec1_TaskIdIndex ON PropagationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec2_TaskIdIndex\">CREATE INDEX TaskExec2_TaskIdIndex ON PullTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec3_TaskIdIndex\">CREATE INDEX TaskExec3_TaskIdIndex ON PushTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec4_TaskIdIndex\">CREATE INDEX TaskExec4_TaskIdIndex ON NotificationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec5_TaskIdIndex\">CREATE INDEX TaskExec5_TaskIdIndex ON SchedTaskExec(task_id)</entry>\n   <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"a996d330ca7857804cf17054680f01a302624363","filename":"core/persistence-jpa/src/main/resources/oracle_indexes.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Foracle_indexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Foracle_indexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Foracle_indexes.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -84,8 +84,11 @@ under the License.\n   <entry key=\"APlainAttr_schema_Index\">CREATE INDEX APlainAttr_schema_Index on APlainAttr(schema_id)</entry>\n   <entry key=\"APlainAttr_membership_Index\">CREATE INDEX APlainAttr_membership_Index on APlainAttr(membership_id)</entry>\n \n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-  <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n+  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON NotificationTask(executed)</entry>\n+  <entry key=\"TaskExec1_TaskIdIndex\">CREATE INDEX TaskExec1_TaskIdIndex ON PropagationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec2_TaskIdIndex\">CREATE INDEX TaskExec2_TaskIdIndex ON PullTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec3_TaskIdIndex\">CREATE INDEX TaskExec3_TaskIdIndex ON PushTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec4_TaskIdIndex\">CREATE INDEX TaskExec4_TaskIdIndex ON NotificationTaskExec(task_id)</entry>\n+  <entry key=\"TaskExec5_TaskIdIndex\">CREATE INDEX TaskExec5_TaskIdIndex ON SchedTaskExec(task_id)</entry>\n   <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"9545c1310ead2346431158d9a2efd640260f385f","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/NotificationTest.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -114,7 +114,11 @@ public void issueSYNCOPE445() {\n         notification.setSubject(\"Test notification\");\n         notification.setTemplate(mailTemplateDAO.find(\"test\"));\n \n-        Notification actual = notificationDAO.save(notification);\n+        notification = notificationDAO.save(notification);\n+\n+        entityManager().flush();\n+\n+        Notification actual = notificationDAO.find(notification.getKey());\n         assertNotNull(actual);\n         assertNotNull(actual.getKey());\n         assertNotNull(actual.getStaticRecipients());\n@@ -140,7 +144,11 @@ public void issueSYNCOPE446() {\n         notification.setSubject(\"Test notification\");\n         notification.setTemplate(mailTemplateDAO.find(\"test\"));\n \n-        Notification actual = notificationDAO.save(notification);\n+        notification = notificationDAO.save(notification);\n+\n+        entityManager().flush();\n+\n+        Notification actual = notificationDAO.find(notification.getKey());\n         assertNotNull(actual);\n         assertNotNull(actual.getKey());\n         assertNotNull(actual.getStaticRecipients());"},{"sha":"fef219960ee1af50d7be7a4943d5a96e44cfabc1","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RemediationTest.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -30,11 +30,13 @@\n import java.util.UUID;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.RemediationDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -66,7 +68,7 @@ public void createMissingPayload() {\n         remediation.setError(\"Error\");\n         remediation.setInstant(OffsetDateTime.now());\n         remediation.setRemoteName(\"remote\");\n-        remediation.setPullTask(taskDAO.find(\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n+        remediation.setPullTask((PullTask) taskDAO.find(TaskType.PULL, \"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n \n         // missing payload\n         try {\n@@ -87,7 +89,7 @@ public void createWrongPayload() {\n         remediation.setError(\"Error\");\n         remediation.setInstant(OffsetDateTime.now());\n         remediation.setRemoteName(\"remote\");\n-        remediation.setPullTask(taskDAO.find(\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n+        remediation.setPullTask((PullTask) taskDAO.find(TaskType.PULL, \"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n         remediation.setPayload(UUID.randomUUID().toString());\n \n         // wrong payload for operation\n@@ -109,7 +111,7 @@ public void create() {\n         remediation.setError(\"Error\");\n         remediation.setInstant(OffsetDateTime.now());\n         remediation.setRemoteName(\"remote\");\n-        remediation.setPullTask(taskDAO.find(\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n+        remediation.setPullTask((PullTask) taskDAO.find(TaskType.PULL, \"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\"));\n         remediation.setPayload(UUID.randomUUID().toString());\n         remediation.setOperation(ResourceOperation.DELETE);\n "},{"sha":"38d76b2dc8e5fcc270e95830355d3cb883407380","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskExecTest.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -24,6 +24,7 @@\n import java.time.OffsetDateTime;\n import java.util.List;\n import org.apache.syncope.common.lib.types.ExecStatus;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n@@ -45,35 +46,35 @@ public class TaskExecTest extends AbstractTest {\n \n     @Test\n     public void findAll() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         OffsetDateTime startedBefore = OffsetDateTime.of(2015, 12, 18, 0, 0, 0, 0, FormatUtils.DEFAULT_OFFSET);\n \n-        List<TaskExec> execs = taskExecDAO.findAll(task, startedBefore, null, null, null);\n+        List<TaskExec<?>> execs = taskExecDAO.findAll(task, startedBefore, null, null, null);\n         assertNotNull(execs);\n         assertEquals(1, execs.size());\n     }\n \n     @Test\n     public void findLatestStarted() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n-        TaskExec latestStarted = taskExecDAO.findLatestStarted(task);\n+        TaskExec<?> latestStarted = taskExecDAO.findLatestStarted(TaskType.PROPAGATION, task);\n         assertNotNull(latestStarted);\n         assertEquals(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\", latestStarted.getKey());\n     }\n \n     @Test\n     public void issueSYNCOPE214() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         String faultyMessage = \"A faulty message\";\n         faultyMessage = faultyMessage.replace('a', '\\0');\n \n-        TaskExec exec = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<PropagationTask> exec = entityFactory.newTaskExec(TaskType.PROPAGATION);\n         exec.setStart(OffsetDateTime.now());\n         exec.setEnd(OffsetDateTime.now());\n         exec.setStatus(ExecStatus.SUCCESS.name());"},{"sha":"75787462300020828957b714ed20be86b1d9c95a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskTest.java","status":"modified","additions":9,"deletions":13,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationData;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -66,26 +65,23 @@ public void findWithoutExecs() {\n \n     @Test\n     public void findPaginated() {\n-        List<Task> tasks = taskDAO.findAll(\n-                TaskType.PROPAGATION, null, null, null, null, 1, 2, List.of());\n+        List<PropagationTask> tasks = taskDAO.findAll(TaskType.PROPAGATION, null, null, null, null, 1, 2, List.of());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.size());\n \n-        for (Task task : tasks) {\n+        for (PropagationTask task : tasks) {\n             assertNotNull(task);\n         }\n \n-        tasks = taskDAO.findAll(\n-                TaskType.PROPAGATION, null, null, null, null, 2, 2, List.of());\n+        tasks = taskDAO.findAll(TaskType.PROPAGATION, null, null, null, null, 2, 2, List.of());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.size());\n \n-        for (Task task : tasks) {\n+        for (PropagationTask task : tasks) {\n             assertNotNull(task);\n         }\n \n-        tasks = taskDAO.findAll(\n-                TaskType.PROPAGATION, null, null, null, null, 1000, 2, List.of());\n+        tasks = taskDAO.findAll(TaskType.PROPAGATION, null, null, null, null, 1000, 2, List.of());\n         assertNotNull(tasks);\n         assertTrue(tasks.isEmpty());\n \n@@ -124,25 +120,25 @@ public void savePropagationTask() {\n         task = taskDAO.save(task);\n         assertNotNull(task);\n \n-        PropagationTask actual = taskDAO.find(task.getKey());\n+        PropagationTask actual = taskDAO.find(TaskType.PROPAGATION, task.getKey());\n         assertEquals(task, actual);\n     }\n \n     @Test\n     public void delete() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         ExternalResource resource = task.getResource();\n         assertNotNull(resource);\n \n         taskDAO.delete(task);\n-        task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNull(task);\n \n         resource = resourceDAO.find(resource.getKey());\n         assertNotNull(resource);\n-        assertFalse(taskDAO.findAll(\n+        assertFalse(taskDAO.<PropagationTask>findAll(\n                 TaskType.PROPAGATION, resource, null, null, null, -1, -1, List.of()).\n                 contains(task));\n     }"},{"sha":"dc7a929cbe81d7b4a91bba5164e82da2c47d92d0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -232,7 +232,7 @@ public void delete() {\n                 forEach(res -> assertFalse(res.getKey().equalsIgnoreCase(resource.getKey())));\n \n         // there must be no tasks\n-        propagationTasks.forEach(task -> assertNull(taskDAO.find(task.getKey())));\n+        propagationTasks.forEach(task -> assertTrue(taskDAO.find(task.getKey()).isEmpty()));\n     }\n \n     @Test"},{"sha":"47a5b41e035420b671fbe5249ffef46d74f8ea3e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -21,7 +21,6 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.time.OffsetDateTime;\n@@ -54,6 +53,7 @@\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n@@ -84,7 +84,7 @@ public class TaskTest extends AbstractTest {\n \n     @Test\n     public void read() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         assertNotNull(task.getExecs());\n@@ -130,25 +130,25 @@ public void save() {\n         task = taskDAO.save(task);\n         assertNotNull(task);\n \n-        PropagationTask actual = taskDAO.find(task.getKey());\n+        PropagationTask actual = taskDAO.find(TaskType.PROPAGATION, task.getKey());\n         assertEquals(task, actual);\n \n         entityManager().flush();\n \n         resource = resourceDAO.find(\"ws-target-resource-1\");\n-        assertTrue(taskDAO.findAll(\n+        assertTrue(taskDAO.<PropagationTask>findAll(\n                 TaskType.PROPAGATION, resource, null, null, null, -1, -1, List.of()).\n                 contains(task));\n     }\n \n     @Test\n     public void addPropagationTaskExecution() {\n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         int executionNumber = task.getExecs().size();\n \n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<PropagationTask> execution = entityFactory.newTaskExec(TaskType.PROPAGATION);\n         execution.setTask(task);\n         execution.setStatus(ExecStatus.CREATED.name());\n         execution.setStart(OffsetDateTime.now());\n@@ -158,20 +158,20 @@ public void addPropagationTaskExecution() {\n         taskDAO.save(task);\n         entityManager().flush();\n \n-        task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertNotNull(task);\n \n         assertEquals(executionNumber + 1, task.getExecs().size());\n     }\n \n     @Test\n     public void addPullTaskExecution() {\n-        PullTask task = taskDAO.find(\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\");\n+        PullTask task = (PullTask) taskDAO.find(TaskType.PULL, \"c41b9b71-9bfa-4f90-89f2-84787def4c5c\");\n         assertNotNull(task);\n \n         int executionNumber = task.getExecs().size();\n \n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<SchedTask> execution = entityFactory.newTaskExec(TaskType.PULL);\n         execution.setStatus(\"Text-free status\");\n         execution.setTask(task);\n         execution.setStart(OffsetDateTime.now());\n@@ -182,20 +182,20 @@ public void addPullTaskExecution() {\n         taskDAO.save(task);\n         entityManager().flush();\n \n-        task = taskDAO.find(\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\");\n+        task = (PullTask) taskDAO.find(TaskType.PULL, \"c41b9b71-9bfa-4f90-89f2-84787def4c5c\");\n         assertNotNull(task);\n \n         assertEquals(executionNumber + 1, task.getExecs().size());\n     }\n \n     @Test\n     public void addPushTaskExecution() {\n-        PushTask task = taskDAO.find(\"af558be4-9d2f-4359-bf85-a554e6e90be1\");\n+        PushTask task = (PushTask) taskDAO.find(TaskType.PUSH, \"af558be4-9d2f-4359-bf85-a554e6e90be1\");\n         assertNotNull(task);\n \n         int executionNumber = task.getExecs().size();\n \n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<SchedTask> execution = entityFactory.newTaskExec(TaskType.PUSH);\n         execution.setStatus(\"Text-free status\");\n         execution.setTask(task);\n         execution.setStart(OffsetDateTime.now());\n@@ -206,34 +206,35 @@ public void addPushTaskExecution() {\n         taskDAO.save(task);\n         entityManager().flush();\n \n-        task = taskDAO.find(\"af558be4-9d2f-4359-bf85-a554e6e90be1\");\n+        task = (PushTask) taskDAO.find(TaskType.PUSH, \"af558be4-9d2f-4359-bf85-a554e6e90be1\");\n         assertNotNull(task);\n \n         assertEquals(executionNumber + 1, task.getExecs().size());\n     }\n \n     @Test\n     public void deleteTask() {\n-        taskDAO.delete(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        taskDAO.delete(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n \n         entityManager().flush();\n \n-        assertNull(taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\"));\n-        assertNull(taskExecDAO.find(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\"));\n+        assertTrue(taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\").isEmpty());\n+        assertTrue(taskExecDAO.find(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\").isEmpty());\n     }\n \n     @Test\n     public void deleteTaskExecution() {\n-        TaskExec execution = taskExecDAO.find(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\");\n+        TaskExec<PropagationTask> execution =\n+                taskExecDAO.find(TaskType.PROPAGATION, \"e58ca1c7-178a-4012-8a71-8aa14eaf0655\");\n         int executionNumber = execution.getTask().getExecs().size();\n \n-        taskExecDAO.delete(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\");\n+        taskExecDAO.delete(TaskType.PROPAGATION, \"e58ca1c7-178a-4012-8a71-8aa14eaf0655\");\n \n         entityManager().flush();\n \n-        assertNull(taskExecDAO.find(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\"));\n+        assertTrue(taskExecDAO.find(\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\").isEmpty());\n \n-        PropagationTask task = taskDAO.find(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n+        PropagationTask task = taskDAO.find(TaskType.PROPAGATION, \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\");\n         assertEquals(task.getExecs().size(), executionNumber - 1);\n     }\n \n@@ -286,10 +287,10 @@ public void savePullTask() {\n         task.add(pullActions);\n \n         // this save() finally works\n-        task = taskDAO.save(task);\n+        task = (PullTask) taskDAO.save(task);\n         assertNotNull(task);\n \n-        PullTask actual = taskDAO.find(task.getKey());\n+        PullTask actual = (PullTask) taskDAO.find(TaskType.PULL, task.getKey());\n         assertEquals(task, actual);\n     }\n \n@@ -316,21 +317,20 @@ public void issueSYNCOPE144() {\n         task.setMatchingRule(MatchingRule.UPDATE);\n         task.setUnmatchingRule(UnmatchingRule.PROVISION);\n \n-        task = taskDAO.save(task);\n+        task = (PullTask) taskDAO.save(task);\n         assertNotNull(task);\n \n-        PullTask actual = taskDAO.find(task.getKey());\n+        PullTask actual = (PullTask) taskDAO.find(TaskType.PULL, task.getKey());\n         assertEquals(task, actual);\n         assertEquals(\"issueSYNCOPE144\", actual.getName());\n         assertEquals(\"issueSYNCOPE144 Description\", actual.getDescription());\n \n         actual.setName(\"issueSYNCOPE144_2\");\n         actual.setDescription(\"issueSYNCOPE144 Description_2\");\n \n-        actual = taskDAO.save(actual);\n+        actual = (PullTask) taskDAO.save(actual);\n         assertNotNull(actual);\n         assertEquals(\"issueSYNCOPE144_2\", actual.getName());\n         assertEquals(\"issueSYNCOPE144 Description_2\", actual.getDescription());\n     }\n-\n }"},{"sha":"4c49dd8719e038489eff882be7e607afdd32a332","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":115,"deletions":166,"changes":281,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -154,51 +154,21 @@ under the License.\n              spec=\"{ &quot;method&quot;: &quot;GET&quot;, &quot;url&quot;: &quot;/a/b/c&quot; }\"\n              application_id=\"mightyApp\"/>\n \n-  <SyncopeRole id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_READ\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_LIST\" role_id=\"User reviewer\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_READ\" role_id=\"User reviewer\"/>\n+  <SyncopeRole id=\"User reviewer\" entitlements='[\"USER_READ\",\"USER_LIST\",\"USER_SEARCH\",\"ANYTYPE_LIST\",\"ANYTYPE_READ\",\"ANYTYPECLASS_LIST\",\"ANYTYPECLASS_READ\"]'/>\n   <SyncopeRole_Realm role_id=\"User reviewer\" realm_id=\"722f3d84-9c2b-4525-8f6e-e4b82c55a36c\"/>\n   <SyncopeRole_Realm role_id=\"User reviewer\" realm_id=\"c5b75db1-fce7-470f-b780-3b9934d82a9d\"/>\n   \n-  <SyncopeRole id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPE_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"ANYTYPECLASS_READ\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_LIST\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_CLAIM\" role_id=\"User manager\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_SUBMIT\" role_id=\"User manager\"/>\n+  <SyncopeRole id=\"User manager\" entitlements='[\"USER_READ\",\"USER_LIST\",\"USER_SEARCH\",\"ANYTYPE_LIST\",\"ANYTYPE_READ\",\"ANYTYPECLASS_LIST\",\"ANYTYPECLASS_READ\",\"USER_REQUEST_FORM_LIST\",\"USER_REQUEST_FORM_CLAIM\",\"USER_REQUEST_FORM_SUBMIT\"]'/>\n   <SyncopeRole_Realm role_id=\"User manager\" realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"/>\n \n-  <SyncopeRole id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"SCHEMA_READ\" role_id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"GROUP_READ\" role_id=\"Other\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_REQUEST_FORM_CLAIM\" role_id=\"Other\"/>\n+  <SyncopeRole id=\"Other\" entitlements='[\"SCHEMA_READ\",\"GROUP_READ\",\"USER_REQUEST_FORM_CLAIM\"]'/>\n   <SyncopeRole_Realm role_id=\"Other\" realm_id=\"722f3d84-9c2b-4525-8f6e-e4b82c55a36c\"/>\n   <SyncopeRole_Privilege role_id=\"Other\" privilege_id=\"postMighty\"/>\n   \n-  <SyncopeRole id=\"Search for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"Search for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"Search for realm evenTwo\"/>\n+  <SyncopeRole id=\"Search for realm evenTwo\" entitlements='[\"USER_READ\",\"USER_SEARCH\"]'/>\n   <SyncopeRole_Realm role_id=\"Search for realm evenTwo\" realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\"/>\n \n-  <SyncopeRole id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_READ\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_UPDATE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_DELETE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"CONNECTOR_LIST\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_READ\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_UPDATE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_DELETE\" role_id=\"Connector and Resource for realm evenTwo\"/>\n-  <SyncopeRole_entitlements entitlement=\"RESOURCE_LIST\" role_id=\"Connector and Resource for realm evenTwo\"/>\n+  <SyncopeRole id=\"Connector and Resource for realm evenTwo\" entitlements='[\"CONNECTOR_READ\",\"CONNECTOR_UPDATE\",\"CONNECTOR_DELETE\",\"CONNECTOR_LIST\",\"RESOURCE_READ\",\"RESOURCE_UPDATE\",\"RESOURCE_DELETE\",\"RESOURCE_LIST\"]'/>\n   <SyncopeRole_Realm role_id=\"Connector and Resource for realm evenTwo\"\n                      realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\"/>\n \n@@ -801,25 +771,25 @@ under the License.\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate\"/>\n   <Implementation id=\"PushJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\" task_id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"b8870cfb-3c1e-4fc4-abcb-2559826232e6\" operation=\"CREATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <Task DTYPE=\"PropagationTask\" id=\"316285cc-ae52-4ea2-a33b-7355e189ac3f\" operation=\"DELETE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTask id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"e58ca1c7-178a-4012-8a71-8aa14eaf0655\" task_id=\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PropagationTask id=\"b8870cfb-3c1e-4fc4-abcb-2559826232e6\" operation=\"CREATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTask id=\"316285cc-ae52-4ea2-a33b-7355e189ac3f\" operation=\"DELETE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n   <!--SYNCOPE-1641 to be purged-->\n-  <Task DTYPE=\"PropagationTask\" id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-1\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"c3290f8b-caf9-4a85-84fb-fb619b65cd49\" task_id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n-        pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"\n-        jobDelegate_id=\"PullJobDelegate\"/>\n+  <PropagationTask id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-1\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"c3290f8b-caf9-4a85-84fb-fb619b65cd49\" task_id=\"025c956d-ea88-4bd7-9e44-2f35e0aa7055\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PullTask remediation=\"0\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+            pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"\n+            jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n@@ -828,131 +798,131 @@ under the License.\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Implementation id=\"TestSampleJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n-        jobDelegate_id=\"TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n+  <SchedTask id=\"e95555d2-1b09-42c8-b25b-f4c4ec597979\" name=\"SampleJob Task\" active=\"1\"\n+             jobDelegate_id=\"TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" operation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <TaskExec id=\"d789462f-e395-424f-bd8e-0db44a93222f\" task_id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <SchedTask id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\" active=\"1\"\n+             jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <PropagationTask id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" operation=\"UPDATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PropagationTaskExec id=\"d789462f-e395-424f-bd8e-0db44a93222f\" task_id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" startDate=\"2015-12-17 09:40:00\" endDate=\"2015-12-17 09:42:00\" status=\"SUCCESS\"/>\n+  <PullTask remediation=\"0\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":\"&apos;/&apos; + title\",\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"minimal group\"],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplatePullTask id=\"fda22ff3-98f3-42e4-a2ae-cd9a28282d57\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"values\":[\"true\"]}]}'/>\n   <Implementation id=\"LDAPMembershipPullActions\" type=\"PULL_ACTIONS\"  engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <PullTaskAction task_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" implementation_id=\"LDAPMembershipPullActions\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PushTask\" id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n+  <PullTask remediation=\"0\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PushTask id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n   <PushTaskAnyFilter id=\"1fdcff65-765f-4a6e-98a7-13ef7cca47e2\" anyType_id=\"USER\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"surname==Vivaldi\"/>\n   <PushTaskAnyFilter id=\"3b564c51-5d64-48b3-8da5-fd4ebc10e0a8\" anyType_id=\"GROUP\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"199efd21-5e89-46ac-95de-f47e9d0569fc\" anyType_id=\"USER\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"surname==Bellini\"/>\n   <PushTaskAnyFilter id=\"7672a167-77d6-4639-8b1d-0af561293c7d\" anyType_id=\"GROUP\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"39a11ba6-397a-4c94-8bfe-1f4f757d6501\" anyType_id=\"USER\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"surname==Puccini\"/>\n   <PushTaskAnyFilter id=\"5bd7501e-8a18-4fbd-a3fe-a1e731ba95db\" anyType_id=\"GROUP\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-        unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n+            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"0d0371a3-5772-4b4c-ad14-139adf1d346a\" anyType_id=\"USER\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"2e7488ae-a2fc-4657-a93b-159b8433c0e7\" anyType_id=\"GROUP\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"41bf22fe-a014-41af-9a75-402b987eb433\" anyType_id=\"USER\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"fa983fde-795e-4c89-a6f7-1ccd80a8adeb\" anyType_id=\"GROUP\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"e238a6dc-0b04-46cf-9bfa-be68bd9f2da0\" anyType_id=\"USER\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"0eaa643e-0add-4c46-8273-539f9d6abec5\" anyType_id=\"GROUP\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"335b4f11-589a-44c5-80b0-ba94892f0c62\" anyType_id=\"USER\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"surname==Rossini\"/>\n   <PushTaskAnyFilter id=\"b32eecc2-aa4f-43c6-a501-a692c3e93113\" anyType_id=\"GROUP\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"9f974a0d-87d8-4cae-9ea9-1fc245bc1dbf\" anyType_id=\"USER\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"0dc46ba4-1270-4fa9-b3e1-79f940d4308f\" anyType_id=\"GROUP\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"3aa3b0b8-7469-4859-89d5-476ae5915101\" anyType_id=\"USER\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"f054810e-6842-4017-8f60-5b4031fa2c72\" anyType_id=\"GROUP\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"95f047fc-1a8a-45f4-b56c-6e04d8ca5567\" anyType_id=\"USER\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"surname==Verdi\"/>\n   <PushTaskAnyFilter id=\"013a4298-4b14-4f8b-9f59-191c2d53dbd8\" anyType_id=\"GROUP\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"name==_NO_ONE_\"/>\n-  <Task DTYPE=\"PushTask\" id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n-        sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n-        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-        unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n+  <PushTask id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n+            sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n+            performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"30842acc-f2dd-4d47-b359-20db06c30803\" anyType_id=\"USER\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"9e4c0233-440e-4b5b-9563-11ec0f55a334\" anyType_id=\"GROUP\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"name==citizen\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n                        template='{\"_class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n-        unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PropagationTask\" id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n-        propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n-  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"INCREMENTAL\"\n-        unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PullTask remediation=\"0\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n+  <PropagationTask id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n+                   objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n+                   propagationData='{\"attributes\":[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]}'/>\n+  <PullTask remediation=\"0\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n+            destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"INCREMENTAL\"\n+            unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <SchedTask id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\" active=\"1\"\n+             jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n \n   <MailTemplate id=\"requestPasswordReset\"\n                 textTemplate=\"Hi,\n@@ -1054,26 +1024,20 @@ $$ }&#10;\n \n   <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"]'/> \n   <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" anyType_filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n-  <Task DTYPE=\"NotificationTask\" id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\"\n-        sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" executed=\"0\"\n-        textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n-  <NotificationTask_recipients notificationTask_id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" address=\"recipient@prova.org\"/>  \n+  <NotificationTask id=\"e1e520f0-2cbd-4e11-9a89-ea58a0f957e7\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\"\n+                    sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" executed=\"0\"\n+                    textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\" recipients='[\"recipient@prova.org\"]'/>\n   \n   <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"]'/> \n \n   <Notification id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template_id=\"test\" selfAsRecipient=\"0\" \n-                traceLevel=\"FAILURES\"\n-                recipientsFIQL=\"$groups==7\"\n-                recipientAttrName=\"email\" active=\"1\"/>\n+                traceLevel=\"FAILURES\" recipientsFIQL=\"$groups==7\" recipientAttrName=\"email\" active=\"1\"\n+                events='[\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\", \"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"]'/>\n   <AnyAbout id=\"2e2ee845-2abf-43c6-b543-49243a84e2f1\" anyType_id=\"USER\" notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" anyType_filter=\"fullname==*o*;fullname==*i*\"/>\n-  <Notification_events notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" event=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n-  <Notification_events notification_id=\"9e2b911c-25de-4c77-bcea-b86ed9451050\" event=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n \n   <ReportTemplate id=\"empty\"/>  \n   <ReportTemplate id=\"sample\"\n@@ -2189,22 +2153,7 @@ $$ }&#10;\n             logout=\"0\" csrf=\"1\" routeType=\"PROTECTED\"\n             predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n \n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n+  <SyncopeRole id=\"GROUP_OWNER\" entitlements='[\"USER_SEARCH\",\"USER_READ\",\"USER_CREATE\",\"USER_UPDATE\",\"USER_DELETE\",\"ANYTYPECLASS_READ\",\"ANYTYPE_LIST\",\"ANYTYPECLASS_LIST\",\"RELATIONSHIPTYPE_LIST\",\"ANYTYPE_READ\",\"REALM_LIST\",\"GROUP_SEARCH\",\"GROUP_READ\",\"GROUP_UPDATE\",\"GROUP_DELETE\"]'/>\n \n   <AuditConf id=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" active=\"1\"/>\n "},{"sha":"8724010633ecf50373c81db10f5f3c63ebfadf04","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -41,8 +41,8 @@ under the License.\n \n   <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n+  <SchedTask id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n+             jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n   \n   <!-- Password reset notifications -->\n   <MailTemplate id=\"requestPasswordReset\"\n@@ -85,14 +85,12 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Notification id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"]'/> \n   <AnyAbout id=\"0d4e37a1-a4f4-4865-afcb-4be01da3da53\" anyType_id=\"USER\" notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" anyType_filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"c74b4616-9c63-4350-b4bf-ae0077b1ae6a\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"71769807-7f74-4dc3-ba61-e4a7a00eb8ad\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n+                traceLevel=\"FAILURES\" events='[\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"]'/> \n \n   <ConnInstance id=\"b7ea96c3-c633-488b-98a0-b52ac35850f7\" bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"LDAP\"\n                 adminRealm_id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\"\n@@ -101,5 +99,6 @@ we are happy to inform you that the password request was successfully executed f\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"truemaintainLdapGroupMembership\"]}]'\n                 capabilities='[\"CREATE\",\"UPDATE\",\"DELETE\",\"SEARCH\"]'/>\n-  \n+\n+  <SyncopeRole id=\"GROUP_OWNER\" entitlements='[\"USER_SEARCH\",\"USER_READ\",\"USER_CREATE\",\"USER_UPDATE\",\"USER_DELETE\",\"ANYTYPECLASS_READ\",\"ANYTYPE_LIST\",\"ANYTYPECLASS_LIST\",\"RELATIONSHIPTYPE_LIST\",\"ANYTYPE_READ\",\"REALM_LIST\",\"GROUP_SEARCH\",\"GROUP_READ\",\"GROUP_UPDATE\",\"GROUP_DELETE\"]'/>\n </dataset>"},{"sha":"eacbb5ca77a6fbc94acefed5662af25cae9e3192","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/TaskDataBinder.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FTaskDataBinder.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -32,10 +32,9 @@ public interface TaskDataBinder {\n \n     void updateSchedTask(SchedTask task, SchedTaskTO taskTO, TaskUtils taskUtil);\n \n-    String buildRefDesc(Task task);\n+    String buildRefDesc(Task<?> task);\n \n-    ExecTO getExecTO(TaskExec execution);\n-\n-    <T extends TaskTO> T getTaskTO(Task task, TaskUtils taskUtil, boolean details);\n+    ExecTO getExecTO(TaskExec<?> execution);\n \n+    <T extends TaskTO> T getTaskTO(Task<?> task, TaskUtils taskUtil, boolean details);\n }"},{"sha":"aac01962b3f2697c40b8d4d6b72bb6652b4f9619","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/JobManager.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -30,7 +30,9 @@\n @SuppressWarnings(\"squid:S1214\")\n public interface JobManager {\n \n-    String TASK_KEY = \"task\";\n+    String TASK_TYPE = \"taskType\";\n+\n+    String TASK_KEY = \"taskKey\";\n \n     String REPORT_KEY = \"report\";\n \n@@ -48,7 +50,7 @@ Map<String, Object> register(SchedTask task, OffsetDateTime startAt, long interr\n     void register(Report report, OffsetDateTime startAt, long interruptMaxRetries, String executor)\n             throws SchedulerException;\n \n-    void unregister(Task task);\n+    void unregister(Task<?> task);\n \n     void unregister(Report report);\n }"},{"sha":"498cff66951dfb480ea3f96e8428cd1c39478f11","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/JobNamer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -55,7 +55,7 @@ public static String getReportKeyFromJobName(final String name) {\n         return getKeyFromJobName(name, \"reportJob\" + SyncopeConstants.UUID_REGEX, 9);\n     }\n \n-    public static JobKey getJobKey(final Task task) {\n+    public static JobKey getJobKey(final Task<?> task) {\n         return new JobKey(\"taskJob\" + task.getKey(), Scheduler.DEFAULT_GROUP);\n     }\n "},{"sha":"ebd2bdf9633b6ce387f097e59760ee19a8032c54","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/SchedTaskJobDelegate.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.api.job;\n \n+import org.apache.syncope.common.lib.types.TaskType;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n \n@@ -26,10 +27,15 @@ public interface SchedTaskJobDelegate extends JobDelegate {\n     /**\n      * Executes a Quartz Job to run the given Task.\n      *\n+     * @param taskType Type of task to run\n      * @param taskKey Task key to run\n      * @param dryRun indicates if execution shall be simulated with no actual changes\n      * @param context Quartz' execution context, can be used to pass parameters to the job\n      * @throws JobExecutionException if anything goes wrong\n      */\n-    void execute(String taskKey, boolean dryRun, JobExecutionContext context) throws JobExecutionException;\n+    void execute(\n+            TaskType taskType,\n+            String taskKey,\n+            boolean dryRun,\n+            JobExecutionContext context) throws JobExecutionException;\n }"},{"sha":"98400a17cee7cff93bba750de0bf6fff848acd09","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/notification/NotificationJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -25,7 +25,7 @@\n \n public interface NotificationJobDelegate extends JobDelegate {\n \n-    TaskExec executeSingle(NotificationTask task, String executor);\n+    TaskExec<NotificationTask> executeSingle(NotificationTask task, String executor);\n \n     void execute(String executor) throws JobExecutionException;\n }"},{"sha":"65730662ff34619f158f22ee6354d109301db332","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/notification/NotificationManager.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -104,6 +104,5 @@ List<NotificationTask> createTasks(\n      * @param execution task execution.\n      * @return merged task execution.\n      */\n-    TaskExec storeExec(TaskExec execution);\n-\n+    TaskExec<NotificationTask> storeExec(TaskExec<NotificationTask> execution);\n }"},{"sha":"5e7890e972e8cf19925d99fdd22386e8e070f5a1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationActions.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,6 +22,7 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.to.OrgUnit;\n import org.apache.syncope.common.lib.to.Provision;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n@@ -67,7 +68,7 @@ default void before(PropagationTaskInfo taskInfo) {\n      * @param execution execution result\n      * @param error propagation error\n      */\n-    default void onError(PropagationTaskInfo taskInfo, TaskExec execution, Exception error) {\n+    default void onError(PropagationTaskInfo taskInfo, TaskExec<PropagationTask> execution, Exception error) {\n         // do nothing\n     }\n \n@@ -78,7 +79,7 @@ default void onError(PropagationTaskInfo taskInfo, TaskExec execution, Exception\n      * @param execution execution result\n      * @param afterObj connector object read after propagation\n      */\n-    default void after(PropagationTaskInfo taskInfo, TaskExec execution, ConnectorObject afterObj) {\n+    default void after(PropagationTaskInfo taskInfo, TaskExec<PropagationTask> execution, ConnectorObject afterObj) {\n         // do nothing\n     }\n }"},{"sha":"c7a1877714dd75157dd518102385fb4c88fe1822","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskCallable.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,9 +19,10 @@\n package org.apache.syncope.core.provisioning.api.propagation;\n \n import java.util.concurrent.Callable;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n \n-public interface PropagationTaskCallable extends Callable<TaskExec> {\n+public interface PropagationTaskCallable extends Callable<TaskExec<PropagationTask>> {\n \n     void setTaskInfo(PropagationTaskInfo taskInfo);\n "},{"sha":"db39fd4685ceca6931fc24962368e3183b4c9c7f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskExecutor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collection;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n \n /**\n@@ -45,7 +46,7 @@ public interface PropagationTaskExecutor {\n      * @param executor the executor of this task\n      * @return the generated TaskExec\n      */\n-    TaskExec execute(PropagationTaskInfo taskInfo, PropagationReporter reporter, String executor);\n+    TaskExec<PropagationTask> execute(PropagationTaskInfo taskInfo, PropagationReporter reporter, String executor);\n \n     /**\n      * Execute the given collection of tasks."},{"sha":"05441b24368f577b74e0dc854efde9f58fdb6ee8","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n \n-public class ProvisioningProfile<T extends ProvisioningTask, A extends ProvisioningActions> {\n+public class ProvisioningProfile<T extends ProvisioningTask<?>, A extends ProvisioningActions> {\n \n     private final Connector connector;\n "},{"sha":"541e8b00695d726ce67b56347166523acd0a3b3f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopeResultHandler.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,10 +20,9 @@\n \n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n \n-public interface SyncopeResultHandler<T extends ProvisioningTask, A extends ProvisioningActions> {\n+public interface SyncopeResultHandler<T extends ProvisioningTask<?>, A extends ProvisioningActions> {\n \n     ProvisioningProfile<T, A> getProfile();\n \n     void setProfile(ProvisioningProfile<T, A> profile);\n-\n }"},{"sha":"3739ab7a2d279e80573a1f4b9b88fc5739464157","filename":"core/provisioning-api/src/test/java/org/apache/syncope/core/provisioning/api/job/JobNamerTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamerTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -58,7 +58,7 @@ public void getReportKeyFromJobName() {\n     }\n \n     @Test\n-    public void getJobKey(final @Mock Task task) {\n+    public void getJobKey(final @Mock Task<?> task) {\n         String uuid = UUID.randomUUID().toString();\n         when(task.getKey()).thenReturn(uuid);\n         assertTrue(EqualsBuilder.reflectionEquals(new JobKey(\"taskJob\" + task.getKey(), Scheduler.DEFAULT_GROUP),"},{"sha":"97ad8f378b7e073e311bd4a34bdd48ce4d457f19","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":29,"deletions":31,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -267,12 +267,10 @@ protected void fillAttr(\n                 try {\n                     attr.add(validator, value, anyUtils);\n                 } catch (InvalidPlainAttrValueException e) {\n-                    String valueToPrint = value.length() > 40\n-                            ? value.substring(0, 20) + \"...\"\n-                            : value;\n-                    LOG.warn(\"Invalid value for attribute \" + schema.getKey() + \": \" + valueToPrint, e);\n+                    LOG.warn(\"Invalid value for attribute {}: {}\",\n+                            schema.getKey(), StringUtils.abbreviate(value, 20), e);\n \n-                    invalidValues.getElements().add(schema.getKey() + \": \" + valueToPrint + \" - \" + e.getMessage());\n+                    invalidValues.getElements().add(schema.getKey() + \": \" + value + \" - \" + e.getMessage());\n                 }\n             }\n         });\n@@ -292,7 +290,7 @@ protected List<String> evaluateMandatoryCondition(\n             }\n             if (intAttrName != null && intAttrName.getSchema() != null) {\n                 AttrSchemaType schemaType = intAttrName.getSchema() instanceof PlainSchema\n-                        ? ((PlainSchema) intAttrName.getSchema()).getType()\n+                        ? intAttrName.getSchema().getType()\n                         : AttrSchemaType.String;\n \n                 Pair<AttrSchemaType, List<PlainAttrValue>> intValues = mappingManager.getIntValues(\n@@ -362,10 +360,11 @@ private SyncopeClientException checkMandatory(final Any<?> any, final AnyUtils a\n             allowedPlainSchemas.getForMemberships().forEach((group, schemas) -> {\n                 GroupableRelatable<?, ?, ?, ?, ?> groupable = GroupableRelatable.class.cast(any);\n                 Membership<?> membership = groupable.getMembership(group.getKey()).orElse(null);\n-                schemas\n-                        .forEach(schema -> checkMandatory(schema, groupable.getPlainAttr(schema.getKey(), membership)\n-                        .orElse(null),\n-                        any, reqValMissing));\n+                schemas.forEach(schema -> checkMandatory(\n+                        schema,\n+                        groupable.getPlainAttr(schema.getKey(), membership).orElse(null),\n+                        any,\n+                        reqValMissing));\n             });\n         }\n \n@@ -538,7 +537,7 @@ protected void fill(\n         any.getAuxClasses().clear();\n         anyCR.getAuxClasses().stream().\n                 map(className -> anyTypeClassDAO.find(className)).\n-                forEachOrdered(auxClass -> {\n+                forEach(auxClass -> {\n                     if (auxClass == null) {\n                         LOG.debug(\"Invalid \" + AnyTypeClass.class.getSimpleName() + \" {}, ignoring...\", auxClass);\n                     } else {\n@@ -607,26 +606,25 @@ protected void fill(\n \n         membershipTO.getPlainAttrs().stream().\n                 filter(attrTO -> !attrTO.getValues().isEmpty()).\n-                forEach(attrTO -> {\n-                    PlainSchema schema = getPlainSchema(attrTO.getSchema());\n-                    if (schema != null) {\n-                        GroupablePlainAttr attr = (GroupablePlainAttr) GroupableRelatable.class.cast(any).\n-                                getPlainAttr(schema.getKey(), membership).orElse(null);\n-                        if (attr == null) {\n-                            attr = anyUtils.newPlainAttr();\n-                            attr.setOwner(any);\n-                            attr.setMembership(membership);\n-                            attr.setSchema(schema);\n-                        }\n-                        fillAttr(attrTO.getValues(), anyUtils, schema, attr, invalidValues);\n-\n-                        if (attr.getValuesAsStrings().isEmpty()) {\n-                            attr.setOwner(null);\n-                        } else {\n-                            any.add(attr);\n-                        }\n-                    }\n-                });\n+                forEach(attrTO -> Optional.ofNullable(getPlainSchema(attrTO.getSchema())).ifPresent(schema -> {\n+\n+            GroupablePlainAttr attr = (GroupablePlainAttr) GroupableRelatable.class.cast(any).\n+                    getPlainAttr(schema.getKey(), membership).\n+                    orElseGet(() -> {\n+                        GroupablePlainAttr gpa = anyUtils.newPlainAttr();\n+                        gpa.setOwner(any);\n+                        gpa.setMembership(membership);\n+                        gpa.setSchema(schema);\n+                        return gpa;\n+                    });\n+            fillAttr(attrTO.getValues(), anyUtils, schema, attr, invalidValues);\n+\n+            if (attr.getValuesAsStrings().isEmpty()) {\n+                attr.setOwner(null);\n+            } else {\n+                any.add(attr);\n+            }\n+        }));\n \n         if (!invalidValues.isEmpty()) {\n             scce.addException(invalidValues);"},{"sha":"b10f570942119e496191cbb59fe3f79ec1a02472","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -112,7 +112,7 @@ public TaskDataBinderImpl(\n         this.taskUtilsFactory = taskUtilsFactory;\n     }\n \n-    protected void fill(final ProvisioningTask provisioningTask, final ProvisioningTaskTO provisioningTaskTO) {\n+    protected void fill(final ProvisioningTask<?> provisioningTask, final ProvisioningTaskTO provisioningTaskTO) {\n         if (provisioningTask instanceof PushTask && provisioningTaskTO instanceof PushTaskTO) {\n             PushTask pushTask = (PushTask) provisioningTask;\n             PushTaskTO pushTaskTO = (PushTaskTO) provisioningTaskTO;\n@@ -298,7 +298,7 @@ public void updateSchedTask(final SchedTask task, final SchedTaskTO taskTO, fina\n     }\n \n     @Override\n-    public String buildRefDesc(final Task task) {\n+    public String buildRefDesc(final Task<?> task) {\n         return taskUtilsFactory.getInstance(task).getType().name() + ' '\n                 + \"Task \"\n                 + task.getKey() + ' '\n@@ -310,7 +310,7 @@ public String buildRefDesc(final Task task) {\n     }\n \n     @Override\n-    public ExecTO getExecTO(final TaskExec execution) {\n+    public ExecTO getExecTO(final TaskExec<?> execution) {\n         ExecTO execTO = new ExecTO();\n         execTO.setKey(execution.getKey());\n         execTO.setStatus(execution.getStatus());\n@@ -349,7 +349,7 @@ protected void fill(final SchedTaskTO schedTaskTO, final SchedTask schedTask) {\n \n         if (schedTaskTO instanceof ProvisioningTaskTO && schedTask instanceof ProvisioningTask) {\n             ProvisioningTaskTO provisioningTaskTO = (ProvisioningTaskTO) schedTaskTO;\n-            ProvisioningTask provisioningTask = (ProvisioningTask) schedTask;\n+            ProvisioningTask<?> provisioningTask = (ProvisioningTask<?>) schedTask;\n \n             provisioningTaskTO.setResource(provisioningTask.getResource().getKey());\n \n@@ -364,11 +364,11 @@ protected void fill(final SchedTaskTO schedTaskTO, final SchedTask schedTask) {\n     }\n \n     @Override\n-    public <T extends TaskTO> T getTaskTO(final Task task, final TaskUtils taskUtils, final boolean details) {\n+    public <T extends TaskTO> T getTaskTO(final Task<?> task, final TaskUtils taskUtils, final boolean details) {\n         T taskTO = taskUtils.newTaskTO();\n         taskTO.setKey(task.getKey());\n \n-        TaskExec latestExec = taskExecDAO.findLatestStarted(task);\n+        TaskExec<?> latestExec = taskExecDAO.findLatestStarted(taskUtils.getType(), task);\n         if (latestExec == null) {\n             taskTO.setLatestExecStatus(StringUtils.EMPTY);\n         } else {"},{"sha":"a9c0c36fafc0627bf8d3c87bd7077123eeb26944","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":19,"deletions":18,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -192,7 +192,18 @@ public UserTO getAuthenticatedUserTO() {\n         return authUserTO;\n     }\n \n-    private void setPassword(final User user, final String password, final SyncopeClientCompositeException scce) {\n+    protected RuntimeException aggregateException(\n+            final SyncopeClientCompositeException scce,\n+            final RuntimeException e,\n+            final ClientExceptionType clientExceptionType) {\n+\n+        SyncopeClientException sce = SyncopeClientException.build(clientExceptionType);\n+        sce.getElements().add(e.getMessage());\n+        scce.addException(sce);\n+        return scce;\n+    }\n+\n+    protected void setPassword(final User user, final String password, final SyncopeClientCompositeException scce) {\n         try {\n             setCipherAlgorithm(user);\n             user.setPassword(password);\n@@ -201,7 +212,7 @@ private void setPassword(final User user, final String password, final SyncopeCl\n         }\n     }\n \n-    private void setSecurityAnswer(\n+    protected void setSecurityAnswer(\n             final User user,\n             final String securityAnswer,\n             final SyncopeClientCompositeException scce) {\n@@ -213,24 +224,14 @@ private void setSecurityAnswer(\n         }\n     }\n \n-    private void setCipherAlgorithm(final User user) {\n+    protected void setCipherAlgorithm(final User user) {\n         if (user.getCipherAlgorithm() == null) {\n             user.setCipherAlgorithm(CipherAlgorithm.valueOf(confParamOps.get(AuthContextUtils.getDomain(),\n                     \"password.cipher.algorithm\", CipherAlgorithm.AES.name(), String.class)));\n         }\n     }\n \n-    private RuntimeException aggregateException(\n-            final SyncopeClientCompositeException scce,\n-            final RuntimeException e,\n-            final ClientExceptionType clientExceptionType) {\n-        SyncopeClientException sce = SyncopeClientException.build(clientExceptionType);\n-        sce.getElements().add(e.getMessage());\n-        scce.addException(sce);\n-        return scce;\n-    }\n-\n-    private void linkedAccount(\n+    protected void linkedAccount(\n             final User user,\n             final LinkedAccountTO accountTO,\n             final AnyUtils anyUtils,\n@@ -426,8 +427,8 @@ public void create(final User user, final UserCR userCR) {\n \n         // linked accounts\n         SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n-        userCR.getLinkedAccounts().forEach(accountTO\n-                -> linkedAccount(user, accountTO, anyUtilsFactory.getLinkedAccountInstance(), invalidValues));\n+        userCR.getLinkedAccounts().\n+                forEach(acct -> linkedAccount(user, acct, anyUtilsFactory.getLinkedAccountInstance(), invalidValues));\n         if (!invalidValues.isEmpty()) {\n             scce.addException(invalidValues);\n         }\n@@ -441,7 +442,7 @@ public void create(final User user, final UserCR userCR) {\n         }\n     }\n \n-    private boolean isPasswordMapped(final ExternalResource resource) {\n+    protected boolean isPasswordMapped(final ExternalResource resource) {\n         return resource.getProvision(anyTypeDAO.findUser().getKey()).\n                 filter(provision -> provision.getMapping() != null).\n                 map(provision -> provision.getMapping().getItems().stream().anyMatch(Item::isPassword)).\n@@ -757,7 +758,7 @@ public Pair<PropagationByResource<String>, PropagationByResource<Pair<String, St\n         return Pair.of(propByRes, propByLinkedAccount);\n     }\n \n-    private LinkedAccountTO getLinkedAccountTO(final LinkedAccount account, final boolean returnPasswordValue) {\n+    protected LinkedAccountTO getLinkedAccountTO(final LinkedAccount account, final boolean returnPasswordValue) {\n         LinkedAccountTO accountTO = new LinkedAccountTO.Builder(\n                 account.getKey(), account.getResource().getKey(), account.getConnObjectKeyValue()).\n                 username(account.getUsername())."},{"sha":"9128deb17dc8156ec9776081f83a80210f9a150a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":18,"deletions":9,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -22,6 +22,7 @@\n import java.util.Optional;\n import java.util.concurrent.atomic.AtomicReference;\n import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n@@ -40,17 +41,19 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n-public abstract class AbstractSchedTaskJobDelegate implements SchedTaskJobDelegate {\n+public abstract class AbstractSchedTaskJobDelegate<T extends SchedTask> implements SchedTaskJobDelegate {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SchedTaskJobDelegate.class);\n \n     @Autowired\n     private SecurityProperties securityProperties;\n \n+    protected TaskType taskType;\n+\n     /**\n      * The actual task to be executed.\n      */\n-    protected SchedTask task;\n+    protected T task;\n \n     /**\n      * Task execution DAO.\n@@ -100,12 +103,18 @@ public boolean isInterrupted() {\n         return interrupted;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Transactional\n     @Override\n-    public void execute(final String taskKey, final boolean dryRun, final JobExecutionContext context)\n+    public void execute(\n+            final TaskType taskType,\n+            final String taskKey,\n+            final boolean dryRun,\n+            final JobExecutionContext context)\n             throws JobExecutionException {\n \n-        task = taskDAO.find(taskKey);\n+        this.taskType = taskType;\n+        task = (T) taskDAO.find(taskType, taskKey);\n         if (task == null) {\n             throw new JobExecutionException(\"Task \" + taskKey + \" not found\");\n         }\n@@ -117,7 +126,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n \n         String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n                 orElse(securityProperties.getAdminUser());\n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<SchedTask> execution = entityFactory.newTaskExec(taskType);\n         execution.setStart(OffsetDateTime.now());\n         execution.setTask(task);\n         execution.setExecutor(executor);\n@@ -142,7 +151,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         if (hasToBeRegistered(execution)) {\n             register(execution);\n         }\n-        task = taskDAO.save(task);\n+        task = (T) taskDAO.save(task);\n \n         status.set(\"Done\");\n \n@@ -185,11 +194,11 @@ protected abstract String doExecute(boolean dryRun, String executor, JobExecutio\n      * @param execution task execution\n      * @return whether to persist or not\n      */\n-    protected boolean hasToBeRegistered(final TaskExec execution) {\n+    protected boolean hasToBeRegistered(final TaskExec<?> execution) {\n         return false;\n     }\n \n-    protected void register(final TaskExec execution) {\n-        taskExecDAO.saveAndAdd(task.getKey(), execution);\n+    protected void register(final TaskExec<?> execution) {\n+        taskExecDAO.saveAndAdd(taskType, task.getKey(), execution);\n     }\n }"},{"sha":"bc0345badae8a21c926d0810705a5fbcd9291e95","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/DefaultJobManager.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -224,6 +224,11 @@ public Map<String, Object> register(\n         }\n \n         Map<String, Object> jobMap = createJobMapForExecutionContext(executor);\n+        jobMap.put(JobManager.TASK_TYPE, task instanceof PullTask\n+                ? TaskType.PULL\n+                : task instanceof PushTask\n+                        ? TaskType.PUSH\n+                        : TaskType.SCHEDULED);\n         jobMap.put(JobManager.TASK_KEY, task.getKey());\n         jobMap.put(TaskJob.DELEGATE_IMPLEMENTATION, jobDelegate.getKey());\n \n@@ -271,7 +276,7 @@ protected void unregisterJob(final String jobName) {\n     }\n \n     @Override\n-    public void unregister(final Task task) {\n+    public void unregister(final Task<?> task) {\n         unregisterJob(JobNamer.getJobKey(task).getName());\n     }\n \n@@ -322,8 +327,8 @@ public void load(final String domain, final DataSource datasource) {\n         AuthContextUtils.callAsAdmin(domain, () -> {\n             // 1. jobs for SchedTasks\n             Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n-            tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));\n-            tasks.addAll(taskDAO.<PushTask>findAll(TaskType.PUSH));\n+            tasks.addAll(taskDAO.<SchedTask>findAll(TaskType.PULL));\n+            tasks.addAll(taskDAO.<SchedTask>findAll(TaskType.PUSH));\n \n             boolean loadException = false;\n             for (Iterator<SchedTask> it = tasks.iterator(); it.hasNext() && !loadException;) {\n@@ -401,8 +406,8 @@ public void unload(final String domain) {\n         AuthContextUtils.callAsAdmin(domain, () -> {\n             // 1. jobs for SchedTasks\n             Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n-            tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));\n-            tasks.addAll(taskDAO.<PushTask>findAll(TaskType.PUSH));\n+            tasks.addAll(taskDAO.<SchedTask>findAll(TaskType.PULL));\n+            tasks.addAll(taskDAO.<SchedTask>findAll(TaskType.PUSH));\n \n             tasks.forEach(task -> {\n                 try {"},{"sha":"b3ae34b472884056a4ea8707795d55eba2d014ad","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredAccessTokenCleanup.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,11 +19,12 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class ExpiredAccessTokenCleanup extends AbstractSchedTaskJobDelegate {\n+public class ExpiredAccessTokenCleanup extends AbstractSchedTaskJobDelegate<SchedTask> {\n \n     @Autowired\n     private AccessTokenDAO accessTokenDAO;"},{"sha":"8506f88db967755482ba3bd068c99a6870fd4708","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredBatchCleanup.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,11 +19,12 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import org.apache.syncope.core.persistence.api.dao.BatchDAO;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class ExpiredBatchCleanup extends AbstractSchedTaskJobDelegate {\n+public class ExpiredBatchCleanup extends AbstractSchedTaskJobDelegate<SchedTask> {\n \n     @Autowired\n     private BatchDAO batchDAO;"},{"sha":"5e137695d7ef71229bf7f66c177a38f0d4cec7e1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/GroupMemberProvisionTaskJobDelegate.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -24,12 +24,14 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ProvisionAction;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n@@ -39,7 +41,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n-public class GroupMemberProvisionTaskJobDelegate extends AbstractSchedTaskJobDelegate {\n+public class GroupMemberProvisionTaskJobDelegate extends AbstractSchedTaskJobDelegate<SchedTask> {\n \n     public static final String ACTION_JOBDETAIL_KEY = \"action\";\n \n@@ -63,13 +65,17 @@ public class GroupMemberProvisionTaskJobDelegate extends AbstractSchedTaskJobDel\n \n     @Transactional\n     @Override\n-    public void execute(final String taskKey, final boolean dryRun, final JobExecutionContext context)\n+    public void execute(\n+            final TaskType taskType,\n+            final String taskKey,\n+            final boolean dryRun,\n+            final JobExecutionContext context)\n             throws JobExecutionException {\n \n         groupKey = context.getMergedJobDataMap().getString(GROUP_KEY_JOBDETAIL_KEY);\n         action = (ProvisionAction) context.getMergedJobDataMap().get(ACTION_JOBDETAIL_KEY);\n \n-        super.execute(taskKey, dryRun, context);\n+        super.execute(taskType, taskKey, dryRun, context);\n     }\n \n     @Override\n@@ -153,7 +159,7 @@ protected String doExecute(final boolean dryRun, final String executor, final Jo\n     }\n \n     @Override\n-    protected boolean hasToBeRegistered(final TaskExec execution) {\n+    protected boolean hasToBeRegistered(final TaskExec<?> execution) {\n         // always record execution result\n         return true;\n     }"},{"sha":"d63901c9a810ece336299a8d2cc71da0faabcbcc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SyncopeSpringBeanJobFactory.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSyncopeSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSyncopeSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSyncopeSpringBeanJobFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import java.util.Optional;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.java.job.report.ReportJob;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n@@ -41,8 +42,11 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n                 Optional.ofNullable(bundle.getJobDetail().getJobDataMap().getString(JobManager.REPORT_KEY)).\n                         ifPresent(((ReportJob) job)::setReportKey);\n             } else if (job instanceof TaskJob) {\n-                Optional.ofNullable(bundle.getJobDetail().getJobDataMap().getString(JobManager.TASK_KEY)).\n-                        ifPresent(((TaskJob) job)::setTaskKey);\n+                TaskType taskType = (TaskType) bundle.getJobDetail().getJobDataMap().get(JobManager.TASK_TYPE);\n+                String taskKey = bundle.getJobDetail().getJobDataMap().getString(JobManager.TASK_KEY);\n+                if (taskType != null && taskKey != null) {\n+                    ((TaskJob) job).setTaskInfo(taskType, taskKey);\n+                }\n             }\n         }\n "},{"sha":"07f3e7873dca7d18f5035f8a30c199d1dd8f7365","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/TaskJob.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.job;\n \n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -54,6 +55,8 @@ public enum Status {\n     @Autowired\n     private DomainHolder domainHolder;\n \n+    private TaskType taskType;\n+\n     /**\n      * Key, set by the caller, for identifying the task to be executed.\n      */\n@@ -66,7 +69,8 @@ public enum Status {\n      *\n      * @param taskKey to be set\n      */\n-    public void setTaskKey(final String taskKey) {\n+    public void setTaskInfo(final TaskType taskType, final String taskKey) {\n+        this.taskType = taskType;\n         this.taskKey = taskKey;\n     }\n \n@@ -92,6 +96,7 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n                         } else {\n                             delegate = ImplementationManager.build(implementation);\n                             delegate.execute(\n+                                    taskType,\n                                     taskKey,\n                                     context.getMergedJobDataMap().getBoolean(DRY_RUN_JOBDETAIL_KEY),\n                                     context);"},{"sha":"baaeb156a6371e1b071b8f1ae48436735b1551a2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/DefaultNotificationJobDelegate.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -93,8 +93,8 @@ public boolean isInterrupted() {\n \n     @Transactional\n     @Override\n-    public TaskExec executeSingle(final NotificationTask task, final String executor) {\n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+    public TaskExec<NotificationTask> executeSingle(final NotificationTask task, final String executor) {\n+        TaskExec<NotificationTask> execution = entityFactory.newTaskExec(TaskType.NOTIFICATION);\n         execution.setTask(task);\n         execution.setStart(OffsetDateTime.now());\n         execution.setExecutor(executor);\n@@ -232,8 +232,8 @@ public void execute(final String executor) throws JobExecutionException {\n         }\n     }\n \n-    protected static boolean hasToBeRegistered(final TaskExec execution) {\n-        NotificationTask task = (NotificationTask) execution.getTask();\n+    protected static boolean hasToBeRegistered(final TaskExec<NotificationTask> execution) {\n+        NotificationTask task = execution.getTask();\n \n         // True if either failed and failures have to be registered, or if ALL\n         // has to be registered.\n@@ -242,7 +242,7 @@ protected static boolean hasToBeRegistered(final TaskExec execution) {\n                 || task.getTraceLevel() == TraceLevel.ALL;\n     }\n \n-    protected void handleRetries(final TaskExec execution) {\n+    protected void handleRetries(final TaskExec<NotificationTask> execution) {\n         if (notificationManager.getMaxRetries() <= 0) {\n             return;\n         }"},{"sha":"610f6f2f09d201c9d7331794c918a7a853b62bcd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/DefaultNotificationManager.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FDefaultNotificationManager.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.AnyMatchDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n@@ -452,8 +453,8 @@ protected String getRecipientEmail(final String recipientAttrName, final User us\n     }\n \n     @Override\n-    public TaskExec storeExec(final TaskExec execution) {\n-        NotificationTask task = taskDAO.find(execution.getTask().getKey());\n+    public TaskExec<NotificationTask> storeExec(final TaskExec<NotificationTask> execution) {\n+        NotificationTask task = taskDAO.find(TaskType.NOTIFICATION, execution.getTask().getKey());\n         task.add(execution);\n         task.setExecuted(true);\n         taskDAO.save(task);\n@@ -462,16 +463,16 @@ public TaskExec storeExec(final TaskExec execution) {\n \n     @Override\n     public void setTaskExecuted(final String taskKey, final boolean executed) {\n-        NotificationTask task = taskDAO.find(taskKey);\n+        NotificationTask task = taskDAO.find(TaskType.NOTIFICATION, taskKey);\n         task.setExecuted(executed);\n         taskDAO.save(task);\n     }\n \n     @Override\n     public long countExecutionsWithStatus(final String taskKey, final String status) {\n-        NotificationTask task = taskDAO.find(taskKey);\n+        NotificationTask task = taskDAO.find(TaskType.NOTIFICATION, taskKey);\n         long count = 0;\n-        for (TaskExec taskExec : task.getExecs()) {\n+        for (TaskExec<NotificationTask> taskExec : task.getExecs()) {\n             if (status == null) {\n                 if (taskExec.getStatus() == null) {\n                     count++;"},{"sha":"5ae6d7dfde78492d6a26ebdaae13a08161520c97","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -17,6 +17,7 @@\n  * under the License.\n  */\n package org.apache.syncope.core.provisioning.java.propagation;\n+\n import java.time.OffsetDateTime;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -38,6 +39,7 @@\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.ExecStatus;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.PlainAttrValidationManager;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -457,15 +459,15 @@ protected Optional<RetryTemplate> retryTemplate(final ExternalResource resource)\n     }\n \n     @Override\n-    public TaskExec execute(\n+    public TaskExec<PropagationTask> execute(\n             final PropagationTaskInfo taskInfo,\n             final PropagationReporter reporter,\n             final String executor) {\n \n         return retryTemplate(taskInfo.getResource()).map(rt -> rt.execute(context -> {\n             LOG.debug(\"#{} Propagation attempt\", context.getRetryCount());\n \n-            TaskExec exec = doExecute(taskInfo, reporter, executor);\n+            TaskExec<PropagationTask> exec = doExecute(taskInfo, reporter, executor);\n             if (context.getRetryCount() < taskInfo.getResource().getPropagationPolicy().getMaxAttempts() - 1\n                     && !ExecStatus.SUCCESS.name().equals(exec.getStatus())) {\n \n@@ -481,7 +483,7 @@ protected boolean isFetchRemoteObj(final PropagationTaskInfo taskInfo) {\n                 orElse(true);\n     }\n \n-    protected TaskExec doExecute(\n+    protected TaskExec<PropagationTask> doExecute(\n             final PropagationTaskInfo taskInfo,\n             final PropagationReporter reporter,\n             final String executor) {\n@@ -494,7 +496,7 @@ protected TaskExec doExecute(\n \n         OffsetDateTime start = OffsetDateTime.now();\n \n-        TaskExec exec = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<PropagationTask> exec = entityFactory.newTaskExec(TaskType.PROPAGATION);\n         exec.setStatus(ExecStatus.CREATED.name());\n         exec.setExecutor(executor);\n \n@@ -688,13 +690,13 @@ protected TaskExec doExecute(\n         return exec;\n     }\n \n-    protected TaskExec rejected(\n+    protected TaskExec<PropagationTask> rejected(\n             final PropagationTaskInfo taskInfo,\n             final String rejectReason,\n             final PropagationReporter reporter,\n             final String executor) {\n \n-        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        TaskExec<PropagationTask> execution = entityFactory.newTaskExec(TaskType.PROPAGATION);\n         execution.setStatus(ExecStatus.NOT_ATTEMPTED.name());\n         execution.setExecutor(executor);\n         execution.setStart(OffsetDateTime.now());\n@@ -729,7 +731,7 @@ protected TaskExec rejected(\n      * @return true if execution has to be store, false otherwise\n      */\n     protected Optional<PropagationTask> hasToBeregistered(\n-            final PropagationTaskInfo taskInfo, final TaskExec execution) {\n+            final PropagationTaskInfo taskInfo, final TaskExec<PropagationTask> execution) {\n \n         boolean result;\n "},{"sha":"88a25ef0e2c5358136fbba0b8cb43cdd950b1309","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collection;\n import java.util.stream.Collectors;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskCallable;\n@@ -73,11 +74,11 @@ public void setExecutor(final String executor) {\n     }\n \n     @Override\n-    public TaskExec call() throws Exception {\n+    public TaskExec<PropagationTask> call() throws Exception {\n         return AuthContextUtils.callAs(domain, executor, authorities, () -> {\n             LOG.debug(\"Execution started for {}\", taskInfo);\n \n-            TaskExec execution = taskExecutor.execute(taskInfo, reporter, executor);\n+            TaskExec<PropagationTask> execution = taskExecutor.execute(taskInfo, reporter, executor);\n \n             LOG.debug(\"Execution completed for {}, {}\", taskInfo, execution);\n "},{"sha":"36ecf135da3027cf6e65b49113cddbbd9ae41ba0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Exec;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.task.TaskUtilsFactory;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n@@ -146,7 +147,7 @@ public PropagationReporter execute(\n \n             // first process priority resources sequentially and fail as soon as any propagation failure is reported\n             prioritizedTasks.forEach(taskInfo -> {\n-                TaskExec exec = null;\n+                TaskExec<PropagationTask> exec = null;\n                 ExecStatus execStatus;\n                 String errorMessage = null;\n                 try {\n@@ -166,8 +167,9 @@ public PropagationReporter execute(\n \n             // then process non-priority resources concurrently...\n             if (!concurrentTasks.isEmpty()) {\n-                CompletionService<TaskExec> completionService = new ExecutorCompletionService<>(taskExecutor);\n-                List<Future<TaskExec>> futures = new ArrayList<>();\n+                CompletionService<TaskExec<PropagationTask>> completionService =\n+                        new ExecutorCompletionService<>(taskExecutor);\n+                List<Future<TaskExec<PropagationTask>>> futures = new ArrayList<>();\n \n                 concurrentTasks.forEach(taskInfo -> {\n                     try {"},{"sha":"0227097ab2144a68ba5710f54c2aac82d9f27980","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -45,7 +45,8 @@\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public abstract class AbstractProvisioningJobDelegate<T extends ProvisioningTask> extends AbstractSchedTaskJobDelegate {\n+public abstract class AbstractProvisioningJobDelegate<T extends ProvisioningTask<T>>\n+        extends AbstractSchedTaskJobDelegate<T> {\n \n     private static final String USER = \"USER\";\n \n@@ -705,13 +706,11 @@ protected abstract String doExecuteProvisioning(\n             throws JobExecutionException;\n \n     @Override\n-    protected boolean hasToBeRegistered(final TaskExec execution) {\n-        final ProvisioningTask provTask = (ProvisioningTask) task;\n-\n+    protected boolean hasToBeRegistered(final TaskExec<?> execution) {\n         // True if either failed and failures have to be registered, or if ALL has to be registered.\n         return (TaskJob.Status.valueOf(execution.getStatus()) == TaskJob.Status.FAILURE\n-                && provTask.getResource().getProvisioningTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal())\n-                || provTask.getResource().getProvisioningTraceLevel().ordinal() >= TraceLevel.SUMMARY.ordinal();\n+                && task.getResource().getProvisioningTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal())\n+                || task.getResource().getProvisioningTraceLevel().ordinal() >= TraceLevel.SUMMARY.ordinal();\n     }\n \n     @SuppressWarnings(\"unchecked\")"},{"sha":"425d54b5858858201ca4594a2d99126e3b27e9ac","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractRealmResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -33,7 +33,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public abstract class AbstractRealmResultHandler<T extends ProvisioningTask, A extends ProvisioningActions>\n+public abstract class AbstractRealmResultHandler<T extends ProvisioningTask<?>, A extends ProvisioningActions>\n         implements SyncopeResultHandler<T, A> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeResultHandler.class);"},{"sha":"78d2a96044ed0765b9e2bb5db10477bc78aead96","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -41,7 +41,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public abstract class AbstractSyncopeResultHandler<T extends ProvisioningTask, A extends ProvisioningActions>\n+public abstract class AbstractSyncopeResultHandler<T extends ProvisioningTask<?>, A extends ProvisioningActions>\n         implements SyncopeResultHandler<T, A> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeResultHandler.class);"},{"sha":"915edfbd49e46aa1203e801dddffa1e1f84501ec","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamPullJobDelegate.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -66,9 +65,6 @@ public class StreamPullJobDelegate extends PullJobDelegate implements SyncopeStr\n     @Autowired\n     private RealmDAO realmDAO;\n \n-    @Autowired\n-    private PlainSchemaDAO plainSchemaDAO;\n-\n     private PullPolicy pullPolicy(\n             final AnyType anyType,\n             final ConflictResolutionAction conflictResolutionAction,"},{"sha":"87ef0b5de862c8997de952ae7b0033441eb5fb43","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPMembershipPullActionsTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActionsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActionsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActionsTest.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -104,7 +104,7 @@ public class LDAPMembershipPullActionsTest extends AbstractTest {\n     private Map<String, Set<String>> membershipsAfter;\n \n     @Mock\n-    private ProvisioningTask provisioningTask;\n+    private ProvisioningTask<?> provisioningTask;\n \n     @Mock\n     private ExternalResource externalResource;\n@@ -150,7 +150,7 @@ public void initTest() {\n         connConfProperties = new HashSet<>();\n         connConfProperties.add(connConfProperty);\n \n-        lenient().when(profile.getTask()).thenReturn(provisioningTask);\n+        lenient().when(profile.getTask()).thenAnswer(ic -> provisioningTask);\n         lenient().when(provisioningTask.getResource()).thenReturn(externalResource);\n         lenient().when(anyTypeDAO.findUser()).thenAnswer(ic -> {\n             AnyType userAnyType = mock(AnyType.class);"},{"sha":"40b0133a96ec260de557e9de56c3728fb3d4807b","filename":"ext/elasticsearch/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ElasticsearchReindex.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.ext.elasticsearch.client.ElasticsearchIndexManager;\n@@ -41,7 +42,7 @@\n /**\n  * Remove and rebuild all Elasticsearch indexes with information from existing users, groups and any objects.\n  */\n-public class ElasticsearchReindex extends AbstractSchedTaskJobDelegate {\n+public class ElasticsearchReindex extends AbstractSchedTaskJobDelegate<SchedTask> {\n \n     @Autowired\n     protected ElasticsearchClient client;\n@@ -166,7 +167,7 @@ protected String doExecute(final boolean dryRun, final String executor, final Jo\n     }\n \n     @Override\n-    protected boolean hasToBeRegistered(final TaskExec execution) {\n+    protected boolean hasToBeRegistered(final TaskExec<?> execution) {\n         return true;\n     }\n }"},{"sha":"ac0492df9f1e2c1fa280e540a6f01a1d60c54a3e","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -66,8 +66,6 @@ public UserRequestDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef, true);\n         setFooterVisibility(false);\n \n-        restClient = new UserRequestRestClient();\n-\n         initResultTable();\n \n         IndicatingAjaxButton batchLink = new IndicatingAjaxButton(\"batchLink\", resultTable.group.getForm()) {\n@@ -82,7 +80,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n                     UserRequestService service = batch.getService(UserRequestService.class);\n                     items.forEach(item -> service.cancelRequest(item.getExecutionId(), null));\n \n-                    Map<String, String> results = restClient.batch(batch);\n+                    Map<String, String> results = UserRequestRestClient.batch(batch);\n \n                     resultTable.batchModal.header(new ResourceModel(\"batch\"));\n                     resultTable.batchModal.changeCloseButtonLabel(getString(\"cancel\", null, \"Cancel\"), target);"},{"sha":"9cffdeee430193873a679b73a6ed753e40aad802","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSampleJobDelegate.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.fit.core.reference;\n \n import java.util.Date;\n+import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.java.job.AbstractSchedTaskJobDelegate;\n import org.quartz.JobExecutionContext;\n@@ -27,7 +28,7 @@\n /**\n  * Sample implementation for executing a scheduled task.\n  */\n-public class TestSampleJobDelegate extends AbstractSchedTaskJobDelegate {\n+public class TestSampleJobDelegate extends AbstractSchedTaskJobDelegate<SchedTask> {\n \n     @Override\n     protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n@@ -61,7 +62,7 @@ public boolean isInterrupted() {\n     }\n \n     @Override\n-    protected boolean hasToBeRegistered(final TaskExec execution) {\n+    protected boolean hasToBeRegistered(final TaskExec<?> execution) {\n         return true;\n     }\n }"},{"sha":"9feca897cdb858234124f9c2eba3563db064ea94","filename":"sra/src/test/java/org/apache/syncope/sra/filters/BodyPropertyAddingGatewayFilterFactory.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10822a3af3e3d664c31c8b1c1569dbecfe9323d6/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java?ref=10822a3af3e3d664c31c8b1c1569dbecfe9323d6","patch":"@@ -126,11 +126,11 @@ public Mono<Void> writeWith(final Publisher<? extends DataBuffer> body) {\n                         }\n \n                         if (compressed) {\n-                            try (ByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);  \n-                                 GZIPOutputStream gzipos = new GZIPOutputStream(baos)) {\n+                            try (ByteArrayOutputStream baos = new ByteArrayOutputStream(output.length)) {\n+                                try (GZIPOutputStream gzipos = new GZIPOutputStream(baos)) {\n+                                    gzipos.write(output);\n+                                }\n \n-                                gzipos.write(output);\n-                                gzipos.close();\n                                 output = baos.toByteArray();\n                             } catch (IOException e) {\n                                 LOG.error(\"While GZIP-encoding output\", e);"}]}