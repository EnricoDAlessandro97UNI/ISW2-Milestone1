{"sha":"39b760fa11d662951ddbdf78e5d9836e7fe3cfb0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM5Yjc2MGZhMTFkNjYyOTUxZGRiZGY3OGU1ZDk4MzZlN2ZlM2NmYjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-17T14:09:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-17T14:18:51Z"},"message":"[SYNCOPE-1425] Erasing all values but string, which is replaced with transformation result","tree":{"sha":"5b66a86bb6d7390d21be23f1bbb54c5fc067cc42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5b66a86bb6d7390d21be23f1bbb54c5fc067cc42"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a97207906a16f50d772fbf80cf6b02b735ece0bf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a97207906a16f50d772fbf80cf6b02b735ece0bf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a97207906a16f50d772fbf80cf6b02b735ece0bf"}],"stats":{"total":28,"additions":18,"deletions":10},"files":[{"sha":"d7cca45ba6bed74d77583c87295490fb8c1680c2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLItemTransformerImpl.java","status":"modified","additions":18,"deletions":10,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/39b760fa11d662951ddbdf78e5d9836e7fe3cfb0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java?ref=39b760fa11d662951ddbdf78e5d9836e7fe3cfb0","patch":"@@ -57,23 +57,31 @@ public List<PlainAttrValue> beforePropagation(\n \n         if (StringUtils.isNotBlank(propagationJEXL) && values != null) {\n             values.forEach(value -> {\n-                JexlContext jexlContext = new MapContext();\n-                if (entity != null) {\n-                    JexlUtils.addFieldsToContext(entity, jexlContext);\n-                    if (entity instanceof Any) {\n-                        JexlUtils.addPlainAttrsToContext(((Any<?>) entity).getPlainAttrs(), jexlContext);\n-                        JexlUtils.addDerAttrsToContext(((Any<?>) entity), jexlContext);\n+                Object originalValue = value.getValue();\n+                if (originalValue != null) {\n+                    JexlContext jexlContext = new MapContext();\n+                    if (entity != null) {\n+                        JexlUtils.addFieldsToContext(entity, jexlContext);\n+                        if (entity instanceof Any) {\n+                            JexlUtils.addPlainAttrsToContext(((Any<?>) entity).getPlainAttrs(), jexlContext);\n+                            JexlUtils.addDerAttrsToContext(((Any<?>) entity), jexlContext);\n+                        }\n                     }\n+                    jexlContext.set(\"value\", originalValue.toString());\n+\n+                    value.setBinaryValue(null);\n+                    value.setBooleanValue(null);\n+                    value.setDateValue(null);\n+                    value.setDoubleValue(null);\n+                    value.setLongValue(null);\n+                    value.setStringValue(JexlUtils.evaluate(propagationJEXL, jexlContext));\n                 }\n-                jexlContext.set(\"value\", value.getValueAsString());\n-\n-                value.setStringValue(JexlUtils.evaluate(propagationJEXL, jexlContext));\n             });\n \n             return values;\n         }\n \n-        return values;\n+        return JEXLItemTransformer.super.beforePropagation(item, entity, values);\n     }\n \n     @Override"}]}