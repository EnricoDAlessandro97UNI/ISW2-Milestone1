{"sha":"a02779a2ccf4ee26953468713a1d2e3722883840","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEwMjc3OWEyY2NmNGVlMjY5NTM0Njg3MTNhMWQyZTM3MjI4ODM4NDA=","commit":{"author":{"name":"lorenzo","email":"lorenzo.dicola@tirasa.net","date":"2017-08-25T11:07:37Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2017-08-25T12:41:52Z"},"message":"SYNCOPE-1196 add a specific form for binary and encrypted paramiters type and set a custom label in paramiters list - This closes #62","tree":{"sha":"6cb9cb97d73ff6eb54d14ca0e941b330cd0103ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6cb9cb97d73ff6eb54d14ca0e941b330cd0103ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a02779a2ccf4ee26953468713a1d2e3722883840","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a02779a2ccf4ee26953468713a1d2e3722883840","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a02779a2ccf4ee26953468713a1d2e3722883840","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a02779a2ccf4ee26953468713a1d2e3722883840/comments","author":{"login":"loredicola","id":12647176,"node_id":"MDQ6VXNlcjEyNjQ3MTc2","avatar_url":"https://avatars.githubusercontent.com/u/12647176?v=4","gravatar_id":"","url":"https://api.github.com/users/loredicola","html_url":"https://github.com/loredicola","followers_url":"https://api.github.com/users/loredicola/followers","following_url":"https://api.github.com/users/loredicola/following{/other_user}","gists_url":"https://api.github.com/users/loredicola/gists{/gist_id}","starred_url":"https://api.github.com/users/loredicola/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loredicola/subscriptions","organizations_url":"https://api.github.com/users/loredicola/orgs","repos_url":"https://api.github.com/users/loredicola/repos","events_url":"https://api.github.com/users/loredicola/events{/privacy}","received_events_url":"https://api.github.com/users/loredicola/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"126a323f5c99bd2f62965492188cff84847fd526","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/126a323f5c99bd2f62965492188cff84847fd526","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/126a323f5c99bd2f62965492188cff84847fd526"}],"stats":{"total":146,"additions":126,"deletions":20},"files":[{"sha":"7d6847cfd5ff1ddab5da0e17a99ebab7469e2574","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":23,"deletions":10,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -19,14 +19,15 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.Arrays;\n-import java.util.Date;\n import java.util.List;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -47,15 +48,17 @@ public class ParametersCreateWizardAttrStep extends WizardStep {\n \n     private static final long serialVersionUID = -7843275202297616553L;\n \n+    private final AjaxTextFieldPanel schema;\n+\n     public ParametersCreateWizardAttrStep(final ParametersCreateWizardPanel.ParametersForm modelObject) {\n         this.setOutputMarkupId(true);\n \n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n         add(content);\n \n-        final AjaxTextFieldPanel schema = new AjaxTextFieldPanel(\n-                \"schema\", getString(\"schema\"), new PropertyModel<String>(modelObject.getAttrTO(), \"schema\"));\n+        schema = new AjaxTextFieldPanel(\n+                \"schema\", getString(\"schema\"), new PropertyModel<>(modelObject.getAttrTO(), \"schema\"));\n         schema.setRequired(true);\n         content.add(schema);\n \n@@ -87,7 +90,6 @@ protected void populateItem(final ListItem<PlainSchemaTO> item) {\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSchemaTO plainSchemaTO) {\n-\n         final String valueHeaderName = getString(\"values\");\n \n         final FieldPanel panel;\n@@ -99,14 +101,15 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSch\n \n                 if (dataPattern.contains(\"H\")) {\n                     panel = new AjaxDateTimeFieldPanel(\n-                            id, valueHeaderName, new Model<Date>(), dataPattern);\n+                            id, valueHeaderName, new Model<>(), dataPattern);\n                 } else {\n                     panel = new AjaxDateFieldPanel(\n-                            \"panel\", valueHeaderName, new Model<Date>(), dataPattern);\n+                            \"panel\", valueHeaderName, new Model<>(), dataPattern);\n                 }\n                 break;\n+\n             case Boolean:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n+                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(Arrays.asList(\"true\", \"false\"));\n \n                 if (!attrTO.getValues().isEmpty()) {\n@@ -133,8 +136,9 @@ public String getObject(\n                 }\n                 ((AjaxDropDownChoicePanel<String>) panel).setNullValid(false);\n                 break;\n+\n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n+                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(plainSchemaTO));\n \n                 if (!attrTO.getValues().isEmpty()) {\n@@ -173,12 +177,21 @@ public String getObject(\n                         .build(id, valueHeaderName, Double.class, new Model<Double>());\n                 break;\n \n+            case Binary:\n+                panel = new BinaryFieldPanel(id, valueHeaderName, new Model<>(), plainSchemaTO.getMimeType(),\n+                        schema.getModelObject());\n+                break;\n+\n+            case Encrypted:\n+                panel = new EncryptedFieldPanel(id, valueHeaderName, new Model<>(), true);\n+                break;\n+\n             default:\n-                panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<String>(), false);\n+                panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<>(), false);\n         }\n         if (plainSchemaTO.isMultivalue()) {\n             return new MultiFieldPanel.Builder<>(\n-                    new PropertyModel<List<String>>(attrTO, \"values\")).build(id, valueHeaderName, panel);\n+                    new PropertyModel<>(attrTO, \"values\")).build(id, valueHeaderName, panel);\n         } else {\n             panel.setNewModel(attrTO.getValues());\n         }"},{"sha":"a0b0d7c0ef0a986808a3263a26ab8ca8b20b9dcb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.java","status":"modified","additions":53,"deletions":2,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -21,14 +21,18 @@\n import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.commons.PropertyList;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -39,6 +43,9 @@ public class ParametersCreateWizardSchemaStep extends WizardStep {\n \n     private static final long serialVersionUID = -7843275202297616553L;\n \n+    private static final MIMETypesLoader MIME_TYPES_LOADER = (MIMETypesLoader) SyncopeConsoleApplication.get().\n+            getServletContext().getAttribute(ConsoleInitializer.MIMETYPES_LOADER);\n+\n     public ParametersCreateWizardSchemaStep(final ParametersCreateWizardPanel.ParametersForm modelObject) {\n         modelObject.getPlainSchemaTO().setMandatoryCondition(\"false\");\n \n@@ -47,7 +54,7 @@ public ParametersCreateWizardSchemaStep(final ParametersCreateWizardPanel.Parame\n         content.setOutputMarkupId(true);\n         add(content);\n         final AjaxDropDownChoicePanel<AttrSchemaType> type = new AjaxDropDownChoicePanel<>(\n-                \"type\", getString(\"type\"), new PropertyModel<AttrSchemaType>(modelObject.getPlainSchemaTO(), \"type\"));\n+                \"type\", getString(\"type\"), new PropertyModel<>(modelObject.getPlainSchemaTO(), \"type\"));\n         type.setChoices(Arrays.asList(AttrSchemaType.values()));\n         content.add(type);\n \n@@ -91,6 +98,28 @@ protected String newModelObject() {\n         panel.setVisible(false);\n         content.add(panel);\n \n+        //binary\n+        final AjaxTextFieldPanel mimeType = new AjaxTextFieldPanel(\"mimeType\",\n+                \"MIME-Type\", new PropertyModel<>(modelObject.getPlainSchemaTO(), \"mimeType\"));\n+        mimeType.setVisible(false);\n+        content.add(mimeType);\n+\n+        //encrypted\n+        final AjaxTextFieldPanel secretKey = new AjaxTextFieldPanel(\"secretKey\",\n+                \"Secret-key\", new PropertyModel<>(modelObject.getPlainSchemaTO(), \"secretKey\"));\n+\n+        final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm = new AjaxDropDownChoicePanel<>(\n+                \"cipherAlgorithm\", \"Cipher-algorithm\",\n+                new PropertyModel<>(modelObject.getPlainSchemaTO(), \"cipherAlgorithm\"));\n+\n+        cipherAlgorithm.setChoices(Arrays.asList(CipherAlgorithm.values()));\n+        secretKey.setVisible(false);\n+        cipherAlgorithm.setVisible(false);\n+        content.add(secretKey);\n+        content.add(cipherAlgorithm);\n+\n+        showHide(type, secretKey, cipherAlgorithm, mimeType);\n+\n         type.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n@@ -106,11 +135,33 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     content.add(panel);\n                     target.add(content);\n                 }\n+                ParametersCreateWizardSchemaStep.this.showHide(type, secretKey, cipherAlgorithm, mimeType);\n             }\n         });\n \n         final AjaxCheckBoxPanel multiValue = new AjaxCheckBoxPanel(\"panel\", getString(\"multivalue\"),\n-                new PropertyModel<Boolean>(modelObject.getPlainSchemaTO(), \"multivalue\"), false);\n+                new PropertyModel<>(modelObject.getPlainSchemaTO(), \"multivalue\"), false);\n         content.add(multiValue);\n     }\n+\n+    private void showHide(\n+            final AjaxDropDownChoicePanel<AttrSchemaType> type,\n+            final AjaxTextFieldPanel secretKey,\n+            final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm,\n+            final AjaxTextFieldPanel mimeType) {\n+\n+        final int typeOrdinal = Integer.parseInt(type.getField().getValue());\n+        if (AttrSchemaType.Encrypted.ordinal() == typeOrdinal) {\n+            mimeType.setVisible(false);\n+            secretKey.setVisible(true);\n+            secretKey.addRequiredLabel();\n+            cipherAlgorithm.setVisible(true);\n+            cipherAlgorithm.addRequiredLabel();\n+        } else if (AttrSchemaType.Binary.ordinal() == typeOrdinal) {\n+            secretKey.setVisible(false);\n+            cipherAlgorithm.setVisible(false);\n+            mimeType.setVisible(true);\n+            mimeType.setChoices(MIME_TYPES_LOADER.getMimeTypes());\n+        }\n+    }\n }"},{"sha":"187b172b2c2fca3e6df810ca256b079970a3292a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.Arrays;\n-import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n@@ -29,6 +28,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -50,6 +51,8 @@ public class ParametersDetailsPanel extends Panel {\n \n     private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n+    private final AjaxTextFieldPanel schema;\n+\n     public ParametersDetailsPanel(final String id, final AttrTO attrTO) {\n         super(id);\n \n@@ -65,8 +68,8 @@ public ParametersDetailsPanel(final String id, final AttrTO attrTO) {\n         form.setModel(new CompoundPropertyModel<>(attrTO));\n         container.add(form);\n \n-        final AjaxTextFieldPanel schema = new AjaxTextFieldPanel(\n-                \"schema\", getString(\"schema\"), new PropertyModel<String>(attrTO, \"schema\"));\n+        schema = new AjaxTextFieldPanel(\n+                \"schema\", getString(\"schema\"), new PropertyModel<>(attrTO, \"schema\"));\n         schema.setEnabled(false);\n         form.add(schema);\n \n@@ -87,9 +90,9 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO) {\n                         : schemaTO.getConversionPattern();\n \n                 if (StringUtils.containsIgnoreCase(datePattern, \"H\")) {\n-                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), datePattern);\n+                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), datePattern);\n                 } else {\n-                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), datePattern);\n+                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), datePattern);\n                 }\n                 break;\n             case Boolean:\n@@ -160,8 +163,17 @@ public String getObject(\n                         .build(id, valueHeaderName, Double.class, new Model<Double>());\n                 break;\n \n+            case Binary:\n+                panel = new BinaryFieldPanel(id, valueHeaderName, new Model<>(), schemaTO.getMimeType(),\n+                        schema.getModelObject());\n+                break;\n+\n+            case Encrypted:\n+                panel = new EncryptedFieldPanel(id, valueHeaderName, new Model<>(), true);\n+                break;\n+\n             default:\n-                panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<String>(), false);\n+                panel = new AjaxTextFieldPanel(id, valueHeaderName, new Model<>(), false);\n         }\n         if (schemaTO.isMultivalue()) {\n             return new MultiFieldPanel.Builder<>("},{"sha":"ea927a5fc0fe8e4de6c1bc8b28a158d0dfd0dd2d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -39,14 +39,20 @@\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -134,8 +140,25 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n     @Override\n     protected List<IColumn<AttrTO, String>> getColumns() {\n         final List<IColumn<AttrTO, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"schema\"), \"schema\"));\n-        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"values\"), \"values\"));\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n+        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"values\"), \"values\") {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<AttrTO>> item,\n+                    final String componentId, final IModel<AttrTO> rowModel) {\n+                PlainSchemaTO modelSchemaTO = (PlainSchemaTO) rowModel.getObject().getSchemaInfo();\n+                AttrSchemaType type = modelSchemaTO.getType();\n+                if (type == AttrSchemaType.Binary || type == AttrSchemaType.Encrypted) {\n+                    item.add(new Label(componentId, type.name()).\n+                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n+                } else {\n+                    super.populateItem(item, componentId, rowModel);\n+                }\n+            }\n+\n+        });\n         return columns;\n     }\n "},{"sha":"b49ceca2bb2e310c0d3cbf6caeb47b79c03b6bd5","filename":"client/console/src/main/resources/MIMETypes.json","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMIMETypes.json?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -5,6 +5,10 @@\n   {\n     \"name\": \"application/arj\"\n   },\n+  {\n+    \"name\": \"application/json\",\n+    \"extension\": \"json\"\n+  },\n   {\n     \"name\": \"application/base64\"\n   },"},{"sha":"1f25c5779090a3d27cdc16632e42db3e684c09be","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a02779a2ccf4ee26953468713a1d2e3722883840/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.html?ref=a02779a2ccf4ee26953468713a1d2e3722883840","patch":"@@ -22,6 +22,9 @@\n       <span wicket:id=\"type\">[type]</span>\n       <span wicket:id=\"values\">[values]</span>\n       <span wicket:id=\"panel\">[panel]</span>\n+      <span wicket:id=\"mimeType\">[mimeType]</span>\n+      <span wicket:id=\"secretKey\">[secretKey]</span>\n+      <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n     </div>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"}]}