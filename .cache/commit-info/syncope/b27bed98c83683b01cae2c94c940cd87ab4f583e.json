{"sha":"b27bed98c83683b01cae2c94c940cd87ab4f583e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyN2JlZDk4YzgzNjgzYjAxY2FlMmM5NGM5NDBjZDg3YWI0ZjU4M2U=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-07T13:49:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-07T13:49:58Z"},"message":"Cleaning up utility methods to find resource keys","tree":{"sha":"d441b9e0522ae772d85dfbbe8339a9d6526e1fe0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d441b9e0522ae772d85dfbbe8339a9d6526e1fe0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b27bed98c83683b01cae2c94c940cd87ab4f583e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b27bed98c83683b01cae2c94c940cd87ab4f583e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b27bed98c83683b01cae2c94c940cd87ab4f583e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b27bed98c83683b01cae2c94c940cd87ab4f583e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e1084a3d97d54d2f14ed4e71236c0710214acb30","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1084a3d97d54d2f14ed4e71236c0710214acb30","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e1084a3d97d54d2f14ed4e71236c0710214acb30"}],"stats":{"total":131,"additions":49,"deletions":82},"files":[{"sha":"60f865f96954c1258b7998880c3dddf3ad316722","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.dao;\n \n+import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n@@ -84,4 +85,6 @@\n     void delete(A any);\n \n     List<String> findDynRealms(String key);\n+\n+    Collection<String> findAllResourceKeys(String key);\n }"},{"sha":"6368da554b4288417ddeea75a3379a4a87f05c89","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -53,5 +53,4 @@ public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n     Collection<ExternalResource> findAllResources(AnyObject anyObject);\n \n-    Collection<String> findAllResourceKeys(String key);\n }"},{"sha":"92ba692ff2f1fa7e333e650480c80bee8e191f3b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -56,7 +56,5 @@ public interface UserDAO extends AnyDAO<User> {\n \n     Collection<ExternalResource> findAllResources(User user);\n \n-    Collection<String> findAllResourceKeys(String key);\n-\n     Pair<Boolean, Boolean> enforcePolicies(User user);\n }"},{"sha":"9896e73ce17f845d118fc4dc747f38333fb5b0f1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Any.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -49,8 +49,6 @@\n \n     boolean add(ExternalResource resource);\n \n-    List<String> getResourceKeys();\n-\n     List<? extends ExternalResource> getResources();\n \n     boolean add(AnyTypeClass auxClass);"},{"sha":"0bc491ae521492f957986b7be0caf3980e2c02f7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.jpa.dao;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n@@ -68,6 +69,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership;\n import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n import org.apache.syncope.core.provisioning.api.event.AnyDeletedEvent;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.aop.support.AopUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -536,4 +538,9 @@ public void removeDynMemberships(final User user) {\n         }\n     }\n \n+    @Transactional(readOnly = true)\n+    @Override\n+    public Collection<String> findAllResourceKeys(final String key) {\n+        return CollectionUtils.collect(authFind(key).getResources(), EntityUtils.keyTransformer());\n+    }\n }"},{"sha":"e77fb7d6fe2521986c01989b5e04ead78dd5318f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAny.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAny.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -18,18 +18,13 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import javax.persistence.Column;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.jpa.validation.entity.AnyCheck;\n \n @AnyCheck\n@@ -76,10 +71,4 @@ public String getStatus() {\n     public void setStatus(final String status) {\n         this.status = status;\n     }\n-\n-    @Override\n-    public List<String> getResourceKeys() {\n-        return CollectionUtils.collect(\n-                getResources(), EntityUtils.<ExternalResource>keyTransformer(), new ArrayList<String>());\n-    }\n }"},{"sha":"d592394422490d2aa67113d2842f5e1ff1763cbb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAConf.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -85,11 +85,6 @@ public boolean add(final ExternalResource resource) {\n         return false;\n     }\n \n-    @Override\n-    public List<String> getResourceKeys() {\n-        return Collections.emptyList();\n-    }\n-\n     @Override\n     public List<? extends ExternalResource> getResources() {\n         return Collections.emptyList();"},{"sha":"31a283374e7837d134fe8c7b3f8c5405f27364b0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -220,7 +220,7 @@ public List<PropagationStatus> deprovision(\n                 AnyTypeKind.GROUP,\n                 key,\n                 propByRes,\n-                CollectionUtils.removeAll(groupDAO.authFind(key).getResourceKeys(), resources));\n+                CollectionUtils.removeAll(groupDAO.findAllResourceKeys(key), resources));\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n         return propagationReporter.getStatuses();"},{"sha":"501ebf4af9b4ea0bcbd24a8f6d9797390727af6a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -271,8 +271,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        Collection<String> currentResources = CollectionUtils.collect(\n-                anyObjectDAO.findAllResources(anyObject), EntityUtils.keyTransformer());\n+        Collection<String> currentResources = anyObjectDAO.findAllResourceKeys(anyObject.getKey());\n \n         // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(anyObject);\n@@ -282,7 +281,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n \n         // name\n         if (anyObjectPatch.getName() != null && StringUtils.isNotBlank(anyObjectPatch.getName().getValue())) {\n-            propByRes.addAll(ResourceOperation.UPDATE, anyObject.getResourceKeys());\n+            propByRes.addAll(ResourceOperation.UPDATE, anyObjectDAO.findAllResourceKeys(anyObject.getKey()));\n \n             anyObject.setName(anyObjectPatch.getName().getValue());\n         }\n@@ -311,7 +310,8 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n                         anyObject.getRelationships().remove(relationship);\n                         relationship.setLeftEnd(null);\n \n-                        toBeDeprovisioned.addAll(relationship.getRightEnd().getResourceKeys());\n+                        toBeDeprovisioned.addAll(\n+                                anyObjectDAO.findAllResourceKeys(relationship.getRightEnd().getKey()));\n                     }\n \n                     if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n@@ -336,7 +336,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n \n                                 anyObject.add(relationship);\n \n-                                toBeProvisioned.addAll(otherEnd.getResourceKeys());\n+                                toBeProvisioned.addAll(anyObjectDAO.findAllResourceKeys(otherEnd.getKey()));\n                             } else {\n                                 LOG.error(\"{} cannot be assigned to {}\", otherEnd, anyObject);\n \n@@ -370,7 +370,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n                         attr.setOwner(null);\n                     }\n \n-                    toBeDeprovisioned.addAll(membership.getRightEnd().getResourceKeys());\n+                    toBeDeprovisioned.addAll(groupDAO.findAllResourceKeys(membership.getRightEnd().getKey()));\n                 }\n \n                 if (membPatch.getOperation() == PatchOperation.ADD_REPLACE) {\n@@ -412,7 +412,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n                             scce.addException(invalidValues);\n                         }\n \n-                        toBeProvisioned.addAll(group.getResourceKeys());\n+                        toBeProvisioned.addAll(groupDAO.findAllResourceKeys(group.getKey()));\n                     } else {\n                         LOG.error(\"{} cannot be assigned to {}\", group, anyObject);\n "},{"sha":"467874d05af2e3b95fef6170b0e01ff6d559038c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -199,7 +199,7 @@ public PropagationByResource update(final Group toBeUpdated, final GroupPatch gr\n \n         // name\n         if (groupPatch.getName() != null && StringUtils.isNotBlank(groupPatch.getName().getValue())) {\n-            propByRes.addAll(ResourceOperation.UPDATE, group.getResourceKeys());\n+            propByRes.addAll(ResourceOperation.UPDATE, groupDAO.findAllResourceKeys(group.getKey()));\n \n             group.setName(groupPatch.getName().getValue());\n         }"},{"sha":"3721371cd5d91044b5ec48718018386e104ba6e9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -315,8 +315,7 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        Collection<String> currentResources = CollectionUtils.collect(\n-                userDAO.findAllResources(user), EntityUtils.keyTransformer());\n+        Collection<String> currentResources = userDAO.findAllResourceKeys(user.getKey());\n \n         // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(user);\n@@ -413,7 +412,8 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n                         user.getRelationships().remove(relationship);\n                         relationship.setLeftEnd(null);\n \n-                        toBeDeprovisioned.addAll(relationship.getRightEnd().getResourceKeys());\n+                        toBeDeprovisioned.addAll(\n+                                anyObjectDAO.findAllResourceKeys(relationship.getRightEnd().getKey()));\n                     }\n \n                     if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n@@ -428,7 +428,7 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n \n                             user.add(relationship);\n \n-                            toBeProvisioned.addAll(otherEnd.getResourceKeys());\n+                            toBeProvisioned.addAll(anyObjectDAO.findAllResourceKeys(otherEnd.getKey()));\n                         } else {\n                             LOG.error(\"{} cannot be assigned to {}\", otherEnd, user);\n \n@@ -462,7 +462,7 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n                         attr.setMembership(null);\n                     }\n \n-                    toBeDeprovisioned.addAll(membership.getRightEnd().getResourceKeys());\n+                    toBeDeprovisioned.addAll(groupDAO.findAllResourceKeys(membership.getRightEnd().getKey()));\n                 }\n \n                 if (membPatch.getOperation() == PatchOperation.ADD_REPLACE) {\n@@ -504,7 +504,7 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n                             scce.addException(invalidValues);\n                         }\n \n-                        toBeProvisioned.addAll(group.getResourceKeys());\n+                        toBeProvisioned.addAll(groupDAO.findAllResourceKeys(group.getKey()));\n \n                         // SYNCOPE-686: if password is invertible and we are adding resources with password mapping,\n                         // ensure that they are counted for password propagation"},{"sha":"4868bbcb178fb56b4a051bfc6e7a4d8dfb931934","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/GroupMemberProvisionTaskJobDelegate.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.job;\n \n+import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n@@ -84,10 +85,11 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setGroup(groupKey);\n         List<User> users = searchDAO.search(SearchCond.getLeafCond(membershipCond), AnyTypeKind.USER);\n+        Collection<String> groupResourceKeys = groupDAO.findAllResourceKeys(groupKey);\n         for (User user : users) {\n             List<PropagationStatus> statuses = actionType == BulkMembersActionType.DEPROVISION\n-                    ? userProvisioningManager.deprovision(user.getKey(), group.getResourceKeys(), false)\n-                    : userProvisioningManager.provision(user.getKey(), true, null, group.getResourceKeys(), false);\n+                    ? userProvisioningManager.deprovision(user.getKey(), groupResourceKeys, false)\n+                    : userProvisioningManager.provision(user.getKey(), true, null, groupResourceKeys, false);\n             for (PropagationStatus status : statuses) {\n                 result.append(\"User \").append(user.getKey()).append('\\t').\n                         append(\"Resource \").append(status.getResource()).append('\\t').\n@@ -105,8 +107,8 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         List<AnyObject> anyObjects = searchDAO.search(SearchCond.getLeafCond(membershipCond), AnyTypeKind.ANY_OBJECT);\n         for (AnyObject anyObject : anyObjects) {\n             List<PropagationStatus> statuses = actionType == BulkMembersActionType.DEPROVISION\n-                    ? anyObjectProvisioningManager.deprovision(anyObject.getKey(), group.getResourceKeys(), false)\n-                    : anyObjectProvisioningManager.provision(anyObject.getKey(), group.getResourceKeys(), false);\n+                    ? anyObjectProvisioningManager.deprovision(anyObject.getKey(), groupResourceKeys, false)\n+                    : anyObjectProvisioningManager.provision(anyObject.getKey(), groupResourceKeys, false);\n \n             for (PropagationStatus status : statuses) {\n                 result.append(anyObject.getType().getKey()).append(' ').append(anyObject.getKey()).append('\\t')."},{"sha":"395a5a8dbe040f186fa7f3ac97ec7b238d6e8d36","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -323,7 +323,7 @@ protected Uid delete(\n \n                     case GROUP:\n                         try {\n-                            resources = groupDAO.authFind(task.getEntityKey()).getResourceKeys();\n+                            resources = groupDAO.findAllResourceKeys(task.getEntityKey());\n                         } catch (Exception e) {\n                             LOG.error(\"Could not read group {}\", task.getEntityKey(), e);\n                         }"},{"sha":"c392db2e1eeb329a4cedfcb502de8586be682499","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -86,7 +86,7 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n                 List<String> groupConnObjectLinks = new ArrayList<>();\n                 for (String groupKey : userDAO.findAllGroupKeys(user)) {\n                     Group group = groupDAO.find(groupKey);\n-                    if (group != null && group.getResourceKeys().contains(task.getResource().getKey())) {\n+                    if (group != null && groupDAO.findAllResourceKeys(groupKey).contains(task.getResource().getKey())) {\n                         LOG.debug(\"Evaluating connObjectLink for {}\", group);\n \n                         JexlContext jexlContext = new MapContext();"},{"sha":"fdeb8488ffa663a6269b63c8941df178de790cc1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":7,"deletions":19,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -53,15 +53,11 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -118,7 +114,7 @@ public class PropagationManagerImpl implements PropagationManager {\n     @Autowired\n     protected AnyUtilsFactory anyUtilsFactory;\n \n-    protected Any<?> find(final AnyTypeKind kind, final String key) {\n+    protected AnyDAO<? extends Any<?>> dao(final AnyTypeKind kind) {\n         AnyDAO<? extends Any<?>> dao;\n         switch (kind) {\n             case ANY_OBJECT:\n@@ -134,7 +130,7 @@ protected Any<?> find(final AnyTypeKind kind, final String key) {\n                 dao = userDAO;\n         }\n \n-        return dao.authFind(key);\n+        return dao;\n     }\n \n     @Override\n@@ -145,7 +141,7 @@ public List<PropagationTask> getCreateTasks(\n             final Collection<AttrTO> vAttrs,\n             final Collection<String> noPropResourceKeys) {\n \n-        return getCreateTasks(find(kind, key), null, null, propByRes, vAttrs, noPropResourceKeys);\n+        return getCreateTasks(dao(kind).authFind(key), null, null, propByRes, vAttrs, noPropResourceKeys);\n     }\n \n     @Override\n@@ -189,7 +185,7 @@ public List<PropagationTask> getUpdateTasks(\n             final Collection<AttrTO> vAttrs,\n             final Collection<String> noPropResourceKeys) {\n \n-        return getUpdateTasks(find(kind, key), null, changePwd, enable, propByRes, vAttrs, noPropResourceKeys);\n+        return getUpdateTasks(dao(kind).authFind(key), null, changePwd, enable, propByRes, vAttrs, noPropResourceKeys);\n     }\n \n     @Override\n@@ -288,12 +284,12 @@ public List<PropagationTask> getDeleteTasks(\n             final PropagationByResource propByRes,\n             final Collection<String> noPropResourceKeys) {\n \n-        Any<?> any = find(kind, key);\n+        Any<?> any = dao(kind).authFind(key);\n \n         PropagationByResource localPropByRes = new PropagationByResource();\n \n         if (propByRes == null || propByRes.isEmpty()) {\n-            localPropByRes.addAll(ResourceOperation.DELETE, any.getResourceKeys());\n+            localPropByRes.addAll(ResourceOperation.DELETE, dao(kind).findAllResourceKeys(key));\n         } else {\n             localPropByRes.merge(propByRes);\n         }\n@@ -340,15 +336,7 @@ protected List<PropagationTask> createTasks(final Any<?> any,\n         Set<String> virtualResources = new HashSet<>();\n         virtualResources.addAll(propByRes.get(ResourceOperation.CREATE));\n         virtualResources.addAll(propByRes.get(ResourceOperation.UPDATE));\n-        if (any instanceof User) {\n-            virtualResources.addAll(CollectionUtils.collect(\n-                    userDAO.findAllResources((User) any), EntityUtils.keyTransformer()));\n-        } else if (any instanceof AnyObject) {\n-            virtualResources.addAll(CollectionUtils.collect(\n-                    anyObjectDAO.findAllResources((AnyObject) any), EntityUtils.keyTransformer()));\n-        } else {\n-            virtualResources.addAll(((Group) any).getResourceKeys());\n-        }\n+        virtualResources.addAll(dao(any.getType().getKind()).findAllResourceKeys(any.getKey()));\n \n         Map<String, Set<Attribute>> vAttrMap = new HashMap<>();\n         for (AttrTO vAttr : CollectionUtils.emptyIfNull(vAttrs)) {"},{"sha":"70957399b310deed48d269fe3ebf119d4368ed15","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -24,7 +24,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n@@ -44,7 +43,6 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n@@ -56,7 +54,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -103,15 +100,13 @@ private void update(final Any<?> any, final ProvisioningReport result) {\n         Collection<String> resourceKeys;\n         if (any instanceof User) {\n             changepwd = true;\n-            resourceKeys = CollectionUtils.collect(\n-                    userDAO.findAllResources((User) any), EntityUtils.keyTransformer());\n+            resourceKeys = userDAO.findAllResourceKeys(any.getKey());\n         } else if (any instanceof AnyObject) {\n             changepwd = false;\n-            resourceKeys = CollectionUtils.collect(\n-                    anyObjectDAO.findAllResources((AnyObject) any), EntityUtils.keyTransformer());\n+            resourceKeys = anyObjectDAO.findAllResourceKeys(any.getKey());\n         } else {\n             changepwd = false;\n-            resourceKeys = ((Group) any).getResourceKeys();\n+            resourceKeys = groupDAO.findAllResourceKeys(any.getKey());\n         }\n \n         List<String> noPropResources = new ArrayList<>(resourceKeys);"},{"sha":"ad8229e09af7041e396ad880ea9d92a22b974608","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -73,7 +73,6 @@\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.activiti.spring.DomainProcessEngine;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n@@ -413,9 +412,7 @@ protected void doDelete(final User user) {\n         doExecuteTask(user, \"delete\", null);\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(\n-                ResourceOperation.DELETE,\n-                CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer()));\n+        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceKeys(user.getKey()));\n \n         saveForFormSubmit(user, null, propByRes);\n "},{"sha":"8a33bfba072976db593dbff202e5dd69f0dc7405","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/task/PasswordReset.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -18,14 +18,12 @@\n  */\n package org.apache.syncope.core.workflow.activiti.task;\n \n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.workflow.activiti.ActivitiUserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -59,7 +57,7 @@ protected void doExecute(final String executionId) {\n         userPatch.setKey(user.getKey());\n         userPatch.setPassword(new PasswordPatch.Builder().\n                 onSyncope(true).\n-                resources(CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer())).\n+                resources(userDAO.findAllResourceKeys(user.getKey())).\n                 value(password).build());\n \n         PropagationByResource propByRes = dataBinder.update(user, userPatch);"},{"sha":"7ebbf3d58092c3589c0cbed645aff2f7e239688d","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -44,7 +44,7 @@ protected WorkflowResult<String> doCreate(final GroupTO groupTO) {\n         group = groupDAO.save(group);\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.CREATE, group.getResourceKeys());\n+        propByRes.set(ResourceOperation.CREATE, groupDAO.findAllResourceKeys(group.getKey()));\n \n         return new WorkflowResult<>(group.getKey(), propByRes, \"create\");\n     }"},{"sha":"f4d8a814f8582428ac09e8fade297431935528ec","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -21,7 +21,6 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n@@ -34,7 +33,6 @@\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -146,7 +144,7 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n         userPatch.setKey(user.getKey());\n         userPatch.setPassword(new PasswordPatch.Builder().\n                 onSyncope(true).\n-                resources(CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer())).\n+                resources(userDAO.findAllResourceKeys(user.getKey())).\n                 value(password).build());\n \n         return doUpdate(user, userPatch);"},{"sha":"8d99fdb694b59cbec8b58d7497ac4299271ac59f","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/DeprovisionProducer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeprovisionProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeprovisionProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FDeprovisionProducer.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -82,7 +82,7 @@ public void process(final Exchange exchange) throws Exception {\n                             AnyTypeKind.GROUP,\n                             key,\n                             propByRes,\n-                            CollectionUtils.removeAll(groupDAO.authFind(key).getResourceKeys(), resources));\n+                            CollectionUtils.removeAll(groupDAO.findAllResourceKeys(key), resources));\n                     propagationReporter = getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n                     exchange.getOut().setBody(propagationReporter.getStatuses());\n                     break;"},{"sha":"9bcea18166a9360da03a82aef4915c11c75d04d1","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b27bed98c83683b01cae2c94c940cd87ab4f583e/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b27bed98c83683b01cae2c94c940cd87ab4f583e/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java?ref=b27bed98c83683b01cae2c94c940cd87ab4f583e","patch":"@@ -103,7 +103,7 @@ public XContentBuilder builder(final Any<?> any) throws IOException {\n                                 ? userDAO.findAllResourceKeys(any.getKey())\n                                 : any instanceof AnyObject\n                                         ? anyObjectDAO.findAllResourceKeys(any.getKey())\n-                                        : any.getResourceKeys()).\n+                                        : groupDAO.findAllResourceKeys(any.getKey())).\n                 field(\"dynRealms\",\n                         any instanceof User\n                                 ? userDAO.findDynRealms(any.getKey())"}]}