{"sha":"b30099b68ca105d097c261651b1a255de184556e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIzMDA5OWI2OGNhMTA1ZDA5N2MyNjE2NTFiMWEyNTVkZTE4NDU1NmU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-13T10:51:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-13T10:51:24Z"},"message":"[SYNCOPE-992] Use millis to date conversion for create too (used to be set for update only) + fix JS onChange events for datepicker","tree":{"sha":"3c9d380a0382d65ff5ae220399f06b9c170784d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3c9d380a0382d65ff5ae220399f06b9c170784d9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b30099b68ca105d097c261651b1a255de184556e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b30099b68ca105d097c261651b1a255de184556e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b30099b68ca105d097c261651b1a255de184556e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b30099b68ca105d097c261651b1a255de184556e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"909ed6f56b0770bcd6d6b258c631c7f3ff573a55","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/909ed6f56b0770bcd6d6b258c631c7f3ff573a55","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/909ed6f56b0770bcd6d6b258c631c7f3ff573a55"}],"stats":{"total":68,"additions":53,"deletions":15},"files":[{"sha":"eddd4390062caa72c3a275075c9627f9e840d065","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":34,"deletions":6,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=b30099b68ca105d097c261651b1a255de184556e","patch":"@@ -19,17 +19,22 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.slf4j.Logger;\n@@ -72,6 +77,28 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             }\n \n             if (isSelfRegistrationAllowed() && userTO != null) {\n+                Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n+\n+                // millis -> Date conversion\n+                for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n+                    if (userPlainAttrMap.containsKey(plainSchema.getKey())) {\n+                        FastDateFormat fmt = FastDateFormat.getInstance(plainSchema.getConversionPattern());\n+\n+                        AttrTO dateAttr = userPlainAttrMap.get(plainSchema.getKey());\n+                        List<String> formattedValues = new ArrayList<>(dateAttr.getValues().size());\n+                        for (String value : dateAttr.getValues()) {\n+                            try {\n+                                formattedValues.add(fmt.format(Long.valueOf(value)));\n+                            } catch (NumberFormatException e) {\n+                                throw new IllegalArgumentException(\"Invalid format value for \" + value);\n+                            }\n+                        }\n+                        dateAttr.getValues().clear();\n+                        dateAttr.getValues().addAll(formattedValues);\n+                    }\n+                }\n+\n+                // membership attributes management\n                 Set<AttrTO> membAttrs = new HashSet<>();\n                 for (AttrTO attr : userTO.getPlainAttrs()) {\n                     if (attr.getSchema().contains(\"#\")) {\n@@ -149,6 +176,7 @@ public boolean evaluate(final MembershipTO item) {\n \n                 LOG.debug(\"Received user self registration request for user: [{}]\", userTO.getUsername());\n                 LOG.trace(\"Received user self registration request is: [{}]\", userTO);\n+\n                 // adapt request and create user\n                 final Response res = userSelfService.create(userTO, true);\n \n@@ -159,9 +187,9 @@ public void writeData(final Attributes attributes) throws IOException {\n                         attributes.getResponse().write(res.getStatusInfo().getFamily().equals(\n                                 Response.Status.Family.SUCCESSFUL)\n                                         ? responseMessage.append(\"User: \").append(userTO.getUsername()).append(\n-                                        \" successfully created\")\n+                                                \" successfully created\")\n                                         : new StringBuilder().append(\"ErrorMessage{{ \").\n-                                        append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n+                                                append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n                     }\n                 });\n                 response.setStatusCode(res.getStatus());\n@@ -176,10 +204,10 @@ public void writeData(final Attributes attributes) throws IOException {\n             LOG.error(\"Could not create userTO\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                     new StringBuilder().\n-                    append(\"ErrorMessage{{ \").\n-                    append(e.getMessage()).\n-                    append(\" }}\").\n-                    toString());\n+                            append(\"ErrorMessage{{ \").\n+                            append(e.getMessage()).\n+                            append(\" }}\").\n+                            toString());\n         }\n         return response;\n     }"},{"sha":"a792f00779feeb65b5c32e84932b1068237eeffa","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=b30099b68ca105d097c261651b1a255de184556e","patch":"@@ -56,6 +56,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             UserTO userTO = SerializationUtils.clone(SyncopeEnduserSession.get().getSelfTO());\n             Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n \n+            // Date -> millis conversion\n             for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n                 if (userPlainAttrMap.containsKey(plainSchema.getKey())) {\n                     FastDateFormat fmt = FastDateFormat.getInstance(plainSchema.getConversionPattern());\n@@ -70,6 +71,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 }\n             }\n \n+            // membership attributes management\n             for (MembershipTO membership : userTO.getMemberships()) {\n                 String groupName = membership.getGroupName();\n                 for (AttrTO attr : membership.getPlainAttrs()) {"},{"sha":"dbc6bef69aff9ff2c166f0d5cb8671115fe42530","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=b30099b68ca105d097c261651b1a255de184556e","patch":"@@ -64,9 +64,10 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             UserTO userTO = MAPPER.readValue(request.getReader().readLine(), UserTO.class);\n-            \n+\n             Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n \n+            // millis -> Date conversion\n             for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n                 if (userPlainAttrMap.containsKey(plainSchema.getKey())) {\n                     FastDateFormat fmt = FastDateFormat.getInstance(plainSchema.getConversionPattern());\n@@ -85,6 +86,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 }\n             }\n \n+            // membership attributes management\n             Set<AttrTO> membAttrs = new HashSet<>();\n             for (AttrTO attr : userTO.getPlainAttrs()) {\n                 if (attr.getSchema().contains(\"#\")) {\n@@ -164,9 +166,10 @@ public boolean evaluate(final MembershipTO item) {\n \n             final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n                     ? new StringBuilder().\n-                    append(\"User\").append(userTO.getUsername()).append(\" successfully updated\").toString()\n+                            append(\"User\").append(userTO.getUsername()).append(\" successfully updated\").toString()\n                     : new StringBuilder().\n-                    append(\"ErrorMessage{{ \").append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n+                            append(\"ErrorMessage{{ \").append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").\n+                            toString();\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override\n@@ -181,10 +184,10 @@ public void writeData(final Attributes attributes) throws IOException {\n             LOG.error(\"Error while updating user\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                     new StringBuilder().\n-                    append(\"ErrorMessage{{ \").\n-                    append(e.getMessage()).\n-                    append(\" }}\").\n-                    toString());\n+                            append(\"ErrorMessage{{ \").\n+                            append(e.getMessage()).\n+                            append(\" }}\").\n+                            toString());\n         }\n         return response;\n     }"},{"sha":"1aabdd35e1e426685420a628fc8a0cc368616223","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttribute.js","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b30099b68ca105d097c261651b1a255de184556e/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js?ref=b30099b68ca105d097c261651b1a255de184556e","patch":"@@ -93,9 +93,14 @@ angular.module('self')\n                     }\n \n                     $scope.bindDateToModel = function (selectedDate, selectedTime) {\n-                      if (selectedDate && selectedTime) {\n+                      if (selectedDate) {\n                         var extractedDate = selectedDate.toString().substring(0, 15);\n-                        var extractedTime = selectedTime.toString().substring(16);\n+                        var extractedTime;\n+                        if (selectedTime) {\n+                          extractedTime = selectedTime.toString().substring(16);\n+                        } else {\n+                          extractedTime = '00:00:00';\n+                        }\n                         var resultDate = extractedDate + ' ' + extractedTime;\n                         var tmpdate = new Date(resultDate);\n                         var milliseconds = tmpdate.getTime();"}]}