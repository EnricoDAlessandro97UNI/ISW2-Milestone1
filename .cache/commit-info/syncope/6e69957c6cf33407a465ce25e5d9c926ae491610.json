{"sha":"6e69957c6cf33407a465ce25e5d9c926ae491610","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZlNjk5NTdjNmNmMzM0MDdhNDY1Y2UyNWU1ZDljOTI2YWU0OTE2MTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-08-14T17:32:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-08-14T18:05:30Z"},"message":"[SYNCOPE-1639] Replacing HashSet with TreeSet + Comparable","tree":{"sha":"67e55a491b0f1bc68c0e58a86840c733d21981f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/67e55a491b0f1bc68c0e58a86840c733d21981f7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6e69957c6cf33407a465ce25e5d9c926ae491610","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6e69957c6cf33407a465ce25e5d9c926ae491610","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6e69957c6cf33407a465ce25e5d9c926ae491610","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6e69957c6cf33407a465ce25e5d9c926ae491610/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f6a343066f14bc14dc038e6130bcdb0e7a8778fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f6a343066f14bc14dc038e6130bcdb0e7a8778fc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f6a343066f14bc14dc038e6130bcdb0e7a8778fc"}],"stats":{"total":161,"additions":121,"deletions":40},"files":[{"sha":"937279cd776b891538eb32cc99e3b29bf46481e3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"modified","additions":78,"deletions":2,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -18,10 +18,23 @@\n  */\n package org.apache.syncope.client.console.audit;\n \n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.core.StreamReadFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+import com.fasterxml.jackson.databind.json.JsonMapper;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n+import java.io.IOException;\n import java.io.Serializable;\n import java.util.Date;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeMap;\n+import java.util.TreeSet;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n@@ -44,7 +57,68 @@\n \n     private static final Logger LOG = LoggerFactory.getLogger(AuditHistoryDetails.class);\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n+    private static class SortingNodeFactory extends JsonNodeFactory {\n+\n+        private static final long serialVersionUID = 1870252010670L;\n+\n+        @Override\n+        public ObjectNode objectNode() {\n+            return new ObjectNode(this, new TreeMap<>());\n+        }\n+    }\n+\n+    private static class SortedSetJsonSerializer extends StdSerializer<Set<?>> {\n+\n+        private static final long serialVersionUID = 3849059774309L;\n+\n+        SortedSetJsonSerializer(final Class<Set<?>> clazz) {\n+            super(clazz);\n+        }\n+\n+        @Override\n+        public void serialize(\n+                final Set<?> set,\n+                final JsonGenerator gen,\n+                final SerializerProvider sp) throws IOException {\n+\n+            if (set == null) {\n+                gen.writeNull();\n+                return;\n+            }\n+\n+            gen.writeStartArray();\n+\n+            if (!set.isEmpty()) {\n+                Set<?> sorted = set;\n+\n+                // create sorted set only if it itself is not already SortedSet\n+                if (!SortedSet.class.isAssignableFrom(set.getClass())) {\n+                    Object item = set.iterator().next();\n+                    if (Comparable.class.isAssignableFrom(item.getClass())) {\n+                        // and only if items are Comparable\n+                        sorted = new TreeSet<>(set);\n+                    } else {\n+                        LOG.debug(\"Cannot sort items of type {}\", item.getClass());\n+                    }\n+                }\n+\n+                for (Object item : sorted) {\n+                    gen.writeObject(item);\n+                }\n+            }\n+\n+            gen.writeEndArray();\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static <T> Class<T> cast(final Class<?> aClass) {\n+        return (Class<T>) aClass;\n+    }\n+\n+    private static final ObjectMapper MAPPER = JsonMapper.builder().\n+            nodeFactory(new SortingNodeFactory()).build().\n+            registerModule(new SimpleModule().addSerializer(new SortedSetJsonSerializer(cast(Set.class))));\n \n     public AuditHistoryDetails(\n             final MultilevelPanel mlp,\n@@ -114,7 +188,9 @@ private Model<String> toJSON(final AuditEntry auditEntry, final Class<T> referen\n                     ? MAPPER.readTree(auditEntry.getOutput()).get(\"entity\").toPrettyString()\n                     : auditEntry.getBefore();\n \n-            T entity = MAPPER.readValue(content, reference);\n+            T entity = MAPPER.reader().\n+                    with(StreamReadFeature.STRICT_DUPLICATE_DETECTION).\n+                    readValue(content, reference);\n             if (entity instanceof UserTO) {\n                 UserTO userTO = (UserTO) entity;\n                 userTO.setPassword(null);"},{"sha":"2ebc7bc266528c801df27a94c93b9a0f2779c6cd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/JsonDiffPanel.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonDiffPanel.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -30,24 +30,20 @@ public class JsonDiffPanel extends AbstractModalPanel<String> {\n \n     private static final long serialVersionUID = -5110368813584745668L;\n \n-    private final IModel<String> first;\n-\n-    private final IModel<String> second;\n-\n     public JsonDiffPanel(\n             final BaseModal<String> modal,\n             final IModel<String> first,\n             final IModel<String> second,\n             final PageReference pageRef) {\n \n         super(modal, pageRef);\n-        this.second = second;\n-        this.first = first;\n-        TextArea<String> jsonEditorInfoDefArea1 = new TextArea<>(\"jsonEditorInfo1\", this.first);\n-        TextArea<String> jsonEditorInfoDefArea2 = new TextArea<>(\"jsonEditorInfo2\", this.second);\n+\n+        TextArea<String> jsonEditorInfoDefArea1 = new TextArea<>(\"jsonEditorInfo1\", first);\n         jsonEditorInfoDefArea1.setMarkupId(\"jsonEditorInfo1\").setOutputMarkupPlaceholderTag(true);\n-        jsonEditorInfoDefArea2.setMarkupId(\"jsonEditorInfo2\").setOutputMarkupPlaceholderTag(true);\n         add(jsonEditorInfoDefArea1);\n+\n+        TextArea<String> jsonEditorInfoDefArea2 = new TextArea<>(\"jsonEditorInfo2\", second);\n+        jsonEditorInfoDefArea2.setMarkupId(\"jsonEditorInfo2\").setOutputMarkupPlaceholderTag(true);\n         add(jsonEditorInfoDefArea2);\n     }\n "},{"sha":"5b920ff2080988b265022604d9ff8486d8e8cba9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/Attr.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttr.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -25,10 +25,11 @@\n import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.PathParam;\n+import org.apache.commons.lang3.builder.CompareToBuilder;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n-public class Attr implements BaseBean {\n+public class Attr implements Comparable<Attr>, BaseBean {\n \n     private static final long serialVersionUID = 4941691338796323623L;\n \n@@ -97,6 +98,16 @@ public List<String> getValues() {\n         return values;\n     }\n \n+    @Override\n+    public int compareTo(final Attr other) {\n+        return equals(other)\n+                ? 0\n+                : new CompareToBuilder().\n+                        append(schema, other.schema).\n+                        append(values, other.values).\n+                        toComparison();\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()."},{"sha":"bdc9a8ad8b492ea3da824180a07d6a97cd188bb2","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -28,7 +28,7 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Date;\n-import java.util.HashSet;\n+import java.util.TreeSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n@@ -82,15 +82,15 @@ public abstract class AnyTO implements EntityTO, RealmMember {\n \n     private String status;\n \n-    private final Set<String> auxClasses = new HashSet<>();\n+    private final Set<String> auxClasses = new TreeSet<>();\n \n-    private final Set<Attr> plainAttrs = new HashSet<>();\n+    private final Set<Attr> plainAttrs = new TreeSet<>();\n \n-    private final Set<Attr> derAttrs = new HashSet<>();\n+    private final Set<Attr> derAttrs = new TreeSet<>();\n \n-    private final Set<Attr> virAttrs = new HashSet<>();\n+    private final Set<Attr> virAttrs = new TreeSet<>();\n \n-    private final Set<String> resources = new HashSet<>();\n+    private final Set<String> resources = new TreeSet<>();\n \n     @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();"},{"sha":"921364d11e4ba3994c039a935c1261e8efb23dc3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ConnObjectTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -21,9 +21,9 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n-import java.util.LinkedHashSet;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.TreeSet;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n@@ -35,7 +35,7 @@ public class ConnObjectTO implements BaseBean {\n \n     private String fiql;\n \n-    private final Set<Attr> attrs = new LinkedHashSet<>();\n+    private final Set<Attr> attrs = new TreeSet<>();\n \n     public String getFiql() {\n         return fiql;"},{"sha":"36c75b7740b71b4e421cb253663eef4f1f839242","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/DelegationTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -22,8 +22,8 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.Set;\n+import java.util.TreeSet;\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n@@ -39,7 +39,7 @@ public class DelegationTO extends AbstractStartEndBean implements EntityTO {\n \n     private String delegated;\n \n-    private final Set<String> roles = new HashSet<>();\n+    private final Set<String> roles = new TreeSet<>();\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @Override"},{"sha":"1d149dac2dfaefcb40226bc2cf8056b882c33d9e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/LinkedAccountTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FLinkedAccountTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -21,9 +21,9 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n-import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.TreeSet;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.Attr;\n@@ -78,9 +78,9 @@ public LinkedAccountTO build() {\n \n     private boolean suspended;\n \n-    private final Set<Attr> plainAttrs = new HashSet<>();\n+    private final Set<Attr> plainAttrs = new TreeSet<>();\n \n-    private final Set<String> privileges = new HashSet<>();\n+    private final Set<String> privileges = new TreeSet<>();\n \n     @Override\n     public String getKey() {"},{"sha":"72477b26d440e81df6f3039006f63428503bf115","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -26,10 +26,10 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.Collection;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.TreeSet;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.BaseBean;\n@@ -90,11 +90,11 @@ public MembershipTO build() {\n \n     private String groupName;\n \n-    private final Set<Attr> plainAttrs = new HashSet<>();\n+    private final Set<Attr> plainAttrs = new TreeSet<>();\n \n-    private final Set<Attr> derAttrs = new HashSet<>();\n+    private final Set<Attr> derAttrs = new TreeSet<>();\n \n-    private final Set<Attr> virAttrs = new HashSet<>();\n+    private final Set<Attr> virAttrs = new TreeSet<>();\n \n     public String getGroupKey() {\n         return groupKey;"},{"sha":"1036ed565bc5958cf94b64b271102a4b09c4132c","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -22,8 +22,8 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import java.util.HashSet;\n import java.util.Set;\n+import java.util.TreeSet;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -40,7 +40,7 @@ public class NotificationTaskTO extends TaskTO {\n \n     private String entityKey;\n \n-    private final Set<String> recipients = new HashSet<>();\n+    private final Set<String> recipients = new TreeSet<>();\n \n     private String sender;\n "},{"sha":"7673f17d2ac9a81c843207561c2c2527c9b37231","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -22,10 +22,8 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n@@ -56,7 +54,7 @@ public class RealmTO implements NamedEntityTO, TemplatableTO {\n \n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n-    private final Set<String> resources = new HashSet<>();\n+    private final List<String> resources = new ArrayList<>();\n \n     @Override\n     public String getKey() {\n@@ -148,7 +146,7 @@ public Map<String, AnyTO> getTemplates() {\n \n     @JacksonXmlElementWrapper(localName = \"resources\")\n     @JacksonXmlProperty(localName = \"resource\")\n-    public Set<String> getResources() {\n+    public List<String> getResources() {\n         return resources;\n     }\n "},{"sha":"bf4b22e6a07a9438399bb49267cf046a205cd3f7","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -21,9 +21,9 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import java.util.TreeSet;\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n@@ -34,15 +34,15 @@ public class RoleTO implements EntityTO {\n \n     private String key;\n \n-    private final Set<String> entitlements = new HashSet<>();\n+    private final Set<String> entitlements = new TreeSet<>();\n \n     private final List<String> realms = new ArrayList<>();\n \n     private final List<String> dynRealms = new ArrayList<>();\n \n     private String dynMembershipCond;\n \n-    private final Set<String> privileges = new HashSet<>();\n+    private final Set<String> privileges = new TreeSet<>();\n \n     @Override\n     public String getKey() {"},{"sha":"0417837215dc14eaa9fd37c95bfe06ebf6c28dd1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6e69957c6cf33407a465ce25e5d9c926ae491610/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=6e69957c6cf33407a465ce25e5d9c926ae491610","patch":"@@ -25,10 +25,10 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.TreeSet;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -70,7 +70,7 @@ public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private final List<String> dynRoles = new ArrayList<>();\n \n-    private final Set<String> privileges = new HashSet<>();\n+    private final Set<String> privileges = new TreeSet<>();\n \n     private final List<LinkedAccountTO> linkedAccounts = new ArrayList<>();\n "}]}