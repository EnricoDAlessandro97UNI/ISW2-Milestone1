{"sha":"36a2b0bd551954d0364b279ddf50c541142904ee","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM2YTJiMGJkNTUxOTU0ZDAzNjRiMjc5ZGRmNTBjNTQxMTQyOTA0ZWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-04T16:57:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-04T16:57:42Z"},"message":"[SYNCOPE-284] Export now takes into account everything but user data; activiticontent.xml removed but similar logic delegated to workflow adapter loader\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1442175 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"418ef1c505672b7b7f948be729f8d4b936f0f5f1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/418ef1c505672b7b7f948be729f8d4b936f0f5f1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/36a2b0bd551954d0364b279ddf50c541142904ee","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/36a2b0bd551954d0364b279ddf50c541142904ee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/36a2b0bd551954d0364b279ddf50c541142904ee","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/36a2b0bd551954d0364b279ddf50c541142904ee/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3028c41e3787e5d8b052209d8442d7fb1f3706b9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3028c41e3787e5d8b052209d8442d7fb1f3706b9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3028c41e3787e5d8b052209d8442d7fb1f3706b9"}],"stats":{"total":501,"additions":263,"deletions":238},"files":[{"sha":"3e2d742f8a405939a72bf88333ec63ae75911b8f","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -187,7 +187,6 @@ under the License.\n                   <patternset>\r\n                     <exclude name=\"**/content.xml\" />\r\n                     <exclude name=\"**/persistence.properties\" />\r\n-                    <exclude name=\"**/workflow.properties\" />\r\n                   </patternset>\r\n                 </unzip>\r\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\r"},{"sha":"185fb33129c475e94606d9b785a5d9d9aa0433f0","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -200,7 +200,6 @@ under the License.\n                   <patternset>\r\n                     <exclude name=\"**/content.xml\"/>\r\n                     <exclude name=\"**/persistence.properties\"/>\r\n-                    <exclude name=\"**/workflow.properties\" />\r\n                   </patternset>\r\n                 </unzip>\r\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\r"},{"sha":"eb7cbde79dbb38cc18876c26afc1ec166c10e5db","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ConfigurationServiceProxy.java","status":"modified","additions":44,"deletions":6,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConfigurationServiceProxy.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -18,18 +18,28 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n-import java.io.InputStream;\r\n+import java.io.IOException;\r\n import java.io.UnsupportedEncodingException;\r\n import java.net.URI;\r\n import java.net.URLEncoder;\r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n-\r\n import javax.ws.rs.InternalServerErrorException;\r\n import javax.ws.rs.core.Response;\r\n-\r\n+import org.apache.http.HttpEntity;\r\n+import org.apache.http.HttpHost;\r\n+import org.apache.http.HttpResponse;\r\n+import org.apache.http.HttpStatus;\r\n+import org.apache.http.auth.AuthScope;\r\n+import org.apache.http.client.AuthCache;\r\n+import org.apache.http.client.methods.HttpGet;\r\n+import org.apache.http.client.protocol.ClientContext;\r\n+import org.apache.http.impl.auth.BasicScheme;\r\n+import org.apache.http.impl.client.BasicAuthCache;\r\n+import org.apache.http.protocol.BasicHttpContext;\r\n+import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConfigurationService;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n@@ -98,8 +108,36 @@ public Set<MailTemplateTO> getMailTemplates() {\n \r\n     @Override\r\n     public Response dbExport() {\r\n-        return Response.ok(getRestTemplate().getForObject(baseUrl + \"configuration/dbexport\", InputStream.class))\r\n-                .build();\r\n-    }\r\n+        final AuthScope scope = ((PreemptiveAuthHttpRequestFactory) getRestTemplate().getRequestFactory()).\r\n+                getAuthScope();\r\n+        final HttpHost targetHost = new HttpHost(scope.getHost(), scope.getPort(), scope.getScheme());\r\n+        final BasicHttpContext localcontext = new BasicHttpContext();\r\n+        final AuthCache authCache = new BasicAuthCache();\r\n+        authCache.put(targetHost, new BasicScheme());\r\n+        localcontext.setAttribute(ClientContext.AUTH_CACHE, authCache);\r\n+\r\n+        final HttpGet getMethod = new HttpGet(baseUrl + \"configuration/dbexport\");\r\n+        try {\r\n+            final HttpResponse httpResponse =\r\n+                    ((PreemptiveAuthHttpRequestFactory) getRestTemplate().getRequestFactory()).\r\n+                    getHttpClient().execute(targetHost, getMethod, localcontext);\r\n \r\n+            Response response;\r\n+            if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\r\n+                HttpEntity entity = httpResponse.getEntity();\r\n+                response = Response.ok(entity.getContent(), entity.getContentType().getValue()).\r\n+                        location(getMethod.getURI()).\r\n+                        header(\"Content-Disposition\", httpResponse.getLastHeader(\"Content-Disposition\").getValue()).\r\n+                        build();\r\n+            } else {\r\n+                response = Response.noContent().status(httpResponse.getStatusLine().getStatusCode()).\r\n+                        location(getMethod.getURI()).\r\n+                        build();\r\n+            }\r\n+\r\n+            return response;\r\n+        } catch (IOException e) {\r\n+            throw new InternalServerErrorException(e);\r\n+        }\r\n+    }\r\n }\r"},{"sha":"cac3bd8b5dbffa13bd396ba07d1f85c338b73ce5","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -20,15 +20,13 @@\n \r\n import java.util.List;\r\n import java.util.Set;\r\n-\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.core.Response;\r\n-\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.to.MailTemplateTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n@@ -94,5 +92,4 @@ public interface ConfigurationService {\n     @PUT\r\n     @Path(\"{key}\")\r\n     void update(@PathParam(\"key\") String key, ConfigurationTO configurationTO);\r\n-\r\n }\r"},{"sha":"fd47db314de5a1ea0a98ac6fba5f61eee76cc4bb","filename":"common/src/main/java/org/apache/syncope/common/services/ReportService.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n@@ -29,7 +28,6 @@\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.Response;\r\n-\r\n import org.apache.syncope.common.to.ReportExecTO;\r\n import org.apache.syncope.common.to.ReportTO;\r\n import org.apache.syncope.common.types.ReportExecExportFormat;\r\n@@ -135,5 +133,4 @@ List<ReportTO> list(@QueryParam(\"page\") int page,\n     @PUT\r\n     @Path(\"{reportId}\")\r\n     void update(@PathParam(\"reportId\") Long reportId, ReportTO reportTO);\r\n-\r\n }\r"},{"sha":"162c8b05d67b5d5a46772204e9fc6fe800d1e52d","filename":"common/src/main/java/org/apache/syncope/common/validation/SyncopeClientErrorHandler.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientErrorHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientErrorHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientErrorHandler.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -39,11 +39,10 @@ public class SyncopeClientErrorHandler extends DefaultResponseErrorHandler {\n      */\r\n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeClientErrorHandler.class);\r\n \r\n-    public static final HttpStatus[] MANAGED_STATUSES = new HttpStatus[] { HttpStatus.BAD_REQUEST, HttpStatus.NOT_FOUND };\r\n+    private static final HttpStatus[] MANAGED_STATUSES = {HttpStatus.BAD_REQUEST, HttpStatus.NOT_FOUND};\r\n \r\n     @Override\r\n     public void handleError(final ClientHttpResponse response) throws IOException {\r\n-\r\n         if (!ArrayUtils.contains(MANAGED_STATUSES, response.getStatusCode())) {\r\n             super.handleError(response);\r\n         }\r\n@@ -55,8 +54,8 @@ public void handleError(final ClientHttpResponse response) throws IOException {\n             return;\r\n         }\r\n \r\n-        SyncopeClientCompositeErrorException compositeException = new SyncopeClientCompositeErrorException(response\r\n-                .getStatusCode());\r\n+        SyncopeClientCompositeErrorException compositeException =\r\n+                new SyncopeClientCompositeErrorException(response.getStatusCode());\r\n \r\n         Set<String> handledExceptions = new HashSet<String>();\r\n         for (String exceptionTypeAsString : exceptionTypesInHeaders) {\r"},{"sha":"6cb407f1bcab40b002fa4e1c3a09b8d068b9786c","filename":"console/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -16,7 +16,6 @@ software distributed under the License is distributed on an\n KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n-\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n@@ -233,7 +232,6 @@ under the License.\n                   <patternset>\n                     <exclude name=\"**/content.xml\" />\n                     <exclude name=\"**/persistence.properties\" />\n-                    <exclude name=\"**/workflow.properties\" />\n                   </patternset>\n                 </unzip>\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\" />"},{"sha":"636bc2951587a4cad909704aba98c5ec061627d6","filename":"core/pom.xml","status":"modified","additions":1,"deletions":27,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -438,7 +438,6 @@ under the License.\n                   <patternset>\n                     <exclude name=\"**/content.xml\"/>\n                     <exclude name=\"**/persistence.properties\"/>\n-                    <exclude name=\"**/workflow.properties\"/>\n                   </patternset>\n                 </unzip>\n                 <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncActions.class\" \n@@ -793,7 +792,6 @@ under the License.\n                     <excludes>\n                       <exclude>content.xml</exclude>\n                       <exclude>persistence.properties</exclude>\n-                      <exclude>workflow.properties</exclude>\n                     </excludes>\n                   </resource>\n                 </resources>\n@@ -887,37 +885,13 @@ under the License.\n       </properties>\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n-\n-        <plugins>\n-          \n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-antrun-plugin</artifactId>\n-            <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>remove-activiti</id>\n-                <phase>process-test-resources</phase>\n-                <configuration>\n-                  <target>\n-                    <copy tofile=\"${project.build.directory}/classes/workflowContext.xml\" \n-                          file=\"${basedir}/src/test/resources/noopworkflow/workflowContext.xml\" \n-                          overwrite=\"true\"/>\n-                  </target>\n-                </configuration>\n-                <goals>\n-                  <goal>run</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n         \n         <testResources>\n           <testResource>\n             <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n             <excludes>\n+              <exclude>workflowContext.xml</exclude>\n               <exclude>workflow.properties</exclude>\n             </excludes>\n           </testResource>"},{"sha":"13618a344a4b40c81a5f3565a9bbde09a3a9e648","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -19,10 +19,8 @@\n package org.apache.syncope.core.init;\n \n import javax.servlet.ServletContext;\n-\n import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n-import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n@@ -48,21 +46,21 @@ public class SpringContextInitializer implements ServletContextAware, Initializi\n \n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n-    \n+\n     @Autowired\n-    private WorkflowAdapterLoader workflowSetup;\n+    private WorkflowAdapterLoader workflowAdapterLoader;\n \n     @Override\n     public void setServletContext(final ServletContext servletContext) {\n     }\n \n     @Override\n     public void afterPropertiesSet() throws Exception {\n-        contentLoader.load(ActivitiDetector.isActivitiEnabledForUsers());\n+        contentLoader.load(workflowAdapterLoader.getInitSQLStatements());\n         connInstanceLoader.load();\n         jobInstanceLoader.load();\n         loggerLoader.load();\n         classNamesLoader.load();\n-        workflowSetup.load();\n+        workflowAdapterLoader.load();\n     }\n }"},{"sha":"89b7a3d03a01a2b2c56e39461a4f6e71a021c264","filename":"core/src/main/java/org/apache/syncope/core/init/WorkflowAdapterLoader.java","status":"modified","additions":36,"deletions":9,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FWorkflowAdapterLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FWorkflowAdapterLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FWorkflowAdapterLoader.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -21,6 +21,8 @@\n import org.apache.syncope.core.workflow.WorkflowInstanceLoader;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.BeanFactory;\n import org.springframework.beans.factory.BeanFactoryAware;\n@@ -31,6 +33,9 @@\n \n @Component\n public class WorkflowAdapterLoader implements BeanFactoryAware {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(WorkflowAdapterLoader.class);\n+\n     @Autowired\n     private UserWorkflowAdapter uwfAdapter;\n \n@@ -39,20 +44,42 @@ public class WorkflowAdapterLoader implements BeanFactoryAware {\n \n     private DefaultListableBeanFactory beanFactory;\n \n+    private WorkflowInstanceLoader wfLoader;\n+\n     @Override\n     public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n         this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n     }\n-    \n-    public void load() {\n-        if (uwfAdapter.getLoaderClass() != null) {\n-            final WorkflowInstanceLoader wfLoader = (WorkflowInstanceLoader) beanFactory.createBean(\n-                    uwfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n-            wfLoader.load();\n+\n+    private void lazyInit() {\n+        if (wfLoader == null) {\n+            if (uwfAdapter.getLoaderClass() != null) {\n+                wfLoader = (WorkflowInstanceLoader) beanFactory.createBean(\n+                        uwfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+            }\n+            if (rwfAdapter.getLoaderClass() != null) {\n+                wfLoader = (WorkflowInstanceLoader) beanFactory.createBean(\n+                        rwfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+            }\n         }\n-        if (rwfAdapter.getLoaderClass() != null) {\n-            final WorkflowInstanceLoader wfLoader = (WorkflowInstanceLoader) beanFactory.createBean(\n-                    rwfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+    }\n+\n+    public String getTablePrefix() {\n+        lazyInit();\n+        return wfLoader == null ? null : wfLoader.getTablePrefix();\n+    }\n+\n+    public String[] getInitSQLStatements() {\n+        lazyInit();\n+        return wfLoader == null ? null : wfLoader.getInitSQLStatements();\n+    }\n+\n+    public void load() {\n+        lazyInit();\n+        if (wfLoader == null) {\n+            LOG.debug(\"Configured workflow adapter does not need loading\");\n+        } else {\n+            LOG.debug(\"Loading workflow adapter by {}\", wfLoader.getClass().getName());\n             wfLoader.load();\n         }\n     }"},{"sha":"4ad573a12ba69ad42668c9e94a71d28680b7a3c7","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ContentLoader.java","status":"modified","additions":8,"deletions":32,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -47,10 +47,6 @@ public class ContentLoader {\n \n     private static final String INDEXES_FILE = \"/indexes.xml\";\n \n-    private static final String CONTENT_FILE = \"/content.xml\";\n-\n-    private static final String ACTIVITY_CONTENT_FILE = \"/activiticontent.xml\";\n-\n     private static final Logger LOG = LoggerFactory.getLogger(ContentLoader.class);\n \n     @Autowired\n@@ -60,7 +56,7 @@ public class ContentLoader {\n     private ImportExport importExport;\n \n     @Transactional\n-    public void load(final boolean activitiEnabledForUsers) {\n+    public void load(final String[] wfInitSQLStatements) {\n         Connection conn = null;\n         try {\n             conn = DataSourceUtils.getConnection(dataSource);\n@@ -73,13 +69,7 @@ public void load(final boolean activitiEnabledForUsers) {\n \n                 createViews(conn);\n                 createIndexes(conn);\n-                if (activitiEnabledForUsers) {\n-                    deleteActivitiProperties(conn);\n-                }\n-                loadDefaultContent(CONTENT_FILE);\n-                if (activitiEnabledForUsers) {\n-                    loadDefaultContent(ACTIVITY_CONTENT_FILE);\n-                }\n+                loadDefaultContent(wfInitSQLStatements);\n             }\n         } finally {\n             DataSourceUtils.releaseConnection(conn, dataSource);\n@@ -149,9 +139,7 @@ private void createViews(final Connection conn) {\n         } catch (Exception e) {\n             LOG.error(\"While creating views\", e);\n         } finally {\n-            if (viewsStream != null) {\n-                IOUtils.closeQuietly(viewsStream);\n-            }\n+            IOUtils.closeQuietly(viewsStream);\n         }\n     }\n \n@@ -184,33 +172,21 @@ private void createIndexes(final Connection conn) {\n         }\n     }\n \n-    private void deleteActivitiProperties(final Connection conn) {\n-        PreparedStatement statement = null;\n-        try {\n-            statement = conn.prepareStatement(\"DELETE FROM ACT_GE_PROPERTY\");\n-            statement.executeUpdate();\n-        } catch (SQLException e) {\n-            LOG.error(\"Error during ACT_GE_PROPERTY delete rows\", e);\n-        } finally {\n-            closeStatement(statement);\n-        }\n-    }\n-\n-    private void loadDefaultContent(final String contentPath) {\n+    private void loadDefaultContent(final String[] wfInitSQLStatements) {\n         SAXParserFactory factory = SAXParserFactory.newInstance();\n         InputStream in = null;\n         try {\n-            in = getClass().getResourceAsStream(contentPath);\n+            in = getClass().getResourceAsStream(\"/\" + ImportExport.CONTENT_FILE);\n+\n+            importExport.setWfInitSQLStatements(wfInitSQLStatements);\n \n             SAXParser parser = factory.newSAXParser();\n             parser.parse(in, importExport);\n             LOG.debug(\"Default content successfully loaded\");\n         } catch (Exception e) {\n             LOG.error(\"While loading default content\", e);\n         } finally {\n-            if (in != null) {\n-                IOUtils.closeQuietly(in);\n-            }\n+            IOUtils.closeQuietly(in);\n         }\n     }\n "},{"sha":"fdf9bdfa4ffc6d04b849db08b4174edfe8f545b6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -24,16 +24,15 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n-\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.ConfigurationSubCategory;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n+import org.apache.syncope.core.init.WorkflowAdapterLoader;\n import org.apache.syncope.core.persistence.beans.SyncopeConf;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n@@ -75,6 +74,9 @@ public class ConfigurationController extends AbstractController {\n     @Autowired\n     private ResourcePatternResolver resResolver;\n \n+    @Autowired\n+    private WorkflowAdapterLoader wfAdapterLoader;\n+\n     @PreAuthorize(\"hasRole('CONFIGURATION_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/create\")\n     public ConfigurationTO create(final HttpServletResponse response,\n@@ -209,7 +211,7 @@ public ModelAndView getMailTemplates() {\n     @Transactional(readOnly = true)\n     public void dbExport(final HttpServletResponse response) {\n         response.setContentType(MediaType.TEXT_XML_VALUE);\n-        response.setHeader(\"Content-Disposition\", \"attachment; filename=content.xml\");\n+        response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + ImportExport.CONTENT_FILE);\n         try {\n             dbExportInternal(response.getOutputStream());\n         } catch (IOException e) {\n@@ -218,9 +220,9 @@ public void dbExport(final HttpServletResponse response) {\n     }\n \n     @Transactional(readOnly = true)\n-    public void dbExportInternal(OutputStream os) {\n+    public void dbExportInternal(final OutputStream os) {\n         try {\n-            importExport.export(os);\n+            importExport.export(os, wfAdapterLoader.getTablePrefix());\n \n             auditManager.audit(Category.configuration, ConfigurationSubCategory.dbExport, Result.success,\n                     \"Successfully exported database content\");"},{"sha":"029b5e87947d29d9e11ec36fba91906d497b7b9b","filename":"core/src/main/java/org/apache/syncope/core/util/ImportExport.java","status":"modified","additions":71,"deletions":33,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -33,6 +33,7 @@\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n@@ -53,6 +54,8 @@\n import javax.xml.transform.sax.TransformerHandler;\n import javax.xml.transform.stream.StreamResult;\n import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang.SerializationUtils;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.time.DateUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.core.util.multiparent.MultiParentNode;\n@@ -71,14 +74,13 @@\n @Component\n public class ImportExport extends DefaultHandler {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(ImportExport.class);\n \n-    private final static String ROOT_ELEMENT = \"dataset\";\n+    public static final String CONTENT_FILE = \"content.xml\";\n \n-    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n+    private static final String ROOT_ELEMENT = \"dataset\";\n+\n+    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n \n         @Override\n         protected SimpleDateFormat initialValue() {\n@@ -92,6 +94,27 @@ protected SimpleDateFormat initialValue() {\n     @Autowired\n     private DataSource dataSource;\n \n+    private final Set<String> tablePrefixesToBeExcluded = new HashSet<String>(\n+            Arrays.asList(new String[]{\"QRTZ_\", \"LOGGING\", \"REPORTEXEC\", \"TASKEXEC\",\n+                \"SYNCOPEUSER\", \"UATTR\", \"UATTRVALUE\", \"UATTRUNIQUEVALUE\", \"UDERATTR\", \"UVIRATTR\",\n+                \"MEMBERSHIP\", \"MATTR\", \"MATTRVALUE\", \"MATTRUNIQUEVALUE\", \"MDERATTR\", \"MVIRATTR\"}));\n+\n+    private final Map<String, String> tablesTobeFiltered =\n+            Collections.singletonMap(\"TASK\", \"DTYPE <> 'PropagationTask'\");\n+\n+    private final Map<String, Set<String>> columnsToBeNullified =\n+            Collections.singletonMap(\"SYNCOPEROLE\", Collections.singleton(\"USEROWNER_ID\"));\n+\n+    private String[] wfInitSQLStatements;\n+\n+    public void setWfInitSQLStatements(final String[] wfInitSQLStatements) {\n+        if (wfInitSQLStatements == null) {\n+            this.wfInitSQLStatements = new String[0];\n+        } else {\n+            this.wfInitSQLStatements = (String[]) SerializationUtils.clone(wfInitSQLStatements);\n+        }\n+    }\n+\n     private String readSchema() {\n         String schema = null;\n \n@@ -108,13 +131,7 @@ private String readSchema() {\n                 LOG.error(\"Could not find persistence.properties\");\n             }\n         } finally {\n-            if (dbPropsStream != null) {\n-                try {\n-                    dbPropsStream.close();\n-                } catch (IOException e) {\n-                    LOG.error(\"While trying to read persistence.properties\", e);\n-                }\n-            }\n+            IOUtils.closeQuietly(dbPropsStream);\n         }\n \n         return schema;\n@@ -263,8 +280,14 @@ private void setParameters(final String tableName, final Attributes attrs, final\n     public void startElement(final String uri, final String localName, final String qName, final Attributes atts)\n             throws SAXException {\n \n-        // skip root element\n+        // skip root element and perform workflow init statements\n         if (ROOT_ELEMENT.equals(qName)) {\n+            if (wfInitSQLStatements != null) {\n+                for (String wfInitSQLStmt : wfInitSQLStatements) {\n+                    Query query = entityManager.createNativeQuery(wfInitSQLStmt);\n+                    query.executeUpdate();\n+                }\n+            }\n             return;\n         }\n \n@@ -288,15 +311,14 @@ public void startElement(final String uri, final String localName, final String\n         query.executeUpdate();\n     }\n \n-    private void doExportTable(final TransformerHandler handler, final Connection conn, final String tableName)\n-            throws SQLException, SAXException {\n+    private void doExportTable(final TransformerHandler handler, final Connection conn, final String tableName,\n+            final String whereClause) throws SQLException, SAXException {\n \n         AttributesImpl attrs = new AttributesImpl();\n \n         PreparedStatement stmt = null;\n         ResultSet rs = null;\n         ResultSet pkeyRS = null;\n-\n         try {\n             // ------------------------------------\n             // retrieve primary keys to perform an ordered select\n@@ -308,7 +330,6 @@ private void doExportTable(final TransformerHandler handler, final Connection co\n \n             while (pkeyRS.next()) {\n                 final String columnName = pkeyRS.getString(\"COLUMN_NAME\");\n-\n                 if (columnName != null) {\n                     if (orderBy.length() > 0) {\n                         orderBy.append(\",\");\n@@ -319,23 +340,30 @@ private void doExportTable(final TransformerHandler handler, final Connection co\n             }\n \n             // ------------------------------------\n-            stmt = conn.prepareStatement(\n-                    \"SELECT * FROM \" + tableName + \" a\" + (orderBy.length() > 0 ? \" ORDER BY \" + orderBy : \"\"));\n+            StringBuilder query = new StringBuilder();\n+            query.append(\"SELECT * FROM \").append(tableName).append(\" a\");\n+            if (StringUtils.isNotBlank(whereClause)) {\n+                query.append(\" WHERE \").append(whereClause);\n+            }\n+            if (orderBy.length() > 0) {\n+                query.append(\" ORDER BY \").append(orderBy);\n+            }\n+            stmt = conn.prepareStatement(query.toString());\n \n             rs = stmt.executeQuery();\n-            for (int rowNo = 0; rs.next(); rowNo++) {\n+            while (rs.next()) {\n                 attrs.clear();\n \n                 final ResultSetMetaData rsMeta = rs.getMetaData();\n-\n                 for (int i = 0; i < rsMeta.getColumnCount(); i++) {\n                     final String columnName = rsMeta.getColumnName(i + 1);\n                     final Integer columnType = rsMeta.getColumnType(i + 1);\n \n                     // Retrieve value taking care of binary values.\n                     String value = getValues(rs, columnName, columnType);\n+                    if (value != null && (!columnsToBeNullified.containsKey(tableName)\n+                            || !columnsToBeNullified.get(tableName).contains(columnName))) {\n \n-                    if (value != null) {\n                         attrs.addAttribute(\"\", \"\", columnName, \"CDATA\", value);\n                     }\n                 }\n@@ -381,19 +409,16 @@ private List<String> sortByForeignKeys(final Connection conn, final Set<String>\n         final Set<String> pkTableNames = new HashSet<String>();\n \n         for (String tableName : tableNames) {\n-\n             MultiParentNode<String> node = exploited.get(tableName);\n-\n             if (node == null) {\n                 node = new MultiParentNode<String>(tableName);\n                 roots.add(node);\n                 exploited.put(tableName, node);\n             }\n \n-            ResultSet rs = null;\n-\n             pkTableNames.clear();\n \n+            ResultSet rs = null;\n             try {\n                 rs = meta.getImportedKeys(conn.getCatalog(), readSchema(), tableName);\n \n@@ -413,9 +438,7 @@ private List<String> sortByForeignKeys(final Connection conn, final Set<String>\n \n             for (String pkTableName : pkTableNames) {\n                 if (!tableName.equalsIgnoreCase(pkTableName)) {\n-\n                     MultiParentNode<String> pkNode = exploited.get(pkTableName);\n-\n                     if (pkNode == null) {\n                         pkNode = new MultiParentNode<String>(pkTableName);\n                         roots.add(pkNode);\n@@ -435,12 +458,29 @@ private List<String> sortByForeignKeys(final Connection conn, final Set<String>\n         MultiParentNodeOp.traverseTree(roots, sortedTableNames);\n \n         Collections.reverse(sortedTableNames);\n+        // remove from sortedTableNames any table possibly added during lookup \n+        // but matching some item in this.tablePrefixesToBeExcluded\n+        sortedTableNames.retainAll(tableNames);\n         return sortedTableNames;\n     }\n \n-    public void export(final OutputStream os)\n+    private boolean isTableAllowed(final String tableName) {\n+        boolean allowed = true;\n+        for (String prefix : tablePrefixesToBeExcluded) {\n+            if (tableName.toUpperCase().startsWith(prefix)) {\n+                allowed = false;\n+            }\n+        }\n+        return allowed;\n+    }\n+\n+    public void export(final OutputStream os, final String wfTablePrefix)\n             throws SAXException, TransformerConfigurationException {\n \n+        if (StringUtils.isNotBlank(wfTablePrefix)) {\n+            tablePrefixesToBeExcluded.add(wfTablePrefix);\n+        }\n+\n         StreamResult streamResult = new StreamResult(os);\n         final SAXTransformerFactory transformerFactory = (SAXTransformerFactory) SAXTransformerFactory.newInstance();\n \n@@ -466,16 +506,14 @@ public void export(final OutputStream os)\n \n             while (rs.next()) {\n                 String tableName = rs.getString(\"TABLE_NAME\");\n-\n-                // these tables must be ignored\n-                if (!tableName.toUpperCase().startsWith(\"QRTZ_\") && !tableName.toUpperCase().startsWith(\"LOGGING_\")) {\n+                if (isTableAllowed(tableName)) {\n                     tableNames.add(tableName);\n                 }\n             }\n \n             // then sort tables based on foreign keys and dump\n             for (String tableName : sortByForeignKeys(conn, tableNames, schema)) {\n-                doExportTable(handler, conn, tableName);\n+                doExportTable(handler, conn, tableName, tablesTobeFiltered.get(tableName.toUpperCase()));\n             }\n         } catch (SQLException e) {\n             LOG.error(\"While exporting database content\", e);"},{"sha":"b4383d5ca4d78256682904b251eb430a4718b659","filename":"core/src/main/java/org/apache/syncope/core/util/multiparent/MultiParentNode.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fmultiparent%2FMultiParentNode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fmultiparent%2FMultiParentNode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fmultiparent%2FMultiParentNode.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -20,7 +20,6 @@\n \n import java.util.HashSet;\n import java.util.Set;\n-\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n "},{"sha":"86ab8f593fb03fef195ef93a0322e803f4e8587c","filename":"core/src/main/java/org/apache/syncope/core/workflow/ActivitiDetector.java","status":"modified","additions":22,"deletions":9,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FActivitiDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FActivitiDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FActivitiDetector.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -21,22 +21,29 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n-\n+import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\n import org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n public class ActivitiDetector {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(ActivitiDetector.class);\n+\n+    private static final String XX = \"/workflow.properties\";\n+\n     private static String uwfAdapterClassName;\n+\n     private static String rwfAdapterClassName;\n \n+    private static String activitiVersion;\n+\n     static {\n         try {\n-            initWFAdapterClassNames();\n+            init();\n         } catch (IOException e) {\n-            LOG.error(\"Could not init uwfAdapterClassName\", e);\n+            LOG.error(\"Could not read from {}\", XX, e);\n         }\n     }\n \n@@ -45,20 +52,19 @@ public class ActivitiDetector {\n      *\n      * @throws IOException if anything goes wrong\n      */\n-    private static void initWFAdapterClassNames() throws IOException {\n+    private static void init() throws IOException {\n         Properties props = new java.util.Properties();\n         InputStream propStream = null;\n         try {\n-            propStream = ContentLoader.class.getResourceAsStream(\"/workflow.properties\");\n+            propStream = ContentLoader.class.getResourceAsStream(XX);\n             props.load(propStream);\n             uwfAdapterClassName = props.getProperty(\"uwfAdapter\");\n             rwfAdapterClassName = props.getProperty(\"rwfAdapter\");\n+            activitiVersion = props.getProperty(\"activitiVersion\");\n         } catch (Exception e) {\n             LOG.error(\"Could not load workflow.properties\", e);\n         } finally {\n-            if (propStream != null) {\n-                propStream.close();\n-            }\n+            IOUtils.closeQuietly(propStream);\n         }\n     }\n \n@@ -70,7 +76,7 @@ private static void initWFAdapterClassNames() throws IOException {\n     public static boolean isActivitiEnabledForUsers() {\n         return uwfAdapterClassName != null && uwfAdapterClassName.equals(ActivitiUserWorkflowAdapter.class.getName());\n     }\n-    \n+\n     /**\n      * Check if the configured role workflow adapter is Activiti's.\n      *\n@@ -81,4 +87,11 @@ public static boolean isActivitiEnabledForRoles() {\n         //return rwfAdapterClassName != null && rwfAdapterClassName.equals(ActivitiRoleWorkflowAdapter.class.getName());\n         return false;\n     }\n+\n+    /**\n+     * @return the version of Activiti packages, as configured in Maven\n+     */\n+    public static String getActivitiVersion() {\n+        return activitiVersion;\n+    }\n }"},{"sha":"bfbd642510adba34c3a61bdf3cd6ab2cbe8c3e48","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowAdapter.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import java.util.Map;\n-\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;"},{"sha":"71da1606b6d834a6d9c7d4b411d4188077b124c7","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowInstanceLoader.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInstanceLoader.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -21,4 +21,8 @@\n public interface WorkflowInstanceLoader {\n \n     void load();\n+\n+    String getTablePrefix();\n+\n+    String[] getInitSQLStatements();\n }"},{"sha":"61cd1d36471a3805f6f66424a1ada1f56e90142c","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiWorkflowLoader.java","status":"modified","additions":24,"deletions":10,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.core.workflow.user.activiti;\n \n-import java.io.IOException;\n import java.io.InputStream;\n+import java.util.ArrayList;\n import java.util.List;\n-\n import org.activiti.engine.RepositoryService;\n import org.activiti.engine.repository.ProcessDefinition;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.apache.syncope.core.workflow.WorkflowInstanceLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -36,6 +37,26 @@ public class ActivitiWorkflowLoader implements WorkflowInstanceLoader {\n     @Autowired\n     private RepositoryService repositoryService;\n \n+    @Override\n+    public String getTablePrefix() {\n+        return \"ACT_\";\n+    }\n+\n+    @Override\n+    public String[] getInitSQLStatements() {\n+        final List<String> initSQLStatements = new ArrayList<String>();\n+\n+        initSQLStatements.add(\"DELETE FROM ACT_GE_PROPERTY\");\n+        initSQLStatements.add(\"INSERT INTO ACT_GE_PROPERTY(NAME_, VALUE_, REV_) \"\n+                + \"VALUES('schema.version', '\" + ActivitiDetector.getActivitiVersion() + \"', 1)\");\n+        initSQLStatements.add(\"INSERT INTO ACT_GE_PROPERTY(NAME_, VALUE_, REV_) \"\n+                + \"VALUES('schema.history', 'create(\" + ActivitiDetector.getActivitiVersion() + \")', 1)\");\n+        initSQLStatements.add(\"INSERT INTO ACT_GE_PROPERTY(NAME_, VALUE_, REV_) VALUES('next.dbid', '1', 1)\");\n+        initSQLStatements.add(\"INSERT INTO ACT_GE_PROPERTY(NAME_, VALUE_, REV_) VALUES('historyLevel', '1', 1)\");\n+\n+        return initSQLStatements.toArray(new String[initSQLStatements.size()]);\n+    }\n+\n     @Override\n     public void load() {\n         List<ProcessDefinition> processes = repositoryService.createProcessDefinitionQuery().processDefinitionKey(\n@@ -52,14 +73,7 @@ public void load() {\n                 repositoryService.createDeployment().addInputStream(\n                         ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, wfDefinitionStream).deploy();\n             } finally {\n-                if (wfDefinitionStream != null) {\n-                    try {\n-                        wfDefinitionStream.close();\n-                    } catch (IOException e) {\n-                        LOG.error(\"While closing input stream for {}\",\n-                                ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n-                    }\n-                }\n+                IOUtils.closeQuietly(wfDefinitionStream);;\n             }\n         }\n     }"},{"sha":"f078fe1baae1bee185ddff61dac7d44b38805a7d","filename":"core/src/main/resources/activiticontent.xml","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3028c41e3787e5d8b052209d8442d7fb1f3706b9/core%2Fsrc%2Fmain%2Fresources%2Factiviticontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3028c41e3787e5d8b052209d8442d7fb1f3706b9/core%2Fsrc%2Fmain%2Fresources%2Factiviticontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Factiviticontent.xml?ref=3028c41e3787e5d8b052209d8442d7fb1f3706b9","patch":"@@ -1,25 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<dataset>\n-  <ACT_GE_PROPERTY NAME_=\"schema.version\" VALUE_=\"${activiti.version}\" REV_=\"1\"/>\n-  <ACT_GE_PROPERTY NAME_=\"schema.history\" VALUE_=\"create(${activiti.version})\" REV_=\"1\"/>\n-  <ACT_GE_PROPERTY NAME_=\"next.dbid\" VALUE_=\"1\" REV_=\"1\"/>\n-  <ACT_GE_PROPERTY NAME_=\"historyLevel\" VALUE_=\"1\" REV_=\"1\"/>    \n-</dataset>"},{"sha":"19ec32a211581699c2e192b01dc175909b48265f","filename":"core/src/main/resources/workflow.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -17,3 +17,4 @@\n uwfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n rwfAdapter=org.apache.syncope.core.workflow.role.NoOpRoleWorkflowAdapter\n jobExecutorActivate=true\n+activitiVersion=${activiti.version}"},{"sha":"6b9d269db00ee47594f066f1496219cc26bede14","filename":"core/src/test/java/org/apache/syncope/core/AbstractTest.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -23,6 +23,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n+import org.apache.commons.io.IOUtils;\n import org.junit.BeforeClass;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -50,9 +51,7 @@ public static void setUpIdentityConnectorsBundles() throws IOException {\n         } catch (Exception e) {\n             LOG.error(\"Could not load bundles.properties\", e);\n         } finally {\n-            if (propStream != null) {\n-                propStream.close();\n-            }\n+            IOUtils.closeQuietly(propStream);\n         }\n         assertNotNull(connidSoapVersion);\n         assertNotNull(bundlesDirectory);"},{"sha":"ceece32714e44b12497575255c9741f7eeace21f","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/impl/TestDbInitializer.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTestDbInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTestDbInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTestDbInitializer.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -18,27 +18,21 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import javax.servlet.ServletContext;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-import org.springframework.web.context.ServletContextAware;\n \n /**\n  * Take care of all initializations needed by Syncope to run up and safe for tests.\n  */\n @Component\n-public class TestDbInitializer implements ServletContextAware, InitializingBean {\n+public class TestDbInitializer implements InitializingBean {\n \n     @Autowired\n     private ContentLoader contentLoader;\n \n-    @Override\n-    public void setServletContext(final ServletContext servletContext) {\n-    }\n-\n     @Override\n     public void afterPropertiesSet() throws Exception {\n-        contentLoader.load(false);\n+        contentLoader.load(null);\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"f553fae57f678ed5fe27d962ed29f4a58263c773","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -89,7 +89,7 @@\n import org.springframework.web.client.RestTemplate;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = { \"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\" })\n+@ContextConfiguration(locations = {\"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\"})\n public abstract class AbstractTest {\n \n     /**\n@@ -104,7 +104,9 @@ public abstract class AbstractTest {\n     protected static final String ADMIN_PWD = \"password\";\n \n     public static final String CONTENT_TYPE_JSON = \"application/json\";\n+\n     public static final String CONTENT_TYPE_XML = \"application/xml\";\n+\n     public static final String DEFAULT_CONTENT_TYPE = CONTENT_TYPE_JSON;\n \n     private static final String ENV_KEY_CONTENT_TYPE = \"jaxrsContentType\";\n@@ -205,7 +207,6 @@ protected void resetRestTemplate() {\n     }\n \n     // END Spring MVC Initialization\n-\n     // BEGIN CXF Initialization\n     public void setupCXFServices() throws Exception {\n         userService = createServiceInstance(UserService.class);\n@@ -261,9 +262,9 @@ public void setupContentType(final Client restClient) {\n     }\n \n     // END CXF Initialization\n-\n     @SuppressWarnings(\"unchecked\")\n-    public <T> T setupCredentials(final T proxy, final Class<?> serviceInterface, final String username, final String password) {\n+    public <T> T setupCredentials(final T proxy, final Class<?> serviceInterface, final String username,\n+            final String password) {\n         if (proxy instanceof SpringServiceProxy) {\n             SpringServiceProxy service = (SpringServiceProxy) proxy;\n             if (username == null && password == null) {\n@@ -285,10 +286,10 @@ public <T> T setupCredentials(final T proxy, final Class<?> serviceInterface, fi\n     public <T> T getObject(final Response response, final Class<T> type, final Object serviceProxy) {\n         assertNotNull(response);\n         assertNotNull(response.getLocation());\n-        if (!enabledCXF) {\n-            return getObjectSpring(response, type);\n-        } else {\n+        if (enabledCXF) {\n             return getObjectCXF(response, type, serviceProxy);\n+        } else {\n+            return getObjectSpring(response, type);\n         }\n     }\n \n@@ -366,7 +367,7 @@ <T extends AbstractSchemaTO> Response createSchema(final AttributableType kind,\n         }\n         return response;\n     }\n-    \n+\n     protected RoleTO createRole(RoleService roleService, RoleTO newRoleTO) {\n         Response response = roleService.create(newRoleTO);\n         if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n@@ -378,7 +379,6 @@ protected RoleTO createRole(RoleService roleService, RoleTO newRoleTO) {\n         return getObject(response, RoleTO.class, roleService);\n     }\n \n-\n     protected Response createPolicy(PolicyService policyService, PolicyType policyType, PolicyTO policy) {\n         Response response = policyService.create(policyType, policy);\n         if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {"},{"sha":"e3084a3296c432b8e858ef49a3db85052e502aea","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -19,18 +19,22 @@\n package org.apache.syncope.core.rest;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n import java.util.List;\n-\n import javax.ws.rs.core.Response;\n-\n+import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n import org.springframework.web.client.HttpStatusCodeException;\n \n @FixMethodOrder(MethodSorters.JVM)\n@@ -104,4 +108,17 @@ public void update() {\n         newConfigurationTO = configurationService.read(\"token.expireTime\");\n         assertEquals(configurationTO, newConfigurationTO);\n     }\n+\n+    @Test\n+    public void dbExport() throws IOException {\n+        Response response = configurationService.dbExport();\n+        assertNotNull(response);\n+        assertNotNull(response.getLocation());\n+        assertTrue(response.getHeaderString(\"Content-Type\").startsWith(MediaType.TEXT_XML_VALUE));\n+        assertNotNull(response.getHeaderString(\"Content-Disposition\"));\n+\n+        Object entity = response.getEntity();\n+        assertTrue(entity instanceof InputStream);\n+        assertFalse(IOUtils.toString((InputStream) entity, \"UTF-8\").isEmpty());\n+    }\n }"},{"sha":"f19b68c3fcf9f27926c8af0070173ae0d5727784","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -29,9 +29,7 @@\n import java.net.HttpURLConnection;\n import java.net.URL;\n import java.util.List;\n-\n import javax.ws.rs.core.Response;\n-\n import org.apache.commons.codec.binary.Base64;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.report.UserReportletConf;\n@@ -159,6 +157,7 @@ public void delete() {\n \n     private void checkExport(final long execId, final String fmt, final String encodedAuth)\n             throws IOException {\n+\n         URL url = new URL(BASE_URL + \"report/execution/export/\" + execId + \"?fmt=\" + fmt);\n         int responseCode = 0;\n         String export = null;\n@@ -186,7 +185,6 @@ private void checkExport(final long execId, final String fmt, final String encod\n \n     @Test\n     public void executeAndExport() throws IOException {\n-\n         ReportTO reportTO = reportService.read(1L);\n         reportTO.setId(0);\n         reportTO.setName(\"executeAndExport\" + getUUIDString());"},{"sha":"05dc51ba1fc314cc1a527dcbb5624c2fc960fb6e","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -27,7 +27,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n-\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.search.AttributableCond;\n import org.apache.syncope.common.search.AttributeCond;\n@@ -54,7 +53,6 @@\n import org.apache.syncope.common.types.TraceLevel;\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.impl.SyncJob;\n-import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -283,14 +281,12 @@ public void sync() {\n \n             execSyncTask(SYNC_TASK_ID, 50, false);\n \n-            // after execution of the sync task the user data should be synced\n-            // from\n+            // after execution of the sync task the user data should be synced from\n             // csv datasource and processed by user template\n             UserTO userTO = userService.read(inUserTO.getId());\n             assertNotNull(userTO);\n             assertEquals(\"test9\", userTO.getUsername());\n-            assertEquals(ActivitiDetector.isActivitiEnabledForUsers() ? \"active\"\n-                    : \"created\", userTO.getStatus());\n+            assertEquals(\"active\", userTO.getStatus());\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"email\").getValues().get(0));\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n             assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);"},{"sha":"de47f26c863dc0104b23b3fa6a0320359bf9a596","filename":"core/src/test/resources/content.xml","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -762,19 +762,12 @@ under the License.\n                 xmlAbout=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n                 xmlRecipients=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n                 recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n-  <!--Notification id=\"101\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n-  xmlAbout=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n-  xmlRecipients=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n-  recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/-->\n   <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n   <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n-  <!--Notification_events Notification_id=\"101\" events=\"unexisting1\"/-->\n-  <!--Notification_events Notification_id=\"101\" events=\"unexisting2\"/-->\n     \n   <Report id=\"1\" name=\"test\"/>\n   <ReportletConfInstance id=\"1\" Report_id=\"1\" serializedInstance=\"%3Corg.apache.syncope.common.report.UserReportletConf%3E%0A++%3Cname%3EtestUserReportlet%3C%2Fname%3E%0A++%3Cattrs%3E%0A++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++%3Cstring%3Egender%3C%2Fstring%3E%0A++%3C%2Fattrs%3E%0A++%3CderAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Ecn%3C%2Fstring%3E%0A++%3C%2FderAttrs%3E%0A++%3CvirAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Evirtualdata%3C%2Fstring%3E%0A++%3C%2FvirAttrs%3E%0A++%3Cfeatures+class%3D%22java.util.Arrays%24ArrayList%22%3E%0A++++%3Ca+class%3D%22org.apache.syncope.common.report.UserReportletConf%24Feature-array%22%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eid%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eusername%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EworkflowId%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Estatus%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EcreationDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3ElastLoginDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EchangePwdDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EpasswordHistorySize%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EfailedLoginCount%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Ememberships%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eresources%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++%3C%2Fa%3E%0A++%3C%2Ffeatures%3E%0A%3C%2Forg.apache.syncope.common.report.UserReportletConf%3E\"/>\n   <ReportExec Report_id=\"1\" id=\"1\" status=\"SUCCESS\" startDate=\"2012-02-26 15:40:04\" endDate=\"2012-02-26 15:41:04\"/>\n   \n   <SyncopeLogger logName=\"syncope.audit.authentication.getEntitlements.success\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n-\n </dataset>"},{"sha":"b847613fbb007ddfa736a280694363ee74588510","filename":"core/src/test/resources/noopworkflow/workflowContext.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/36a2b0bd551954d0364b279ddf50c541142904ee/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml?ref=36a2b0bd551954d0364b279ddf50c541142904ee","patch":"@@ -16,7 +16,6 @@ software distributed under the License is distributed on an\n KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n-\n -->\n <beans xmlns=\"http://www.springframework.org/schema/beans\" \n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n@@ -28,6 +27,7 @@ under the License.\n   </bean>\n     \n   <bean id=\"uwfAdapter\" class=\"${uwfAdapter}\"/>\n+  <bean id=\"rwfAdapter\" class=\"${rwfAdapter}\"/>\n \n   <bean id=\"velocityEngine\" class=\"org.springframework.ui.velocity.VelocityEngineFactoryBean\">\n     <property name=\"velocityProperties\">\n@@ -37,4 +37,4 @@ under the License.\n       </value>\n     </property>\n   </bean>\n-</beans>\n\\ No newline at end of file\n+</beans>"},{"sha":"05cfa04468cbcf970023e701eaf413d826d41ac8","filename":"core/src/test/resources/workflow.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3028c41e3787e5d8b052209d8442d7fb1f3706b9/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3028c41e3787e5d8b052209d8442d7fb1f3706b9/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties?ref=3028c41e3787e5d8b052209d8442d7fb1f3706b9","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-uwfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n-rwfAdapter=org.apache.syncope.core.workflow.role.NoOpRoleWorkflowAdapter\n-jobExecutorActivate=false"}]}