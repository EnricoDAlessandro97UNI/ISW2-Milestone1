{"sha":"71caff3320664a0ae4a1adb1d19396fde0a1251f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxY2FmZjMzMjA2NjRhMGFlNGExYWRiMWQxOTM5NmZkZTBhMTI1MWY=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-09-07T09:39:07Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-09-07T09:39:07Z"},"message":"Only mark Enum values as mandatory in the schema if the Enum type is selected.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1381960 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c530ae87c32b256319a45c572405450faff3b3e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c530ae87c32b256319a45c572405450faff3b3e4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/71caff3320664a0ae4a1adb1d19396fde0a1251f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71caff3320664a0ae4a1adb1d19396fde0a1251f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/71caff3320664a0ae4a1adb1d19396fde0a1251f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71caff3320664a0ae4a1adb1d19396fde0a1251f/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"a83b509f8af6b410a3b3a826bb279333098cbabb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a83b509f8af6b410a3b3a826bb279333098cbabb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a83b509f8af6b410a3b3a826bb279333098cbabb"}],"stats":{"total":11,"additions":10,"deletions":1},"files":[{"sha":"c3e9cf5319afe5fe99ba69388839d3ff19eaf281","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71caff3320664a0ae4a1adb1d19396fde0a1251f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71caff3320664a0ae4a1adb1d19396fde0a1251f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=71caff3320664a0ae4a1adb1d19396fde0a1251f","patch":"@@ -108,10 +108,12 @@ protected List<String> load() {\n         type.setChoices(Arrays.asList(SchemaType.values()));\n         type.addRequiredLabel();\n \n+        final AjaxTextFieldPanel enumerationValuesPanel = \n+            new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model(null));\n         final MultiValueSelectorPanel<String> enumerationValues =\n                 new MultiValueSelectorPanel<String>(\"enumerationValues\",\n                 new Model(),\n-                new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model(null)).addRequiredLabel());\n+                enumerationValuesPanel);\n         schemaForm.add(enumerationValues);\n \n         enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n@@ -127,6 +129,7 @@ protected List<String> load() {\n         if (schema != null && SchemaType.Enum.equals(((SchemaTO) schema).getType())) {\n             enumerationValues.setEnabled(Boolean.TRUE);\n             enumerationKeys.setEnabled(Boolean.TRUE);\n+            enumerationValuesPanel.addRequiredLabel();\n         } else {\n             enumerationValues.setEnabled(Boolean.FALSE);\n             enumerationKeys.setEnabled(Boolean.FALSE);\n@@ -138,12 +141,18 @@ protected List<String> load() {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 if (SchemaType.Enum.ordinal() == Integer.parseInt(type.getField().getValue())) {\n+                    if (!enumerationValuesPanel.isRequired()) {\n+                        enumerationValuesPanel.addRequiredLabel();\n+                    }\n                     enumerationValues.setEnabled(Boolean.TRUE);\n                     enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n \n                     enumerationKeys.setEnabled(Boolean.TRUE);\n                     enumerationKeys.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationKeys()));\n                 } else {\n+                    if (enumerationValuesPanel.isRequired()) {\n+                        enumerationValuesPanel.removeRequiredLabel();\n+                    }\n                     final List<String> values = new ArrayList<String>();\n                     values.add(\"\");\n "}]}