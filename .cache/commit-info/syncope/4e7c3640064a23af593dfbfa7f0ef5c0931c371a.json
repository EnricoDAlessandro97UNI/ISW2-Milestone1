{"sha":"4e7c3640064a23af593dfbfa7f0ef5c0931c371a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRlN2MzNjQwMDY0YTIzYWY1OTNkZmJmYTdmMGVmNWMwOTMxYzM3MWE=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-15T15:39:57Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-15T15:39:57Z"},"message":"Get the signature algorithm from the signature provider rather than hardcoding to HS512 to allow the user to plug in other implementations","tree":{"sha":"e34a58001e8708b44bddb7be5e5b73e3a5c131db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e34a58001e8708b44bddb7be5e5b73e3a5c131db"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4e7c3640064a23af593dfbfa7f0ef5c0931c371a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e7c3640064a23af593dfbfa7f0ef5c0931c371a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4e7c3640064a23af593dfbfa7f0ef5c0931c371a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e7c3640064a23af593dfbfa7f0ef5c0931c371a/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"991612c78c4020f95aa7523720ec9889db4602cc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/991612c78c4020f95aa7523720ec9889db4602cc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/991612c78c4020f95aa7523720ec9889db4602cc"}],"stats":{"total":9,"additions":4,"deletions":5},"files":[{"sha":"ae8856539ff2869b1d9f0190a0c4827f32ed8427","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AccessTokenDataBinderImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e7c3640064a23af593dfbfa7f0ef5c0931c371a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e7c3640064a23af593dfbfa7f0ef5c0931c371a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java?ref=4e7c3640064a23af593dfbfa7f0ef5c0931c371a","patch":"@@ -27,7 +27,6 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.rs.security.jose.common.JoseType;\n-import org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm;\n import org.apache.cxf.rs.security.jose.jws.JwsHeaders;\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactConsumer;\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactProducer;\n@@ -61,8 +60,6 @@ public class AccessTokenDataBinderImpl implements AccessTokenDataBinder {\n \n     private static final RandomBasedGenerator UUID_GENERATOR = Generators.randomBasedGenerator();\n \n-    private static final JwsHeaders JWS_HEADERS = new JwsHeaders(JoseType.JWT, SignatureAlgorithm.HS512);\n-\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -102,7 +99,8 @@ public Triple<String, String, Date> generateJWT(\n             jwtClaims.setClaim(entry.getKey(), entry.getValue());\n         }\n \n-        JwtToken token = new JwtToken(JWS_HEADERS, jwtClaims);\n+        JwsHeaders jwsHeaders = new JwsHeaders(JoseType.JWT, jwsSignatureProvider.getAlgorithm());\n+        JwtToken token = new JwtToken(jwsHeaders, jwtClaims);\n         JwsJwtCompactProducer producer = new JwsJwtCompactProducer(token);\n \n         String signed = producer.signWith(jwsSignatureProvider);\n@@ -169,7 +167,8 @@ public Pair<String, Date> update(final AccessToken accessToken) {\n                 confDAO.find(\"jwt.lifetime.minutes\", \"120\").getValues().get(0).getLongValue().intValue());\n         consumer.getJwtClaims().setExpiryTime(expiry.getTime().getTime());\n \n-        JwtToken token = new JwtToken(JWS_HEADERS, consumer.getJwtClaims());\n+        JwsHeaders jwsHeaders = new JwsHeaders(JoseType.JWT, jwsSignatureProvider.getAlgorithm());\n+        JwtToken token = new JwtToken(jwsHeaders, consumer.getJwtClaims());\n         JwsJwtCompactProducer producer = new JwsJwtCompactProducer(token);\n \n         String body = producer.signWith(jwsSignatureProvider);"}]}