{"sha":"96f59b765acf350fce7029efe2e84e65a8d6e5cb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2ZjU5Yjc2NWFjZjM1MGZjZTcwMjllZmUyZTg0ZTY1YThkNmU1Y2I=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-16T11:05:31Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-16T11:05:31Z"},"message":"Implemented generic workflow actions generateToken() and verifyToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246392 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ea1c126b0f84cee9744435508067b4ee0a7771a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6ea1c126b0f84cee9744435508067b4ee0a7771a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/96f59b765acf350fce7029efe2e84e65a8d6e5cb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96f59b765acf350fce7029efe2e84e65a8d6e5cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96f59b765acf350fce7029efe2e84e65a8d6e5cb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96f59b765acf350fce7029efe2e84e65a8d6e5cb/comments","author":null,"committer":null,"parents":[{"sha":"57fe282ad56b088cd08fcdd796be42e992c20df3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/57fe282ad56b088cd08fcdd796be42e992c20df3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/57fe282ad56b088cd08fcdd796be42e992c20df3"}],"stats":{"total":654,"additions":330,"deletions":324},"files":[{"sha":"93136c3b56ccedb029016c08520cac6615a64bce","filename":"core/pom.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -32,7 +32,7 @@\n \n     <properties>\n         <hsqldb.version>1.8.0.10</hsqldb.version>\n-                \n+\n         <cargo.servlet.port>8080</cargo.servlet.port>\n         <cargo.log>/tmp/syncope-core-cargo.log</cargo.log>\n         <cargo.output>/tmp/syncope-core-cargo-output.log</cargo.output>\n@@ -161,7 +161,7 @@\n             <groupId>org.dbunit</groupId>\n             <artifactId>dbunit</artifactId>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>log4j</groupId>\n             <artifactId>log4j</artifactId>\n@@ -197,7 +197,7 @@\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n-            <groupId>hsqldb</groupId>\n+            <groupId>org.hsqldb</groupId>\n             <artifactId>hsqldb</artifactId>\n             <version>${hsqldb.version}</version>\n             <scope>test</scope>\n@@ -274,7 +274,7 @@\n                 <inherited>true</inherited>\n                 <dependencies>\n                     <dependency>\n-                        <groupId>hsqldb</groupId>\n+                        <groupId>org.hsqldb</groupId>\n                         <artifactId>hsqldb</artifactId>\n                         <version>${hsqldb.version}</version>\n                     </dependency>\n@@ -413,7 +413,7 @@\n                         <output>${cargo.output}</output>\n                         <dependencies>\n                             <dependency>\n-                                <location>${settings.localRepository}/hsqldb/hsqldb/${hsqldb.version}/hsqldb-${hsqldb.version}.jar</location>\n+                                <location>${settings.localRepository}/org/hsqldb/hsqldb/${hsqldb.version}/hsqldb-${hsqldb.version}.jar</location>\n                             </dependency>\n                             <dependency>\n                                 <location>${project.build.directory}/integration-test.jar</location>"},{"sha":"d6a820451d82a208a7f0e115446f1e30eac3b38b","filename":"core/src/main/java/org/syncope/core/persistence/DefaultContentLoader.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -78,7 +78,8 @@ public void contextInitialized(ServletContextEvent sce) {\n             } else {\n                 log.info(\"Empty database found, loading default content\");\n \n-                FlatXmlDataSetBuilder dataSetBuilder = new FlatXmlDataSetBuilder();\n+                FlatXmlDataSetBuilder dataSetBuilder =\n+                        new FlatXmlDataSetBuilder();\n                 dataSetBuilder.setColumnSensing(true);\n                 IDataSet dataSet = dataSetBuilder.build(\n                         getClass().getResourceAsStream(\"content.xml\"));"},{"sha":"06baae34ad2b6b1ea1810c6c9867d357a1c772ad","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":41,"deletions":57,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -76,11 +76,8 @@ public class UserController extends AbstractController {\n     private PropagationManager propagationManager;\n \n     @Transactional\n-    @RequestMapping(method = RequestMethod.POST,\n-    value = \"/activate\")\n-    public UserTO activate(HttpServletResponse response,\n-            @RequestBody UserTO userTO)\n-            throws IOException {\n+    private UserTO executeAction(String actionName,\n+            HttpServletResponse response, UserTO userTO) throws IOException {\n \n         SyncopeUser syncopeUser = syncopeUserDAO.find(userTO.getId());\n \n@@ -99,33 +96,41 @@ public UserTO activate(HttpServletResponse response,\n \n         int[] actions = userWorkflow.getAvailableActions(\n                 syncopeUser.getWorkflowEntryId(), inputs);\n-        Integer activateActionId = null;\n-        for (int i = 0; i < actions.length && activateActionId == null; i++) {\n-            if (Constants.ACTION_ACTIVATE.equals(\n+        Integer actionId = null;\n+        for (int i = 0; i < actions.length && actionId == null; i++) {\n+            if (actionName.equals(\n                     workflowDescriptor.getAction(actions[i]).getName())) {\n \n-                activateActionId = actions[i];\n+                actionId = actions[i];\n             }\n         }\n-        if (activateActionId != null) {\n-            try {\n-                userWorkflow.doAction(syncopeUser.getWorkflowEntryId(),\n-                        activateActionId, inputs);\n-            } catch (WorkflowException e) {\n-                log.error(\"While performing activate\", e);\n+        if (actionId == null) {\n+            return throwNotFoundException(actionName, response);\n+        }\n \n-                return throwWorkflowException(e, response);\n-            }\n+        try {\n+            userWorkflow.doAction(syncopeUser.getWorkflowEntryId(),\n+                    actionId, inputs);\n+        } catch (WorkflowException e) {\n+            log.error(\"While performing \" + actionName, e);\n \n-            syncopeUser = syncopeUserDAO.save(syncopeUser);\n-        } else {\n-            log.error(\"No action named '\" + Constants.ACTION_ACTIVATE\n-                    + \"' has been found among available actions\");\n+            return throwWorkflowException(e, response);\n         }\n \n+        syncopeUser = syncopeUserDAO.save(syncopeUser);\n         return userDataBinder.getUserTO(syncopeUser);\n     }\n \n+    @Transactional\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/activate\")\n+    public UserTO activate(HttpServletResponse response,\n+            @RequestBody UserTO userTO)\n+            throws IOException {\n+\n+        return executeAction(Constants.ACTION_ACTIVATE, response, userTO);\n+    }\n+\n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n@@ -208,22 +213,6 @@ public UserTO create(HttpServletRequest request,\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n-        inputs.put(Constants.MAIL_FROM,\n-                syncopeConfigurationDAO.find(\n-                \"activate.email.from\").getConfValue());\n-        inputs.put(Constants.MAIL_SUBJECT,\n-                syncopeConfigurationDAO.find(\n-                \"activate.email.subject\").getConfValue());\n-        StringBuffer baseRequestURL = request.getRequestURL();\n-        inputs.put(Constants.BASE_REQUEST_URL,\n-                baseRequestURL.substring(0,\n-                baseRequestURL.indexOf(\"/user\") - 4).toString());\n-        inputs.put(Constants.MAIL_TEMPLATE_HTML,\n-                syncopeConfigurationDAO.find(\n-                \"activate.email.template.html\").getConfValue());\n-        inputs.put(Constants.MAIL_TEMPLATE_TXT,\n-                syncopeConfigurationDAO.find(\n-                \"activate.email.template.txt\").getConfValue());\n \n         int[] availableWorkflowActions = userWorkflow.getAvailableActions(\n                 workflowId, null);\n@@ -311,6 +300,7 @@ public UserTOs list(HttpServletRequest request) throws IOException {\n     public UserTO read(HttpServletResponse response,\n             @PathVariable(\"userId\") Long userId)\n             throws IOException {\n+\n         SyncopeUser user = syncopeUserDAO.find(userId);\n \n         if (user == null) {\n@@ -321,32 +311,26 @@ public UserTO read(HttpServletResponse response,\n         return userDataBinder.getUserTO(user);\n     }\n \n+    @Transactional\n     @RequestMapping(method = RequestMethod.GET,\n-    value = \"/passwordReset/{userId}\")\n-    public ModelAndView getPasswordResetToken(\n-            @PathVariable(\"userId\") Long userId,\n-            @RequestParam(\"passwordResetFormURL\") String passwordResetFormURL,\n-            @RequestParam(\"gotoURL\") String gotoURL)\n+    value = \"/generateToken/{userId}\")\n+    public UserTO generateToken(HttpServletResponse response,\n+            @PathVariable(\"userId\") Long userId)\n             throws IOException {\n-        log.info(\"passwordReset (GET) called with parameters \" + userId + \", \"\n-                + passwordResetFormURL + \", \" + gotoURL);\n \n-        String passwordResetToken = \"token\";\n-        ModelAndView mav = new ModelAndView();\n-\n-        mav.addObject(passwordResetToken);\n-\n-        return mav;\n+        UserTO userTO = new UserTO();\n+        userTO.setId(userId);\n+        return executeAction(Constants.ACTION_GENERATE_TOKEN, response, userTO);\n     }\n \n-    @RequestMapping(method = RequestMethod.PUT,\n-    value = \"/passwordReset/{userId}\")\n-    public void passwordReset(@PathVariable(\"userId\") Long userId,\n-            @RequestParam(\"tokenId\") String tokenId,\n-            @RequestParam(\"newPassword\") String newPassword)\n+    @Transactional\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/verifyToken\")\n+    public UserTO verifyToken(HttpServletResponse response,\n+            @RequestBody UserTO userTO)\n             throws IOException {\n-        log.info(\"passwordReset (POST) called with parameters \" + userId + \", \"\n-                + tokenId + \", \" + newPassword);\n+\n+        return executeAction(Constants.ACTION_VERIFY_TOKEN, response, userTO);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,"},{"sha":"aba4e1605a37c00170e8f17aec2ce05ee87a0b54","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":45,"deletions":39,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -119,48 +119,54 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                             + attributeTO.getSchema());\n                 }\n             } else {\n-                attribute = new UserAttribute();\n-                attribute.setSchema(schema);\n-                attribute.setOwner(syncopeUser);\n-\n-                // if the schema is multivale, all values are considered for\n-                // addition, otherwise only the fist one - if provided - is\n-                // considered\n-                valuesProvided = schema.isMultivalue()\n-                        ? attributeTO.getValues()\n-                        : (attributeTO.getValues().isEmpty()\n-                        ? Collections.EMPTY_SET\n-                        : Collections.singleton(\n-                        attributeTO.getValues().iterator().next()));\n-                for (String value : valuesProvided) {\n-                    attributeValue = new UserAttributeValue();\n-\n-                    try {\n-                        attributeValue = attribute.addValue(value,\n-                                attributeValue);\n-                    } catch (ValidationException e) {\n-                        log.error(\"Invalid value for attribute \"\n-                                + schema.getName() + \": \" + value, e);\n-\n-                        invalidValues.addElement(schema.getName());\n+                if (schema.isVirtual()) {\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"Ignoring virtual schema\" + schema.getName());\n                     }\n-\n-                    // if the schema is uniquevalue, check the uniqueness\n-                    if (schema.isUniquevalue()\n-                            && attributeValueDAO.existingAttributeValue(\n-                            attributeValue)) {\n-\n-                        log.error(\"Unique value schema \" + schema.getName()\n-                                + \" with no unique value: \"\n-                                + attributeValue.getValueAsString());\n-\n-                        invalidUniques.addElement(schema.getName());\n-                        attribute.setAttributeValues(Collections.EMPTY_SET);\n+                } else {\n+                    attribute = new UserAttribute();\n+                    attribute.setSchema(schema);\n+                    attribute.setOwner(syncopeUser);\n+\n+                    // if the schema is multivale, all values are considered for\n+                    // addition, otherwise only the fist one - if provided - is\n+                    // considered\n+                    valuesProvided = schema.isMultivalue()\n+                            ? attributeTO.getValues()\n+                            : (attributeTO.getValues().isEmpty()\n+                            ? Collections.EMPTY_SET\n+                            : Collections.singleton(\n+                            attributeTO.getValues().iterator().next()));\n+                    for (String value : valuesProvided) {\n+                        attributeValue = new UserAttributeValue();\n+\n+                        try {\n+                            attributeValue = attribute.addValue(value,\n+                                    attributeValue);\n+                        } catch (ValidationException e) {\n+                            log.error(\"Invalid value for attribute \"\n+                                    + schema.getName() + \": \" + value, e);\n+\n+                            invalidValues.addElement(schema.getName());\n+                        }\n+\n+                        // if the schema is uniquevalue, check the uniqueness\n+                        if (schema.isUniquevalue()\n+                                && attributeValueDAO.existingAttributeValue(\n+                                attributeValue)) {\n+\n+                            log.error(\"Unique value schema \" + schema.getName()\n+                                    + \" with no unique value: \"\n+                                    + attributeValue.getValueAsString());\n+\n+                            invalidUniques.addElement(schema.getName());\n+                            attribute.setAttributeValues(Collections.EMPTY_SET);\n+                        }\n                     }\n-                }\n \n-                if (!attribute.getAttributeValues().isEmpty()) {\n-                    syncopeUser.addAttribute(attribute);\n+                    if (!attribute.getAttributeValues().isEmpty()) {\n+                        syncopeUser.addAttribute(attribute);\n+                    }\n                 }\n             }\n         }"},{"sha":"9cdba8688318442dad067787f4cc143cd2417a50","filename":"core/src/main/java/org/syncope/core/workflow/BaseCleanupAfterEmail.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/57fe282ad56b088cd08fcdd796be42e992c20df3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/57fe282ad56b088cd08fcdd796be42e992c20df3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java?ref=57fe282ad56b088cd08fcdd796be42e992c20df3","patch":"@@ -1,35 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.workflow;\n-\n-import com.opensymphony.module.propertyset.PropertySet;\n-import com.opensymphony.workflow.FunctionProvider;\n-import com.opensymphony.workflow.WorkflowException;\n-import java.util.Map;\n-\n-public class BaseCleanupAfterEmail extends OSWorkflowComponent\n-        implements FunctionProvider {\n-\n-    @Override\n-    public void execute(Map transientVars, Map args, PropertySet ps)\n-            throws WorkflowException {\n-\n-        ps.remove(Constants.MAIL_TO);\n-        ps.remove(Constants.MAIL_FROM);\n-        ps.remove(Constants.MAIL_SUBJECT);\n-        ps.remove(Constants.MAIL_TEMPLATE_HTML);\n-        ps.remove(Constants.MAIL_TEMPLATE_TXT);\n-    }\n-}"},{"sha":"a0b77956910491f5332c499ee72e7f9bceaed925","filename":"core/src/main/java/org/syncope/core/workflow/BaseSendEmail.java","status":"modified","additions":9,"deletions":30,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -65,17 +65,17 @@ protected String getEmailBody(String urlPrefix, String template,\n                 ? fallback : templateContent.toString();\n     }\n \n-    protected HtmlEmail getHtmlEmail(PropertySet ps, String token)\n+    protected HtmlEmail getHtmlEmail(Map<String, String> args,\n+            SyncopeUser syncopeUser)\n             throws EmailException, WorkflowException {\n \n         HtmlEmail email = new HtmlEmail();\n-        email.setHostName(\n-                syncopeConfigurationDAO.find(\"smtp.host\").getConfValue());\n-        if (ps.getString(Constants.MAIL_TO) != null) {\n-            email.addTo(ps.getString(Constants.MAIL_TO));\n-        }\n-        email.setFrom(ps.getString(Constants.MAIL_FROM));\n-        email.setSubject(ps.getString(Constants.MAIL_SUBJECT));\n+        email.setHostName(syncopeConfigurationDAO.find(\n+                \"smtp.host\").getConfValue());\n+        email.setFrom(syncopeConfigurationDAO.find(\n+                args.get(\"from\")).getConfValue());\n+        email.setSubject(syncopeConfigurationDAO.find(\n+                args.get(\"subject\")).getConfValue());\n \n         return email;\n     }\n@@ -87,30 +87,9 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n-        if (transientVars.get(Constants.MAIL_TO) != null) {\n-            ps.setString(Constants.MAIL_TO,\n-                    (String) transientVars.get(Constants.MAIL_TO));\n-        }\n-        if (transientVars.get(Constants.MAIL_FROM) != null) {\n-            ps.setString(Constants.MAIL_FROM,\n-                    (String) transientVars.get(Constants.MAIL_FROM));\n-        }\n-        if (transientVars.get(Constants.MAIL_SUBJECT) != null) {\n-            ps.setString(Constants.MAIL_SUBJECT,\n-                    (String) transientVars.get(Constants.MAIL_SUBJECT));\n-        }\n-        if (transientVars.get(Constants.MAIL_TEMPLATE_HTML) != null) {\n-            ps.setString(Constants.MAIL_TEMPLATE_HTML,\n-                    (String) transientVars.get(Constants.MAIL_TEMPLATE_HTML));\n-        }\n-        if (transientVars.get(Constants.MAIL_TEMPLATE_TXT) != null) {\n-            ps.setString(Constants.MAIL_TEMPLATE_TXT,\n-                    (String) transientVars.get(Constants.MAIL_TEMPLATE_TXT));\n-        }\n-\n         Email email = null;\n         try {\n-            email = getHtmlEmail(ps, syncopeUser.getToken());\n+            email = getHtmlEmail(args, syncopeUser);\n             email.send();\n         } catch (EmailException e) {\n             log.error(\"Could not send e-mail \" + email, e);"},{"sha":"a1ac6db3fb1ee3465523bf02a41614dcf70cad2f","filename":"core/src/main/java/org/syncope/core/workflow/Constants.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -17,16 +17,11 @@\n public class Constants {\n \n     final public static String ACTION_ACTIVATE = \"activate\";\n+    final public static String ACTION_GENERATE_TOKEN = \"generateToken\";\n+    final public static String ACTION_VERIFY_TOKEN = \"verifyToken\";\n     final public static String ENTRY = \"entry\";\n     final public static String SYNCOPE_USER = \"syncopeUser\";\n     final public static String TOKEN = \"token\";\n     final public static String USER_TO = \"userTO\";\n     final public static String USER_WORKFLOW = \"userWorkflow\";\n-    final public static String BASE_REQUEST_URL = \"baseRequestURL\";\n-    final public static String MAILTEMPLATES_URL = \"mailTemplates/\";\n-    final public static String MAIL_FROM = \"from\";\n-    final public static String MAIL_TO = \"to\";\n-    final public static String MAIL_SUBJECT = \"subject\";\n-    final public static String MAIL_TEMPLATE_HTML = \"templateHtml\";\n-    final public static String MAIL_TEMPLATE_TXT = \"templateTxt\";\n }"},{"sha":"6b141927a8beec87b74e956f05a7584b60694f4e","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/CleanupAfterEmail.java","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/57fe282ad56b088cd08fcdd796be42e992c20df3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/57fe282ad56b088cd08fcdd796be42e992c20df3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java?ref=57fe282ad56b088cd08fcdd796be42e992c20df3","patch":"@@ -1,34 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.workflow.prcsiam;\n-\n-import com.opensymphony.module.propertyset.PropertySet;\n-import com.opensymphony.workflow.WorkflowException;\n-import java.util.Map;\n-import org.syncope.core.workflow.BaseCleanupAfterEmail;\n-import org.syncope.core.workflow.Constants;\n-\n-public class CleanupAfterEmail extends BaseCleanupAfterEmail {\n-\n-    @Override\n-    public void execute(Map transientVars, Map args, PropertySet ps)\n-            throws WorkflowException {\n-\n-        super.execute(transientVars, args, ps);\n-\n-        ps.remove(\"userId\");\n-        ps.remove(Constants.BASE_REQUEST_URL);\n-    }\n-}"},{"sha":"e4406977f864c18d26a69d8ee17cc89be0f0eeb8","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/SendEmail.java","status":"modified","additions":22,"deletions":45,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -14,73 +14,50 @@\n  */\n package org.syncope.core.workflow.prcsiam;\n \n-import com.opensymphony.module.propertyset.PropertySet;\n import com.opensymphony.workflow.WorkflowException;\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n import java.util.Map;\n import org.apache.commons.mail.EmailException;\n import org.apache.commons.mail.HtmlEmail;\n-import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.SyncopeConfiguration;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.workflow.*;\n \n public class SendEmail extends BaseSendEmail {\n \n     @Override\n-    protected HtmlEmail getHtmlEmail(PropertySet ps, String token)\n+    protected HtmlEmail getHtmlEmail(Map<String, String> args,\n+            SyncopeUser syncopeUser)\n             throws EmailException, WorkflowException {\n \n-        String urlPrefix = ps.getString(Constants.BASE_REQUEST_URL)\n-                + Constants.MAILTEMPLATES_URL;\n-        String urlSuffix = \"\";\n-        try {\n-            SyncopeConfiguration conf = syncopeConfigurationDAO.find(\n-                    \"servicelayer.baseurl\");\n-            if (conf != null) {\n-                urlSuffix = \".jsp?confirmationLink=\"\n-                        + conf.getConfValue()\n-                        + \"?token=\" + URLEncoder.encode(token, \"UTF-8\");\n+        String urlSuffix = \".jsp\";\n+        if (Boolean.valueOf(args.get(\"parametrize\"))) {\n+            try {\n+                urlSuffix += \"?confirmationLink=\"\n+                        + syncopeConfigurationDAO.find(\n+                        \"servicelayer.baseurl\").getConfValue()\n+                        + \"?token=\"\n+                        + URLEncoder.encode(syncopeUser.getToken(), \"UTF-8\");\n+            } catch (Throwable t) {\n+                log.error(\"Unexpected exception\", t);\n             }\n-        } catch (UnsupportedEncodingException e) {\n-            log.error(\"Unexpected exception\", e);\n         }\n \n-        HtmlEmail email = super.getHtmlEmail(ps, token);\n-        email.addTo(ps.getString(\"userId\"));\n-        email.setHtmlMsg(getEmailBody(urlPrefix,\n-                ps.getString(Constants.MAIL_TEMPLATE_HTML),\n+        HtmlEmail email = super.getHtmlEmail(args, syncopeUser);\n+        email.addTo(Utils.getUserId(syncopeUser));\n+        email.setHtmlMsg(getEmailBody(syncopeConfigurationDAO.find(\n+                \"mail.templates.url\").getConfValue(),\n+                syncopeConfigurationDAO.find(\n+                args.get(\"template.html\")).getConfValue(),\n                 urlSuffix,\n                 urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n-        email.setTextMsg(getEmailBody(urlPrefix,\n-                ps.getString(Constants.MAIL_TEMPLATE_TXT),\n+        email.setTextMsg(getEmailBody(syncopeConfigurationDAO.find(\n+                \"mail.templates.url\").getConfValue(),\n+                syncopeConfigurationDAO.find(\n+                args.get(\"template.txt\")).getConfValue(),\n                 urlSuffix,\n                 urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n \n         return email;\n     }\n-\n-    @Override\n-    @Transactional\n-    public void execute(Map transientVars, Map args, PropertySet ps)\n-            throws WorkflowException {\n-\n-        if (transientVars.get(Constants.SYNCOPE_USER) != null\n-                && !ps.exists(\"userId\")) {\n-\n-            SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n-                    Constants.SYNCOPE_USER);\n-\n-            ps.setString(\"userId\", Utils.getUserId(syncopeUser));\n-        }\n-        if (transientVars.get(Constants.BASE_REQUEST_URL) != null\n-                && !ps.exists(Constants.BASE_REQUEST_URL)) {\n-\n-            ps.setString(Constants.BASE_REQUEST_URL,\n-                    (String) transientVars.get(Constants.BASE_REQUEST_URL));\n-        }\n-\n-        super.execute(transientVars, args, ps);\n-    }\n }"},{"sha":"97e4e859e6965422000825b9df87ac0d977db828","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -16,10 +16,19 @@\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConfiguration confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConfiguration confKey=\"mail.templates.url\" confValue=\"http://localhost:8080/syncope/mailTemplates/\"/>\n     <SyncopeConfiguration confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n     <SyncopeConfiguration confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConfiguration confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n     <SyncopeConfiguration confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.subject\" confValue=\"Syncope: reset requested\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.template.html\" confValue=\"generateToken.html\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.template.txt\" confValue=\"generateToken.txt\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.subject\" confValue=\"Syncope: reset successful\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.template.html\" confValue=\"verifyToken.html\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.template.txt\" confValue=\"verifyToken.txt\"/>\n     <SyncopeConfiguration confKey=\"servicelayer.baseurl\" confValue=\"http://www.google.it/\"/>\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>"},{"sha":"8cc5f77710930c0393b7f47d378c8561bf81f68b","filename":"core/src/main/resources/userWorkflow.xml","status":"modified","additions":50,"deletions":6,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -73,6 +73,11 @@\n                     <post-functions>\n                         <function type=\"class\">\n                             <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n+                            <arg name=\"from\">activate.email.from</arg>\n+                            <arg name=\"subject\">activate.email.subject</arg>\n+                            <arg name=\"template.html\">activate.email.template.html</arg>\n+                            <arg name=\"template.txt\">activate.email.template.txt</arg>\n+                            <arg name=\"parametrize\">true</arg>\n                         </function>\n                         <!-- TMP -->\n                         <function type=\"class\">\n@@ -103,9 +108,6 @@\n                                 <function type=\"class\">\n                                     <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreActivationDate</arg>\n                                 </function>\n-                                <function type=\"class\">\n-                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.CleanupAfterEmail</arg>\n-                                </function>\n                             </post-functions>\n                         </result>\n                         <result old-status=\"doubleOptIn\" status=\"doubleOptIn\" step=\"2\">\n@@ -122,6 +124,11 @@\n                             <post-functions>\n                                 <function type=\"class\">\n                                     <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n+                                    <arg name=\"from\">activate.email.from</arg>\n+                                    <arg name=\"subject\">activate.email.subject</arg>\n+                                    <arg name=\"template.html\">activate.email.template.html</arg>\n+                                    <arg name=\"template.txt\">activate.email.template.txt</arg>\n+                                    <arg name=\"parametrize\">true</arg>\n                                 </function>\n                             </post-functions>\n                         </result>\n@@ -156,17 +163,54 @@\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n                 </action>\n-                <action name=\"passwordReset\" id=\"3004\">\n+                <action name=\"generateToken\" id=\"3004\">\n+                    <pre-functions>\n+                        <function type=\"class\">\n+                            <arg name=\"class.name\">org.syncope.core.workflow.GenerateToken</arg>\n+                        </function>\n+                    </pre-functions>\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n+                    <post-functions>\n+                        <function type=\"class\">\n+                            <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n+                            <arg name=\"from\">generateToken.email.from</arg>\n+                            <arg name=\"subject\">generateToken.email.subject</arg>\n+                            <arg name=\"template.html\">generateToken.email.template.html</arg>\n+                            <arg name=\"template.txt\">generateToken.email.template.txt</arg>\n+                            <arg name=\"parametrize\">true</arg>\n+                        </function>\n+                    </post-functions>\n+                </action>\n+                <action name=\"verifyToken\" id=\"3005\">\n+                    <results>\n+                        <result old-status=\"active\" status=\"active\" step=\"3\">\n+                            <conditions>\n+                                <condition type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.IsValidToken</arg>\n+                                </condition>\n+                            </conditions>\n+                            <post-functions>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n+                                    <arg name=\"from\">verifyToken.email.from</arg>\n+                                    <arg name=\"subject\">verifyToken.email.subject</arg>\n+                                    <arg name=\"template.html\">verifyToken.email.template.html</arg>\n+                                    <arg name=\"template.txt\">verifyToken.email.template.txt</arg>\n+                                    <arg name=\"parametrize\">false</arg>\n+                                </function>\n+                            </post-functions>\n+                        </result>\n+                        <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n+                    </results>\n                 </action>\n-                <action name=\"suspend\" id=\"3005\">\n+                <action name=\"suspend\" id=\"3006\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"suspended\" step=\"4\"/>\n                     </results>\n                 </action>\n-                <action name=\"delete\" id=\"3006\">\n+                <action name=\"delete\" id=\"3007\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"deleted\" step=\"5\"/>\n                     </results>"},{"sha":"0ec5167650e33d27cdb2435e7ffdfc9a4c167b34","filename":"core/src/main/webapp/mailTemplates/generateToken.html.jsp","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.html.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.html.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.html.jsp?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -0,0 +1,38 @@\n+<%@ page language=\"java\" %>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+    <head>\n+        <style type=\"text/css\">\n+            body {\n+                font: 12.0px Verdana;\n+                color: black; \n+                margin-top: 0px;\n+            }\n+        </style>\n+    </head>\n+    <body>\n+        <div id=\"confirmation\">\n+            Please, <a href=\"${param.confirmationLink}\">confirm</a> your request.\n+        </div>\n+\n+        <div id=\"greetings\">\n+            Best regards.\n+        </div>\n+    </body>\n+</html>"},{"sha":"6cf06d31751b9c8cce6c5558d1db769b505478db","filename":"core/src/main/webapp/mailTemplates/generateToken.txt.jsp","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.txt.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.txt.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FgenerateToken.txt.jsp?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -0,0 +1,4 @@\n+<%@ page language=\"java\" contentType=\"text/plain\" %>\n+Please, confirm your request here: ${param.confirmationLink}.\n+\n+Best regards."},{"sha":"6bc4753e7ba91a0f7ac06202f1beb4f66b7feb5b","filename":"core/src/main/webapp/mailTemplates/verifyToken.html.jsp","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.html.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.html.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.html.jsp?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -0,0 +1,38 @@\n+<%@ page language=\"java\" %>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+    <head>\n+        <style type=\"text/css\">\n+            body {\n+                font: 12.0px Verdana;\n+                color: black; \n+                margin-top: 0px;\n+            }\n+        </style>\n+    </head>\n+    <body>\n+        <div id=\"confirmation\">\n+            Your confirmation has been successfully performed.\n+        </div>\n+\n+        <div id=\"greetings\">\n+            Best regards.\n+        </div>\n+    </body>\n+</html>"},{"sha":"4cc8d43be83ef69df035bc460fa35e455e755f97","filename":"core/src/main/webapp/mailTemplates/verifyToken.txt.jsp","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.txt.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.txt.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2FverifyToken.txt.jsp?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -0,0 +1,4 @@\n+<%@ page language=\"java\" contentType=\"text/plain\" %>\n+Your confirmation has been successfully performed.\n+\n+Best regards."},{"sha":"3d1e49ab278f935c89ac06fed0f3944f9a4c1948","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":52,"deletions":65,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -14,9 +14,12 @@\n  */\n package org.syncope.core.test.rest;\n \n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n import static org.junit.Assert.*;\n \n import java.util.Collections;\n+import java.util.Date;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.test.annotation.ExpectedException;\n@@ -31,52 +34,57 @@\n \n public class UserTestITCase extends AbstractTestITCase {\n \n-    @Test\n-    @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n-    public void createWithException() {\n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.setValues(Collections.singleton(\"userId@nowhere.org\"));\n-\n-        UserTO newUserTO = new UserTO();\n-        newUserTO.addAttribute(attributeTO);\n-\n-        restTemplate.postForObject(BASE_URL + \"user/create\",\n-                newUserTO, UserTO.class);\n-    }\n-\n-    @Test\n-    public void create() {\n+    private UserTO getSampleTO(String email) {\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password\");\n \n         AttributeTO usernameTO = new AttributeTO();\n         usernameTO.setSchema(\"username\");\n-        usernameTO.addValue(\"fchicchiricco\");\n+        usernameTO.addValue(email);\n         userTO.addAttribute(usernameTO);\n \n         AttributeTO surnameTO = new AttributeTO();\n         surnameTO.setSchema(\"surname\");\n-        surnameTO.addValue(\"Chicchiriccò\");\n+        surnameTO.addValue(\"Surname\");\n         userTO.addAttribute(surnameTO);\n \n         AttributeTO userIdTO = new AttributeTO();\n         userIdTO.setSchema(\"userId\");\n-        userIdTO.addValue(\"chicchiricco@gmail.com\");\n+        userIdTO.addValue(email);\n         userTO.addAttribute(userIdTO);\n \n         AttributeTO emailTO = new AttributeTO();\n         emailTO.setSchema(\"email\");\n-        emailTO.addValue(\"chicchiricco@gmail.com\");\n-        emailTO.addValue(\"syncope@googlecode.com\");\n+        emailTO.addValue(email);\n         userTO.addAttribute(emailTO);\n \n         AttributeTO loginDateTO = new AttributeTO();\n         loginDateTO.setSchema(\"loginDate\");\n-        loginDateTO.addValue(\"2010-06-30\");\n-        loginDateTO.addValue(\"2010-07-01\");\n+        DateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n+        loginDateTO.addValue(sdf.format(new Date()));\n         userTO.addAttribute(loginDateTO);\n \n+        return userTO;\n+    }\n+\n+    @Test\n+    @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n+    public void createWithException() {\n+        AttributeTO attributeTO = new AttributeTO();\n+        attributeTO.setSchema(\"userId\");\n+        attributeTO.setValues(Collections.singleton(\"userId@nowhere.org\"));\n+\n+        UserTO newUserTO = new UserTO();\n+        newUserTO.addAttribute(attributeTO);\n+\n+        restTemplate.postForObject(BASE_URL + \"user/create\",\n+                newUserTO, UserTO.class);\n+    }\n+\n+    @Test\n+    public void create() {\n+        UserTO userTO = getSampleTO(\"a.b@c.com\");\n+\n         AttributeTO attrWithInvalidSchemaTO = new AttributeTO();\n         attrWithInvalidSchemaTO.setSchema(\"invalid schema\");\n         attrWithInvalidSchemaTO.addValue(\"a value\");\n@@ -104,35 +112,13 @@ public void create() {\n                 restTemplate.getForObject(BASE_URL + \"user/status/\"\n                 + newUserTO.getId(), String.class));\n \n-        // 3. try (and fail) to create another user with the same surname (unique)\n-        userTO = new UserTO();\n-        userTO.setPassword(\"password\");\n-\n-        usernameTO = new AttributeTO();\n-        usernameTO.setSchema(\"username\");\n-        usernameTO.addValue(\"fchicchiricco\");\n-        userTO.addAttribute(usernameTO);\n-\n-        surnameTO = new AttributeTO();\n-        surnameTO.setSchema(\"surname\");\n-        surnameTO.addValue(\"Martelli\");\n-        userTO.addAttribute(surnameTO);\n-\n-        userIdTO = new AttributeTO();\n+        // 3. try (and fail) to create another user with same (unique) values\n+        userTO = getSampleTO(\"pippo@c.com\");\n+        AttributeTO userIdTO = new AttributeTO();\n         userIdTO.setSchema(\"userId\");\n-        userIdTO.addValue(\"syncope@googlecode.com\");\n+        userIdTO.addValue(\"a.b@c.com\");\n         userTO.addAttribute(userIdTO);\n \n-        emailTO = new AttributeTO();\n-        emailTO.setSchema(\"email\");\n-        emailTO.addValue(\"syncope@googlecode.com\");\n-        userTO.addAttribute(emailTO);\n-\n-        loginDateTO = new AttributeTO();\n-        loginDateTO.setSchema(\"loginDate\");\n-        loginDateTO.addValue(\"2010-07-01\");\n-        userTO.addAttribute(loginDateTO);\n-\n         SyncopeClientException syncopeClientException = null;\n         try {\n             restTemplate.postForObject(BASE_URL + \"user/create\",\n@@ -142,8 +128,7 @@ public void create() {\n                     e.getException(SyncopeClientExceptionType.InvalidUniques);\n         }\n         assertNotNull(syncopeClientException);\n-        assertTrue(syncopeClientException.getElements().contains(\"username\"));\n-        assertTrue(syncopeClientException.getElements().contains(\"email\"));\n+        assertTrue(syncopeClientException.getElements().contains(\"userId\"));\n     }\n \n     @Test\n@@ -183,20 +168,22 @@ public void read() {\n     }\n \n     @Test\n-    public void passwordReset() {\n-        String tokenId = restTemplate.getForObject(BASE_URL + \"user/\"\n-                + \"passwordReset/{userId}.json\"\n-                + \"?passwordResetFormURL={passwordResetFormURL}\"\n-                + \"&gotoURL={gotoURL}\",\n-                String.class, \"0\",\n-                \"http://www.google.it/passwordResetForm\",\n-                \"http://www.google.it/gotoURL\");\n-\n-        assertNotNull(tokenId);\n-\n-        restTemplate.put(BASE_URL + \"user/passwordReset/{userId}.json\"\n-                + \"?tokenId={tokenId}&newPassword={newPassword}\",\n-                null, \"0\", tokenId, \"newPassword\");\n+    public void token() {\n+        UserTO userTO = getSampleTO(\"d.e@f.com\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n+                userTO, UserTO.class);\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/activate\",\n+                userTO, UserTO.class);\n+        assertNull(userTO.getToken());\n+\n+        userTO = restTemplate.getForObject(BASE_URL + \"user/generateToken/\"\n+                + String.valueOf(userTO.getId()), UserTO.class);\n+        assertNotNull(userTO.getToken());\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/verifyToken\",\n+                userTO, UserTO.class);\n+        assertNull(userTO.getToken());\n     }\n \n     @Test"},{"sha":"5de360a2a22e658645e9b2ff7a49d1f426bcb6db","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/96f59b765acf350fce7029efe2e84e65a8d6e5cb/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=96f59b765acf350fce7029efe2e84e65a8d6e5cb","patch":"@@ -16,10 +16,19 @@\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConfiguration confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConfiguration confKey=\"mail.templates.url\" confValue=\"http://localhost:8080/syncope/mailTemplates/\"/>\n     <SyncopeConfiguration confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n     <SyncopeConfiguration confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConfiguration confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n     <SyncopeConfiguration confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.subject\" confValue=\"Syncope: reset requested\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.template.html\" confValue=\"generateToken.html\"/>\n+    <SyncopeConfiguration confKey=\"generateToken.email.template.txt\" confValue=\"generateToken.txt\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.subject\" confValue=\"Syncope: reset successful\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.template.html\" confValue=\"verifyToken.html\"/>\n+    <SyncopeConfiguration confKey=\"verifyToken.email.template.txt\" confValue=\"verifyToken.txt\"/>\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n                           "}]}