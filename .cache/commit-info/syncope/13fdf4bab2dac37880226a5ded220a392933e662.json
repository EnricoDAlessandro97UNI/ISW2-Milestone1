{"sha":"13fdf4bab2dac37880226a5ded220a392933e662","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEzZmRmNGJhYjJkYWMzNzg4MDIyNmE1ZGVkMjIwYTM5MjkzM2U2NjI=","commit":{"author":{"name":"skylark17","email":"skylark17@apache.org","date":"2019-12-11T13:36:37Z"},"committer":{"name":"skylark17","email":"skylark17@apache.org","date":"2019-12-12T08:40:20Z"},"message":"[SYNCOPE-957] Fixed missing Pull report for linked accounts","tree":{"sha":"e5987ec17992c756a598d505220914151db6942e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e5987ec17992c756a598d505220914151db6942e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/13fdf4bab2dac37880226a5ded220a392933e662","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13fdf4bab2dac37880226a5ded220a392933e662","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/13fdf4bab2dac37880226a5ded220a392933e662","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13fdf4bab2dac37880226a5ded220a392933e662/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"bfa422ea43bbe9f13717fdf2c902bb141c54fc28","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfa422ea43bbe9f13717fdf2c902bb141c54fc28","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfa422ea43bbe9f13717fdf2c902bb141c54fc28"}],"stats":{"total":140,"additions":113,"deletions":27},"files":[{"sha":"5f06bfd04e27e7098fe21ec0a9262eecb8d285e0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":110,"deletions":27,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13fdf4bab2dac37880226a5ded220a392933e662/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13fdf4bab2dac37880226a5ded220a392933e662/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=13fdf4bab2dac37880226a5ded220a392933e662","patch":"@@ -23,12 +23,12 @@\n import java.util.Collection;\n import java.util.List;\n import javax.annotation.Resource;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n@@ -44,6 +44,12 @@\n \n public abstract class AbstractProvisioningJobDelegate<T extends ProvisioningTask> extends AbstractSchedTaskJobDelegate {\n \n+    private static final String USER = \"USER\";\n+\n+    private static final String GROUP = \"GROUP\";\n+\n+    private static final String LINKED_ACCOUNT = \"LINKED_ACCOUNT\";\n+\n     @Resource(name = \"adminUser\")\n     protected String adminUser;\n \n@@ -53,6 +59,9 @@\n     @Autowired\n     protected ConnectorFactory connFactory;\n \n+    /**\n+     * AnyTypeDAO DAO\n+     */\n     @Autowired\n     protected AnyTypeDAO anyTypeDAO;\n \n@@ -127,87 +136,105 @@ protected String createReport(\n         List<ProvisioningReport> aFailDelete = new ArrayList<>();\n         List<ProvisioningReport> aSuccNone = new ArrayList<>();\n         List<ProvisioningReport> aIgnore = new ArrayList<>();\n+        List<ProvisioningReport> laSuccCreate = new ArrayList<>();\n+        List<ProvisioningReport> laFailCreate = new ArrayList<>();\n+        List<ProvisioningReport> laSuccUpdate = new ArrayList<>();\n+        List<ProvisioningReport> laFailUpdate = new ArrayList<>();\n+        List<ProvisioningReport> laSuccDelete = new ArrayList<>();\n+        List<ProvisioningReport> laFailDelete = new ArrayList<>();\n+        List<ProvisioningReport> laSuccNone = new ArrayList<>();\n+        List<ProvisioningReport> laIgnore = new ArrayList<>();\n \n         for (ProvisioningReport provResult : provResults) {\n-            AnyType anyType = anyTypeDAO.find(provResult.getAnyType());\n-\n             switch (provResult.getStatus()) {\n                 case SUCCESS:\n                     switch (provResult.getOperation()) {\n                         case CREATE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rSuccCreate.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uSuccCreate.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laSuccCreate.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gSuccCreate.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aSuccCreate.add(provResult);\n                                 }\n                             }\n                             break;\n \n                         case UPDATE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rSuccUpdate.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uSuccUpdate.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laSuccUpdate.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gSuccUpdate.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aSuccUpdate.add(provResult);\n                                 }\n                             }\n                             break;\n \n                         case DELETE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rSuccDelete.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uSuccDelete.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laSuccDelete.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gSuccDelete.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aSuccDelete.add(provResult);\n                                 }\n                             }\n                             break;\n \n                         case NONE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rSuccNone.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uSuccNone.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laSuccNone.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gSuccNone.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aSuccNone.add(provResult);\n                                 }\n@@ -221,59 +248,68 @@ protected String createReport(\n                 case FAILURE:\n                     switch (provResult.getOperation()) {\n                         case CREATE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rFailCreate.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uFailCreate.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laFailCreate.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gFailCreate.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aFailCreate.add(provResult);\n                                 }\n                             }\n                             break;\n \n                         case UPDATE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rFailUpdate.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uFailUpdate.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laFailUpdate.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gFailUpdate.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aFailUpdate.add(provResult);\n                                 }\n                             }\n                             break;\n \n                         case DELETE:\n-                            if (anyType == null) {\n+                            if (StringUtils.isBlank(provResult.getAnyType())) {\n                                 rFailDelete.add(provResult);\n                             } else {\n-                                switch (anyType.getKind()) {\n+                                switch (provResult.getAnyType()) {\n                                     case USER:\n                                         uFailDelete.add(provResult);\n                                         break;\n \n+                                    case LINKED_ACCOUNT:\n+                                        laFailDelete.add(provResult);\n+                                        break;\n+\n                                     case GROUP:\n                                         gFailDelete.add(provResult);\n                                         break;\n \n-                                    case ANY_OBJECT:\n                                     default:\n                                         aFailDelete.add(provResult);\n                                 }\n@@ -285,19 +321,22 @@ protected String createReport(\n                     break;\n \n                 case IGNORE:\n-                    if (anyType == null) {\n+                    if (StringUtils.isBlank(provResult.getAnyType())) {\n                         rIgnore.add(provResult);\n                     } else {\n-                        switch (anyType.getKind()) {\n+                        switch (provResult.getAnyType()) {\n                             case USER:\n                                 uIgnore.add(provResult);\n                                 break;\n \n+                            case LINKED_ACCOUNT:\n+                                laIgnore.add(provResult);\n+                                break;\n+\n                             case GROUP:\n                                 gIgnore.add(provResult);\n                                 break;\n \n-                            case ANY_OBJECT:\n                             default:\n                                 aIgnore.add(provResult);\n                         }\n@@ -325,6 +364,16 @@ protected String createReport(\n                     append(' ').\n                     append(\"[no operation/ignored]: \").append(uSuccNone.size()).append('/').append(uIgnore.size()).\n                     append('\\n');\n+\n+            report.append(\"Accounts \").\n+                    append(\"[created/failures]: \").append(laSuccCreate.size()).append('/').append(laFailCreate.size()).\n+                    append(' ').\n+                    append(\"[updated/failures]: \").append(laSuccUpdate.size()).append('/').append(laFailUpdate.size()).\n+                    append(' ').\n+                    append(\"[deleted/failures]: \").append(laSuccDelete.size()).append('/').append(laFailDelete.size()).\n+                    append(' ').\n+                    append(\"[no operation/ignored]: \").append(laSuccNone.size()).append('/').append(laIgnore.size()).\n+                    append('\\n');\n         }\n         if (includeGroup) {\n             report.append(\"Groups \").\n@@ -373,6 +422,19 @@ protected String createReport(\n                     report.append(\"\\nUsers failed to delete: \");\n                     report.append(ProvisioningReport.generate(uFailDelete, traceLevel));\n                 }\n+\n+                if (!laFailCreate.isEmpty()) {\n+                    report.append(\"\\n\\nAccounts failed to create: \");\n+                    report.append(ProvisioningReport.generate(laFailCreate, traceLevel));\n+                }\n+                if (!laFailUpdate.isEmpty()) {\n+                    report.append(\"\\nAccounts failed to update: \");\n+                    report.append(ProvisioningReport.generate(laFailUpdate, traceLevel));\n+                }\n+                if (!laFailDelete.isEmpty()) {\n+                    report.append(\"\\nAccounts failed to delete: \");\n+                    report.append(ProvisioningReport.generate(laFailDelete, traceLevel));\n+                }\n             }\n \n             if (includeGroup) {\n@@ -442,6 +504,27 @@ protected String createReport(\n                     report.append(\"\\nUsers ignored:\\n\").\n                             append(ProvisioningReport.generate(uIgnore, traceLevel));\n                 }\n+\n+                if (!laSuccCreate.isEmpty()) {\n+                    report.append(\"\\n\\nAccounts created:\\n\").\n+                            append(ProvisioningReport.generate(laSuccCreate, traceLevel));\n+                }\n+                if (!laSuccUpdate.isEmpty()) {\n+                    report.append(\"\\nAccounts updated:\\n\").\n+                            append(ProvisioningReport.generate(laSuccUpdate, traceLevel));\n+                }\n+                if (!laSuccDelete.isEmpty()) {\n+                    report.append(\"\\nAccounts deleted:\\n\").\n+                            append(ProvisioningReport.generate(laSuccDelete, traceLevel));\n+                }\n+                if (!laSuccNone.isEmpty()) {\n+                    report.append(\"\\nAccounts no operation:\\n\").\n+                            append(ProvisioningReport.generate(laSuccNone, traceLevel));\n+                }\n+                if (!laIgnore.isEmpty()) {\n+                    report.append(\"\\nAccounts ignored:\\n\").\n+                            append(ProvisioningReport.generate(laIgnore, traceLevel));\n+                }\n             }\n             if (includeGroup) {\n                 if (!gSuccCreate.isEmpty()) {"},{"sha":"b5c335794eb58801c1d78b477963cbfeece38f22","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LinkedAccountITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13fdf4bab2dac37880226a5ded220a392933e662/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13fdf4bab2dac37880226a5ded220a392933e662/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java?ref=13fdf4bab2dac37880226a5ded220a392933e662","patch":"@@ -403,6 +403,7 @@ public void pull() {\n \n             ExecTO exec = AbstractTaskITCase.execProvisioningTask(taskService, TaskType.PULL, pullTaskKey, 50, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n+            assertTrue(exec.getMessage().contains(\"Accounts created\"));\n \n             accounts = userService.read(\"vivaldi\").getLinkedAccounts();\n             assertEquals(3, accounts.size());\n@@ -451,6 +452,8 @@ public void pull() {\n             // 4. execute pull task again and verify linked accounts were pulled\n             exec = AbstractTaskITCase.execProvisioningTask(taskService, TaskType.PULL, pullTaskKey, 50, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n+            assertTrue(exec.getMessage().contains(\"Accounts updated\"));\n+            assertTrue(exec.getMessage().contains(\"Accounts deleted\"));\n \n             accounts = userService.read(\"vivaldi\").getLinkedAccounts();\n             assertEquals(2, accounts.size());"}]}