{"sha":"3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkMjg2Zjg2ZmI5ZWQzMGY5MGJiMDMyNGRiY2EzOWY1OTQ2ZTJmMmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-30T09:49:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-30T09:49:05Z"},"message":"[SYNCOPE-753] Adding test to migrate conf","tree":{"sha":"670ad991e6116ec7d13695515ee7e5de1057422b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/670ad991e6116ec7d13695515ee7e5de1057422b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3d587889ddf74d48d5fc0dd95a63976625c2b6da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d587889ddf74d48d5fc0dd95a63976625c2b6da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d587889ddf74d48d5fc0dd95a63976625c2b6da"}],"stats":{"total":1747,"additions":1677,"deletions":70},"files":[{"sha":"f8ea8ae86540dae6252a2cb426ad93b3108cad0d","filename":"client/cli/pom.xml","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -80,6 +80,22 @@ under the License.\n       <artifactId>jcl-over-slf4j</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-jdbc</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>\n@@ -153,6 +169,12 @@ under the License.\n       </resource>\n     </resources>\n     \n+    <testResources>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <filtering>true</filtering>\n+      </testResource>\n+    </testResources>\n   </build>\n   \n   <profiles>"},{"sha":"8de6d0448c203ec2197e6f087c380c7371003e08","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateConf.java","status":"modified","additions":109,"deletions":36,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -34,6 +34,7 @@\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n import javax.xml.stream.XMLStreamWriter;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter;\n import org.apache.syncope.client.cli.Input;\n import org.slf4j.Logger;\n@@ -82,6 +83,45 @@ private static String getAttributeValue(final XMLStreamReader streamReader, fina\n         return value;\n     }\n \n+    private static String toNewIntMappingType(final String oldIntMappingType) {\n+        String newIntMappingType;\n+        switch (oldIntMappingType) {\n+            case \"UserId\":\n+                newIntMappingType = \"UserKey\";\n+                break;\n+\n+            case \"UserSchema\":\n+            case \"MembershipSchema\":\n+                newIntMappingType = \"UserPlainSchema\";\n+                break;\n+\n+            case \"MembershipDerivedSchema\":\n+                newIntMappingType = \"UserDerivedSchema\";\n+                break;\n+\n+            case \"RoleId\":\n+                newIntMappingType = \"GroupKey\";\n+                break;\n+\n+            case \"RoleName\":\n+                newIntMappingType = \"GroupName\";\n+                break;\n+\n+            case \"RoleOwnerSchema\":\n+                newIntMappingType = \"GroupOwnerSchema\";\n+                break;\n+\n+            case \"RoleSchema\":\n+                newIntMappingType = \"RolePlainSchema\";\n+                break;\n+\n+            default:\n+                newIntMappingType = oldIntMappingType;\n+        }\n+\n+        return newIntMappingType;\n+    }\n+\n     private static void exec(final String src, final String dst) throws XMLStreamException, IOException {\n         XMLStreamWriter writer = new PrettyPrintXMLStreamWriter(\n                 OUTPUT_FACTORY.createXMLStreamWriter(new FileWriter(dst)), 2);\n@@ -247,7 +287,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                                 JsonNode allowNullPassword = specification.get(\"allowNullPassword\");\n                                 if (allowNullPassword != null) {\n-                                    writer.writeAttribute(\"allowNullPassword\", allowNullPassword.asText());\n+                                    writer.writeAttribute(\n+                                            \"allowNullPassword\", allowNullPassword.asBoolean() ? \"1\" : \"0\");\n                                     specification.remove(\"allowNullPassword\");\n                                 }\n                                 JsonNode historyLength = specification.get(\"historyLength\");\n@@ -278,7 +319,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                                 JsonNode propagateSuspension = specification.get(\"propagateSuspension\");\n                                 if (propagateSuspension != null) {\n-                                    writer.writeAttribute(\"propagateSuspension\", propagateSuspension.asText());\n+                                    writer.writeAttribute(\n+                                            \"propagateSuspension\", propagateSuspension.asBoolean() ? \"1\" : \"0\");\n                                     specification.remove(\"propagateSuspension\");\n                                 }\n                                 JsonNode permittedLoginRetries = specification.get(\"permittedLoginRetries\");\n@@ -293,7 +335,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                                 writer.writeStartElement(\"AccountRuleConfInstance\");\n                                 writer.writeAttribute(\"id\", policyId);\n-                                writer.writeAttribute(\"passwordPolicy_id\", policyId);\n+                                writer.writeAttribute(\"accountPolicy_id\", policyId);\n                                 writer.writeAttribute(\"serializedInstance\", specification.toString());\n                                 writer.writeEndElement();\n                                 break;\n@@ -319,7 +361,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         if (!connInstanceCapabilities.contains(connInstanceId + capabilities)) {\n                             writer.writeStartElement(\"ConnInstance_capabilities\");\n                             writer.writeAttribute(\"ConnInstance_id\", connInstanceId);\n-                            writer.writeAttribute(\"capabilities\", capabilities);\n+                            writer.writeAttribute(\"capability\", capabilities);\n                             writer.writeEndElement();\n \n                             connInstanceCapabilities.add(connInstanceId + capabilities);\n@@ -329,15 +371,22 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                     case \"externalresource\":\n                         writer.writeStartElement(\"ExternalResource\");\n                         copyAttrs(reader, writer,\n-                                \"syncTraceLevel\", \"userializedSyncToken\", \"rserializedSyncToken\");\n+                                \"syncTraceLevel\", \"userializedSyncToken\", \"rserializedSyncToken\",\n+                                \"propagationMode\", \"propagationPrimary\", \"syncPolicy_id\");\n+                        String syncPolicyId = getAttributeValue(reader, \"syncPolicy_id\");\n                         writer.writeAttribute(\n                                 \"pullTraceLevel\", getAttributeValue(reader, \"syncTraceLevel\"));\n+                        if (StringUtils.isNotBlank(syncPolicyId)) {\n+                            writer.writeAttribute(\n+                                    \"pullPolicy_id\", getAttributeValue(reader, \"syncPolicy_id\"));\n+                        }\n                         writer.writeEndElement();\n                         break;\n \n                     case \"externalresource_propactions\":\n                         writer.writeStartElement(\"ExternalResource_PropActions\");\n-                        copyAttrs(reader, writer, \"element\");\n+\n+                        writer.writeAttribute(\"resource_name\", getAttributeValue(reader, \"externalResource_name\"));\n \n                         String propActionClassName = getAttributeValue(reader, \"element\");\n                         switch (propActionClassName) {\n@@ -363,7 +412,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"policy_externalresource\":\n                         writer.writeStartElement(\"AccountPolicy_ExternalResource\");\n-                        copyAttrs(reader, writer);\n+                        writer.writeAttribute(\"accountPolicy_id\", getAttributeValue(reader, \"account_policy_id\"));\n+                        writer.writeAttribute(\"resource_name\", getAttributeValue(reader, \"resource_name\"));\n                         writer.writeEndElement();\n                         break;\n \n@@ -382,7 +432,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeAttribute(\"provision_id\", umappingId);\n \n                         String uaccountLink = getAttributeValue(reader, \"accountlink\");\n-                        if (uaccountLink != null && !uaccountLink.isEmpty()) {\n+                        if (StringUtils.isNotBlank(uaccountLink)) {\n                             writer.writeAttribute(\"connObjectLink\", uaccountLink);\n                         }\n                         writer.writeEndElement();\n@@ -396,14 +446,15 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             reporter.writeEndElement();\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer, \"accountid\");\n+                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\");\n+                            writer.writeAttribute(\"intMappingType\", toNewIntMappingType(uIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n                         }\n                         break;\n \n                     case \"rmapping\":\n-                        String rmappingId = getAttributeValue(reader, \"id\");\n+                        String rmappingId = \"10\" + getAttributeValue(reader, \"id\");\n                         writer.writeStartElement(\"Provision\");\n                         writer.writeAttribute(\"id\", rmappingId);\n                         writer.writeAttribute(\n@@ -417,7 +468,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeAttribute(\"provision_id\", rmappingId);\n \n                         String raccountLink = getAttributeValue(reader, \"accountlink\");\n-                        if (raccountLink != null && !raccountLink.isEmpty()) {\n+                        if (StringUtils.isNotBlank(raccountLink)) {\n                             writer.writeAttribute(\"connObjectLink\", raccountLink);\n                         }\n                         writer.writeEndElement();\n@@ -431,7 +482,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             reporter.writeEndElement();\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer, \"accountid\");\n+                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\");\n+                            writer.writeAttribute(\"intMappingType\", toNewIntMappingType(rIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n                         }\n@@ -441,7 +493,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"Task\");\n                         copyAttrs(reader, writer,\n                                 \"DTYPE\", \"propagationMode\", \"subjectType\", \"subjectId\", \"xmlAttributes\",\n-                                \"jobClassName\", \"userTemplate\", \"roleTemplate\", \"userFilter\", \"roleFilter\");\n+                                \"jobClassName\", \"userTemplate\", \"roleTemplate\", \"userFilter\", \"roleFilter\",\n+                                \"propagationOperation\", \"syncStatus\", \"fullReconciliation\");\n \n                         String taskId = getAttributeValue(reader, \"id\");\n \n@@ -454,29 +507,48 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                         \"anyKey\", getAttributeValue(reader, \"subjectId\"));\n                                 writer.writeAttribute(\n                                         \"attributes\", getAttributeValue(reader, \"xmlAttributes\"));\n+                                writer.writeAttribute(\n+                                        \"operation\", getAttributeValue(reader, \"propagationOperation\"));\n                                 writer.writeEndElement();\n                                 break;\n \n                             case \"SyncTask\":\n                                 writer.writeAttribute(\"DTYPE\", \"PullTask\");\n+                                writer.writeAttribute(\"pullStatus\", getAttributeValue(reader, \"syncStatus\"));\n+\n+                                String fullReconciliation = getAttributeValue(reader, \"fullReconciliation\");\n+                                if (\"1\".equals(fullReconciliation)) {\n+                                    writer.writeAttribute(\"pullMode\", \"FULL_RECONCILIATION\");\n+                                } else if (\"0\".equals(fullReconciliation)) {\n+                                    writer.writeAttribute(\"pullMode\", \"INCREMENTAL\");\n+                                }\n+\n                                 writer.writeEndElement();\n \n                                 String userTemplate = getAttributeValue(reader, \"userTemplate\");\n-                                if (userTemplate != null && !userTemplate.isEmpty()) {\n+                                if (StringUtils.isNotBlank(userTemplate)) {\n+                                    ObjectNode template = (ObjectNode) OBJECT_MAPPER.readTree(userTemplate);\n+                                    JsonNode plainAttrs = template.remove(\"attrs\");\n+                                    template.set(\"plainAttrs\", plainAttrs);\n+\n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", taskId);\n+                                    writer.writeAttribute(\"id\", taskId + \"1\");\n                                     writer.writeAttribute(\"pullTask_id\", taskId);\n                                     writer.writeAttribute(\"anyType_name\", \"USER\");\n-                                    writer.writeAttribute(\"template\", userTemplate);\n+                                    writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n                                 String roleTemplate = getAttributeValue(reader, \"roleTemplate\");\n-                                if (roleTemplate != null && !roleTemplate.isEmpty()) {\n+                                if (StringUtils.isNotBlank(roleTemplate)) {\n+                                    ObjectNode template = (ObjectNode) OBJECT_MAPPER.readTree(roleTemplate);\n+                                    JsonNode plainAttrs = template.remove(\"attrs\");\n+                                    template.set(\"plainAttrs\", plainAttrs);\n+\n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", taskId);\n+                                    writer.writeAttribute(\"id\", taskId + \"2\");\n                                     writer.writeAttribute(\"pullTask_id\", taskId);\n                                     writer.writeAttribute(\"anyType_name\", \"GROUP\");\n-                                    writer.writeAttribute(\"template\", roleTemplate);\n+                                    writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n                                 break;\n@@ -498,19 +570,19 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 writer.writeEndElement();\n \n                                 String userFilter = getAttributeValue(reader, \"userFilter\");\n-                                if (userFilter != null && !userFilter.isEmpty()) {\n+                                if (StringUtils.isNotBlank(userFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", taskId);\n-                                    writer.writeAttribute(\"pusTask_id\", taskId);\n+                                    writer.writeAttribute(\"id\", taskId + \"1\");\n+                                    writer.writeAttribute(\"pushTask_id\", taskId);\n                                     writer.writeAttribute(\"anyType_name\", \"USER\");\n                                     writer.writeAttribute(\"fiql\", userFilter);\n                                     writer.writeEndElement();\n                                 }\n                                 String roleFilter = getAttributeValue(reader, \"roleFilter\");\n-                                if (roleFilter != null && !roleFilter.isEmpty()) {\n+                                if (StringUtils.isNotBlank(roleFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", taskId);\n-                                    writer.writeAttribute(\"pusTask_id\", taskId);\n+                                    writer.writeAttribute(\"id\", taskId + \"2\");\n+                                    writer.writeAttribute(\"pushTask_id\", taskId);\n                                     writer.writeAttribute(\"anyType_name\", \"GROUP\");\n                                     writer.writeAttribute(\"fiql\", roleFilter);\n                                     writer.writeEndElement();\n@@ -556,22 +628,23 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"notification\":\n                         writer.writeStartElement(\"Notification\");\n-                        copyAttrs(reader, writer, \"recipientAttrType\", \"template\");\n+                        copyAttrs(reader, writer, \"recipientAttrType\", \"template\",\n+                                \"userAbout\", \"roleAbout\", \"recipients\");\n                         String recipientAttrType = getAttributeValue(reader, \"recipientAttrType\");\n-                        if (\"UserSchema\".equals(recipientAttrType)) {\n-                            recipientAttrType = \"UserPlainSchema\";\n-                        } else if (\"RoleSchema\".equals(recipientAttrType)) {\n-                            recipientAttrType = \"GroupPlainSchema\";\n+                        if (StringUtils.isNotBlank(recipientAttrType)) {\n+                            writer.writeAttribute(\"recipientAttrType\", toNewIntMappingType(recipientAttrType));\n                         }\n-                        writer.writeAttribute(\"recipientAttrType\", recipientAttrType);\n-                        writer.writeAttribute(\n-                                \"template_name\", getAttributeValue(reader, \"template\"));\n+                        String recipients = getAttributeValue(reader, \"recipients\");\n+                        if (StringUtils.isNotBlank(recipients)) {\n+                            writer.writeAttribute(\"recipientsFIQL\", getAttributeValue(reader, \"recipients\"));\n+                        }\n+                        writer.writeAttribute(\"template_name\", getAttributeValue(reader, \"template\"));\n                         writer.writeEndElement();\n \n                         String notificationId = getAttributeValue(reader, \"id\");\n \n                         String userAbout = getAttributeValue(reader, \"userAbout\");\n-                        if (userAbout != null && !userAbout.isEmpty()) {\n+                        if (StringUtils.isNotBlank(userAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n                             writer.writeAttribute(\"id\", notificationId);\n                             writer.writeAttribute(\"notification_id\", notificationId);\n@@ -580,7 +653,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             writer.writeEndElement();\n                         }\n                         String roleAbout = getAttributeValue(reader, \"roleAbout\");\n-                        if (roleAbout != null && !roleAbout.isEmpty()) {\n+                        if (StringUtils.isNotBlank(roleAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n                             writer.writeAttribute(\"id\", notificationId);\n                             writer.writeAttribute(\"notification_id\", notificationId);\n@@ -592,7 +665,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"notification_events\":\n                         writer.writeStartElement(\"Notification_events\");\n-                        copyAttrs(reader, writer, \"event\");\n+                        copyAttrs(reader, writer, \"events\");\n                         writer.writeAttribute(\n                                 \"event\", getAttributeValue(reader, \"events\").\n                                 replaceAll(\"Controller\", \"Logic\"));"},{"sha":"e782744241e5cc45cc4e005db7b62d98a3dc0409","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FMigrateTest.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Properties;\n+import javax.sql.DataSource;\n+import javax.xml.parsers.SAXParser;\n+import javax.xml.parsers.SAXParserFactory;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.migrate.MigrateCommand;\n+import org.apache.syncope.core.persistence.jpa.content.ContentLoaderHandler;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.jdbc.datasource.DriverManagerDataSource;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+\n+public class MigrateTest {\n+\n+    private static final String ROOT_ELEMENT = \"dataset\";\n+\n+    private static String BASE_PATH;\n+\n+    @BeforeClass\n+    public static void before() {\n+        Properties props = new Properties();\n+        InputStream propStream = null;\n+        try {\n+            propStream = MigrateTest.class.getResourceAsStream(\"/test.properties\");\n+            props.load(propStream);\n+\n+            BASE_PATH = props.getProperty(\"testClasses\");\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        } finally {\n+            IOUtils.closeQuietly(propStream);\n+        }\n+        assertNotNull(BASE_PATH);\n+    }\n+\n+    @Test\n+    public void conf() throws Exception {\n+        // 1. migrate\n+        String[] args = new String[4];\n+        args[0] = \"migrate\";\n+        args[1] = \"--conf\";\n+        args[2] = BASE_PATH + File.separator + \"content12.xml\";\n+        args[3] = BASE_PATH + File.separator + \"MasterContent.xml\";\n+\n+        new MigrateCommand().execute(new Input(args));\n+\n+        // 2. initialize db as persistence-jpa does\n+        DataSource dataSource = new DriverManagerDataSource(\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\", \"sa\", null);\n+\n+        new ResourceDatabasePopulator(new ClassPathResource(\"/schema20.sql\")).execute(dataSource);\n+\n+        // 3. attempt to set initial content from the migrated MasterContent.xml\n+        SAXParserFactory factory = SAXParserFactory.newInstance();\n+        InputStream in = null;\n+        try {\n+            in = new FileInputStream(args[3]);\n+\n+            SAXParser parser = factory.newSAXParser();\n+            parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT, false));\n+        } finally {\n+            IOUtils.closeQuietly(in);\n+        }\n+    }\n+}"},{"sha":"b87f97092e2238070b9b76b2b9a27e0dddf060f7","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/CommandUtilsTest.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -30,20 +30,16 @@\n public class CommandUtilsTest {\n \n     @Test\n-    public void fromArgs() {\n-        final String commandName = \"logger\";\n-        try {\n-            final AbstractCommand command = CommandUtils.fromArgs(commandName);\n-            assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n-        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n-            fail(ex.getMessage());\n-        }\n+    public void fromArgs() throws InstantiationException, IllegalAccessException {\n+        String commandName = \"logger\";\n+        AbstractCommand command = CommandUtils.fromArgs(commandName);\n+        assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n \n-        final String wrongCommandName = \"wrong\";\n+        String wrongCommandName = \"wrong\";\n         try {\n             CommandUtils.fromArgs(wrongCommandName);\n             fail(wrongCommandName + \" isn't a right command, why you are here?\");\n-        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n+        } catch (IllegalArgumentException ex) {\n             assertEquals(IllegalArgumentException.class, ex.getClass());\n             assertEquals(wrongCommandName + \" is not a valid command\", ex.getMessage());\n         }"},{"sha":"9fd0dba9f32fd4950b478bc1c42d906c50d58184","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/JasyptUtilsTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -26,10 +26,10 @@ public class JasyptUtilsTest {\n \n     @Test\n     public void encryption() {\n-        final String password = \"password\";\n-        final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n-        final String encPassword = jasyptUtils.encrypt(password);\n-        final String decPassword = jasyptUtils.decrypt(encPassword);\n+        String password = \"password\";\n+        JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n+        String encPassword = jasyptUtils.encrypt(password);\n+        String decPassword = jasyptUtils.decrypt(encPassword);\n         assertEquals(password, decPassword);\n     }\n }"},{"sha":"7512c6307db1cf399a98d19475a5e64f3d301e03","filename":"client/cli/src/test/resources/content12.xml","status":"added","additions":1154,"deletions":0,"changes":1154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fcontent12.xml?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d"},{"sha":"5eebd1a358e3c6eb25b20fcc98303d0ad2dfbc4d","filename":"client/cli/src/test/resources/log4j2.xml","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\" shutdownHook=\"disable\">\n+  <appenders>\n+    <console name=\"main\" target=\"SYSTEM_OUT\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+    </console>\n+  </appenders>\n+  <loggers>    \n+    <root level=\"ERROR\">\n+      <appenderRef ref=\"main\"/>\n+    </root>\n+  </loggers>\n+</configuration>"},{"sha":"491bc6e884d3e9c87c988111b65906ac76f02285","filename":"client/cli/src/test/resources/schema20.sql","status":"added","additions":218,"deletions":0,"changes":218,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -0,0 +1,218 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+CREATE TABLE AccountPolicy (id BIGINT NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (id));\n+CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_id BIGINT, resource_name VARCHAR(255));\n+CREATE TABLE AccountRuleConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE ADynGroupMembership (id BIGINT NOT NULL, fiql VARCHAR(255), GROUP_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_id BIGINT, anyObject_id BIGINT);\n+CREATE TABLE AMembership (id BIGINT NOT NULL, anyObject_id BIGINT, group_id BIGINT, PRIMARY KEY (id));\n+CREATE TABLE AnyAbout (id BIGINT NOT NULL, filter CLOB, ANYTYPE_NAME VARCHAR(255), NOTIFICATION_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_NYABOUT_NOTIFICATION_ID UNIQUE (NOTIFICATION_ID, ANYTYPE_NAME));\n+CREATE TABLE AnyObject (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), REALM_ID BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE AnyObject_AnyTypeClass (anyObject_id BIGINT, anyTypeClass_name VARCHAR(255));\n+CREATE TABLE AnyObject_ExternalResource (anyObject_id BIGINT, resource_name VARCHAR(255));\n+CREATE TABLE AnyTemplatePullTask (id BIGINT NOT NULL, template CLOB, ANYTYPE_NAME VARCHAR(255), PULLTASK_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_NYTMTSK_PULLTASK_ID UNIQUE (PULLTASK_ID, ANYTYPE_NAME));\n+CREATE TABLE AnyTemplateRealm (id BIGINT NOT NULL, template CLOB, REALM_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMRLM_REALM_ID UNIQUE (REALM_ID, ANYTYPE_NAME));\n+CREATE TABLE AnyType (name VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (name));\n+CREATE TABLE AnyTypeClass (name VARCHAR(255) NOT NULL, PRIMARY KEY (name));\n+CREATE TABLE AnyType_AnyTypeClass (anyType_name VARCHAR(255), anyTypeClass_name VARCHAR(255));\n+CREATE TABLE APlainAttr (id BIGINT NOT NULL, OWNER_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE APlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_name), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_name), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_name), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_name), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_name));\n+CREATE TABLE APlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE ARelationship (id BIGINT NOT NULL, left_anyObject_id BIGINT, right_anyObject_id BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_NAME1 UNIQUE (TYPE_NAME, left_anyObject_id, right_anyObject_id));\n+CREATE TABLE ConnInstance (id BIGINT NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (id), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n+CREATE TABLE ConnInstance_capabilities (connInstance_id BIGINT, capability VARCHAR(20));\n+CREATE TABLE CPlainAttr (id BIGINT NOT NULL, schema_name VARCHAR(255), OWNER_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE CPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_name));\n+CREATE TABLE CPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE DerSchema (name VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_NAME VARCHAR(255), PRIMARY KEY (name));\n+CREATE TABLE DynRoleMembership (id BIGINT NOT NULL, fiql VARCHAR(255), ROLE_NAME VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE DynRoleMembership_User (dynRoleMembership_id BIGINT, user_id BIGINT);\n+CREATE TABLE ExternalResource (name VARCHAR(255) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, pullTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_ID BIGINT, CONNECTOR_ID BIGINT, PASSWORDPOLICY_ID BIGINT, PULLPOLICY_ID BIGINT, PRIMARY KEY (name));\n+CREATE TABLE ExternalResource_capOverride (resource_name VARCHAR(255), capabilityOverride VARCHAR(20));\n+CREATE TABLE ExternalResource_PropActions (resource_name VARCHAR(255), actionClassName VARCHAR(255));\n+CREATE TABLE GPlainAttr (id BIGINT NOT NULL, schema_name VARCHAR(255), OWNER_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE GPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_name));\n+CREATE TABLE GPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE MailTemplate (name VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (name));\n+CREATE TABLE Mapping (id BIGINT NOT NULL, connObjectLink VARCHAR(255), PROVISION_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE MappingItem (id BIGINT NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), intMappingType VARCHAR(22), mandatoryCondition VARCHAR(255), password INTEGER, purpose VARCHAR(20), MAPPING_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE MappingItem_Transformer (mappingItem_id BIGINT, transformerClassName VARCHAR(255));\n+CREATE TABLE Notification (id BIGINT NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientAttrType VARCHAR(22), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_name VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE NotificationTask_recipients (notificationTask_id BIGINT, address VARCHAR(255));\n+CREATE TABLE Notification_events (notification_id BIGINT, event VARCHAR(255));\n+CREATE TABLE Notification_staticRecipients (notification_id BIGINT, staticRecipients VARCHAR(255));\n+CREATE TABLE OPENJPA_SEQUENCES_TABLE (ID VARCHAR(255) NOT NULL, SEQUENCE_VALUE BIGINT, PRIMARY KEY (ID));\n+CREATE TABLE PasswordPolicy (id BIGINT NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (id));\n+CREATE TABLE PasswordRuleConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE PlainSchema (name VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_NAME VARCHAR(255), PRIMARY KEY (name));\n+CREATE TABLE Provision (id BIGINT NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, ANYTYPE_NAME VARCHAR(255), RESOURCE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PROVSON_RESOURCE_NAME UNIQUE (RESOURCE_NAME, ANYTYPE_NAME));\n+CREATE TABLE PullPolicy (id BIGINT NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n+CREATE TABLE PullTask_actionsClassNames (pullTask_id BIGINT, actionClassName VARCHAR(255));\n+CREATE TABLE PushPolicy (id BIGINT NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n+CREATE TABLE PushTaskAnyFilter (id BIGINT NOT NULL, fiql VARCHAR(255), PUSHTASK_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PSHTLTR_PUSHTASK_ID UNIQUE (PUSHTASK_ID, ANYTYPE_NAME));\n+CREATE TABLE PushTask_actionsClassNames (pushTask_id BIGINT, actionClassName VARCHAR(255));\n+CREATE TABLE Realm (id BIGINT NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_ID BIGINT, PARENT_ID BIGINT, PASSWORDPOLICY_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_REALM_NAME UNIQUE (name, PARENT_ID));\n+CREATE TABLE Realm_actionsClassNames (realm_id BIGINT, actionClassName VARCHAR(255));\n+CREATE TABLE RelationshipType (name VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (name));\n+CREATE TABLE Report (id BIGINT NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n+CREATE TABLE ReportExec (id BIGINT NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE ReportletConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, REPORT_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE ReportTemplate (name VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (name));\n+CREATE TABLE SecurityQuestion (id BIGINT NOT NULL, content VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n+CREATE TABLE SyncopeConf (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n+CREATE TABLE SyncopeDomain (name VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (name));\n+CREATE TABLE SyncopeGroup (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_ID BIGINT, GROUPOWNER_ID BIGINT, USEROWNER_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n+CREATE TABLE SyncopeGroup_AnyTypeClass (group_id BIGINT, anyTypeClass_name VARCHAR(255));\n+CREATE TABLE SyncopeGroup_ExternalResource (group_id BIGINT, resource_name VARCHAR(255));\n+CREATE TABLE SyncopeLogger (logName VARCHAR(255) NOT NULL, logLevel VARCHAR(20) NOT NULL, logType VARCHAR(20) NOT NULL, PRIMARY KEY (logName));\n+CREATE TABLE SyncopeRole (name VARCHAR(255) NOT NULL, PRIMARY KEY (name));\n+CREATE TABLE SyncopeRole_entitlements (role_name VARCHAR(255), entitlement VARCHAR(255));\n+CREATE TABLE SyncopeRole_Realm (role_name VARCHAR(255), realm_id BIGINT);\n+CREATE TABLE SyncopeUser (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_ID BIGINT, SECURITYQUESTION_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n+CREATE TABLE SyncopeUser_AnyTypeClass (user_id BIGINT, anyTypeClass_name VARCHAR(255));\n+CREATE TABLE SyncopeUser_ExternalResource (user_id BIGINT, resource_name VARCHAR(255));\n+CREATE TABLE SyncopeUser_passwordHistory (user_id BIGINT, passwordHistoryValue VARCHAR(255));\n+CREATE TABLE SyncopeUser_SyncopeRole (user_id BIGINT, role_name VARCHAR(255));\n+CREATE TABLE Task (id BIGINT NOT NULL, DTYPE VARCHAR(31), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, pullStatus INTEGER, unmatchingRule VARCHAR(20), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), RESOURCE_NAME VARCHAR(255), DESTINATIONREALM_ID BIGINT, executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), anyKey BIGINT, anyType VARCHAR(255), anyTypeKind VARCHAR(20), attributes CLOB, connObjectKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), PRIMARY KEY (id));\n+CREATE TABLE TaskExec (id BIGINT NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE TypeExtension (id BIGINT NOT NULL, GROUP_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_TYPXNSN_GROUP_ID UNIQUE (GROUP_ID, ANYTYPE_NAME));\n+CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_id BIGINT, anyTypeClass_name VARCHAR(255));\n+CREATE TABLE UDynGroupMembership (id BIGINT NOT NULL, fiql VARCHAR(255), GROUP_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_id BIGINT, user_id BIGINT);\n+CREATE TABLE UMembership (id BIGINT NOT NULL, user_id BIGINT, group_id BIGINT, PRIMARY KEY (id));\n+CREATE TABLE UPlainAttr (id BIGINT NOT NULL, OWNER_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id));\n+CREATE TABLE UPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_name));\n+CREATE TABLE UPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n+CREATE TABLE URelationship (id BIGINT NOT NULL, user_id BIGINT, anyObject_id BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_NAME UNIQUE (TYPE_NAME, user_id, anyObject_id));\n+CREATE TABLE VirSchema (name VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_NAME VARCHAR(255), PROVISION_ID BIGINT, PRIMARY KEY (name));\n+CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_ID ON AccountPolicy_ExternalResource (accountPolicy_id);\n+CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_name);\n+CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_NAME);\n+CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_ID);\n+CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_ID ON ADynGroupMembership_AnyObject (aDynGroupMembership_id);\n+CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_id);\n+CREATE INDEX I_MMBRSHP_LEFTEND1 ON AMembership (anyObject_id);\n+CREATE INDEX I_MMBRSHP_RIGHTEND1 ON AMembership (group_id);\n+CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_NAME);\n+CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_ID);\n+CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_ID);\n+CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_NAME);\n+CREATE INDEX I_NYBJLSS_ANYOBJECT_ID ON AnyObject_AnyTypeClass (anyObject_id);\n+CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_name);\n+CREATE INDEX I_NYBJSRC_ANYOBJECT_ID ON AnyObject_ExternalResource (anyObject_id);\n+CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_name);\n+CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_NAME);\n+CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_ID);\n+CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_NAME);\n+CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_ID);\n+CREATE INDEX I_NYTYLSS_ANYTYPE_NAME ON AnyType_AnyTypeClass (anyType_name);\n+CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_name);\n+CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_ID);\n+CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_name);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON APlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_PLNTQVL_SCHEMA1 ON APlainAttrUniqueValue (schema_name);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON APlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_RLTNSHP_LEFTEND1 ON ARelationship (left_anyObject_id);\n+CREATE INDEX I_RLTNSHP_RIGHTEND1 ON ARelationship (right_anyObject_id);\n+CREATE INDEX I_RLTNSHP_TYPE1 ON ARelationship (TYPE_NAME);\n+CREATE INDEX I_CNNNLTS_CONNINSTANCE_ID ON ConnInstance_capabilities (connInstance_id);\n+CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_ID);\n+CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_name);\n+CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_name);\n+CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_NAME);\n+CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_NAME);\n+CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_ID ON DynRoleMembership_User (dynRoleMembership_id);\n+CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_id);\n+CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_ID);\n+CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_ID);\n+CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_ID);\n+CREATE INDEX I_XTRNRRD_RESOURCE_NAME ON ExternalResource_capOverride (resource_name);\n+CREATE INDEX I_XTRNTNS_RESOURCE_NAME ON ExternalResource_PropActions (resource_name);\n+CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_ID);\n+CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_name);\n+CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_name);\n+CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_ID);\n+CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_ID);\n+CREATE INDEX I_MPPNRMR_MAPPINGITEM_ID ON MappingItem_Transformer (mappingItem_id);\n+CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_name);\n+CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_ID ON NotificationTask_recipients (notificationTask_id);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_ID ON Notification_events (notification_id);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_ID1 ON Notification_staticRecipients (notification_id);\n+CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_ID);\n+CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_NAME);\n+CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_NAME);\n+CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_NAME);\n+CREATE INDEX I_PLLTNMS_PULLTASK_ID ON PullTask_actionsClassNames (pullTask_id);\n+CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_NAME);\n+CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_ID);\n+CREATE INDEX I_PSHTNMS_PUSHTASK_ID ON PushTask_actionsClassNames (pushTask_id);\n+CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_ID);\n+CREATE INDEX I_REALM_PARENT ON Realm (PARENT_ID);\n+CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_ID);\n+CREATE INDEX I_RLM_NMS_REALM_ID ON Realm_actionsClassNames (realm_id);\n+CREATE INDEX I_REPORT_TEMPLATE ON Report (template_name);\n+CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_ID);\n+CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_ID);\n+CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_ID);\n+CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_ID);\n+CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_ID);\n+CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_name);\n+CREATE INDEX I_SYNCLSS_GROUP_ID ON SyncopeGroup_AnyTypeClass (group_id);\n+CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_name);\n+CREATE INDEX I_SYNCSRC_GROUP_ID ON SyncopeGroup_ExternalResource (group_id);\n+CREATE INDEX I_SYNCNTS_ROLE_NAME ON SyncopeRole_entitlements (role_name);\n+CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_id);\n+CREATE INDEX I_SYNCRLM_ROLE_NAME ON SyncopeRole_Realm (role_name);\n+CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_ID);\n+CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_ID);\n+CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_name);\n+CREATE INDEX I_SYNCLSS_USER_ID ON SyncopeUser_AnyTypeClass (user_id);\n+CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_name);\n+CREATE INDEX I_SYNCSRC_USER_ID ON SyncopeUser_ExternalResource (user_id);\n+CREATE INDEX I_SYNCTRY_USER_ID ON SyncopeUser_passwordHistory (user_id);\n+CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_name);\n+CREATE INDEX I_SYNCPRL_USER_ID ON SyncopeUser_SyncopeRole (user_id);\n+CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_ID);\n+CREATE INDEX I_TASK_DTYPE ON Task (DTYPE);\n+CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_NAME);\n+CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_ID);\n+CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_NAME);\n+CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_ID);\n+CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_name);\n+CREATE INDEX I_TYPXLSS_TYPEEXTENSION_ID ON TypeExtension_AnyTypeClass (typeExtension_id);\n+CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_ID);\n+CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_id);\n+CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_ID ON UDynGroupMembership_User (uDynGroupMembership_id);\n+CREATE INDEX I_MMBRSHP_LEFTEND ON UMembership (user_id);\n+CREATE INDEX I_MMBRSHP_RIGHTEND ON UMembership (group_id);\n+CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_ID);\n+CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_name);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE ON UPlainAttrUniqueValue (ATTRIBUTE_ID);\n+CREATE INDEX I_PLNTQVL_SCHEMA ON UPlainAttrUniqueValue (schema_name);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE ON UPlainAttrValue (ATTRIBUTE_ID);\n+CREATE INDEX I_RLTNSHP_LEFTEND ON URelationship (user_id);\n+CREATE INDEX I_RLTNSHP_RIGHTEND ON URelationship (anyObject_id);\n+CREATE INDEX I_RLTNSHP_TYPE ON URelationship (TYPE_NAME);\n+CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_NAME);\n+CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_ID);"},{"sha":"77028b199378d1863d0359cfddde630bc540b601","filename":"client/cli/src/test/resources/test.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Ftest.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Ftest.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Ftest.properties?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+testClasses=${project.build.directory}/test-classes"},{"sha":"c287ca14a3d928a93b0501b233f77d9172f5004a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/ContentLoaderHandler.java","status":"modified","additions":19,"deletions":13,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -40,17 +40,20 @@\n /**\n  * SAX handler for generating SQL INSERT statements out of given XML file.\n  */\n-class ContentLoaderHandler extends DefaultHandler {\n+public class ContentLoaderHandler extends DefaultHandler {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ContentLoaderHandler.class);\n \n     private final DataSource dataSource;\n \n     private final String rootElement;\n \n-    ContentLoaderHandler(final DataSource dataSource, final String rootElement) {\n+    private final boolean continueOnError;\n+\n+    public ContentLoaderHandler(final DataSource dataSource, final String rootElement, final boolean continueOnError) {\n         this.dataSource = dataSource;\n         this.rootElement = rootElement;\n+        this.continueOnError = continueOnError;\n     }\n \n     private Object[] getParameters(final String tableName, final Attributes attrs) {\n@@ -59,17 +62,17 @@ private Object[] getParameters(final String tableName, final Attributes attrs) {\n         Map<String, Integer> colTypes = jdbcTemplate.query(\"SELECT * FROM \" + tableName + \" WHERE 0=1\",\n                 new ResultSetExtractor<Map<String, Integer>>() {\n \n-                    @Override\n-                    public Map<String, Integer> extractData(final ResultSet rs) throws SQLException {\n-                        Map<String, Integer> colTypes = new HashMap<>();\n-                        for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n-                            colTypes.put(\n-                                    rs.getMetaData().getColumnName(i).toUpperCase(),\n-                                    rs.getMetaData().getColumnType(i));\n-                        }\n-                        return colTypes;\n-                    }\n-                });\n+            @Override\n+            public Map<String, Integer> extractData(final ResultSet rs) throws SQLException {\n+                Map<String, Integer> colTypes = new HashMap<>();\n+                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n+                    colTypes.put(\n+                            rs.getMetaData().getColumnName(i).toUpperCase(),\n+                            rs.getMetaData().getColumnType(i));\n+                }\n+                return colTypes;\n+            }\n+        });\n \n         Object[] parameters = new Object[attrs.getLength()];\n         for (int i = 0; i < attrs.getLength(); i++) {\n@@ -194,6 +197,9 @@ public void startElement(final String uri, final String localName, final String\n             jdbcTemplate.update(query.toString(), getParameters(qName, atts));\n         } catch (DataAccessException e) {\n             LOG.error(\"While trying to perform {}\", query, e);\n+            if (!continueOnError) {\n+                throw e;\n+            }\n         }\n     }\n }"},{"sha":"3d46c896a514fd47c63ccd9556d29676131136d4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -102,7 +102,7 @@ private void loadDefaultContent(\n             in = contentXML.getResource().getInputStream();\n \n             SAXParser parser = factory.newSAXParser();\n-            parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT));\n+            parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT, true));\n             LOG.debug(\"[{}] Default content successfully loaded\", domain);\n         } finally {\n             IOUtils.closeQuietly(in);"},{"sha":"af4f96193d92f1da970ead0a9ce717e67baffae5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d286f86fb9ed30f90bb0324dbca39f5946e2f2d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=3d286f86fb9ed30f90bb0324dbca39f5946e2f2d","patch":"@@ -43,16 +43,11 @@\n import org.apache.syncope.client.cli.commands.role.RoleCommand;\n import org.apache.syncope.client.cli.commands.user.UserCommand;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.apache.syncope.fit.core.ExceptionMapperITCase;\n import org.junit.BeforeClass;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n-\n @FixMethodOrder(MethodSorters.JVM)\n public class CLIITCase extends AbstractITCase {\n \n@@ -65,7 +60,7 @@ public static void install() {\n         Properties props = new Properties();\n         InputStream propStream = null;\n         try {\n-            propStream = ExceptionMapperITCase.class.getResourceAsStream(\"/cli-test.properties\");\n+            propStream = CLIITCase.class.getResourceAsStream(\"/cli-test.properties\");\n             props.load(propStream);\n \n             File workDir = new File(props.getProperty(\"cli-work.dir\"));"}]}