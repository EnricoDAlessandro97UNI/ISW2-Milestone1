{"sha":"03b743992215a24fe131fe4e00f2171911e55f1d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzYjc0Mzk5MjIxNWEyNGZlMTMxZmU0ZTAwZjIxNzE5MTFlNTVmMWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-02T15:20:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-02T15:20:08Z"},"message":"[SYNCOPE-744] New look for the dashboard, job widget completed","tree":{"sha":"9eb80cfbde0cc2251d1ea7a7ad0c0a14d977a502","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9eb80cfbde0cc2251d1ea7a7ad0c0a14d977a502"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03b743992215a24fe131fe4e00f2171911e55f1d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03b743992215a24fe131fe4e00f2171911e55f1d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03b743992215a24fe131fe4e00f2171911e55f1d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03b743992215a24fe131fe4e00f2171911e55f1d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"981dba133cd4615ad7ffde5b2c7e6fa8c99a4568","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/981dba133cd4615ad7ffde5b2c7e6fa8c99a4568","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/981dba133cd4615ad7ffde5b2c7e6fa8c99a4568"}],"stats":{"total":696,"additions":435,"deletions":261},"files":[{"sha":"2a508d108963341ed24d4be6552da8d56feed395","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -26,10 +26,6 @@ public final class Constants {\n \n     public static final String ON_BLUR = \"blur\";\n \n-    public static final String ON_MOUSE_ENTER = \"mouseenter\";\n-\n-    public static final String ON_MOUSE_LEAVE = \"mouseleave\";\n-\n     public static final String PNG_EXT = \".png\";\n \n     public static final String FEEDBACK = \"feedback\";"},{"sha":"10a6a5ff8a5b5ca91aad151f91bce59244591a3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Dashboard.java","status":"modified","additions":36,"deletions":147,"changes":183,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -18,176 +18,65 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n-import org.apache.syncope.client.console.widgets.NumberWidget;\n-import org.apache.syncope.client.console.widgets.AnyByRealmWidget;\n-import org.apache.syncope.client.console.widgets.CompletenessWidget;\n-import org.apache.syncope.client.console.widgets.JobWidget;\n-import org.apache.syncope.client.console.widgets.LoadWidget;\n-import org.apache.syncope.client.console.widgets.UsersByStatusWidget;\n-import org.apache.syncope.common.lib.info.NumbersInfo;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.panels.DashboardControlPanel;\n+import org.apache.syncope.client.console.panels.DashboardExtensionsPanel;\n+import org.apache.syncope.client.console.panels.DashboardOverviewPanel;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.util.time.Duration;\n \n public class Dashboard extends BasePage {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private final NumberWidget totalUsers;\n-\n-    private final NumberWidget totalGroups;\n-\n-    private final NumberWidget totalAny1OrRoles;\n-\n-    private final NumberWidget totalAny2OrResources;\n-\n-    private final UsersByStatusWidget usersByStatus;\n-\n-    private final CompletenessWidget completeness;\n-\n-    private final AnyByRealmWidget anyByRealm;\n-\n-    private final LoadWidget load;\n-\n     public Dashboard(final PageParameters parameters) {\n         super(parameters);\n \n-        NumbersInfo numbers = SyncopeConsoleSession.get().getService(SyncopeService.class).numbers();\n-\n-        WebMarkupContainer timer = new WebMarkupContainer(\"timer\");\n-        timer.setOutputMarkupId(true);\n-        body.add(timer);\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n+        body.add(content);\n+    }\n \n-        totalUsers = new NumberWidget(\n-                \"totalUsers\", \"bg-yellow\", numbers.getTotalUsers(), getString(\"users\"), \"ion ion-person\");\n-        timer.add(totalUsers);\n-        totalGroups = new NumberWidget(\n-                \"totalGroups\", \"bg-red\", numbers.getTotalGroups(), getString(\"groups\"), \"ion ion-person-stalker\");\n-        timer.add(totalGroups);\n+    private List<ITab> buildTabList() {\n+        final List<ITab> tabs = new ArrayList<>();\n \n-        Triple<Integer, String, String> built = buildTotalAny1OrRoles(numbers);\n-        totalAny1OrRoles = new NumberWidget(\n-                \"totalAny1OrRoles\", \"bg-green\", built.getLeft(), built.getMiddle(), built.getRight());\n-        timer.add(totalAny1OrRoles);\n+        tabs.add(new AbstractTab(new ResourceModel(\"overview\")) {\n \n-        built = buildTotalAny2OrResources(numbers);\n-        totalAny2OrResources = new NumberWidget(\n-                \"totalAny2OrResources\", \"bg-aqua\", built.getLeft(), built.getMiddle(), built.getRight());\n-        timer.add(totalAny2OrResources);\n+            private static final long serialVersionUID = -6815067322125799251L;\n \n-        usersByStatus = new UsersByStatusWidget(\"usersByStatus\", numbers.getUsersByStatus());\n-        timer.add(usersByStatus);\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new DashboardOverviewPanel(panelId);\n+            }\n+        });\n \n-        completeness = new CompletenessWidget(\"completeness\", numbers.getConfCompleteness());\n-        timer.add(completeness);\n+        tabs.add(new AbstractTab(new ResourceModel(\"control\")) {\n \n-        anyByRealm = new AnyByRealmWidget(\n-                \"anyByRealm\",\n-                numbers.getUsersByRealm(),\n-                numbers.getGroupsByRealm(),\n-                numbers.getAnyType1(),\n-                numbers.getAny1ByRealm(),\n-                numbers.getAnyType2(),\n-                numbers.getAny2ByRealm());\n-        timer.add(anyByRealm);\n+            private static final long serialVersionUID = -6815067322125799251L;\n \n-        load = new LoadWidget(\"load\", SyncopeConsoleSession.get().getService(SyncopeService.class).system());\n-        timer.add(load);\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new DashboardControlPanel(panelId, getPageReference());\n+            }\n+        });\n \n-        timer.add(new IndicatorAjaxTimerBehavior(Duration.seconds(60)) {\n+        tabs.add(new AbstractTab(new ResourceModel(\"extensions\")) {\n \n-            private static final long serialVersionUID = -4426283634345968585L;\n+            private static final long serialVersionUID = -6815067322125799251L;\n \n             @Override\n-            protected void onTimer(final AjaxRequestTarget target) {\n-                NumbersInfo numbers = SyncopeConsoleSession.get().getService(SyncopeService.class).numbers();\n-\n-                if (totalUsers.refresh(numbers.getTotalUsers())) {\n-                    target.add(totalUsers);\n-                }\n-                if (totalGroups.refresh(numbers.getTotalGroups())) {\n-                    target.add(totalGroups);\n-                }\n-\n-                Triple<Integer, String, String> updatedBuild = buildTotalAny1OrRoles(numbers);\n-                if (totalAny1OrRoles.refresh(updatedBuild.getLeft())) {\n-                    target.add(totalAny1OrRoles);\n-                }\n-                updatedBuild = buildTotalAny2OrResources(numbers);\n-                if (totalAny2OrResources.refresh(updatedBuild.getLeft())) {\n-                    target.add(totalAny2OrResources);\n-                }\n-\n-                if (usersByStatus.refresh(numbers.getUsersByStatus())) {\n-                    target.add(usersByStatus);\n-                }\n-\n-                if (completeness.refresh(numbers.getConfCompleteness())) {\n-                    target.add(completeness);\n-                }\n-\n-                if (anyByRealm.refresh(\n-                        numbers.getUsersByRealm(),\n-                        numbers.getGroupsByRealm(),\n-                        numbers.getAnyType1(),\n-                        numbers.getAny1ByRealm(),\n-                        numbers.getAnyType2(),\n-                        numbers.getAny2ByRealm())) {\n-\n-                    target.add(anyByRealm);\n-                }\n-\n-                load.refresh(SyncopeConsoleSession.get().getService(SyncopeService.class).system());\n-                target.add(load);\n+            public Panel getPanel(final String panelId) {\n+                return new DashboardExtensionsPanel(panelId, getPageReference());\n             }\n         });\n \n-        JobWidget job = new JobWidget(\"job\", getPageReference());\n-        MetaDataRoleAuthorizationStrategy.authorize(job, WebPage.ENABLE,\n-                String.format(\"%s,%s,%s\",\n-                        StandardEntitlement.NOTIFICATION_LIST,\n-                        StandardEntitlement.TASK_LIST,\n-                        StandardEntitlement.REPORT_LIST));\n-        body.add(job);\n-    }\n-\n-    private Triple<Integer, String, String> buildTotalAny1OrRoles(final NumbersInfo numbers) {\n-        int number;\n-        String label;\n-        String icon;\n-        if (numbers.getAnyType1() == null) {\n-            number = numbers.getTotalRoles();\n-            label = getString(\"roles\");\n-            icon = \"fa fa-users\";\n-        } else {\n-            number = numbers.getTotalAny1();\n-            label = numbers.getAnyType1();\n-            icon = \"ion ion-gear-a\";\n-        }\n-        return Triple.of(number, label, icon);\n-    }\n-\n-    private Triple<Integer, String, String> buildTotalAny2OrResources(final NumbersInfo numbers) {\n-        int number;\n-        String label;\n-        String icon;\n-        if (numbers.getAnyType2() == null) {\n-            number = numbers.getTotalResources();\n-            label = getString(\"resources\");\n-            icon = \"fa fa-database\";\n-        } else {\n-            number = numbers.getTotalAny2();\n-            label = numbers.getAnyType2();\n-            icon = \"ion ion-gear-a\";\n-        }\n-        return Triple.of(number, label, icon);\n+        return tabs;\n     }\n }"},{"sha":"c1816b97acfb2a9c15fff9432654e4c837e3e348","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Logs.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -39,9 +39,7 @@ public Logs(final PageParameters parameters) {\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n-        content.add(tabbedPanel);\n-\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n         body.add(content);\n     }\n "},{"sha":"d8159580bae2fbbf1f04d859aaa0379499d284a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -36,8 +36,6 @@ public class Types extends BasePage {\n \n     private static final long serialVersionUID = 8091922398776299403L;\n \n-    private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n-\n     private enum Type {\n         SCHEMA,\n         ANYTYPECLASS,\n@@ -51,13 +49,11 @@ public Types(final PageParameters parameters) {\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n-        tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n-        content.add(tabbedPanel);\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n         body.add(content);\n     }\n \n     private List<ITab> buildTabList() {\n-\n         final List<ITab> tabs = new ArrayList<>();\n \n         tabs.add(new AbstractTab(new Model<>(\"RelationshipTypes\")) {"},{"sha":"0c993b83bea9de16495f276278d2971a6d9bac95","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DashboardControlPanel.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.widgets.JobWidget;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class DashboardControlPanel extends Panel {\n+\n+    private static final long serialVersionUID = -776362411304859269L;\n+\n+    public DashboardControlPanel(final String id, final PageReference pageRef) {\n+        super(id);\n+\n+        JobWidget job = new JobWidget(\"job\", pageRef);\n+        MetaDataRoleAuthorizationStrategy.authorize(job, WebPage.ENABLE,\n+                String.format(\"%s,%s,%s\",\n+                        StandardEntitlement.NOTIFICATION_LIST,\n+                        StandardEntitlement.TASK_LIST,\n+                        StandardEntitlement.REPORT_LIST));\n+        add(job);\n+    }\n+}"},{"sha":"f2639f890cd82a5991b23402f85b4a1ecd6f5b77","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DashboardExtensionsPanel.java","status":"renamed","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -16,25 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.wicket.ajax;\n+package org.apache.syncope.client.console.panels;\n \n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.wicket.ajax.AjaxEventBehavior;\n-import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n \n-/**\n- * An {@link AjaxEventBehavior} not showin veil.\n- */\n-public abstract class IndicatorAjaxEventBehavior extends AjaxEventBehavior implements IAjaxIndicatorAware {\n-\n-    private static final long serialVersionUID = 8531694702059356303L;\n+public class DashboardExtensionsPanel extends Panel {\n \n-    public IndicatorAjaxEventBehavior(final String event) {\n-        super(event);\n-    }\n+    private static final long serialVersionUID = 6381578992589664490L;\n \n-    @Override\n-    public String getAjaxIndicatorMarkupId() {\n-        return StringUtils.EMPTY;\n+    public DashboardExtensionsPanel(final String id, final PageReference pageRef) {\n+        super(id);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/IndicatorAjaxEventBehavior.java"},{"sha":"98508effb008ecfe8085850f3ce4d011a8943738","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DashboardOverviewPanel.java","status":"added","additions":181,"deletions":0,"changes":181,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,181 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n+import org.apache.syncope.client.console.widgets.AnyByRealmWidget;\n+import org.apache.syncope.client.console.widgets.CompletenessWidget;\n+import org.apache.syncope.client.console.widgets.LoadWidget;\n+import org.apache.syncope.client.console.widgets.NumberWidget;\n+import org.apache.syncope.client.console.widgets.UsersByStatusWidget;\n+import org.apache.syncope.common.lib.info.NumbersInfo;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.util.time.Duration;\n+\n+public class DashboardOverviewPanel extends Panel {\n+\n+    private static final long serialVersionUID = 5989039374050260225L;\n+\n+    private final NumberWidget totalUsers;\n+\n+    private final NumberWidget totalGroups;\n+\n+    private final NumberWidget totalAny1OrRoles;\n+\n+    private final NumberWidget totalAny2OrResources;\n+\n+    private final UsersByStatusWidget usersByStatus;\n+\n+    private final CompletenessWidget completeness;\n+\n+    private final AnyByRealmWidget anyByRealm;\n+\n+    private final LoadWidget load;\n+\n+    public DashboardOverviewPanel(final String id) {\n+        super(id);\n+\n+        NumbersInfo numbers = SyncopeConsoleSession.get().getService(SyncopeService.class).numbers();\n+\n+        WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        totalUsers = new NumberWidget(\n+                \"totalUsers\", \"bg-yellow\", numbers.getTotalUsers(), getString(\"users\"), \"ion ion-person\");\n+        container.add(totalUsers);\n+        totalGroups = new NumberWidget(\n+                \"totalGroups\", \"bg-red\", numbers.getTotalGroups(), getString(\"groups\"), \"ion ion-person-stalker\");\n+        container.add(totalGroups);\n+\n+        Triple<Integer, String, String> built = buildTotalAny1OrRoles(numbers);\n+        totalAny1OrRoles = new NumberWidget(\n+                \"totalAny1OrRoles\", \"bg-green\", built.getLeft(), built.getMiddle(), built.getRight());\n+        container.add(totalAny1OrRoles);\n+\n+        built = buildTotalAny2OrResources(numbers);\n+        totalAny2OrResources = new NumberWidget(\n+                \"totalAny2OrResources\", \"bg-aqua\", built.getLeft(), built.getMiddle(), built.getRight());\n+        container.add(totalAny2OrResources);\n+\n+        usersByStatus = new UsersByStatusWidget(\"usersByStatus\", numbers.getUsersByStatus());\n+        container.add(usersByStatus);\n+\n+        completeness = new CompletenessWidget(\"completeness\", numbers.getConfCompleteness());\n+        container.add(completeness);\n+\n+        anyByRealm = new AnyByRealmWidget(\n+                \"anyByRealm\",\n+                numbers.getUsersByRealm(),\n+                numbers.getGroupsByRealm(),\n+                numbers.getAnyType1(),\n+                numbers.getAny1ByRealm(),\n+                numbers.getAnyType2(),\n+                numbers.getAny2ByRealm());\n+        container.add(anyByRealm);\n+\n+        load = new LoadWidget(\"load\", SyncopeConsoleSession.get().getService(SyncopeService.class).system());\n+        container.add(load);\n+\n+        container.add(new IndicatorAjaxTimerBehavior(Duration.seconds(60)) {\n+\n+            private static final long serialVersionUID = -4426283634345968585L;\n+\n+            @Override\n+            protected void onTimer(final AjaxRequestTarget target) {\n+                NumbersInfo numbers = SyncopeConsoleSession.get().getService(SyncopeService.class).numbers();\n+\n+                if (totalUsers.refresh(numbers.getTotalUsers())) {\n+                    target.add(totalUsers);\n+                }\n+                if (totalGroups.refresh(numbers.getTotalGroups())) {\n+                    target.add(totalGroups);\n+                }\n+\n+                Triple<Integer, String, String> updatedBuild = buildTotalAny1OrRoles(numbers);\n+                if (totalAny1OrRoles.refresh(updatedBuild.getLeft())) {\n+                    target.add(totalAny1OrRoles);\n+                }\n+                updatedBuild = buildTotalAny2OrResources(numbers);\n+                if (totalAny2OrResources.refresh(updatedBuild.getLeft())) {\n+                    target.add(totalAny2OrResources);\n+                }\n+\n+                if (usersByStatus.refresh(numbers.getUsersByStatus())) {\n+                    target.add(usersByStatus);\n+                }\n+\n+                if (completeness.refresh(numbers.getConfCompleteness())) {\n+                    target.add(completeness);\n+                }\n+\n+                if (anyByRealm.refresh(\n+                        numbers.getUsersByRealm(),\n+                        numbers.getGroupsByRealm(),\n+                        numbers.getAnyType1(),\n+                        numbers.getAny1ByRealm(),\n+                        numbers.getAnyType2(),\n+                        numbers.getAny2ByRealm())) {\n+\n+                    target.add(anyByRealm);\n+                }\n+\n+                load.refresh(SyncopeConsoleSession.get().getService(SyncopeService.class).system());\n+                target.add(load);\n+            }\n+        });\n+    }\n+\n+    private Triple<Integer, String, String> buildTotalAny1OrRoles(final NumbersInfo numbers) {\n+        int number;\n+        String label;\n+        String icon;\n+        if (numbers.getAnyType1() == null) {\n+            number = numbers.getTotalRoles();\n+            label = getString(\"roles\");\n+            icon = \"fa fa-users\";\n+        } else {\n+            number = numbers.getTotalAny1();\n+            label = numbers.getAnyType1();\n+            icon = \"ion ion-gear-a\";\n+        }\n+        return Triple.of(number, label, icon);\n+    }\n+\n+    private Triple<Integer, String, String> buildTotalAny2OrResources(final NumbersInfo numbers) {\n+        int number;\n+        String label;\n+        String icon;\n+        if (numbers.getAnyType2() == null) {\n+            number = numbers.getTotalResources();\n+            label = getString(\"resources\");\n+            icon = \"fa fa-database\";\n+        } else {\n+            number = numbers.getTotalAny2();\n+            label = numbers.getAnyType2();\n+            icon = \"ion ion-gear-a\";\n+        }\n+        return Triple.of(number, label, icon);\n+    }\n+}"},{"sha":"56711f44dc393caf5cf7beedd733e44c6f931932","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MultilevelPanel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -33,9 +33,6 @@ public class MultilevelPanel extends Panel implements IHeaderContributor {\n \n     private static final long serialVersionUID = -4064294905566247729L;\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(MultilevelPanel.class);\n \n     private boolean isFirstLevel = true;"},{"sha":"9c30ce9e7b00cd9693f8a7a967e800fb4bd789de","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecMessage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -28,7 +28,7 @@ public class ExecMessage extends MultilevelPanel.SecondLevel {\n \n     public ExecMessage(final String message) {\n         super();\n-        final Label dialogContent = new Label(\"message\", new Model<String>(message));\n+        final Label dialogContent = new Label(\"message\", new Model<>(message));\n         add(dialogContent.setOutputMarkupId(true));\n     }\n }"},{"sha":"e3c589d28dcffa487aa237c7f588fbed2e7409f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -65,7 +65,7 @@ protected void initResultTable() {\n \n     @Override\n     protected List<IColumn<T, String>> getFieldColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<IColumn<T, String>>();\n+        final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));"},{"sha":"b7bd69c4006e77e021cc1604a72a38f3a0702c1e","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -93,8 +93,8 @@ protected List<String> load() {\n         };\n \n         public Profile(final SchedTaskTO taskTO) {\n-            final AjaxTextFieldPanel name\n-                    = new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(taskTO, \"name\"), false);\n+            final AjaxTextFieldPanel name =\n+                    new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(taskTO, \"name\"), false);\n             name.setEnabled(true);\n             add(name);\n \n@@ -144,7 +144,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     new PropertyModel<String>(taskTO, \"destinationRealm\"), false);\n             syncTaskSpecifics.add(destinationRealm);\n \n-            final AjaxDropDownChoicePanel<String> className = new AjaxDropDownChoicePanel<String>(\n+            final AjaxDropDownChoicePanel<String> className = new AjaxDropDownChoicePanel<>(\n                     \"jobDelegateClassName\",\n                     getString(\"jobDelegateClassName\"),\n                     new PropertyModel<String>(taskTO, \"jobDelegateClassName\"), false);"},{"sha":"6112d678c89096866708b311f214eae5b54b1fa0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTaskSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -43,6 +43,6 @@ protected String paginatorRowsKey() {\n \n     @Override\n     protected ProvisioningTasksProvider<SyncTaskTO> dataProvider() {\n-        return new ProvisioningTasksProvider<SyncTaskTO>(reference, TaskType.SYNCHRONIZATION, rows);\n+        return new ProvisioningTasksProvider<>(reference, TaskType.SYNCHRONIZATION, rows);\n     }\n }"},{"sha":"db426af0a8d5cef494960209d137f5aacd077ab1","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -88,7 +88,7 @@ public TasksProvider(final int paginatorRows, final TaskType id) {\n \n             //Default sorting\n             setSort(\"key\", SortOrder.DESCENDING);\n-            comparator = new SortableDataProviderComparator<T>(this);\n+            comparator = new SortableDataProviderComparator<>(this);\n             this.id = id;\n         }\n "},{"sha":"89f19646187dfae2a8e544cdfcb84cc04ac00272","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":4,"deletions":43,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -27,12 +27,10 @@\n import java.util.concurrent.TimeUnit;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxEventBehavior;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -46,7 +44,6 @@\n import org.apache.wicket.Application;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ThreadContext;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n@@ -106,10 +103,6 @@ private static List<ExecTO> getRecent(final SyncopeConsoleSession session) {\n \n     private final RecentExecPanel recentExecPanel;\n \n-    private boolean refresh = true;\n-\n-    private boolean pendingRefresh = false;\n-\n     public JobWidget(final String id, final PageReference pageRef) {\n         super(id);\n \n@@ -135,34 +128,6 @@ protected void onConnect(final ConnectedMessage message) {\n                 SyncopeConsoleSession.get().scheduleAtFixedRate(new JobInfoUpdater(message), 0, 10, TimeUnit.SECONDS);\n             }\n         });\n-\n-        add(new IndicatorAjaxEventBehavior(Constants.ON_MOUSE_ENTER) {\n-\n-            private static final long serialVersionUID = -7133385027739964990L;\n-\n-            @Override\n-            protected void onEvent(final AjaxRequestTarget target) {\n-                refresh = false;\n-                LOG.debug(\"Refresh disabled\");\n-            }\n-        });\n-        add(new IndicatorAjaxEventBehavior(Constants.ON_MOUSE_LEAVE) {\n-\n-            private static final long serialVersionUID = -7133385027739964990L;\n-\n-            @Override\n-            protected void onEvent(final AjaxRequestTarget target) {\n-                refresh = true;\n-                LOG.debug(\"Refresh enabled\");\n-\n-                if (pendingRefresh) {\n-                    LOG.debug(\"Refresh pending\");\n-\n-                    target.add(availableJobsPanel);\n-                    pendingRefresh = false;\n-                }\n-            }\n-        });\n     }\n \n     @Override\n@@ -176,14 +141,10 @@ public void onEvent(final IEvent<?> event) {\n                 recent.clear();\n                 recent.addAll(((JobWidgetMessage) wsEvent.getMessage()).getUpdatedRecent());\n \n-                if (refresh) {\n-                    availableJobsPanel.modelChanged();\n-                    wsEvent.getHandler().add(availableJobsPanel);\n-                    recentExecPanel.modelChanged();\n-                    wsEvent.getHandler().add(recentExecPanel);\n-                } else {\n-                    pendingRefresh = true;\n-                }\n+                availableJobsPanel.modelChanged();\n+                wsEvent.getHandler().add(availableJobsPanel);\n+                recentExecPanel.modelChanged();\n+                wsEvent.getHandler().add(recentExecPanel);\n             }\n         } else if (event.getPayload() instanceof JobActionPanel.JobActionPayload) {\n             available.clear();"},{"sha":"1c90828e388889358bff0ca3017d8c77f50ac0dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -82,7 +82,7 @@ protected void onConfigure() {\n     /**\n      * Modal window.\n      */\n-    protected final BaseModal<T> alternativeDefaultModal = new BaseModal<T>(\"alternativeDefaultModal\");\n+    protected final BaseModal<T> alternativeDefaultModal = new BaseModal<>(\"alternativeDefaultModal\");\n \n     protected WizardMgtPanel(final String id) {\n         this(id, false);"},{"sha":"4455eb7a76cbca78587d82cab006b46d666a12f2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard.html","status":"modified","additions":3,"deletions":32,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -24,38 +24,9 @@ <h1>\n       </h1>\n     </section>\n \n-    <section class=\"content\">\n-      <div wicket:id=\"timer\">\n-        <div class=\"row\">\n-          <span wicket:id=\"totalUsers\"/>\n-          <span wicket:id=\"totalGroups\"/>\n-          <span wicket:id=\"totalAny1OrRoles\"/>\n-          <span wicket:id=\"totalAny2OrResources\"/>\n-        </div>\n-\n-        <div class=\"row\">\n-          <div class=\"col-md-4\">\n-            <span wicket:id=\"usersByStatus\"/>\n-          </div>\n-          <div class=\"col-md-4\">\n-            <span wicket:id=\"completeness\"/>\n-          </div>\n-          <div class=\"col-md-4\">\n-            <span wicket:id=\"load\"/>\n-          </div>\n-        </div>\n-\n-        <div class=\"row\">\n-          <div class=\"col-md-6\">\n-            <span wicket:id=\"anyByRealm\"/>\n-          </div>\n-        </div>\n-      </div>\n-\n-      <div class=\"row\">\n-        <div class=\"col-md-12\">\n-          <span wicket:id=\"job\"/>\n-        </div>\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"tabbedPanel\"/>\n       </div>\n     </section>\n   </wicket:extend>"},{"sha":"d736c6d98ac8178ea9c3d5d402564eae2bae2716","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+overview=Overview\n+control=Control"},{"sha":"c35799aeba4c5034f1b0118e7a6a66dc8d4d897c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+overview=Sommario\n+control=Gestione"},{"sha":"a104327260d6505bb47bb631db61d19dcc9612cd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+overview=Resumo\n+control=Gest\\u00e3o"},{"sha":"ae731af959058ca857dfd1428b0ee01983fda5e4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DashboardControlPanel.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardControlPanel.html?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"row\">\n+      <div class=\"col-md-12\">\n+        <span wicket:id=\"job\"/>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"102a5872e22c9ccb0ebe171ab5acbeb69543c2c8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DashboardExtensionsPanel.html","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.html?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,22 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"7d652b3ce367870533deeecf8ffdac4e846d96ba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DashboardOverviewPanel.html","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03b743992215a24fe131fe4e00f2171911e55f1d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.html?ref=03b743992215a24fe131fe4e00f2171911e55f1d","patch":"@@ -0,0 +1,48 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"container\">\n+      <div class=\"row\">\n+        <span wicket:id=\"totalUsers\"/>\n+        <span wicket:id=\"totalGroups\"/>\n+        <span wicket:id=\"totalAny1OrRoles\"/>\n+        <span wicket:id=\"totalAny2OrResources\"/>\n+      </div>\n+\n+      <div class=\"row\">\n+        <div class=\"col-md-4\">\n+          <span wicket:id=\"usersByStatus\"/>\n+        </div>\n+        <div class=\"col-md-4\">\n+          <span wicket:id=\"completeness\"/>\n+        </div>\n+        <div class=\"col-md-4\">\n+          <span wicket:id=\"load\"/>\n+        </div>\n+      </div>\n+\n+      <div class=\"row\">\n+        <div class=\"col-md-6\">\n+          <span wicket:id=\"anyByRealm\"/>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"}]}