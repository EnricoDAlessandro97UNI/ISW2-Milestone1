{"sha":"dfc0a39bfef5f671b27cf611bc2084e086252bb4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmYzBhMzliZmVmNWY2NzFiMjdjZjYxMWJjMjA4NGUwODYyNTJiYjQ=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T13:32:20Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T13:32:20Z"},"message":"[SYNCOPE-231]\n* adding JAVA DOC\n* renaming validate to check for connector service\n* Code cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440409 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2db030fb16364e00a27e949e9f2fc46481aa4c74","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2db030fb16364e00a27e949e9f2fc46481aa4c74"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dfc0a39bfef5f671b27cf611bc2084e086252bb4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc0a39bfef5f671b27cf611bc2084e086252bb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dfc0a39bfef5f671b27cf611bc2084e086252bb4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc0a39bfef5f671b27cf611bc2084e086252bb4/comments","author":null,"committer":null,"parents":[{"sha":"77bd6fd653702bbd4ab5f24247a66bd28bf6317e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/77bd6fd653702bbd4ab5f24247a66bd28bf6317e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/77bd6fd653702bbd4ab5f24247a66bd28bf6317e"}],"stats":{"total":108,"additions":89,"deletions":19},"files":[{"sha":"3421ccec798f09f70e490f0369c8a98b3c1aa212","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ConnectorServiceProxy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -106,7 +106,7 @@ public List<ConnConfProperty> getConfigurationProperties(final Long connectorId)\n     }\r\n \r\n     @Override\r\n-    public boolean validate(final ConnInstanceTO connectorTO) {\r\n+    public boolean check(final ConnInstanceTO connectorTO) {\r\n         return getRestTemplate().postForObject(baseUrl + \"connector/check.json\", connectorTO, Boolean.class);\r\n     }\r\n \r"},{"sha":"37e4f0f12d3850904cdc0581d58755e2c045ccc4","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -36,7 +36,7 @@ public class SyncopeConstants {\n      * to an object after its creation. HTTP Response after PUT operation should contain this\r\n      * key with resource id as its value.\r\n      */\r\n-    public static final String REST_HEADER_ID = \"org.apache.syncope.id\";\r\n+    public static final String REST_HEADER_ID = \"org.apache.syncope.resource.id\";\r\n \r\n     public static final String DEFAULT_ENCODING = \"UTF-8\";\r\n \r"},{"sha":"e40146ff57b663db1c602e70147a3fc037c3b162","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -36,33 +36,63 @@\n @Path(\"configurations\")\r\n public interface ConfigurationService {\r\n \r\n+    /**\r\n+     * Creates a new configuration element.\r\n+     *\r\n+     * @param configurationTO Configuration to be stored.\r\n+     * @return Response containing URI location for created resource.\r\n+     */\r\n     @POST\r\n     Response create(ConfigurationTO configurationTO);\r\n \r\n+    /**\r\n+     * @return Returns configuration as an downloadable content.xml database export file.\r\n+     */\r\n     @GET\r\n     @Path(\"dbDump\")\r\n     Response dbExport();\r\n \r\n+    /**\r\n+     * @param key Deletes configuration with matching key.\r\n+     */\r\n     @DELETE\r\n     @Path(\"{key}\")\r\n     void delete(@PathParam(\"key\") String key);\r\n \r\n+    /**\r\n+     * @return Returns a list of known mail-template names.\r\n+     */\r\n     @GET\r\n     @Path(\"mailTemplates\")\r\n     Set<MailTemplateTO> getMailTemplates();\r\n \r\n+    /**\r\n+     * @return Returns a list of known validator names.\r\n+     */\r\n     @GET\r\n     @Path(\"validators\")\r\n     Set<ValidatorTO> getValidators();\r\n \r\n+    /**\r\n+     * @return Returns a list of all configuration elements.\r\n+     */\r\n     @GET\r\n     List<ConfigurationTO> list();\r\n \r\n+    /**\r\n+     * @param key Identifier of configuration to be read.\r\n+     * @return Returns configuration element with matching key.\r\n+     */\r\n     @GET\r\n     @Path(\"{key}\")\r\n     ConfigurationTO read(@PathParam(\"key\") String key);\r\n \r\n+    /**\r\n+     * @param key Overwrites configuration element with matching key.\r\n+     * @param configurationTO New configuration\r\n+     */\r\n     @PUT\r\n     @Path(\"{key}\")\r\n     void update(@PathParam(\"key\") String key, ConfigurationTO configurationTO);\r\n+\r\n }\r"},{"sha":"7c6622f594ba8600a904242c5c1208f668236a00","filename":"common/src/main/java/org/apache/syncope/common/services/ConnectorService.java","status":"modified","additions":52,"deletions":12,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -39,46 +39,86 @@\n @Path(\"connectors\")\r\n public interface ConnectorService {\r\n \r\n+    /**\r\n+     * Creates a new connector instance.\r\n+     *\r\n+     * @param connectorTO Connector to be created.\r\n+     * @return Response containing URI location for created resource.\r\n+     */\r\n     @POST\r\n     Response create(ConnInstanceTO connectorTO);\r\n \r\n+    /**\r\n+     * @param connectorId Deletes connector with matching id.\r\n+     */\r\n     @DELETE\r\n     @Path(\"{connectorId}\")\r\n     void delete(@PathParam(\"connectorId\") Long connectorId);\r\n \r\n+    /**\r\n+     * @param lang Language to select bundles from. Default language is English.\r\n+     * @return Returns known bundles in selected language.\r\n+     */\r\n     @GET\r\n     @Path(\"bundles\")\r\n     List<ConnBundleTO> getBundles(@QueryParam(\"lang\") String lang);\r\n \r\n+    /**\r\n+     * @param connectorId ConnectorID to read configuration from.\r\n+     * @return Returns configuration for selected connector.\r\n+     */\r\n     @GET\r\n     @Path(\"{connectorId}/configuration\")\r\n-    List<ConnConfProperty> getConfigurationProperties(\r\n-            @PathParam(\"connectorId\") Long connectorId);\r\n+    List<ConnConfProperty> getConfigurationProperties(@PathParam(\"connectorId\") Long connectorId);\r\n \r\n+    /**\r\n+     * @param connectorId ConnectorID to be used for schema lookup.\r\n+     * @param connectorTO Connector object to provide special configuration properties.\r\n+     * @param showAll If set to true, all schema names will be shown, including special ones like '__PASSWORD__'.\r\n+     * Default is false.\r\n+     * @return Returns schema names for matching connector.\r\n+     */\r\n     @POST\r\n     @Path(\"{connectorId}/schemas\")\r\n-    List<SchemaTO> getSchemaNames(\r\n-            @PathParam(\"connectorId\") Long connectorId,\r\n-            ConnInstanceTO connectorTO,\r\n-            @QueryParam(\"showall\") @DefaultValue(\"false\") boolean showall);\r\n+    List<SchemaTO> getSchemaNames(@PathParam(\"connectorId\") Long connectorId, ConnInstanceTO connectorTO,\r\n+            @QueryParam(\"showAll\") @DefaultValue(\"false\") boolean showAll);\r\n \r\n+    /**\r\n+     * @param lang Language to select connectors for. Default language is English.\r\n+     * @return Returns a list of all connectors with matching language.\r\n+     */\r\n     @GET\r\n     List<ConnInstanceTO> list(@QueryParam(\"lang\") String lang);\r\n \r\n+    /**\r\n+     * @param connectorId ConnectorID to be read.\r\n+     * @return Returns connector with matching id.\r\n+     */\r\n     @GET\r\n     @Path(\"{connectorId}\")\r\n     ConnInstanceTO read(@PathParam(\"connectorId\") Long connectorId);\r\n \r\n+    /**\r\n+     * @param resourceName Resource name to be used for connector lookup.\r\n+     * @return Returns connector for matching resourceName.\r\n+     */\r\n     @GET\r\n-    ConnInstanceTO readConnectorBean(\r\n-            @MatrixParam(\"resourceName\") String resourceName);\r\n+    ConnInstanceTO readConnectorBean(@MatrixParam(\"resourceName\") String resourceName);\r\n \r\n+    /**\r\n+     * @param connectorId Overwrites connector with matching key.\r\n+     * @param connectorTO Connector to be stored.\r\n+     */\r\n     @PUT\r\n     @Path(\"{connectorId}\")\r\n-    void update(@PathParam(\"connectorId\") Long connectorId,\r\n-            ConnInstanceTO connectorTO);\r\n+    void update(@PathParam(\"connectorId\") Long connectorId, ConnInstanceTO connectorTO);\r\n \r\n+    /**\r\n+     * @param connectorTO ConnectorTO to be used for connection check\r\n+     * @return True is connection could be established.\r\n+     */\r\n     @POST\r\n-    @Path(\"validate\")\r\n-    boolean validate(ConnInstanceTO connectorTO);\r\n+    @Path(\"check\")\r\n+    boolean check(ConnInstanceTO connectorTO);\r\n+\r\n }\r"},{"sha":"db3af7616282525e87b665131d8b3652ae09ad43","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -159,7 +159,7 @@ public Boolean check(final ConnInstanceTO connectorTO) {\n         connector.setConfiguration(filterProperties(connector.getConfiguration()));\n \n         try {\n-            return getService(ConnectorService.class).validate(connectorTO);\n+            return getService(ConnectorService.class).check(connectorTO);\n         } catch (Exception e) {\n             LOG.error(\"Connector not found {}\", connector, e);\n             return false;"},{"sha":"375996a8c724e281c36e4c5d9eb704714790c7e9","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -100,7 +100,7 @@ public void update(final Long connectorId, final ConnInstanceTO connectorTO) {\n     }\r\n \r\n     @Override\r\n-    public boolean validate(final ConnInstanceTO connectorTO) {\r\n+    public boolean check(final ConnInstanceTO connectorTO) {\r\n         return (Boolean) connectorController.check(new DummyHTTPServletResponse(), connectorTO).getModel().values()\r\n                 .iterator().next();\r\n     }\r"},{"sha":"b6fe8c62c234da054f93710e604b4d71df6d8106","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc0a39bfef5f671b27cf611bc2084e086252bb4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc0a39bfef5f671b27cf611bc2084e086252bb4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=dfc0a39bfef5f671b27cf611bc2084e086252bb4","patch":"@@ -506,15 +506,15 @@ public void validate() {\n         // set connector configuration\n         connectorTO.setConfiguration(conf);\n \n-        Boolean verify = connectorService.validate(connectorTO);\n+        Boolean verify = connectorService.check(connectorTO);\n \n         assertTrue(verify);\n \n         conf.remove(password);\n         password.setValues(Collections.singletonList(\"password\"));\n         conf.add(password);\n \n-        verify = connectorService.validate(connectorTO);\n+        verify = connectorService.check(connectorTO);\n \n         assertFalse(verify);\n     }\n@@ -594,7 +594,7 @@ public void issueSYNCOPE112() {\n \n         try {\n \n-            assertFalse(connectorService.validate(connectorTO));\n+            assertFalse(connectorService.check(connectorTO));\n \n             Response response = connectorService.create(connectorTO);\n             if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {"}]}