{"sha":"636985db65a8c1b6dd7af781966a7f84d3a83c2a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYzNjk4NWRiNjVhOGMxYjZkZDdhZjc4MTk2NmE3Zjg0ZDNhODNjMmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-27T12:20:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-27T12:20:17Z"},"message":"[SYNCOPE-1126] Explore resource for realms too","tree":{"sha":"0e4b87654c8e9da37baa485eefa9d9d1cae39979","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0e4b87654c8e9da37baa485eefa9d9d1cae39979"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/636985db65a8c1b6dd7af781966a7f84d3a83c2a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/636985db65a8c1b6dd7af781966a7f84d3a83c2a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/636985db65a8c1b6dd7af781966a7f84d3a83c2a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/636985db65a8c1b6dd7af781966a7f84d3a83c2a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ee802ac1503a51b734a91448770fe05da193e138","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ee802ac1503a51b734a91448770fe05da193e138","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ee802ac1503a51b734a91448770fe05da193e138"}],"stats":{"total":115,"additions":66,"deletions":49},"files":[{"sha":"1399c3e6b2402e0b07f73947e6d83ca221fa64a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -113,8 +113,7 @@ public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObje\n             public void onClick(final AjaxRequestTarget target) {\n                 final List<ConnObjectTO> listOfItems = reloadItems(resource, anyType, nextPageCookie);\n                 target.add(arrows);\n-                send(ConnObjectListViewPanel.this, Broadcast.DEPTH,\n-                        new ListViewReload<ConnObjectTO>(listOfItems, target));\n+                send(ConnObjectListViewPanel.this, Broadcast.DEPTH, new ListViewReload<>(listOfItems, target));\n             }\n \n             @Override\n@@ -131,11 +130,11 @@ private List<ConnObjectTO> reloadItems(\n             final String anyType,\n             final String cookie) {\n \n-        final Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().listConnObjects(resource,\n+        Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().listConnObjects(resource,\n                 anyType,\n                 SIZE,\n                 cookie,\n-                new SortParam<String>(ConnIdSpecialName.UID, true));\n+                new SortParam<>(ConnIdSpecialName.UID, true));\n \n         nextPageCookie = items.getLeft();\n         return items.getRight();"},{"sha":"14a2b9ccdd474e972ed123a54fc8f680abb2ec28","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":16,"deletions":21,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -26,8 +26,10 @@\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -44,21 +46,21 @@ public class ConnObjects extends Panel implements ModalPanel {\n \n     private final MultilevelPanel connObjects;\n \n-    public ConnObjects(final BaseModal<?> baseModal,\n-            final String resource,\n-            final PageReference pageReference) {\n-\n+    public ConnObjects(final String resource, final PageReference pageRef) {\n         super(BaseModal.CONTENT_ID);\n \n-        List<String> availableAnyTypes = CollectionUtils.\n-                collect(new ResourceRestClient().read(resource).getProvisions(),\n-                        new Transformer<ProvisionTO, String>() {\n+        ResourceTO resourceTO = new ResourceRestClient().read(resource);\n+        List<String> availableAnyTypes = CollectionUtils.collect(resourceTO.getProvisions(),\n+                new Transformer<ProvisionTO, String>() {\n \n-                    @Override\n-                    public String transform(final ProvisionTO provision) {\n-                        return provision.getAnyType();\n-                    }\n-                }, new ArrayList<String>());\n+            @Override\n+            public String transform(final ProvisionTO provision) {\n+                return provision.getAnyType();\n+            }\n+        }, new ArrayList<String>());\n+        if (resourceTO.getOrgUnit() != null) {\n+            availableAnyTypes.add(SyncopeConstants.REALM_ANYTYPE);\n+        }\n \n         anyTypes = new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", new Model<String>());\n         anyTypes.setChoices(availableAnyTypes);\n@@ -87,7 +89,7 @@ protected void prev(final AjaxRequestTarget target) {\n \n         };\n         connObjects.setFirstLevel(new NextableConnObjectDirectoryPanel(\n-                baseModal, connObjects, resource, anyTypes.getField().getModelObject(), pageReference));\n+                connObjects, resource, anyTypes.getField().getModelObject(), pageRef));\n         connObjects.setOutputMarkupId(true);\n         add(connObjects);\n \n@@ -98,7 +100,7 @@ protected void prev(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 connObjects.setFirstLevel(new NextableConnObjectDirectoryPanel(\n-                        baseModal, connObjects, resource, anyTypes.getField().getModelObject(), pageReference));\n+                        connObjects, resource, anyTypes.getField().getModelObject(), pageRef));\n                 target.add(connObjects);\n             }\n         });\n@@ -108,20 +110,13 @@ private class NextableConnObjectDirectoryPanel extends ConnObjectListViewPanel {\n \n         private static final long serialVersionUID = 956427874406567048L;\n \n-        private final BaseModal<?> baseModal;\n-\n-        private final PageReference pageRef;\n-\n         NextableConnObjectDirectoryPanel(\n-                final BaseModal<?> baseModal,\n                 final MultilevelPanel multiLevelPanelRef,\n                 final String resource,\n                 final String anyType,\n                 final PageReference pageRef) {\n \n             super(MultilevelPanel.FIRST_LEVEL_ID, resource, anyType, pageRef);\n-            this.baseModal = baseModal;\n-            this.pageRef = pageRef;\n         }\n \n         @Override"},{"sha":"cf752049cb13f8f3cf2a0f27a87f92903caef2df","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -443,7 +443,7 @@ public String getAjaxIndicatorMarkupId() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(propTaskModal.setContent(new ConnObjects(propTaskModal, node.getKey(), pageRef)));\n+                target.add(propTaskModal.setContent(new ConnObjects(node.getKey(), pageRef)));\n                 propTaskModal.header(new StringResourceModel(\"resource.explore.list\", Model.of(node)));\n                 propTaskModal.show(true);\n             }"},{"sha":"9ce9b06bcc6bf147ec213082f8b5c27df44c816b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -32,6 +32,8 @@ public final class SyncopeConstants {\n \n     public static final String ROOT_REALM = \"/\";\n \n+    public static final String REALM_ANYTYPE = \"REALM\";\n+\n     public static final Set<String> FULL_ADMIN_REALMS = Collections.singleton(\"/\");\n \n     public static final String UNAUTHENTICATED = \"unauthenticated\";"},{"sha":"b07a92b684614cd2e3ed8c26c190dfeea8ba287c","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":34,"deletions":13,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -34,6 +34,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -66,6 +67,8 @@\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.Name;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n import org.identityconnectors.framework.common.objects.SearchResult;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.identityconnectors.framework.spi.SearchResultsHandler;\n@@ -269,8 +272,8 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         Any<?> any = init.getMiddle().getKind() == AnyTypeKind.USER\n                 ? userDAO.find(anyKey)\n                 : init.getMiddle().getKind() == AnyTypeKind.ANY_OBJECT\n-                        ? anyObjectDAO.find(anyKey)\n-                        : groupDAO.find(anyKey);\n+                ? anyObjectDAO.find(anyKey)\n+                : groupDAO.find(anyKey);\n         if (any == null) {\n             throw new NotFoundException(init.getMiddle() + \" \" + anyKey);\n         }\n@@ -320,22 +323,40 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n     public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key, final String anyTypeKey,\n             final int size, final String pagedResultsCookie, final List<OrderByClause> orderBy) {\n \n-        Triple<ExternalResource, AnyType, Provision> init = connObjectInit(key, anyTypeKey);\n-\n-        Connector connector = connFactory.getConnector(init.getLeft());\n+        ExternalResource resource;\n+        ObjectClass objectClass;\n+        OperationOptions options;\n+        if (SyncopeConstants.REALM_ANYTYPE.equals(anyTypeKey)) {\n+            resource = resourceDAO.find(key);\n+            if (resource == null) {\n+                throw new NotFoundException(\"Resource '\" + key + \"'\");\n+            }\n+            if (resource.getOrgUnit() == null) {\n+                throw new NotFoundException(\"Realm provisioning for resource '\" + key + \"'\");\n+            }\n \n-        Set<MappingItem> linkinMappingItems = new HashSet<>();\n-        for (VirSchema virSchema : virSchemaDAO.findByProvision(init.getRight())) {\n-            linkinMappingItems.add(virSchema.asLinkingMappingItem());\n+            objectClass = resource.getOrgUnit().getObjectClass();\n+            options = MappingUtils.buildOperationOptions(resource.getOrgUnit());\n+        } else {\n+            Triple<ExternalResource, AnyType, Provision> init = connObjectInit(key, anyTypeKey);\n+            resource = init.getLeft();\n+            objectClass = init.getRight().getObjectClass();\n+            init.getRight().getMapping().getItems();\n+\n+            Set<MappingItem> linkinMappingItems = new HashSet<>();\n+            for (VirSchema virSchema : virSchemaDAO.findByProvision(init.getRight())) {\n+                linkinMappingItems.add(virSchema.asLinkingMappingItem());\n+            }\n+            Iterator<MappingItem> mapItems = IteratorUtils.chainedIterator(\n+                    init.getRight().getMapping().getItems().iterator(),\n+                    linkinMappingItems.iterator());\n+            options = MappingUtils.buildOperationOptions(mapItems);\n         }\n-        Iterator<MappingItem> mapItems = IteratorUtils.chainedIterator(\n-                init.getRight().getMapping().getItems().iterator(),\n-                linkinMappingItems.iterator());\n \n         final SearchResult[] searchResult = new SearchResult[1];\n         final List<ConnObjectTO> connObjects = new ArrayList<>();\n \n-        connector.search(init.getRight().getObjectClass(), null, new SearchResultsHandler() {\n+        connFactory.getConnector(resource).search(objectClass, null, new SearchResultsHandler() {\n \n             private int count;\n \n@@ -351,7 +372,7 @@ public boolean handle(final ConnectorObject connectorObject) {\n                 count++;\n                 return count < size;\n             }\n-        }, size, pagedResultsCookie, orderBy, mapItems);\n+        }, size, pagedResultsCookie, orderBy, options);\n \n         return ImmutablePair.of(searchResult[0], connObjects);\n     }"},{"sha":"639061a7ad1963015bfca158fe642022bcf2a06e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/AnyTypeValidator.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyTypeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyTypeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAnyTypeValidator.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.jpa.validation.entity;\n \n import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n@@ -42,7 +43,8 @@ public boolean isValid(final AnyType object, final ConstraintValidatorContext co\n             case ANY_OBJECT:\n             default:\n                 isValid = !AnyTypeKind.USER.name().equalsIgnoreCase(object.getKey())\n-                        && !AnyTypeKind.GROUP.name().equalsIgnoreCase(object.getKey());\n+                        && !AnyTypeKind.GROUP.name().equalsIgnoreCase(object.getKey())\n+                        && !SyncopeConstants.REALM_ANYTYPE.equalsIgnoreCase(object.getKey());\n         }\n \n         if (!isValid) {"},{"sha":"694ab30b1e5ce6fa578d69704e3b956e29bd3d13","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.core.provisioning.api;\n \n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -173,7 +171,7 @@ void search(\n      * query results\n      * @param orderBy the sort keys which should be used for ordering the {@link ConnectorObject} returned by\n      * search request\n-     * @param mapItems mapping items\n+     * @param options ConnId's OperationOptions\n      */\n     void search(\n             ObjectClass objectClass,\n@@ -182,7 +180,7 @@ void search(\n             int pageSize,\n             String pagedResultsCookie,\n             List<OrderByClause> orderBy,\n-            Iterator<? extends MappingItem> mapItems);\n+            OperationOptions options);\n \n     /**\n      * Builds metadata description of ConnId {@link ObjectClass}."},{"sha":"8184c5def0b10291d606e184feed65fb9c915f0b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -21,7 +21,6 @@\n import java.io.File;\n import java.net.URI;\n import java.util.ArrayList;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import java.util.concurrent.Future;\n@@ -36,9 +35,7 @@\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n-import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n@@ -469,7 +466,7 @@ public void search(\n             final int pageSize,\n             final String pagedResultsCookie,\n             final List<OrderByClause> orderBy,\n-            final Iterator<? extends MappingItem> mapItems) {\n+            final OperationOptions options) {\n \n         OperationOptionsBuilder builder = new OperationOptionsBuilder().setPageSize(pageSize);\n         if (pagedResultsCookie != null) {\n@@ -483,7 +480,7 @@ public SortKey transform(final OrderByClause clause) {\n             }\n         }, new ArrayList<SortKey>(orderBy.size())));\n \n-        builder.setAttributesToGet(MappingUtils.buildOperationOptions(mapItems).getAttributesToGet());\n+        builder.setAttributesToGet(options.getAttributesToGet());\n \n         search(objectClass, filter, handler, builder.build());\n     }"},{"sha":"c5ae9e3de6ebff0986227603080c80868dc71577","filename":"fit/core-reference/pom.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/636985db65a8c1b6dd7af781966a7f84d3a83c2a/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/636985db65a8c1b6dd7af781966a7f84d3a83c2a/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=636985db65a8c1b6dd7af781966a7f84d3a83c2a","patch":"@@ -401,6 +401,9 @@ under the License.\n               <includes>\n                 <include>**/*ITCase.java</include>\n               </includes>\n+              <excludes>\n+                <exclude>**/*Test.java</exclude>\n+              </excludes>\n             </configuration>\n             <executions>\n               <execution>"}]}