{"sha":"3077c6d3b36cb2634f5cba05d35ee7790e878907","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMwNzdjNmQzYjM2Y2IyNjM0ZjVjYmEwNWQzNWVlNzc5MGU4Nzg5MDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-15T14:21:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-15T14:21:59Z"},"message":"First indexes, then default content, then views - allowing easy custom SQL init on empty db","tree":{"sha":"e91ee79df4f9e624158086fae750a0ef94c33495","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e91ee79df4f9e624158086fae750a0ef94c33495"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3077c6d3b36cb2634f5cba05d35ee7790e878907","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3077c6d3b36cb2634f5cba05d35ee7790e878907","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3077c6d3b36cb2634f5cba05d35ee7790e878907","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3077c6d3b36cb2634f5cba05d35ee7790e878907/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8032c6e0438160badde52adbaceefd0a641920cc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8032c6e0438160badde52adbaceefd0a641920cc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8032c6e0438160badde52adbaceefd0a641920cc"}],"stats":{"total":12,"additions":9,"deletions":3},"files":[{"sha":"c09085932a756c9bb8323ee5fbc58322de3b8cef","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3077c6d3b36cb2634f5cba05d35ee7790e878907/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3077c6d3b36cb2634f5cba05d35ee7790e878907/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=3077c6d3b36cb2634f5cba05d35ee7790e878907","patch":"@@ -23,6 +23,7 @@\n import java.util.Properties;\n import javax.annotation.Resource;\n import javax.sql.DataSource;\n+import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n@@ -34,6 +35,7 @@\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.orm.jpa.EntityManagerFactoryUtils;\n import org.springframework.stereotype.Component;\n+import org.xml.sax.SAXException;\n \n /**\n  * Initialize Database with default content if no data is present already.\n@@ -73,6 +75,11 @@ public void load() {\n             } else {\n                 LOG.info(\"[{}] Empty database found, loading default content\", domain);\n \n+                try {\n+                    createIndexes(domain, datasource);\n+                } catch (IOException e) {\n+                    LOG.error(\"[{}] While creating indexes\", domain, e);\n+                }\n                 try {\n                     ResourceWithFallbackLoader contentXML = ApplicationContextProvider.getBeanFactory().\n                             getBean(domain + \"ContentXML\", ResourceWithFallbackLoader.class);\n@@ -82,17 +89,16 @@ public void load() {\n                 }\n                 try {\n                     createViews(domain, datasource);\n-                    createIndexes(domain, datasource);\n                 } catch (IOException e) {\n-                    LOG.error(\"[{}] While creating indexes and views\", domain, e);\n+                    LOG.error(\"[{}] While creating views\", domain, e);\n                 }\n             }\n         });\n     }\n \n     private void loadDefaultContent(\n             final String domain, final ResourceWithFallbackLoader contentXML, final DataSource dataSource)\n-            throws Exception {\n+            throws IOException, ParserConfigurationException, SAXException {\n \n         SAXParserFactory factory = SAXParserFactory.newInstance();\n         try (InputStream in = contentXML.getResource().getInputStream()) {"}]}