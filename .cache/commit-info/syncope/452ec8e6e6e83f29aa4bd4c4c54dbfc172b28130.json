{"sha":"452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ1MmVjOGU2ZTZlODNmMjlhYTRiZDRjNGM1NGRiZmMxNzJiMjgxMzA=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-03T14:54:09Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-03T14:54:09Z"},"message":"Fixes SYNCOPE-453 on 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1547414 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e4d888d564c74d38c4cb45309d3fca6ffc9ecc6d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e4d888d564c74d38c4cb45309d3fca6ffc9ecc6d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"7568625dd9de4c9bff6b1a7a908e85546d5b22db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7568625dd9de4c9bff6b1a7a908e85546d5b22db","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7568625dd9de4c9bff6b1a7a908e85546d5b22db"}],"stats":{"total":122,"additions":113,"deletions":9},"files":[{"sha":"1bd68d4d5c79fe4f0bdb1fef0a876a313cd0eece","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","patch":"@@ -66,7 +66,7 @@\n /**\n  * Manage the data propagation to external resources.\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n+@Transactional(rollbackFor = {Throwable.class})\n public class PropagationManager {\n \n     /**\n@@ -143,7 +143,7 @@ public List<PropagationTask> getUserCreateTaskIds(final WorkflowResult<Map.Entry\n         if (vAttrs != null && !vAttrs.isEmpty()) {\n             userDataBinder.fillVirtual(user, vAttrs, AttributableUtil.getInstance(AttributableType.USER));\n         }\n-        return getCreateTaskIds(user, password, vAttrs,\n+        return getCreateTaskIds(user, password,\n                 wfResult.getResult().getValue(), wfResult.getPropByRes(), noPropResourceNames);\n     }\n \n@@ -181,11 +181,11 @@ public List<PropagationTask> getRoleCreateTaskIds(final WorkflowResult<Long> wfR\n         if (vAttrs != null && !vAttrs.isEmpty()) {\n             roleDataBinder.fillVirtual(role, vAttrs, AttributableUtil.getInstance(AttributableType.ROLE));\n         }\n-        return getCreateTaskIds(role, null, vAttrs, null, wfResult.getPropByRes(), noPropResourceNames);\n+        return getCreateTaskIds(role, null, null, wfResult.getPropByRes(), noPropResourceNames);\n     }\n \n     protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attributable,\n-            final String password, final Collection<AttributeTO> vAttrs, final Boolean enable,\n+            final String password, final Boolean enable,\n             final PropagationByResource propByRes, final Set<String> noPropResourceNames) {\n \n         if (propByRes == null || propByRes.isEmpty()) {"},{"sha":"b2ba3c1c0dbf1c617727d42602633e5fb9c05399","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n+import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.connid.PasswordGenerator;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -45,6 +46,7 @@\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n+import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.role.RSchema;\n@@ -135,6 +137,9 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n \n         final List<AbstractAttributable> attributables = new ArrayList<AbstractAttributable>();\n \n+        final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n+        final ConnObjectUtil connObjectUtil = context.getBean(ConnObjectUtil.class);\n+\n         switch (mapItem.getIntMappingType().getAttributableType()) {\n             case USER:\n                 if (subject instanceof SyncopeUser) {\n@@ -144,7 +149,10 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n \n             case ROLE:\n                 if (subject instanceof SyncopeUser) {\n-                    attributables.addAll(((SyncopeUser) subject).getRoles());\n+                    for (SyncopeRole role : ((SyncopeUser) subject).getRoles()) {\n+                        connObjectUtil.retrieveVirAttrValues(role, AttributableUtil.getInstance(role));\n+                        attributables.add(role);\n+                    }\n                 }\n                 if (subject instanceof SyncopeRole) {\n                     attributables.add(subject);\n@@ -160,13 +168,13 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n             default:\n         }\n \n-        List<AbstractAttrValue> values = MappingUtil.getIntValues(resource, mapItem, attributables,\n-                vAttrsToBeRemoved, vAttrsToBeUpdated);\n+        List<AbstractAttrValue> values = getIntValues(\n+                resource, mapItem, attributables, vAttrsToBeRemoved, vAttrsToBeUpdated);\n \n         AbstractSchema schema = null;\n         boolean readOnlyVirSchema = false;\n         AttributeSchemaType schemaType;\n-        ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n+\n         switch (mapItem.getIntMappingType()) {\n             case UserSchema:\n             case RoleSchema:"},{"sha":"fe85911198c2ffa5a2f91e186cfc71d9d58c3321","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":97,"deletions":1,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=452ec8e6e6e83f29aa4bd4c4c54dbfc172b28130","patch":"@@ -18,24 +18,28 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.AbstractTest.RESOURCE_NAME_DBVIRATTR;\n+import static org.apache.syncope.core.rest.AbstractTest.RESOURCE_NAME_LDAP;\n import static org.apache.syncope.core.rest.AbstractTest.attributeMod;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import static org.apache.syncope.core.rest.UserTestITCase.getUniqueSampleTO;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collections;\n+import java.util.Map;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ConnConfProperty;\n@@ -422,4 +426,96 @@ public void issueSYNCOPE436() {\n         //Finding no values because the virtual attribute is readonly \n         assertTrue(userTO.getVirtualAttributeMap().get(\"virtualReadOnly\").getValues().isEmpty());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE453() {\n+        final String resourceName = \"issueSYNCOPE453-Res-\" + getUUIDString();\n+        final String roleName = \"issueSYNCOPE453-Role-\" + getUUIDString();\n+\n+        // -------------------------------------------\n+        // Create a resource ad-hoc\n+        // -------------------------------------------\n+        final ResourceTO resourceTO = new ResourceTO();\n+\n+        resourceTO.setName(resourceName);\n+        resourceTO.setConnectorId(107L);\n+\n+        MappingTO mapping = new MappingTO();\n+\n+        MappingItemTO item = new MappingItemTO();\n+        item.setIntAttrName(\"aLong\");\n+        item.setIntMappingType(IntMappingType.UserSchema);\n+        item.setPurpose(MappingPurpose.PROPAGATION);\n+        item.setAccountid(true);\n+        mapping.setAccountIdItem(item);\n+\n+        item = new MappingItemTO();\n+        item.setExtAttrName(\"USERNAME\");\n+        item.setIntAttrName(\"username\");\n+        item.setIntMappingType(IntMappingType.Username);\n+        item.setPurpose(MappingPurpose.PROPAGATION);\n+        mapping.getItems().add(item);\n+\n+        item = new MappingItemTO();\n+        item.setExtAttrName(\"EMAIL\");\n+        item.setIntAttrName(\"rvirtualdata\");\n+        item.setIntMappingType(IntMappingType.RoleVirtualSchema);\n+        item.setPurpose(MappingPurpose.PROPAGATION);\n+        mapping.getItems().add(item);\n+\n+        resourceTO.setUmapping(mapping);\n+        assertNotNull(getObject(resourceService.create(resourceTO), ResourceTO.class, resourceService));\n+        // -------------------------------------------\n+\n+        // -------------------------------------------\n+        // Create a role ad-hoc\n+        // -------------------------------------------\n+        RoleTO roleTO = new RoleTO();\n+        roleTO.setName(roleName);\n+        roleTO.setParent(8L);\n+        roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", \"ml@role.it\"));\n+        roleTO.getResources().add(RESOURCE_NAME_LDAP);\n+        roleTO = createRole(roleService, roleTO);\n+        assertEquals(1, roleTO.getVirtualAttributes().size());\n+        assertEquals(\"ml@role.it\", roleTO.getVirtualAttributes().get(0).getValues().get(0));\n+        // -------------------------------------------\n+\n+        // -------------------------------------------\n+        // Create new user\n+        // -------------------------------------------\n+        UserTO userTO = getUniqueSampleTO(\"syncope453@syncope.apache.org\");\n+        userTO.addAttribute(attributeTO(\"aLong\", \"123\"));\n+        userTO.getResources().clear();\n+        userTO.getResources().add(resourceName);\n+        userTO.getVirtualAttributes().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getMemberships().clear();\n+\n+        final MembershipTO membership = new MembershipTO();\n+        membership.setRoleId(roleTO.getId());\n+        membership.getVirtualAttributes().add(attributeTO(\"mvirtualdata\", \"mvirtualvalue\"));\n+        userTO.getMemberships().add(membership);\n+\n+        userTO = createUser(userTO);\n+        assertEquals(2, userTO.getPropagationStatusTOs().size());\n+        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertTrue(userTO.getPropagationStatusTOs().get(1).getStatus().isSuccessful());\n+\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+\n+        final Map<String, Object> actuals = jdbcTemplate.queryForMap(\n+                \"SELECT id, surname, email FROM testsync WHERE id=?\",\n+                new Object[] {Integer.parseInt(userTO.getAttributeMap().get(\"aLong\").getValues().get(0))});\n+\n+        assertEquals(userTO.getAttributeMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());\n+        assertEquals(\"ml@role.it\", actuals.get(\"email\"));\n+        // -------------------------------------------\n+\n+        // -------------------------------------------\n+        // Delete resource and role ad-hoc\n+        // -------------------------------------------\n+        resourceService.delete(resourceName);\n+        roleService.delete(roleTO.getId());\n+        // -------------------------------------------\n+    }\n }"}]}