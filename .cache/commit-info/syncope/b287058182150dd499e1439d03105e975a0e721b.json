{"sha":"b287058182150dd499e1439d03105e975a0e721b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyODcwNTgxODIxNTBkZDQ5OWUxNDM5ZDAzMTA1ZTk3NWEwZTcyMWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-16T14:36:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-16T15:27:00Z"},"message":"[SYNCOPE-1274] Add documentation for ETag, If-Match","tree":{"sha":"532f821f585883ae57aebb01e6119491a8880570","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/532f821f585883ae57aebb01e6119491a8880570"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b287058182150dd499e1439d03105e975a0e721b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b287058182150dd499e1439d03105e975a0e721b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b287058182150dd499e1439d03105e975a0e721b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b287058182150dd499e1439d03105e975a0e721b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"64bce59f3b5e1f222bbd0ae35c8dea16c392ba2d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64bce59f3b5e1f222bbd0ae35c8dea16c392ba2d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64bce59f3b5e1f222bbd0ae35c8dea16c392ba2d"}],"stats":{"total":181,"additions":166,"deletions":15},"files":[{"sha":"005cb6700c83850c217a031e8eb6f237a24cd61e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=b287058182150dd499e1439d03105e975a0e721b","patch":"@@ -55,6 +55,14 @@\n @Path(\"anyObjects\")\n public interface AnyObjectService extends AnyService<AnyObjectTO> {\n \n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"200\", description =\n+                    \"Any object matching the provided key; if value looks like a UUID then it is interpreted as key,\"\n+                    + \" otherwise as a name.\", headers =\n+                    @Header(name = HttpHeaders.ETAG, schema =\n+                            @Schema(type = \"string\"),\n+                            description = \"Opaque identifier for the latest modification made to the entity returned\"\n+                            + \" by this endpoint\")))\n     @Override\n     AnyObjectTO read(String key);\n \n@@ -105,6 +113,11 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Any object successfully updated enriched with propagation status information, as Entity\",\n@@ -116,7 +129,10 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PATCH\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -133,6 +149,11 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Any object successfully updated enriched with propagation status information, as Entity\",\n@@ -144,7 +165,10 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PUT\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })"},{"sha":"768b3e66901ca778bccaea4cef88f46d3b2e837d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":73,"deletions":5,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=b287058182150dd499e1439d03105e975a0e721b","patch":"@@ -36,13 +36,15 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -88,10 +90,7 @@ AttrTO read(\n     /**\n      * Reads the any object matching the provided key.\n      *\n-     * Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n-     * looks like a UUID then it is interpreted as as key, otherwise as a (user)name.\n-     *\n-     * @param key any object key or name\n+     * @param key if value looks like a UUID then it is interpreted as key, otherwise as a (user)name\n      * @return any object with matching key\n      */\n     @GET\n@@ -152,6 +151,11 @@ Response delete(\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User, Group or Any Object successfully deleted enriched with propagation status \"\n@@ -163,7 +167,10 @@ Response delete(\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -175,6 +182,29 @@ Response delete(\n      * @param patch external resources to be used for propagation-related operations\n      * @return Response object featuring BulkActionResult as Entity\n      */\n+    @Parameter(name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n+            description = \"Allows client to specify a preference for the result to be returned from the server\",\n+            allowEmptyValue = true, schema =\n+            @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n+    @ApiResponses({\n+        @ApiResponse(responseCode = \"200\",\n+                description = \"Bulk action result\", content =\n+                @Content(schema =\n+                        @Schema(implementation = BulkActionResult.class)))\n+        , @ApiResponse(responseCode = \"204\",\n+                description = \"No content if 'Prefer: return-no-content' was specified\", headers =\n+                @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"Allows the server to inform the \"\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @POST\n     @Path(\"{key}/deassociate/{action}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -187,6 +217,29 @@ Response delete(\n      * @param patch external resources to be used for propagation-related operations\n      * @return Response object featuring BulkActionResult as Entity\n      */\n+    @Parameter(name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n+            description = \"Allows client to specify a preference for the result to be returned from the server\",\n+            allowEmptyValue = true, schema =\n+            @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n+    @ApiResponses({\n+        @ApiResponse(responseCode = \"200\",\n+                description = \"Bulk action result\", content =\n+                @Content(schema =\n+                        @Schema(implementation = BulkActionResult.class)))\n+        , @ApiResponse(responseCode = \"204\",\n+                description = \"No content if 'Prefer: return-no-content' was specified\", headers =\n+                @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"Allows the server to inform the \"\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @POST\n     @Path(\"{key}/associate/{action}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -199,6 +252,21 @@ Response delete(\n      * @param bulkAction list of any object ids against which the bulk action will be performed.\n      * @return Response object featuring BulkActionResult as Entity\n      */\n+    @Parameter(name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n+            description = \"Allows client to specify a preference for the result to be returned from the server\",\n+            allowEmptyValue = true, schema =\n+            @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @ApiResponses({\n+        @ApiResponse(responseCode = \"200\",\n+                description = \"Bulk action result\", content =\n+                @Content(schema =\n+                        @Schema(implementation = BulkActionResult.class)))\n+        , @ApiResponse(responseCode = \"204\",\n+                description = \"No content if 'Prefer: return-no-content' was specified\", headers =\n+                @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"Allows the server to inform the \"\n+                        + \"client about the fact that a specified preference was applied\")) })\n     @POST\n     @Path(\"bulk\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })"},{"sha":"e4eaafa07a4029db7f551e18f29b4dcae71a0b36","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=b287058182150dd499e1439d03105e975a0e721b","patch":"@@ -60,6 +60,14 @@\n @Path(\"groups\")\n public interface GroupService extends AnyService<GroupTO> {\n \n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"200\", description =\n+                    \"Group matching the provided key; if value looks like a UUID then it is interpreted as key,\"\n+                    + \" otherwise as a name.\", headers =\n+                    @Header(name = HttpHeaders.ETAG, schema =\n+                            @Schema(type = \"string\"),\n+                            description = \"Opaque identifier for the latest modification made to the entity returned\"\n+                            + \" by this endpoint\")))\n     @Override\n     GroupTO read(String key);\n \n@@ -109,6 +117,11 @@ public interface GroupService extends AnyService<GroupTO> {\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Group successfully updated enriched with propagation status information, as Entity\",\n@@ -120,7 +133,10 @@ public interface GroupService extends AnyService<GroupTO> {\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PATCH\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -137,6 +153,11 @@ public interface GroupService extends AnyService<GroupTO> {\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"Group successfully updated enriched with propagation status information, as Entity\",\n@@ -148,7 +169,10 @@ public interface GroupService extends AnyService<GroupTO> {\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PUT\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })"},{"sha":"6f3649491136335f6284a606972636d83a756ab2","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":41,"deletions":6,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b287058182150dd499e1439d03105e975a0e721b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=b287058182150dd499e1439d03105e975a0e721b","patch":"@@ -58,6 +58,14 @@\n @Path(\"users\")\n public interface UserService extends AnyService<UserTO> {\n \n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"200\", description =\n+                    \"User matching the provided key; if value looks like a UUID then it is interpreted as key,\"\n+                    + \" otherwise as a username.\", headers =\n+                    @Header(name = HttpHeaders.ETAG, schema =\n+                            @Schema(type = \"string\"),\n+                            description = \"Opaque identifier for the latest modification made to the entity returned\"\n+                            + \" by this endpoint\")))\n     @Override\n     UserTO read(String key);\n \n@@ -110,6 +118,11 @@ Response create(\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -121,7 +134,10 @@ Response create(\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PATCH\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -134,22 +150,32 @@ Response create(\n      * @param userTO complete update\n      * @return Response object featuring the updated user enriched with propagation status information\n      */\n-    @Parameter(name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n+    @Parameter(\n+            name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n                 content =\n                 @Content(schema =\n                         @Schema(implementation = ProvisioningResult.class)))\n-        , @ApiResponse(responseCode = \"204\",\n+        ,\n+        @ApiResponse(responseCode = \"204\",\n                 description = \"No content if 'Prefer: return-no-content' was specified\", headers =\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @PUT\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n@@ -162,10 +188,16 @@ Response create(\n      * @param statusPatch status update details\n      * @return Response object featuring the updated user enriched with propagation status information\n      */\n-    @Parameter(name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n+    @Parameter(\n+            name = RESTHeaders.PREFER, in = ParameterIn.HEADER,\n             description = \"Allows client to specify a preference for the result to be returned from the server\",\n             allowEmptyValue = true, schema =\n             @Schema(defaultValue = \"return-content\", allowableValues = { \"return-content\", \"return-no-content\" }))\n+    @Parameter(name = HttpHeaders.IF_MATCH, in = ParameterIn.HEADER,\n+            description = \"When the provided ETag value does not match the latest modification date of the entity, \"\n+            + \"an error is reported and the requested operation is not performed.\",\n+            allowEmptyValue = true, schema =\n+            @Schema(type = \"string\"))\n     @ApiResponses({\n         @ApiResponse(responseCode = \"200\",\n                 description = \"User successfully updated enriched with propagation status information, as Entity\",\n@@ -177,7 +209,10 @@ Response create(\n                 @Header(name = RESTHeaders.PREFERENCE_APPLIED, schema =\n                         @Schema(type = \"string\"),\n                         description = \"Allows the server to inform the \"\n-                        + \"client about the fact that a specified preference was applied\")) })\n+                        + \"client about the fact that a specified preference was applied\"))\n+        , @ApiResponse(responseCode = \"412\",\n+                description = \"The ETag value provided via the 'If-Match' header does not match the latest modification\"\n+                + \" date of the entity\") })\n     @POST\n     @Path(\"{key}/status\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })"}]}