{"sha":"ca056b8196f02cec23bfb9907a340dbbf95d8583","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNhMDU2YjgxOTZmMDJjZWMyM2JmYjk5MDdhMzQwZGJiZjk1ZDg1ODM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T07:26:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T07:26:43Z"},"message":"REST API (and console REST client) small cleanup","tree":{"sha":"1d00b92f6c72c9ec992d5d12a8253d10833c9d20","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1d00b92f6c72c9ec992d5d12a8253d10833c9d20"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ca056b8196f02cec23bfb9907a340dbbf95d8583","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca056b8196f02cec23bfb9907a340dbbf95d8583","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca056b8196f02cec23bfb9907a340dbbf95d8583","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca056b8196f02cec23bfb9907a340dbbf95d8583/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0b90a205be56928e080998f88a00f7bfd863c509","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b90a205be56928e080998f88a00f7bfd863c509","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b90a205be56928e080998f88a00f7bfd863c509"}],"stats":{"total":230,"additions":75,"deletions":155},"files":[{"sha":"f54540c77f198c8a052d96737e10716187a1b4c6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -95,7 +95,7 @@ private Map<String, BulkActionResult.Status> deleteBulk(final List<UserTO> users\n         for (UserTO user : users) {\n             bulkAction.getTargets().add(String.valueOf(user.getKey()));\n         }\n-        final BulkActionResult bulkResult = userService.bulk(bulkAction);\n+        final BulkActionResult bulkResult = userService.bulk(bulkAction).readEntity(BulkActionResult.class);\n         return bulkResult.getResults();\n     }\n }"},{"sha":"c96e4dfc26220fac19878bc4818dc3e46e23639a","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -143,7 +143,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n-                            final AbstractAnyRestClient<?> anyRestClient = AbstractAnyRestClient.class.cast(\n+                            final AbstractAnyRestClient<?, ?> anyRestClient = AbstractAnyRestClient.class.cast(\n                                     bulkActionExecutor);\n \n                             if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {"},{"sha":"bee3237806c1979b9514dd4513c2b689eeb8370a","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -27,13 +27,13 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n \n-public class AnyDataProvider<T extends AnyTO> extends DirectoryDataProvider<T> {\n+public class AnyDataProvider<A extends AnyTO> extends DirectoryDataProvider<A> {\n \n     private static final long serialVersionUID = 6267494272884913376L;\n \n-    private final SortableAnyProviderComparator<T> comparator;\n+    private final SortableAnyProviderComparator<A> comparator;\n \n-    private final AbstractAnyRestClient<T> restClient;\n+    private final AbstractAnyRestClient<A, ?> restClient;\n \n     protected String fiql;\n \n@@ -44,7 +44,7 @@\n     private final String type;\n \n     public AnyDataProvider(\n-            final AbstractAnyRestClient<T> restClient,\n+            final AbstractAnyRestClient<A, ?> restClient,\n             final int paginatorRows,\n             final boolean filtered,\n             final String realm,\n@@ -66,14 +66,14 @@ public AnyDataProvider(\n     }\n \n     @Override\n-    public Iterator<T> iterator(final long first, final long count) {\n-        List<T> result;\n+    public Iterator<A> iterator(final long first, final long count) {\n+        List<A> result;\n \n         final int page = ((int) first / paginatorRows);\n \n         if (filtered) {\n             result = fiql == null\n-                    ? Collections.<T>emptyList()\n+                    ? Collections.<A>emptyList()\n                     : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n         } else {\n             result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n@@ -96,13 +96,13 @@ public long size() {\n         return result;\n     }\n \n-    public AnyDataProvider<T> setFIQL(final String fiql) {\n+    public AnyDataProvider<A> setFIQL(final String fiql) {\n         this.fiql = fiql;\n         return this;\n     }\n \n     @Override\n-    public IModel<T> model(final T object) {\n+    public IModel<A> model(final A object) {\n         return new CompoundPropertyModel<>(object);\n     }\n }"},{"sha":"0a873ec23132334f2cb9e6d5b14971e03eae3547","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -55,7 +55,7 @@\n import org.apache.wicket.model.util.ListModel;\n \n public abstract class AnyDirectoryPanel<A extends AnyTO>\n-        extends DirectoryPanel<A, AnyWrapper<A>, AnyDataProvider<A>, AbstractAnyRestClient<A>> {\n+        extends DirectoryPanel<A, AnyWrapper<A>, AnyDataProvider<A>, AbstractAnyRestClient<A, ?>> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -153,8 +153,8 @@ public interface AnyDirectoryPanelBuilder extends Serializable {\n         List<AnyTypeClassTO> getAnyTypeClassTOs();\n     }\n \n-    public abstract static class Builder<T extends AnyTO>\n-            extends DirectoryPanel.Builder<T, AnyWrapper<T>, AbstractAnyRestClient<T>>\n+    public abstract static class Builder<A extends AnyTO>\n+            extends DirectoryPanel.Builder<A, AnyWrapper<A>, AbstractAnyRestClient<A, ?>>\n             implements AnyDirectoryPanelBuilder {\n \n         private static final long serialVersionUID = -6828423611982275640L;\n@@ -173,7 +173,7 @@ public interface AnyDirectoryPanelBuilder extends Serializable {\n \n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<T> restClient,\n+                final AbstractAnyRestClient<A, ?> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n \n@@ -182,7 +182,7 @@ public Builder(\n             this.type = type;\n         }\n \n-        public Builder<T> setRealm(final String realm) {\n+        public Builder<A> setRealm(final String realm) {\n             this.realm = realm;\n             return this;\n         }"},{"sha":"cb9de6d8460e3410b12cde3d6f6ce392e01d5d9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -180,13 +180,13 @@ protected Collection<ActionType> getBulkActions() {\n \n     protected abstract String getPrefDerivedAttributesView();\n \n-    public abstract static class Builder<T extends AnyTO> extends AnyDirectoryPanel.Builder<T> {\n+    public abstract static class Builder<A extends AnyTO> extends AnyDirectoryPanel.Builder<A> {\n \n         private static final long serialVersionUID = 5460024856989891156L;\n \n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<T> restClient,\n+                final AbstractAnyRestClient<A, ?> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n "},{"sha":"5759af52b098af535ef618ab8a2ebf9e9ee9fb78","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":37,"deletions":15,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -18,10 +18,14 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n@@ -32,40 +36,55 @@\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.rest.api.service.AnyService;\n+import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n \n-public abstract class AbstractAnyRestClient<T extends AnyTO> extends BaseRestClient {\n+public abstract class AbstractAnyRestClient<TO extends AnyTO, P extends AnyPatch> extends BaseRestClient {\n \n     private static final long serialVersionUID = 1962529678091410544L;\n \n+    protected abstract Class<? extends AnyService<TO, P>> getAnyServiceClass();\n+\n     public abstract int count(String realm, String type);\n \n-    public abstract List<T> list(String realm, int page, int size, final SortParam<String> sort, final String type);\n+    public abstract List<TO> list(String realm, int page, int size, final SortParam<String> sort, final String type);\n \n     public abstract int searchCount(String realm, String fiql, final String type);\n \n-    public abstract List<T> search(\n+    public abstract List<TO> search(\n             String realm, String fiql, int page, int size, final SortParam<String> sort, final String type);\n \n-    public abstract T read(final String key);\n+    public TO read(final String key) {\n+        return getService(getAnyServiceClass()).read(key);\n+    }\n \n-    public abstract ProvisioningResult<T> delete(String etag, String key);\n+    public ProvisioningResult<TO> create(final TO to) {\n+        Response response = getService(getAnyServiceClass()).create(to);\n+        return response.readEntity(new GenericType<ProvisioningResult<TO>>() {\n+        });\n+    }\n \n-    protected <E extends AnyService<T, ?>> ProvisioningResult<T> delete(\n-            final Class<E> serviceClass, final Class<T> objectType, final String etag, final String key) {\n-        ProvisioningResult<T> result;\n+    public ProvisioningResult<TO> update(final String etag, final P patch) {\n+        ProvisioningResult<TO> result;\n         synchronized (this) {\n-            final E service = getService(etag, serviceClass);\n-            result = service.delete(key).readEntity(new GenericType<ProvisioningResult<T>>() {\n-            });\n-            resetClient(serviceClass);\n+            result = getService(etag, getAnyServiceClass()).update(patch).\n+                    readEntity(new GenericType<ProvisioningResult<TO>>() {\n+                    });\n+            resetClient(UserService.class);\n         }\n         return result;\n     }\n \n-    public abstract BulkActionResult bulkAction(BulkAction action);\n-\n-    protected abstract Class<? extends AnyService<?, ?>> getAnyServiceClass();\n+    public ProvisioningResult<TO> delete(final String etag, final String key) {\n+        ProvisioningResult<TO> result;\n+        synchronized (this) {\n+            result = getService(etag, getAnyServiceClass()).delete(key).\n+                    readEntity(new GenericType<ProvisioningResult<TO>>() {\n+                    });\n+            resetClient(getAnyServiceClass());\n+        }\n+        return result;\n+    }\n \n     public BulkActionResult unlink(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n@@ -178,4 +197,7 @@ public BulkActionResult assign(final String etag, final String key, final List<S\n         return result;\n     }\n \n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        return getService(getAnyServiceClass()).bulk(action).readEntity(BulkActionResult.class);\n+    }\n }"},{"sha":"2b91a8d3be9dd6fcd419d403556963f734b1dbd9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":2,"deletions":39,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -19,14 +19,9 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-import javax.ws.rs.core.GenericType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.AnyObjectService;\n@@ -36,12 +31,12 @@\n /**\n  * Console client for invoking Rest any type class services.\n  */\n-public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO> {\n+public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO, AnyObjectPatch> {\n \n     private static final long serialVersionUID = -8874495991295283249L;\n \n     @Override\n-    protected Class<? extends AnyService<?, ?>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<AnyObjectTO, AnyObjectPatch>> getAnyServiceClass() {\n         return AnyObjectService.class;\n     }\n \n@@ -79,36 +74,4 @@ public List<AnyObjectTO> search(final String realm, final String fiql, final int\n                 new AnySearchQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n                 orderBy(toOrderBy(sort)).details(false).build()).getResult();\n     }\n-\n-    @Override\n-    public AnyObjectTO read(final String key) {\n-        return getService(AnyObjectService.class).read(key);\n-    }\n-\n-    public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO) {\n-        Response response = getService(AnyObjectService.class).create(anyObjectTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n-        });\n-    }\n-\n-    public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectPatch anyObjectPatch) {\n-        ProvisioningResult<AnyObjectTO> result;\n-        synchronized (this) {\n-            AnyObjectService service = getService(etag, AnyObjectService.class);\n-            result = service.update(anyObjectPatch).readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n-            });\n-            resetClient(AnyObjectService.class);\n-        }\n-        return result;\n-    }\n-\n-    @Override\n-    public ProvisioningResult<AnyObjectTO> delete(final String etag, final String key) {\n-        return delete(AnyObjectService.class, AnyObjectTO.class, etag, key);\n-    }\n-\n-    @Override\n-    public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(AnyObjectService.class).bulk(action);\n-    }\n }"},{"sha":"0fddcb2ffe158bd3f2cbd0db130131aca5b07790","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":2,"deletions":38,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -19,13 +19,8 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-import javax.ws.rs.core.GenericType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.AnyService;\n@@ -35,12 +30,12 @@\n /**\n  * Console client for invoking Rest Group's services.\n  */\n-public class GroupRestClient extends AbstractAnyRestClient<GroupTO> {\n+public class GroupRestClient extends AbstractAnyRestClient<GroupTO, GroupPatch> {\n \n     private static final long serialVersionUID = -8549081557283519638L;\n \n     @Override\n-    protected Class<? extends AnyService<?, ?>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<GroupTO, GroupPatch>> getAnyServiceClass() {\n         return GroupService.class;\n     }\n \n@@ -79,35 +74,4 @@ public List<GroupTO> search(\n                 getResult();\n     }\n \n-    public ProvisioningResult<GroupTO> create(final GroupTO groupTO) {\n-        Response response = getService(GroupService.class).create(groupTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n-        });\n-    }\n-\n-    @Override\n-    public GroupTO read(final String key) {\n-        return getService(GroupService.class).read(key);\n-    }\n-\n-    public ProvisioningResult<GroupTO> update(final String etag, final GroupPatch patch) {\n-        ProvisioningResult<GroupTO> result;\n-        synchronized (this) {\n-            GroupService service = getService(etag, GroupService.class);\n-            result = service.update(patch).readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n-            });\n-            resetClient(GroupService.class);\n-        }\n-        return result;\n-    }\n-\n-    @Override\n-    public ProvisioningResult<GroupTO> delete(final String etag, final String key) {\n-        return delete(GroupService.class, GroupTO.class, etag, key);\n-    }\n-\n-    @Override\n-    public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(GroupService.class).bulk(action);\n-    }\n }"},{"sha":"7ea8d6803b95ca0fbb519d3751582c58f65bbbc7","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":8,"deletions":36,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -26,8 +26,6 @@\n import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n@@ -40,15 +38,21 @@\n /**\n  * Console client for invoking rest users services.\n  */\n-public class UserRestClient extends AbstractAnyRestClient<UserTO> {\n+public class UserRestClient extends AbstractAnyRestClient<UserTO, UserPatch> {\n \n     private static final long serialVersionUID = -1575748964398293968L;\n \n     @Override\n-    protected Class<? extends AnyService<?, ?>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<UserTO, UserPatch>> getAnyServiceClass() {\n         return UserService.class;\n     }\n \n+    public ProvisioningResult<UserTO> create(final UserTO userTO, final boolean storePassword) {\n+        Response response = getService(UserService.class).create(userTO, storePassword);\n+        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        });\n+    }\n+\n     @Override\n     public int count(final String realm, final String type) {\n         return getService(UserService.class).\n@@ -65,33 +69,6 @@ public List<UserTO> list(\n                         orderBy(toOrderBy(sort)).details(false).build()).getResult();\n     }\n \n-    public ProvisioningResult<UserTO> create(final UserTO userTO, final boolean storePassword) {\n-        Response response = getService(UserService.class).create(userTO, storePassword);\n-        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n-    }\n-\n-    public ProvisioningResult<UserTO> update(final String etag, final UserPatch userPatch) {\n-        ProvisioningResult<UserTO> result;\n-        synchronized (this) {\n-            UserService service = getService(etag, UserService.class);\n-            result = service.update(userPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n-            });\n-            resetClient(UserService.class);\n-        }\n-        return result;\n-    }\n-\n-    @Override\n-    public ProvisioningResult<UserTO> delete(final String etag, final String key) {\n-        return delete(UserService.class, UserTO.class, etag, key);\n-    }\n-\n-    @Override\n-    public UserTO read(final String key) {\n-        return getService(UserService.class).read(key);\n-    }\n-\n     @Override\n     public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(UserService.class).\n@@ -137,9 +114,4 @@ public void reactivate(final String etag, final String userKey, final List<Statu\n             resetClient(UserService.class);\n         }\n     }\n-\n-    @Override\n-    public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(UserService.class).bulk(action);\n-    }\n }"},{"sha":"5cd21802fc17def50d7163e216eaab7de5871569","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusDirectoryPanel.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -55,7 +55,7 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class StatusDirectoryPanel\n-        extends DirectoryPanel<StatusBean, StatusBean, AttributableStatusProvider, AbstractAnyRestClient<?>>\n+        extends DirectoryPanel<StatusBean, StatusBean, AttributableStatusProvider, AbstractAnyRestClient<?, ?>>\n         implements ModalPanel {\n \n     private static final long serialVersionUID = -9148734710505211261L;"},{"sha":"16542f3b60319d717abee261d66e48bbb1ab2216","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n@@ -207,11 +206,11 @@ void delete(\n      * Executes the provided bulk action.\n      *\n      * @param bulkAction list of any object ids against which the bulk action will be performed.\n-     * @return Bulk action result\n+     * @return Response object featuring BulkActionResult as Entity\n      */\n     @POST\n     @Path(\"bulk\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    BulkActionResult bulk(@NotNull BulkAction bulkAction);\n+    Response bulk(@NotNull BulkAction bulkAction);\n }"},{"sha":"3e42a3c84d2099f7ecae805e25766f1f9468cbaa","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -325,7 +325,7 @@ public Response associate(final AssociationPatch patch) {\n     }\n \n     @Override\n-    public BulkActionResult bulk(final BulkAction bulkAction) {\n+    public Response bulk(final BulkAction bulkAction) {\n         AbstractAnyLogic<TO, P> logic = getAnyLogic();\n \n         BulkActionResult result = new BulkActionResult();\n@@ -410,7 +410,7 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n             default:\n         }\n \n-        return result;\n+        return modificationResponse(result);\n     }\n \n }"},{"sha":"5a76218de70cfc2f07e3c5c9669837b44092b8a7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca056b8196f02cec23bfb9907a340dbbf95d8583/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca056b8196f02cec23bfb9907a340dbbf95d8583/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=ca056b8196f02cec23bfb9907a340dbbf95d8583","patch":"@@ -1579,19 +1579,19 @@ public void bulkActions() {\n         assertEquals(11, bulkAction.getTargets().size());\n \n         bulkAction.setType(BulkAction.Type.SUSPEND);\n-        BulkActionResult res = userService.bulk(bulkAction);\n+        BulkActionResult res = userService.bulk(bulkAction).readEntity(BulkActionResult.class);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n         assertEquals(\"suspended\", userService.read(res.getResultByStatus(Status.SUCCESS).get(3)).getStatus());\n \n         bulkAction.setType(BulkAction.Type.REACTIVATE);\n-        res = userService.bulk(bulkAction);\n+        res = userService.bulk(bulkAction).readEntity(BulkActionResult.class);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n         assertEquals(\"active\", userService.read(res.getResultByStatus(Status.SUCCESS).get(3)).getStatus());\n \n         bulkAction.setType(BulkAction.Type.DELETE);\n-        res = userService.bulk(bulkAction);\n+        res = userService.bulk(bulkAction).readEntity(BulkActionResult.class);\n         assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n         assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n     }"}]}