{"sha":"7491636f0f7cea3341fc5942e91e152d29086ebc","node_id":"C_kwDOJfYA1toAKDc0OTE2MzZmMGY3Y2VhMzM0MWZjNTk0MmU5MWUxNTJkMjkwODZlYmM","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-05T10:38:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-05T10:38:26Z"},"message":"[SYNCOPE-1666] Conditionally setting security answer value in linked accounts","tree":{"sha":"387b2056a87b2170522a8a4789b8e3edac904f49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/387b2056a87b2170522a8a4789b8e3edac904f49"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7491636f0f7cea3341fc5942e91e152d29086ebc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7491636f0f7cea3341fc5942e91e152d29086ebc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7491636f0f7cea3341fc5942e91e152d29086ebc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7491636f0f7cea3341fc5942e91e152d29086ebc/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b4a41e0e41f6c8c9b2ca1afc9ce7e19efd485bcf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4a41e0e41f6c8c9b2ca1afc9ce7e19efd485bcf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4a41e0e41f6c8c9b2ca1afc9ce7e19efd485bcf"}],"stats":{"total":18,"additions":7,"deletions":11},"files":[{"sha":"879b45492d377a02859e4fd475e87cf5d0afd117","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7491636f0f7cea3341fc5942e91e152d29086ebc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7491636f0f7cea3341fc5942e91e152d29086ebc/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=7491636f0f7cea3341fc5942e91e152d29086ebc","patch":"@@ -74,7 +74,6 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.Delegation;\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n@@ -303,18 +302,15 @@ private LinkedAccountTO getLinkedAccountTO(final LinkedAccount account, final bo\n         LinkedAccountTO accountTO = new LinkedAccountTO.Builder(\n                 account.getKey(), account.getResource().getKey(), account.getConnObjectKeyValue()).\n                 username(account.getUsername()).\n-                password(account.getPassword()).\n+                password(returnPasswordValue ? account.getPassword() : null).\n                 suspended(BooleanUtils.isTrue(account.isSuspended())).\n                 build();\n \n-        account.getPlainAttrs().forEach(plainAttr -> {\n-            accountTO.getPlainAttrs().add(\n-                    new Attr.Builder(plainAttr.getSchema().getKey()).\n-                            values(plainAttr.getValuesAsStrings()).build());\n-        });\n+        account.getPlainAttrs().forEach(plainAttr -> accountTO.getPlainAttrs().add(\n+                new Attr.Builder(plainAttr.getSchema().getKey()).values(plainAttr.getValuesAsStrings()).build()));\n \n         accountTO.getPrivileges().addAll(account.getPrivileges().stream().\n-                map(Entity::getKey).collect(Collectors.toList()));\n+                map(Privilege::getKey).collect(Collectors.toList()));\n \n         return accountTO;\n     }\n@@ -829,15 +825,15 @@ public UserTO getUserTO(final User user, final boolean details) {\n \n         if (details) {\n             // roles\n-            userTO.getRoles().addAll(user.getRoles().stream().map(Entity::getKey).collect(Collectors.toList()));\n+            userTO.getRoles().addAll(user.getRoles().stream().map(Role::getKey).collect(Collectors.toList()));\n \n             // dynamic roles\n             userTO.getDynRoles().addAll(\n-                    userDAO.findDynRoles(user.getKey()).stream().map(Entity::getKey).collect(Collectors.toList()));\n+                    userDAO.findDynRoles(user.getKey()).stream().map(Role::getKey).collect(Collectors.toList()));\n \n             // privileges\n             userTO.getPrivileges().addAll(userDAO.findAllRoles(user).stream().\n-                    flatMap(role -> role.getPrivileges().stream()).map(Entity::getKey).collect(Collectors.toSet()));\n+                    flatMap(role -> role.getPrivileges().stream()).map(Privilege::getKey).collect(Collectors.toSet()));\n \n             // relationships\n             userTO.getRelationships().addAll(user.getRelationships().stream()."}]}