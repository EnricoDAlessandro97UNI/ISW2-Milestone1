{"sha":"7004b84a150f456044e95ac5c83edfa8f8db9c59","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcwMDRiODRhMTUwZjQ1NjA0NGU5NWFjNWM4M2VkZmE4ZjhkYjljNTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-03T09:04:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-03T09:04:38Z"},"message":"[SYNCOPE-1035] Adding support for Admin Console","tree":{"sha":"76f21a660cd989016ae987991dc71f6b43abf231","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/76f21a660cd989016ae987991dc71f6b43abf231"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7004b84a150f456044e95ac5c83edfa8f8db9c59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7004b84a150f456044e95ac5c83edfa8f8db9c59","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7004b84a150f456044e95ac5c83edfa8f8db9c59","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7004b84a150f456044e95ac5c83edfa8f8db9c59/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5cfb727136381cb85b01bf43318e00e8c1881cc8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5cfb727136381cb85b01bf43318e00e8c1881cc8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5cfb727136381cb85b01bf43318e00e8c1881cc8"}],"stats":{"total":652,"additions":521,"deletions":131},"files":[{"sha":"f8ec4dc3d64cbb98df75876138c8692584e51333","filename":"client/console/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -105,6 +105,11 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-security-jose</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.pdfbox</groupId>\n       <artifactId>pdfbox</artifactId>"},{"sha":"70fb8ca0e6043a4bfec08b2fe84ce9bef72e66a1","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -99,6 +99,8 @@ public final class Constants {\n \n     public static final String PREF_ROLE_PAGINATOR_ROWS = \"role.paginator.rows\";\n \n+    public static final String PREF_ACCESS_TOKEN_PAGINATOR_ROWS = \"accessToken.paginator.rows\";\n+\n     public static final String PREF_WORKFLOW_FORM_PAGINATOR_ROWS = \"role.paginator.workflow.form\";\n \n     public static final String PREF_RESOURCES_PAGINATOR_ROWS = \"resources.paginator.rows\";"},{"sha":"e2b15825ed6dc040a6a3947f63f7b45cda8480e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/RoleDataProvider.java","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5cfb727136381cb85b01bf43318e00e8c1881cc8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5cfb727136381cb85b01bf43318e00e8c1881cc8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java?ref=5cfb727136381cb85b01bf43318e00e8c1881cc8","patch":"@@ -1,58 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.commons;\n-\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-\n-public class RoleDataProvider extends DirectoryDataProvider<RoleTO> {\n-\n-    private static final long serialVersionUID = 6267494272884913376L;\n-\n-    private final SortableDataProviderComparator<RoleTO> comparator;\n-\n-    private final RoleRestClient restClient = new RoleRestClient();\n-\n-    public RoleDataProvider(final int paginatorRows) {\n-        super(paginatorRows);\n-        this.comparator = new SortableDataProviderComparator<>(this);\n-    }\n-\n-    @Override\n-    public Iterator<RoleTO> iterator(final long first, final long count) {\n-        List<RoleTO> result = restClient.list();\n-        Collections.sort(result, comparator);\n-        return result.subList((int) first, (int) first + (int) count).iterator();\n-    }\n-\n-    @Override\n-    public long size() {\n-        return restClient.count();\n-    }\n-\n-    @Override\n-    public IModel<RoleTO> model(final RoleTO object) {\n-        return new CompoundPropertyModel<>(object);\n-    }\n-}"},{"sha":"eb272882ed6c9d46e0d15c82c2b557b317c2b197","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Dashboard.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -24,6 +24,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.ConsoleInitializer;\n+import org.apache.syncope.client.console.panels.DashboardAccessTokensPanel;\n import org.apache.syncope.client.console.panels.DashboardControlPanel;\n import org.apache.syncope.client.console.panels.DashboardExtensionsPanel;\n import org.apache.syncope.client.console.panels.DashboardOverviewPanel;\n@@ -61,6 +62,16 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n+        tabs.add(new AbstractTab(new ResourceModel(\"accessTokens\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new DashboardAccessTokensPanel(panelId, getPageReference());\n+            }\n+        });\n+\n         tabs.add(new AbstractTab(new ResourceModel(\"control\")) {\n \n             private static final long serialVersionUID = -6815067322125799251L;\n@@ -73,7 +84,7 @@ public Panel getPanel(final String panelId) {\n \n         ClassPathScanImplementationLookup classPathScanImplementationLookup =\n                 (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+                        getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n         final List<Class<? extends BaseExtWidget>> extWidgetClasses =\n                 classPathScanImplementationLookup.getExtWidgetClasses();\n         if (!extWidgetClasses.isEmpty()) {"},{"sha":"5b08c299c5b132e58bbac30759f638b6f7c0dae3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel.java","status":"added","additions":234,"deletions":0,"changes":234,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,234 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactConsumer;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AccessTokenDirectoryPanel.AccessTokenDataProvider;\n+import org.apache.syncope.client.console.rest.AccessTokenRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AccessTokenTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class AccessTokenDirectoryPanel\n+        extends DirectoryPanel<AccessTokenTO, AccessTokenTO, AccessTokenDataProvider, AccessTokenRestClient> {\n+\n+    private static final long serialVersionUID = -6903586269155682961L;\n+\n+    protected AccessTokenDirectoryPanel(final String id, final Builder builder) {\n+        super(id, builder);\n+\n+        setShowResultPage(true);\n+\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected AccessTokenDataProvider dataProvider() {\n+        return new AccessTokenDataProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ACCESS_TOKEN_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected List<IColumn<AccessTokenTO, String>> getColumns() {\n+        List<IColumn<AccessTokenTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<AccessTokenTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+\n+        columns.add(new PropertyColumn<AccessTokenTO, String>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n+\n+        columns.add(new AbstractColumn<AccessTokenTO, String>(new ResourceModel(\"issuedAt\", \"\")) {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<AccessTokenTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<AccessTokenTO> model) {\n+\n+                JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(model.getObject().getBody());\n+                cellItem.add(new Label(componentId,\n+                        SyncopeConsoleSession.get().getDateFormat().format(\n+                                new Date(consumer.getJwtClaims().getIssuedAt()))));\n+            }\n+        });\n+\n+        columns.add(new DatePropertyColumn<AccessTokenTO>(new ResourceModel(\"expiryTime\"), \"expiryTime\", \"expiryTime\"));\n+\n+        columns.add(new AbstractColumn<AccessTokenTO, String>(new ResourceModel(\"remoteHost\", \"\")) {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<AccessTokenTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<AccessTokenTO> model) {\n+\n+                JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(model.getObject().getBody());\n+                cellItem.add(new Label(componentId,\n+                        consumer.getJwtClaims().getClaim(SyncopeConstants.JWT_CLAIM_REMOTE_HOST).toString()));\n+            }\n+        });\n+\n+        columns.add(new ActionColumn<AccessTokenTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 6532399418012695495L;\n+\n+            @Override\n+            public ActionLinksPanel<AccessTokenTO> getActions(\n+                    final String componentId, final IModel<AccessTokenTO> model) {\n+\n+                final ActionLinksPanel.Builder<AccessTokenTO> panel = ActionLinksPanel.builder();\n+\n+                panel.add(new ActionLink<AccessTokenTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AccessTokenTO ignore) {\n+                        try {\n+                            restClient.delete(model.getObject().getKey());\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                                    getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.ACCESS_TOKEN_DELETE);\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<AccessTokenTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<AccessTokenTO> panel = ActionLinksPanel.builder();\n+\n+                return panel.add(new ActionLink<AccessTokenTO>() {\n+\n+                    private static final long serialVersionUID = -8766205612892810375L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AccessTokenTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.ACCESS_TOKEN_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.emptyList();\n+    }\n+\n+    public abstract static class Builder\n+            extends DirectoryPanel.Builder<AccessTokenTO, AccessTokenTO, AccessTokenRestClient> {\n+\n+        private static final long serialVersionUID = 5088962796986706805L;\n+\n+        public Builder(final PageReference pageRef) {\n+            super(new AccessTokenRestClient(), pageRef);\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<AccessTokenTO> newInstance(final String id, final boolean wizardInModal) {\n+            return new AccessTokenDirectoryPanel(id, this);\n+        }\n+    }\n+\n+    protected class AccessTokenDataProvider extends DirectoryDataProvider<AccessTokenTO> {\n+\n+        private static final long serialVersionUID = 6267494272884913376L;\n+\n+        private final SortableDataProviderComparator<AccessTokenTO> comparator;\n+\n+        private final AccessTokenRestClient restClient = new AccessTokenRestClient();\n+\n+        public AccessTokenDataProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+\n+            setSort(\"owner\", SortOrder.ASCENDING);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<AccessTokenTO> iterator(final long first, final long count) {\n+            int page = ((int) first / paginatorRows);\n+            List<AccessTokenTO> tasks = restClient.list((page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+\n+            Collections.sort(tasks, comparator);\n+            return tasks.iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.count();\n+        }\n+\n+        @Override\n+        public IModel<AccessTokenTO> model(final AccessTokenTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"d83d9e559aa382980e47c19c8366866d5dfbb9c1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DashboardAccessTokensPanel.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.AccessTokenTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class DashboardAccessTokensPanel extends Panel {\n+\n+    private static final long serialVersionUID = -5540744119461583586L;\n+\n+    public DashboardAccessTokensPanel(final String id, final PageReference pageRef) {\n+        super(id);\n+\n+        WizardMgtPanel<AccessTokenTO> accessTokens = new AccessTokenDirectoryPanel.Builder(pageRef) {\n+\n+            private static final long serialVersionUID = -5960765294082359003L;\n+\n+        }.disableCheckBoxes().build(\"accessTokens\");\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                accessTokens, Component.RENDER, StandardEntitlement.ACCESS_TOKEN_LIST);\n+        add(accessTokens);\n+    }\n+\n+}"},{"sha":"3292147b08297329e3fe4c793aadb656a3c993db","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":37,"deletions":1,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -23,14 +23,18 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.RoleDataProvider;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.RoleDirectoryPanel.RoleDataProvider;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n@@ -57,6 +61,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n@@ -266,4 +271,35 @@ protected WizardMgtPanel<RoleWrapper> newInstance(final String id, final boolean\n             return new RoleDirectoryPanel(id, this);\n         }\n     }\n+\n+    protected class RoleDataProvider extends DirectoryDataProvider<RoleTO> {\n+\n+        private static final long serialVersionUID = 6267494272884913376L;\n+\n+        private final SortableDataProviderComparator<RoleTO> comparator;\n+\n+        private final RoleRestClient restClient = new RoleRestClient();\n+\n+        public RoleDataProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<RoleTO> iterator(final long first, final long count) {\n+            List<RoleTO> result = restClient.list();\n+            Collections.sort(result, comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.count();\n+        }\n+\n+        @Override\n+        public IModel<RoleTO> model(final RoleTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n }"},{"sha":"50b917c143974872353bca6775fee63b5a323db2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AccessTokenRestClient.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAccessTokenRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAccessTokenRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAccessTokenRestClient.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AccessTokenTO;\n+import org.apache.syncope.common.rest.api.beans.AccessTokenQuery;\n+import org.apache.syncope.common.rest.api.service.AccessTokenService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+\n+/**\n+ * Console client for invoking Rest Access Token's services.\n+ */\n+public class AccessTokenRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -3161863874876938094L;\n+\n+    public void delete(final String key) {\n+        getService(AccessTokenService.class).delete(key);\n+    }\n+\n+    public int count() {\n+        return getService(AccessTokenService.class).list(\n+                new AccessTokenQuery.Builder().page(1).size(1).build()).\n+                getTotalCount();\n+    }\n+\n+    public List<AccessTokenTO> list(final int page, final int size, final SortParam<String> sort) {\n+        return getService(AccessTokenService.class).list(\n+                new AccessTokenQuery.Builder().page(page).size(size).orderBy(toOrderBy(sort)).build()).\n+                getResult();\n+    }\n+\n+}"},{"sha":"5b7c1563fdef78931843543b91782068ca80eec2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.rest.api.service.RoleService;\n \n /**\n- * Console client for invoking Rest Group's services.\n+ * Console client for invoking Rest Role's services.\n  */\n public class RoleRestClient extends BaseRestClient {\n "},{"sha":"39e4227817195f907a09c24af524d16d66776b93","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -222,7 +222,7 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS;\n     }\n \n-    public class NotificationTasksProvider extends TaskDataProvider<NotificationTaskTO> {\n+    protected class NotificationTasksProvider extends TaskDataProvider<NotificationTaskTO> {\n \n         private static final long serialVersionUID = 4725679400450513556L;\n "},{"sha":"8b10e8dc4e9140dafbdc51adac2ddf65075e5b94","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -307,7 +307,7 @@ protected SchedTasksProvider<T> dataProvider() {\n         return new SchedTasksProvider<>(reference, TaskType.SCHEDULED, rows);\n     }\n \n-    public class SchedTasksProvider<T extends SchedTaskTO> extends TaskDataProvider<T> {\n+    protected class SchedTasksProvider<T extends SchedTaskTO> extends TaskDataProvider<T> {\n \n         private static final long serialVersionUID = 4725679400450513556L;\n "},{"sha":"b7ffabddb6dba6091beaf064caa3ae1d3d4162d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -78,7 +78,7 @@ public TasksProvider(final int paginatorRows, final TaskType id) {\n             super(paginatorRows);\n \n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n             this.id = id;\n         }\n "},{"sha":"b9100c3071afcf28ba8e8c01d6a4b8c048eca466","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -16,3 +16,4 @@\n # under the License.\n overview=Overview\n control=Control\n+accessTokens=Access Tokens"},{"sha":"efdaee439c0f3572450eaf722045bd99dcd33a8e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_it.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -16,3 +16,4 @@\n # under the License.\n overview=Sommario\n control=Gestione\n+accessTokens=Token di accesso"},{"sha":"5823cf99c398ccd414b3fc76939d271369b213db","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_pt_BR.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -16,3 +16,4 @@\n # under the License.\n overview=Resumo\n control=Gest\\u00e3o\n+accessTokens=Tokens de acesso"},{"sha":"fc2c8655fc674aef0520d43690af33981306fd81","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard_ru.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard_ru.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -15,7 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# overview=Обзор\n+# overview=\\u00d0\\u009e\\u00d0\\u00b1\\u00d0\\u00b7\\u00d0\\u00be\\u00d1\\u0080\n overview=\\u041e\\u0431\\u0437\\u043e\\u0440\n-# control=Управление\n+# control=\\u00d0\\u00a3\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n control=\\u0423\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435\n+accessTokens=\\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u0430"},{"sha":"89b23f284d7c47aaf04a8ae7236756bc28af4cbc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit access token ${accessTokenTO.owner}\n+any.new=New access token\n+owner=Owner\n+expiryTime=Expiry\n+issuedAt=Start\n+remoteHost=Remote Host"},{"sha":"cfda8cc2c6ba658419958bfd050255aa86bc7a38","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel_it.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_it.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica ruolo ${roleTO.key}\n+any.new=Nuovo token di accesso\n+owner=Proprietario\n+expiryTime=Termine\n+issuedAt=Inizio\n+remoteHost=Host remoto"},{"sha":"bd27aeaf105d7cd0503882f46c6aa724424a8021","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel_pt_BR.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_pt_BR.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Alterar fun\\u00e7\\u00e3o ${roleTO.key}\n+any.new=Novo token de acesso\n+owner=Propriet\\u00e1rio\n+expiryTime=Termo\n+issuedAt=Iniciar\n+remoteHost=Host remoto"},{"sha":"e5bbbd07a96f71397a4532b0d456964dd46d4de0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel_ru.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel_ru.properties?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u0440\\u043e\\u043b\\u044c ${roleTO.key}\n+any.new=\\u041d\\u043e\\u0432\\u044b\\u0439 \\u043c\\u0430\\u0440\\u043a\\u0435\\u0440 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u0430\n+owner=\\u0412\\u043b\\u0430\\u0434\\u0435\\u043b\\u0435\\u0446\n+expiryTime=\\u0438\\u0441\\u0442\\u0435\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0440\\u043e\\u043a\\u0430\n+issuedAt=\\u041d\\u0430\\u0447\\u0430\\u043b\\u043e\n+remoteHost=\\u0423\\u0434\\u0430\\u043b\\u0435\\u043d\\u043d\\u044b\\u0439 \\u0443\\u0437\\u0435\\u043b"},{"sha":"26ece0866a911c0f6c2644dc6810ef24dac936ca","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyPanel.html","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -17,11 +17,8 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div wicket:id=\"accordionPanel\"></div>\n-      <div wicket:id=\"searchResult\"></div>\n-    </wicket:panel>\n-  </body>\n+  <wicket:panel>\n+    <div wicket:id=\"accordionPanel\"></div>\n+    <div wicket:id=\"searchResult\"></div>\n+  </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"4c317fe476d0693995f47c3737efeb14d676fa7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DashboardAccessTokensPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardAccessTokensPanel.html?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"accessTokens\"></div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"2d556ee3cba5052baeea44dfe8e20ad7a7585d74","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -145,7 +145,7 @@ public UserTO getSelfTO() {\n     }\n \n     public boolean isAuthenticated() {\n-        return client.getJWT() != null;\n+        return client != null && client.getJWT() != null;\n     }\n \n     public CookieUtils getCookieUtils() {\n@@ -162,13 +162,17 @@ public void setXsrfTokenGenerated(final boolean xsrfTokenGenerated) {\n \n     @Override\n     public void invalidate() {\n-        client.logout();\n+        if (isAuthenticated()) {\n+            client.logout();\n+        }\n         super.invalidate();\n     }\n \n     @Override\n     public void invalidateNow() {\n-        client.logout();\n+        if (isAuthenticated()) {\n+            client.logout();\n+        }\n         super.invalidateNow();\n     }\n "},{"sha":"1a3af4ce23fe43cc0b17104c67c7b17aa23e7810","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/JWTAuthenticationHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FJWTAuthenticationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FJWTAuthenticationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FJWTAuthenticationHandler.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -25,8 +25,8 @@ public class JWTAuthenticationHandler implements AuthenticationHandler {\n \n     private final String jwt;\n \n-    public JWTAuthenticationHandler(final String jwtToken) {\n-        this.jwt = jwtToken;\n+    public JWTAuthenticationHandler(final String jwt) {\n+        this.jwt = jwt;\n     }\n \n     public String getJwt() {"},{"sha":"a07ef4ea9f2f20d85b3e09a89e04a0a1f0a69a8e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AccessTokenTO.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7004b84a150f456044e95ac5c83edfa8f8db9c59/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7004b84a150f456044e95ac5c83edfa8f8db9c59/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java?ref=7004b84a150f456044e95ac5c83edfa8f8db9c59","patch":"@@ -37,8 +37,6 @@ public class AccessTokenTO extends AbstractBaseBean implements EntityTO {\n \n     private String owner;\n \n-    private String authorities;\n-\n     @Override\n     public String getKey() {\n         return key;\n@@ -77,12 +75,4 @@ public void setOwner(final String owner) {\n         this.owner = owner;\n     }\n \n-    public String getAuthorities() {\n-        return authorities;\n-    }\n-\n-    public void setAuthorities(final String authorities) {\n-        this.authorities = authorities;\n-    }\n-\n }"},{"sha":"79b33c5f60854c6ad8772bd0b9a5b16dab8b004f","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeDigestAuthenticationEntryPoint.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5cfb727136381cb85b01bf43318e00e8c1881cc8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeDigestAuthenticationEntryPoint.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5cfb727136381cb85b01bf43318e00e8c1881cc8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeDigestAuthenticationEntryPoint.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeDigestAuthenticationEntryPoint.java?ref=5cfb727136381cb85b01bf43318e00e8c1881cc8","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.spring.security;\n-\n-import java.io.IOException;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.springframework.security.core.AuthenticationException;\n-import org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint;\n-\n-/**\n- * Render Spring's {@link AuthenticationException} as other Syncope errors.\n- */\n-public class SyncopeDigestAuthenticationEntryPoint extends DigestAuthenticationEntryPoint {\n-\n-    @Override\n-    public void commence(final HttpServletRequest request, final HttpServletResponse response,\n-            final AuthenticationException authException) throws IOException, ServletException {\n-\n-        response.addHeader(RESTHeaders.ERROR_INFO, authException.getMessage());\n-\n-        super.commence(request, response, authException);\n-    }\n-\n-}"}]}