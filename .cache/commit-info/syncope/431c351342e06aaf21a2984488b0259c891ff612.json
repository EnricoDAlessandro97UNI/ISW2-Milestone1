{"sha":"431c351342e06aaf21a2984488b0259c891ff612","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzMWMzNTEzNDJlMDZhYWYyMWEyOTg0NDg4YjAyNTljODkxZmY2MTI=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-03-07T13:35:27Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-03-07T13:35:27Z"},"message":"[SYNCOPE-1439] Fix wrong types","tree":{"sha":"4e69d7e83d31eed030275c4c2b635f100e6b4b2b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4e69d7e83d31eed030275c4c2b635f100e6b4b2b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/431c351342e06aaf21a2984488b0259c891ff612","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/431c351342e06aaf21a2984488b0259c891ff612","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/431c351342e06aaf21a2984488b0259c891ff612","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/431c351342e06aaf21a2984488b0259c891ff612/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"950e11d101b690daf30c6927bb793d0b159d01ed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/950e11d101b690daf30c6927bb793d0b159d01ed","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/950e11d101b690daf30c6927bb793d0b159d01ed"}],"stats":{"total":30,"additions":15,"deletions":15},"files":[{"sha":"67dd335c1efadaafd2c8948af34db5f5e8eeb98a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/431c351342e06aaf21a2984488b0259c891ff612/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/431c351342e06aaf21a2984488b0259c891ff612/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=431c351342e06aaf21a2984488b0259c891ff612","patch":"@@ -48,8 +48,6 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.AttributableTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n@@ -72,6 +70,8 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.Attributable;\n \n public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n \n@@ -116,7 +116,7 @@ public <T extends AnyTO> PlainAttrs(\n \n             @Override\n             public WebMarkupContainer getPanel(final String panelId) {\n-                return new PlainSchemasOwn(panelId, schemas, attrTOs);\n+                return new PlainSchemasOwn(panelId, schemas, attrs);\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n@@ -140,12 +140,12 @@ public WebMarkupContainer getPanel(final String panelId) {\n                         return new PlainSchemasMemberships(\n                                 panelId,\n                                 membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new LoadableDetachableModel<AttributableTO>() { // SYNCOPE-1439\n+                                new LoadableDetachableModel<Attributable>() { // SYNCOPE-1439\n \n                             private static final long serialVersionUID = 526768546610546553L;\n \n                             @Override\n-                            protected AttributableTO load() {\n+                            protected Attributable load() {\n                                 return membershipTO;\n                             }\n \n@@ -389,28 +389,28 @@ protected PageReference getPageReference() {\n         return panel;\n     }\n \n-    protected class PlainSchemasMemberships extends PlainSchemas<AttributableTO> {\n+    protected class PlainSchemasMemberships extends PlainSchemas<Attributable> {\n \n         private static final long serialVersionUID = 456754923340249215L;\n \n         public PlainSchemasMemberships(\n                 final String id,\n                 final Map<String, PlainSchemaTO> schemas,\n-                final IModel<AttributableTO> attributableTO) {\n+                final IModel<Attributable> attributableTO) {\n \n             super(id, schemas, attributableTO);\n \n-            add(new ListView<AttrTO>(\"schemas\",\n-                    new ListModel<AttrTO>(new ArrayList<AttrTO>(\n+            add(new ListView<Attr>(\"schemas\",\n+                    new ListModel<Attr>(new ArrayList<Attr>(\n                             attributableTO.getObject().getPlainAttrs().stream().sorted(attrComparator).\n                                     collect(Collectors.toList())))) {\n \n                 private static final long serialVersionUID = 5306618783986001008L;\n \n                 @Override\n                 @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-                protected void populateItem(final ListItem<AttrTO> item) {\n-                    AttrTO attrTO = item.getModelObject();\n+                protected void populateItem(final ListItem<Attr> item) {\n+                    Attr attrTO = item.getModelObject();\n \n                     AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n                     if (mode == AjaxWizard.Mode.TEMPLATE\n@@ -461,14 +461,14 @@ public List<String> getObject() {\n         }\n     }\n \n-    protected class PlainSchemasOwn extends PlainSchemas<List<AttrTO>> {\n+    protected class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n \n         public PlainSchemasOwn(\n                 final String id,\n                 final Map<String, PlainSchemaTO> schemas,\n-                final IModel<List<AttrTO>> attrTOs) {\n+                final IModel<List<Attr>> attrTOs) {\n \n             super(id, schemas, attrTOs);\n \n@@ -515,8 +515,8 @@ public PlainSchemas(\n             super(id);\n         }\n \n-        protected void setExternalAction(final AttrTO attrTO, final AbstractFieldPanel<?> panel) {\n-            Optional<AttrTO> prevAttr = previousObject == null\n+        protected void setExternalAction(final Attr attrTO, final AbstractFieldPanel<?> panel) {\n+            Optional<Attr> prevAttr = previousObject == null\n                     ? Optional.empty()\n                     : previousObject.getPlainAttr(attrTO.getSchema());\n             if (previousObject != null"}]}