{"sha":"8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkMmNhYTYzYjk2ZDQ0NGY2ZDc2ZmZiYThhOTExYWIwYmE0MGZkZjE=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-16T13:58:20Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-16T13:58:20Z"},"message":"[SYNCOPE-42] - Renamed UserController read & delete by username methods as per Francesco's suggestions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1326619 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"47dbd936fbf10abac21dbf7a21da93c99093b030","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/47dbd936fbf10abac21dbf7a21da93c99093b030"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb68d3a11decaa20b7a57083a83370ae1aaa7966","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb68d3a11decaa20b7a57083a83370ae1aaa7966","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cb68d3a11decaa20b7a57083a83370ae1aaa7966"}],"stats":{"total":25,"additions":15,"deletions":10},"files":[{"sha":"f7934c7403e3d92c2d0f84a767d5b1a226537a9b","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","patch":"@@ -196,9 +196,9 @@ public UserTO read(@PathVariable(\"userId\") final Long userId) throws NotFoundExc\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/read\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/readByUsername/{username}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public UserTO read(@RequestParam(\"username\") final String username)\n+    public UserTO read(@PathVariable final String username)\n             throws NotFoundException, UnauthorizedRoleException {\n \n         UserTO result = userDataBinder.getUserTO(username);\n@@ -440,8 +440,8 @@ public UserTO delete(@PathVariable(\"userId\") final Long userId)\n     }\n     \n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/delete\")\n-    public UserTO delete(@RequestParam(\"username\") final String username)\n+    @RequestMapping(method = RequestMethod.GET, value = \"/deleteByUsername/{username}\")\n+    public UserTO delete(@PathVariable final String username)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n         LOG.debug(\"User delete called with {}\", username);\n         "},{"sha":"841368c2c976edf8eeb3fc3813c29f12637d584a","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","patch":"@@ -318,7 +318,8 @@ public void sync() {\n         assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);\n \n         // check for user template\n-        userTO = restTemplate.getForObject(BASE_URL + \"user/read.json?username=test7\", UserTO.class);\n+        userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"test7\");\n         assertNotNull(userTO);\n         assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n         assertEquals(2, userTO.getResources().size());\n@@ -327,7 +328,8 @@ public void sync() {\n         assertEquals(1, userTO.getMemberships().size());\n         assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n \n-        userTO = restTemplate.getForObject(BASE_URL + \"user/read.json?username=test8\", UserTO.class);\n+        userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"test8\");\n         assertNotNull(userTO);\n         assertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n \n@@ -340,11 +342,13 @@ public void sync() {\n         // * expected disabled user test1\n         // * expected enabled user test2\n \n-        userTO = restTemplate.getForObject(BASE_URL + \"user/read.json?username=test1\", UserTO.class);\n+        userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"test1\");\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        userTO = restTemplate.getForObject(BASE_URL + \"user/read.json?username=test3\", UserTO.class);\n+        userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"test3\");\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n     }\n@@ -416,7 +420,8 @@ public void reconcile() {\n         assertNotNull(status);\n         assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n \n-        final UserTO userTO = restTemplate.getForObject(BASE_URL + \"user/read.json?username=testuser1\", UserTO.class);\n+        final UserTO userTO = \n+            restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"testuser1\");\n \n         assertNotNull(userTO);\n         assertEquals(\"reconciled@syncope.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));"},{"sha":"9f68cc3e05934f4dc6728dc1569683cee3275493","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","patch":"@@ -779,7 +779,7 @@ public void deleteByUsername() {\n \n         long id = userTO.getId();\n         userTO = \n-            restTemplate.getForObject(BASE_URL + \"user/delete?username=\" + userTO.getUsername(), UserTO.class);\n+            restTemplate.getForObject(BASE_URL + \"user/deleteByUsername/{username}.json\", UserTO.class, userTO.getUsername());\n \n         assertNotNull(userTO);\n         assertEquals(id, userTO.getId());"}]}