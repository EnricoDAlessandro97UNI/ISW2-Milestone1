{"sha":"530e431fab812ce0adc46162d42f0ec80411c6a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUzMGU0MzFmYWI4MTJjZTBhZGM0NjE2MmQ0MmYwZWM4MDQxMWM2YTc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-04T13:21:53Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-04T13:21:53Z"},"message":"Various small bugfixes and improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246424 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c7e1cc49d2a6143e79d4026115f7fd8ecf72fc9b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c7e1cc49d2a6143e79d4026115f7fd8ecf72fc9b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/530e431fab812ce0adc46162d42f0ec80411c6a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/530e431fab812ce0adc46162d42f0ec80411c6a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/530e431fab812ce0adc46162d42f0ec80411c6a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/530e431fab812ce0adc46162d42f0ec80411c6a7/comments","author":null,"committer":null,"parents":[{"sha":"12f75f39e2b6f626ec230893e9960f3f76414e2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/12f75f39e2b6f626ec230893e9960f3f76414e2e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/12f75f39e2b6f626ec230893e9960f3f76414e2e"}],"stats":{"total":113,"additions":60,"deletions":53},"files":[{"sha":"8f619718e9e9998f70439984b73c95ebef403f15","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -24,6 +24,7 @@ public class UserTO extends AbstractAttributableTO {\n \n     private String password;\n     private Set<MembershipTO> memberships;\n+    private String status;\n     private Date creationTime;\n     private String token;\n     private Date tokenExpireTime;\n@@ -58,6 +59,14 @@ public void setMemberships(Set<MembershipTO> memberships) {\n         this.memberships = memberships;\n     }\n \n+    public String getStatus() {\n+        return status;\n+    }\n+\n+    public void setStatus(String status) {\n+        this.status = status;\n+    }\n+\n     public Date getCreationTime() {\n         return creationTime;\n     }"},{"sha":"ab9cffac6ecd946db134c3cbe5d8fb7adc4366bb","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -55,6 +55,8 @@ public Resource save(Resource resource) {\n     public void delete(String name) {\n \n         Resource resource = find(name);\n+        if (resource == null)\n+            return;\n \n         Set<SchemaMapping> mappings = resource.getMappings();\n         if (mappings != null) {"},{"sha":"250f162f1ca8e3cfb790435a53194f8212df3b82","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -123,7 +123,7 @@ public UserTO executeAction(HttpServletResponse response,\n             throws WorkflowException, NotFoundException {\n \n         return userDataBinder.getUserTO(\n-                doExecuteAction(actionName, userTO, null));\n+                doExecuteAction(actionName, userTO, null), userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,\n@@ -134,7 +134,7 @@ public UserTO activate(@RequestBody UserTO userTO)\n         return userDataBinder.getUserTO(\n                 doExecuteAction(Constants.ACTION_ACTIVATE, userTO,\n                 Collections.singletonMap(Constants.TOKEN,\n-                (Object) userTO.getToken())));\n+                (Object) userTO.getToken())), userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.GET,\n@@ -145,7 +145,8 @@ public UserTO generateToken(@PathVariable(\"userId\") Long userId)\n         UserTO userTO = new UserTO();\n         userTO.setId(userId);\n         return userDataBinder.getUserTO(\n-                doExecuteAction(Constants.ACTION_GENERATE_TOKEN, userTO, null));\n+                doExecuteAction(Constants.ACTION_GENERATE_TOKEN, userTO, null),\n+                userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,\n@@ -156,7 +157,8 @@ public UserTO verifyToken(@RequestBody UserTO userTO)\n         return userDataBinder.getUserTO(\n                 doExecuteAction(Constants.ACTION_VERIFY_TOKEN, userTO,\n                 Collections.singletonMap(Constants.TOKEN,\n-                (Object) userTO.getToken())));\n+                (Object) userTO.getToken())),\n+                userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.GET,\n@@ -166,7 +168,7 @@ public UserTOs list() {\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n \n         for (SyncopeUser user : users) {\n-            userTOs.add(userDataBinder.getUserTO(user));\n+            userTOs.add(userDataBinder.getUserTO(user, userWorkflow));\n         }\n \n         UserTOs result = new UserTOs();\n@@ -187,7 +189,7 @@ public UserTO read(@PathVariable(\"userId\") Long userId)\n             throw new NotFoundException(String.valueOf(userId));\n         }\n \n-        return userDataBinder.getUserTO(user);\n+        return userDataBinder.getUserTO(user, userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.GET,\n@@ -236,7 +238,7 @@ public UserTOs search(@RequestBody NodeSearchCondition searchCondition)\n                 syncopeUserDAO.search(searchCondition);\n         UserTOs result = new UserTOs();\n         for (SyncopeUser user : matchingUsers) {\n-            result.addUser(userDataBinder.getUserTO(user));\n+            result.addUser(userDataBinder.getUserTO(user, userWorkflow));\n         }\n \n         return result;\n@@ -376,7 +378,7 @@ public UserTO create(HttpServletResponse response,\n         syncopeUser = syncopeUserDAO.save(syncopeUser);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return userDataBinder.getUserTO(syncopeUser);\n+        return userDataBinder.getUserTO(syncopeUser, userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,\n@@ -402,7 +404,7 @@ public UserTO update(@RequestBody UserMod userMod,\n \n         // First of all, let's check if update is allowed\n         syncopeUser = doExecuteAction(Constants.ACTION_UPDATE,\n-                userDataBinder.getUserTO(syncopeUser), null);\n+                userDataBinder.getUserTO(syncopeUser, userWorkflow), null);\n \n         // Update user with provided userMod\n         ResourceOperations resourceOperations =\n@@ -423,7 +425,7 @@ public UserTO update(@RequestBody UserMod userMod,\n             log.debug(\"Propagated onto resources \" + propagatedResources);\n         }\n \n-        return userDataBinder.getUserTO(syncopeUser);\n+        return userDataBinder.getUserTO(syncopeUser, userWorkflow);\n     }\n \n     @RequestMapping(method = RequestMethod.DELETE,"},{"sha":"0c530869f71e128e446c7eeec30c132c949f4de6","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":21,"deletions":1,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -14,6 +14,10 @@\n  */\n package org.syncope.core.rest.data;\n \n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.spi.Step;\n+import java.util.List;\n+import javax.persistence.EntityNotFoundException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n@@ -164,14 +168,30 @@ public ResourceOperations updateSyncopeUser(\n         return resourceOperations;\n     }\n \n-    public UserTO getUserTO(SyncopeUser user) {\n+    public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n         UserTO userTO = new UserTO();\n         userTO.setId(user.getId());\n         userTO.setCreationTime(user.getCreationTime());\n         userTO.setToken(user.getToken());\n         userTO.setTokenExpireTime(user.getTokenExpireTime());\n         userTO.setPassword(user.getPassword());\n \n+        String status = null;\n+        try {\n+            List<Step> currentSteps = userWorkflow.getCurrentSteps(\n+                    user.getWorkflowEntryId());\n+\n+            if (currentSteps != null && !currentSteps.isEmpty()) {\n+                status = currentSteps.iterator().next().getStatus();\n+            } else {\n+                log.error(\"Could not find status information for \" + user);\n+            }\n+        } catch (EntityNotFoundException e) {\n+            log.error(\"Could not find workflow entry with id \"\n+                    + user.getWorkflowEntryId());\n+        }\n+        userTO.setStatus(status);\n+\n         userTO = (UserTO) fillTO(userTO, user.getAttributes(),\n                 user.getDerivedAttributes(), user.getResources());\n "},{"sha":"b3752b63dab94bf37715b882fee72688f9ba802c","filename":"core/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -12,10 +12,10 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n+<web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n-         version=\"2.5\">\n+         xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/javaee/web-app_2_4.xsd\"\n+         version=\"2.4\">\n \n     <display-name>Syncope</display-name>\n "},{"sha":"155cd95862b2b425ded220ddc1424a9dd7d86227","filename":"core/src/test/java/org/syncope/core/test/persistence/ResourceDAOTest.java","status":"modified","additions":1,"deletions":13,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -23,25 +23,13 @@\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.dao.SchemaMappingDAO;\n-import org.syncope.core.persistence.dao.SyncopeUserDAO;\n \n @Transactional\n public class ResourceDAOTest extends AbstractTest {\n \n     @Autowired\n-    ResourceDAO resourceDAO;\n-\n-    @Autowired\n-    ConnectorInstanceDAO connectorInstanceDAO;\n-\n-    @Autowired\n-    SchemaMappingDAO schemaMappingDAO;\n-\n-    @Autowired\n-    SyncopeUserDAO syncopeUserDAO;\n+    private ResourceDAO resourceDAO;\n \n     @Test\n     public final void findById() {"},{"sha":"0d68f8defa9494299771eda59a9614f6f8d880a0","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/ResourceTest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -41,19 +41,19 @@\n public class ResourceTest extends AbstractTest {\n \n     @Autowired\n-    ResourceDAO resourceDAO;\n+    private ResourceDAO resourceDAO;\n \n     @Autowired\n-    SchemaDAO schemaDAO;\n+    private SchemaDAO schemaDAO;\n \n     @Autowired\n-    ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnectorInstanceDAO connectorInstanceDAO;\n \n     @Autowired\n-    SchemaMappingDAO schemaMappingDAO;\n+    private SchemaMappingDAO schemaMappingDAO;\n \n     @Autowired\n-    SyncopeUserDAO syncopeUserDAO;\n+    private SyncopeUserDAO syncopeUserDAO;\n \n     @Test\n     public final void save() throws ClassNotFoundException {"},{"sha":"f37e8fa717784fcd454ff25282df996703307ee8","filename":"core/src/test/java/org/syncope/core/test/rest/ResourceTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -17,7 +17,6 @@\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.test.annotation.ExpectedException;\n import org.springframework.web.client.HttpStatusCodeException;\n@@ -26,13 +25,9 @@\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.to.SchemaMappingTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.core.persistence.dao.SchemaDAO;\n \n public class ResourceTestITCase extends AbstractTestITCase {\n \n-    @Autowired\n-    SchemaDAO schemaDAO;\n-\n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n     public void createExistingResource() {"},{"sha":"5bb0126bdac7e5158ae9e3fed02c1606aa8b7a35","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -105,19 +105,13 @@ public void create() {\n                 BASE_URL + \"user/create?syncRoles=8\",\n                 userTO, UserTO.class);\n \n+        assertNotNull(newUserTO);\n         assertFalse(newUserTO.getAttributes().contains(\n                 attrWithInvalidSchemaTO));\n-        userTO.removeAttribute(attrWithInvalidSchemaTO);\n-\n-        userTO.setId(newUserTO.getId());\n-        userTO.setCreationTime(newUserTO.getCreationTime());\n-        userTO.setToken(newUserTO.getToken());\n-        userTO.setTokenExpireTime(newUserTO.getTokenExpireTime());\n-        assertEquals(userTO, newUserTO);\n \n         WorkflowActionsTO workflowActions = restTemplate.getForObject(BASE_URL\n                 + \"user/actions/{userId}\", WorkflowActionsTO.class,\n-                userTO.getId());\n+                newUserTO.getId());\n         assertTrue(workflowActions.getActions().equals(\n                 Collections.singleton(\"activate\")));\n "},{"sha":"e3c497217376d4573e7401616ef1ce21bd956a95","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/530e431fab812ce0adc46162d42f0ec80411c6a7/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=530e431fab812ce0adc46162d42f0ec80411c6a7","patch":"@@ -32,10 +32,10 @@\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n                           \n-    <SyncopeUser id=\"1\" password=\"XXX\"/>\n-    <SyncopeUser id=\"2\" password=\"YYY\"/>\n-    <SyncopeUser id=\"3\" password=\"ZZZ\"/>\n-    <SyncopeUser id=\"4\" password=\"PPP\"/>\n+    <SyncopeUser id=\"1\" password=\"XXX\" workflowEntryId=\"0\"/>\n+    <SyncopeUser id=\"2\" password=\"YYY\" workflowEntryId=\"0\"/>\n+    <SyncopeUser id=\"3\" password=\"ZZZ\" workflowEntryId=\"0\"/>\n+    <SyncopeUser id=\"4\" password=\"PPP\" workflowEntryId=\"0\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n@@ -142,12 +142,9 @@\n     <Resource name=\"ws-target-resource-2\" connector_id=\"100\"/>\n     <Resource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"/>\n     <Resource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"/>\n-    <Resource name=\"ws-target-resource-delete\" connector_id=\"100\"/>\n+    <Resource name=\"ws-target-resource-delete\" connector_id=\"102\"/>\n     <Resource name=\"ws-target-resource-update\" connector_id=\"100\"/>\n \n-    <Resource_SyncopeRole Resource_name=\"ws-target-resource-delete\" roles_id=\"3\" />\n-    <SyncopeRole_Resource SyncopeRole_id=\"3\" resources_name=\"ws-target-resource-delete\" />\n-\n     <Resource_SyncopeUser Resource_name=\"ws-target-resource-delete\" users_id=\"3\" />\n     <SyncopeUser_Resource SyncopeUser_id=\"3\" resources_name=\"ws-target-resource-delete\" />\n "}]}