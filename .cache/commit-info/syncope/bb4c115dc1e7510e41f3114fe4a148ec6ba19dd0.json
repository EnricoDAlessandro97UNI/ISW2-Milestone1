{"sha":"bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJiNGMxMTVkYzFlNzUxMGU0MWYzMTE0ZmU0YTE0OGVjNmJhMTlkZDA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-08-01T16:26:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-08-01T16:26:31Z"},"message":"Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1368106 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8728bfea36e4cafdef1a4137a7482011e1a126b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8728bfea36e4cafdef1a4137a7482011e1a126b6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"02d62e07e558ca921b095f77335534b6000964f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02d62e07e558ca921b095f77335534b6000964f7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/02d62e07e558ca921b095f77335534b6000964f7"}],"stats":{"total":39,"additions":27,"deletions":12},"files":[{"sha":"41131a7784238df2df5fa7d8acf7eef4b1ff59e1","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/TaskExecDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java?ref=bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","patch":"@@ -35,6 +35,8 @@ public interface TaskExecDAO extends DAO {\n \n     TaskExec save(TaskExec execution) throws InvalidEntityException;\n \n+    void saveAndAdd(Long taskId, TaskExec execution) throws InvalidEntityException;\n+\n     void delete(Long id);\n \n     void delete(TaskExec execution);"},{"sha":"05da1c0a66d3209ae2093dfd601743d98986fcca","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/TaskExecDAOImpl.java","status":"modified","additions":19,"deletions":7,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java?ref=bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","patch":"@@ -24,13 +24,19 @@\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.Task;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n public class TaskExecDAOImpl extends AbstractDAOImpl implements TaskExecDAO {\n \n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n     @Override\n     public TaskExec find(final Long id) {\n         return entityManager.find(TaskExec.class, id);\n@@ -73,19 +79,25 @@ public <T extends Task> List<TaskExec> findAll(Class<T> reference) {\n         return query.getResultList();\n     }\n \n+    @Override\n+    public TaskExec save(final TaskExec execution) {\n+        return entityManager.merge(execution);\n+    }\n+\n     /**\n-     * This method has an explicit @Transactional annotation because it is \n-     * called by AbstractJob.\n-     * \n+     * This method has an explicit @Transactional annotation because it is called by AbstractJob.\n+     *\n      * @see org.apache.syncope.core.scheduling.AbstractJob\n-     * \n+     *\n      * @param execution entity to be merged\n      * @return the same entity, updated\n      */\n     @Override\n-    @Transactional(rollbackFor = { Throwable.class })\n-    public TaskExec save(final TaskExec execution) {\n-        return entityManager.merge(execution);\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public void saveAndAdd(Long taskId, TaskExec execution) throws InvalidEntityException {\n+        Task task = taskDAO.find(taskId);\n+        task.addExec(execution);\n+        taskDAO.save(task);\n     }\n \n     @Override"},{"sha":"46db3d9b9ec5cbc50214d15426a423b261fa0a89","filename":"core/src/main/java/org/apache/syncope/core/scheduling/AbstractTaskJob.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java?ref=bb4c115dc1e7510e41f3114fe4a148ec6ba19dd0","patch":"@@ -21,16 +21,16 @@\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.util.Date;\n+import org.apache.syncope.core.persistence.beans.Task;\n+import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.apache.syncope.core.persistence.dao.TaskDAO;\n+import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.quartz.StatefulJob;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.apache.syncope.core.persistence.beans.Task;\n-import org.apache.syncope.core.persistence.beans.TaskExec;\n-import org.apache.syncope.core.persistence.dao.TaskDAO;\n-import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n \n /**\n  * Base job implementation that delegates to concrete implementation the actual job execution and provides some\n@@ -112,8 +112,9 @@ public final void execute(final JobExecutionContext context) throws JobExecution\n             execution.setStatus(Status.FAILURE.name());\n         }\n         execution.setEndDate(new Date());\n+\n         if (hasToBeRegistered(execution)) {\n-            taskExecDAO.save(execution);\n+            taskExecDAO.saveAndAdd(taskId, execution);\n         }\n \n         task = taskDAO.save(task);"}]}