{"sha":"0455468053b71224c276978cb585647f95d71275","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0NTU0NjgwNTNiNzEyMjRjMjc2OTc4Y2I1ODU2NDdmOTVkNzEyNzU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T16:34:51Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T16:34:51Z"},"message":"Now e-mails are actually sent from workflow + (temporary) creation and activation in OpenAM is working\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246350 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8fa834f170298984376a0e52772220da2f501959","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8fa834f170298984376a0e52772220da2f501959"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0455468053b71224c276978cb585647f95d71275","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0455468053b71224c276978cb585647f95d71275","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0455468053b71224c276978cb585647f95d71275","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0455468053b71224c276978cb585647f95d71275/comments","author":null,"committer":null,"parents":[{"sha":"9ba870c5d69b74fad40eac62ec84283563bf5c48","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ba870c5d69b74fad40eac62ec84283563bf5c48","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ba870c5d69b74fad40eac62ec84283563bf5c48"}],"stats":{"total":572,"additions":398,"deletions":174},"files":[{"sha":"263ca716207ceb6097617006c2107f45e72409d1","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -19,6 +19,9 @@ public enum SyncopeClientExceptionType {\n     InvalidDerivedSchemas(\n     \"Syncope.InvalidDerivedSchemas\",\n     \"Syncope.InvalidDerivedSchemas.derivedSchemaName\"),\n+    InvalidPassword(\n+    \"Syncope.InvalidPassword\",\n+    \"Syncope.InvalidPassword.reason\"),\n     InvalidResources(\n     \"Syncope.InvalidResources\",\n     \"Syncope.InvalidResources.resourceName\"),"},{"sha":"86f91943ee142da57f9bcb8e63547a095e3e6057","filename":"core/pom.xml","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -60,6 +60,17 @@\n             <scope>provided</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>javax.servlet.jsp</groupId>\n+            <artifactId>jsp-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>javax.servlet</groupId>\n+            <artifactId>jstl</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.commons</groupId>\n             <artifactId>commons-jexl</artifactId>\n@@ -70,6 +81,11 @@\n             <artifactId>commons-lang</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-email</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>opensymphony</groupId>\n             <artifactId>osworkflow</artifactId>\n@@ -140,6 +156,11 @@\n             <artifactId>jasypt</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>com.forgerock.openam</groupId>\n+            <artifactId>clientsdk</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.dbunit</groupId>\n             <artifactId>dbunit</artifactId>"},{"sha":"8cf69773a0888f4bf13ace7d1451db649f4c11a0","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -84,9 +84,7 @@ public UserTO activate(HttpServletResponse response,\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n-        if (userTO.getToken() != null) {\n-            inputs.put(Constants.TOKEN, userTO.getToken());\n-        }\n+        inputs.put(Constants.TOKEN, userTO.getToken());\n \n         WorkflowDescriptor workflowDescriptor =\n                 userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW);\n@@ -123,7 +121,8 @@ public UserTO activate(HttpServletResponse response,\n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n-    public UserTO create(HttpServletResponse response,\n+    public UserTO create(HttpServletRequest request,\n+            HttpServletResponse response,\n             @RequestBody UserTO userTO) throws IOException {\n \n         if (log.isDebugEnabled()) {\n@@ -196,10 +195,28 @@ public UserTO create(HttpServletResponse response,\n         syncopeUser = syncopeUserDAO.save(syncopeUser);\n         userTO = userDataBinder.getUserTO(syncopeUser);\n \n+        Map<String, Object> inputs = new HashMap<String, Object>();\n+        inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n+        inputs.put(Constants.TOKEN, userTO.getToken());\n+        inputs.put(Constants.MAIL_FROM,\n+                syncopeConfigurationDAO.find(\n+                \"activate.email.from\").getConfValue());\n+        inputs.put(Constants.MAIL_SUBJECT,\n+                syncopeConfigurationDAO.find(\n+                \"activate.email.from\").getConfValue());\n+        StringBuffer baseRequestURL = request.getRequestURL();\n+        inputs.put(Constants.BASE_REQUEST_URL,\n+                baseRequestURL.substring(0,\n+                baseRequestURL.indexOf(\"/user\") - 4).toString());\n+        inputs.put(Constants.MAIL_TEMPLATE_HTML,\n+                syncopeConfigurationDAO.find(\n+                \"activate.email.template.html\").getConfValue());\n+        inputs.put(Constants.MAIL_TEMPLATE_TXT,\n+                syncopeConfigurationDAO.find(\n+                \"activate.email.template.txt\").getConfValue());\n+\n         int[] availableWorkflowActions = userWorkflow.getAvailableActions(\n                 workflowId, null);\n-        Map<String, SyncopeUser> inputs =\n-                Collections.singletonMap(Constants.SYNCOPE_USER, syncopeUser);\n         for (int availableWorkflowAction : availableWorkflowActions) {\n             try {\n                 userWorkflow.doAction(workflowId, availableWorkflowAction,"},{"sha":"ebecb6be93463297e67aca0538971cb9021b5581","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -81,6 +81,8 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         SyncopeClientCompositeErrorException compositeErrorException =\n                 new SyncopeClientCompositeErrorException(\n                 HttpStatus.BAD_REQUEST);\n+        SyncopeClientException invalidPassword = new SyncopeClientException(\n+                SyncopeClientExceptionType.InvalidPassword);\n         SyncopeClientException invalidSchemas = new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidSchemas);\n         SyncopeClientException requiredValuesMissing =\n@@ -102,6 +104,13 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         BeanUtils.copyProperties(userTO, syncopeUser,\n                 (String[]) ArrayUtils.add(ignoreProperties, \"id\"));\n \n+        // 0. password\n+        // TODO: check password policies\n+        if (userTO.getPassword() == null || userTO.getPassword().length() == 0) {\n+            invalidPassword.addElement(\"Null password\");\n+            compositeErrorException.addException(invalidPassword);\n+        }\n+\n         // 1. attributes\n         UserSchema schema = null;\n         UserAttribute attribute = null;"},{"sha":"fefa668ce00264ef9ccc2bcbd60c74621e18c731","filename":"core/src/main/java/org/syncope/core/workflow/BaseSendEmail.java","status":"added","additions":94,"deletions":0,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -0,0 +1,94 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.net.URL;\n+import java.util.Map;\n+import org.apache.commons.mail.Email;\n+import org.apache.commons.mail.EmailException;\n+import org.apache.commons.mail.HtmlEmail;\n+import org.syncope.core.persistence.dao.SyncopeConfigurationDAO;\n+\n+public class BaseSendEmail extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    protected SyncopeConfigurationDAO syncopeConfigurationDAO;\n+\n+    public BaseSendEmail() {\n+        syncopeConfigurationDAO =\n+                (SyncopeConfigurationDAO) context.getBean(\n+                \"syncopeConfigurationDAOImpl\");\n+    }\n+\n+    protected String getEmailBody(String urlPrefix, String template,\n+            String urlSuffix, String fallback) {\n+\n+        String templateURL = urlPrefix + template + urlSuffix;\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Email template URL: \" + templateURL);\n+        }\n+\n+        StringBuilder templateContent = new StringBuilder();\n+        try {\n+            BufferedReader reader = new BufferedReader(\n+                    new InputStreamReader(new URL(templateURL).openStream()));\n+\n+            String data = null;\n+            while ((data = reader.readLine()) != null) {\n+                templateContent.append(data);\n+            }\n+            \n+            reader.close();\n+        } catch (Exception e) {\n+            log.error(\"While reading mail template \" + template, e);\n+        }\n+\n+        return templateContent.length() == 0\n+                ? fallback : templateContent.toString();\n+    }\n+\n+    protected HtmlEmail getHtmlEmail(Map transientVars)\n+            throws EmailException, WorkflowException {\n+\n+        HtmlEmail email = new HtmlEmail();\n+        email.setHostName(\n+                syncopeConfigurationDAO.find(\"smtp.host\").getConfValue());\n+        if (transientVars.get(Constants.MAIL_TO) != null) {\n+            email.addTo((String) transientVars.get(Constants.MAIL_TO));\n+        }\n+        email.setFrom((String) transientVars.get(Constants.MAIL_FROM));\n+        email.setSubject((String) transientVars.get(Constants.MAIL_SUBJECT));\n+\n+        return email;\n+    }\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        Email email = null;\n+        try {\n+            email = getHtmlEmail(transientVars);\n+            email.send();\n+        } catch (EmailException e) {\n+            log.error(\"Could not send e-mail \" + email, e);\n+        }\n+    }\n+}"},{"sha":"bc8d07ca22af6cc5a870dd505d50206ff992b85a","filename":"core/src/main/java/org/syncope/core/workflow/Constants.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -22,4 +22,11 @@ public class Constants {\n     final public static String TOKEN = \"token\";\n     final public static String USER_TO = \"userTO\";\n     final public static String USER_WORKFLOW = \"userWorkflow\";\n+    final public static String BASE_REQUEST_URL = \"baseRequestURL\";\n+    final public static String MAILTEMPLATES_URL = \"mailTemplates/\";\n+    final public static String MAIL_FROM = \"from\";\n+    final public static String MAIL_TO = \"to\";\n+    final public static String MAIL_SUBJECT = \"subject\";\n+    final public static String MAIL_TEMPLATE_HTML = \"templateHtml\";\n+    final public static String MAIL_TEMPLATE_TXT = \"templateTxt\";\n }"},{"sha":"e7f901a2c3b8424547e3dc7c80781bc97fe80d8a","filename":"core/src/main/java/org/syncope/core/workflow/SendEmail.java","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java?ref=9ba870c5d69b74fad40eac62ec84283563bf5c48","patch":"@@ -1,34 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.workflow;\n-\n-import com.opensymphony.module.propertyset.PropertySet;\n-import com.opensymphony.workflow.FunctionProvider;\n-import com.opensymphony.workflow.WorkflowException;\n-import java.util.Map;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n-\n-public class SendEmail extends OSWorkflowComponent implements FunctionProvider {\n-\n-    @Override\n-    public void execute(Map transientVars, Map args, PropertySet ps)\n-            throws WorkflowException {\n-\n-        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n-                Constants.SYNCOPE_USER);\n-\n-        log.info(\"Send an e-mail to \" + syncopeUser);\n-    }\n-}"},{"sha":"fcffea5148f1bf826429cf12e2747465392fcb1c","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMActivate.java","status":"modified","additions":33,"deletions":60,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -14,21 +14,22 @@\n  */\n package org.syncope.core.workflow.prcsiam;\n \n-import java.io.IOException;\n+import com.iplanet.sso.SSOToken;\n+import com.iplanet.sso.SSOTokenManager;\n import org.syncope.core.workflow.OSWorkflowComponent;\n import com.opensymphony.module.propertyset.PropertySet;\n import com.opensymphony.workflow.FunctionProvider;\n import com.opensymphony.workflow.WorkflowException;\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n-import java.net.URI;\n-import java.net.URLEncoder;\n+import com.sun.identity.idm.AMIdentity;\n+import com.sun.identity.idm.AMIdentityRepository;\n+import com.sun.identity.idm.IdSearchControl;\n+import com.sun.identity.idm.IdSearchOpModifier;\n+import com.sun.identity.idm.IdSearchResults;\n+import com.sun.identity.idm.IdType;\n+import com.sun.identity.security.AdminTokenAction;\n+import java.security.AccessController;\n+import java.util.Collections;\n import java.util.Map;\n-import java.util.Properties;\n-import org.springframework.http.HttpMethod;\n-import org.springframework.http.client.ClientHttpRequest;\n-import org.springframework.http.client.ClientHttpResponse;\n-import org.springframework.web.client.RestTemplate;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.workflow.Constants;\n \n@@ -45,62 +46,34 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n-        Properties openAMProps = new Properties();\n-        ClientHttpResponse response = null;\n-        BufferedReader reader = null;\n         try {\n-            openAMProps.load(getClass().getResourceAsStream(\n-                    \"/WEB-INF/classes/openam.properties\"));\n+            SSOToken adminToken = (SSOToken) AccessController.doPrivileged(\n+                    AdminTokenAction.getInstance());\n \n-            RestTemplate restTemplate =\n-                    (RestTemplate) context.getBean(\"restTemplate\");\n+            AMIdentityRepository repo =\n+                    new AMIdentityRepository(adminToken, \"/\");\n \n-            ClientHttpRequest request =\n-                    restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/authenticate?username=\"\n-                    + openAMProps.getProperty(\"username\")\n-                    + \"&password=\"\n-                    + openAMProps.getProperty(\"password\")),\n-                    HttpMethod.GET);\n-            response = request.execute();\n-            reader = new BufferedReader(\n-                    new InputStreamReader(response.getBody(), \"UTF-8\"));\n-            String adminTokenId = reader.readLine();\n-            adminTokenId = adminTokenId.substring(adminTokenId.indexOf('=') + 1);\n-            response.getBody().close();\n-            reader.close();\n+            IdSearchControl controls = new IdSearchControl();\n+            controls.setSearchModifiers(IdSearchOpModifier.OR,\n+                    Collections.singletonMap(\"uid\",\n+                    Collections.singleton(String.valueOf(syncopeUser.getId()))));\n \n-            request = restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/update?identity_name=\"\n-                    + Utils.getUserId(syncopeUser)\n-                    + \"&identity_attribute_names=inetuserstatus\"\n-                    + \"&identity_attribute_values_inetuserstatus=\"\n-                    + \"active\"\n-                    + \"&identity_realm=/&identity_type=user&admin=\"\n-                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n-                    HttpMethod.GET);\n-            request.execute();\n+            IdSearchResults idSearchResults = repo.searchIdentities(\n+                    IdType.USER, \"*\", controls);\n+            if (!idSearchResults.getSearchResults().isEmpty()) {\n+                AMIdentity amUser =\n+                        (AMIdentity) idSearchResults.getSearchResults().iterator().next();\n+                amUser.setAttributes(Collections.singletonMap(\"inetuserstatus\",\n+                        Collections.singleton(\"Active\")));\n+                amUser.store();\n+            } else {\n+                log.info(\"No user found with uid \"\n+                        + String.valueOf(syncopeUser.getId()));\n+            }\n \n-            request = restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/logout?subjectid=\"\n-                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n-                    HttpMethod.GET);\n-            request.execute();\n+            SSOTokenManager.getInstance().destroyToken(adminToken);\n         } catch (Throwable t) {\n-            log.error(\"While trying to create the user on OpenAM\", t);\n-        } finally {\n-            try {\n-                if (reader != null) {\n-                    reader.close();\n-                }\n-                if (response != null) {\n-                    response.getBody().close();\n-                }\n-            } catch (IOException e) {\n-            }\n+            log.error(\"While trying to activate the user on OpenAM\", t);\n         }\n     }\n }"},{"sha":"e9ff53aaa35c1b78788554ec4e467286f70c73b4","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMCreate.java","status":"modified","additions":28,"deletions":66,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -14,21 +14,20 @@\n  */\n package org.syncope.core.workflow.prcsiam;\n \n-import java.io.IOException;\n+import com.iplanet.sso.SSOToken;\n+import com.iplanet.sso.SSOTokenManager;\n import org.syncope.core.workflow.OSWorkflowComponent;\n import com.opensymphony.module.propertyset.PropertySet;\n import com.opensymphony.workflow.FunctionProvider;\n import com.opensymphony.workflow.WorkflowException;\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n-import java.net.URI;\n-import java.net.URLEncoder;\n+import com.sun.identity.idm.AMIdentityRepository;\n+import com.sun.identity.idm.IdType;\n+import com.sun.identity.security.AdminTokenAction;\n+import java.security.AccessController;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.Map;\n-import java.util.Properties;\n-import org.springframework.http.HttpMethod;\n-import org.springframework.http.client.ClientHttpRequest;\n-import org.springframework.http.client.ClientHttpResponse;\n-import org.springframework.web.client.RestTemplate;\n+import java.util.Set;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.workflow.Constants;\n \n@@ -45,69 +44,32 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n-        Properties openAMProps = new Properties();\n-        ClientHttpResponse response = null;\n-        BufferedReader reader = null;\n         try {\n-            openAMProps.load(getClass().getResourceAsStream(\n-                    \"/WEB-INF/classes/openam.properties\"));\n+            SSOToken adminToken = (SSOToken) AccessController.doPrivileged(\n+                    AdminTokenAction.getInstance());\n \n-            RestTemplate restTemplate =\n-                    (RestTemplate) context.getBean(\"restTemplate\");\n+            Map<String, Set<String>> map = new HashMap<String, Set<String>>();\n+            map.put(\"cn\", Collections.singleton(\n+                    String.valueOf(syncopeUser.getId())));\n+            map.put(\"sn\", Collections.singleton(\n+                    String.valueOf(syncopeUser.getId())));\n+            map.put(\"uid\", Collections.singleton(\n+                    String.valueOf(syncopeUser.getId())));\n+            map.put(\"mail\",\n+                    Collections.singleton(Utils.getUserId(syncopeUser)));\n+            map.put(\"userpassword\",\n+                    Collections.singleton(syncopeUser.getPassword()));\n+            map.put(\"inetuserstatus\", Collections.singleton(\"Inactive\"));\n \n-            ClientHttpRequest request =\n-                    restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/authenticate?username=\"\n-                    + openAMProps.getProperty(\"username\")\n-                    + \"&password=\"\n-                    + openAMProps.getProperty(\"password\")),\n-                    HttpMethod.GET);\n-            response = request.execute();\n-            reader = new BufferedReader(\n-                    new InputStreamReader(response.getBody(), \"UTF-8\"));\n-            String adminTokenId = reader.readLine();\n-            adminTokenId = adminTokenId.substring(adminTokenId.indexOf('=') + 1);\n-            response.getBody().close();\n-            reader.close();\n+            AMIdentityRepository repo =\n+                    new AMIdentityRepository(adminToken, \"/\");\n \n-            request = restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/create?identity_name=\"\n-                    + Utils.getUserId(syncopeUser)\n-                    + \"&identity_attribute_names=userpassword\"\n-                    + \"&identity_attribute_values_userpassword=\"\n-                    + syncopeUser.getPassword()\n-                    + \"&identity_attribute_names=sn&identity_attribute_values_sn=\"\n-                    + Utils.getUserId(syncopeUser)\n-                    + \"&identity_attribute_names=cn&identity_attribute_values_cn=\"\n-                    + Utils.getUserId(syncopeUser)\n-                    + \"&identity_attribute_names=inetuserstatus\"\n-                    + \"&identity_attribute_values_inetuserstatus=\"\n-                    + \"inactive\"\n-                    + \"&identity_realm=/&identity_type=user&admin=\"\n-                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n-                    HttpMethod.GET);\n-            request.execute();\n+            repo.createIdentity(IdType.USER,\n+                    String.valueOf(syncopeUser.getId()), map);\n \n-            request = restTemplate.getRequestFactory().createRequest(\n-                    new URI(openAMProps.getProperty(\"baseURL\")\n-                    + \"/identity/logout?subjectid=\"\n-                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n-                    HttpMethod.GET);\n-            request.execute();\n+            SSOTokenManager.getInstance().destroyToken(adminToken);\n         } catch (Throwable t) {\n             log.error(\"While trying to create the user on OpenAM\", t);\n-        } finally {\n-            try {\n-                if (reader != null) {\n-                    reader.close();\n-                }\n-                if (response != null) {\n-                    response.getBody().close();\n-                }\n-            } catch (IOException e) {\n-            }\n         }\n     }\n }"},{"sha":"8b8b375e07a95be1946e3427f0563ff13d60dee3","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/SendEmail.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -0,0 +1,66 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import com.opensymphony.workflow.WorkflowException;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLEncoder;\n+import java.util.Map;\n+import org.apache.commons.mail.EmailException;\n+import org.apache.commons.mail.HtmlEmail;\n+import org.syncope.core.persistence.beans.SyncopeConfiguration;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.*;\n+\n+public class SendEmail extends BaseSendEmail {\n+\n+    @Override\n+    protected HtmlEmail getHtmlEmail(Map transientVars)\n+            throws EmailException, WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        String urlPrefix =\n+                (String) transientVars.get(Constants.BASE_REQUEST_URL)\n+                + Constants.MAILTEMPLATES_URL;\n+        String urlSuffix = \"\";\n+        try {\n+            SyncopeConfiguration conf = syncopeConfigurationDAO.find(\n+                    \"servicelayer.baseurl\");\n+            if (conf != null) {\n+                urlSuffix = \".jsp?confirmationLink=\"\n+                        + conf.getConfValue()\n+                        + \"?token=\" + URLEncoder.encode(\n+                        syncopeUser.getToken(), \"UTF-8\");\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            log.error(\"Unexpected exception\", e);\n+        }\n+\n+        HtmlEmail email = super.getHtmlEmail(transientVars);\n+        email.addTo(Utils.getUserId(syncopeUser));\n+        email.setHtmlMsg(getEmailBody(urlPrefix,\n+                (String) transientVars.get(Constants.MAIL_TEMPLATE_HTML),\n+                urlSuffix,\n+                urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n+        email.setTextMsg(getEmailBody(urlPrefix,\n+                (String) transientVars.get(Constants.MAIL_TEMPLATE_TXT),\n+                urlSuffix,\n+                urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n+\n+        return email;\n+    }\n+}"},{"sha":"4000faa128d410ca71d4c81c9116d4a3651b7ef6","filename":"core/src/main/resources/AMConfig.properties","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -0,0 +1,30 @@\n+com.iplanet.am.session.client.polling.enable=true\n+com.iplanet.am.session.client.polling.period=180\n+com.sun.identity.policy.client.cacheMode=subtree\n+com.sun.identity.agents.logging.level=ALLOW\n+com.sun.identity.agents.server.log.file.name=amRemotePolicyLog\n+com.iplanet.security.SecureRandomFactoryImpl=com.iplanet.am.util.SecureRandomFactoryImpl\n+com.iplanet.security.encryptor=com.iplanet.services.util.JCEEncryption\n+com.iplanet.security.SSLSocketFactoryImpl=netscape.ldap.factory.JSSESocketFactory\n+com.iplanet.security.encryptor=com.iplanet.services.util.JCEEncryption\n+#com.iplanet.am.sdk.package=com.iplanet.am.sdk.remote\n+com.iplanet.amsdk.package=remote\n+com.sun.identity.agents.polling.interval=3\n+com.iplanet.am.serverMode=false\n+com.sun.identity.monitoring=on\n+com.iplanet.services.debug.level=message\n+com.iplanet.am.cookie.name=iPlanetDirectoryPro\n+com.sun.identity.policy.client.resourceComparators=serviceType=iPlanetAMWebAgentService|class=com.sun.identity.policy.plugins.URLResourceName|wildcard=*|delimiter=/|caseSensitive=true\n+com.iplanet.services.debug.directory=/tmp\n+com.iplanet.am.server.protocol=http\n+com.iplanet.am.server.host=localhost\n+com.iplanet.am.server.port=8080\n+com.iplanet.am.services.deploymentDescriptor=openam\n+com.iplanet.am.naming.url=http://localhost:8080/openam/namingservice\n+com.sun.identity.agents.app.username=amadmin\n+com.iplanet.am.service.password=password\n+com.sun.identity.agents.notification.enabled=false\n+com.iplanet.am.notification.url=http://localhost:8080/openam/notificationservice\n+\n+am.encryption.pwd=\n+com.sun.identity.client.encryptionKey="},{"sha":"6d1429fb8b0df3ddcac1061edabcf4d374e81b70","filename":"core/src/main/resources/openam.properties","status":"removed","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties?ref=9ba870c5d69b74fad40eac62ec84283563bf5c48","patch":"@@ -1,4 +0,0 @@\n-# TODO: remove ASAP!\n-baseURL=http://prcsiam.tech.everett.it:8080/openam\n-username=amadmin\n-password=password"},{"sha":"1fe3a345c919b8dc9998be037f821f276ef9cd41","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -15,6 +15,12 @@\n <dataset>\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n+    <SyncopeConfiguration confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n+    <SyncopeConfiguration confKey=\"servicelayer.baseurl\" confValue=\"http://www.google.it/\"/>\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n "},{"sha":"51b17cbb29bd9f8a7d152ed717da801fa63e8d63","filename":"core/src/main/resources/userWorkflow.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -67,7 +67,7 @@\n                     </results>\n                     <post-functions>\n                         <function type=\"class\">\n-                            <arg name=\"class.name\">org.syncope.core.workflow.SendEmail</arg>\n+                            <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n                         </function>\n                         <!-- TMP -->\n                         <function type=\"class\">"},{"sha":"ce1b9e32929364a1577dd610f0113e722ad689d5","filename":"core/src/main/webapp/mailTemplates/registration.html.jsp","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.html.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.html.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.html.jsp?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -0,0 +1,42 @@\n+<%@ page language=\"java\" %>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+    <head>\n+        <style type=\"text/css\">\n+            body {\n+                font: 12.0px Verdana;\n+                color: black; \n+                margin-top: 0px;\n+            }\n+        </style>\n+    </head>\n+    <body>\n+        <div id=\"welcome\">\n+            Welcome to <a href=\"http://syncope.googlecode.com\">Syncope</a>!\n+        </div>\n+\n+        <div id=\"confirmation\">\n+            Please, <a href=\"${param.confirmationLink}\">confirm</a> your registration.\n+        </div>\n+\n+        <div id=\"greetings\">\n+            Best regards.\n+        </div>\n+    </body>\n+</html>"},{"sha":"30864b978f675278e7fdad2de5fc1a91906a099b","filename":"core/src/main/webapp/mailTemplates/registration.txt.jsp","status":"added","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.txt.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.txt.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FmailTemplates%2Fregistration.txt.jsp?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -0,0 +1,5 @@\n+<%@ page language=\"java\" contentType=\"text/plain\" %>\n+Welcome to Syncope!\n+Please, confirm your registration here: ${param.confirmationLink}.\n+\n+Best regards."},{"sha":"60a395fd32766563ed88f3d1b99f5b011f8f90ed","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -48,6 +48,7 @@ public void createWithException() {\n     @Test\n     public void create() {\n         UserTO userTO = new UserTO();\n+        userTO.setPassword(\"password\");\n \n         AttributeTO usernameTO = new AttributeTO();\n         usernameTO.setSchema(\"username\");\n@@ -80,6 +81,7 @@ public void create() {\n         UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n         userTO.setId(newUserTO.getId());\n+        userTO.setPassword(newUserTO.getPassword());\n         userTO.setCreationTime(newUserTO.getCreationTime());\n         userTO.setToken(newUserTO.getToken());\n         userTO.setTokenExpireTime(newUserTO.getTokenExpireTime());\n@@ -94,6 +96,7 @@ public void create() {\n \n         // 3. try (and fail) to create another user with the same surname (unique)\n         userTO = new UserTO();\n+        userTO.setPassword(\"password\");\n \n         usernameTO = new AttributeTO();\n         usernameTO.setSchema(\"username\");"},{"sha":"4ed50afdbbeda4c84b1795656e439e73c6f96ec3","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -15,7 +15,11 @@\n <dataset>\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n-\n+    <SyncopeConfiguration confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n+    <SyncopeConfiguration confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n                           "},{"sha":"af6ad3dff47680e965428ba92469bbb44f70763d","filename":"pom.xml","status":"modified","additions":22,"deletions":2,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0455468053b71224c276978cb585647f95d71275/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0455468053b71224c276978cb585647f95d71275/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0455468053b71224c276978cb585647f95d71275","patch":"@@ -97,9 +97,12 @@\n     <properties>\n \n         <servlet-api.version>2.5</servlet-api.version>\n+        <jsp-api.version>2.1</jsp-api.version>\n+        <jstl.version>1.2</jstl.version>\n \n         <commons-jexl.version>2.0.1</commons-jexl.version>\n         <commons-lang.version>2.5</commons-lang.version>\n+        <commons-email.version>1.2</commons-email.version>\n \n         <openam.version>snapshot9</openam.version>\n \n@@ -129,8 +132,6 @@\n \n         <jetty.version>6.1.24</jetty.version>\n \n-        <commons-digester.version>2.0</commons-digester.version>\n-\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \n         <org.apache.cxf.version>2.2.9</org.apache.cxf.version>\n@@ -148,6 +149,19 @@\n                 <scope>provided</scope>\n             </dependency>\n \n+            <dependency>\n+                <groupId>javax.servlet.jsp</groupId>\n+                <artifactId>jsp-api</artifactId>\n+                <version>${jsp-api.version}</version>\n+                <scope>provided</scope>\n+            </dependency>\n+\n+            <dependency>\n+                <groupId>javax.servlet</groupId>\n+                <artifactId>jstl</artifactId>\n+                <version>${jstl.version}</version>\n+            </dependency>\n+\n             <dependency>\n                 <groupId>org.apache.commons</groupId>\n                 <artifactId>commons-jexl</artifactId>\n@@ -160,6 +174,12 @@\n                 <version>${commons-lang.version}</version>\n             </dependency>\n \n+            <dependency>\n+                <groupId>org.apache.commons</groupId>\n+                <artifactId>commons-email</artifactId>\n+                <version>${commons-email.version}</version>\n+            </dependency>\n+\n             <dependency>\n                 <groupId>com.forgerock.openam</groupId>\n                 <artifactId>clientsdk</artifactId>"}]}