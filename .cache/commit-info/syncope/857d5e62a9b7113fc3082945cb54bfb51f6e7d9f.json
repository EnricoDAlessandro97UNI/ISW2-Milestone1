{"sha":"857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1N2Q1ZTYyYTliNzExM2ZjMzA4Mjk0NWNiNTRiZmI1MWY2ZTdkOWY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-15T16:38:51Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-15T16:38:51Z"},"message":"[SYNCOPE-156] providing user, group and any object search panel","tree":{"sha":"fb0ca2ef2604cb379f88442673be4628580be62f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fb0ca2ef2604cb379f88442673be4628580be62f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8cee98bc2e6c548558ae71723a714222f0511a31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cee98bc2e6c548558ae71723a714222f0511a31","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8cee98bc2e6c548558ae71723a714222f0511a31"}],"stats":{"total":512,"additions":387,"deletions":125},"files":[{"sha":"394635792bc2b19ae5be89799fa17464ca84acdd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"added","additions":239,"deletions":0,"changes":239,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -0,0 +1,239 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.panels.search.AbstractSearchPanel;\n+import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n+import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n+\n+public class AnyPanel extends Panel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnyPanel.class);\n+\n+    private final AnyTypeTO anyTypeTO;\n+\n+    private final RealmTO realmTO;\n+\n+    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n+\n+    private final PageReference pageRef;\n+\n+    private AbstractSearchPanel searchPanel;\n+\n+    private final Panel searchResultPanel;\n+\n+    @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n+    public AnyPanel(\n+            final String id, final AnyTypeTO anyTypeTO, final RealmTO realmTO, final PageReference pageRef) {\n+        super(id);\n+        this.anyTypeTO = anyTypeTO;\n+        this.realmTO = realmTO;\n+        this.pageRef = pageRef;\n+\n+        // ------------------------\n+        // Accordion\n+        // ------------------------\n+        final Model<Integer> model = Model.of(-1);\n+        final StringResourceModel res = new StringResourceModel(\"search.result\", this, new Model<>(anyTypeTO));\n+\n+        final Accordion accordion = new Accordion(\"accordionPanel\",\n+                Collections.<ITab>singletonList(new AbstractTab(res) {\n+\n+                    private static final long serialVersionUID = 1037272333056449377L;\n+\n+                    @Override\n+                    public WebMarkupContainer getPanel(final String panelId) {\n+                        searchPanel = getSearchPanel(panelId);\n+                        return searchPanel;\n+                    }\n+\n+                }), model) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected Component newTitle(final String markupId, final ITab tab, final Accordion.State state) {\n+                return new AjaxLink<Integer>(markupId) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        super.onComponentTag(tag);\n+                        tag.put(\"style\", \"color: #337ab7 !important\");\n+                    }\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        model.setObject(model.getObject() == 0 ? -1 : 0);\n+                    }\n+                }.setBody(res);\n+            }\n+        };\n+        accordion.setOutputMarkupId(true);\n+        add(accordion);\n+\n+        searchResultPanel = getSearchResultPanel(\"searchResult\");\n+        add(searchResultPanel);\n+        // ------------------------\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n+            final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n+\n+            switch (anyTypeTO.getKind()) {\n+                case USER:\n+                    UserSearchResultPanel.class.cast(AnyPanel.this.searchResultPanel).search(SearchUtils.buildFIQL(\n+                            AnyPanel.this.searchPanel.getModel().getObject(),\n+                            SyncopeClient.getUserSearchConditionBuilder()), target);\n+                    break;\n+                case GROUP:\n+                    GroupSearchResultPanel.class.cast(AnyPanel.this.searchResultPanel).search(SearchUtils.buildFIQL(\n+                            AnyPanel.this.searchPanel.getModel().getObject(),\n+                            SyncopeClient.getGroupSearchConditionBuilder()), target);\n+                    break;\n+                case ANY_OBJECT:\n+                    AnyObjectSearchResultPanel.class.cast(AnyPanel.this.searchResultPanel).search(SearchUtils.buildFIQL(\n+                            AnyPanel.this.searchPanel.getModel().getObject(),\n+                            SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey())), target);\n+                    break;\n+                default:\n+            }\n+            target.add(searchResultPanel);\n+        } else {\n+            super.onEvent(event);\n+        }\n+    }\n+\n+    private AbstractSearchPanel getSearchPanel(final String id) {\n+        final AbstractSearchPanel panel;\n+        switch (anyTypeTO.getKind()) {\n+            case USER:\n+                panel = UserSearchPanel.class.cast(new UserSearchPanel.Builder(\n+                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id));\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n+                break;\n+            case GROUP:\n+                panel = new GroupSearchPanel.Builder(\n+                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n+                // list of group is available to all authenticated users\n+                break;\n+            case ANY_OBJECT:\n+                panel = new AnyObjectSearchPanel.Builder(anyTypeTO.getKey(),\n+                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n+                        String.format(\"%s_%s\", anyTypeTO.getKey(), AnyEntitlement.LIST));\n+                break;\n+            default:\n+                panel = null;\n+        }\n+        return panel;\n+    }\n+\n+    private Panel getSearchResultPanel(final String id) {\n+        final Panel panel;\n+        final String fiql;\n+        switch (anyTypeTO.getKind()) {\n+            case USER:\n+                fiql = SyncopeClient.getUserSearchConditionBuilder().is(\"key\").greaterThan(0).query();\n+                final UserTO userTO = new UserTO();\n+                userTO.setRealm(realmTO.getFullPath());\n+                panel = new UserSearchResultPanel.Builder(\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                        anyTypeTO.getKey(),\n+                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        setFiql(fiql).addNewItemPanelBuilder(new UserWizardBuilder(\n+                        BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n+                break;\n+            case GROUP:\n+                fiql = SyncopeClient.getGroupSearchConditionBuilder().is(\"key\").greaterThan(0).query();\n+                final GroupTO groupTO = new GroupTO();\n+                groupTO.setRealm(realmTO.getFullPath());\n+                panel = new GroupSearchResultPanel.Builder(\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                        anyTypeTO.getKey(),\n+                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        setFiql(fiql).addNewItemPanelBuilder(new GroupWizardBuilder(\n+                        BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                // list of group is available to all authenticated users\n+                break;\n+            case ANY_OBJECT:\n+                fiql = SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).is(\"key\").greaterThan(0).\n+                        query();\n+                final AnyObjectTO anyObjectTO = new AnyObjectTO();\n+                anyObjectTO.setRealm(realmTO.getFullPath());\n+                anyObjectTO.setType(anyTypeTO.getKey());\n+                panel = new AnyObjectSearchResultPanel.Builder(\n+                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                        anyTypeTO.getKey(),\n+                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        setFiql(fiql).addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n+                        BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n+                        String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));\n+                break;\n+            default:\n+                panel = new LabelPanel(id, null);\n+        }\n+        return panel;\n+    }\n+\n+}"},{"sha":"201e15b740d5c68991764ef4d283bf4ef0731690","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":62,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -18,31 +18,19 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import com.googlecode.wicket.jquery.core.panel.LabelPanel;\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n-import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.slf4j.Logger;\n@@ -60,16 +48,11 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n-    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n-\n-    private final PageReference pageRef;\n-\n     @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n     public Realm(final String id, final RealmTO realmTO, final PageReference pageRef) {\n         super(id);\n         this.realmTO = realmTO;\n         this.anyTypeTOs = anyTypeRestClient.list();\n-        this.pageRef = pageRef;\n \n         add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n     }\n@@ -133,57 +116,13 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return getAnyPanel(panelId, pageRef, anyTypeTO);\n+                    return new AnyPanel(panelId, anyTypeTO, realmTO, pageRef);\n                 }\n             });\n         }\n         return tabs;\n     }\n \n-    private Panel getAnyPanel(final String id, final PageReference pageRef, final AnyTypeTO anyTypeTO) {\n-        final Panel panel;\n-        switch (anyTypeTO.getKind()) {\n-            case USER:\n-                final UserTO userTO = new UserTO();\n-                userTO.setRealm(realmTO.getFullPath());\n-                panel = new UserSearchResultPanel.Builder(\n-                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).\n-                        addNewItemPanelBuilder(new UserWizardBuilder(\n-                                BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n-                break;\n-            case GROUP:\n-                final GroupTO groupTO = new GroupTO();\n-                groupTO.setRealm(realmTO.getFullPath());\n-                panel = new GroupSearchResultPanel.Builder(\n-                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).\n-                        addNewItemPanelBuilder(new GroupWizardBuilder(\n-                                BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n-                // list of group is available to all authenticated users\n-                break;\n-            case ANY_OBJECT:\n-                final AnyObjectTO anyObjectTO = new AnyObjectTO();\n-                anyObjectTO.setRealm(realmTO.getFullPath());\n-                anyObjectTO.setType(anyTypeTO.getKey());\n-                panel = new AnyObjectSearchResultPanel.Builder(\n-                        anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).\n-                        addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n-                                BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n-                        String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));\n-                break;\n-            default:\n-                panel = new LabelPanel(id, null);\n-        }\n-        return panel;\n-    }\n-\n     protected abstract void onClickCreate(final AjaxRequestTarget target);\n \n     protected abstract void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO);"},{"sha":"9890841b516a2dda9590b590b2dabd662f0572e2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -53,8 +53,8 @@ public int count(final String realm, final String type) {\n     }\n \n     @Override\n-    public List<AnyObjectTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n-            final String type) {\n+    public List<AnyObjectTO> list(\n+            final String realm, final int page, final int size, final SortParam<String> sort, final String type) {\n \n         return list(type, realm).getResult();\n     }"},{"sha":"3445d0405b1d3b55e4bb667029c15ae7143d0350","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyPanel.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.html?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"accordionPanel\"></div>\n+      <div wicket:id=\"searchResult\"></div>\n+    </wicket:panel>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"aaee2331aff6631478578de6a9cb283b95247ecb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyPanel.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.properties?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+search.result=Filtered search for ${key}"},{"sha":"19ecff30bd9883d185cb8877fd053e6dac8d4084","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyPanel_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_it.properties?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+search.result=Ricerca filtrata per ${key}"},{"sha":"aaee2331aff6631478578de6a9cb283b95247ecb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyPanel_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel_pt_BR.properties?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+search.result=Filtered search for ${key}"},{"sha":"b1936728d6269b8e758817053d4b965c0684a45e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":48,"deletions":44,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -33,6 +33,10 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class BulkActionITCase extends AbstractConsoleITCase {\n \n+    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+\n+    private final String searchResultContainer = tabPanel + \"container:content:\";\n+\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n@@ -43,23 +47,23 @@ public void usersBulkAction() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n-                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:body:tabbedPanel:panel:container:\"\n-                + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n+        final FormTester formTester = wicketTester.newFormTester(searchResultContainer\n+                + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 1);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:container:content:searchContainer:\"\n-                + \"resultTable:tablePanel:bulkActionLink\", Constants.ON_CLICK);\n+        wicketTester.executeAjaxEvent(searchResultContainer + \"searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:container:content:searchContainer:resultTable\"\n-                + \":bulkModal:form:content:content:container\", WebMarkupContainer.class);\n+        wicketTester.assertComponent(searchResultContainer\n+                + \"searchContainer:resultTable:bulkModal:form:content:content:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content:\"\n+        assertNotNull(findComponentByProp(\"username\", searchResultContainer\n                 + \"searchContainer:resultTable:bulkModal:form:content:content:container:selectedObjects\", \"rossini\"));\n     }\n \n@@ -68,38 +72,38 @@ public void userResourceBulkAction() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath()\n                 + \":cells:5:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n         final FormTester formTester = wicketTester.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 1);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"alternativeDefaultModal:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-csv\"));\n     }\n \n@@ -110,70 +114,70 @@ public void userStatusBulkAction() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         FormTester formTester = wicketTester.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertLabel(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertLabel(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n         // re-activate\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+        component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         formTester = wicketTester.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertLabel(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertLabel(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n     }\n \n@@ -182,38 +186,38 @@ public void groupResourceBulkAction() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", \"body:content:body:tabbedPanel:panel:container:content\"\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath()\n                 + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         final FormTester formTester = wicketTester.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 1);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"alternativeDefaultModal:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"ws-target-resource-1\"));\n     }\n \n@@ -222,38 +226,38 @@ public void printerResourceBulkAction() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", \"body:content:body:tabbedPanel:panel:container:content\"\n+        Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath()\n                 + \":cells:3:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         final FormTester formTester = wicketTester.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                tabPanel + \"alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 1);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.executeAjaxEvent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+        wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"alternativeDefaultModal:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"ws-target-resource-1\"));\n     }\n "},{"sha":"8ddaaad09a09b9b9408051ea3c7f3a5c08c1dab5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":19,"deletions":17,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857d5e62a9b7113fc3082945cb54bfb51f6e7d9f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=857d5e62a9b7113fc3082945cb54bfb51f6e7d9f","patch":"@@ -28,44 +28,46 @@\n \n @FixMethodOrder(MethodSorters.JVM)\n public class DisplayAttributesITCase extends AbstractConsoleITCase {\n-    \n+\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n         wicketTester.clickLink(\"body:realmsLI:realms\");\n         wicketTester.assertRenderedPage(Realms.class);\n     }\n-    \n+\n     @Test\n     public void read() {\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:\"\n-                + \"container:content:searchContainer:resultTable:\"\n+                + \"searchResult:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:3:header:label:panelChangeView:changeViewLink\");\n-        \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:displayAttributeModal\", Modal.class);\n+\n+        wicketTester.assertComponent(\n+                \"body:content:body:tabbedPanel:panel:searchResult:displayAttributeModal\", Modal.class);\n     }\n-    \n+\n     @Test\n     public void set() {\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n         wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:\"\n-                + \"container:content:searchContainer:resultTable:\"\n+                + \"searchResult:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:3:header:label:panelChangeView:changeViewLink\");\n-        \n-        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:displayAttributeModal\", Modal.class);\n-        \n-        final FormTester formTester =\n-                wicketTester.newFormTester(\"body:content:body:tabbedPanel:panel:displayAttributeModal:form\");\n-        \n+\n+        wicketTester.assertComponent(\n+                \"body:content:body:tabbedPanel:panel:searchResult:displayAttributeModal\", Modal.class);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:searchResult:displayAttributeModal:form\");\n+\n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n-        \n-        wicketTester.\n-                clickLink(\"body:content:body:tabbedPanel:panel:displayAttributeModal:dialog:footer:inputs:0:submit\");\n+\n+        wicketTester.clickLink(\n+                \"body:content:body:tabbedPanel:panel:searchResult:displayAttributeModal:dialog:footer:inputs:0:submit\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        \n+\n         wicketTester.clearFeedbackMessages();\n     }\n }"}]}