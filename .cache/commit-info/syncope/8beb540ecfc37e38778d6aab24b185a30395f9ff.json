{"sha":"8beb540ecfc37e38778d6aab24b185a30395f9ff","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiZWI1NDBlY2ZjMzdlMzg3NzhkNmFhYjI0YjE4NWEzMDM5NWY5ZmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-04T14:43:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-04T14:43:48Z"},"message":"[SYNCOPE-454] Passing an empty password change request does imply not send any password out during propagation\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1547809 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"03d9b873fec8b9755e47692bce82f7885ab39163","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/03d9b873fec8b9755e47692bce82f7885ab39163"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8beb540ecfc37e38778d6aab24b185a30395f9ff","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8beb540ecfc37e38778d6aab24b185a30395f9ff","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8beb540ecfc37e38778d6aab24b185a30395f9ff","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8beb540ecfc37e38778d6aab24b185a30395f9ff/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f2648c51c3f6168095fb67007618e8eff59f38c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2648c51c3f6168095fb67007618e8eff59f38c7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f2648c51c3f6168095fb67007618e8eff59f38c7"}],"stats":{"total":370,"additions":220,"deletions":150},"files":[{"sha":"4b83695b067cb33ea3d569c8ff91b7d9e400c085","filename":"console/pom.xml","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -193,12 +193,13 @@ under the License.\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n-                <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\" />\n-                <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\" />\n+                <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\"/>\n+                <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\n                 <copy todir=\"${cargo.run.dir}/WEB-INF/classes\" includeEmptyDirs=\"false\">\n                   <fileset dir=\"${project.build.directory}/test-classes\">\n-                    <exclude name=\"**/*.class\" />\n-                    <exclude name=\"restClientContext.xml\" />\n+                    <exclude name=\"**/*.class\"/>\n+                    <exclude name=\"restClientContext.xml\"/>\n+                    <exclude name=\"rest.properties\"/>\n                   </fileset>\n                 </copy>\n               </target>\n@@ -212,7 +213,7 @@ under the License.\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n-                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\" />\n+                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\"/>\n               </target>\n             </configuration>\n             <goals>\n@@ -381,7 +382,7 @@ under the License.\n     <profile>\n       <id>skipTests</id>\n       <properties>\n-        <javaagent />\n+        <javaagent/>\n       </properties>\n       \n       <build>\n@@ -538,7 +539,7 @@ under the License.\n       <id>selenium</id>\n       \n       <properties>\n-        <javaagent />\n+        <javaagent/>\n       </properties>\n       \n       <build>"},{"sha":"d54e4b29b8ae39539012756346f7d9ffaede3347","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -74,6 +74,7 @@ public EditUserModalPage(final PageReference pageRef, final ModalWindow window,\n         }\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     @Override\n     protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         final UserTO updatedUserTO = (UserTO) form.getModelObject();\n@@ -94,6 +95,7 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         }\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     @Override\n     protected void closeAction(final AjaxRequestTarget target, final Form form) {\n         setResponsePage(new ResultStatusModalPage.Builder(window, userTO).mode(mode).build());"},{"sha":"f0e0647be40b2346477b56ca53d56c7bdeb893e6","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":54,"deletions":51,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -105,7 +105,7 @@ public Reports(final PageParameters parameters) {\n         setupAudit();\n     }\n \n-    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private void setupReport() {\n         reportContainer = new WebMarkupContainer(\"reportContainer\");\n         setWindowClosedCallback(window, reportContainer);\n@@ -272,6 +272,7 @@ public Page createPage() {\n         add(createLink);\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     private void setupAudit() {\n         auditContainer = new WebMarkupContainer(\"auditContainer\");\n         auditContainer.setOutputMarkupId(true);\n@@ -300,77 +301,79 @@ private void setupAudit() {\n         form.add(new LoggerCategoryPanel(\n                 \"events\", loggerRestClient.listEvents(), model, getPageReference(), \"Reports\") {\n \n-            private static final long serialVersionUID = 6113164334533550277L;\n+                    private static final long serialVersionUID = 6113164334533550277L;\n \n-            @Override\n-            protected String[] getListRoles() {\n-                return new String[] {\n-                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"list\")\n-                };\n-            }\n+                    @Override\n+                    protected String[] getListRoles() {\n+                        return new String[] {\n+                            xmlRolesReader.getAllAllowedRoles(\"Audit\", \"list\")\n+                        };\n+                    }\n \n-            @Override\n-            protected String[] getChangeRoles() {\n-                return new String[] {\n-                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"),\n-                    xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\")\n-                };\n-            }\n+                    @Override\n+                    protected String[] getChangeRoles() {\n+                        return new String[] {\n+                            xmlRolesReader.getAllAllowedRoles(\"Audit\", \"enable\"),\n+                            xmlRolesReader.getAllAllowedRoles(\"Audit\", \"disable\")\n+                        };\n+                    }\n \n-            @Override\n-            public void onEventAction(final IEvent<?> event) {\n-                if (event.getPayload() instanceof SelectedEventsPanel.EventSelectionChanged) {\n+                    @Override\n+                    public void onEventAction(final IEvent<?> event) {\n+                        if (event.getPayload() instanceof SelectedEventsPanel.EventSelectionChanged) {\n \n-                    final SelectedEventsPanel.EventSelectionChanged eventSelectionChanged =\n+                            final SelectedEventsPanel.EventSelectionChanged eventSelectionChanged =\n                             (SelectedEventsPanel.EventSelectionChanged) event.getPayload();\n \n-                    for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n-                        if (events.contains(toBeRemoved)) {\n-                            final Map.Entry<EventCategoryTO, Result> eventCategory =\n+                            for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n+                                if (events.contains(toBeRemoved)) {\n+                                    final Map.Entry<EventCategoryTO, Result> eventCategory =\n                                     LoggerEventUtils.parseEventCategory(toBeRemoved);\n \n-                            final AuditLoggerName auditLoggerName = new AuditLoggerName(\n-                                    eventCategory.getKey().getType(),\n-                                    eventCategory.getKey().getCategory(),\n-                                    eventCategory.getKey().getSubcategory(),\n-                                    CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n-                                    ? null : eventCategory.getKey().getEvents().iterator().next(),\n-                                    eventCategory.getValue());\n-\n-                            loggerRestClient.disableAudit(auditLoggerName);\n-                            events.remove(toBeRemoved);\n-                        }\n-                    }\n+                                    final AuditLoggerName auditLoggerName = new AuditLoggerName(\n+                                            eventCategory.getKey().getType(),\n+                                            eventCategory.getKey().getCategory(),\n+                                            eventCategory.getKey().getSubcategory(),\n+                                            CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n+                                            ? null : eventCategory.getKey().getEvents().iterator().next(),\n+                                            eventCategory.getValue());\n+\n+                                    loggerRestClient.disableAudit(auditLoggerName);\n+                                    events.remove(toBeRemoved);\n+                                }\n+                            }\n \n-                    for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n-                        if (!events.contains(toBeAdded)) {\n-                            final Map.Entry<EventCategoryTO, Result> eventCategory =\n+                            for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n+                                if (!events.contains(toBeAdded)) {\n+                                    final Map.Entry<EventCategoryTO, Result> eventCategory =\n                                     LoggerEventUtils.parseEventCategory(toBeAdded);\n \n-                            final AuditLoggerName auditLoggerName = new AuditLoggerName(\n-                                    eventCategory.getKey().getType(),\n-                                    eventCategory.getKey().getCategory(),\n-                                    eventCategory.getKey().getSubcategory(),\n-                                    CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n-                                    ? null : eventCategory.getKey().getEvents().iterator().next(),\n-                                    eventCategory.getValue());\n-\n-                            loggerRestClient.enableAudit(auditLoggerName);\n-                            events.add(toBeAdded);\n+                                    final AuditLoggerName auditLoggerName = new AuditLoggerName(\n+                                            eventCategory.getKey().getType(),\n+                                            eventCategory.getKey().getCategory(),\n+                                            eventCategory.getKey().getSubcategory(),\n+                                            CollectionUtils.isEmpty(eventCategory.getKey().getEvents())\n+                                            ? null : eventCategory.getKey().getEvents().iterator().next(),\n+                                            eventCategory.getValue());\n+\n+                                    loggerRestClient.enableAudit(auditLoggerName);\n+                                    events.add(toBeAdded);\n+                                }\n+                            }\n                         }\n                     }\n-                }\n-            }\n-        });\n+                });\n     }\n \n     private class ReportProvider extends SortableDataProvider<ReportTO, String> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n-        private SortableDataProviderComparator<ReportTO> comparator;\n+        private final SortableDataProviderComparator<ReportTO> comparator;\n \n         public ReportProvider() {\n+            super();\n+\n             //Default sorting\n             setSort(\"id\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<ReportTO>(this);"},{"sha":"096361ad4a1d764ae944737a5f1f36e04a4941a9","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -266,12 +266,11 @@ private Image newImage(final String imageStatus) {\n     }\n \n     public PropagationRequestTO getPropagationRequestTO() {\n-        PropagationRequestTO result = null;\n+        PropagationRequestTO result = new PropagationRequestTO();\n \n         Collection<StatusBean> statusBeans = checkGroup.getModel().getObject();\n         if (statusBeans != null && !statusBeans.isEmpty()) {\n             result = StatusUtils.buildPropagationRequestTO(statusBeans);\n-\n         }\n \n         return result;"},{"sha":"3b4d80ea19d098355f906970e2044e83990e9c02","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":30,"deletions":17,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -58,6 +58,7 @@\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -66,7 +67,7 @@\n /**\n  * Manage the data propagation to external resources.\n  */\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class PropagationManager {\n \n     /**\n@@ -196,7 +197,7 @@ protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attr\n             propByRes.get(ResourceOperation.CREATE).removeAll(noPropResourceNames);\n         }\n \n-        return createTasks(attributable, password, null, null, enable, false, propByRes);\n+        return createTasks(attributable, password, true, null, null, enable, false, propByRes);\n     }\n \n     /**\n@@ -215,6 +216,7 @@ public List<PropagationTask> getUserUpdateTaskIds(final SyncopeUser user, final\n         return getUpdateTaskIds(\n                 user, // SyncopeUser to be updated on external resources\n                 null, // no password\n+                false,\n                 enable, // status to be propagated\n                 Collections.<String>emptySet(), // no virtual attributes to be managed\n                 Collections.<AttributeMod>emptySet(), // no virtual attributes to be managed\n@@ -234,7 +236,7 @@ public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry\n             throws NotFoundException, UnauthorizedRoleException {\n \n         return getUserUpdateTaskIds(\n-                wfResult, null, Collections.<String>emptySet(), Collections.<AttributeMod>emptySet(), null);\n+                wfResult, null, false, Collections.<String>emptySet(), Collections.<AttributeMod>emptySet(), null);\n     }\n \n     /**\n@@ -252,14 +254,15 @@ public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry\n             final String password, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        return getUserUpdateTaskIds(wfResult, password, vAttrsToBeRemoved, vAttrsToBeUpdated, null);\n+        return getUserUpdateTaskIds(wfResult, password, true, vAttrsToBeRemoved, vAttrsToBeUpdated, null);\n     }\n \n     /**\n      * Performs update on each resource associated to the user.\n      *\n      * @param wfResult user to be propagated (and info associated), as per result from workflow\n      * @param password to be updated\n+     * @param changePwd whether password should be included for propagation attributes or not\n      * @param vAttrsToBeRemoved virtual attributes to be removed\n      * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param noPropResourceNames external resources not to be considered for propagation\n@@ -268,12 +271,13 @@ public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry\n      * @throws UnauthorizedRoleException if caller doesn't own enough entitlements to administer the given user\n      */\n     public List<PropagationTask> getUserUpdateTaskIds(final WorkflowResult<Map.Entry<Long, Boolean>> wfResult,\n-            final String password, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n+            final String password, final boolean changePwd,\n+            final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n             final Set<String> noPropResourceNames)\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(wfResult.getResult().getKey());\n-        return getUpdateTaskIds(user, password, wfResult.getResult().getValue(),\n+        return getUpdateTaskIds(user, password, changePwd, wfResult.getResult().getValue(),\n                 vAttrsToBeRemoved, vAttrsToBeUpdated, wfResult.getPropByRes(), noPropResourceNames);\n     }\n \n@@ -311,12 +315,12 @@ public List<PropagationTask> getRoleUpdateTaskIds(final WorkflowResult<Long> wfR\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeRole role = roleDataBinder.getRoleFromId(wfResult.getResult());\n-        return getUpdateTaskIds(role, null, null,\n+        return getUpdateTaskIds(role, null, false, null,\n                 vAttrsToBeRemoved, vAttrsToBeUpdated, wfResult.getPropByRes(), noPropResourceNames);\n     }\n \n     protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attributable,\n-            final String password, final Boolean enable,\n+            final String password, final boolean changePwd, final Boolean enable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n             final PropagationByResource propByRes, final Set<String> noPropResourceNames)\n             throws NotFoundException {\n@@ -348,7 +352,7 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n             }\n         }\n \n-        return createTasks(attributable, password,\n+        return createTasks(attributable, password, changePwd,\n                 vAttrsToBeRemoved, vAttrsToBeUpdatedMap, enable, false, localPropByRes);\n     }\n \n@@ -396,7 +400,7 @@ public List<PropagationTask> getUserDeleteTaskIds(final Long userId, final Strin\n      */\n     public List<PropagationTask> getUserDeleteTaskIds(final WorkflowResult<Long> wfResult) {\n         SyncopeUser user = userDataBinder.getUserFromId(wfResult.getResult());\n-        return createTasks(user, null, null, null, false, true, wfResult.getPropByRes());\n+        return createTasks(user, null, false, null, null, false, true, wfResult.getPropByRes());\n     }\n \n     /**\n@@ -441,7 +445,7 @@ protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attr\n         if (noPropResourceName != null) {\n             propByRes.get(ResourceOperation.DELETE).remove(noPropResourceName);\n         }\n-        return createTasks(attributable, null, null, null, false, true, propByRes);\n+        return createTasks(attributable, null, false, null, null, false, true, propByRes);\n     }\n \n     /**\n@@ -451,14 +455,15 @@ protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attr\n      * @param attrUtil user / role\n      * @param subject given user / role\n      * @param password clear-text password\n+     * @param changePwd whether password should be included for propagation attributes or not\n      * @param vAttrsToBeRemoved virtual attributes to be removed\n      * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param enable whether user must be enabled or not\n      * @param resource target resource\n      * @return account link + prepared attributes\n      */\n     protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> prepareAttributes(\n-            final AttributableUtil attrUtil, final T subject, final String password,\n+            final AttributableUtil attrUtil, final T subject, final String password, final boolean changePwd,\n             final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated,\n             final Boolean enable, final ExternalResource resource) {\n \n@@ -483,11 +488,11 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n                 Map.Entry<String, Attribute> preparedAttribute = MappingUtil.prepareAttribute(\n                         resource, mapping, subject, password, passwordGenerator, vAttrsToBeRemoved, vAttrsToBeUpdated);\n \n-                if (preparedAttribute.getKey() != null) {\n+                if (preparedAttribute != null && preparedAttribute.getKey() != null) {\n                     accountId = preparedAttribute.getKey();\n                 }\n \n-                if (preparedAttribute.getValue() != null) {\n+                if (preparedAttribute != null && preparedAttribute.getValue() != null) {\n                     Attribute alreadyAdded = AttributeUtil.find(preparedAttribute.getValue().getName(), attributes);\n                     if (alreadyAdded == null) {\n                         attributes.add(preparedAttribute.getValue());\n@@ -510,6 +515,12 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n         if (enable != null) {\n             attributes.add(AttributeBuilder.buildEnabled(enable));\n         }\n+        if (!changePwd) {\n+            Attribute pwdAttr = AttributeUtil.find(OperationalAttributes.PASSWORD_NAME, attributes);\n+            if (pwdAttr != null) {\n+                attributes.remove(pwdAttr);\n+            }\n+        }\n \n         return new SimpleEntry<String, Set<Attribute>>(accountId, attributes);\n     }\n@@ -520,14 +531,16 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n      * @param <T> user / role\n      * @param subject user / role to be provisioned\n      * @param password cleartext password to be provisioned\n+     * @param changePwd whether password should be included for propagation attributes or not\n      * @param vAttrsToBeRemoved virtual attributes to be removed\n      * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param enable whether user must be enabled or not\n      * @param deleteOnResource whether user / role must be deleted anyway from external resource or not\n      * @param propByRes operation to be performed per resource\n      * @return list of propagation tasks created\n      */\n-    protected <T extends AbstractAttributable> List<PropagationTask> createTasks(final T subject, final String password,\n+    protected <T extends AbstractAttributable> List<PropagationTask> createTasks(final T subject,\n+            final String password, final boolean changePwd,\n             final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated,\n             final Boolean enable, final boolean deleteOnResource,\n             final PropagationByResource propByRes) {\n@@ -579,8 +592,8 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n                     task.setPropagationMode(resource.getPropagationMode());\n                     task.setOldAccountId(propByRes.getOldAccountId(resource.getName()));\n \n-                    Map.Entry<String, Set<Attribute>> preparedAttrs = prepareAttributes(attrUtil, subject, password,\n-                            vAttrsToBeRemoved, vAttrsToBeUpdated, enable, resource);\n+                    Map.Entry<String, Set<Attribute>> preparedAttrs = prepareAttributes(attrUtil, subject,\n+                            password, changePwd, vAttrsToBeRemoved, vAttrsToBeUpdated, enable, resource);\n                     task.setAccountId(preparedAttrs.getKey());\n \n                     // Check if any of mandatory attributes (in the mapping) is missing or not received any value: "},{"sha":"533941f4208bab985904c56b384b45d34b1d2721","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -173,7 +173,7 @@ public List<RoleTO> children(@PathVariable(\"roleId\") final Long roleId) {\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<RoleTO> search(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -182,7 +182,7 @@ public List<RoleTO> search(@RequestBody final NodeCond searchCondition)\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search/{page}/{size}\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<RoleTO> search(@RequestBody final NodeCond searchCondition, @PathVariable(\"page\") final int page,\n             @PathVariable(\"size\") final int size)\n             throws InvalidSearchConditionException {\n@@ -206,7 +206,7 @@ public List<RoleTO> search(@RequestBody final NodeCond searchCondition, @PathVar\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search/count\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -306,7 +306,7 @@ public RoleTO delete(@PathVariable(\"roleId\") final Long roleId) {\n         final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n \n         final SyncopeRole syncopeRole = roleDAO.find(roleId);\n-        \n+\n         if (syncopeRole != null) {\n             toBeDeprovisioned.add(syncopeRole);\n "},{"sha":"c76165255db7090943c46ac04eb83ca4af0235be","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -320,6 +320,7 @@ public UserTO update(@RequestBody final UserMod userMod) {\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n                         updated,\n                         changedPwd,\n+                        true,\n                         actual.getVirtualAttributesToBeRemoved(),\n                         actual.getVirtualAttributesToBeUpdated(),\n                         toBeExcluded));\n@@ -335,6 +336,7 @@ public UserTO update(@RequestBody final UserMod userMod) {\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n                         updated,\n                         null,\n+                        false,\n                         actual.getVirtualAttributesToBeRemoved(),\n                         actual.getVirtualAttributesToBeUpdated(),\n                         pwdResourceNames));\n@@ -529,6 +531,7 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form) {\n                             updated.getPropByRes(),\n                             updated.getPerformedTasks()),\n                     updated.getResult().getValue(),\n+                    true,\n                     null,\n                     null,\n                     null);"},{"sha":"34b4287f3089666a19cd44221292b3a0dcc7b87f","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -211,7 +211,9 @@ protected void userUpdate(final UserMod userMod, final String resourceName) {\n             updated = uwfAdapter.update(userMod);\n \n             List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n-                    userMod.getPassword(), userMod.getVirtualAttributesToBeRemoved(),\n+                    null,\n+                    false,\n+                    userMod.getVirtualAttributesToBeRemoved(),\n                     userMod.getVirtualAttributesToBeUpdated(),\n                     Collections.singleton(resourceName));\n "},{"sha":"292b97e9fa5fead8088a0756fe5f24a29ee5eb8e","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -377,7 +377,6 @@ protected List<Long> findByAttributableSearch(\n             final ConnectorObject connObj, final List<String> altSearchSchemas, final AttributableUtil attrUtil) {\n \n         // search for external attribute's name/value of each specified name\n-\n         final Map<String, Attribute> extValues = new HashMap<String, Attribute>();\n \n         for (AbstractMappingItem item\n@@ -476,7 +475,7 @@ public Long findMatchingAttributableId(final ObjectClass objectClass, final Stri\n \n         final List<ConnectorObject> found = connector.search(objectClass,\n                 new EqualsFilter(new Name(name)), connector.getOperationOptions(\n-                attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n+                        attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", objectClass, syncTask.getResource(), name);\n@@ -681,6 +680,7 @@ protected Map.Entry<UserTO, UserTO> updateUser(final Long id, SyncDelta delta, f\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n                 actual.getPassword(),\n+                actual.getPassword() != null,\n                 actual.getVirtualAttributesToBeRemoved(),\n                 actual.getVirtualAttributesToBeUpdated(),\n                 Collections.singleton(syncTask.getResource().getName()));"},{"sha":"fba37b1238474a50b36d01cb74b48248969d8a6f","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -246,8 +246,12 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n                 }\n             }\n \n-            result = new AbstractMap.SimpleEntry<String, Attribute>(null,\n-                    AttributeBuilder.buildPassword(passwordAttrValue.toCharArray()));\n+            if (passwordAttrValue == null) {\n+                result = null;\n+            } else {\n+                result = new AbstractMap.SimpleEntry<String, Attribute>(null,\n+                        AttributeBuilder.buildPassword(passwordAttrValue.toCharArray()));\n+            }\n         } else {\n             if ((schema != null && schema.isMultivalue()) || AttributableUtil.getInstance(subject).getType()\n                     != mapItem.getIntMappingType().getAttributableType()) {"},{"sha":"b2fde0bb47c9e31d7d94c803a0fc469f9cbf8296","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":34,"deletions":6,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -22,8 +22,12 @@\n import static org.junit.Assert.fail;\n \n import java.util.ArrayList;\n+import java.util.Hashtable;\n import java.util.List;\n+import java.util.Map;\n import java.util.UUID;\n+import javax.naming.Context;\n+import javax.naming.directory.InitialDirContext;\n \n import javax.sql.DataSource;\n import javax.ws.rs.core.MediaType;\n@@ -72,12 +76,12 @@\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n import org.apache.syncope.common.to.AttributeTO;\n-import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PolicyTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.validation.SyncopeClientErrorHandler;\n@@ -93,7 +97,7 @@\n import org.springframework.web.client.RestTemplate;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\"})\n+@ContextConfiguration(locations = { \"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\" })\n public abstract class AbstractTest {\n \n     /**\n@@ -218,10 +222,6 @@ public void setup() throws Exception {\n         }\n     }\n \n-    protected ConnObjectTO readConnectorObject(final String resourceName, final Long userId, AttributableType type) {\n-        return resourceService.getConnectorObject(resourceName, type, userId);\n-    }\n-\n     // BEGIN Spring MVC Initialization\n     private void setupRestTemplate(final String uid, final String pwd) {\n         PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n@@ -458,4 +458,32 @@ protected ResourceTO createResource(final ResourceTO resourceTO) {\n         }\n         return getObject(response, ResourceTO.class, resourceService);\n     }\n+\n+    protected Object getLdapRemoteObject(final String objectDn) {\n+        return getLdapRemoteObject(null, null, objectDn);\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\", \"UseOfObsoleteCollectionType\" })\n+    protected Object getLdapRemoteObject(final String bindDn, final String bindPwd, final String objectDn) {\n+        ResourceTO ldapRes = resourceService.read(RESOURCE_NAME_LDAP);\n+        final Map<String, ConnConfProperty> ldapConnConf =\n+                connectorService.read(ldapRes.getConnectorId()).getConfigurationMap();\n+\n+        Hashtable env = new Hashtable();\n+        env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\n+        env.put(Context.PROVIDER_URL, \"ldap://\" + ldapConnConf.get(\"host\").getValues().get(0)\n+                + \":\" + ldapConnConf.get(\"port\").getValues().get(0) + \"/\");\n+        env.put(Context.SECURITY_AUTHENTICATION, \"simple\");\n+        env.put(Context.SECURITY_PRINCIPAL,\n+                bindDn == null ? ldapConnConf.get(\"principal\").getValues().get(0) : bindDn);\n+        env.put(Context.SECURITY_CREDENTIALS,\n+                bindPwd == null ? ldapConnConf.get(\"credentials\").getValues().get(0) : bindPwd);\n+\n+        try {\n+            final InitialDirContext ctx = new InitialDirContext(env);\n+            return ctx.lookup(objectDn);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n }"},{"sha":"3f838e6c262e455dc40ffeb7c67eac6bedb045bb","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":6,"deletions":32,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -27,20 +27,14 @@\n \n import java.security.AccessControlException;\n import java.util.ArrayList;\n-import java.util.Hashtable;\n import java.util.List;\n-import java.util.Map;\n-import javax.naming.Context;\n-import javax.naming.directory.InitialDirContext;\n \n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n-import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -114,7 +108,8 @@ public void create() {\n \n         assertTrue(roleTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, roleTO.getId(), AttributableType.ROLE);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n         assertNotNull(connObjectTO);\n         assertNotNull(connObjectTO.getAttributeMap().get(\"owner\"));\n     }\n@@ -391,7 +386,7 @@ public void issueSYNCOPE455() {\n         assertTrue(parent.getResources().contains(RESOURCE_NAME_LDAP));\n \n         final ConnObjectTO parentRemoteObject =\n-                readConnectorObject(RESOURCE_NAME_LDAP, parent.getId(), AttributableType.ROLE);\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, parent.getId());\n         assertNotNull(parentRemoteObject);\n         assertNotNull(getLdapRemoteObject(parentRemoteObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n \n@@ -404,7 +399,7 @@ public void issueSYNCOPE455() {\n         assertTrue(child.getResources().contains(RESOURCE_NAME_LDAP));\n \n         final ConnObjectTO childRemoteObject =\n-                readConnectorObject(RESOURCE_NAME_LDAP, child.getId(), AttributableType.ROLE);\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, child.getId());\n         assertNotNull(childRemoteObject);\n         assertNotNull(getLdapRemoteObject(childRemoteObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n \n@@ -416,38 +411,17 @@ public void issueSYNCOPE455() {\n             roleService.read(parent.getId());\n             fail();\n         } catch (SyncopeClientCompositeErrorException scce) {\n-            // ignore\n+            assertNotNull(scce);\n         }\n \n         try {\n             roleService.read(child.getId());\n             fail();\n         } catch (SyncopeClientCompositeErrorException scce) {\n-            // ignore\n+            assertNotNull(scce);\n         }\n \n         assertNull(getLdapRemoteObject(parentRemoteObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n         assertNull(getLdapRemoteObject(childRemoteObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n     }\n-\n-    private Object getLdapRemoteObject(final String name) {\n-        ResourceTO ldapRes = resourceService.read(RESOURCE_NAME_LDAP);\n-        final Map<String, ConnConfProperty> ldapConnConf =\n-                connectorService.read(ldapRes.getConnectorId()).getConfigurationMap();\n-\n-        Hashtable env = new Hashtable();\n-        env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\n-        env.put(Context.PROVIDER_URL, \"ldap://\" + ldapConnConf.get(\"host\").getValues().get(0)\n-                + \":\" + ldapConnConf.get(\"port\").getValues().get(0) + \"/\");\n-        env.put(Context.SECURITY_AUTHENTICATION, \"simple\");\n-        env.put(Context.SECURITY_PRINCIPAL, ldapConnConf.get(\"principal\").getValues().get(0));\n-        env.put(Context.SECURITY_CREDENTIALS, ldapConnConf.get(\"credentials\").getValues().get(0));\n-\n-        try {\n-            final InitialDirContext ctx = new InitialDirContext(env);\n-            return ctx.lookup(name);\n-        } catch (Exception e) {\n-            return null;\n-        }\n-    }\n }"},{"sha":"7619fa483896164343cff4ec9bd43ae0ca7fdf1b","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":59,"deletions":19,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -34,6 +34,7 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n+import javax.naming.NamingException;\n \n import javax.ws.rs.core.Response;\n \n@@ -72,6 +73,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n+import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n@@ -577,7 +579,7 @@ public void createWithReject() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] {userTO.getUsername()}, Integer.class);\n+                    new String[] { userTO.getUsername() }, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -614,7 +616,7 @@ public void createWithApproval() {\n         Exception exception = null;\n         try {\n             jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\",\n-                    new String[] {userTO.getUsername()}, Integer.class);\n+                    new String[] { userTO.getUsername() }, Integer.class);\n         } catch (EmptyResultDataAccessException e) {\n             exception = e;\n         }\n@@ -1134,10 +1136,11 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, userId, AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userId);\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n@@ -1149,7 +1152,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n@@ -1161,7 +1164,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_TESTDB, userId, AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userId);\n         assertTrue(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n     }\n \n@@ -1262,11 +1265,9 @@ public void issue270() {\n \n         // 2. try to update by adding a resource, but no password: must fail\n         UserMod userMod = AttributableOperations.diff(toBeUpdated, original);\n-\n         assertNotNull(userMod);\n \n         toBeUpdated = userService.update(userMod.getId(), userMod);\n-\n         assertNotNull(toBeUpdated);\n \n         assertFalse(toBeUpdated.getVirtualAttributes().isEmpty());\n@@ -1364,7 +1365,8 @@ public void roleAttrPropagation() {\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1391,7 +1393,8 @@ public void membershipAttrPropagation() {\n         assertNotNull(actual);\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n@@ -1422,7 +1425,8 @@ public void issueSYNCOPE108() {\n         assertEquals(2, actual.getMemberships().size());\n         assertEquals(1, actual.getResources().size());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1437,7 +1441,7 @@ public void issueSYNCOPE108() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1454,7 +1458,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n         assertFalse(actual.getResources().isEmpty());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1472,7 +1476,7 @@ public void issueSYNCOPE108() {\n         assertTrue(actual.getResources().isEmpty());\n \n         try {\n-            readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+            resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n             fail(\"Read should not succeeed\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n@@ -1503,7 +1507,8 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(2, actual.getMemberships().size());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1532,7 +1537,7 @@ public void issueSYNCOPE111() {\n         assertNotNull(actual);\n         assertEquals(1, actual.getMemberships().size());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, actual.getId());\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1564,7 +1569,7 @@ public void issueSYNCOPE185() {\n \n         // 3. try (and fail) to find this user on the external LDAP resource\n         try {\n-            readConnectorObject(RESOURCE_NAME_LDAP, userTO.getId(), AttributableType.USER);\n+            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             SyncopeClientException sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n@@ -1617,7 +1622,8 @@ public void issueSYNCOPE267() {\n         assertEquals(RESOURCE_NAME_DBVIRATTR, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_DBVIRATTR, userTO.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_DBVIRATTR, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n@@ -1811,7 +1817,8 @@ public void mappingPurpose() {\n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n \n-        final ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId());\n         assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n     }\n \n@@ -2087,6 +2094,39 @@ public void issueSYNCOPE435() {\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n \n+    @Test\n+    public void issueSYNCOPE454() throws NamingException {\n+        // 1. create user with LDAP resource (with 'Generate password if missing' enabled)\n+        UserTO userTO = getUniqueSampleTO(\"syncope454@syncope.apache.org\");\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+\n+        // 2. read resource configuration for LDAP binding\n+        ConnObjectTO connObject =\n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n+\n+        // 3. try (and succeed) to perform simple LDAP binding with provided password ('password123')\n+        assertNotNull(getLdapRemoteObject(\n+                connObject.getAttributeMap().get(Name.NAME).getValues().get(0),\n+                \"password123\",\n+                connObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n+\n+        // 4. update user without any password change request\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.setPwdPropRequest(new PropagationRequestTO());\n+        userMod.getAttributesToBeUpdated().add(attributeMod(\"surname\", \"surname2\"));\n+\n+        userService.update(userTO.getId(), userMod);\n+\n+        // 5. try (and succeed again) to perform simple LDAP binding: password has not changed\n+        assertNotNull(getLdapRemoteObject(\n+                connObject.getAttributeMap().get(Name.NAME).getValues().get(0),\n+                \"password123\",\n+                connObject.getAttributeMap().get(Name.NAME).getValues().get(0)));\n+    }\n+\n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"},{"sha":"90aff929799f94cc8b994bc3a04a5a0b5e127501","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8beb540ecfc37e38778d6aab24b185a30395f9ff/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=8beb540ecfc37e38778d6aab24b185a30395f9ff","patch":"@@ -100,7 +100,8 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        ConnObjectTO connObjectTO =\n+                resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -124,7 +125,7 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n@@ -135,15 +136,15 @@ public void issueSYNCOPE260() {\n         userTO = userService.suspend(userTO.getId());\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n \n         userTO = userService.reactivate(userTO.getId());\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n@@ -168,7 +169,7 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n         assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n \n@@ -191,7 +192,7 @@ public void issueSYNCOPE260() {\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n-        connObjectTO = readConnectorObject(RESOURCE_NAME_WS2, userTO.getId(), AttributableType.USER);\n+        connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_WS2, AttributableType.USER, userTO.getId());\n         assertNotNull(connObjectTO);\n \n         // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n@@ -505,7 +506,7 @@ public void issueSYNCOPE453() {\n \n         final Map<String, Object> actuals = jdbcTemplate.queryForMap(\n                 \"SELECT id, surname, email FROM testsync WHERE id=?\",\n-                new Object[] {Integer.parseInt(userTO.getAttributeMap().get(\"aLong\").getValues().get(0))});\n+                new Object[] { Integer.parseInt(userTO.getAttributeMap().get(\"aLong\").getValues().get(0)) });\n \n         assertEquals(userTO.getAttributeMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());\n         assertEquals(\"ml@role.it\", actuals.get(\"email\"));"}]}