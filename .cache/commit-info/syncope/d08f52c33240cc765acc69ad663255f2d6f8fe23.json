{"sha":"d08f52c33240cc765acc69ad663255f2d6f8fe23","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQwOGY1MmMzMzI0MGNjNzY1YWNjNjlhZDY2MzI1NWYyZDZmOGZlMjM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T10:47:48Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T10:47:48Z"},"message":"New workflow engine in place: Activiti. (Update issue 167)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247135 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0bdc044b3b15013ff652d93e5b5a2030c361ca1e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0bdc044b3b15013ff652d93e5b5a2030c361ca1e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d08f52c33240cc765acc69ad663255f2d6f8fe23","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d08f52c33240cc765acc69ad663255f2d6f8fe23","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d08f52c33240cc765acc69ad663255f2d6f8fe23","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d08f52c33240cc765acc69ad663255f2d6f8fe23/comments","author":null,"committer":null,"parents":[{"sha":"fef2c4162098dffab18efc4956f84d0e360db56b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fef2c4162098dffab18efc4956f84d0e360db56b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fef2c4162098dffab18efc4956f84d0e360db56b"}],"stats":{"total":1823,"additions":1497,"deletions":326},"files":[{"sha":"4850edeafecadc328c26521959c7e493fb504fd8","filename":"archetype/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -68,13 +68,25 @@\n                                 <copy file=\"${basedir}/../core/src/test/resources/persistence.properties\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/core/src/test/resources\"\n                                       overwrite=\"true\"/>\n+                                <copy file=\"${basedir}/../core/src/test/resources/workflow.properties\"\n+                                      todir=\"${basedir}/src/main/resources/archetype-resources/core/src/test/resources\"\n+                                      overwrite=\"true\"/>\n                                 <copy file=\"${basedir}/../core/src/test/resources/content.xml\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/core/src/test/resources\"\n                                       overwrite=\"true\"/>\n                                 <copy file=\"${basedir}/../core/src/test/resources/test.csv\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/core/src/test/resources\"\n                                       overwrite=\"true\"/>\n+                                <copy file=\"${basedir}/../core/src/test/resources/testdb.sql\"\n+                                      todir=\"${basedir}/src/main/resources/archetype-resources/core/src/test/resources\"\n+                                      overwrite=\"true\"/>\n                                       \n+                                <copy file=\"${basedir}/../core/src/main/resources/persistence.properties\"\n+                                      todir=\"${basedir}/src/main/resources/archetype-resources/core/src/main/resources\"\n+                                      overwrite=\"true\"/>\n+                                <copy file=\"${basedir}/../core/src/main/resources/workflow.properties\"\n+                                      todir=\"${basedir}/src/main/resources/archetype-resources/core/src/main/resources\"\n+                                      overwrite=\"true\"/>\n                                 <copy file=\"${basedir}/../core/src/main/resources/content.xml\"\n                                       todir=\"${basedir}/src/main/resources/archetype-resources/core/src/main/resources\"\n                                       overwrite=\"true\"/>"},{"sha":"910308d6f4ce55275d71b2e1f3086c449e66af4e","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":59,"deletions":34,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -25,6 +25,7 @@\n         <dependency>\r\n             <groupId>org.apache.wicket</groupId>\r\n             <artifactId>wicket</artifactId>\r\n+            <type>pom</type>\r\n         </dependency>\r\n \r\n         <dependency>\r\n@@ -65,8 +66,8 @@\n \r\n         <!-- TEST -->\r\n         <dependency>\r\n-            <groupId>org.hsqldb</groupId>\r\n-            <artifactId>hsqldb</artifactId>\r\n+            <groupId>com.h2database</groupId>\r\n+            <artifactId>h2</artifactId>\r\n             <scope>test</scope>\r\n         </dependency>\r\n         <dependency>\r\n@@ -115,27 +116,45 @@\n \r\n              <!-- For cargo:run -->\r\n             <plugin>\r\n-                <groupId>org.onebusaway.plugins</groupId>\r\n-                <artifactId>maven-hsqldb-plugin</artifactId>\r\n+                <groupId>org.codehaus.mojo</groupId>\r\n+                <artifactId>exec-maven-plugin</artifactId>\r\n                 <inherited>true</inherited>\r\n-                <configuration>\r\n-                    <dbName>testdb</dbName>\r\n-                    <mode>server</mode>\r\n-                    <isTransient>true</isTransient>\r\n-                </configuration>\r\n                 <dependencies>\r\n                     <dependency>\r\n-                        <groupId>org.hsqldb</groupId>\r\n-                        <artifactId>hsqldb</artifactId>\r\n-                        <version>${hsqldb.version}</version>\r\n+                        <groupId>com.h2database</groupId>\r\n+                        <artifactId>h2</artifactId>\r\n+                        <version>${h2.version}</version>\r\n                     </dependency>\r\n                 </dependencies>\r\n+                <configuration>\r\n+                    <includeProjectDependencies>false</includeProjectDependencies>\r\n+                    <includePluginDependencies>true</includePluginDependencies>\r\n+                    <executableDependency>\r\n+                        <groupId>com.h2database</groupId>\r\n+                        <artifactId>h2</artifactId>\r\n+                    </executableDependency>\r\n+                    <mainClass>org.h2.tools.Server</mainClass>\r\n+                    <arguments>\r\n+                        <argument>-tcp</argument>    \r\n+                        <argument>-tcpDaemon</argument>\r\n+                        <argument>-web</argument>\r\n+                        <argument>-webDaemon</argument>\r\n+                        <argument>-webPort</argument>\r\n+                        <argument>9082</argument>\r\n+                    </arguments>\r\n+                    <systemProperties>\r\n+                        <systemProperty>\r\n+                            <key>h2.baseDir</key>\r\n+                            <value>${project.build.directory}/test-classes</value>\r\n+                        </systemProperty>\r\n+                    </systemProperties>\r\n+                </configuration>\r\n                 <executions>\r\n                     <execution>\r\n                         <id>startTestDb</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <goals>\r\n-                            <goal>run</goal>\r\n+                            <goal>java</goal>    \r\n                         </goals>\r\n                     </execution>\r\n                 </executions>\r\n@@ -147,31 +166,24 @@\n                 <inherited>true</inherited>\r\n                 <dependencies>\r\n                     <dependency>\r\n-                        <groupId>org.hsqldb</groupId>\r\n-                        <artifactId>hsqldb</artifactId>\r\n-                        <version>${hsqldb.version}</version>\r\n+                        <groupId>com.h2database</groupId>\r\n+                        <artifactId>h2</artifactId>\r\n+                        <version>${h2.version}</version>\r\n                     </dependency>\r\n                 </dependencies>\r\n                 <configuration>\r\n-                    <driver>org.hsqldb.jdbcDriver</driver>\r\n-                    <url>jdbc:hsqldb:hsql://localhost:9001/testdb</url>\r\n+                    <driver>org.h2.Driver</driver>\r\n+                    <url>jdbc:h2:tcp://localhost:9092/testdb</url>\r\n                     <username>sa</username>\r\n                     <password></password>\r\n-                    <sqlCommand>\r\n-\t\t\tALTER USER sa SET PASSWORD \"sa\";\r\n-\r\n-                        DROP TABLE test IF EXISTS;\r\n-                        CREATE TABLE test (\r\n-                        id INTEGER PRIMARY KEY,\r\n-                        password VARCHAR(255) NOT NULL);\r\n-\r\n-                        INSERT INTO test VALUES (1, 'password');\r\n-                    </sqlCommand>\r\n+                    <srcFiles>\r\n+                        <srcFile>${project.build.directory}/test-classes/testdb.sql</srcFile>\r\n+                    </srcFiles>\r\n                 </configuration>\r\n                 <executions>\r\n                     <execution>\r\n                         <id>loadTestDb</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <goals>\r\n                             <goal>execute</goal>\r\n                         </goals>\r\n@@ -186,7 +198,7 @@\n                 <executions>\r\n                     <execution>\r\n                         <id>explodeSyncopeWAR</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <unzip src=\"${basedir}/../core/target/syncope-${project.parent.version}.war\"\r\n@@ -205,7 +217,7 @@\n                     </execution>\r\n                     <execution>\r\n                         <id>setupTomcat</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip\"\r\n@@ -220,7 +232,7 @@\n                     </execution>\r\n                     <execution>\r\n                         <id>setupCSV</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${java.io.tmpdir}\" overwrite=\"true\"/>\r\n@@ -283,7 +295,8 @@\n                         <output>${cargo.output}</output>\r\n                         <dependencies>\r\n                             <dependency>\r\n-                                <location>${settings.localRepository}/org/hsqldb/hsqldb/${hsqldb.version}/hsqldb-${hsqldb.version}.jar</location>\r\n+                                <groupId>com.h2database</groupId>\r\n+                                <artifactId>h2</artifactId>\r\n                             </dependency>\r\n                         </dependencies>\r\n                     </container>\r\n@@ -342,4 +355,16 @@\n             </testResource>\r\n         </testResources>\r\n     </build>\r\n+    \r\n+    <profiles>\r\n+        <profile>\r\n+            <id>embedded</id>\r\n+            <properties>\r\n+                <maven.test.skip>true</maven.test.skip>\r\n+            </properties>\r\n+            <build>\r\n+                <defaultGoal>clean verify cargo:run</defaultGoal>    \r\n+            </build>\r\n+        </profile>    \r\n+    </profiles>\r\n </project>\r"},{"sha":"c76309445de92bb0444c40c76a2e9ca5afbde9b9","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":8,"deletions":17,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -65,15 +65,6 @@\n             <artifactId>commons-httpclient</artifactId>\r\n         </dependency>\r\n \r\n-        <dependency>\r\n-            <groupId>org.aspectj</groupId>\r\n-            <artifactId>aspectjweaver</artifactId>\r\n-        </dependency>\r\n-        <dependency>\r\n-            <groupId>org.aspectj</groupId>\r\n-            <artifactId>aspectjrt</artifactId>\r\n-        </dependency>\r\n-\r\n         <!-- TEST -->\r\n         <dependency>\r\n             <groupId>junit</groupId>\r\n@@ -86,8 +77,8 @@\n             <scope>test</scope>\r\n         </dependency>\r\n         <dependency>\r\n-            <groupId>org.hsqldb</groupId>\r\n-            <artifactId>hsqldb</artifactId>\r\n+            <groupId>com.h2database</groupId>\r\n+            <artifactId>h2</artifactId>\r\n             <scope>test</scope>\r\n         </dependency>\r\n         <dependency>\r\n@@ -160,7 +151,7 @@\n                 <executions>\r\n                     <execution>\r\n                         <id>explodeSyncopeWAR</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <unzip src=\"${project.build.directory}/${project.build.finalName}.war\"\r\n@@ -180,7 +171,7 @@\n                     </execution>\r\n                     <execution>\r\n                         <id>setupTomcat</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <get src=\"http://www.apache.org/dist/tomcat/tomcat-7/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip\"\r\n@@ -195,7 +186,7 @@\n                     </execution>\r\n                     <execution>\r\n                         <id>setupCSV</id>\r\n-                        <phase>package</phase>\r\n+                        <phase>pre-integration-test</phase>\r\n                         <configuration>\r\n                             <target>\r\n                                 <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${java.io.tmpdir}\" overwrite=\"true\"/>\r\n@@ -258,7 +249,8 @@\n                         <output>${cargo.output}</output>\r\n                         <dependencies>\r\n                             <dependency>\r\n-                                <location>${settings.localRepository}/org/hsqldb/hsqldb/${hsqldb.version}/hsqldb-${hsqldb.version}.jar</location>\r\n+                                <groupId>com.h2database</groupId>\r\n+                                <artifactId>h2</artifactId>\r\n                             </dependency>\r\n                             <dependency>\r\n                                 <location>${project.build.directory}/test-classes/</location>\r\n@@ -311,14 +303,13 @@\n             <plugin>\r\n                 <groupId>org.codehaus.mojo</groupId>\r\n                 <artifactId>exec-maven-plugin</artifactId>\r\n-                <version>1.2</version>\r\n                 <configuration>\r\n                     <executable>java</executable>\r\n                     <arguments>\r\n                         <argument>-classpath</argument>\r\n                         <classpath/>\r\n                         <argument>org.syncope.core.persistence.util.SchemaExporter</argument>\r\n-                        <argument>HSQL</argument>\r\n+                        <argument>H2</argument>\r\n                     </arguments>\r\n                 </configuration>\r\n             </plugin>\r"},{"sha":"a688c7f2f91d6b303ae2db2f415ac304f491650a","filename":"archetype/src/main/resources/archetype-resources/core/src/main/resources/persistence.properties","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -10,8 +10,17 @@\n #  See the License for the specific language governing permissions and\n #  limitations under the License.\n hibernate.connection.driver_class=org.postgresql.Driver\n+#hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver\n hibernate.connection.url=jdbc:postgresql://localhost:5432/syncope\n+#hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:orcl\n hibernate.connection.username=syncope\n hibernate.connection.password=syncope\n hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\n+#hibernate.dialect=org.hibernate.dialect.Oracle10gDialect\n dbUnitDataTypeFactory=org.dbunit.ext.postgresql.PostgresqlDataTypeFactory\n+#dbUnitDataTypeFactory=org.dbunit.ext.oracle.Oracle10DataTypeFactory\n+quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+#quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n+quartz.sql=tables_postgres.sql\n+#quartz.sql=tables_oracle.sql\n+#database.schema=SYNCOPE"},{"sha":"f1999bd01b568db12329feba7713a0be6207f57d","filename":"archetype/src/main/resources/archetype-resources/pom.xml","status":"modified","additions":34,"deletions":30,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -14,19 +14,20 @@\n \r\n     <properties>\r\n         <syncope.version>0.7-SNAPSHOT</syncope.version>\r\n-        <hsqldb.version>2.2.4</hsqldb.version>\r\n+\r\n         <connid.soap.version>1.1</connid.soap.version>\r\n         <connid.db.table.version>1.2.1</connid.db.table.version>\r\n         <connid.csvdir.version>0.1</connid.csvdir.version>\r\n \r\n+        <h2.version>1.3.160</h2.version>\r\n+\r\n         <servlet-api.version>2.5</servlet-api.version>\r\n         <jsp-api.version>2.1</jsp-api.version>\r\n         <jstl.version>1.2</jstl.version>\r\n         \r\n         <spring>3.0.6.RELEASE</spring>\r\n-        <aspectj.version>1.6.9</aspectj.version>\r\n \r\n-        <wicket.version>1.4.18</wicket.version>\r\n+        <wicket.version>1.5.1</wicket.version>\r\n \r\n         <commons-lang.version>2.6</commons-lang.version>\r\n         <commons-httpclient.version>3.1</commons-httpclient.version>\r\n@@ -39,7 +40,7 @@\n         <junit.version>4.9</junit.version>\r\n \r\n         <cargo.version>1.1.2</cargo.version>\r\n-        <tomcat.version>7.0.20</tomcat.version>\r\n+        <tomcat.version>7.0.22</tomcat.version>\r\n \r\n         <bundles.directory>${project.build.directory}/bundles</bundles.directory>\r\n         <log.directory>${project.build.directory}/log</log.directory>\r\n@@ -156,21 +157,11 @@\n                 <version>${spring}</version>\r\n             </dependency>\r\n \r\n-            <dependency>\r\n-                <groupId>org.aspectj</groupId>\r\n-                <artifactId>aspectjweaver</artifactId>\r\n-                <version>${aspectj.version}</version>\r\n-            </dependency>\r\n-            <dependency>\r\n-                <groupId>org.aspectj</groupId>\r\n-                <artifactId>aspectjrt</artifactId>\r\n-                <version>${aspectj.version}</version>\r\n-            </dependency>\r\n-\r\n             <dependency>\r\n                 <groupId>org.apache.wicket</groupId>\r\n                 <artifactId>wicket</artifactId>\r\n                 <version>${wicket.version}</version>\r\n+                <type>pom</type>\r\n             </dependency>\r\n             <dependency>\r\n                 <groupId>org.apache.wicket</groupId>\r\n@@ -190,11 +181,6 @@\n             </dependency>\r\n \r\n             <!-- CXF Dependencies -->\r\n-            <dependency>\r\n-                <groupId>org.apache.cxf</groupId>\r\n-                <artifactId>cxf-rt-core</artifactId>\r\n-                <version>${cxf.version}</version>\r\n-            </dependency>\r\n             <dependency>\r\n                 <groupId>org.apache.cxf</groupId>\r\n                 <artifactId>cxf-rt-frontend-jaxws</artifactId>\r\n@@ -206,6 +192,12 @@\n                 <version>${cxf.version}</version>\r\n             </dependency>\r\n \r\n+            <dependency>\r\n+                <groupId>com.h2database</groupId>\r\n+                <artifactId>h2</artifactId>\r\n+                <version>${h2.version}</version>\r\n+            </dependency>\r\n+            \r\n             <dependency>\r\n                 <groupId>junit</groupId>\r\n                 <artifactId>junit</artifactId>\r\n@@ -218,13 +210,7 @@\n                 <version>${spring}</version>\r\n                 <scope>test</scope>\r\n             </dependency>\r\n-            <dependency>\r\n-                <groupId>org.hsqldb</groupId>\r\n-                <artifactId>hsqldb</artifactId>\r\n-                <version>${hsqldb.version}</version>\r\n-                <scope>test</scope>\r\n-            </dependency>\r\n-\r\n+            \r\n             <dependency>\r\n                 <groupId>org.connid.bundles.soap</groupId>\r\n                 <artifactId>org.connid.bundles.soap</artifactId>\r\n@@ -277,6 +263,24 @@\n         </repository>\r\n \r\n     </repositories>\r\n+    \r\n+    <pluginRepositories>\r\n+\r\n+        <pluginRepository>\r\n+            <id>main</id>\r\n+            <url>http://repo1.maven.org/maven2/</url>\r\n+        </pluginRepository>\r\n+\r\n+        <pluginRepository>\r\n+            <id>sonatype-public</id>\r\n+            <name>Sonatype public repository</name>\r\n+            <url>http://oss.sonatype.org/content/groups/public</url>\r\n+            <snapshots>\r\n+                <enabled>true</enabled>\r\n+            </snapshots>\r\n+        </pluginRepository>\r\n+\r\n+    </pluginRepositories>\r\n \r\n     <build>\r\n         <defaultGoal>package</defaultGoal>\r\n@@ -331,9 +335,9 @@\n                     <version>1.4</version>\r\n                 </plugin>\r\n                 <plugin>\r\n-                    <groupId>org.onebusaway.plugins</groupId>\r\n-                    <artifactId>maven-hsqldb-plugin</artifactId>\r\n-                    <version>1.0</version>\r\n+                    <groupId>org.codehaus.mojo</groupId>\r\n+                    <artifactId>exec-maven-plugin</artifactId>\r\n+                    <version>1.2.1</version>\r\n                 </plugin>\r\n                 <plugin>\r\n                     <groupId>org.apache.maven.plugins</groupId>\r"},{"sha":"21cd8262a12fb647c09f5369ad223a479c780aed","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -28,9 +28,6 @@ public enum SyncopeClientExceptionType {\n     InvalidConnInstance(\n     \"Syncope.InvalidConnInstance\",\n     \"Syncope.InvalidConnInstance.message\"),\n-    InvalidPassword(\n-    \"Syncope.InvalidPassword\",\n-    \"Syncope.InvalidPassword.reason\"),\n     InvalidPolicy(\n     \"Syncope.InvalidPolicy\",\n     \"Syncope.InvalidPolicy.reason\"),\n@@ -49,15 +46,21 @@ public enum SyncopeClientExceptionType {\n     InvalidPropagationTaskExecReport(\n     \"Syncope.InvalidPropagationTaskExecReport\",\n     \"Syncope.InvalidPropagationTaskExecReport.element\"),\n+    InvalidSchema(\n+    \"Syncope.InvalidUpdate\",\n+    \"Syncope.InvalidUpdate.name\"),\n     InvalidSchemaMapping(\n     \"Syncope.InvalidSchemaMapping\",\n     \"\"),\n+    InvalidSyncopeUser(\n+    \"Syncope.InvalidSyncopeUser\",\n+    \"Syncope.InvalidSyncopeUser.element\"),\n+    InvalidTargetResource(\n+    \"Syncope.InvalidTargetResource\",\n+    \"Syncope.InvalidTargetResource.element\"),\n     InvalidTask(\n     \"Syncope.InvalidTask\",\n     \"Syncope.InvalidTask.element\"),\n-    InvalidUpdate(\n-    \"Syncope.InvalidUpdate\",\n-    \"Syncope.InvalidUpdate.name\"),\n     InvalidValues(\n     \"Syncope.InvalidValues\",\n     \"Syncope.InvalidValues.attributeName\"),"},{"sha":"e8c4b56e785f9af30a6bd818372604d7ff7935c1","filename":"console/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -178,6 +178,7 @@\n                                             <exclude name=\"**/content.xml\" />\n                                             <exclude name=\"**/ehcache.xml\" />\n                                             <exclude name=\"**/persistence.properties\" />\n+                                            <exclude name=\"**/security.properties\" />\n                                         </patternset>\n                                     </unzip>\n                                 </target>\n@@ -293,6 +294,8 @@\n                         <argument>-tcpDaemon</argument>\n                         <argument>-web</argument>\n                         <argument>-webDaemon</argument>\n+                        <argument>-webPort</argument>\n+                        <argument>9082</argument>\n                     </arguments>\n                     <systemProperties>\n                         <systemProperty>\n@@ -409,6 +412,7 @@\n             </properties>\n             <build>\n                 <defaultGoal>clean verify cargo:run</defaultGoal>\n+                \n                 <plugins>\n                     <plugin>\n                         <groupId>org.apache.maven.plugins</groupId>"},{"sha":"f7af47ca4c4444f042c0a347c0db4f2021b70e31","filename":"core/pom.xml","status":"modified","additions":71,"deletions":2,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -129,7 +129,7 @@\n             <groupId>com.thoughtworks.xstream</groupId>\n             <artifactId>xstream</artifactId>\n         </dependency>\n-\n+        \n         <dependency>\n             <groupId>org.apache.velocity</groupId>\n             <artifactId>velocity</artifactId>\n@@ -375,7 +375,6 @@\n                                     <patternset>\n                                         <exclude name=\"**/content.xml\" />\n                                         <exclude name=\"**/ehcache.xml\" />\n-                                        <exclude name=\"**/userWorkflow.xml\" />\n                                         <exclude name=\"**/persistence.properties\" />\n                                         <exclude name=\"**/security.properties\" />\n                                     </patternset>\n@@ -482,6 +481,8 @@\n                                 <argument>-tcpDaemon</argument>\n                                 <argument>-web</argument>    \n                                 <argument>-webDaemon</argument>\n+                                <argument>-webPort</argument>\n+                                <argument>9082</argument>\n                             </arguments>\n                             <systemProperties>\n                                 <systemProperty>\n@@ -635,10 +636,78 @@\n             <properties>\n                 <maven.test.skip>true</maven.test.skip>\n             </properties>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>com.h2database</groupId>\n+                    <artifactId>h2</artifactId>\n+                    <scope>compile</scope>\n+                </dependency>    \n+            </dependencies>\n             <build>\n                 <defaultGoal>clean verify</defaultGoal>\n                 \n                 <plugins>\n+                    <plugin>\n+                        <groupId>org.codehaus.mojo</groupId>\n+                        <artifactId>build-helper-maven-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <executions>\n+                            <execution>\n+                                <id>add-dev-source</id>\n+                                <phase>generate-sources</phase>\n+                                <goals>\n+                                    <goal>add-source</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <sources>\n+                                        <source>src/dev/java</source>\n+                                    </sources>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin> \n+                    <plugin>\n+                        <groupId>org.codehaus.mojo</groupId>\n+                        <artifactId>xml-maven-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <executions>\n+                            <execution>\n+                                <id>enableH2Console</id>\n+                                <phase>process-test-resources</phase>\n+                                <goals>\n+                                    <goal>transform</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                        <configuration>\n+                            <transformationSets>\n+                                <transformationSet>\n+                                    <dir>src/main/webapp/WEB-INF</dir>\n+                                    <includes>\n+                                        <include>web.xml</include>    \n+                                    </includes>\n+                                    <stylesheet>src/test/resources/webxml4dev.xsl</stylesheet>\n+                                </transformationSet>\n+                            </transformationSets>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-war-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <configuration>\n+                            <webXml>${project.build.directory}/generated-resources/xml/xslt/web.xml</webXml>\n+                            <webResources>\n+                                <resource>\n+                                    <directory>src/main/webapp</directory>\n+                                    <includes>\n+                                        <include>**/*.jsp</include>\n+                                    </includes>\n+                                    <filtering>true</filtering>\n+                                </resource>\n+                            </webResources>\n+                        </configuration>\n+                    </plugin>\n                     <plugin>\n                         <groupId>org.codehaus.cargo</groupId>\n                         <artifactId>cargo-maven2-plugin</artifactId>"},{"sha":"1899ea336f70b4ea50f5a4331f61fba1274964ee","filename":"core/src/dev/java/org/syncope/core/dev/init/H2ConsoleContextListener.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.dev.init;\n+\n+import java.sql.SQLException;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletContextEvent;\n+import javax.servlet.ServletContextListener;\n+import org.h2.tools.Server;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Utility serlvet context listener managing H2 web console lifecycle.\n+ */\n+public class H2ConsoleContextListener implements ServletContextListener {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(H2ConsoleContextListener.class);\n+\n+    @Override\n+    public void contextInitialized(final ServletContextEvent sce) {\n+        ServletContext context = sce.getServletContext();\n+\n+        Server h2Console;\n+        try {\n+            h2Console = Server.createWebServer(\"\");\n+            h2Console.start();\n+\n+            context.setAttribute(\"h2Console\", h2Console);\n+        } catch (SQLException e) {\n+            LOG.error(\"Could not start H2 web console\", e);\n+        }\n+    }\n+\n+    @Override\n+    public void contextDestroyed(final ServletContextEvent sce) {\n+        ServletContext context = sce.getServletContext();\n+\n+        Server h2Console = (Server) context.getAttribute(\"h2Console\");\n+        if (h2Console != null) {\n+            h2Console.stop();\n+        }\n+    }\n+}"},{"sha":"9b6cc02c0864ae45d995ceb2b5cee2fa079fe100","filename":"core/src/main/java/org/syncope/core/init/ActivitiWorkflowLoader.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.init;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import org.activiti.engine.RepositoryService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class ActivitiWorkflowLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            ActivitiWorkflowLoader.class);\n+\n+    private static final String WF_DEF_NAME = \"userWorkflow.bpmn20.xml\";\n+\n+    @Autowired\n+    private RepositoryService repositoryService;\n+\n+    public void load() {\n+        InputStream wfDefinitionStream = null;\n+        try {\n+            wfDefinitionStream = getClass().getResourceAsStream(\"/\"\n+                    + WF_DEF_NAME);\n+\n+            repositoryService.createDeployment().\n+                    addInputStream(WF_DEF_NAME, wfDefinitionStream).deploy();\n+        } finally {\n+            try {\n+                if (wfDefinitionStream != null) {\n+                    wfDefinitionStream.close();\n+                }\n+            } catch (IOException e) {\n+                LOG.error(\"While closing input stream for \"\n+                        + \"user workflow definition\", e);\n+            }\n+        }\n+    }\n+}"},{"sha":"55297e4d704785b747dc3651462bdb09660437a3","filename":"core/src/main/java/org/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -29,6 +29,8 @@\n public class SpringContextInitializer implements ServletContextAware,\n         BeanFactoryAware, InitializingBean {\n \n+    private static Boolean DONE = false;\n+\n     @Autowired\n     private ConnInstanceLoader connInstanceLoader;\n \n@@ -38,6 +40,9 @@ public class SpringContextInitializer implements ServletContextAware,\n     @Autowired\n     private JobInstanceLoader jobInstanceLoader;\n \n+    @Autowired\n+    private ActivitiWorkflowLoader activitiWorkflowLoader;\n+\n     @Override\n     public void setServletContext(final ServletContext servletContext) {\n     }\n@@ -51,8 +56,17 @@ public void setBeanFactory(final BeanFactory beanFactory)\n     public void afterPropertiesSet()\n             throws Exception {\n \n+        synchronized (SpringContextInitializer.class) {\n+            if (!DONE) {\n+                DONE = true;\n+            } else {\n+                return;\n+            }\n+        }\n+\n         contentLoader.load();\n         connInstanceLoader.load();\n         jobInstanceLoader.load();\n+        activitiWorkflowLoader.load();\n     }\n }"},{"sha":"20125401201b572043d90b58d5d39711f7e193c4","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":12,"deletions":19,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -43,6 +43,7 @@\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n import javax.validation.Valid;\n+import javax.validation.constraints.NotNull;\n import org.apache.commons.lang.RandomStringUtils;\n import org.hibernate.annotations.Type;\n import org.springframework.security.core.codec.Base64;\n@@ -75,6 +76,7 @@ public class SyncopeUser extends AbstractAttributable {\n     @Id\n     private Long id;\n \n+    @NotNull\n     private String password;\n \n     private transient String clearPassword;\n@@ -196,6 +198,10 @@ public String getClearPassword() {\n         return clearPassword;\n     }\n \n+    public void removeClearPassword() {\n+        clearPassword = null;\n+    }\n+\n     /**\n      * @param password the password to be set\n      */\n@@ -208,10 +214,8 @@ public void setPassword(\n         clearPassword = password;\n \n         try {\n-\n             this.password = encodePassword(password, cipherAlgoritm);\n             this.cipherAlgorithm = cipherAlgoritm;\n-\n         } catch (Throwable t) {\n             LOG.error(\"Could not encode password\", t);\n             this.password = null;\n@@ -306,28 +310,17 @@ public void setStatus(String status) {\n         this.status = status;\n     }\n \n-    public void generateToken(\n-            int tokenLength, int tokenExpireTime) {\n-        generateToken(tokenLength, tokenExpireTime, null);\n-    }\n-\n-    public void generateToken(\n-            int tokenLength, int tokenExpireTime, String token) {\n-\n-        if (token == null) {\n-            token = RandomStringUtils.randomAlphanumeric(tokenLength);\n-        }\n-\n-        this.token = token;\n+    public void generateToken(int tokenLength, int tokenExpireTime) {\n+        this.token = RandomStringUtils.randomAlphanumeric(tokenLength);\n \n         Calendar calendar = Calendar.getInstance();\n         calendar.add(Calendar.MINUTE, tokenExpireTime);\n         this.tokenExpireTime = calendar.getTime();\n     }\n \n     public void removeToken() {\n-        token = null;\n-        tokenExpireTime = null;\n+        this.token = null;\n+        this.tokenExpireTime = null;\n     }\n \n     public String getToken() {\n@@ -339,8 +332,8 @@ public Date getTokenExpireTime() {\n     }\n \n     public boolean checkToken(final String token) {\n-        return this.token != null && this.token.equals(token)\n-                && tokenExpireTime.after(new Date());\n+        return this.token == null || (this.token.equals(token)\n+                && tokenExpireTime.after(new Date()));\n     }\n \n     public CipherAlgorithm getCipherAlgoritm() {"},{"sha":"6253dbba6652ae58fd659d4d7c49b9d36cab6250","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConfDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -23,6 +23,8 @@ public interface ConfDAO extends DAO {\n     SyncopeConf find(String name)\n             throws MissingConfKeyException;\n \n+    SyncopeConf find(String name, String defaultValue);\n+\n     List<SyncopeConf> findAll();\n \n     SyncopeConf save(SyncopeConf syncopeConfiguration)"},{"sha":"fe92b3cf21183edf3535a2295c1b86b8d68e145b","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -25,7 +25,7 @@ public interface UserDAO extends DAO {\n \n     SyncopeUser find(Long id);\n \n-    SyncopeUser findByWorkflowId(Long workflowId);\n+    SyncopeUser findByWorkflowId(String workflowId);\n \n     List<SyncopeUser> findByDerAttrValue(String schemaName, String value)\n             throws InvalidSearchConditionException;"},{"sha":"84674c4e40888ef76518ffc5d52df02db94d34c9","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConfDAOImpl.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -28,14 +28,26 @@ public class ConfDAOImpl extends AbstractDAOImpl implements ConfDAO {\n     public SyncopeConf find(final String name)\n             throws MissingConfKeyException {\n \n-        SyncopeConf syncopeConfiguration =\n+        SyncopeConf result = find(name, null);\n+        if (result == null) {\n+            throw new MissingConfKeyException(name);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public SyncopeConf find(final String name, final String defaultValue) {\n+        SyncopeConf syncopeConf =\n                 entityManager.find(SyncopeConf.class, name);\n \n-        if (syncopeConfiguration == null) {\n-            throw new MissingConfKeyException(name);\n+        if (syncopeConf == null && defaultValue != null) {\n+            syncopeConf = new SyncopeConf();\n+            syncopeConf.setKey(name);\n+            syncopeConf.setValue(defaultValue);\n         }\n \n-        return syncopeConfiguration;\n+        return syncopeConf;\n     }\n \n     @Override"},{"sha":"4ba84f7d014f70a075d5c6a542115fbc1db51bd6","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -76,7 +76,7 @@ public SyncopeUser find(final Long id) {\n     }\n \n     @Override\n-    public SyncopeUser findByWorkflowId(final Long workflowId) {\n+    public SyncopeUser findByWorkflowId(final String workflowId) {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n                 + \"WHERE e.workflowId = :workflowId\");"},{"sha":"371a24f7668dcd06ad92fd2a175e88e04f0e7865","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationByResource.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.persistence.propagation;\n \n+import java.io.Serializable;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -26,7 +27,9 @@\n  * Utility class for encapsulating operations to be performed on various\n  * resources.\n  */\n-public class PropagationByResource {\n+public class PropagationByResource implements Serializable {\n+\n+    private static final long serialVersionUID = -5699740428104336636L;\n \n     /**\n      * Resources for creation."},{"sha":"aeaf98e81454f637447f11036940ff780819cf75","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttributableValidator.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -74,8 +74,11 @@ public boolean isValid(\n                         // or during password update\n                         enforcer.enforce(\n                                 passwordPolicy, policy.getType(), password);\n-                    }\n \n+                        // password has been validated, let's remove its\n+                        // clear version\n+                        ((SyncopeUser) object).removeClearPassword();\n+                    }\n                 } catch (Exception e) {\n                     LOG.debug(\"Invalid password\");\n "},{"sha":"8c858d83fc4861e52bd8e83713a289314a1ae317","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/EntityValidationInterceptor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -56,7 +56,8 @@ public final Object save(final ProceedingJoinPoint pjp)\n                 validator.validate(pjp.getArgs()[0]);\n         if (!violations.isEmpty()) {\n             LOG.error(\"Bean validation errors found: {}\", violations);\n-            throw new InvalidEntityException(violations);\n+            throw new InvalidEntityException(\n+                    pjp.getArgs()[0].getClass().getSimpleName(), violations);\n         }\n \n         return pjp.proceed();"},{"sha":"d5238d307bbbed91f5e5cc37141f785140383e04","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/InvalidEntityException.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -24,13 +24,17 @@\n \n public class InvalidEntityException extends ValidationException {\n \n+    private String entityClassSimpleName;\n+\n     private final Map<Class, Set<EntityViolationType>> violations;\n \n-    public InvalidEntityException(\n+    public InvalidEntityException(final String entityClassSimpleName,\n             final Set<ConstraintViolation<Object>> violations) {\n \n         super();\n \n+        this.entityClassSimpleName = entityClassSimpleName;\n+\n         this.violations = new HashMap<Class, Set<EntityViolationType>>();\n         EntityViolationType entityViolationType;\n         for (ConstraintViolation<Object> violation : violations) {\n@@ -67,6 +71,10 @@ public final boolean hasViolation(final EntityViolationType type) {\n         return found;\n     }\n \n+    public String getEntityClassSimpleName() {\n+        return entityClassSimpleName;\n+    }\n+\n     public final Map<Class, Set<EntityViolationType>> getViolations() {\n         return violations;\n     }"},{"sha":"dd272521e6f2a36a7efe695d6b51d4de8abc31bd","filename":"core/src/main/java/org/syncope/core/rest/controller/PolicyController.java","status":"modified","additions":10,"deletions":60,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -20,8 +20,6 @@\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-import java.util.Map;\n-import java.util.Set;\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n import org.springframework.http.HttpStatus;\n@@ -36,14 +34,10 @@\n import org.syncope.client.to.PolicyTO;\n import org.syncope.client.to.SyncPolicyTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.Policy;\n import org.syncope.core.persistence.dao.PolicyDAO;\n-import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.core.rest.data.PolicyDataBinder;\n-import org.syncope.types.EntityViolationType;\n import org.syncope.types.PolicyType;\n-import org.syncope.types.SyncopeClientExceptionType;\n \n @Controller\n @RequestMapping(\"/policy\")\n@@ -95,38 +89,17 @@ private PolicyTO create(final Policy policy, final PolicyTO policyTO)\n                 new SyncopeClientCompositeErrorException(\n                 HttpStatus.BAD_REQUEST);\n \n-        try {\n+        Policy actual = policyDAO.save(policy);\n+        policyTO.setId(actual.getId());\n \n-            Policy actual = policyDAO.save(policy);\n-            policyTO.setId(actual.getId());\n-\n-            return policyTO;\n-\n-        } catch (InvalidEntityException e) {\n-            LOG.error(\"Policy {} cannot be crated\", policy);\n-\n-            SyncopeClientException sce = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidPolicy);\n-\n-            for (Map.Entry<Class, Set<EntityViolationType>> violation :\n-                    e.getViolations().entrySet()) {\n-\n-                for (EntityViolationType violationType : violation.getValue()) {\n-                    sce.addElement(violation.getClass().getSimpleName() + \": \"\n-                            + violationType);\n-                }\n-            }\n-\n-            scce.addException(sce);\n-            throw scce;\n-        }\n+        return policyTO;\n     }\n \n     @PreAuthorize(\"hasRole('POLICY_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/password/update\")\n     public PasswordPolicyTO update(final HttpServletResponse response,\n             final @RequestBody PasswordPolicyMod policyMod)\n-            throws NotFoundException, SyncopeClientCompositeErrorException {\n+            throws NotFoundException {\n \n         LOG.debug(\"Updating policy \" + policyMod);\n \n@@ -165,40 +138,15 @@ public SyncPolicyTO update(final HttpServletResponse response,\n     }\n \n     private Policy update(final Policy policy)\n-            throws NotFoundException, SyncopeClientCompositeErrorException {\n+            throws NotFoundException {\n \n         LOG.debug(\"Updating policy \" + policy.getId());\n \n         if (policy.getId() == null) {\n             throw new NotFoundException(\"Policy with null id\");\n         }\n \n-        SyncopeClientCompositeErrorException scce =\n-                new SyncopeClientCompositeErrorException(\n-                HttpStatus.BAD_REQUEST);\n-\n-        try {\n-\n-            return policyDAO.save(policy);\n-\n-        } catch (InvalidEntityException e) {\n-            LOG.error(\"Policy {} cannot be crated\", policy);\n-\n-            SyncopeClientException sce = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidPolicy);\n-\n-            for (Map.Entry<Class, Set<EntityViolationType>> violation :\n-                    e.getViolations().entrySet()) {\n-\n-                for (EntityViolationType violationType : violation.getValue()) {\n-                    sce.addElement(violation.getClass().getSimpleName() + \": \"\n-                            + violationType);\n-                }\n-            }\n-\n-            scce.addException(sce);\n-            throw scce;\n-        }\n+        return policyDAO.save(policy);\n     }\n \n     @PreAuthorize(\"hasRole('POLICY_LIST')\")\n@@ -223,7 +171,8 @@ public List<PolicyTO> listByType(\n     @PreAuthorize(\"hasRole('POLICY_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/password/global/read\")\n     public PasswordPolicyTO getGlobalPasswordPolicy(\n-            final HttpServletResponse response) throws NotFoundException {\n+            final HttpServletResponse response)\n+            throws NotFoundException {\n \n         LOG.debug(\"Reading password policy\");\n         Policy policy = policyDAO.getGlobalPasswordPolicy();\n@@ -238,7 +187,8 @@ public PasswordPolicyTO getGlobalPasswordPolicy(\n     @PreAuthorize(\"hasRole('POLICY_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/account/global/read\")\n     public AccountPolicyTO getGlobalAccountPolicy(\n-            final HttpServletResponse response) throws NotFoundException {\n+            final HttpServletResponse response)\n+            throws NotFoundException {\n \n         LOG.debug(\"Reading account policy\");\n         Policy policy = policyDAO.getGlobalAccountPolicy();"},{"sha":"dbfebd387a56cbad9211262477ecab84f809a098","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":2,"deletions":17,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -37,7 +37,6 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.RoleDAO;\n-import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.core.rest.data.ResourceDataBinder;\n import org.syncope.types.SyncopeClientExceptionType;\n \n@@ -97,14 +96,7 @@ public ResourceTO create(final HttpServletResponse response,\n             throw scce;\n         }\n \n-        try {\n-            resource = resourceDAO.save(resource);\n-        } catch (InvalidEntityException e) {\n-            SyncopeClientException ex = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidSchemaMapping);\n-            scce.addException(ex);\n-            throw scce;\n-        }\n+        resource = resourceDAO.save(resource);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return binder.getResourceTO(resource);\n@@ -147,14 +139,7 @@ public ResourceTO update(final HttpServletResponse response,\n             throw scce;\n         }\n \n-        try {\n-            resource = resourceDAO.save(resource);\n-        } catch (InvalidEntityException e) {\n-            SyncopeClientException ex = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidSchemaMapping);\n-            scce.addException(ex);\n-            throw scce;\n-        }\n+        resource = resourceDAO.save(resource);\n \n         return binder.getResourceTO(resource);\n     }"},{"sha":"d0eddcc5522614672a1a40ac2a8ea099bf7283ad","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":70,"deletions":18,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -60,6 +60,23 @@ public class UserController extends AbstractController {\n     @Autowired\n     private UserWorkflowAdapter wfAdapter;\n \n+    /**\n+     * Check if roles are allowed to be administered by the caller.\n+     *\n+     * @param roleIds roles to be administered\n+     * @throws UnauthorizedRoleException if permissions are not sufficient\n+     */\n+    private void checkPermissions(final Set<Long> roleIds)\n+            throws UnauthorizedRoleException {\n+\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n+                EntitlementUtil.getOwnedEntitlementNames());\n+        roleIds.removeAll(adminRoleIds);\n+        if (!roleIds.isEmpty()) {\n+            throw new UnauthorizedRoleException(roleIds);\n+        }\n+    }\n+\n     private SyncopeUser getUserFromId(final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n@@ -68,19 +85,11 @@ private SyncopeUser getUserFromId(final Long userId)\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        // Check if roles requested for this user are allowed to be\n-        // administrated by the caller\n-        Set<Long> roleIds =\n-                new HashSet<Long>(user.getRoles().size());\n+        Set<Long> roleIds = new HashSet<Long>(user.getRoles().size());\n         for (SyncopeRole role : user.getRoles()) {\n             roleIds.add(role.getId());\n         }\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n-                EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n-        }\n+        checkPermissions(roleIds);\n \n         return user;\n     }\n@@ -247,19 +256,12 @@ public UserTO create(final HttpServletResponse response,\n         LOG.debug(\"User create called with parameters {}\\n{}\\n{}\",\n                 new Object[]{userTO, mandatoryRoles, mandatoryResources});\n \n-        // Check if roles requested for this user are allowed to be\n-        // administrated by the caller\n         Set<Long> requestRoleIds =\n                 new HashSet<Long>(userTO.getMemberships().size());\n         for (MembershipTO membership : userTO.getMemberships()) {\n             requestRoleIds.add(membership.getRoleId());\n         }\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n-                EntitlementUtil.getOwnedEntitlementNames());\n-        requestRoleIds.removeAll(adminRoleIds);\n-        if (!requestRoleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(requestRoleIds);\n-        }\n+        checkPermissions(requestRoleIds);\n \n         final UserTO savedTO = userDataBinder.getUserTO(\n                 wfAdapter.create(userTO, mandatoryRoles, mandatoryResources));\n@@ -270,6 +272,22 @@ public UserTO create(final HttpServletResponse response,\n         return savedTO;\n     }\n \n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/activate\")\n+    public UserTO activate(@RequestBody final UserTO userTO)\n+            throws WorkflowException, NotFoundException,\n+            UnauthorizedRoleException, PropagationException {\n+\n+        final UserTO savedTO = userDataBinder.getUserTO(\n+                wfAdapter.activate(getUserFromId(userTO.getId()),\n+                userTO.getToken()));\n+\n+        LOG.debug(\"About to return activated user\\n{}\", savedTO);\n+\n+        return savedTO;\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n@@ -293,6 +311,40 @@ public UserTO update(@RequestBody final UserMod userMod,\n         return updatedTO;\n     }\n \n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/suspend/{userId}\")\n+    public UserTO suspend(@PathVariable(\"userId\") final Long userId)\n+            throws NotFoundException, WorkflowException,\n+            UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to suspend \" + userId);\n+\n+        final UserTO savedTO = userDataBinder.getUserTO(\n+                wfAdapter.suspend(getUserFromId(userId)));\n+\n+        LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n+\n+        return savedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/reactivate/{userId}\")\n+    public UserTO reactivate(final @PathVariable(\"userId\") Long userId)\n+            throws NotFoundException, WorkflowException,\n+            UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to reactivate \" + userId);\n+\n+        final UserTO savedTO = userDataBinder.getUserTO(\n+                wfAdapter.reactivate(getUserFromId(userId)));\n+\n+        LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n+\n+        return savedTO;\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE,\n     value = \"/delete/{userId}\")"},{"sha":"dfbbb6df0e5d0fece9ff815596c382046ca0f996","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -135,7 +135,7 @@ public <T extends AbstractDerSchema> AbstractSchema update(\n \n         if (validationExceptionFound) {\n             SyncopeClientException e = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidUpdate);\n+                    SyncopeClientExceptionType.InvalidSchema);\n             e.addElement(schema.getName());\n \n             scce.addException(e);"},{"sha":"264572dfe6398f0c5ee9907d1f11722cd715e29d","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -24,7 +24,6 @@\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n@@ -40,7 +39,6 @@\n import org.syncope.types.CipherAlgorithm;\n import org.syncope.types.PasswordPolicy;\n import org.syncope.types.PropagationOperation;\n-import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n public class UserDataBinder extends AbstractAttributableDataBinder {\n@@ -63,22 +61,13 @@ public void create(final SyncopeUser user, final UserTO userTO)\n             // ignore exceptions\n         }\n \n-        SyncopeClientException invalidPassword = new SyncopeClientException(\n-                SyncopeClientExceptionType.InvalidPassword);\n-\n         if (userTO.getPassword() == null || userTO.getPassword().isEmpty()) {\n             LOG.error(\"No password provided\");\n-\n-            invalidPassword.addElement(\"Null password\");\n         } else {\n             user.setPassword(userTO.getPassword(), getCipherAlgoritm(),\n                     passwordHistorySize);\n         }\n \n-        if (!invalidPassword.getElements().isEmpty()) {\n-            scce.addException(invalidPassword);\n-        }\n-\n         // memberships\n         SyncopeRole role;\n         for (MembershipTO membershipTO : userTO.getMemberships()) {"},{"sha":"140b5f30fbc70a1491ebc67baa6419725609cb90","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"added","additions":274,"deletions":0,"changes":274,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,274 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import javassist.NotFoundException;\n+import org.activiti.engine.ActivitiException;\n+import org.activiti.engine.IdentityService;\n+import org.activiti.engine.RuntimeService;\n+import org.activiti.engine.TaskService;\n+import org.activiti.engine.identity.User;\n+import org.activiti.engine.runtime.ProcessInstance;\n+import org.activiti.engine.task.Task;\n+import org.apache.commons.lang.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.mod.UserMod;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.persistence.propagation.PropagationException;\n+import org.syncope.core.persistence.propagation.PropagationManager;\n+import org.syncope.types.PropagationOperation;\n+\n+/**\n+ * Activiti (http://www.activiti.org/) based implementation.\n+ */\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n+public class ActivitiUserWorkflowAdapter implements UserWorkflowAdapter {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(ActivitiUserWorkflowAdapter.class);\n+\n+    public static final String SYNCOPE_USER = \"syncopeUser\";\n+\n+    public static final String USER_TO = \"userTO\";\n+\n+    public static final String USER_MOD = \"userMod\";\n+\n+    public static final String EMAIL_KIND = \"emailKind\";\n+\n+    public static final String ACTION = \"action\";\n+\n+    public static final String TOKEN = \"token\";\n+\n+    public static String PROP_BY_RESOURCE = \"propByResource\";\n+\n+    @Autowired\n+    private RuntimeService runtimeService;\n+\n+    @Autowired\n+    private TaskService taskService;\n+\n+    @Autowired\n+    private IdentityService identityService;\n+\n+    @Autowired\n+    private UserService userService;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private PropagationManager propagationManager;\n+\n+    private void setStatus(final String processInstanceId,\n+            final SyncopeUser user) {\n+\n+        List<Task> tasks = taskService.createTaskQuery().processInstanceId(\n+                processInstanceId).list();\n+        if (tasks.isEmpty() || tasks.size() > 1) {\n+            LOG.warn(\"While setting user status: unexpected task number ({})\",\n+                    tasks.size());\n+        } else {\n+            user.setStatus(tasks.get(0).getTaskDefinitionKey());\n+        }\n+    }\n+\n+    @Override\n+    public SyncopeUser create(final UserTO userTO,\n+            final Set<Long> mandatoryRoles,\n+            final Set<String> mandatoryResources)\n+            throws WorkflowException, PropagationException {\n+\n+        final Map<String, Object> variables = new HashMap<String, Object>();\n+        variables.put(USER_TO, userTO);\n+\n+        final ProcessInstance processInstance;\n+        try {\n+            processInstance = runtimeService.startProcessInstanceByKey(\n+                    \"userWorkflow\", variables);\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        SyncopeUser user = (SyncopeUser) runtimeService.getVariable(\n+                processInstance.getProcessInstanceId(), SYNCOPE_USER);\n+        setStatus(processInstance.getProcessInstanceId(), user);\n+        user = userDAO.save(user);\n+\n+        // create and save Activiti user\n+        User activitiUser = identityService.newUser(user.getId().toString());\n+        activitiUser.setPassword(userTO.getPassword());\n+        identityService.saveUser(activitiUser);\n+\n+        // Now that user is created locally, let's propagate\n+        Set<String> mandatoryResourceNames =\n+                userService.getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n+                    mandatoryResourceNames);\n+        }\n+\n+        propagationManager.create(\n+                user, userTO.getPassword(), mandatoryResourceNames);\n+\n+        return user;\n+    }\n+\n+    private void doExecuteAction(final SyncopeUser user,\n+            final String action, final Map<String, Object> moreVariables)\n+            throws WorkflowException {\n+\n+        final Map<String, Object> variables = new HashMap<String, Object>();\n+        variables.put(SYNCOPE_USER, user);\n+        variables.put(ACTION, action);\n+        if (moreVariables != null && !moreVariables.isEmpty()) {\n+            variables.putAll(moreVariables);\n+        }\n+\n+        if (StringUtils.isBlank(user.getWorkflowId())) {\n+            throw new WorkflowException(\n+                    new NotFoundException(\"Empty workflow id\"));\n+        }\n+\n+        List<Task> tasks = taskService.createTaskQuery().processInstanceId(\n+                user.getWorkflowId()).list();\n+        if (tasks.isEmpty() || tasks.size() > 1) {\n+            throw new WorkflowException(new RuntimeException(\n+                    \"Expected a single task, found \" + tasks.size()));\n+        }\n+\n+        try {\n+            taskService.complete(tasks.get(0).getId(), variables);\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+    }\n+\n+    @Override\n+    public SyncopeUser activate(final SyncopeUser user, final String token)\n+            throws WorkflowException, PropagationException {\n+\n+        doExecuteAction(user, \"activate\",\n+                Collections.singletonMap(TOKEN, (Object) token));\n+        setStatus(user.getWorkflowId(), user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n+    @Override\n+    public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n+            final Set<Long> mandatoryRoles,\n+            final Set<String> mandatoryResources)\n+            throws WorkflowException, PropagationException {\n+\n+        doExecuteAction(user, \"update\",\n+                Collections.singletonMap(USER_MOD, (Object) userMod));\n+        setStatus(user.getWorkflowId(), user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes =\n+                (PropagationByResource) runtimeService.getVariable(\n+                user.getWorkflowId(), PROP_BY_RESOURCE);\n+\n+        // Now that user is updated locally, let's propagate\n+        Set<String> mandatoryResourceNames =\n+                userService.getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n+                    mandatoryResourceNames);\n+        }\n+\n+        propagationManager.update(updated, userMod.getPassword(),\n+                propByRes, mandatoryResourceNames);\n+\n+        return updated;\n+    }\n+\n+    @Override\n+    public SyncopeUser suspend(final SyncopeUser user)\n+            throws WorkflowException, PropagationException {\n+\n+        doExecuteAction(user, \"suspend\", null);\n+        setStatus(user.getWorkflowId(), user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n+    @Override\n+    public SyncopeUser reactivate(final SyncopeUser user)\n+            throws WorkflowException, PropagationException {\n+\n+        doExecuteAction(user, \"reactivate\", null);\n+        setStatus(user.getWorkflowId(), user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n+    @Override\n+    public void delete(final SyncopeUser user,\n+            final Set<Long> mandatoryRoles,\n+            final Set<String> mandatoryResources)\n+            throws WorkflowException, PropagationException {\n+\n+        // Propagate delete\n+        Set<String> mandatoryResourceNames =\n+                userService.getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate onto these mandatory resources {}\",\n+                    mandatoryResourceNames);\n+        }\n+\n+        propagationManager.delete(user, mandatoryResourceNames);\n+\n+        doExecuteAction(user, \"delete\", null);\n+\n+        identityService.deleteUser(user.getId().toString());\n+    }\n+}"},{"sha":"90eff119ca284458b8d77e87dda1c4af903e8c4e","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":65,"deletions":10,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -18,28 +18,32 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n import org.syncope.core.persistence.propagation.PropagationException;\n import org.syncope.core.persistence.propagation.PropagationManager;\n-import org.syncope.core.rest.controller.UserManager;\n+import org.syncope.types.PropagationOperation;\n \n /**\n  * Simple implementation basically not involving any workflow engine.\n  */\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n public class NoOpUserWorkflowAdapter implements UserWorkflowAdapter {\n \n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(NoOpUserWorkflowAdapter.class);\n \n     @Autowired\n-    private UserManager userManager;\n+    private UserService userService;\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -53,13 +57,13 @@ public SyncopeUser create(final UserTO userTO,\n             final Set<String> mandatoryResources)\n             throws WorkflowException, PropagationException {\n \n-        SyncopeUser user = userManager.create(userTO);\n-        user.setStatus(\"active\");\n+        SyncopeUser user = userService.create(userTO);\n+        user.setStatus(\"created\");\n         user = userDAO.save(user);\n \n         // Now that user is created locally, let's propagate\n         Set<String> mandatoryResourceNames =\n-                userManager.getMandatoryResourceNames(user,\n+                userService.getMandatoryResourceNames(user,\n                 mandatoryRoles, mandatoryResources);\n         if (!mandatoryResourceNames.isEmpty()) {\n             LOG.debug(\"About to propagate onto these mandatory resources {}\",\n@@ -72,18 +76,39 @@ public SyncopeUser create(final UserTO userTO,\n         return user;\n     }\n \n+    @Override\n+    public SyncopeUser activate(final SyncopeUser user, final String token)\n+            throws WorkflowException, PropagationException {\n+\n+        if (!user.checkToken(token)) {\n+            throw new WorkflowException(\n+                    new RuntimeException(\"Wrong token: \" + token));\n+        }\n+\n+        user.removeToken();\n+        user.setStatus(\"active\");\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n     @Override\n     public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n             final Set<Long> mandatoryRoles,\n             final Set<String> mandatoryResources)\n             throws WorkflowException, PropagationException {\n \n         Map.Entry<SyncopeUser, PropagationByResource> updated =\n-                userManager.update(user, userMod);\n+                userService.update(user, userMod);\n \n         // Now that user is updated locally, let's propagate\n         Set<String> mandatoryResourceNames =\n-                userManager.getMandatoryResourceNames(user,\n+                userService.getMandatoryResourceNames(user,\n                 mandatoryRoles, mandatoryResources);\n         if (!mandatoryResourceNames.isEmpty()) {\n             LOG.debug(\"About to propagate onto these mandatory resources {}\",\n@@ -96,6 +121,36 @@ public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n         return updated.getKey();\n     }\n \n+    @Override\n+    public SyncopeUser suspend(final SyncopeUser user)\n+            throws WorkflowException, PropagationException {\n+\n+        user.setStatus(\"suspended\");\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n+    @Override\n+    public SyncopeUser reactivate(final SyncopeUser user)\n+            throws WorkflowException, PropagationException {\n+\n+        user.setStatus(\"active\");\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(\n+                PropagationOperation.UPDATE, user.getTargetResources());\n+        propagationManager.update(user, null, propByRes, null);\n+\n+        return updated;\n+    }\n+\n     @Override\n     public void delete(final SyncopeUser user,\n             final Set<Long> mandatoryRoles,\n@@ -104,7 +159,7 @@ public void delete(final SyncopeUser user,\n \n         // Propagate delete\n         Set<String> mandatoryResourceNames =\n-                userManager.getMandatoryResourceNames(user,\n+                userService.getMandatoryResourceNames(user,\n                 mandatoryRoles, mandatoryResources);\n         if (!mandatoryResourceNames.isEmpty()) {\n             LOG.debug(\"About to propagate onto these mandatory resources {}\",\n@@ -113,6 +168,6 @@ public void delete(final SyncopeUser user,\n \n         propagationManager.delete(user, mandatoryResourceNames);\n \n-        userManager.delete(user);\n+        userService.delete(user);\n     }\n }"},{"sha":"b18272c2babb2649ab97b6bf0e522226e4daf419","filename":"core/src/main/java/org/syncope/core/workflow/UserService.java","status":"renamed","additions":8,"deletions":62,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -11,38 +11,29 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.syncope.core.rest.controller;\n+package org.syncope.core.workflow;\n \n import java.util.Collections;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.HttpStatus;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.core.rest.data.UserDataBinder;\n-import org.syncope.types.EntityViolationType;\n-import org.syncope.types.SyncopeClientExceptionType;\n \n-public class UserManager {\n-\n-    /**\n-     * Logger.\n-     */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(UserManager.class);\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n+public class UserService {\n \n     @Autowired\n     private UserDataBinder userDataBinder;\n@@ -84,60 +75,15 @@ public SyncopeUser create(final UserTO userTO)\n         SyncopeUser user = new SyncopeUser();\n         userDataBinder.create(user, userTO);\n \n-        try {\n-            user = userDAO.save(user);\n-        } catch (InvalidEntityException e) {\n-            SyncopeClientCompositeErrorException scce =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n-            SyncopeClientException sce = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidPassword);\n-\n-            for (Map.Entry<Class, Set<EntityViolationType>> violation :\n-                    e.getViolations().entrySet()) {\n-\n-                for (EntityViolationType violationType : violation.getValue()) {\n-                    sce.addElement(violationType.toString());\n-                }\n-            }\n-\n-            scce.addException(sce);\n-            throw scce;\n-        }\n-\n-        return user;\n+        return userDAO.save(user);\n     }\n \n     public Map.Entry<SyncopeUser, PropagationByResource> update(\n             final SyncopeUser user, final UserMod userMod) {\n \n         PropagationByResource propByRes = userDataBinder.update(user, userMod);\n \n-        SyncopeUser updated;\n-        try {\n-            updated = userDAO.save(user);\n-        } catch (InvalidEntityException e) {\n-            SyncopeClientCompositeErrorException scce =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-\n-            SyncopeClientException sce = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidPassword);\n-\n-            for (Map.Entry<Class, Set<EntityViolationType>> violation :\n-                    e.getViolations().entrySet()) {\n-\n-                for (EntityViolationType violationType : violation.getValue()) {\n-                    sce.addElement(violationType.toString());\n-                }\n-            }\n-\n-            scce.addException(sce);\n-            throw scce;\n-        }\n-\n-        return new DefaultMapEntry(updated, propByRes);\n+        return new DefaultMapEntry(userDAO.save(user), propByRes);\n     }\n \n     public void delete(final SyncopeUser user) {","previous_filename":"core/src/main/java/org/syncope/core/rest/controller/UserManager.java"},{"sha":"37ad8daa84ff9e276dfd2ccb870ac4a93642dbea","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -38,6 +38,18 @@ SyncopeUser create(UserTO userTO,\n             Set<Long> mandatoryRoles, Set<String> mandatoryResources)\n             throws WorkflowException, PropagationException;\n \n+    /**\n+     * Activate an user.\n+     *\n+     * @param user user to be activated\n+     * @param token to be verified for activation\n+     * @return user just updated\n+     * @throws WorkflowException workflow exception\n+     * @throws PropagationException propagation exception\n+     */\n+    SyncopeUser activate(SyncopeUser user, String token)\n+            throws WorkflowException, PropagationException;\n+\n     /**\n      * Updated an user.\n      *\n@@ -53,6 +65,28 @@ SyncopeUser update(SyncopeUser user, UserMod userMod,\n             Set<Long> mandatoryRoles, Set<String> mandatoryResources)\n             throws WorkflowException, PropagationException;\n \n+    /**\n+     * Suspend an user.\n+     *\n+     * @param user user to be suspended\n+     * @return user just suspended\n+     * @throws WorkflowException workflow exception\n+     * @throws PropagationException propagation exception\n+     */\n+    SyncopeUser suspend(SyncopeUser user)\n+            throws WorkflowException, PropagationException;\n+\n+    /**\n+     * Suspend an user.\n+     *\n+     * @param user user to be reactivated\n+     * @return user just reactivated\n+     * @throws WorkflowException workflow exception\n+     * @throws PropagationException propagation exception\n+     */\n+    SyncopeUser reactivate(SyncopeUser user)\n+            throws WorkflowException, PropagationException;\n+\n     /**\n      * Delete an user.\n      *"},{"sha":"052714ab102902a2ccacdd66176b80ebc945754d","filename":"core/src/main/java/org/syncope/core/workflow/activiti/AbstractActivitiDelegate.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractActivitiDelegate.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.TaskService;\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.activiti.engine.delegate.JavaDelegate;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.syncope.core.persistence.dao.ConfDAO;\n+import org.syncope.core.workflow.UserService;\n+import org.syncope.core.util.ApplicationContextManager;\n+\n+/**\n+ * Abstract base class for Activiti's JavaDelegate implementations in Syncope.\n+ */\n+public abstract class AbstractActivitiDelegate implements JavaDelegate {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(AbstractActivitiDelegate.class);\n+\n+    protected static final ConfigurableApplicationContext CONTEXT =\n+            ApplicationContextManager.getApplicationContext();\n+\n+    protected TaskService taskService;\n+\n+    protected UserService userService;\n+\n+    protected ConfDAO confDAO;\n+\n+    @Override\n+    public final void execute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        taskService = CONTEXT.getBean(TaskService.class);\n+\n+        userService = CONTEXT.getBean(UserService.class);\n+        confDAO = CONTEXT.getBean(ConfDAO.class);\n+\n+        doExecute(execution);\n+    }\n+\n+    protected abstract void doExecute(DelegateExecution execution)\n+            throws Exception;\n+}"},{"sha":"00b6b51c57dae686e878e6d24fbe5749e40af120","filename":"core/src/main/java/org/syncope/core/workflow/activiti/AbstractSendEmail.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import javax.mail.internet.MimeMessage;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+import org.springframework.mail.javamail.MimeMessageHelper;\n+\n+/**\n+ * Abstract class for sending e-mail from workflow using Sprning, providing an \n+ * utility method for such purpose.\n+ *\n+ * The main difference with Activiti's MailTask is that this class will not\n+ * throw any exception when not able to send e-mail.\n+ */\n+public abstract class AbstractSendEmail extends AbstractActivitiDelegate {\n+\n+    /**\n+     * Utility method for sending e-mail using Spring.\n+     *\n+     * @param smtpHost SMTP server host\n+     * @param to recipient\n+     * @param from sender\n+     * @param subject Subject\n+     * @param textBody E-mail body (text)\n+     * @param htmlBody E-mail body (HTML)\n+     */\n+    protected void sendMail(final String smtpHost,\n+            final String to,\n+            final String from,\n+            final String subject,\n+            final String textBody,\n+            final String htmlBody) {\n+\n+        try {\n+            JavaMailSenderImpl sender = new JavaMailSenderImpl();\n+            sender.setHost(smtpHost);\n+\n+            MimeMessage message = sender.createMimeMessage();\n+            MimeMessageHelper helper = new MimeMessageHelper(message, true);\n+\n+            helper.setTo(to);\n+            helper.setFrom(from);\n+            helper.setSubject(subject);\n+            helper.setText(textBody, htmlBody);\n+\n+            sender.send(message);\n+        } catch (Throwable t) {\n+            LOG.error(\"Could not send e-mail\", t);\n+        }\n+    }\n+}"},{"sha":"bb615bda5c9b097e0dd9506941941d28202d7d02","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Create.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FCreate.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+public class Create extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        UserTO userTO = (UserTO) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.USER_TO);\n+\n+        // create, set workflow id and save SyncopeUser\n+        SyncopeUser user = userService.create(userTO);\n+        user.setWorkflowId(execution.getProcessInstanceId());\n+\n+        // report SyncopeUser as result\n+        execution.setVariable(\n+                ActivitiUserWorkflowAdapter.SYNCOPE_USER, user);\n+    }\n+}"},{"sha":"e2d278449793e9694620ee3ab6c6beb0107a8371","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Delete.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FDelete.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+public class Delete extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        SyncopeUser user = (SyncopeUser) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+\n+        // delete SyncopeUser\n+        CONTEXT.getBean(UserDAO.class).delete(user);\n+\n+        // remove SyncopeUser variable\n+        execution.removeVariable(ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+    }\n+}"},{"sha":"9af5dee15154e9c5789d4e381f43fc941ddb0c9b","filename":"core/src/main/java/org/syncope/core/workflow/activiti/GenerateToken.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FGenerateToken.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+public class GenerateToken extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        SyncopeUser user = (SyncopeUser) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+\n+        user.generateToken(Integer.parseInt(\n+                confDAO.find(\"token.length\", \"256\").getValue()),\n+                Integer.parseInt(\n+                confDAO.find(\"token.expireTime\", \"60\").getValue()));\n+    }\n+}"},{"sha":"22cdf0a4e7a8fe8f88344e2e5783b7d8811e730f","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Reactivate.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FReactivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FReactivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FReactivate.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,24 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+\n+public class Reactivate extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+    }\n+}"},{"sha":"e6156778ce9a092ce597cff1b15190bfbacee084","filename":"core/src/main/java/org/syncope/core/workflow/activiti/SendVelocityEmail.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.velocity.app.VelocityEngine;\n+import org.apache.velocity.exception.VelocityException;\n+import org.springframework.ui.velocity.VelocityEngineUtils;\n+import org.syncope.core.persistence.beans.AbstractAttr;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+/**\n+ * Send e-mail from workflow using Velocity for rendering e-mail body.\n+ */\n+public class SendVelocityEmail extends AbstractSendEmail {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        final SyncopeUser user = (SyncopeUser) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+\n+//        final String emailKind = (String) execution.getVariable(\n+//                ActivitiUserWorkflowAdapter.EMAIL_KIND);\n+        final String emailKind = \"optin\";\n+\n+        final Map<String, Object> model = new HashMap<String, Object>();\n+        List<String> values;\n+        for (AbstractAttr attr : user.getAttributes()) {\n+            values = attr.getValuesAsStrings();\n+            model.put(attr.getSchema().getName(),\n+                    values.isEmpty()\n+                    ? \"\"\n+                    : (values.size() == 1\n+                    ? values.iterator().next() : values));\n+        }\n+\n+        final String smtpHost = confDAO.find(\"smtp.host\", \"\").getValue();\n+        final String from =\n+                confDAO.find(emailKind + \".email.from\", \"\").getValue();\n+        final String subject = confDAO.find(emailKind + \".email.subject\", \"\").\n+                getValue();\n+        final String to = user.getAttribute(\"email\") != null\n+                ? user.getAttribute(\"email\").getValuesAsStrings().\n+                iterator().next() : null;\n+\n+        VelocityEngine velocityEngine = CONTEXT.getBean(VelocityEngine.class);\n+\n+        String htmlBody;\n+        String txtBody;\n+        try {\n+            htmlBody =\n+                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n+                    \"mailTemplates/\" + emailKind + \".html.vm\",\n+                    model);\n+            txtBody =\n+                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n+                    \"mailTemplates/\" + emailKind + \".txt.vm\",\n+                    model);\n+        } catch (VelocityException e) {\n+            LOG.error(\"Could not get mail body\", e);\n+\n+            htmlBody = \"\";\n+            txtBody = \"\";\n+        }\n+\n+        if (StringUtils.isBlank(smtpHost) || StringUtils.isBlank(from)\n+                || StringUtils.isBlank(subject) || StringUtils.isBlank(to)\n+                || StringUtils.isBlank(htmlBody)\n+                || StringUtils.isBlank(txtBody)) {\n+\n+            LOG.error(\"Could not fetch all required information for \"\n+                    + \"sending the email:\\n\"\n+                    + smtpHost + \"\\n\"\n+                    + to + \"\\n\"\n+                    + from + \"\\n\"\n+                    + subject + \"\\n\"\n+                    + htmlBody + \"\\n\"\n+                    + txtBody + \"\\n\");\n+        } else {\n+            super.sendMail(smtpHost,\n+                    to,\n+                    from,\n+                    subject,\n+                    txtBody,\n+                    htmlBody);\n+        }\n+    }\n+}"},{"sha":"eb3d43422538e76cf1d9c5c4980e8f50fce9e6d3","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Suspend.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSuspend.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSuspend.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSuspend.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,24 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+\n+public class Suspend extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+    }\n+}"},{"sha":"ac1297454e5124d340b6bfa4583a915a7966c5fb","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Update.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import java.util.Map;\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.syncope.client.mod.UserMod;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+public class Update extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        SyncopeUser user = (SyncopeUser) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n+        UserMod userMod = (UserMod) execution.getVariable(\n+                ActivitiUserWorkflowAdapter.USER_MOD);\n+\n+        // update SyncopeUser\n+        Map.Entry<SyncopeUser, PropagationByResource> updated =\n+                userService.update(user, userMod);\n+\n+        // report updated user and propagation by resource as result\n+        execution.setVariable(ActivitiUserWorkflowAdapter.SYNCOPE_USER,\n+                updated.getKey());\n+        execution.setVariable(ActivitiUserWorkflowAdapter.PROP_BY_RESOURCE,\n+                updated.getValue());\n+    }\n+}"},{"sha":"5f30fbf04d6e9ee293c2e9a07e12167c34cd3d54","filename":"core/src/main/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -15,8 +15,8 @@\n <dataset>\n     <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.confKey\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n+    <SyncopeConf confKey=\"smtp.host\" confValue=\"${smtp.host}\"/>\n+    <SyncopeConf confKey=\"smtp.port\" confValue=\"${smtp.port}\"/>\n     <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n     <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>"},{"sha":"1fa24da32e1e546eaa343c4a2f22f6ab4a808822","filename":"core/src/main/resources/logback.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -169,11 +169,6 @@\n         <appender-ref ref=\"rest\"/>\n     </logger>\n \n-    <logger name=\"org.apache.velocity\" additivity=\"false\">\n-        <level value=\"INFO\"/>\n-        <appender-ref ref=\"rest\"/>\n-    </logger>\n-\n     <logger name=\"org.hibernate\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"persistence\"/>"},{"sha":"7a54d80460c10f27725234de7e4eb43623db2783","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -114,5 +114,5 @@\n     <bean id=\"validator\"\n           class=\"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean\"/>\n           \n-    <bean class=\"org.syncope.core.rest.controller.UserManager\"/>\n+    <bean class=\"org.syncope.core.workflow.UserService\"/>\n </beans>"},{"sha":"aed4a564f5dec401e7fe25d0aca895a94d9829d1","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":94,"deletions":3,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -25,11 +25,102 @@\n   \n     <process id=\"userWorkflow\" name=\"User Workflow\">\n   \n-        <startEvent id=\"theStart\" />\n+        <startEvent id=\"theStart\"/>\n     \n-        <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"theEnd\" />\n+        <!-- Create an user -->\n+        <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"create\"/>\n       \n-        <endEvent id=\"theEnd\" />\n+        <serviceTask id=\"create\" name=\"Create\" activiti:class=\"org.syncope.core.workflow.activiti.Create\"/>\n+\n+        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"active\"/>\n+        <!-- Uncomment the following lines and comment the above line in order to\n+             enable opt-in.\n+        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"generateToken\"/>\n+        \n+        <serviceTask id=\"generateToken\" name=\"Generate token\" activiti:class=\"org.syncope.core.workflow.activiti.GenerateToken\"/>\n+        \n+        <sequenceFlow id=\"flow3\" sourceRef=\"generateToken\" targetRef=\"optinEmail\"/>\n+\n+        <serviceTask id=\"optinEmail\" name=\"Send opt-in e-mail\" activiti:class=\"org.syncope.core.workflow.activiti.SendVelocityEmail\"/>\n+\n+        <sequenceFlow id=\"flow4\" sourceRef=\"optinEmail\" targetRef=\"created\"/>\n+\n+        <userTask id=\"created\" name=\"Created\"/>\n+\n+        <sequenceFlow id=\"flow5\" sourceRef=\"created\" targetRef=\"createdGw\"/>\n+\n+        <exclusiveGateway id=\"createdGw\"/>\n+        <sequenceFlow id=\"created2Activate\" sourceRef=\"createdGw\" targetRef=\"activate\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">\n+                <![CDATA[${action == 'activate' && syncopeUser.checkToken(token)}]]>\n+            </conditionExpression>\n+        </sequenceFlow>  \n+        <sequenceFlow id=\"created2Created\" sourceRef=\"createdGw\" targetRef=\"created\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">\n+                <![CDATA[${action == 'activate' && !syncopeUser.checkToken(token)}]]>\n+            </conditionExpression>\n+        </sequenceFlow>  \n+        <sequenceFlow id=\"created2Delete\" sourceRef=\"createdGw\" targetRef=\"delete\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n+        </sequenceFlow>--> \n+        \n+        <!-- Activate an user -->\n+        <!--<scriptTask id=\"activate\" name=\"Activate\" scriptFormat=\"juel\">\n+            <script>\n+            syncopeUser.removeToken()    \n+            </script>\n+        </scriptTask>\n+\n+        <sequenceFlow id=\"flow6\" sourceRef=\"activate\" targetRef=\"active\"/>-->\n+\n+        <userTask id=\"active\" name=\"Active\"/>\n+        \n+        <sequenceFlow id=\"flow7\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n+\n+        <exclusiveGateway id=\"activeGw\"/>\n+        <sequenceFlow id=\"active2Update\" sourceRef=\"activeGw\" targetRef=\"update\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'update'}</conditionExpression>\n+        </sequenceFlow>  \n+        <sequenceFlow id=\"active2Suspend\" sourceRef=\"activeGw\" targetRef=\"suspend\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'suspend'}</conditionExpression>\n+        </sequenceFlow> \n+        <sequenceFlow id=\"active2Delete\" sourceRef=\"activeGw\" targetRef=\"delete\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n+        </sequenceFlow>\n+\n+        <!-- Update an active user -->\n+        <serviceTask id=\"update\" name=\"Update\" activiti:class=\"org.syncope.core.workflow.activiti.Update\"/>\n+\n+        <sequenceFlow id=\"flow8\" sourceRef=\"update\" targetRef=\"active\"/>\n+\n+        <!-- Suspend an active user -->\n+        <serviceTask id=\"suspend\" name=\"Suspend\" activiti:class=\"org.syncope.core.workflow.activiti.Suspend\"/>\n+\n+        <sequenceFlow id=\"flow9\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n+\n+        <userTask id=\"suspended\" name=\"Suspended\"/>\n+        \n+        <sequenceFlow id=\"flow10\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n+\n+        <exclusiveGateway id=\"suspendedGw\"/>\n+        <sequenceFlow id=\"suspended2Reactivate\" sourceRef=\"suspendedGw\" targetRef=\"reactivate\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'reactivate'}</conditionExpression>\n+        </sequenceFlow>\n+        <sequenceFlow id=\"suspended2Delete\" sourceRef=\"suspendedGw\" targetRef=\"delete\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n+        </sequenceFlow>\n+\n+        <!-- Reactivate a suspended user -->\n+        <serviceTask id=\"reactivate\" name =\"Reactivate\" activiti:class=\"org.syncope.core.workflow.activiti.Reactivate\"/>\n+\n+        <sequenceFlow id=\"flow11\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n+\n+        <!-- Delete an user (created, active or suspended) -->\n+        <serviceTask id=\"delete\" name=\"Delete\" activiti:class=\"org.syncope.core.workflow.activiti.Delete\"/>\n+\n+        <sequenceFlow id=\"flow12\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n+\n+        <endEvent id=\"theEnd\"/>\n       \n     </process>\n   "},{"sha":"37f03f4db283fd69981ebfebce8564db78c04f44","filename":"core/src/main/resources/workflow.properties","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -1 +1,5 @@\n-wfAdapter=org.syncope.core.workflow.NoOpUserWorkflowAdapter\n\\ No newline at end of file\n+wfAdapter=org.syncope.core.workflow.ActivitiUserWorkflowAdapter\n+jobExecutorActivate=true\n+\n+smtp.host=smtp.ngi.it\n+smtp.port=25\n\\ No newline at end of file"},{"sha":"a0b377f2fb53ca448c6215873a80154229687eba","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -25,10 +25,10 @@\n         <property name=\"databaseSchemaUpdate\" value=\"true\" />\n         \n         <property name=\"jpaEntityManagerFactory\" ref=\"entityManagerFactory\" />\n-        <property name=\"jpaHandleTransaction\" value=\"false\" />\n+        <property name=\"jpaHandleTransaction\" value=\"true\" />\n         <property name=\"jpaCloseEntityManager\" value=\"false\" />\n         \n-        <property name=\"jobExecutorActivate\" value=\"false\" />\n+        <property name=\"jobExecutorActivate\" value=\"${jobExecutorActivate}\" />\n     </bean>\n   \n     <bean id=\"processEngine\" class=\"org.activiti.spring.ProcessEngineFactoryBean\">\n@@ -43,4 +43,12 @@\n     <bean id=\"identityService\" factory-bean=\"processEngine\" factory-method=\"getIdentityService\" />\n     <bean id=\"formService\" factory-bean=\"processEngine\" factory-method=\"getFormService\" />\n \n+    <bean id=\"velocityEngine\" class=\"org.springframework.ui.velocity.VelocityEngineFactoryBean\">\n+        <property name=\"velocityProperties\">\n+            <value>\n+          resource.loader=class\n+          class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader\n+            </value>\n+        </property>\n+    </bean>\n </beans>\n\\ No newline at end of file"},{"sha":"f4e40fa705785915589e2b2deb529ae3d694a3c2","filename":"core/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -13,10 +13,10 @@\n   limitations under the License.\n -->\n <web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n-\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \n-        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n-\tversion=\"2.5\">\n+\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\t xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \n+                             http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n+\t version=\"2.5\">\n \n     <display-name>Syncope</display-name>\n "},{"sha":"f9d499871a024f4968689be63abd12a26a432bd8","filename":"core/src/main/webapp/syncopeClientError.jsp","status":"modified","additions":39,"deletions":7,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -1,4 +1,8 @@\n <%@page isErrorPage=\"true\" session=\"false\" contentType=\"application/json\" pageEncoding=\"UTF-8\"%>\n+<%@page import=\"org.syncope.types.EntityViolationType\"%>\n+<%@page import=\"java.util.Set\"%>\n+<%@page import=\"java.util.Map\"%>\n+<%@page import=\"org.syncope.core.persistence.validation.entity.InvalidEntityException\"%>\n <%@page import=\"org.hibernate.exception.ConstraintViolationException\"%>\n <%@page import=\"javax.persistence.PersistenceException\"%>\n <%@page import=\"org.springframework.dao.DataIntegrityViolationException\"%>\n@@ -27,7 +31,28 @@\n \n     int statusCode = HttpServletResponse.SC_INTERNAL_SERVER_ERROR;\n \n-    if (ex instanceof NotFoundException) {\n+    if (ex instanceof InvalidEntityException) {\n+        SyncopeClientExceptionType exType =\n+                SyncopeClientExceptionType.valueOf(\"Invalid\"\n+                + ((InvalidEntityException) ex).getEntityClassSimpleName());\n+\n+        response.setHeader(\n+                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                exType.getHeaderValue());\n+\n+        for (Map.Entry<Class, Set<EntityViolationType>> violation :\n+                ((InvalidEntityException) ex).getViolations().entrySet()) {\n+\n+            for (EntityViolationType violationType : violation.getValue()) {\n+                response.addHeader(\n+                        exType.getElementHeaderName(),\n+                        violation.getClass().getSimpleName() + \": \"\n+                        + violationType);\n+            }\n+        }\n+\n+        statusCode = HttpServletResponse.SC_NOT_FOUND;\n+    } else if (ex instanceof NotFoundException) {\n         response.setHeader(\n                 SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n                 SyncopeClientExceptionType.NotFound.getHeaderValue());\n@@ -37,12 +62,19 @@\n \n         statusCode = HttpServletResponse.SC_NOT_FOUND;\n     } else if (ex instanceof WorkflowException) {\n-        response.setHeader(\n-                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n-                SyncopeClientExceptionType.Workflow.getHeaderValue());\n-        response.setHeader(\n-                SyncopeClientExceptionType.Workflow.getElementHeaderName(),\n-                ex.getCause().getMessage());\n+        if (ex.getCause().getCause().getCause() instanceof ConstraintViolationException) {\n+            response.setHeader(\n+                    SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                    SyncopeClientExceptionType.DuplicateUniqueValue.\n+                    getHeaderValue());\n+        } else {\n+            response.setHeader(\n+                    SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                    SyncopeClientExceptionType.Workflow.getHeaderValue());\n+            response.setHeader(\n+                    SyncopeClientExceptionType.Workflow.getElementHeaderName(),\n+                    ex.getCause().getMessage());\n+        }\n \n         statusCode = HttpServletResponse.SC_BAD_REQUEST;\n     } else if (ex instanceof PropagationException) {"},{"sha":"69619b6fc848301affc8cc86bc707bef5d3a13df","filename":"core/src/test/java/org/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -101,7 +101,7 @@ public void update() {\n                     + \"schema/role/update\", updatedTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             syncopeClientException = scce.getException(\n-                    SyncopeClientExceptionType.InvalidUpdate);\n+                    SyncopeClientExceptionType.InvalidSchema);\n         }\n         assertNotNull(syncopeClientException);\n     }"},{"sha":"fc15da7955418fb392cbec63dc6908ce77cbd254","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -15,8 +15,8 @@\n <dataset>\n     <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.confKey\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"nonexistinghost-on-purpose\"/>\n+    <SyncopeConf confKey=\"smtp.host\" confValue=\"${smtp.host}\"/>\n+    <SyncopeConf confKey=\"smtp.port\" confValue=\"${smtp.port}\"/>\n     <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n     <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>"},{"sha":"2f1d68f6eb34d586e1a6bf38fc8746ff34a4bcd6","filename":"core/src/test/resources/webxml4dev.xsl","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fwebxml4dev.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fwebxml4dev.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fwebxml4dev.xsl?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                xmlns:javaee=\"http://java.sun.com/xml/ns/javaee\"\n+                xmlns=\"http://java.sun.com/xml/ns/javaee\"\n+                version=\"1.0\">\n+\n+    <xsl:output method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"/>\n+\n+    <xsl:template match=\"javaee:web-app\">\n+        <web-app>\n+            <xsl:apply-templates select=\"@*\"/>\n+\n+            <listener>\n+                <listener-class>org.syncope.core.dev.init.H2ConsoleContextListener</listener-class>    \n+            </listener>\n+        \n+            <xsl:apply-templates/>\n+        </web-app>\n+    </xsl:template>\n+\n+\n+    <xsl:template match=\"node()|@*\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|node()\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+    \n+</xsl:stylesheet>"},{"sha":"4d909dedb82472b5d1ed7a83fd70960089cf533c","filename":"core/src/test/resources/workflow.properties","status":"added","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -0,0 +1,5 @@\n+wfAdapter=org.syncope.core.workflow.ActivitiUserWorkflowAdapter\n+jobExecutorActivate=false\n+\n+smtp.host=not-existing\n+smtp.port=25\n\\ No newline at end of file"},{"sha":"e6e1b56530dd02f1955304d69851313ec38b2ccf","filename":"pom.xml","status":"modified","additions":29,"deletions":1,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d08f52c33240cc765acc69ad663255f2d6f8fe23/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d08f52c33240cc765acc69ad663255f2d6f8fe23/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d08f52c33240cc765acc69ad663255f2d6f8fe23","patch":"@@ -99,7 +99,7 @@\n \n         <hibernate.version>3.6.7.Final</hibernate.version>\n         <hibernate-validator.version>4.2.0.Final</hibernate-validator.version>\n-        <ehcache.version>2.4.5</ehcache.version>\n+        <ehcache.version>2.4.6</ehcache.version>\n \n         <wicket.version>1.5.1</wicket.version>\n \n@@ -473,6 +473,24 @@\n         </repository>\n \n     </repositories>\n+    \n+    <pluginRepositories>\n+\n+        <pluginRepository>\n+            <id>main</id>\n+            <url>http://repo1.maven.org/maven2/</url>\n+        </pluginRepository>\n+\n+        <pluginRepository>\n+            <id>sonatype-public</id>\n+            <name>Sonatype public repository</name>\n+            <url>http://oss.sonatype.org/content/groups/public</url>\n+            <snapshots>\n+                <enabled>true</enabled>\n+            </snapshots>\n+        </pluginRepository>\n+\n+    </pluginRepositories>\n \n     <build>\n         <defaultGoal>package</defaultGoal>\n@@ -558,6 +576,16 @@\n                     <artifactId>cargo-maven2-plugin</artifactId>\n                     <version>1.1.2</version>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>xml-maven-plugin</artifactId>\n+                    <version>1.0</version>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>build-helper-maven-plugin</artifactId>\n+                    <version>1.7</version>\n+                </plugin>\n             </plugins>\n         </pluginManagement>\n         "}]}