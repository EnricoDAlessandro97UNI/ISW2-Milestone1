{"sha":"10299f2c4e12376d1ca9ae700990576a8e15cf08","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEwMjk5ZjJjNGUxMjM3NmQxY2E5YWU3MDA5OTA1NzZhOGUxNWNmMDg=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-17T10:07:15Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-17T10:07:15Z"},"message":"[SYNCOPE-156] fix sidebar management","tree":{"sha":"d33d89bb155946dac814386a77b80d4c9b101237","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d33d89bb155946dac814386a77b80d4c9b101237"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/10299f2c4e12376d1ca9ae700990576a8e15cf08","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10299f2c4e12376d1ca9ae700990576a8e15cf08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10299f2c4e12376d1ca9ae700990576a8e15cf08","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10299f2c4e12376d1ca9ae700990576a8e15cf08/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"54888f6d9059f9e92ebb4dff3b287a2a15eb65a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/54888f6d9059f9e92ebb4dff3b287a2a15eb65a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/54888f6d9059f9e92ebb4dff3b287a2a15eb65a2"}],"stats":{"total":483,"additions":318,"deletions":165},"files":[{"sha":"622d20452bc2829a29f66dde1744ffa0f5cd95a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -65,7 +65,7 @@ public BasePage(final PageParameters parameters) {\n         add(new Label(\"version\", SyncopeConsoleSession.get().getVersion()));\n         add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n \n-        WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n+        final WebMarkupContainer todosContainer = new WebMarkupContainer(\"todosContainer\");\n         add(todosContainer);\n         Label todos = new Label(\"todos\", \"0\");\n         todosContainer.add(todos);\n@@ -176,7 +176,7 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n     }\n-    \n+\n     /**\n      * Set a WindowClosedCallback for a Modal instance.\n      *"},{"sha":"fa480aab8a0b55161ff127e7920f15ab6139e83a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":16,"deletions":142,"changes":158,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -20,35 +20,25 @@\n \n import static org.apache.wicket.Component.ENABLE;\n \n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.panels.RealmModalPanel;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.Entitlement;\n-import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.repeater.RepeatingView;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -60,26 +50,19 @@ public class Realms extends BasePage {\n     @SpringBean\n     private RealmRestClient realmRestClient;\n \n-    private final WebMarkupContainer menu;\n+    private final RealmSidebarPanel realmSidebarPanel;\n \n     private final WebMarkupContainer content;\n \n-    private RealmTO currentRealm;\n-\n     private final BaseModal<RealmTO> modal;\n \n     public Realms(final PageParameters parameters) {\n         super(parameters);\n \n-        final List<RealmTO> realms = realmRestClient.list();\n-        Collections.sort(realms, new RealmNameComparator());\n-\n-        menu = new WebMarkupContainer(\"menu\");\n-        menu.setOutputMarkupId(true);\n-        add(menu);\n-\n-        addRealmTree(getParentMap(realms), 0L, menu);\n-        setCurrentRealm(realms.get(0));\n+        realmSidebarPanel = new RealmSidebarPanel(\"realmSidebarPanel\", getPageReference());\n+        realmSidebarPanel.setMarkupId(\"sidebar\");\n+        realmSidebarPanel.setOutputMarkupId(true);\n+        add(realmSidebarPanel);\n \n         content = new WebMarkupContainer(\"content\");\n         content.add(new Label(\"header\", \"Root realm\"));\n@@ -96,9 +79,7 @@ public Realms(final PageParameters parameters) {\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                final List<RealmTO> realms = realmRestClient.list();\n-                Collections.sort(realms, new RealmNameComparator());\n-                target.add(addRealmTree(getParentMap(realms), 0L, menu));\n+                target.add(realmSidebarPanel.reloadRealmTree());\n \n                 modal.show(false);\n \n@@ -110,83 +91,7 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        updateRealmContent(currentRealm);\n-    }\n-\n-    private MarkupContainer addRealmTree(\n-            final Map<Long, List<RealmTO>> parentMap, final Long key, final MarkupContainer container) {\n-        final RepeatingView listItems = new RepeatingView(\"list\");\n-        listItems.setOutputMarkupId(true);\n-        container.addOrReplace(listItems);\n-\n-        for (final RealmTO realm : parentMap.get(key)) {\n-            final Fragment fragment;\n-\n-            final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n-\n-                private static final long serialVersionUID = -7978723352517770644L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target) {\n-                    Realms.this.setCurrentRealm(realm);\n-                    send(Realms.this, Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n-                }\n-            };\n-\n-            link.addOrReplace(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n-\n-            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).isEmpty()) {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", Realms.this);\n-                addRealmTree(parentMap, realm.getKey(), fragment);\n-            } else {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", Realms.this);\n-            }\n-\n-            fragment.addOrReplace(link);\n-            fragment.setOutputMarkupId(true);\n-            listItems.addOrReplace(fragment);\n-        }\n-\n-        return container;\n-    }\n-\n-    private Map<Long, List<RealmTO>> getParentMap(final List<RealmTO> realms) {\n-        final Map<Long, List<RealmTO>> res = new HashMap<>();\n-        res.put(0L, new ArrayList<RealmTO>());\n-\n-        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n-\n-        for (RealmTO realm : realms) {\n-            if (res.containsKey(realm.getParent())) {\n-                res.get(realm.getParent()).add(realm);\n-\n-                final List<RealmTO> children = new ArrayList<>();\n-                res.put(realm.getKey(), children);\n-\n-                if (cache.containsKey(realm.getKey())) {\n-                    children.addAll(cache.get(realm.getKey()));\n-                    cache.remove(realm.getKey());\n-                }\n-            } else if (cache.containsKey(realm.getParent())) {\n-                cache.get(realm.getParent()).add(realm);\n-            } else {\n-                final List<RealmTO> children = new ArrayList<>();\n-                children.add(realm);\n-                cache.put(realm.getParent(), children);\n-            }\n-        }\n-\n-        return res;\n-    }\n-\n-    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n-\n-        private static final long serialVersionUID = 7085057398406518811L;\n-\n-        @Override\n-        public int compare(final RealmTO r1, final RealmTO r2) {\n-            return r1.getName().compareTo(r2.getName());\n-        }\n+        updateRealmContent(realmSidebarPanel.getCurrentRealm());\n     }\n \n     @Override\n@@ -201,14 +106,6 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    private void setCurrentRealm(final RealmTO realmTO) {\n-        this.currentRealm = realmTO;\n-    }\n-\n-    public RealmTO getCurrentRealm() {\n-        return this.currentRealm;\n-    }\n-\n     private void updateRealmContent(final RealmTO realmTO) {\n         content.addOrReplace(new Label(\"header\", realmTO.getName()));\n         content.addOrReplace(new Realm(\"body\", realmTO, getPageReference()));\n@@ -226,20 +123,18 @@ private void setupDeleteLink() {\n             @Override\n             protected void onClickInternal(final AjaxRequestTarget target) {\n                 try {\n-                    final RealmTO toBeDeleted = Realms.this.getCurrentRealm();\n+                    final RealmTO toBeDeleted = realmSidebarPanel.getCurrentRealm();\n \n                     if (toBeDeleted.getKey() == 0) {\n                         throw new Exception(\"Root realm cannot be deleted\");\n                     }\n \n                     realmRestClient.delete(toBeDeleted.getFullPath());\n \n-                    final List<RealmTO> realms = realmRestClient.list();\n-                    Collections.sort(realms, new RealmNameComparator());\n-                    target.add(addRealmTree(getParentMap(realms), 0L, menu));\n+                    target.add(realmSidebarPanel.reloadRealmTree());\n \n-//                    info(getString(Constants.OPERATION_SUCCEEDED));\n-//                    feedbackPanel.refresh(target);\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -272,7 +167,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                         modal,\n                         Realms.this.getPageReference(),\n                         realmTO,\n-                        Realms.this.getCurrentRealm().getFullPath(),\n+                        realmSidebarPanel.getCurrentRealm().getFullPath(),\n                         Entitlement.REALM_CREATE,\n                         true);\n                 target.add(modal.setContent(panel));\n@@ -296,9 +191,9 @@ private void setupEditLink() {\n \n             @Override\n             protected void onClickInternal(final AjaxRequestTarget target) {\n-                modal.header(Model.of(Realms.this.getCurrentRealm().getName()));\n+                modal.header(Model.of(realmSidebarPanel.getCurrentRealm().getName()));\n \n-                final RealmTO realmTO = Realms.this.getCurrentRealm();\n+                final RealmTO realmTO = realmSidebarPanel.getCurrentRealm();\n                 modal.setFormModel(realmTO);\n \n                 final RealmModalPanel panel = new RealmModalPanel(\n@@ -321,25 +216,4 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n         content.addOrReplace(editLink);\n     }\n-\n-    private static class ControlSidebarClick<T> {\n-\n-        private final AjaxRequestTarget target;\n-\n-        private final T obj;\n-\n-        public ControlSidebarClick(\n-                final T obj, final AjaxRequestTarget target) {\n-            this.obj = obj;\n-            this.target = target;\n-        }\n-\n-        public T getObj() {\n-            return obj;\n-        }\n-\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n-        }\n-    }\n }"},{"sha":"139283f4b6fffc912e16c81f7699bf3234bcb0bb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -86,8 +86,8 @@ public class AbstractModalPanel extends Panel {\n     @SpringBean\n     protected MIMETypesLoader mimeTypesInitializer;\n \n-    public AbstractModalPanel(final String id, final BaseModal<?> modal) {\n-        super(id);\n+    public AbstractModalPanel(final BaseModal<?> modal) {\n+        super(BaseModal.getContentId());\n         this.modal = modal;\n     }\n "},{"sha":"5bfbe13d71dd878337c47d3422b0e5c7ce6a2b89","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupModalPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupModalPanel.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -48,14 +48,14 @@ public class GroupModalPanel extends AbstractModalPanel {\n \n     protected GroupTO originalGroupTO;\n \n-    public GroupModalPanel(final String id, final BaseModal<?> modal, final GroupTO groupTO) {\n-        this(id, modal, groupTO, Mode.ADMIN);\n+    public GroupModalPanel(final BaseModal<?> modal, final GroupTO groupTO) {\n+        this(modal, groupTO, Mode.ADMIN);\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    public GroupModalPanel(final String id, final BaseModal<?> modal, final GroupTO groupTO, final Mode mode) {\n+    public GroupModalPanel(final BaseModal<?> modal, final GroupTO groupTO, final Mode mode) {\n \n-        super(id, modal);\n+        super(modal);\n \n         this.mode = mode;\n "},{"sha":"ffc232ac88cb8bce9b99064b22c03863efbda8c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -103,8 +103,7 @@ protected List<IColumn<AnyTO, String>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION) {\n-                columns.add(\n-                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n@@ -126,8 +125,7 @@ public ActionLinksPanel<AnyTO> getActions(final String componentId, final IModel\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n-                        editModal.addOrReplace(new GroupModalPanel(\n-                                BaseModal.getContentId(), editModal, (GroupTO) model.getObject()));\n+                        editModal.addOrReplace(new GroupModalPanel(editModal, (GroupTO) model.getObject()));\n \n                         target.add(editModal);\n                         editModal.show(target);"},{"sha":"7e8f4155349b4b85d8617b2f7332caf608c6950a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -65,7 +65,7 @@ public RealmModalPanel(\n             final String entitlement,\n             final boolean newRealm) {\n \n-        super(BaseModal.getContentId(), modal);\n+        super(modal);\n         this.newRealm = newRealm;\n \n         this.pageRef = pageRef;"},{"sha":"4084a53f29c66d84f7bf108e5ecb26277586b7a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"added","additions":235,"deletions":0,"changes":235,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -0,0 +1,235 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.link.Link;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class RealmSidebarPanel extends Panel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    @SpringBean\n+    private RealmRestClient realmRestClient;\n+\n+    private final WebMarkupContainer menu;\n+\n+    private RealmTO currentRealm;\n+\n+    private final PageReference pageRef;\n+\n+    private boolean reload = false;\n+\n+    public RealmSidebarPanel(final String id, final PageReference pageRef) {\n+        super(id);\n+        this.pageRef = pageRef;\n+\n+        final List<RealmTO> realms = realmRestClient.list();\n+        Collections.sort(realms, new RealmNameComparator());\n+\n+        menu = new WebMarkupContainer(\"menu\");\n+\n+        menu.setOutputMarkupId(true);\n+        add(menu);\n+\n+        reloadRealmTree(reloadRealmParentMap(realms), 0L, menu);\n+        setCurrentRealm(realms.get(0));\n+    }\n+\n+    public final RealmSidebarPanel reloadRealmTree() {\n+        reloadRealmTree(reloadRealmParentMap(), 0L, menu);\n+        return this;\n+    }\n+\n+    private MarkupContainer reloadRealmTree(\n+            final Map<Long, List<RealmTO>> parentMap, final Long key, final MarkupContainer container) {\n+        final RepeatingView listItems = new RepeatingView(\"list\");\n+        listItems.setOutputMarkupId(true);\n+        container.addOrReplace(listItems);\n+\n+        for (final RealmTO realm : parentMap.get(key)) {\n+            final Fragment fragment;\n+\n+            final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    RealmSidebarPanel.this.setCurrentRealm(realm);\n+                    send(pageRef.getPage(), Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n+                }\n+\n+                @Override\n+                protected void onComponentTag(final ComponentTag tag) {\n+                    super.onComponentTag(tag);\n+                    tag.put(\"href\", \"#\");\n+                }\n+            };\n+\n+            link.setMarkupId(\"item-\" + realm.getKey());\n+            link.addOrReplace(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n+\n+            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).isEmpty()) {\n+                fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", RealmSidebarPanel.this);\n+\n+                final Link<Void> angle = new Link<Void>(\"angle\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick() {\n+                    }\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        super.onComponentTag(tag);\n+                        tag.put(\"href\", \"#\");\n+                    }\n+                };\n+\n+                angle.setMarkupId(\"angle-\" + realm.getKey());\n+                fragment.addOrReplace(angle);\n+\n+                reloadRealmTree(parentMap, realm.getKey(), fragment);\n+            } else {\n+                fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", RealmSidebarPanel.this);\n+            }\n+\n+            fragment.addOrReplace(link);\n+            fragment.setOutputMarkupId(true);\n+            listItems.addOrReplace(fragment);\n+        }\n+\n+        return container;\n+    }\n+\n+    private Map<Long, List<RealmTO>> reloadRealmParentMap() {\n+        final List<RealmTO> realms = realmRestClient.list();\n+        Collections.sort(realms, new RealmNameComparator());\n+        return reloadRealmParentMap(realms);\n+    }\n+\n+    private Map<Long, List<RealmTO>> reloadRealmParentMap(final List<RealmTO> realms) {\n+        final Map<Long, List<RealmTO>> res = new HashMap<>();\n+        res.put(0L, new ArrayList<RealmTO>());\n+\n+        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n+\n+        for (RealmTO realm : realms) {\n+            if (res.containsKey(realm.getParent())) {\n+                res.get(realm.getParent()).add(realm);\n+\n+                final List<RealmTO> children = new ArrayList<>();\n+                res.put(realm.getKey(), children);\n+\n+                if (cache.containsKey(realm.getKey())) {\n+                    children.addAll(cache.get(realm.getKey()));\n+                    cache.remove(realm.getKey());\n+                }\n+            } else if (cache.containsKey(realm.getParent())) {\n+                cache.get(realm.getParent()).add(realm);\n+            } else {\n+                final List<RealmTO> children = new ArrayList<>();\n+                children.add(realm);\n+                cache.put(realm.getParent(), children);\n+            }\n+        }\n+\n+        return res;\n+    }\n+\n+    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n+\n+        private static final long serialVersionUID = 7085057398406518811L;\n+\n+        @Override\n+        public int compare(final RealmTO r1, final RealmTO r2) {\n+            if (r1 == null && r2 == null) {\n+                return 0;\n+            } else if (r1 != null && r2 != null) {\n+                return r1.getName().compareTo(r2.getName());\n+            } else if (r1 == null && r2 != null) {\n+                return -1;\n+            } else {\n+                return 1;\n+            }\n+        }\n+    }\n+\n+    private void setCurrentRealm(final RealmTO realmTO) {\n+        this.currentRealm = realmTO;\n+    }\n+\n+    public RealmTO getCurrentRealm() {\n+        return this.currentRealm;\n+    }\n+\n+    public static class ControlSidebarClick<T> {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final T obj;\n+\n+        public ControlSidebarClick(final T obj, final AjaxRequestTarget target) {\n+            this.obj = obj;\n+            this.target = target;\n+        }\n+\n+        public T getObj() {\n+            return obj;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        if (reload) {\n+            response.render(OnLoadHeaderItem.forScript(\"$.AdminLTE.tree('.syncopeSidebar');\"));\n+        } else {\n+            reload = true;\n+        }\n+    }\n+}"},{"sha":"1381c005d0b0a906eda743bb600100c43a6abc38","filename":"client/console/src/main/java/org/apache/syncope/client/console/themes/AdminLTE.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -42,7 +42,7 @@ public AdminLTE() {\n     public List<HeaderItem> getDependencies() {\n         final List<HeaderItem> references = new ArrayList<>();\n         references.add(JavaScriptHeaderItem.forReference(\n-                new JQueryPluginResourceReference(AdminLTE.class, \"js/AdminLTE-app.min.js\")));\n+                new JQueryPluginResourceReference(AdminLTE.class, \"js/AdminLTE-app.min.js\"), \"adminltejs\"));\n \n         // Adds WebjarsJavaScriptResourceReference about JQuery\n         references.add(JavaScriptHeaderItem.forReference(JQueryUIAllJavaScriptReference.instance()));"},{"sha":"e67daac909c6669becc88e15ae21302247011374","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -78,7 +78,7 @@ public BaseModal(final String id) {\n         form = new Form<T>(FORM);\n         add(form);\n \n-        content = new AbstractModalPanel(CONTENT_ID, this) {\n+        content = new AbstractModalPanel(this) {\n \n             private static final long serialVersionUID = 1L;\n "},{"sha":"890db3438e50b2188cf20d8c837829863aec4715","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -55,14 +55,7 @@ <h3 class=\"box-title\">\n         <div wicket:id=\"modal\"></div>\n       </div>\n \n-      <aside class=\"control-sidebar control-sidebar-dark control-sidebar-open block-sidebar\">\n-        <section class=\"sidebar\">\n-          <ul class=\"sidebar-menu\" wicket:id=\"menu\">\n-            <wicket:container wicket:id=\"list\"></wicket:container>\n-          </ul>\n-        </section>\n-      </aside>\n-      <div class=\"control-sidebar-bg inner-control-sidebar\"></div>\n+      <span wicket:id=\"realmSidebarPanel\">[Realm Sidebar Panel]</span>\n     </div>\n \n     <wicket:fragment wicket:id=\"withChildren\">"},{"sha":"71ff092d2f9e5096882624c7e28494e3d8b0d920","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmSidebarPanel.html","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10299f2c4e12376d1ca9ae700990576a8e15cf08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html?ref=10299f2c4e12376d1ca9ae700990576a8e15cf08","patch":"@@ -0,0 +1,53 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <wicket:panel>\n+    <aside id=\"aside\" name=\"aside\" class=\"control-sidebar control-sidebar-dark control-sidebar-open block-sidebar\">\n+      <section id=\"section\" name=\"section\" class=\"sidebar syncopeSidebar\">\n+        <ul id=\"tree\" name=\"tree\" class=\"sidebar-menu\" wicket:id=\"menu\">\n+          <wicket:container wicket:id=\"list\"></wicket:container>\n+        </ul>\n+      </section>\n+    </aside>\n+    <div  id=\"control\" name=\"control\" class=\"control-sidebar-bg inner-control-sidebar\"></div>\n+\n+    <wicket:fragment wicket:id=\"withChildren\">\n+      <li id=\"treeview\" name=\"treeview\" class=\"treeview\">\n+        <a href=\"#\" wicket:id=\"link\"><i class=\"fa fa-folder-o\">\n+          </i><span wicket:id=\"name\">[ITEM NAME]</span>\n+        </a>\n+        <a href=\"#\" class=\"angle\" wicket:id=\"angle\">\n+          <i class=\"fa fa-angle-left pull-right\"></i>\n+        </a>\n+        <ul id=\"subtree\" name=\"subtree\" class=\"treeview-menu\">\n+          <wicket:container wicket:id=\"list\"></wicket:container>\n+        </ul>\n+      </li>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"withoutChildren\">\n+      <li>\n+        <a name=\"label\" href=\"#\" wicket:id=\"link\">\n+          <i class=\"fa fa-leaf\"></i><span wicket:id=\"name\">[ITEM NAME]</span>\n+        </a>\n+      </li>\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"}]}