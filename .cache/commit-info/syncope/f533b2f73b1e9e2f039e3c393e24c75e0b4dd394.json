{"sha":"f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1MzNiMmY3M2IxZTllMmYwMzllM2MzOTNlMjRjNzVlMGI0ZGQzOTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-01T13:42:04Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-01T13:42:15Z"},"message":"[SYNCOPE-1182] Get rid of GetApiOp","tree":{"sha":"e05dd731a8157d2ccfb9f37a4fc3b18ed993dc6b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e05dd731a8157d2ccfb9f37a4fc3b18ed993dc6b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"aee4cea0f68529b666a82185e26c8533f04820d4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aee4cea0f68529b666a82185e26c8533f04820d4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aee4cea0f68529b666a82185e26c8533f04820d4"}],"stats":{"total":197,"additions":126,"deletions":71},"files":[{"sha":"3f2ff75508309309a8366a66052d10480bdbd03f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -69,6 +69,7 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -344,8 +345,9 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n \n         // 4. read from the underlying connector\n         Connector connector = connFactory.getConnector(init.getLeft());\n-        ConnectorObject connectorObject = connector.getObject(init.getRight().getObjectClass(),\n-                new Uid(connObjectKeyValue),\n+        ConnectorObject connectorObject = connector.getObject(\n+                init.getRight().getObjectClass(),\n+                AttributeBuilder.build(connObjectKeyItem.getExtAttrName(), connObjectKeyValue),\n                 MappingUtils.buildOperationOptions(mapItems));\n         if (connectorObject == null) {\n             throw new NotFoundException("},{"sha":"324c1d9d359f0dfbad84ff9482a88ed95af23204","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -140,11 +140,11 @@ void filteredReconciliation(\n      * Get remote object.\n      *\n      * @param objectClass ConnId's object class\n-     * @param uid ConnId's Uid\n+     * @param connObjectKey ConnId's key attribute\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n-    ConnectorObject getObject(ObjectClass objectClass, Uid uid, OperationOptions options);\n+    ConnectorObject getObject(ObjectClass objectClass, Attribute connObjectKey, OperationOptions options);\n \n     /**\n      * Search for remote objects."},{"sha":"a655fc4a2bea1bee8dfe0de059fce3d86705c63b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AsyncConnectorFacade.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -28,8 +28,10 @@\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.framework.common.objects.ResultsHandler;\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.identityconnectors.framework.common.objects.Uid;\n+import org.identityconnectors.framework.common.objects.filter.FilterBuilder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.scheduling.annotation.Async;\n@@ -98,10 +100,20 @@ public Future<SyncToken> getLatestSyncToken(\n     public Future<ConnectorObject> getObject(\n             final ConnectorFacade connector,\n             final ObjectClass objectClass,\n-            final Uid uid,\n+            final Attribute connObjectKey,\n             final OperationOptions options) {\n \n-        return new AsyncResult<>(connector.getObject(objectClass, uid, options));\n+        final ConnectorObject[] objects = new ConnectorObject[1];\n+        connector.search(objectClass, FilterBuilder.equalTo(connObjectKey), new ResultsHandler() {\n+\n+            @Override\n+            public boolean handle(final ConnectorObject connectorObject) {\n+                objects[0] = connectorObject;\n+                return false;\n+            }\n+        }, options);\n+\n+        return new AsyncResult<>(objects[0]);\n     }\n \n     @Async"},{"sha":"2b42e91639ee1a33cf2fd031142cc674f0b9c6e9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":30,"deletions":26,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -303,32 +303,6 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n         return result;\n     }\n \n-    @Override\n-    public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n-        Future<ConnectorObject> future = null;\n-\n-        if (connInstance.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n-            future = asyncFacade.getObject(connector, objectClass, uid, options);\n-        } else {\n-            LOG.info(\"Search was attempted, although the connector only has these capabilities: {}. No action.\",\n-                    connInstance.getCapabilities());\n-        }\n-\n-        try {\n-            return future == null ? null : future.get(connInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n-        } catch (java.util.concurrent.TimeoutException e) {\n-            future.cancel(true);\n-            throw new TimeoutException(\"Request timeout\");\n-        } catch (Exception e) {\n-            LOG.error(\"Connector request execution failure\", e);\n-            if (e.getCause() instanceof RuntimeException) {\n-                throw (RuntimeException) e.getCause();\n-            } else {\n-                throw new IllegalArgumentException(e.getCause());\n-            }\n-        }\n-    }\n-\n     @Transactional\n     @Override\n     public void fullReconciliation(\n@@ -416,6 +390,36 @@ public void test() {\n         }\n     }\n \n+    @Override\n+    public ConnectorObject getObject(\n+            final ObjectClass objectClass,\n+            final Attribute connObjectKey,\n+            final OperationOptions options) {\n+\n+        Future<ConnectorObject> future = null;\n+\n+        if (connInstance.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n+            future = asyncFacade.getObject(connector, objectClass, connObjectKey, options);\n+        } else {\n+            LOG.info(\"Search was attempted, although the connector only has these capabilities: {}. No action.\",\n+                    connInstance.getCapabilities());\n+        }\n+\n+        try {\n+            return future == null ? null : future.get(connInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n+        } catch (java.util.concurrent.TimeoutException e) {\n+            future.cancel(true);\n+            throw new TimeoutException(\"Request timeout\");\n+        } catch (Exception e) {\n+            LOG.error(\"Connector request execution failure\", e);\n+            if (e.getCause() instanceof RuntimeException) {\n+                throw (RuntimeException) e.getCause();\n+            } else {\n+                throw new IllegalArgumentException(e.getCause());\n+            }\n+        }\n+    }\n+\n     @Override\n     public void search(\n             final ObjectClass objectClass,"},{"sha":"a074848183cb0fbda4cac5aeb6e7ce7044575bc6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -25,7 +25,6 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.ListUtils;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.Membership;\n@@ -41,8 +40,8 @@\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -99,25 +98,29 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n         for (Map.Entry<Provision, Set<VirSchema>> entry : toRead.entrySet()) {\n             LOG.debug(\"About to read from {}: {}\", entry.getKey(), entry.getValue());\n \n-            String connObjectKey = MappingUtils.getConnObjectKeyItem(entry.getKey()) == null\n+            MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(entry.getKey());\n+            String connObjectKeyValue = connObjectKeyItem == null\n                     ? null\n                     : mappingManager.getConnObjectKeyValue(any, entry.getKey());\n-            if (StringUtils.isBlank(connObjectKey)) {\n+            if (connObjectKeyItem == null) {\n                 LOG.error(\"No ConnObjectKey found for {}, ignoring...\", entry.getKey());\n             } else {\n                 Set<MappingItem> linkingMappingItems = new HashSet<>();\n+                linkingMappingItems.add(connObjectKeyItem);\n                 for (VirSchema schema : entry.getValue()) {\n                     linkingMappingItems.add(schema.asLinkingMappingItem());\n                 }\n \n                 Connector connector = connFactory.getConnector(entry.getKey().getResource());\n                 try {\n-                    ConnectorObject connectorObject = connector.getObject(entry.getKey().getObjectClass(),\n-                            new Uid(connObjectKey),\n+                    ConnectorObject connectorObject = connector.getObject(\n+                            entry.getKey().getObjectClass(),\n+                            AttributeBuilder.build(connObjectKeyItem.getExtAttrName(), connObjectKeyValue),\n                             MappingUtils.buildOperationOptions(linkingMappingItems.iterator()));\n \n                     if (connectorObject == null) {\n-                        LOG.debug(\"No read from {} about {}\", entry.getKey(), connObjectKey);\n+                        LOG.debug(\"No read from {} with filter '{} == {}'\",\n+                                entry.getKey(), connObjectKeyItem.getExtAttrName(), connObjectKeyValue);\n                     } else {\n                         for (VirSchema schema : entry.getValue()) {\n                             Attribute attr = connectorObject.getAttributeByName(schema.getExtAttrName());"},{"sha":"0328e62355fb64d578296857a7e230a8d8078a73","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReconciliationReportlet.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -296,8 +296,9 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n                 if (provision != null && connObjectKeyItem != null && StringUtils.isNotBlank(connObjectKeyValue)) {\n                     // 1. read from the underlying connector\n                     Connector connector = connFactory.getConnector(resource);\n-                    ConnectorObject connectorObject = connector.getObject(provision.getObjectClass(),\n-                            new Uid(connObjectKeyValue),\n+                    ConnectorObject connectorObject = connector.getObject(\n+                            provision.getObjectClass(),\n+                            AttributeBuilder.build(connObjectKeyItem.getExtAttrName(), connObjectKeyValue),\n                             MappingUtils.buildOperationOptions(provision.getMapping().getItems().iterator()));\n \n                     if (connectorObject == null) {"},{"sha":"762c78bc54a9cea92e9c6d5a540973f304ad8ddd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -67,6 +67,7 @@\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ConnectorObjectBuilder;\n@@ -607,8 +608,10 @@ protected ConnectorObject getRemoteObject(\n \n         ConnectorObject obj = null;\n         try {\n-            obj = connector.getObject(new ObjectClass(task.getObjectClassName()),\n-                    new Uid(connObjectKey),\n+            obj = connector.getObject(\n+                    new ObjectClass(task.getObjectClassName()),\n+                    AttributeBuilder.build(\n+                            MappingUtils.getConnObjectKeyItem(provision).getExtAttrName(), connObjectKey),\n                     MappingUtils.buildOperationOptions(IteratorUtils.chainedIterator(\n                             MappingUtils.getPropagationItems(provision).iterator(),\n                             linkingMappingItems.iterator())));\n@@ -655,7 +658,7 @@ protected ConnectorObject getRemoteObject(\n         ConnectorObject obj = null;\n         try {\n             obj = connector.getObject(new ObjectClass(task.getObjectClassName()),\n-                    new Uid(connObjectKey),\n+                    AttributeBuilder.build(orgUnit.getConnObjectKeyItem().getExtAttrName(), connObjectKey),\n                     MappingUtils.buildOperationOptions(MappingUtils.getPropagationItems(orgUnit).iterator()));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);"},{"sha":"7fbfe4eaff6b568ed05da1765a879e6379021467","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":26,"deletions":12,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -21,10 +21,10 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n@@ -45,6 +45,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n@@ -58,9 +59,9 @@\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.identityconnectors.framework.common.objects.Uid;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -198,19 +199,23 @@ protected void assign(final Any<?> any, final Boolean enabled, final Provisionin\n         provision(any, enabled, result);\n     }\n \n-    protected ConnectorObject getRemoteObject(final String connObjectKey, final ObjectClass objectClass) {\n+    protected ConnectorObject getRemoteObject(\n+            final ObjectClass objectClass,\n+            final String connObjectKey,\n+            final String connObjectKeyValue,\n+            final Iterator<? extends Item> iterator) {\n+\n         ConnectorObject obj = null;\n         try {\n-            Uid uid = new Uid(connObjectKey);\n-\n-            obj = profile.getConnector().getObject(objectClass,\n-                    uid,\n-                    MappingUtils.buildOperationOptions(IteratorUtils.<MappingItem>emptyIterator()));\n+            obj = profile.getConnector().getObject(\n+                    objectClass,\n+                    AttributeBuilder.build(connObjectKey, connObjectKeyValue),\n+                    MappingUtils.buildOperationOptions(iterator));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n             throw toe;\n         } catch (RuntimeException ignore) {\n-            LOG.debug(\"While resolving {}\", connObjectKey, ignore);\n+            LOG.debug(\"While resolving {}\", connObjectKeyValue, ignore);\n         }\n \n         return obj;\n@@ -262,9 +267,14 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n         // Try to read remote object BEFORE any actual operation\n         Provision provision = profile.getTask().getResource().getProvision(any.getType());\n-        String connObjecKey = mappingManager.getConnObjectKeyValue(any, provision);\n+        MappingItem connObjectKey = MappingUtils.getConnObjectKeyItem(provision);\n+        String connObjecKeyValue = mappingManager.getConnObjectKeyValue(any, provision);\n \n-        ConnectorObject beforeObj = getRemoteObject(connObjecKey, provision.getObjectClass());\n+        ConnectorObject beforeObj = getRemoteObject(\n+                provision.getObjectClass(),\n+                connObjectKey.getExtAttrName(),\n+                connObjecKeyValue,\n+                provision.getMapping().getItems().iterator());\n \n         Boolean status = profile.getTask().isSyncStatus() ? enabled : null;\n \n@@ -429,7 +439,11 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                     result.setStatus(ProvisioningReport.Status.SUCCESS);\n                 }\n                 resultStatus = AuditElements.Result.SUCCESS;\n-                output = getRemoteObject(connObjecKey, provision.getObjectClass());\n+                output = getRemoteObject(\n+                        provision.getObjectClass(),\n+                        connObjectKey.getExtAttrName(),\n+                        connObjecKeyValue,\n+                        provision.getMapping().getItems().iterator());\n             } catch (IgnoreProvisionException e) {\n                 throw e;\n             } catch (Exception e) {"},{"sha":"4becdad3732a1bd9d9cad3961a64290de8332129","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java","status":"modified","additions":27,"deletions":13,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -20,9 +20,9 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -33,8 +33,9 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n+import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n+import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n@@ -46,9 +47,9 @@\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.identityconnectors.framework.common.objects.Uid;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -157,19 +158,23 @@ private void assign(final Realm realm, final ProvisioningReport result) {\n         provision(update(realmTO, result), result);\n     }\n \n-    protected ConnectorObject getRemoteObject(final String connObjectKey, final ObjectClass objectClass) {\n+    protected ConnectorObject getRemoteObject(\n+            final ObjectClass objectClass,\n+            final String connObjectKey,\n+            final String connObjectKeyValue,\n+            final Iterator<? extends Item> iterator) {\n+\n         ConnectorObject obj = null;\n         try {\n-            Uid uid = new Uid(connObjectKey);\n-\n-            obj = profile.getConnector().getObject(objectClass,\n-                    uid,\n-                    MappingUtils.buildOperationOptions(IteratorUtils.<MappingItem>emptyIterator()));\n+            obj = profile.getConnector().getObject(\n+                    objectClass,\n+                    AttributeBuilder.build(connObjectKey, connObjectKeyValue),\n+                    MappingUtils.buildOperationOptions(iterator));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n             throw toe;\n         } catch (RuntimeException ignore) {\n-            LOG.debug(\"While resolving {}\", connObjectKey, ignore);\n+            LOG.debug(\"While resolving {}\", connObjectKeyValue, ignore);\n         }\n \n         return obj;\n@@ -190,9 +195,14 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n         // Try to read remote object BEFORE any actual operation\n         OrgUnit orgUnit = profile.getTask().getResource().getOrgUnit();\n-        String connObjecKey = mappingManager.getConnObjectKeyValue(realm, orgUnit);\n+        OrgUnitItem connObjectKey = orgUnit.getConnObjectKeyItem();\n+        String connObjecKeyValue = mappingManager.getConnObjectKeyValue(realm, orgUnit);\n \n-        ConnectorObject beforeObj = getRemoteObject(connObjecKey, orgUnit.getObjectClass());\n+        ConnectorObject beforeObj = getRemoteObject(\n+                orgUnit.getObjectClass(),\n+                connObjectKey.getExtAttrName(),\n+                connObjecKeyValue,\n+                orgUnit.getItems().iterator());\n \n         if (profile.isDryRun()) {\n             if (beforeObj == null) {\n@@ -362,7 +372,11 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     result.setStatus(ProvisioningReport.Status.SUCCESS);\n                 }\n                 resultStatus = AuditElements.Result.SUCCESS;\n-                output = getRemoteObject(connObjecKey, orgUnit.getObjectClass());\n+                output = getRemoteObject(\n+                        orgUnit.getObjectClass(),\n+                        connObjectKey.getExtAttrName(),\n+                        connObjecKeyValue,\n+                        orgUnit.getItems().iterator());\n             } catch (IgnoreProvisionException e) {\n                 throw e;\n             } catch (Exception e) {"},{"sha":"118da8af619b018bca509f0bbac4174ad7537e5a","filename":"fit/core-reference/src/test/resources/rest/SearchScript.groovy","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -53,10 +53,11 @@ def buildConnectorObject(node) {\n   return [\n     __UID__:node.get(\"key\").textValue(), \n     __NAME__:node.get(\"key\").textValue(),\n+    key:node.get(\"key\").textValue(),\n     username:node.get(\"username\").textValue(),\n     password:node.has(\"password\") && node.get(\"password\").textValue() != null\n-      ? new GuardedString(node.get(\"password\").textValue().toCharArray()) \n-      : null,\n+    ? new GuardedString(node.get(\"password\").textValue().toCharArray()) \n+  : null,\n     firstName:node.get(\"firstName\").textValue(),\n     surname:node.get(\"surname\").textValue(),\n     email:node.get(\"email\").textValue()"},{"sha":"1676a013d91c554c368694b903cd92095f5ea501","filename":"fit/core-reference/src/test/resources/rest/SyncScript.groovy","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f533b2f73b1e9e2f039e3c393e24c75e0b4dd394/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSyncScript.groovy?ref=f533b2f73b1e9e2f039e3c393e24c75e0b4dd394","patch":"@@ -54,6 +54,7 @@ def buildConnectorObject(node) {\n   return [\n     __UID__:node.get(\"key\").textValue(), \n     __NAME__:node.get(\"key\").textValue(),\n+    key:node.get(\"key\").textValue(),\n     username:node.get(\"username\").textValue(),\n     password:new GuardedString(node.get(\"password\").textValue().toCharArray()),\n     firstName:node.get(\"firstName\").textValue(),"}]}