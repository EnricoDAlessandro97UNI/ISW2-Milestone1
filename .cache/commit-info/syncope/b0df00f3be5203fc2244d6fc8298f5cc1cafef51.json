{"sha":"b0df00f3be5203fc2244d6fc8298f5cc1cafef51","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIwZGYwMGYzYmU1MjAzZmMyMjQ0ZDZmYzgyOThmNWNjMWNhZmVmNTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-04T16:18:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-04T16:18:38Z"},"message":"[SYNCOPE-1410] Empower SpringBoot's capabilities to configure actual implementations on IdRepo / IdM Console variants","tree":{"sha":"5dcb094f29903e0533f11a2f3b374d840d109ed0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5dcb094f29903e0533f11a2f3b374d840d109ed0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b0df00f3be5203fc2244d6fc8298f5cc1cafef51","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0df00f3be5203fc2244d6fc8298f5cc1cafef51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0df00f3be5203fc2244d6fc8298f5cc1cafef51","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dd1ff8243199cb90ab9708ca371a98542fa1265c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd1ff8243199cb90ab9708ca371a98542fa1265c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd1ff8243199cb90ab9708ca371a98542fa1265c"}],"stats":{"total":384,"additions":199,"deletions":185},"files":[{"sha":"5e3f3873ed1c9749c2f95bc57ac5c080abd0ff81","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/SyncopeIdMConsoleContext.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdMAnyDirectoryPanelAditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.IdMAnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.IdMExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdMImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.IdMPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.IdMStatusProvider;\n+import org.apache.syncope.client.console.commons.IdMVirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.syncope.client.console.commons.StatusProvider;\n+import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class SyncopeIdMConsoleContext {\n+\n+    @Bean\n+    public ExternalResourceProvider resourceProvider() {\n+        return new IdMExternalResourceProvider();\n+    }\n+\n+    @Bean\n+    public AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps() {\n+        return new IdMAnyWizardBuilderAdditionalSteps();\n+    }\n+\n+    @Bean\n+    public StatusProvider statusProvider() {\n+        return new IdMStatusProvider();\n+    }\n+\n+    @Bean\n+    public VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider() {\n+        return new IdMVirSchemaDetailsPanelProvider();\n+    }\n+\n+    @Bean\n+    public AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider() {\n+        return new IdMAnyDirectoryPanelAditionalActionLinksProvider();\n+    }\n+\n+    @Bean\n+    public ImplementationInfoProvider implementationInfoProvider() {\n+        return new IdMImplementationInfoProvider();\n+    }\n+\n+    @Bean\n+    public PolicyTabProvider policyTabProvider() {\n+        return new IdMPolicyTabProvider();\n+    }\n+}"},{"sha":"1ceacafed130a6b582949778b9b3107b14b6979b","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMImplementationInfoProvider.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -22,7 +22,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n@@ -34,10 +33,6 @@ public class IdMImplementationInfoProvider extends IdRepoImplementationInfoProvi\n \n     private static final long serialVersionUID = -5385695412826366167L;\n \n-    public IdMImplementationInfoProvider(final ClassPathScanImplementationLookup lookup) {\n-        super(lookup);\n-    }\n-\n     @Override\n     public ViewMode getViewMode(final ImplementationTO implementation) {\n         return IdMImplementationType.PULL_CORRELATION_RULE.equals(implementation.getType())"},{"sha":"918eced931bc5427d8d582d948164bacfc2bf41e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/search/ConnObjectSearchPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels.search;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n@@ -81,7 +80,7 @@ protected void populate() {\n \n             @Override\n             protected List<SearchClause.Type> load() {\n-                return Collections.singletonList(SearchClause.Type.ATTRIBUTE);\n+                return List.of(SearchClause.Type.ATTRIBUTE);\n             }\n         };\n \n@@ -91,7 +90,7 @@ protected List<SearchClause.Type> load() {\n \n             @Override\n             protected List<String> load() {\n-                return Collections.emptyList();\n+                return List.of();\n             }\n         };\n "},{"sha":"0fda2655a486c047b215feab8bf58fb665e6a518","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -19,16 +19,12 @@\n package org.apache.syncope.client.console;\n \n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n import org.springframework.boot.builder.SpringApplicationBuilder;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n-import org.springframework.context.annotation.Bean;\n \n @SpringBootApplication(exclude = {\n     ErrorMvcAutoConfiguration.class,\n@@ -44,20 +40,4 @@ protected SpringApplicationBuilder configure(final SpringApplicationBuilder buil\n         builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n         return super.configure(builder);\n     }\n-\n-    @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n-    @Bean\n-    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-        lookup.load();\n-        return lookup;\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"mimeTypesLoader\")\n-    @Bean\n-    public MIMETypesLoader mimeTypesLoader() {\n-        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n-        mimeTypesLoader.load();\n-        return mimeTypesLoader;\n-    }\n }"},{"sha":"b38185a18a0ab8f39e9c5d752bc05a77ff56bc6a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeIdRepoConsoleContext.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdRepoConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdRepoConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdRepoConsoleContext.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.IdRepoExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.IdRepoStatusProvider;\n+import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.syncope.client.console.commons.StatusProvider;\n+import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class SyncopeIdRepoConsoleContext {\n+\n+    @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"mimeTypesLoader\")\n+    @Bean\n+    public MIMETypesLoader mimeTypesLoader() {\n+        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n+        mimeTypesLoader.load();\n+        return mimeTypesLoader;\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"resourceProvider\")\n+    @Bean\n+    public ExternalResourceProvider resourceProvider() {\n+        return new IdRepoExternalResourceProvider();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"anyWizardBuilderAdditionalSteps\")\n+    @Bean\n+    public AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps() {\n+        return new IdRepoAnyWizardBuilderAdditionalSteps();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"statusProvider\")\n+    @Bean\n+    public StatusProvider statusProvider() {\n+        return new IdRepoStatusProvider();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"virSchemaDetailsPanelProvider\")\n+    @Bean\n+    public VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider() {\n+        return new IdRepoVirSchemaDetailsPanelProvider();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"anyDirectoryPanelAditionalActionLinksProvider\")\n+    @Bean\n+    public AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider() {\n+        return new IdRepoAnyDirectoryPanelAditionalActionLinksProvider();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"implementationInfoProvider\")\n+    @Bean\n+    public ImplementationInfoProvider implementationInfoProvider() {\n+        return new IdRepoImplementationInfoProvider();\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"policyTabProvider\")\n+    @Bean\n+    public PolicyTabProvider policyTabProvider() {\n+        return new IdRepoPolicyTabProvider();\n+    }\n+}"},{"sha":"0b451fac355a04a64f464780c707b0261a37d928","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -118,18 +118,25 @@ public static SyncopeWebApplication get() {\n \n     private Integer queueCapacity;\n \n+    @Autowired\n     private ExternalResourceProvider resourceProvider;\n \n+    @Autowired\n     private AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps;\n \n+    @Autowired\n     private StatusProvider statusProvider;\n \n+    @Autowired\n     private VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider;\n \n+    @Autowired\n     private AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider;\n \n+    @Autowired\n     private ImplementationInfoProvider implementationInfoProvider;\n \n+    @Autowired\n     private PolicyTabProvider policyTabProvider;\n \n     private Map<String, Class<? extends BasePage>> pageClasses;\n@@ -209,14 +216,6 @@ protected void init() {\n \n         getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n \n-        resourceProvider = lookup.getResourceProvider();\n-        anyWizardBuilderAdditionalSteps = lookup.getAnyWizardBuilderAdditionalSteps();\n-        statusProvider = lookup.getStatusProvider();\n-        virSchemaDetailsPanelProvider = lookup.getVirSchemaDetailsPanelProvider();\n-        anyDirectoryPanelAditionalActionLinksProvider = lookup.getAnyDirectoryPanelAditionalActionLinksProvider();\n-        implementationInfoProvider = lookup.getImplementationInfoProvider();\n-        policyTabProvider = lookup.getPolicyTabProvider();\n-\n         lookup.getPageClasses().\n                 forEach(cls -> MetaDataRoleAuthorizationStrategy.authorize(cls, Constants.ROLE_AUTHENTICATED));\n "},{"sha":"e61e1952aa94f88a13b591df0710bd739d627c96","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoImplementationInfoProvider.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -33,16 +33,14 @@\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n public class IdRepoImplementationInfoProvider implements ImplementationInfoProvider {\n \n     private static final long serialVersionUID = -6620368595630782392L;\n \n-    protected final ClassPathScanImplementationLookup lookup;\n-\n-    public IdRepoImplementationInfoProvider(final ClassPathScanImplementationLookup lookup) {\n-        this.lookup = lookup;\n-    }\n+    @Autowired\n+    protected ClassPathScanImplementationLookup lookup;\n \n     @Override\n     public ViewMode getViewMode(final ImplementationTO implementation) {\n@@ -62,7 +60,7 @@ public List<String> getClasses(final ImplementationTO implementation, final View\n             Optional<JavaImplInfo> javaClasses = SyncopeConsoleSession.get().getPlatformInfo().\n                     getJavaImplInfo(implementation.getType());\n             classes = javaClasses.map(javaImplInfo -> new ArrayList<>(javaImplInfo.getClasses()))\n-                .orElseGet(ArrayList::new);\n+                    .orElseGet(ArrayList::new);\n         } else if (viewMode == ViewMode.JSON_BODY) {\n             switch (implementation.getType()) {\n                 case IdRepoImplementationType.REPORTLET:"},{"sha":"332948c72f1f997ed18aeda5f0d9d6c8f5ca4cef","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":1,"deletions":122,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -40,11 +40,6 @@\n import org.apache.syncope.client.console.annotations.Resource;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n-import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAditionalActionLinksProvider;\n-import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n-import org.apache.syncope.client.console.commons.IdRepoExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.IdRepoStatusProvider;\n-import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n@@ -65,8 +60,6 @@\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.util.ClassUtils;\n import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.IdRepoImplementationInfoProvider;\n-import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n@@ -105,22 +98,6 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n         });\n     }\n \n-    private ExternalResourceProvider resourceProvider = new IdRepoExternalResourceProvider();\n-\n-    private AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps =\n-            new IdRepoAnyWizardBuilderAdditionalSteps();\n-\n-    private StatusProvider statusProvider = new IdRepoStatusProvider();\n-\n-    private VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider = new IdRepoVirSchemaDetailsPanelProvider();\n-\n-    private AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider =\n-            new IdRepoAnyDirectoryPanelAditionalActionLinksProvider();\n-\n-    private ImplementationInfoProvider implementationInfoProvider = new IdRepoImplementationInfoProvider(this);\n-\n-    private PolicyTabProvider policyTabProvider = new IdRepoPolicyTabProvider();\n-\n     private List<Class<? extends BasePage>> pages;\n \n     private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n@@ -199,7 +176,7 @@ public void load() {\n         scanner.findCandidateComponents(getBasePackage()).forEach(bd -> {\n             try {\n                 Class<?> clazz = ClassUtils.resolveClassName(\n-                    Objects.requireNonNull(bd.getBeanClassName()), ClassUtils.getDefaultClassLoader());\n+                        Objects.requireNonNull(bd.getBeanClassName()), ClassUtils.getDefaultClassLoader());\n                 boolean isAbstractClazz = Modifier.isAbstract(clazz.getModifiers());\n                 if (!isAbstractClazz) {\n                     if (BaseExtPage.class.isAssignableFrom(clazz)) {\n@@ -252,61 +229,6 @@ public void load() {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n                                     Resource.class.getName(), clazz.getName());\n                         }\n-                    } else if (ExternalResourceProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoExternalResourceProvider.class)\n-                                && !clazz.isInstance(resourceProvider)) {\n-\n-                            resourceProvider = (ExternalResourceProvider) clazz.\n-                                    getConstructor().newInstance();\n-                        }\n-                    } else if (AnyWizardBuilderAdditionalSteps.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoAnyWizardBuilderAdditionalSteps.class)\n-                                && !clazz.isInstance(anyWizardBuilderAdditionalSteps)) {\n-\n-                            anyWizardBuilderAdditionalSteps = (AnyWizardBuilderAdditionalSteps) clazz.\n-                                    getConstructor().newInstance();\n-                        }\n-                    } else if (StatusProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoStatusProvider.class)\n-                                && !clazz.isInstance(statusProvider)) {\n-\n-                            statusProvider = (StatusProvider) clazz.\n-                                    getConstructor().newInstance();\n-                        }\n-                    } else if (VirSchemaDetailsPanelProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoVirSchemaDetailsPanelProvider.class)\n-                                && !clazz.isInstance(virSchemaDetailsPanelProvider)) {\n-\n-                            virSchemaDetailsPanelProvider = (VirSchemaDetailsPanelProvider) clazz.\n-                                    getConstructor().newInstance();\n-                        }\n-                    } else if (AnyDirectoryPanelAditionalActionLinksProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoAnyDirectoryPanelAditionalActionLinksProvider.class)\n-                                && !clazz.isInstance(anyDirectoryPanelAditionalActionLinksProvider)) {\n-\n-                            anyDirectoryPanelAditionalActionLinksProvider =\n-                                    (AnyDirectoryPanelAditionalActionLinksProvider) clazz.\n-                                            getConstructor().newInstance();\n-\n-                        }\n-                    } else if (ImplementationInfoProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoImplementationInfoProvider.class)\n-                                && !clazz.isInstance(implementationInfoProvider)) {\n-\n-                            implementationInfoProvider =\n-                                    (ImplementationInfoProvider) clazz.\n-                                            getConstructor(ClassPathScanImplementationLookup.class).newInstance(this);\n-\n-                        }\n-                    } else if (PolicyTabProvider.class.isAssignableFrom(clazz)) {\n-                        if (!clazz.equals(IdRepoPolicyTabProvider.class)\n-                                && !clazz.isInstance(policyTabProvider)) {\n-\n-                            policyTabProvider =\n-                                    (PolicyTabProvider) clazz.\n-                                            getConstructor().newInstance();\n-\n-                        }\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -362,21 +284,6 @@ public void load() {\n         LOG.debug(\"Pull Correlation Rule configurations found: {}\", pullCorrelationRuleConfs);\n         LOG.debug(\"Push Correlation Rule configurations found: {}\", pushCorrelationRuleConfs);\n         LOG.debug(\"Wicket Resources found: {}\", resources);\n-\n-        LOG.debug(\"{}: {}\", ExternalResourceProvider.class.getSimpleName(),\n-                resourceProvider.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", AnyWizardBuilderAdditionalSteps.class.getSimpleName(),\n-                anyWizardBuilderAdditionalSteps.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", StatusProvider.class.getSimpleName(),\n-                statusProvider.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", VirSchemaDetailsPanelProvider.class.getSimpleName(),\n-                virSchemaDetailsPanelProvider.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", AnyDirectoryPanelAditionalActionLinksProvider.class.getSimpleName(),\n-                anyDirectoryPanelAditionalActionLinksProvider.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", ImplementationInfoProvider.class.getSimpleName(),\n-                implementationInfoProvider.getClass().getSimpleName());\n-        LOG.debug(\"{}: {}\", PolicyTabProvider.class.getSimpleName(),\n-                policyTabProvider.getClass().getSimpleName());\n     }\n \n     public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n@@ -444,32 +351,4 @@ public Map<String, Class<? extends PushCorrelationRuleConf>> getPushCorrelationR\n     public List<Class<? extends AbstractResource>> getResources() {\n         return resources;\n     }\n-\n-    public ExternalResourceProvider getResourceProvider() {\n-        return resourceProvider;\n-    }\n-\n-    public AnyWizardBuilderAdditionalSteps getAnyWizardBuilderAdditionalSteps() {\n-        return anyWizardBuilderAdditionalSteps;\n-    }\n-\n-    public StatusProvider getStatusProvider() {\n-        return statusProvider;\n-    }\n-\n-    public VirSchemaDetailsPanelProvider getVirSchemaDetailsPanelProvider() {\n-        return virSchemaDetailsPanelProvider;\n-    }\n-\n-    public AnyDirectoryPanelAditionalActionLinksProvider getAnyDirectoryPanelAditionalActionLinksProvider() {\n-        return anyDirectoryPanelAditionalActionLinksProvider;\n-    }\n-\n-    public ImplementationInfoProvider getImplementationInfoProvider() {\n-        return implementationInfoProvider;\n-    }\n-\n-    public PolicyTabProvider getPolicyTabProvider() {\n-        return policyTabProvider;\n-    }\n }"},{"sha":"9009d371faa73aba9e5ffe44b4291c727e05fa06","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -80,8 +80,9 @@ protected List<Locale> getSupportedLocales() {\n     }\n \n     @Override\n-    protected void authenticate(final String username, final String password, final AjaxRequestTarget target) throws\n-            AccessControlException {\n+    protected void authenticate(final String username, final String password, final AjaxRequestTarget target)\n+            throws AccessControlException {\n+\n         if (SyncopeWebApplication.get().getAnonymousUser().equals(username)) {\n             throw new AccessControlException(\"Illegal username\");\n         }"},{"sha":"f0156eb5c4df8aac4228cb9fac144df88ea0686b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPropagationActions.groovy","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPropagationActions.groovy?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -18,7 +18,6 @@\n  * under the License.\n  */\n import groovy.transform.CompileStatic\n-import java.util.Collections\n import java.util.Set\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit\n import org.apache.syncope.core.persistence.api.entity.resource.Provision\n@@ -32,12 +31,12 @@ class MyPropagationActions implements PropagationActions {\n   \n   @Override\n   Set<String> moreAttrsToGet(PropagationTask task, OrgUnit orgUnit) {\n-    return Collections.emptySet();\n+    return Set.of();\n   }\n \n   @Override\n   Set<String> moreAttrsToGet(PropagationTask task, Provision provision) {\n-    return Collections.emptySet();\n+    return Set.of();\n   }\n \n   @Override"},{"sha":"973c3c0370aefea69fb8435618ff32df1c5d9506","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0df00f3be5203fc2244d6fc8298f5cc1cafef51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=b0df00f3be5203fc2244d6fc8298f5cc1cafef51","patch":"@@ -25,10 +25,10 @@\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n \n import java.util.List;\n+import org.apache.syncope.client.console.SyncopeIdMConsoleContext;\n+import org.apache.syncope.client.console.SyncopeIdRepoConsoleContext;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n@@ -71,20 +71,6 @@ public WicketEndpointRepository wicketEndpointRepository() {\n             return new WicketEndpointRepositoryDefault();\n         }\n \n-        @Bean\n-        public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-            lookup.load();\n-            return lookup;\n-        }\n-\n-        @Bean\n-        public MIMETypesLoader mimeTypesLoader() {\n-            MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n-            mimeTypesLoader.load();\n-            return mimeTypesLoader;\n-        }\n-\n         @Bean\n         public PreviewUtils previewUtils() {\n             return new PreviewUtils();\n@@ -98,6 +84,8 @@ public static void setUp() {\n                 AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n                 ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n                 ctx.register(SyncopeWebApplication.class);\n+                ctx.register(SyncopeIdRepoConsoleContext.class);\n+                ctx.register(SyncopeIdMConsoleContext.class);\n                 ctx.refresh();\n \n                 UTILITY_UI = new UtilityUIT(new WicketTester(ctx.getBean(SyncopeWebApplication.class)));"}]}