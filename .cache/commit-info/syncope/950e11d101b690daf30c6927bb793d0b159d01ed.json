{"sha":"950e11d101b690daf30c6927bb793d0b159d01ed","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk1MGUxMWQxMDFiNjkwZGFmMzBjNjkyN2JiNzkzZDBiMTU5ZDAxZWQ=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-03-07T09:37:22Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-03-07T11:21:16Z"},"message":"[SYNCOPE-1439] Fixed user membership attributes not updated in some cases","tree":{"sha":"14c0e460a9a3153ad5cdf57474fa82c974b39eb1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/14c0e460a9a3153ad5cdf57474fa82c974b39eb1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/950e11d101b690daf30c6927bb793d0b159d01ed","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/950e11d101b690daf30c6927bb793d0b159d01ed","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/950e11d101b690daf30c6927bb793d0b159d01ed","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/950e11d101b690daf30c6927bb793d0b159d01ed/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"66a75481e5f936654eb4be21526c8e1185fb2a51","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66a75481e5f936654eb4be21526c8e1185fb2a51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/66a75481e5f936654eb4be21526c8e1185fb2a51"}],"stats":{"total":372,"additions":346,"deletions":26},"files":[{"sha":"925e8e604d80dc70e5f261b9e27f316fcd63fa8d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractMultiPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=950e11d101b690daf30c6927bb793d0b159d01ed","patch":"@@ -60,6 +60,7 @@ public AbstractMultiPanel(\n \n         form = new Form<>(\"innerForm\");\n         form.setDefaultButton(null);\n+        form.setMultiPart(true);\n         container.add(form);\n         // -----------------------\n "},{"sha":"b4ca67bd93a876a4d78fe19bb04c2d08a1a066fe","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=950e11d101b690daf30c6927bb793d0b159d01ed","patch":"@@ -186,14 +186,15 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n                 updated.getVirAttrs().add(virAttr);\n             }\n         }\n+\n         if (updated instanceof GroupableRelatableTO && original instanceof GroupableRelatableTO) {\n             GroupableRelatableTO.class.cast(original).getMemberships().forEach(oMemb -> {\n                 GroupableRelatableTO.class.cast(updated).getMembership(oMemb.getGroupKey()).ifPresent(uMemb -> {\n                     oMemb.getPlainAttrs().stream().\n-                            filter(attr -> uMemb.getPlainAttr(attr.getSchema()).isPresent()).\n+                            filter(attr -> !uMemb.getPlainAttr(attr.getSchema()).isPresent()).\n                             forEach(attr -> uMemb.getPlainAttrs().add(attr));\n                     oMemb.getVirAttrs().stream().\n-                            filter(attr -> uMemb.getVirAttr(attr.getSchema()).isPresent()).\n+                            filter(attr -> !uMemb.getVirAttr(attr.getSchema()).isPresent()).\n                             forEach(attr -> uMemb.getVirAttrs().add(attr));\n                 });\n             });\n@@ -210,4 +211,5 @@ protected void fixPlainAndVirAttrs(final AnyTO updated, final AnyTO original) {\n             });\n         }\n     }\n+\n }"},{"sha":"8d82acb3d6440c13ae0bcb8922469c3b6bbbd471","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":128,"deletions":24,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/950e11d101b690daf30c6927bb793d0b159d01ed/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=950e11d101b690daf30c6927bb793d0b159d01ed","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -47,7 +48,8 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.AttributableTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n@@ -64,6 +66,7 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -113,7 +116,7 @@ public <T extends AnyTO> PlainAttrs(\n \n             @Override\n             public WebMarkupContainer getPanel(final String panelId) {\n-                return new PlainSchemas(panelId, schemas, attrs);\n+                return new PlainSchemasOwn(panelId, schemas, attrTOs);\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n@@ -134,10 +137,19 @@ protected void populateItem(final ListItem<MembershipTO> item) {\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n-                        return new PlainSchemas(\n+                        return new PlainSchemasMemberships(\n                                 panelId,\n                                 membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new ListModel<>(getAttrsFromTO(membershipTO)));\n+                                new LoadableDetachableModel<AttributableTO>() { // SYNCOPE-1439\n+\n+                            private static final long serialVersionUID = 526768546610546553L;\n+\n+                            @Override\n+                            protected AttributableTO load() {\n+                                return membershipTO;\n+                            }\n+\n+                        });\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -377,15 +389,88 @@ protected PageReference getPageReference() {\n         return panel;\n     }\n \n-    public class PlainSchemas extends Schemas {\n+    protected class PlainSchemasMemberships extends PlainSchemas<AttributableTO> {\n+\n+        private static final long serialVersionUID = 456754923340249215L;\n+\n+        public PlainSchemasMemberships(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<AttributableTO> attributableTO) {\n+\n+            super(id, schemas, attributableTO);\n+\n+            add(new ListView<AttrTO>(\"schemas\",\n+                    new ListModel<AttrTO>(new ArrayList<AttrTO>(\n+                            attributableTO.getObject().getPlainAttrs().stream().sorted(attrComparator).\n+                                    collect(Collectors.toList())))) {\n+\n+                private static final long serialVersionUID = 5306618783986001008L;\n+\n+                @Override\n+                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+                protected void populateItem(final ListItem<AttrTO> item) {\n+                    AttrTO attrTO = item.getModelObject();\n+\n+                    AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n+                    if (mode == AjaxWizard.Mode.TEMPLATE\n+                            || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n+\n+                        FieldPanel.class.cast(panel).setNewModel(new Model() {\n+\n+                            private static final long serialVersionUID = -4214654722524358000L;\n+\n+                            @Override\n+                            public Serializable getObject() {\n+                                return (!attributableTO.getObject().getPlainAttr(attrTO.getSchema()).\n+                                        get().getValues().isEmpty())\n+                                                ? attributableTO.getObject().getPlainAttr(attrTO.getSchema()).\n+                                                        get().getValues().get(0)\n+                                                : null;\n+                            }\n+\n+                            @Override\n+                            public void setObject(final Serializable object) {\n+                                attributableTO.getObject().getPlainAttr(attrTO.getSchema()).get().getValues().clear();\n+                                if (object != null) {\n+                                    attributableTO.getObject().getPlainAttr(attrTO.getSchema()).\n+                                            get().getValues().add(object.toString());\n+                                }\n+                            }\n+                        });\n+                    } else {\n+                        panel = new MultiFieldPanel.Builder<>(new ListModel<String>() {\n+\n+                            private static final long serialVersionUID = -1765231556272935141L;\n+\n+                            @Override\n+                            public List<String> getObject() {\n+                                return attributableTO.getObject().getPlainAttr(attrTO.getSchema()).get().getValues();\n+                            }\n+                        }).build(\"panel\",\n+                                attrTO.getSchema(),\n+                                FieldPanel.class.cast(panel));\n+                        // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n+                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n+                    }\n+                    item.add(panel);\n+\n+                    setExternalAction(attrTO, panel);\n+                }\n+            });\n+        }\n+    }\n+\n+    protected class PlainSchemasOwn extends PlainSchemas<List<AttrTO>> {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n \n-        public PlainSchemas(\n+        public PlainSchemasOwn(\n                 final String id,\n                 final Map<String, PlainSchemaTO> schemas,\n-                final IModel<List<Attr>> attrTOs) {\n-            super(id);\n+                final IModel<List<AttrTO>> attrTOs) {\n+\n+            super(id, schemas, attrTOs);\n \n             add(new ListView<Attr>(\"schemas\", attrTOs) {\n \n@@ -399,6 +484,7 @@ protected void populateItem(final ListItem<Attr> item) {\n                     AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n                     if (mode == AjaxWizard.Mode.TEMPLATE\n                             || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n+\n                         FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n                     } else {\n                         panel = new MultiFieldPanel.Builder<>(\n@@ -411,24 +497,42 @@ protected void populateItem(final ListItem<Attr> item) {\n                     }\n                     item.add(panel);\n \n-                    Optional<Attr> prevAttr = previousObject == null\n-                            ? Optional.empty()\n-                            : previousObject.getPlainAttr(attrTO.getSchema());\n-                    if (previousObject != null\n-                            && ((!prevAttr.isPresent() && attrTO.getValues().stream().anyMatch(StringUtils::isNotBlank))\n-                            || (prevAttr.isPresent() && !ListUtils.isEqualList(\n-                            prevAttr.get().getValues().stream().\n-                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n-                            attrTO.getValues().stream().\n-                                    filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n-\n-                        List<String> oldValues = prevAttr.isPresent()\n-                                ? prevAttr.get().getValues()\n-                                : Collections.<String>emptyList();\n-                        panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n-                    }\n+                    setExternalAction(attrTO, panel);\n                 }\n             });\n         }\n     }\n+\n+    protected abstract class PlainSchemas<T> extends Schemas {\n+\n+        private static final long serialVersionUID = 8315035592714180404L;\n+\n+        public PlainSchemas(\n+                final String id,\n+                final Map<String, PlainSchemaTO> schemas,\n+                final IModel<T> attrTOs) {\n+\n+            super(id);\n+        }\n+\n+        protected void setExternalAction(final AttrTO attrTO, final AbstractFieldPanel<?> panel) {\n+            Optional<AttrTO> prevAttr = previousObject == null\n+                    ? Optional.empty()\n+                    : previousObject.getPlainAttr(attrTO.getSchema());\n+            if (previousObject != null\n+                    && ((!prevAttr.isPresent() && attrTO.getValues().stream().anyMatch(StringUtils::isNotBlank))\n+                    || (prevAttr.isPresent() && !ListUtils.isEqualList(\n+                    prevAttr.get().getValues().stream().\n+                            filter(StringUtils::isNotBlank).collect(Collectors.toList()),\n+                    attrTO.getValues().stream().\n+                            filter(StringUtils::isNotBlank).collect(Collectors.toList()))))) {\n+\n+                List<String> oldValues = prevAttr.isPresent()\n+                        ? prevAttr.get().getValues()\n+                        : Collections.<String>emptyList();\n+                panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n+            }\n+        }\n+    }\n+\n }"},{"sha":"691ec4ec170d408bc63c47edb5eeff7b76da7753","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":213,"deletions":0,"changes":213,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/950e11d101b690daf30c6927bb793d0b159d01ed/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/950e11d101b690daf30c6927bb793d0b159d01ed/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=950e11d101b690daf30c6927bb793d0b159d01ed","patch":"@@ -58,6 +58,10 @@ public void filteredSearch() {\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n                 + \"textField\", TextField.class);\n+        TESTER.assertComponent(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:1:panel:container:value:\"\n+                + \"textField\", TextField.class);\n     }\n \n     @Test\n@@ -322,6 +326,215 @@ public void editUserMembership() {\n         TESTER.cleanupFeedbackMessages();\n     }\n \n+    @Test\n+    public void editUserMemberships() {\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+                Constants.ON_CLICK);\n+\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        // click on \"edit\"\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n+\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // add \"additional\" group in order to show membership attributes\n+        formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+                Constants.ON_CLICK);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // open membership attributes accordion\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n+                Constants.ON_CLICK);\n+\n+        // edit multivalue text field, set 2 elements in total\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n+                TextField.class);\n+        formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n+                + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", \"2019-03-05\");\n+\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panelPlus:add\"));\n+\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n+                TextField.class);\n+        formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n+                + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", \"2019-03-06\");\n+\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panelPlus:add\"));\n+\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n+                + \"container:content:group:beans:0:fields:1:field\", Label.class);\n+\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+\n+        // reopen form and go to Plain Attributes page...\n+        component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // add \"additional\" group in order to show membership attributes\n+        formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+                Constants.ON_CLICK);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // open membership attributes accordion\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n+                Constants.ON_CLICK);\n+\n+        // ... check multivalue field values has been saved\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n+                TextField.class);\n+\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n+                + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n+                TextField.class);\n+\n+        Calendar cal = Calendar.getInstance();\n+        cal.set(2019, Calendar.MARCH, 5, 0, 0, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+        Calendar cal2 = Calendar.getInstance();\n+        cal2.set(2019, Calendar.MARCH, 6, 0, 0, 0);\n+        cal2.set(Calendar.MILLISECOND, 0);\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n+                + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n+                + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", cal2.getTime());\n+\n+        // ... remove all values from multivalue field\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n+                + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:drop\",\n+                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n+                + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:drop\",\n+                Constants.ON_CLICK);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n+                + \"container:content:group:beans:0:fields:1:field\", Label.class);\n+\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+\n+        // reopen form and go to Plain Attributes page...\n+        component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // add \"additional\" group in order to show membership attributes\n+        formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+                Constants.ON_CLICK);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        // open membership attributes accordion\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n+                Constants.ON_CLICK);\n+\n+        // ... check multivalue field is now empty\n+        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n+                + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", null);\n+        component = findComponentByProp(\"syncope-path\", TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n+                + \"content:schemas:5:panel:multiValueContainer:innerForm\",\n+                TAB_PANEL + \"outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n+                + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\");\n+        assertNull(component);\n+\n+        // close the wizard\n+        formTester.submit(\"buttons:cancel\");\n+    }\n+\n     @Test\n     public void checkDeleteUsrLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");"}]}