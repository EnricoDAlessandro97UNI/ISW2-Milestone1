{"sha":"943fe22868c43da12e9b25f11a76926e16ee63a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk0M2ZlMjI4NjhjNDNkYTEyZTliMjVmMTFhNzY5MjZlMTZlZTYzYTc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-09T17:26:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-09T17:26:04Z"},"message":"Fixing console behavior on session expiration\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246775 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6bdc48f9dd8c3bd89a5f48d0bde71f86888991f3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6bdc48f9dd8c3bd89a5f48d0bde71f86888991f3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/943fe22868c43da12e9b25f11a76926e16ee63a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/943fe22868c43da12e9b25f11a76926e16ee63a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/943fe22868c43da12e9b25f11a76926e16ee63a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/943fe22868c43da12e9b25f11a76926e16ee63a7/comments","author":null,"committer":null,"parents":[{"sha":"2eef472041062d48ba54db1c25fabd45624cfaea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2eef472041062d48ba54db1c25fabd45624cfaea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2eef472041062d48ba54db1c25fabd45624cfaea"}],"stats":{"total":394,"additions":100,"deletions":294},"files":[{"sha":"cadc53da5cdf75c2d132a72e423653f61bab9d2e","filename":"console/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -95,14 +95,12 @@\n         <dependency>\n             <groupId>org.apache.wicket</groupId>\n             <artifactId>wicket-auth-roles</artifactId>\n-            <type>jar</type>\n         </dependency>\n \n         <dependency>\n             <groupId>org.syncope</groupId>\n             <artifactId>syncope-client</artifactId>\n             <version>${project.version}</version>\n-            <type>jar</type>\n         </dependency>\n \n         <dependency>"},{"sha":"2d727610a598c8865a76728a6664a4187b7b916b","filename":"console/src/main/java/org/syncope/console/SyncopeApplication.java","status":"modified","additions":30,"deletions":34,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -14,16 +14,21 @@\n  */\n package org.syncope.console;\n \n+import org.apache.wicket.Component;\n+import org.apache.wicket.Page;\n import org.apache.wicket.Request;\n import org.apache.wicket.RequestCycle;\n import org.apache.wicket.Response;\n+import org.apache.wicket.RestartResponseAtInterceptPageException;\n import org.apache.wicket.Session;\n-import org.apache.wicket.authentication.AuthenticatedWebApplication;\n-import org.apache.wicket.authentication.AuthenticatedWebSession;\n+import org.apache.wicket.authorization.IUnauthorizedComponentInstantiationListener;\n+import org.apache.wicket.authorization.strategies.role.IRoleCheckingStrategy;\n import org.apache.wicket.authorization.strategies.role.RoleAuthorizationStrategy;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.protocol.http.PageExpiredException;\n+import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.protocol.http.WebRequest;\n import org.apache.wicket.protocol.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringComponentInjector;\n@@ -43,17 +48,19 @@\n /**\n  * SyncopeApplication class.\n  */\n-public class SyncopeApplication extends AuthenticatedWebApplication {\n-\n-    private SyncopeUser user = null;\n+public class SyncopeApplication extends WebApplication\n+        implements IUnauthorizedComponentInstantiationListener,\n+        IRoleCheckingStrategy {\n \n     @Override\n     protected void init() {\n-        addComponentInstantiationListener(getSpringInjector());\n+        addComponentInstantiationListener(new SpringComponentInjector(this));\n         getResourceSettings().setThrowExceptionOnMissingResource(true);\n \n-        getSecuritySettings().setAuthorizationStrategy(\n-                new RoleAuthorizationStrategy(new SyncopeRolesAuthorizer()));\n+        getSecuritySettings().\n+                setAuthorizationStrategy(new RoleAuthorizationStrategy(this));\n+        getSecuritySettings().\n+                setUnauthorizedComponentInstantiationListener(this);\n \n         // setup authorizations\n         MetaDataRoleAuthorizationStrategy.authorize(Schema.class,\n@@ -144,30 +151,16 @@ public void setupNavigationPane(final WebPage page,\n         page.add(new BookmarkablePageLink(\"logout\", Logout.class));\n     }\n \n-    /**\n-     * Create a new custom SyncopeSession\n-     * @param request\n-     * @param response\n-     * @return Session\n-     */\n     @Override\n     public Session newSession(final Request request, final Response response) {\n-        SyncopeSession session = new SyncopeSession(request);\n-\n-        if (user != null) {\n-            session.setUser(user);\n-        }\n-\n-        return session;\n+        return new SyncopeSession(request);\n     }\n \n-    /**\n-     * @see org.apache.wicket.Application#getHomePage()\n-     */\n     @Override\n     public Class getHomePage() {\n-        return (((SyncopeSession) Session.get()).getUser() == null)\n-                ? Login.class : WelcomePage.class;\n+        return SyncopeSession.get().isAuthenticated()\n+                ? WelcomePage.class\n+                : Login.class;\n     }\n \n     @Override\n@@ -179,17 +172,20 @@ public final RequestCycle newRequestCycle(final Request request,\n     }\n \n     @Override\n-    protected Class<? extends AuthenticatedWebSession> getWebSessionClass() {\n-        return SyncopeSession.class;\n-    }\n+    public void onUnauthorizedInstantiation(final Component component) {\n+        SyncopeSession.get().invalidate();\n \n-    @Override\n-    protected Class<? extends WebPage> getSignInPageClass() {\n-        return Login.class;\n+        if (component instanceof Page) {\n+            throw new PageExpiredException(component.toString());\n+        }\n+\n+        throw new RestartResponseAtInterceptPageException(Login.class);\n     }\n \n-    protected SpringComponentInjector getSpringInjector(){\n+    @Override\n+    public boolean hasAnyRole(\n+            org.apache.wicket.authorization.strategies.role.Roles roles) {\n \n-        return new SpringComponentInjector(this);\n+        return SyncopeSession.get().hasAnyRole(roles);\n     }\n }"},{"sha":"86a8aed8d73505313f111dd5792d779627a4d7f1","filename":"console/src/main/java/org/syncope/console/SyncopeRequestCycle.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -25,8 +25,6 @@\n import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.protocol.http.WebRequest;\n import org.apache.wicket.protocol.http.WebRequestCycle;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.web.client.RestClientException;\n import org.syncope.console.pages.ErrorPage;\n \n@@ -35,12 +33,6 @@\n  */\n public class SyncopeRequestCycle extends WebRequestCycle {\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            SyncopeRequestCycle.class);\n-\n     /**\n      * SyncopeRequestCycle constructor.\n      *\n@@ -58,8 +50,6 @@ public SyncopeRequestCycle(final WebApplication application,\n     public final Page onRuntimeException(final Page cause,\n             final RuntimeException e) {\n \n-        LOG.error(\"An exception was thrown\", e);\n-\n         if (e instanceof UnauthorizedInstantiationException) {\n             return new AccessDeniedPage();\n         }"},{"sha":"791dd57de33a59e013fbd5c3681a3148d3030b19","filename":"console/src/main/java/org/syncope/console/SyncopeRolesAuthorizer.java","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2eef472041062d48ba54db1c25fabd45624cfaea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2eef472041062d48ba54db1c25fabd45624cfaea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java?ref=2eef472041062d48ba54db1c25fabd45624cfaea","patch":"@@ -1,46 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.syncope.console;\n-\n-import org.apache.wicket.Session;\n-import org.apache.wicket.authorization.strategies.role.IRoleCheckingStrategy;\n-import org.apache.wicket.authorization.strategies.role.Roles;\n-\n-/**\n- * The authorizer we need to provide to the authorization strategy \n- * implementation.\n- * {@link org.apache.wicket.authorization.strategies.role.annotations\n- *                                      .AnnotationsRoleAuthorizationStrategy}.\n- */\n-public class SyncopeRolesAuthorizer implements IRoleCheckingStrategy {\n-\n-    /**\n-     * Default Constructor.\n-     */\n-    public SyncopeRolesAuthorizer() {\n-    }\n-\n-    /**\n-     * @see org.apache.wicket.authorization.strategies.role.\n-     *                              IRoleCheckingStrategy#hasAnyRole(Roles)\n-     */\n-    public boolean hasAnyRole(final Roles roles) {\n-        SyncopeUser user = ((SyncopeSession) Session.get()).getUser();\n-\n-        return (user == null) ? false : user.hasAnyRole(roles);\n-    }\n-}"},{"sha":"36b614802cdc18b2ec05e5a3140916321b45a7a5","filename":"console/src/main/java/org/syncope/console/SyncopeSession.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -16,50 +16,43 @@\n \n import org.apache.wicket.Request;\n import org.apache.wicket.Session;\n-import org.apache.wicket.authentication.AuthenticatedWebSession;\n import org.apache.wicket.authorization.strategies.role.Roles;\n+import org.apache.wicket.protocol.http.WebSession;\n \n /**\n  * Custom Syncope Session class.\n  */\n-public class SyncopeSession extends AuthenticatedWebSession {\n+public class SyncopeSession extends WebSession {\n \n-    private SyncopeUser user;\n+    private String username;\n+\n+    private Roles roles = new Roles();\n \n     public static SyncopeSession get() {\n         return (SyncopeSession) Session.get();\n     }\n \n-    public SyncopeSession(Request request) {\n+    public SyncopeSession(final Request request) {\n         super(request);\n-\n-        setLocale(request.getLocale());\n     }\n \n-    public synchronized SyncopeUser getUser() {\n-        return user;\n+    public String getUsername() {\n+        return username;\n     }\n \n-    public synchronized boolean isAuthenticated() {\n-        return (user != null);\n+    public void setUsername(String username) {\n+        this.username = username;\n     }\n \n-    public synchronized void setUser(SyncopeUser user) {\n-        this.user = user;\n-        dirty();\n+    public void setEntitlements(final String[] entitlements) {\n+        roles = new Roles(entitlements);\n     }\n \n-    /*\n-     * Requested by AuthenticatedWebSession, but actually\n-     * not used (replaced in Login page).\n-     */\n-    @Override\n-    public boolean authenticate(final String username, final String password) {\n-        return ((SyncopeSession) Session.get()).getUser() != null;\n+    public boolean isAuthenticated() {\n+        return !roles.isEmpty();\n     }\n \n-    @Override\n-    public Roles getRoles() {\n-        return getUser().getRoles();\n+    public boolean hasAnyRole(final Roles roles) {\n+        return this.roles.hasAnyRole(roles);\n     }\n }"},{"sha":"88a9ec8a60fb84643358a9110242e0cfc7ae3b46","filename":"console/src/main/java/org/syncope/console/SyncopeUser.java","status":"removed","additions":0,"deletions":75,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2eef472041062d48ba54db1c25fabd45624cfaea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2eef472041062d48ba54db1c25fabd45624cfaea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java?ref=2eef472041062d48ba54db1c25fabd45624cfaea","patch":"@@ -1,75 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console;\n-\n-import java.io.Serializable;\n-import org.apache.wicket.authorization.strategies.role.Roles;\n-\n-/**\n- * SyncopeUser to store in SyncopeSession after the authentication.\n- */\n-public class SyncopeUser implements Serializable {\n-\n-    private String username;\n-\n-    private final Roles roles;\n-\n-    /**\n-     * Create a new Syncope session user.\n-     *\n-     * @param username\n-     * @param roles a comma seperated list of roles\n-     * (corresponding to Syncope's entitlements)\n-     */\n-    public SyncopeUser(final String username, final String roles) {\n-        if (username == null) {\n-            throw new IllegalArgumentException(\"username must be not null\");\n-        }\n-        if (roles == null) {\n-            throw new IllegalArgumentException(\"roles must be not null\");\n-        }\n-        this.username = username;\n-        this.roles = new Roles(roles);\n-    }\n-\n-    public String getUsername() {\n-        return username;\n-    }\n-\n-    /**\n-     * Whether this user has any of the given roles.\n-     *\n-     * @param roles\n-     *            set of roles\n-     * @return whether this user has any of the given roles\n-     */\n-    public boolean hasAnyRole(final Roles roles) {\n-        return this.roles.hasAnyRole(roles);\n-    }\n-\n-    /**\n-     * Whether this user has the given role.\n-     *\n-     * @param role\n-     * @return whether this user has the given role\n-     */\n-    public boolean hasRole(final String role) {\n-        return this.roles.hasRole(role);\n-    }\n-\n-    public Roles getRoles() {\n-        return roles;\n-    }\n-}"},{"sha":"4fa810eb5d103c349e783054a3f738734a466141","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,7 +18,7 @@ public final class Constants {\n \n     public static final String CONF_USERS_ATTRIBUTES_VIEW =\n             \"users.attributes.view\";\n-    \n+\n     public static final String CONF_USER_SCHEMA_PAGINATOR_ROWS =\n             \"user.schema.paginator.rows\";\n "},{"sha":"80ec8fe283eba837f741e1d191bea3cf33e4fe2b","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":12,"deletions":27,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -24,8 +24,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.syncope.console.SyncopeApplication;\n-import org.syncope.console.SyncopeSession;\n-import org.syncope.console.SyncopeUser;\n import org.syncope.console.commons.XMLRolesReader;\n \n /**\n@@ -70,30 +68,17 @@ private void pageSetup() {\n \n         final String kind = getClass().getSimpleName().toLowerCase();\n         Component kindIcon = get(kind);\n-        kindIcon.add(new AbstractBehavior() {\n-\n-            @Override\n-            public void onComponentTag(final Component component,\n-                    final ComponentTag tag) {\n-\n-                tag.put(\"class\", kind);\n-            }\n-        });\n-        add(kindIcon);\n-    }\n-\n-    /**\n-     * @return the current SyncopeSession\n-     */\n-    public SyncopeSession getSyncopeSession() {\n-        return (SyncopeSession) getSession();\n-    }\n-\n-    /**\n-     * @return the current SyncopeUser logged-in from the session\n-     */\n-    public SyncopeUser getSyncopeUser() {\n-        return (SyncopeUser) getSyncopeSession().getUser();\n-\n+        if (kindIcon != null) {\n+            kindIcon.add(new AbstractBehavior() {\n+\n+                @Override\n+                public void onComponentTag(final Component component,\n+                        final ComponentTag tag) {\n+\n+                    tag.put(\"class\", kind);\n+                }\n+            });\n+            add(kindIcon);\n+        }\n     }\n }"},{"sha":"3f15bd363c950a407c57c8dc9bbd36625de84e05","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":30,"deletions":48,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -20,7 +20,6 @@\n import org.apache.commons.httpclient.UsernamePasswordCredentials;\n import org.apache.commons.httpclient.auth.AuthScope;\n import org.apache.wicket.PageParameters;\n-import org.apache.wicket.Session;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.form.Button;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n@@ -38,7 +37,6 @@\n import org.springframework.web.client.RestTemplate;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.SyncopeSession;\n-import org.syncope.console.SyncopeUser;\n \n /**\n  * Syncope Login page.\n@@ -63,7 +61,7 @@ public class Login extends WebPage {\n \n     private TextField passwordField;\n \n-    private DropDownChoice<String> languageSelect;\n+    private DropDownChoice<Locale> languageSelect;\n \n     public Login(final PageParameters parameters) {\n         super(parameters);\n@@ -88,11 +86,20 @@ public Login(final PageParameters parameters) {\n \n             @Override\n             public void onSubmit() {\n-                SyncopeUser user = authenticate(usernameField.getRawInput(),\n+                String[] entitlements = authenticate(\n+                        usernameField.getRawInput(),\n                         passwordField.getRawInput());\n \n-                if (user != null) {\n-                    ((SyncopeSession) Session.get()).setUser(user);\n+                if (entitlements == null || entitlements.length == 0) {\n+                    LOG.error(\"No entitlements found for \"\n+                            + usernameField.getRawInput());\n+                    getSession().error(getString(\"login-error\"));\n+                } else {\n+                    SyncopeSession.get().setUsername(\n+                            usernameField.getRawInput());\n+                    SyncopeSession.get().setEntitlements(\n+                            entitlements);\n+\n                     setResponsePage(WelcomePage.class, parameters);\n                 }\n             }\n@@ -105,80 +112,55 @@ public void onSubmit() {\n         add(new FeedbackPanel(\"feedback\"));\n     }\n \n-    /**\n-     * Authenticate the user.\n-     *\n-     * @param username provided\n-     * @param password provided\n-     * @return SyncopeUser object if the authorization succedes, null otherwise.\n-     */\n-    public SyncopeUser authenticate(final String username,\n-            final String password) {\n-\n-        SyncopeUser user = null;\n-\n+    public String[] authenticate(final String username, final String password) {\n         //1.Set provided credentials to check\n         ((CommonsClientHttpRequestFactory) restTemplate.getRequestFactory()).\n                 getHttpClient().getState().setCredentials(\n                 AuthScope.ANY,\n                 new UsernamePasswordCredentials(username, password));\n \n         //2.Search authorizations for user specified by credentials\n-        List<String> entitlements = null;\n+        String[] entitlements = null;\n         try {\n-            entitlements = Arrays.asList(\n-                    restTemplate.getForObject(\n-                    baseURL + \"auth/entitlements.json\", String[].class));\n+            entitlements = restTemplate.getForObject(\n+                    baseURL + \"auth/entitlements.json\", String[].class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While fetching user's entitlements\", e);\n             getSession().error(e.getMessage());\n         }\n \n-        if (entitlements != null && entitlements.size() > 0) {\n-            StringBuilder roles = new StringBuilder();\n-\n-            for (int i = 0; i < entitlements.size(); i++) {\n-                roles.append(entitlements.get(i));\n-                if (i != entitlements.size() - 1) {\n-                    roles.append(\",\");\n-                }\n-            }\n-\n-            user = new SyncopeUser(username, roles.toString());\n-        } else {\n-            LOG.error(\"No entitlements found found for \" + username);\n-            getSession().error(getString(\"login-error\"));\n-        }\n-\n-        return user;\n+        return entitlements;\n     }\n \n     /**\n      * Inner class which implements (custom) Locale DropDownChoice component.\n      */\n-    public class LocaleDropDown extends DropDownChoice {\n+    public class LocaleDropDown extends DropDownChoice<Locale> {\n \n-        private class LocaleRenderer extends ChoiceRenderer {\n+        private class LocaleRenderer extends ChoiceRenderer<Locale> {\n \n             @Override\n-            public String getDisplayValue(Object locale) {\n-                return ((Locale) locale).getDisplayName(getLocale());\n+            public String getDisplayValue(final Locale locale) {\n+                return locale.getDisplayName(getLocale());\n             }\n         }\n \n-        public LocaleDropDown(String id, List<Locale> supportedLocales) {\n+        public LocaleDropDown(final String id,\n+                final List<Locale> supportedLocales) {\n+\n             super(id, supportedLocales);\n+\n             setChoiceRenderer(new LocaleRenderer());\n-            setModel(new IModel() {\n+            setModel(new IModel<Locale>() {\n \n                 @Override\n-                public Object getObject() {\n+                public Locale getObject() {\n                     return getSession().getLocale();\n                 }\n \n                 @Override\n-                public void setObject(Object object) {\n-                    getSession().setLocale((Locale) object);\n+                public void setObject(Locale object) {\n+                    getSession().setLocale(object);\n                 }\n \n                 @Override"},{"sha":"1e6d1ad5862aca31ca52621ce4ff6d6caf392203","filename":"console/src/main/java/org/syncope/console/pages/Logout.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogout.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -15,24 +15,19 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.PageParameters;\n+import org.syncope.console.SyncopeSession;\n \n /**\n  * Syncope Logout.\n  */\n-public class Logout extends BasePage\n-{\n+public class Logout extends BasePage {\n \n-    public Logout( PageParameters parameters )\n-    {\n-        super( parameters );\n+    public Logout(PageParameters parameters) {\n+        super(parameters);\n \n-        getSyncopeSession().setUser(null);\n-        \n-        getSyncopeSession().invalidate();\n+        SyncopeSession.get().invalidate();\n         getRequestCycle().setRedirect(true);\n \n         setResponsePage(getApplication().getHomePage());\n-        \n     }\n-\n }"},{"sha":"1aecf6e22ed28083d7d534dfe602c1799dcbe490","filename":"console/src/main/java/org/syncope/console/pages/WelcomePage.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -37,8 +37,7 @@ public WelcomePage(final PageParameters parameters) {\n         ((SyncopeApplication) getApplication()).setupNavigationPane(\n                 this, xmlRolesReader);\n \n-        add(new Label(\"username\",\n-                new Model<String>(((SyncopeSession) getSession()).getUser().\n-                getUsername())));\n+        add(new Label(\"username\", new Model<String>(\n+                ((SyncopeSession) getSession()).getUsername())));\n     }\n }"},{"sha":"4c4d29413f835c979bea85229cc84977c93a58ac","filename":"console/src/test/resources/content.xml","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/943fe22868c43da12e9b25f11a76926e16ee63a7/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=943fe22868c43da12e9b25f11a76926e16ee63a7","patch":"@@ -32,19 +32,8 @@\n     <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n     <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"mail.templates.url\" confValue=\"http://localhost:9080/syncope/mailTemplates/\"/>\n-    <SyncopeConf confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n-    <SyncopeConf confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n-    <SyncopeConf confKey=\"generateToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"generateToken.email.subject\" confValue=\"Syncope: reset requested\"/>\n-    <SyncopeConf confKey=\"generateToken.email.template.html\" confValue=\"generateToken.html\"/>\n-    <SyncopeConf confKey=\"generateToken.email.template.txt\" confValue=\"generateToken.txt\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.subject\" confValue=\"Syncope: reset successful\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.template.html\" confValue=\"verifyToken.html\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.template.txt\" confValue=\"verifyToken.txt\"/>\n+    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n+    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>"}]}