{"sha":"673ae65413afc764b2457a839619d88bbeb0a36b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY3M2FlNjU0MTNhZmM3NjRiMjQ1N2E4Mzk2MTlkODhiYmViMGEzNmI=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-31T08:19:28Z"},"committer":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-31T08:19:28Z"},"message":"fix checkstyle violations with line length","tree":{"sha":"95b80dc5cd9cfd22f9865f865b2c01bf609c1f65","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/95b80dc5cd9cfd22f9865f865b2c01bf609c1f65"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/673ae65413afc764b2457a839619d88bbeb0a36b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEElUyo8doQ6pkfeJVxEb3Dumou+aoFAl4z4xAACgkQEb3Dumou\n+arCpAgAvucMkJTIliXcdPrt53v42fj8Q2uN7RYA4tbU/kJKj0CBFoTK7J/pe3F9\n6+/vsnK1L6sqaAERviIoSc8NQBDM1tnsJfLNRf+b8YvgD5wrChx1JyzH/j25heuz\nlW3yAnEiUGJu3+EZQvNv3v/k78r4SSPJXpNMG2YhE8fHOfyGCkmLT+IZv0fETGCf\n6SNKegDVx1KT/Pr1H072Jf8yaaHsSEOD3BVsouRIlffiBvhIyCQUJKQZmPSSrAEs\ndYih7Op43SzKUrJ43OcWLmm3EgS5OB/5IBGSuS63WGaIC4i/HiYsmLXogve2+sQ1\nPyZiy547p5ux/UIKl6msNEqhFaTrMQ==\n=LfeP\n-----END PGP SIGNATURE-----","payload":"tree 95b80dc5cd9cfd22f9865f865b2c01bf609c1f65\nparent 763a2542e2c200ff3750100ba690b1f0effae4ec\nauthor Misagh Moayyed <mm1844@gmail.com> 1580458768 +0400\ncommitter Misagh Moayyed <mm1844@gmail.com> 1580458768 +0400\n\nfix checkstyle violations with line length\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/673ae65413afc764b2457a839619d88bbeb0a36b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/673ae65413afc764b2457a839619d88bbeb0a36b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/673ae65413afc764b2457a839619d88bbeb0a36b/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"parents":[{"sha":"763a2542e2c200ff3750100ba690b1f0effae4ec","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/763a2542e2c200ff3750100ba690b1f0effae4ec","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/763a2542e2c200ff3750100ba690b1f0effae4ec"}],"stats":{"total":11,"additions":7,"deletions":4},"files":[{"sha":"41ee5d68f142dda073747a4fb5d9402755423152","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/673ae65413afc764b2457a839619d88bbeb0a36b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/673ae65413afc764b2457a839619d88bbeb0a36b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=673ae65413afc764b2457a839619d88bbeb0a36b","patch":"@@ -277,18 +277,21 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                   @Override\n                                   protected void restore(final String json, final AjaxRequestTarget target) {\n                                       // The original audit record masks the password and the security\n-                                      // answer; so we cannot use the audit record to resurrect the entry based on mask data.\n+                                      // answer; so we cannot use the audit record to resurrect the entry\n+                                      // based on mask data.\n                                       //\n-                                      // The method behavior below will reset the audit record such that the current security\n-                                      // answer and the password for the object are always maintained, and such properties for the\n+                                      // The method behavior below will reset the audit record such\n+                                      // that the current security answer and the password for the object\n+                                      // are always maintained, and such properties for the\n                                       // user cannot be restored using audit records.\n                                       UserTO original = model.getObject();\n                                       try {\n                                           UserTO updated = MAPPER.readValue(json, UserTO.class);\n                                           UserUR updateReq = AnyOperations.diff(updated, original, false);\n                                           updateReq.setPassword(null);\n                                           updateReq.setSecurityAnswer(null);\n-                                          ProvisioningResult<UserTO> result = restClient.update(original.getETagValue(), updateReq);\n+                                          ProvisioningResult<UserTO> result =\n+                                              restClient.update(original.getETagValue(), updateReq);\n                                           model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n \n                                           SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));"}]}