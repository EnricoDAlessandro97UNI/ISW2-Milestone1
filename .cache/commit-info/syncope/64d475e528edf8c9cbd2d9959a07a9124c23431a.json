{"sha":"64d475e528edf8c9cbd2d9959a07a9124c23431a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY0ZDQ3NWU1MjhlZGY4YzljYmQyZDk5NTlhMDdhOTEyNGMyMzQzMWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-08T11:18:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-08T11:18:46Z"},"message":"[SYNCOPE-666] Tests working as application/xml as well","tree":{"sha":"33181406091b8b0975ef25af4122e736da928b8a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/33181406091b8b0975ef25af4122e736da928b8a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/64d475e528edf8c9cbd2d9959a07a9124c23431a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64d475e528edf8c9cbd2d9959a07a9124c23431a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64d475e528edf8c9cbd2d9959a07a9124c23431a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64d475e528edf8c9cbd2d9959a07a9124c23431a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"54de3984790735467e69b46feb934d17f2fd2b42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/54de3984790735467e69b46feb934d17f2fd2b42","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/54de3984790735467e69b46feb934d17f2fd2b42"}],"stats":{"total":215,"additions":132,"deletions":83},"files":[{"sha":"70ef70e2e722c9402f34a046360f3c92787d5c43","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -159,7 +159,7 @@ public boolean check(final ConnInstanceTO connectorTO) {\n \n         boolean check = false;\n         try {\n-            check = getService(ConnectorService.class).check(toBeChecked);\n+            check = getService(ConnectorService.class).check(toBeChecked).getElement();\n         } catch (Exception e) {\n             LOG.error(\"While checking {}\", toBeChecked, e);\n         }\n@@ -170,7 +170,7 @@ public boolean check(final ConnInstanceTO connectorTO) {\n     public boolean check(final ResourceTO resourceTO) {\n         boolean check = false;\n         try {\n-            check = getService(ResourceService.class).check(resourceTO);\n+            check = getService(ResourceService.class).check(resourceTO).getElement();\n         } catch (Exception e) {\n             LOG.error(\"Connector not found {}\", resourceTO.getConnector(), e);\n         }"},{"sha":"ef490e24f6ee9663bf9d4dc8eede0d9a77796480","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.GroupService;\n@@ -124,7 +124,7 @@ public void unlink(final String etag, final long groupId, final List<StatusBean>\n             GroupService service = getService(etag, GroupService.class);\n             service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNLINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+                            ResourceKey.class));\n             resetClient(GroupService.class);\n         }\n     }\n@@ -134,7 +134,7 @@ public void link(final String etag, final long groupId, final List<StatusBean> s\n             GroupService service = getService(etag, GroupService.class);\n             service.bulkAssociation(groupId, ResourceAssociationActionType.LINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+                            ResourceKey.class));\n             resetClient(GroupService.class);\n         }\n     }\n@@ -145,7 +145,7 @@ public BulkActionResult deprovision(final String etag, final long groupId, final\n             GroupService service = getService(etag, GroupService.class);\n             result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.DEPROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n@@ -158,7 +158,7 @@ public BulkActionResult provision(final String etag, final long groupId, final L\n             GroupService service = getService(etag, GroupService.class);\n             result = service.bulkAssociation(groupId, ResourceAssociationActionType.PROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n@@ -171,7 +171,7 @@ public BulkActionResult unassign(final String etag, final long groupId, final Li\n             GroupService service = getService(etag, GroupService.class);\n             result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n@@ -184,7 +184,7 @@ public BulkActionResult assign(final String etag, final long groupId, final List\n             GroupService service = getService(etag, GroupService.class);\n             result = service.bulkAssociation(groupId, ResourceAssociationActionType.ASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }"},{"sha":"b2fb4e398fad6efafaa3c7ac4ae39e1de9d03807","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.UserService;\n@@ -152,7 +152,7 @@ public void unlink(final String etag, final long userId, final List<StatusBean>\n             UserService service = getService(etag, UserService.class);\n             service.bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+                            ResourceKey.class));\n             resetClient(UserService.class);\n         }\n     }\n@@ -162,9 +162,8 @@ public void link(final String etag, final long userId, final List<StatusBean> st\n             UserService service = getService(etag, UserService.class);\n \n             final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-            associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+            associationMod.getTargetResources().addAll(CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceKey.class));\n             service.bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod);\n \n             resetClient(UserService.class);\n@@ -177,7 +176,7 @@ public BulkActionResult deprovision(final String etag, final long userId, final\n             UserService service = getService(etag, UserService.class);\n             result = service.bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }\n@@ -192,9 +191,8 @@ public BulkActionResult provision(final String etag, final long userId,\n             UserService service = getService(etag, UserService.class);\n \n             final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-            associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+            associationMod.getTargetResources().addAll(CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n \n@@ -211,7 +209,7 @@ public BulkActionResult unassign(final String etag, final long userId, final Lis\n             UserService service = getService(etag, UserService.class);\n             result = service.bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class)).\n+                            ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }\n@@ -226,9 +224,8 @@ public BulkActionResult assign(final String etag, final long userId,\n             UserService service = getService(etag, UserService.class);\n \n             final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-            associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceName.class));\n+            associationMod.getTargetResources().addAll(CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n "},{"sha":"a119827c373f178f589071a19f3057c6ac78879e","filename":"client/lib/pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/client%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fpom.xml?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -47,7 +47,11 @@ under the License.\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>\n-\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-databinding-jaxb</artifactId>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-json-provider</artifactId>"},{"sha":"f894c26dac106b40744363b046bc59c1b01d20b4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/ResourceAssociationMod.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -26,7 +26,7 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n \n /**\n  * This class is used to specify the willing to create associations between user and external references.\n@@ -43,7 +43,7 @@ public class ResourceAssociationMod extends AbstractBaseBean {\n     /**\n      * Target external resources.\n      */\n-    private final List<ResourceName> targetResources = new ArrayList<ResourceName>();\n+    private final List<ResourceKey> targetResources = new ArrayList<ResourceKey>();\n \n     /**\n      * Indicate the willing to change password on target external resources.\n@@ -58,7 +58,7 @@ public class ResourceAssociationMod extends AbstractBaseBean {\n     @XmlElementWrapper(name = \"resources\")\n     @XmlElement(name = \"resource\")\n     @JsonProperty(\"resources\")\n-    public List<ResourceName> getTargetResources() {\n+    public List<ResourceKey> getTargetResources() {\n         return targetResources;\n     }\n "},{"sha":"03710ce3793546da5fa83de9f0dfd9a9a6c5a017","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/BulkActionResult.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -29,6 +29,7 @@\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -37,6 +38,7 @@\n @XmlRootElement(name = \"bulkActionResult\")\n @XmlType\n @XmlAccessorType(XmlAccessType.FIELD)\n+@XmlSeeAlso(BulkActionResult.Status.class)\n public class BulkActionResult extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 2868894178821778133L;"},{"sha":"548741088645231c982226f7b48c6cd580d1fc36","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -24,8 +24,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -38,7 +36,6 @@\n \n @XmlRootElement(name = \"notification\")\n @XmlType\n-@XmlAccessorType(XmlAccessType.FIELD)\n public class NotificationTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -6145117115632592612L;"},{"sha":"0eb6eef82b29bad801dfa5929ff1f95b1479a7dc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/wrap/AnyKey.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FAnyKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FAnyKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FAnyKey.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -18,6 +18,11 @@\n  */\n package org.apache.syncope.common.lib.wrap;\n \n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlRootElement(name = \"anyKey\")\n+@XmlType\n public class AnyKey extends AbstractWrappable<Long> {\n \n     private static final long serialVersionUID = -8664228651057889297L;"},{"sha":"3be7643fe5740e2057395b7a3fc4c08636906b03","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/wrap/BooleanWrap.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FBooleanWrap.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FBooleanWrap.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FBooleanWrap.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.wrap;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlRootElement(name = \"booleanWrap\")\n+@XmlType\n+public class BooleanWrap extends AbstractWrappable<Boolean> {\n+\n+    private static final long serialVersionUID = 3762310846902669241L;\n+\n+}"},{"sha":"1b06c5be5b773121df64e6ddc2596b6d38e8e85e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/wrap/ResourceKey.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FResourceKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FResourceKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FResourceKey.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -21,9 +21,9 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"resourceName\")\n+@XmlRootElement(name = \"resourceKey\")\n @XmlType\n-public class ResourceName extends AbstractWrappable<String> {\n+public class ResourceKey extends AbstractWrappable<String> {\n \n     private static final long serialVersionUID = -175720097924079573L;\n ","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/wrap/ResourceName.java"},{"sha":"94bf21fa457efdb60c6bfed1e7ea73aa4b343632","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/CollectionWrapper.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FCollectionWrapper.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -40,23 +40,23 @@ public static <E, T extends AbstractWrappable<E>> List<T> wrap(final E element,\n     public static <E, T extends AbstractWrappable<E>> List<T> wrap(\n             final Collection<E> collection, final Class<T> reference) {\n \n-        List<T> response = new ArrayList<T>();\n+        List<T> response = new ArrayList<>();\n         for (E element : collection) {\n             response.add(AbstractWrappable.getInstance(reference, element));\n         }\n         return response;\n     }\n \n     public static <T extends AbstractWrappable<String>> List<String> unwrap(final Collection<T> collection) {\n-        List<String> response = new ArrayList<String>();\n+        List<String> response = new ArrayList<>();\n         for (T item : collection) {\n             response.add(item.getElement());\n         }\n         return response;\n     }\n \n     public static List<AuditLoggerName> wrapLogger(final Collection<LoggerTO> logger) {\n-        List<AuditLoggerName> respons = new ArrayList<AuditLoggerName>();\n+        List<AuditLoggerName> respons = new ArrayList<>();\n         for (LoggerTO l : logger) {\n             try {\n                 respons.add(AuditLoggerName.fromLoggerName(l.getKey()));"},{"sha":"c4de80ad5ebb834749742a0fc525cf979da424ed","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.wrap.BooleanWrap;\n \n /**\n  * REST operations for connector bundles and instances.\n@@ -178,7 +179,7 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(\n     @Path(\"check\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    boolean check(@NotNull ConnInstanceTO connInstanceTO);\n+    BooleanWrap check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Reload all connector bundles and instances."},{"sha":"001d71c5c1bbaa6f49c9d13fa349d808fc34450a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -40,7 +40,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n \n@@ -172,7 +172,7 @@ public interface GroupService extends JAXRSService {\n     Response bulkDeassociation(\n             @NotNull @PathParam(\"groupKey\") Long groupKey,\n             @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n-            @NotNull List<ResourceName> resourceNames);\n+            @NotNull List<ResourceKey> resourceNames);\n \n     /**\n      * Executes resource-related operations on given group.\n@@ -193,7 +193,7 @@ Response bulkDeassociation(\n     Response bulkAssociation(\n             @NotNull @PathParam(\"groupKey\") Long groupKey,\n             @NotNull @PathParam(\"type\") ResourceAssociationActionType type,\n-            @NotNull List<ResourceName> resourceNames);\n+            @NotNull List<ResourceKey> resourceNames);\n \n     /**\n      * Executes the provided bulk action."},{"sha":"41204a0ea58ad146311397eba44519c20d1f0b2f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.wrap.AnyKey;\n+import org.apache.syncope.common.lib.wrap.BooleanWrap;\n \n /**\n  * REST operations for external resources.\n@@ -123,8 +124,9 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n      */\n     @POST\n     @Path(\"check\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    boolean check(@NotNull ResourceTO resourceTO);\n+    BooleanWrap check(@NotNull ResourceTO resourceTO);\n \n     /**\n      * De-associate any objects from the given resource."},{"sha":"4866f957c7271768c2365839e1cbf425eea6b164","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -45,7 +45,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n \n@@ -209,7 +209,7 @@ Response create(\n     Response bulkDeassociation(\n             @NotNull @PathParam(\"userKey\") Long userKey,\n             @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n-            @NotNull List<ResourceName> resourceNames);\n+            @NotNull List<ResourceKey> resourceNames);\n \n     /**\n      * Executes resource-related operations on given user."},{"sha":"bd24f22dc134406e9db64ea44773c234d2629efa","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.wrap.BooleanWrap;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.core.logic.ConnectorLogic;\n@@ -121,8 +122,10 @@ public void update(final Long key, final ConnInstanceTO connInstanceTO) {\n     }\n \n     @Override\n-    public boolean check(final ConnInstanceTO connInstanceTO) {\n-        return logic.check(connInstanceTO);\n+    public BooleanWrap check(final ConnInstanceTO connInstanceTO) {\n+        BooleanWrap result = new BooleanWrap();\n+        result.setElement(logic.check(connInstanceTO));\n+        return result;\n     }\n \n     @Override"},{"sha":"98a23a60801efa698b8764f6e004788065e69faf","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/GroupServiceImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n@@ -131,7 +131,7 @@ public Response update(final Long groupKey, final GroupMod groupMod) {\n \n     @Override\n     public Response bulkDeassociation(\n-            final Long groupKey, final ResourceDeassociationActionType type, final List<ResourceName> resourceNames) {\n+            final Long groupKey, final ResourceDeassociationActionType type, final List<ResourceKey> resourceNames) {\n \n         GroupTO group = logic.read(groupKey);\n \n@@ -158,7 +158,7 @@ public Response bulkDeassociation(\n         BulkActionResult result = new BulkActionResult();\n \n         if (type == ResourceDeassociationActionType.UNLINK) {\n-            for (ResourceName resourceName : resourceNames) {\n+            for (ResourceKey resourceName : resourceNames) {\n                 result.getResults().put(resourceName.getElement(),\n                         updated.getResources().contains(resourceName.getElement())\n                                 ? BulkActionResult.Status.FAILURE\n@@ -176,7 +176,7 @@ public Response bulkDeassociation(\n \n     @Override\n     public Response bulkAssociation(\n-            final Long groupKey, final ResourceAssociationActionType type, final List<ResourceName> resourceNames) {\n+            final Long groupKey, final ResourceAssociationActionType type, final List<ResourceKey> resourceNames) {\n \n         GroupTO group = logic.read(groupKey);\n \n@@ -203,7 +203,7 @@ public Response bulkAssociation(\n         BulkActionResult result = new BulkActionResult();\n \n         if (type == ResourceAssociationActionType.LINK) {\n-            for (ResourceName resourceName : resourceNames) {\n+            for (ResourceKey resourceName : resourceNames) {\n                 result.getResults().put(resourceName.getElement(),\n                         updated.getResources().contains(resourceName.getElement())\n                                 ? BulkActionResult.Status.FAILURE"},{"sha":"b6c3f50d8039e386521774d5225c8e054d2129d6","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.wrap.AnyKey;\n+import org.apache.syncope.common.lib.wrap.BooleanWrap;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.core.logic.AbstractResourceAssociator;\n@@ -92,8 +93,10 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n     }\n \n     @Override\n-    public boolean check(final ResourceTO resourceTO) {\n-        return logic.check(resourceTO);\n+    public BooleanWrap check(final ResourceTO resourceTO) {\n+        BooleanWrap result = new BooleanWrap();\n+        result.setElement(logic.check(resourceTO));\n+        return result;\n     }\n \n     @Override"},{"sha":"192b4e088b34a945e154ffceb27d70f1fa59f3bd","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n@@ -155,7 +155,7 @@ public Response status(final Long userKey, final StatusMod statusMod) {\n \n     @Override\n     public Response bulkDeassociation(\n-            final Long userKey, final ResourceDeassociationActionType type, final List<ResourceName> resourceNames) {\n+            final Long userKey, final ResourceDeassociationActionType type, final List<ResourceKey> resourceNames) {\n \n         final UserTO user = logic.read(userKey);\n \n@@ -182,7 +182,7 @@ public Response bulkDeassociation(\n         BulkActionResult result = new BulkActionResult();\n \n         if (type == ResourceDeassociationActionType.UNLINK) {\n-            for (ResourceName resourceName : resourceNames) {\n+            for (ResourceKey resourceName : resourceNames) {\n                 result.getResults().put(\n                         resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n                                 ? BulkActionResult.Status.FAILURE\n@@ -237,7 +237,7 @@ public Response bulkAssociation(\n         BulkActionResult result = new BulkActionResult();\n \n         if (type == ResourceAssociationActionType.LINK) {\n-            for (ResourceName resourceName : associationMod.getTargetResources()) {\n+            for (ResourceKey resourceName : associationMod.getTargetResources()) {\n                 result.getResults().put(resourceName.getElement(),\n                         updated.getResources().contains(resourceName.getElement())\n                                 ? BulkActionResult.Status.FAILURE"},{"sha":"5102e9b0258e340abfbca5ae25467cf7b68c7673","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AuthenticationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -52,7 +52,7 @@\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.UserService;\n@@ -354,7 +354,7 @@ public void issueSYNCOPE164() throws Exception {\n         // 2. unlink the resource from the created user\n         assertNotNull(userService.bulkDeassociation(user.getKey(),\n                 ResourceDeassociationActionType.UNLINK,\n-                CollectionWrapper.wrap(RESOURCE_NAME_TESTDB, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_TESTDB, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         // 3. change password on Syncope"},{"sha":"1136f0239daff42215c6d05836ed799641aed7b2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -449,7 +449,7 @@ public void validate() {\n         connectorTO.setDisplayName(\"H2Test\");\n \n         // set the connector configuration using PropertyTO\n-        Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+        Set<ConnConfProperty> conf = new HashSet<>();\n \n         ConnConfPropSchema jdbcDriverSchema = new ConnConfPropSchema();\n         jdbcDriverSchema.setName(\"jdbcDriver\");\n@@ -517,14 +517,14 @@ public void validate() {\n         // set connector configuration\n         connectorTO.getConfiguration().addAll(conf);\n \n-        assertTrue(connectorService.check(connectorTO));\n+        assertTrue(connectorService.check(connectorTO).getElement());\n \n         conf.remove(password);\n         password.getValues().clear();\n         password.getValues().add(\"password\");\n         conf.add(password);\n \n-        assertFalse(connectorService.check(connectorTO));\n+        assertFalse(connectorService.check(connectorTO).getElement());\n     }\n \n     @Test\n@@ -594,7 +594,7 @@ public void issueSYNCOPE112() {\n         connectorTO.setDisplayName(\"WSSoap\");\n \n         // set the connector configuration using PropertyTO\n-        Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+        Set<ConnConfProperty> conf = new HashSet<>();\n \n         ConnConfPropSchema userSchema = new ConnConfPropSchema();\n         userSchema.setName(\"endpoint\");\n@@ -621,7 +621,7 @@ public void issueSYNCOPE112() {\n         connectorTO.getConfiguration().addAll(conf);\n \n         try {\n-            assertFalse(connectorService.check(connectorTO));\n+            assertFalse(connectorService.check(connectorTO).getElement());\n \n             Response response = connectorService.create(connectorTO);\n             if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n@@ -667,7 +667,7 @@ public void issueSYNCOPE112() {\n             // ----------------------------------------\n             // Check connection without saving the resource ....\n             // ----------------------------------------\n-            assertTrue(resourceService.check(resourceTO));\n+            assertTrue(resourceService.check(resourceTO).getElement());\n             // ----------------------------------------\n         } finally {\n             // Remove connector from db to make test re-runnable"},{"sha":"017f802172f2f099445c4b258c734a9520b6ff3a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -62,7 +62,7 @@\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.Preference;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -326,7 +326,7 @@ public void unlink() {\n \n         assertNotNull(groupService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.UNLINK,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -353,7 +353,7 @@ public void link() {\n \n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n                 ResourceAssociationActionType.LINK,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -376,7 +376,7 @@ public void unassign() {\n \n         assertNotNull(groupService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.UNASSIGN,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -408,7 +408,7 @@ public void assign() {\n \n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n                 ResourceAssociationActionType.ASSIGN,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -426,7 +426,7 @@ public void deprovision() {\n \n         assertNotNull(groupService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -458,7 +458,7 @@ public void provision() {\n \n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n                 ResourceAssociationActionType.PROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -484,7 +484,7 @@ public void deprovisionUnlinked() {\n \n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n                 ResourceAssociationActionType.PROVISION,\n-                CollectionWrapper.wrap(\"resource-ldap\", ResourceName.class)).\n+                CollectionWrapper.wrap(\"resource-ldap\", ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -494,7 +494,7 @@ public void deprovisionUnlinked() {\n \n         assertNotNull(groupService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());"},{"sha":"ee02b26a46e320f389341268d71b4f582c4315c1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -55,7 +55,7 @@\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.types.SyncPolicySpecItem;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.core.misc.security.Encryptor;\n@@ -290,7 +290,7 @@ private void ldapCleanup() {\n             for (GroupTO group : matchingGroups.getResult()) {\n                 groupService.bulkDeassociation(group.getKey(),\n                         ResourceDeassociationActionType.UNLINK,\n-                        CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class));\n+                        CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n                 groupService.delete(group.getKey());\n             }\n         }\n@@ -302,7 +302,7 @@ private void ldapCleanup() {\n             for (UserTO user : matchingUsers.getResult()) {\n                 userService.bulkDeassociation(user.getKey(),\n                         ResourceDeassociationActionType.UNLINK,\n-                        CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class));\n+                        CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n                 userService.delete(user.getKey());\n             }\n         }"},{"sha":"c0ab43d92308385186230b75659a90bd5c22432e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -73,7 +73,7 @@\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.lib.wrap.ResourceName;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.Preference;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -1766,7 +1766,7 @@ public void unlink() {\n \n         assertNotNull(userService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.UNLINK,\n-                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = userService.read(actual.getKey());\n@@ -1798,7 +1798,7 @@ public void link() {\n         }\n \n         final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class));\n \n         assertNotNull(userService.bulkAssociation(\n                 actual.getKey(), ResourceAssociationActionType.LINK, associationMod).readEntity(BulkActionResult.class));\n@@ -1832,7 +1832,7 @@ public void unassign() {\n \n         assertNotNull(userService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.UNASSIGN,\n-                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = userService.read(actual.getKey());\n@@ -1869,7 +1869,7 @@ public void assign() {\n         }\n \n         final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class));\n         associationMod.setChangePwd(true);\n         associationMod.setPassword(\"password\");\n \n@@ -1899,7 +1899,7 @@ public void deprovision() {\n \n         assertNotNull(userService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = userService.read(actual.getKey());\n@@ -1936,7 +1936,7 @@ public void provision() {\n         }\n \n         final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class));\n         associationMod.setChangePwd(true);\n         associationMod.setPassword(\"password\");\n \n@@ -1972,7 +1972,7 @@ public void deprovisionUnlinked() {\n         }\n \n         final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class));\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class));\n         associationMod.setChangePwd(true);\n         associationMod.setPassword(\"password\");\n \n@@ -1987,7 +1987,7 @@ public void deprovisionUnlinked() {\n \n         assertNotNull(userService.bulkDeassociation(actual.getKey(),\n                 ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n+                CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceKey.class)).\n                 readEntity(BulkActionResult.class));\n \n         actual = userService.read(actual.getKey());"},{"sha":"fae9f6eeb619afaa1c9a4cb54e25d63e653a1900","filename":"pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64d475e528edf8c9cbd2d9959a07a9124c23431a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64d475e528edf8c9cbd2d9959a07a9124c23431a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=64d475e528edf8c9cbd2d9959a07a9124c23431a","patch":"@@ -491,6 +491,11 @@ under the License.\n         <artifactId>cxf-rt-rs-service-description</artifactId>\n         <version>${cxf.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-databinding-jaxb</artifactId>\n+        <version>${cxf.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.apache.cxf</groupId>\n         <artifactId>cxf-rt-rs-client</artifactId>"}]}