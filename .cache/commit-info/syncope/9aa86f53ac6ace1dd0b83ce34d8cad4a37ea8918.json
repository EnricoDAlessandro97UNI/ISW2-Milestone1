{"sha":"9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlhYTg2ZjUzYWM2YWNlMWRkMGI4M2NlMzRkOGNhZDRhMzdlYTg5MTg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-30T16:25:05Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-30T16:25:05Z"},"message":"User creation via REST now includes roles, resources and derived attributes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246292 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"32e160f959f679ce887d15340aea8f2035a2d66c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/32e160f959f679ce887d15340aea8f2035a2d66c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/comments","author":null,"committer":null,"parents":[{"sha":"54802b9269a0fe00c2b738d9c27e80d9e8f13f47","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/54802b9269a0fe00c2b738d9c27e80d9e8f13f47","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/54802b9269a0fe00c2b738d9c27e80d9e8f13f47"}],"stats":{"total":301,"additions":207,"deletions":94},"files":[{"sha":"a5b48e3691d28a32782ab195ac45623bd352a780","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -25,6 +25,7 @@ public class UserTO extends AbstractBaseTO {\n     private Set<Long> roles;\n     private Set<AttributeTO> attributes;\n     private Set<AttributeTO> derivedAttributes;\n+    private Set<String> resources;\n     private Date creationTime;\n     private String token;\n     private Date tokenExpireTime;\n@@ -33,6 +34,7 @@ public UserTO() {\n         roles = new HashSet<Long>();\n         attributes = new HashSet<AttributeTO>();\n         derivedAttributes = new HashSet<AttributeTO>();\n+        resources = new HashSet<String>();\n     }\n \n     public long getId() {\n@@ -99,6 +101,22 @@ public void setDerivedAttributes(Set<AttributeTO> derivedAttributes) {\n         this.derivedAttributes = derivedAttributes;\n     }\n \n+    public boolean addResource(String resource) {\n+        return resources.add(resource);\n+    }\n+\n+    public boolean removeResource(String resource) {\n+        return resources.remove(resource);\n+    }\n+\n+    public Set<String> getResources() {\n+        return resources;\n+    }\n+\n+    public void setResources(Set<String> resources) {\n+        this.resources = resources;\n+    }\n+\n     public Date getCreationTime() {\n         return creationTime;\n     }"},{"sha":"c5679134ed2dbbfda9d2371625337a7d9c230e4f","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientErrorHandler.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -64,12 +64,12 @@ public void handleError(ClientHttpResponse response) throws IOException {\n                 clientException = new SyncopeClientException();\n                 clientException.setType(exceptionType);\n                 if (response.getHeaders().get(\n-                        exceptionType.getAttributeNameHeaderName()) != null\n+                        exceptionType.getElementHeaderName()) != null\n                         && !response.getHeaders().get(\n-                        exceptionType.getAttributeNameHeaderName()).isEmpty()) {\n+                        exceptionType.getElementHeaderName()).isEmpty()) {\n \n-                    clientException.setAttributeNames(response.getHeaders().get(\n-                            exceptionType.getAttributeNameHeaderName()));\n+                    clientException.setElements(response.getHeaders().get(\n+                            exceptionType.getElementHeaderName()));\n                 }\n \n                 compositeException.addException(clientException);"},{"sha":"bd9a906c0cc1b0392d4843e823d3701f87fce5a6","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientException.java","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -22,38 +22,43 @@\n public class SyncopeClientException extends Exception {\n \n     private SyncopeClientExceptionType type;\n-    private Set<String> attributeNames;\n+    private Set<String> elements;\n \n     public SyncopeClientException() {\n         super();\n-        attributeNames = new HashSet<String>();\n+        elements = new HashSet<String>();\n+    }\n+\n+    public SyncopeClientException(SyncopeClientExceptionType type) {\n+        this();\n+        setType(type);\n     }\n \n     public SyncopeClientExceptionType getType() {\n         return type;\n     }\n \n-    public void setType(SyncopeClientExceptionType type) {\n+    public final void setType(SyncopeClientExceptionType type) {\n         this.type = type;\n     }\n \n-    public boolean addAttributeName(String attributeName) {\n-        return attributeNames.add(attributeName);\n+    public boolean addElement(String element) {\n+        return elements.add(element);\n     }\n \n-    public boolean removeAttributeName(String attributeName) {\n-        return attributeNames.remove(attributeName);\n+    public boolean removeElement(String element) {\n+        return elements.remove(element);\n     }\n \n-    public Set<String> getAttributeNames() {\n-        return attributeNames;\n+    public Set<String> getElements() {\n+        return elements;\n     }\n \n-    public void setAttributeNames(Set<String> attributeNames) {\n-        this.attributeNames = attributeNames;\n+    public void setElements(Set<String> elements) {\n+        this.elements = elements;\n     }\n \n-    public void setAttributeNames(List<String> attributeNames) {\n-        this.attributeNames.addAll(attributeNames);\n+    public void setElements(List<String> elements) {\n+        this.elements.addAll(elements);\n     }\n }"},{"sha":"6c064cb30b01858d711d3a0d00852ab8d22ebb18","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":27,"deletions":18,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -18,24 +18,33 @@ public enum SyncopeClientExceptionType {\n \n     NotFound(\n     \"Syncope.NotFound\",\n-    \"\"),\n+    \"Syncope.NotFound.entity\"),\n+    InvalidResources(\n+    \"Syncope.InvalidResources\",\n+    \"Syncope.InvalidResources.resourceName\"),\n+    InvalidRoles(\n+    \"Syncope.InvalidRoles\",\n+    \"Syncope.InvalidRoles.roleName\"),\n+    InvalidDerivedSchemas(\n+    \"Syncope.InvalidDerivedSchemas\",\n+    \"Syncope.InvalidDerivedSchemas.derivedSchemaName\"),\n     InvalidSchemas(\n-    \"Syncope.User.InvalidSchema\",\n-    \"Syncope.User.InvalidSchema.attributeName\"),\n+    \"Syncope.InvalidSchemas\",\n+    \"Syncope.InvalidSchemas.schemaName\"),\n     UserRequiredValuesMissing(\n-    \"Syncope.User.RequiredValuesMissing\",\n-    \"Syncope.User.RequiredValuesMissing.attributeName\"),\n+    \"Syncope.RequiredValuesMissing\",\n+    \"Syncope.RequiredValuesMissing.attributeName\"),\n     UserInvalidValues(\n-    \"Syncope.User.InvalidValues\",\n-    \"Syncope.User.InvalidValues.attributeName\");\n-    private String exceptionTypeHeaderValue;\n-    private String attributeNameHeaderName;\n+    \"Syncope.InvalidValues\",\n+    \"Syncope.InvalidValues.attributeName\");\n+    private String headerValue;\n+    private String elementHeaderName;\n \n-    private SyncopeClientExceptionType(String exceptionTypeHeaderValue,\n-            String attributeNameHeaderName) {\n+    private SyncopeClientExceptionType(String headerValue,\n+            String elementHeaderName) {\n \n-        this.exceptionTypeHeaderValue = exceptionTypeHeaderValue;\n-        this.attributeNameHeaderName = attributeNameHeaderName;\n+        this.headerValue = headerValue;\n+        this.elementHeaderName = elementHeaderName;\n     }\n \n     public static SyncopeClientExceptionType getFromHeaderValue(\n@@ -44,7 +53,7 @@ public static SyncopeClientExceptionType getFromHeaderValue(\n         SyncopeClientExceptionType result = null;\n         for (SyncopeClientExceptionType syncopeClientExceptionType : values()) {\n             if (exceptionTypeHeaderValue.equals(\n-                    syncopeClientExceptionType.getExceptionTypeHeaderValue())) {\n+                    syncopeClientExceptionType.getHeaderValue())) {\n                 result = syncopeClientExceptionType;\n             }\n         }\n@@ -57,11 +66,11 @@ public static SyncopeClientExceptionType getFromHeaderValue(\n         return result;\n     }\n \n-    public String getAttributeNameHeaderName() {\n-        return attributeNameHeaderName;\n+    public String getElementHeaderName() {\n+        return elementHeaderName;\n     }\n \n-    public String getExceptionTypeHeaderValue() {\n-        return exceptionTypeHeaderValue;\n+    public String getHeaderValue() {\n+        return headerValue;\n     }\n }"},{"sha":"df978b50ac48c8fc100353722d2406e426da5771","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -23,15 +23,19 @@\n import org.syncope.core.persistence.beans.AbstractAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedSchema;\n import org.syncope.core.persistence.beans.AbstractSchema;\n+import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n+import org.syncope.core.persistence.dao.SchemaMappingDAO;\n \n @Repository\n public class SchemaDAOImpl extends AbstractDAOImpl\n         implements SchemaDAO {\n \n     @Autowired\n     private AttributeDAO attributeDAO;\n+    @Autowired\n+    private SchemaMappingDAO schemaMappingDAO;\n \n     @Override\n     public <T extends AbstractSchema> T find(String name, Class<T> reference) {\n@@ -71,6 +75,11 @@ public <T extends AbstractSchema> void delete(\n             attributeDAO.delete(attribute.getId(), attribute.getClass());\n         }\n \n+        for (SchemaMapping schemaMapping : schema.getMappings()) {\n+            schemaMappingDAO.delete(schemaMapping.getId());\n+        }\n+        schema.setMappings(Collections.EMPTY_SET);\n+\n         entityManager.remove(schema);\n     }\n }"},{"sha":"77a250eea74278db0cdcd0b7b57017b017632150","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaMappingDAOImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -49,12 +49,12 @@ public SchemaMapping save(SchemaMapping mapping) {\n     public void delete(Long id) {\n         SchemaMapping mapping = find(id);\n \n-        RoleSchema roleAttribueSchemas = mapping.getRoleSchema();\n+        RoleSchema roleSchema = mapping.getRoleSchema();\n \n         Set<SchemaMapping> mappings = null;\n \n-        if (roleAttribueSchemas != null) {\n-            mappings = roleAttribueSchemas.getMappings();\n+        if (roleSchema != null) {\n+            mappings = roleSchema.getMappings();\n         }\n \n         if (mappings != null) {\n@@ -63,11 +63,11 @@ public void delete(Long id) {\n \n         mapping.setRoleSchema(null);\n \n-        UserSchema userAttributeSchemas = mapping.getUserSchema();\n+        UserSchema userSchema = mapping.getUserSchema();\n \n         mappings = null;\n-        if (userAttributeSchemas != null) {\n-            mappings = userAttributeSchemas.getMappings();\n+        if (userSchema != null) {\n+            mappings = userSchema.getMappings();\n         }\n \n         if (mappings != null) {"},{"sha":"d2d7540c3ec6f4d0da254c44e7ea7aaaef718b57","filename":"core/src/main/java/org/syncope/core/rest/controller/AbstractController.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -54,26 +54,29 @@ protected <T> T throwCompositeException(\n \n             response.setHeader(\n                     SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n-                    exception.getType().getExceptionTypeHeaderValue());\n+                    exception.getType().getHeaderValue());\n \n-            for (String attributeName : exception.getAttributeNames()) {\n+            for (String attributeName : exception.getElements()) {\n                 response.addHeader(\n-                        exception.getType().getAttributeNameHeaderName(),\n+                        exception.getType().getElementHeaderName(),\n                         attributeName);\n             }\n-\n-            response.sendError(compositeErrorException.getStatusCode().value());\n         }\n \n+        response.sendError(compositeErrorException.getStatusCode().value());\n+\n         return null;\n     }\n \n-    protected <T> T throwNotFoundException(\n+    protected <T> T throwNotFoundException(String notFound,\n             HttpServletResponse response) throws IOException {\n \n         response.setHeader(\n                 SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n-                SyncopeClientExceptionType.NotFound.getExceptionTypeHeaderValue());\n+                SyncopeClientExceptionType.NotFound.getHeaderValue());\n+        response.setHeader(\n+                SyncopeClientExceptionType.NotFound.getElementHeaderName(),\n+                notFound);\n \n         response.sendError(HttpServletResponse.SC_NOT_FOUND);\n "},{"sha":"bf93dd43087821b90954f698671c07a3f7ef8f15","filename":"core/src/main/java/org/syncope/core/rest/controller/DerivedSchemaController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -71,7 +71,7 @@ public void delete(HttpServletResponse response,\n         if (derivedSchema == null) {\n             log.error(\"Could not find derived schema '\"\n                     + derivedSchemaName + \"'\");\n-            throwNotFoundException(response);\n+            throwNotFoundException(derivedSchemaName, response);\n         } else {\n             derivedSchemaDAO.delete(derivedSchemaName, reference);\n             derivedSchemaDAO.getEntityManager().flush();\n@@ -111,7 +111,7 @@ public DerivedSchemaTO read(HttpServletResponse response,\n         if (derivedSchema == null) {\n             log.error(\"Could not find derived schema '\"\n                     + derivedSchemaName + \"'\");\n-            return throwNotFoundException(response);\n+            return throwNotFoundException(derivedSchemaName, response);\n         }\n \n         return derivedSchemaDataBinder.getDerivedSchemaTO(derivedSchema);"},{"sha":"98f224937bd5c8004a0dc322e2d4b47bc2307a06","filename":"core/src/main/java/org/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -65,7 +65,7 @@ public void delete(HttpServletResponse response,\n         AbstractSchema schema = schemaDAO.find(schemaName, reference);\n         if (schema == null) {\n             log.error(\"Could not find schema '\" + schemaName + \"'\");\n-            throwNotFoundException(response);\n+            throwNotFoundException(schemaName, response);\n         } else {\n             schemaDAO.delete(schemaName, reference);\n             schemaDAO.getEntityManager().flush();\n@@ -98,7 +98,7 @@ public SchemaTO read(HttpServletResponse response,\n         AbstractSchema schema = schemaDAO.find(schemaName, reference);\n         if (schema == null) {\n             log.error(\"Could not find schema '\" + schemaName + \"'\");\n-            return throwNotFoundException(response);\n+            return throwNotFoundException(schemaName, response);\n         }\n \n         return schemaDataBinder.getSchemaTO(schema);"},{"sha":"acb20630c1c1238b87eb40fb23acc3480168f48a","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -79,7 +79,7 @@ public void delete(HttpServletResponse response,\n \n         if (user == null) {\n             log.error(\"Could not find user '\" + userId + \"'\");\n-            throwNotFoundException(response);\n+            throwNotFoundException(String.valueOf(userId), response);\n         } else {\n             syncopeUserDAO.delete(userId);\n             syncopeUserDAO.getEntityManager().flush();\n@@ -123,7 +123,7 @@ public UserTO read(HttpServletResponse response,\n \n         if (user == null) {\n             log.error(\"Could not find user '\" + userId + \"'\");\n-            return throwNotFoundException(response);\n+            return throwNotFoundException(String.valueOf(userId), response);\n         }\n \n         return userDataBinder.getUserTO(user);"},{"sha":"5e77f0bcf2f1b4cc3298d86ed1005ae0d82687da","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":87,"deletions":15,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -30,12 +30,18 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.AbstractAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n+import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UserAttribute;\n import org.syncope.core.persistence.beans.user.UserAttributeValue;\n+import org.syncope.core.persistence.beans.user.UserDerivedAttribute;\n+import org.syncope.core.persistence.beans.user.UserDerivedSchema;\n import org.syncope.core.persistence.beans.user.UserSchema;\n+import org.syncope.core.persistence.dao.DerivedSchemaDAO;\n+import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n+import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.validation.ValidationException;\n import org.syncope.types.SyncopeClientExceptionType;\n@@ -46,16 +52,25 @@ public class UserDataBinder {\n     private static final Logger log = LoggerFactory.getLogger(\n             UserDataBinder.class);\n     private static final String[] ignoreProperties = {\"attributes\",\n-        \"derivedAttributes\", \"roles\"};\n+        \"derivedAttributes\", \"roles\", \"resources\"};\n     private SyncopeUserDAO syncopeUserDAO;\n     private SchemaDAO schemaDAO;\n+    private DerivedSchemaDAO derivedSchemaDAO;\n+    private SyncopeRoleDAO syncopeRoleDAO;\n+    private ResourceDAO resourceDAO;\n \n     @Autowired\n     public UserDataBinder(SyncopeUserDAO syncopeUserDAO,\n-            SchemaDAO schemaDAO) {\n+            SchemaDAO schemaDAO,\n+            DerivedSchemaDAO derivedSchemaDAO,\n+            SyncopeRoleDAO syncopeRoleDAO,\n+            ResourceDAO resourceDAO) {\n \n         this.syncopeUserDAO = syncopeUserDAO;\n         this.schemaDAO = schemaDAO;\n+        this.derivedSchemaDAO = derivedSchemaDAO;\n+        this.syncopeRoleDAO = syncopeRoleDAO;\n+        this.resourceDAO = resourceDAO;\n     }\n \n     public SyncopeUser createSyncopeUser(UserTO userTO)\n@@ -64,19 +79,26 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         SyncopeClientCompositeErrorException compositeErrorException =\n                 new SyncopeClientCompositeErrorException(\n                 HttpStatus.BAD_REQUEST);\n-        SyncopeClientException invalidSchemas = new SyncopeClientException();\n-        invalidSchemas.setType(SyncopeClientExceptionType.InvalidSchemas);\n+        SyncopeClientException invalidSchemas = new SyncopeClientException(\n+                SyncopeClientExceptionType.InvalidSchemas);\n         SyncopeClientException requiredValuesMissing =\n-                new SyncopeClientException();\n-        requiredValuesMissing.setType(\n+                new SyncopeClientException(\n                 SyncopeClientExceptionType.UserRequiredValuesMissing);\n-        SyncopeClientException invalidValues = new SyncopeClientException();\n-        invalidValues.setType(SyncopeClientExceptionType.UserInvalidValues);\n+        SyncopeClientException invalidValues = new SyncopeClientException(\n+                SyncopeClientExceptionType.UserInvalidValues);\n+        SyncopeClientException invalidDerivedSchemas =\n+                new SyncopeClientException(\n+                SyncopeClientExceptionType.InvalidDerivedSchemas);\n+        SyncopeClientException invalidRoles = new SyncopeClientException(\n+                SyncopeClientExceptionType.InvalidRoles);\n+        SyncopeClientException invalidResources = new SyncopeClientException(\n+                SyncopeClientExceptionType.InvalidResources);\n \n         SyncopeUser user = new SyncopeUser();\n         BeanUtils.copyProperties(userTO, user,\n                 (String[]) ArrayUtils.add(ignoreProperties, \"id\"));\n \n+        // 1. attributes\n         UserSchema schema = null;\n         UserAttribute attribute = null;\n         Set<String> valuesProvided = null;\n@@ -85,7 +107,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             schema = schemaDAO.find(attributeTO.getSchema(), UserSchema.class);\n \n             if (schema == null) {\n-                invalidSchemas.addAttributeName(attributeTO.getSchema());\n+                invalidSchemas.addElement(attributeTO.getSchema());\n             } else {\n                 attribute = new UserAttribute();\n                 attribute.setSchema(schema);\n@@ -109,7 +131,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                         log.error(\"Invalid value for attribute \"\n                                 + schema.getName() + \": \" + value, e);\n \n-                        invalidValues.addAttributeName(schema.getName());\n+                        invalidValues.addElement(schema.getName());\n                     }\n                 }\n \n@@ -119,6 +141,23 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             }\n         }\n \n+        // 2. derived attributes\n+        UserDerivedSchema derivedSchema = null;\n+        UserDerivedAttribute derivedAttribute = null;\n+        for (AttributeTO attributeTO : userTO.getDerivedAttributes()) {\n+            derivedSchema = derivedSchemaDAO.find(attributeTO.getSchema(),\n+                    UserDerivedSchema.class);\n+\n+            if (derivedSchema == null) {\n+                invalidDerivedSchemas.addElement(attributeTO.getSchema());\n+            } else {\n+                derivedAttribute = new UserDerivedAttribute();\n+                derivedAttribute.setDerivedSchema(derivedSchema);\n+                derivedAttribute.setOwner(user);\n+                user.addDerivedAttribute(derivedAttribute);\n+            }\n+        }\n+\n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n         List<UserSchema> allUserSchemas = schemaDAO.findAll(UserSchema.class);\n@@ -129,21 +168,54 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                 log.error(\"Mandatory schema \" + userSchema.getName()\n                         + \" not provided with values\");\n \n-                requiredValuesMissing.addAttributeName(userSchema.getName());\n+                requiredValuesMissing.addElement(userSchema.getName());\n+            }\n+        }\n+\n+        // 3. roles\n+        SyncopeRole role = null;\n+        for (Long roleId : userTO.getRoles()) {\n+            role = syncopeRoleDAO.find(roleId);\n+\n+            if (role == null) {\n+                invalidRoles.addElement(String.valueOf(roleId));\n+            } else {\n+                user.addRole(role);\n             }\n         }\n \n-        // Throw composite exception if there is at least one attribute name set\n+        // 4. resources\n+        Resource resource = null;\n+        for (String resourceName : userTO.getResources()) {\n+            resource = resourceDAO.find(resourceName);\n+\n+            if (resource == null) {\n+                invalidResources.addElement(resourceName);\n+            } else {\n+                user.addResource(resource);\n+            }\n+        }\n+\n+        // Throw composite exception if there is at least one element set\n         // in the composing exceptions\n-        if (!invalidSchemas.getAttributeNames().isEmpty()) {\n+        if (!invalidSchemas.getElements().isEmpty()) {\n             compositeErrorException.addException(invalidSchemas);\n         }\n-        if (!requiredValuesMissing.getAttributeNames().isEmpty()) {\n+        if (!requiredValuesMissing.getElements().isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n-        if (!invalidValues.getAttributeNames().isEmpty()) {\n+        if (!invalidValues.getElements().isEmpty()) {\n             compositeErrorException.addException(invalidValues);\n         }\n+        if (!invalidDerivedSchemas.getElements().isEmpty()) {\n+            compositeErrorException.addException(invalidDerivedSchemas);\n+        }\n+        if (!invalidRoles.getElements().isEmpty()) {\n+            compositeErrorException.addException(invalidRoles);\n+        }\n+        if (!invalidResources.getElements().isEmpty()) {\n+            compositeErrorException.addException(invalidResources);\n+        }\n         if (compositeErrorException.hasExceptions()) {\n             throw compositeErrorException;\n         }"},{"sha":"8b9f2acf08f7df14a2c4a5433b9c40776d799f55","filename":"core/src/test/java/org/syncope/core/test/persistence/SchemaMappingDAOTest.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaMappingDAOTest.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -30,10 +30,8 @@ public class SchemaMappingDAOTest extends AbstractTest {\n \n     @Autowired\n     SchemaMappingDAO schemaMappingDAO;\n-\n     @Autowired\n-    SchemaDAO userShemaDAO;\n-\n+    SchemaDAO schemaDAO;\n     @Autowired\n     ResourceDAO resourceDAO;\n \n@@ -61,7 +59,7 @@ public final void save() throws ClassNotFoundException {\n         SchemaMapping schema = new SchemaMapping();\n \n         schema.setField(\"name\");\n-        schema.setUserSchema(userShemaDAO.find(\"firstname\", UserSchema.class));\n+        schema.setUserSchema(schemaDAO.find(\"firstname\", UserSchema.class));\n         schema.setResource(resourceDAO.find(\"ws-target-resource-1\"));\n \n         SchemaMapping actual = schemaMappingDAO.save(schema);\n@@ -88,7 +86,7 @@ public final void delete() {\n         schemaMappingDAO.delete(schema.getId());\n \n         SchemaMapping actual = schemaMappingDAO.find(100L);\n-        \n+\n         assertNull(\"delete did not work\", actual);\n     }\n }"},{"sha":"d0663a9b61673e05ca49a9f3694454ad9cf5e5df","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/SchemaMappingTest.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -33,10 +33,8 @@ public class SchemaMappingTest extends AbstractTest {\n \n     @Autowired\n     SchemaMappingDAO schemaMappingDAO;\n-\n     @Autowired\n-    SchemaDAO userShemaDAO;\n-\n+    SchemaDAO schemaDAO;\n     @Autowired\n     ResourceDAO resourceDAO;\n \n@@ -46,7 +44,7 @@ public final void save() throws ClassNotFoundException {\n \n         schema.setField(\"name\");\n \n-        UserSchema user = userShemaDAO.find(\"firstname\", UserSchema.class);\n+        UserSchema user = schemaDAO.find(\"firstname\", UserSchema.class);\n         schema.setUserSchema(user);\n \n         Resource resource = resourceDAO.find(\"ws-target-resource-1\");\n@@ -73,7 +71,7 @@ public final void save() throws ClassNotFoundException {\n         assertEquals(\"name\", actual.getField());\n \n         UserSchema actualUser =\n-                userShemaDAO.find(\"firstname\", UserSchema.class);\n+                schemaDAO.find(\"firstname\", UserSchema.class);\n \n         assertTrue(actualUser.getMappings().contains(actual));\n \n@@ -87,7 +85,7 @@ public final void save() throws ClassNotFoundException {\n     public final void delete() {\n         SchemaMapping schema = schemaMappingDAO.find(100L);\n \n-        assertNotNull(\"find to delete did not work\", schema);\n+        assertNotNull(\"find did not work\", schema);\n \n         Long id = schema.getId();\n \n@@ -121,7 +119,7 @@ public final void delete() {\n         }\n \n         UserSchema actualUser =\n-                userShemaDAO.find(user.getName(), UserSchema.class);\n+                schemaDAO.find(user.getName(), UserSchema.class);\n \n         assertNotNull(actualUser);\n "},{"sha":"a1a8c1c85b3877b67b143ec89ae134c332d0b6a9","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/SchemaTest.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaTest.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -25,6 +25,7 @@\n import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.dao.DerivedSchemaDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n+import org.syncope.core.persistence.dao.SchemaMappingDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.test.persistence.AbstractTest;\n \n@@ -39,6 +40,8 @@ public class SchemaTest extends AbstractTest {\n     private DerivedSchemaDAO derivedSchemaDAO;\n     @Autowired\n     private AttributeDAO attributeDAO;\n+    @Autowired\n+    private SchemaMappingDAO schemaMappingDAO;\n \n     @Test\n     public final void test() {"},{"sha":"8c422a927c4746199a82e32f71b18a0fc0754cd7","filename":"core/src/test/java/org/syncope/core/test/rest/SchemaTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -48,11 +48,11 @@ public void create() {\n \n     @Test\n     public void delete() {\n-        restTemplate.delete(BASE_URL + \"schema/user/delete/username.js\");\n+        restTemplate.delete(BASE_URL + \"schema/user/delete/firstname.json\");\n         SchemaTO username = null;\n         try {\n             username = restTemplate.getForObject(BASE_URL\n-                    + \"schema/user/read/username.json\", SchemaTO.class);\n+                    + \"schema/user/read/firstname.json\", SchemaTO.class);\n         } catch (HttpClientErrorException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }"},{"sha":"5de6942555e96cf62748723deb800cc607b24400","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=9aa86f53ac6ace1dd0b83ce34d8cad4a37ea8918","patch":"@@ -91,17 +91,15 @@\n     <Resource name=\"ws-target-resource-1\" connector_id=\"100\"/>\n     <Resource name=\"ws-target-resource-2\" connector_id=\"100\"/>\n \n-    <SchemaMapping id=\"100\" field=\"username\" resource_name=\"ws-target-resource-1\" \n-                   userSchema_name=\"email\"\n-                   nullable=\"false\"\n-                   accountid=\"true\"\n-                   password=\"false\"/>\n-\n-    <SchemaMapping id=\"101\" field=\"username\" resource_name=\"ws-target-resource-2\"\n-                   userSchema_name=\"email\"\n-                   nullable=\"false\"\n-                   accountid=\"true\"\n-                   password=\"false\"/>\n+    <SchemaMapping id=\"100\" field=\"username\"\n+                   resource_name=\"ws-target-resource-1\"\n+                   userSchema_name=\"email\" nullable=\"false\"\n+                   accountid=\"true\" password=\"false\"/>\n+\n+    <SchemaMapping id=\"101\" field=\"username\"\n+                   resource_name=\"ws-target-resource-2\"\n+                   userSchema_name=\"email\" nullable=\"false\"\n+                   accountid=\"true\" password=\"false\"/>\n \n     <Entitlement name=\"base\" description=\"NULL\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>"}]}