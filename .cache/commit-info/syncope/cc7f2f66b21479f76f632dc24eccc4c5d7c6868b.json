{"sha":"cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","node_id":"C_kwDOJfYA1toAKGNjN2YyZjY2YjIxNDc5Zjc2ZjYzMmRjMjRlY2NjNGM1ZDdjNjg2OGI","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-03-17T11:46:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-17T12:53:32Z"},"message":"[SYNCOPE-1656] Cleanup and refactor (#327)","tree":{"sha":"1d42a16cc12cf072c521ef656d7d56b473f41218","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1d42a16cc12cf072c521ef656d7d56b473f41218"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b0348eae402d7afcdd1ca3d8cc5e9dca97ab7fe4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0348eae402d7afcdd1ca3d8cc5e9dca97ab7fe4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0348eae402d7afcdd1ca3d8cc5e9dca97ab7fe4"}],"stats":{"total":76,"additions":59,"deletions":17},"files":[{"sha":"f4b3e74c006e5e52ad6ad44409a826fee78bed08","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -37,6 +37,8 @@ public interface TaskDAO extends DAO<Task> {\n \n     Class<? extends Task> getEntityReference(TaskType type);\n \n+    boolean exists(TaskType type, String key);\n+\n     <T extends Task> T find(String key);\n \n     List<SchedTask> findByDelegate(Implementation delegate);"},{"sha":"81edd76ba00672c7bff8f1bf7d4b1e589ab97f80","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -204,9 +204,11 @@ public CommonEntityManagerFactoryConf commonEMFConf(final PersistenceProperties\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public XMLContentLoader xmlContentLoader(final PersistenceProperties persistenceProperties,\n+    public XMLContentLoader xmlContentLoader(\n+            final PersistenceProperties persistenceProperties,\n             final ResourceLoader resourceLoader,\n             final Environment env) {\n+\n         return new XMLContentLoader(\n                 resourceLoader.getResource(persistenceProperties.getViewsXML()),\n                 resourceLoader.getResource(persistenceProperties.getIndexesXML()),"},{"sha":"7e36c18127642de24da207f52bc79583a278a4f1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -125,6 +125,16 @@ public Class<? extends Task> getEntityReference(final TaskType type) {\n         return result;\n     }\n \n+    @Transactional(readOnly = true)\n+    @Override\n+    public boolean exists(final TaskType type, final String key) {\n+        Query query = entityManager().createNativeQuery(\"SELECT id FROM Task WHERE id=? AND dtype=?\");\n+        query.setParameter(1, key);\n+        query.setParameter(2, getEntityTableName(type));\n+\n+        return !query.getResultList().isEmpty();\n+    }\n+\n     @Transactional(readOnly = true)\n     @SuppressWarnings(\"unchecked\")\n     @Override"},{"sha":"d025ed90d9f551bca7952fc947a0d75fe404fbed","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":37,"deletions":10,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -59,6 +59,7 @@\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.common.lib.to.ProvisioningReport;\n+import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.persistence.api.dao.PullMatch;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n@@ -262,8 +263,11 @@ protected List<ProvisioningReport> provision(\n                     resultStatus = Result.SUCCESS;\n                     createRemediation(\n                             provision.getAnyType(),\n+                            null,\n                             anyCR,\n-                            taskDAO.find(profile.getTask().getKey()) != null ? profile.getTask() : null,\n+                            null,\n+                            taskDAO.exists(TaskType.PULL, profile.getTask().getKey())\n+                            ? profile.getTask() : null,\n                             result,\n                             delta);\n                 } else {\n@@ -382,7 +386,13 @@ protected List<ProvisioningReport> update(\n                         if (profile.getTask().isRemediation()) {\n                             // set to SUCCESS to let the incremental flow go on in case of errors\n                             resultStatus = Result.SUCCESS;\n-                            createRemediation(provision.getAnyType(), anyUR, profile.getTask(), result, delta);\n+                            createRemediation(\n+                                    provision.getAnyType(),\n+                                    anyUR,\n+                                    taskDAO.exists(TaskType.PULL, profile.getTask().getKey())\n+                                    ? profile.getTask() : null,\n+                                    result,\n+                                    delta);\n                         } else {\n                             resultStatus = Result.FAILURE;\n                         }\n@@ -680,7 +690,14 @@ protected List<ProvisioningReport> delete(\n                             // set to SUCCESS to let the incremental flow go on in case of errors\n                             resultStatus = Result.SUCCESS;\n                             createRemediation(\n-                                    provision.getAnyType(), match.getAny().getKey(), profile.getTask(), result, delta);\n+                                    provision.getAnyType(),\n+                                    match.getAny().getKey(),\n+                                    null,\n+                                    null,\n+                                    taskDAO.exists(TaskType.PULL, profile.getTask().getKey())\n+                                    ? profile.getTask() : null,\n+                                    result,\n+                                    delta);\n                         }\n                     }\n \n@@ -938,13 +955,21 @@ protected void end(\n                 furtherInput);\n     }\n \n-    protected Remediation createRemediation(\n-            final AnyType anyType,\n-            final String anyKey,\n-            final PullTask pullTask,\n-            final ProvisioningReport result,\n-            final SyncDelta delta) {\n-        return createRemediation(anyType, anyKey, null, null, pullTask, result, delta);\n+    protected void createRemediationIfNeeded(\n+            final AnyUR anyUR,\n+            final SyncDelta delta,\n+            final ProvisioningReport result) {\n+\n+        if (ProvisioningReport.Status.FAILURE == result.getStatus() && profile.getTask().isRemediation()) {\n+            createRemediation(\n+                    anyTypeDAO.find(result.getAnyType()),\n+                    null,\n+                    null,\n+                    anyUR,\n+                    taskDAO.exists(TaskType.PULL, profile.getTask().getKey()) ? profile.getTask() : null,\n+                    result,\n+                    delta);\n+        }\n     }\n \n     protected Remediation createRemediation(\n@@ -953,6 +978,7 @@ protected Remediation createRemediation(\n             final PullTask pullTask,\n             final ProvisioningReport result,\n             final SyncDelta delta) {\n+\n         return createRemediation(anyType, null, anyCR, null, pullTask, result, delta);\n     }\n \n@@ -962,6 +988,7 @@ protected Remediation createRemediation(\n             final PullTask pullTask,\n             final ProvisioningReport result,\n             final SyncDelta delta) {\n+\n         return createRemediation(anyType, null, null, anyUR, pullTask, result, delta);\n     }\n "},{"sha":"ebb4e185a5f9e739baeca4c0d24fbf553abda6d9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultAnyObjectPullResultHandler.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -107,6 +107,8 @@ protected AnyUR doUpdate(\n                 profile.getExecutor(),\n                 getContext());\n \n+        createRemediationIfNeeded(req, delta, result);\n+\n         return updated.getLeft();\n     }\n }"},{"sha":"f8e54d595bc395ab6a5a927223e6dbdb10fde29b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultGroupPullResultHandler.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -118,6 +118,8 @@ protected AnyUR doUpdate(\n                 profile.getExecutor(),\n                 getContext());\n \n+        createRemediationIfNeeded(req, delta, result);\n+\n         String groupOwner = null;\n         for (AttrPatch attrPatch : groupUR.getPlainAttrs()) {\n             if (attrPatch.getOperation() == PatchOperation.ADD_REPLACE && attrPatch.getAttr() != null"},{"sha":"4c6f99598e0fdc88174adf7767c37f8662dd7a19","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc7f2f66b21479f76f632dc24eccc4c5d7c6868b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=cc7f2f66b21479f76f632dc24eccc4c5d7c6868b","patch":"@@ -123,23 +123,20 @@ protected AnyTO doCreate(final AnyCR anyCR, final SyncDelta delta) {\n     @Override\n     protected AnyUR doUpdate(\n             final AnyTO before,\n-            final AnyUR anyUR,\n+            final AnyUR req,\n             final SyncDelta delta,\n             final ProvisioningReport result) {\n \n         Pair<UserUR, List<PropagationStatus>> updated = userProvisioningManager.update(\n-                UserUR.class.cast(anyUR),\n+                UserUR.class.cast(req),\n                 result,\n                 enabled(delta),\n                 Set.of(profile.getTask().getResource().getKey()),\n                 true,\n                 profile.getExecutor(),\n                 getContext());\n \n-        if (ProvisioningReport.Status.FAILURE == result.getStatus() && profile.getTask().isRemediation()) {\n-            createRemediation(anyTypeDAO.find(result.getAnyType()), anyUR, profile.getTask(), result,\n-                    delta);\n-        }\n+        createRemediationIfNeeded(req, delta, result);\n \n         return updated.getLeft();\n     }"}]}