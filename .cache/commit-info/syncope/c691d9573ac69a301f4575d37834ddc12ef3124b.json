{"sha":"c691d9573ac69a301f4575d37834ddc12ef3124b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2OTFkOTU3M2FjNjlhMzAxZjQ1NzVkMzc4MzRkZGMxMmVmMzEyNGI=","commit":{"author":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2017-02-02T10:05:36Z"},"committer":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2017-02-02T11:20:07Z"},"message":"[SYNCOPE-1005] moved attributes sorting to JS code, centralized sorting config into app.js initialization; minor app.js refinements","tree":{"sha":"e15a764e603d746333eec85b21e8bae00e3fee98","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e15a764e603d746333eec85b21e8bae00e3fee98"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c691d9573ac69a301f4575d37834ddc12ef3124b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c691d9573ac69a301f4575d37834ddc12ef3124b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c691d9573ac69a301f4575d37834ddc12ef3124b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c691d9573ac69a301f4575d37834ddc12ef3124b/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d80e02334de47b7b1c9bb738f1f66b70d2826780","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d80e02334de47b7b1c9bb738f1f66b70d2826780","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d80e02334de47b7b1c9bb738f1f66b70d2826780"}],"stats":{"total":198,"additions":127,"deletions":71},"files":[{"sha":"c64e73dd90d7842e6abfa8002516b8e892e1ffe7","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=c691d9573ac69a301f4575d37834ddc12ef3124b","patch":"@@ -23,12 +23,10 @@\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.collections4.ComparatorUtils;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.model.SchemaResponse;\n-import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -128,16 +126,6 @@ public boolean evaluate(final GroupTO item) {\n                 }\n             }\n \n-            Collections.sort(plainSchemas, ComparatorUtils.transformedComparator(\n-                    ComparatorUtils.<String>naturalComparator(),\n-                    EntityTOUtils.keyTransformer()));\n-            Collections.sort(derSchemas, ComparatorUtils.transformedComparator(\n-                    ComparatorUtils.<String>naturalComparator(),\n-                    EntityTOUtils.keyTransformer()));\n-            Collections.sort(virSchemas, ComparatorUtils.transformedComparator(\n-                    ComparatorUtils.<String>naturalComparator(),\n-                    EntityTOUtils.keyTransformer()));\n-\n             response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {"},{"sha":"e8f8fd7d57b41f4ba210f2102c16c0ac16c36c21","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":96,"deletions":34,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=c691d9573ac69a301f4575d37834ddc12ef3124b","patch":"@@ -1,5 +1,3 @@\n-/* global $templateCache */\n-\n /**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n@@ -25,7 +23,9 @@ angular.module('login', []);\n angular.module('language', []);\n angular.module('self', []);\n angular.module('info', []);\n-// Declare app level module which depends on views, and components\n+/*\n+ * AngularJS application modules from which depend views and components\n+ */\n var app = angular.module('SyncopeEnduserApp', [\n   'ui.router',\n   'ui.bootstrap',\n@@ -47,14 +47,23 @@ var app = angular.module('SyncopeEnduserApp', [\n \n app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translateProvider', '$translatePartialLoaderProvider',\n   function ($stateProvider, $urlRouterProvider, $httpProvider, $translateProvider, $translatePartialLoaderProvider) {\n-\n+    /*\n+       |--------------------------------------------------------------------------\n+       | Syncope Enduser AngularJS providers configuration\n+       |--------------------------------------------------------------------------\n+     */\n+    \n+    /*\n+     * i18n provider\n+     */\n     $translatePartialLoaderProvider.addPart('static');\n     $translatePartialLoaderProvider.addPart('dynamic');\n     $translateProvider.useLoader('$translatePartialLoader', {\n       urlTemplate: 'languages/{lang}/{part}.json'\n-    })\n-            .preferredLanguage('en');\n-\n+    }).preferredLanguage('en');\n+    /*\n+     * State provider\n+     */\n     $stateProvider\n             .state('home', {\n               url: '/',\n@@ -209,14 +218,19 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n               url: '/mustchangepassword',\n               templateUrl: 'views/mustchangepassword.html'\n             });\n-    // catch all other routes\n-    // send users to the home page \n+    /*\n+     * catch all other routes and send users to the home page \n+     */\n     $urlRouterProvider.otherwise('/');\n-    // HTTP service configuration\n+    /*\n+     * HTTP provider\n+     */\n     $httpProvider.defaults.withCredentials = true;\n     $httpProvider.defaults.xsrfCookieName = 'XSRF-TOKEN';\n     $httpProvider.defaults.xsrfHeaderName = 'X-XSRF-TOKEN';\n-    //SYNCOPE-780\n+    /*\n+     * SYNCOPE-780\n+     */\n     $httpProvider.defaults.headers.common[\"If-Modified-Since\"] = \"0\";\n     $httpProvider.interceptors.push(function ($q, $rootScope, $location) {\n       return {\n@@ -231,7 +245,6 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n           return config || $q.when(config);\n         },\n         'response': function (response) {\n-          //$http.pendingRequests.length\n           $rootScope.spinner.off();\n           return response || $q.when(response);\n         },\n@@ -256,20 +269,14 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n   }]);\n app.run(['$rootScope', '$location', '$state', 'AuthService',\n   function ($rootScope, $location, $state, AuthService) {\n-    // main program\n-    // keep user logged in after page refresh\n-    //If the route change failed due to authentication error, redirect them out\n-    $rootScope.endReached = false;\n-\n-    $rootScope.languages = {\n-      availableLanguages: [\n-        {id: '1', name: 'Italiano', code: 'it', format: 'dd/MM/yyyy HH:mm'},\n-        {id: '2', name: 'English', code: 'en', format: 'MM/dd/yyyy HH:mm'},\n-        {id: '3', name: 'Deutsch', code: 'de', format: 'dd/MM/yyyy HH:mm'}\n-      ]\n-    };\n-    $rootScope.languages.selectedLanguage = $rootScope.languages.availableLanguages[1];\n-\n+    /*\n+       |--------------------------------------------------------------------------\n+       | Main of Syncope Enduser application\n+       |\n+       | keep user logged in after page refresh\n+       | If the route change failed due to authentication error, redirect them out\n+       |--------------------------------------------------------------------------\n+     */\n     $rootScope.$on('$routeChangeError', function (event, current, previous, rejection) {\n       if (rejection === 'Not Authenticated') {\n         $location.path('/self');\n@@ -305,7 +312,9 @@ app.run(['$rootScope', '$location', '$state', 'AuthService',\n           $state.go('self');\n         }\n         );\n-        //enable \"finish\" button on every page in create mode\n+        /*\n+         * enable \"finish\" button on every page in create mode\n+         */\n       } else if (toState.name === 'create.finish') {\n         $rootScope.endReached = true;\n       } else {\n@@ -324,16 +333,36 @@ app.run(['$rootScope', '$location', '$state', 'AuthService',\n   }]);\n app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService', function ($scope, $rootScope,\n           InfoService) {\n-    // get syncope info and set cookie, first call\n     $scope.initApplication = function () {\n+      /* \n+       * disable by default wizard buttons in self-registration\n+       */ \n+      $rootScope.endReached = false;\n+      /*\n+       |--------------------------------------------------------------------------\n+       | Syncope Enduser i18n initialization\n+       |--------------------------------------------------------------------------\n+       */\n+      $rootScope.languages = {\n+        availableLanguages: [\n+          { id: '1', name: 'Italiano', code: 'it', format: 'dd/MM/yyyy HH:mm' },\n+          { id: '2', name: 'English', code: 'en', format: 'MM/dd/yyyy HH:mm' },\n+          { id: '3', name: 'Deutsch', code: 'de', format: 'dd/MM/yyyy HH:mm' }\n+        ]\n+      };\n+      $rootScope.languages.selectedLanguage = $rootScope.languages.availableLanguages[1];\n+      /*\n+       |--------------------------------------------------------------------------\n+       | Syncope Enduser properties initialization\n+       | get info from InfoService API (info settings are initialized every time an user reloads the login page)\n+       |--------------------------------------------------------------------------\n+       */\n       $rootScope.selfRegAllowed = false;\n       $rootScope.pwdResetAllowed = false;\n       $rootScope.version = \"\";\n       $rootScope.pwdResetRequiringSecurityQuestions = false;\n       $rootScope.captchaEnabled = false;\n-      //setting default validation\n       $rootScope.validationEnabled = true;\n-      // call info service (info settings are initialized every time an user reload the login page)\n       InfoService.getInfo().then(\n               function (response) {\n                 $rootScope.pwdResetAllowed = response.pwdResetAllowed;\n@@ -345,6 +374,9 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n               function (response) {\n                 console.error(\"Something went wrong while accessing info resource\", response);\n               });\n+      /* \n+       * configuration getters\n+       */ \n       $rootScope.isSelfRegAllowed = function () {\n         return $rootScope.selfRegAllowed === true;\n       };\n@@ -354,7 +386,26 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $rootScope.getVersion = function () {\n         return $rootScope.version;\n       };\n-      //Notification management           \n+      /* \n+       * USER Attributes sorting strategies\n+       */\n+      $rootScope.attributesSorting = {\n+        ASC: function ( a, b ) {\n+          var schemaNameA = a.key;\n+          var schemaNameB = b.key;\n+          return schemaNameA < schemaNameB ? -1 : schemaNameA > schemaNameB ? 1 : 0;\n+        },\n+        DESC: function ( a, b ) {\n+          var schemaNameA = a.key;\n+          var schemaNameB = b.key;\n+          return schemaNameA < schemaNameB ? 1 : schemaNameA > schemaNameB ? -1 : 0;\n+        }\n+      };\n+      /*\n+       |--------------------------------------------------------------------------\n+       | Notification mgmt\n+       |--------------------------------------------------------------------------\n+       */    \n       $scope.notification = $('#notifications').kendoNotification().data(\"kendoNotification\");\n       $scope.notification.setOptions({stacking: \"down\"});\n       $scope.notification.options.position[\"top\"] = 20;\n@@ -420,9 +471,11 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n           }\n         }\n       };\n-      //Intercepting location change event\n+      /*\n+       * Intercepting location change event\n+       * When a location changes, old notifications should be removed\n+       */\n       $rootScope.$on(\"$locationChangeStart\", function (event, next, current) {\n-        //When a location changes, old notifications should be removed\n         $scope.hideNotifications(3000);\n       });\n       //Intercepting xhr start event\n@@ -433,7 +486,11 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $scope.$on('hideErrorMessage', function (event, popupMessage) {\n         $scope.hideError(popupMessage, $scope.notification);\n       });\n-      //wizard active element\n+      /*\n+       |--------------------------------------------------------------------------\n+       | Wizard configuration\n+       |--------------------------------------------------------------------------\n+       */ \n       $scope.wizard = {\n         \"credentials\": {url: \"/credentials\"},\n         \"groups\": {url: \"/groups\"},\n@@ -443,6 +500,11 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n         \"resources\": {url: \"/resources\"},\n         \"finish\": {url: \"/finish\"}\n       };\n+      /*\n+       |--------------------------------------------------------------------------\n+       | Utilities\n+       |--------------------------------------------------------------------------\n+       */\n       $scope.clearCache = function () {\n         $templateCache.removeAll();\n       };"},{"sha":"9be593523113a760791224fc78b4f054d677bddc","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=c691d9573ac69a301f4575d37834ddc12ef3124b","patch":"@@ -64,24 +64,26 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         // initialization is done here synchronously to have all schema fields populated correctly\n         var schemaService;\n         if (group) {\n-          schemaService = SchemaService.getTypeExtSchemas(group);\n+          schemaService = SchemaService.getTypeExtSchemas(group, $rootScope.attributesSorting.ASC);\n         } else {\n-          schemaService = SchemaService.getUserSchemas(anyTypeClass);\n+          schemaService = SchemaService.getUserSchemas(anyTypeClass, $rootScope.attributesSorting.ASC);\n         }\n         schemaService.then(function (schemas) {\n           if (group && (schemas.plainSchemas.length > 0 || schemas.derSchemas.length > 0 || schemas.virSchemas.length > 0))\n             $scope.dynamicForm.groupSchemas.push(group);\n           //initializing user schemas values\n           initSchemaValues(schemas);\n         }, function (response) {\n-          var errorMessage;\n-          // parse error response \n-          if (response !== undefined) {\n-            errorMessage = response.split(\"ErrorMessage{{\")[1];\n-            errorMessage = errorMessage.split(\"}}\")[0];\n+          // parse error response and log\n+          if ( response !== undefined ) {\n+            var errorMessages = response.toString().split( \"ErrorMessage{{\" );\n+            if ( errorMessages.length > 1 ) {\n+              console.error( \"Error retrieving user schemas: \", response.toString().split( \"ErrorMessage{{\" )[1].split( \"}}\" )[0] );\n+            } else {\n+              console.error( \"Error retrieving user schemas: \", errorMessages );\n+            }\n           }\n-          console.error(\"Error retrieving user schemas: \", errorMessage);\n-        });\n+        } );\n       };\n \n       var initSchemaValues = function (schemas) {"},{"sha":"90fdee939949e6336e1e5d3e489391f5f11b24d5","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/schemaService.js","status":"modified","additions":20,"deletions":16,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c691d9573ac69a301f4575d37834ddc12ef3124b/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js?ref=c691d9573ac69a301f4575d37834ddc12ef3124b","patch":"@@ -19,22 +19,26 @@\n \n 'use strict';\n \n-angular.module('self')\n-        .factory('SchemaService', ['$resource', '$q', '$http',\n-          function ($resource, $q, $http) {\n-\n-            var schemaService = {};\n-\n-            schemaService.getUserSchemas = function (anyTypeClass) {\n-              var classParam = anyTypeClass ? \"?anyTypeClass=\" + encodeURI(anyTypeClass) : \"\";\n-\n-              return  $http.get(\"/syncope-enduser/api/schemas\" + classParam)\n-                      .then(function (response) {\n-                        return response.data;\n-                      }, function (response) {\n-                        console.error(\"Something went wrong during schema retrieval, exit with status: \", response);\n-                        return $q.reject(response.data || response.statusText);\n-                      });\n+angular.module( 'self' )\n+        .factory( 'SchemaService', [ '$q', '$http',\n+          function ( $q, $http ) {\n+\n+            var schemaService = { };\n+\n+            schemaService.getUserSchemas = function ( anyTypeClass, sortingFunction ) {\n+              var classParam = anyTypeClass ? \"?anyTypeClass=\" + encodeURI( anyTypeClass ) : \"\";\n+\n+              return  $http.get( \"/syncope-enduser/api/schemas\" + classParam )\n+                      .then( function ( response ) {\n+                        var schemas = response.data;\n+                        schemas.plainSchemas.sort( sortingFunction );\n+                        schemas.derSchemas.sort( sortingFunction );\n+                        schemas.virSchemas.sort( sortingFunction );\n+                        return schemas;\n+                      }, function ( response ) {\n+                        console.error( \"Something went wrong during schema retrieval, exit with status: \", response );\n+                        return $q.reject( response.data || response.statusText );\n+                      } );\n             };\n \n             schemaService.getTypeExtSchemas = function (group) {"}]}