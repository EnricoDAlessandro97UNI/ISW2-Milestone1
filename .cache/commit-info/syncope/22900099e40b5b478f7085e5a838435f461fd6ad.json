{"sha":"22900099e40b5b478f7085e5a838435f461fd6ad","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIyOTAwMDk5ZTQwYjViNDc4ZjcwODVlNWE4Mzg0MzVmNDYxZmQ2YWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-30T13:53:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-30T13:53:36Z"},"message":"Better Java 8 map iteration","tree":{"sha":"90ee744325bc160ff94bb2642e3c135c665b9eca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/90ee744325bc160ff94bb2642e3c135c665b9eca"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/22900099e40b5b478f7085e5a838435f461fd6ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22900099e40b5b478f7085e5a838435f461fd6ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/22900099e40b5b478f7085e5a838435f461fd6ad","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22900099e40b5b478f7085e5a838435f461fd6ad/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b36d3485a0893534b37da27a4f7bb730f9d954cd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b36d3485a0893534b37da27a4f7bb730f9d954cd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b36d3485a0893534b37da27a4f7bb730f9d954cd"}],"stats":{"total":51,"additions":25,"deletions":26},"files":[{"sha":"ed6cd25901ab957eb3f63316241ba08cee5af46f","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/spring/DomainProcessEngineFactoryBean.java","status":"modified","additions":25,"deletions":26,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22900099e40b5b478f7085e5a838435f461fd6ad/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22900099e40b5b478f7085e5a838435f461fd6ad/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java?ref=22900099e40b5b478f7085e5a838435f461fd6ad","patch":"@@ -57,34 +57,33 @@ public DomainProcessEngine getObject() throws Exception {\n         if (engine == null) {\n             Map<String, ProcessEngine> engines = new HashMap<>();\n \n-            ctx.getBeansOfType(DataSource.class).entrySet().stream().\n-                    filter(entry -> (!entry.getKey().startsWith(\"local\"))).\n-                    forEachOrdered(entry -> {\n-                        String domain = StringUtils.substringBefore(entry.getKey(), DataSource.class.getSimpleName());\n-                        DataSource dataSource = entry.getValue();\n-                        PlatformTransactionManager transactionManager = ctx.getBean(\n-                                domain + \"TransactionManager\", PlatformTransactionManager.class);\n-                        Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n+            ctx.getBeansOfType(DataSource.class).forEach((key, dataSource) -> {\n+                if (!key.startsWith(\"local\")) {\n+                    String domain = StringUtils.substringBefore(key, DataSource.class.getSimpleName());\n+                    PlatformTransactionManager transactionManager = ctx.getBean(\n+                            domain + \"TransactionManager\", PlatformTransactionManager.class);\n+                    Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n \n-                        SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n-                        conf.setDataSource(dataSource);\n-                        conf.setTransactionManager(transactionManager);\n-                        conf.setTransactionsExternallyManaged(true);\n-                        conf.setJpaEntityManagerFactory(entityManagerFactory);\n-                        if (conf.getBeans() == null) {\n-                            conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n-                        }\n-                        if (conf.getExpressionManager() == null) {\n-                            conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n-                        }\n-                        if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n-                            conf.addEngineConfiguration(\n-                                    EngineConfigurationConstants.KEY_IDM_ENGINE_CONFIG,\n-                                    ctx.getBean(SpringIdmEngineConfiguration.class));\n-                        }\n+                    SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n+                    conf.setDataSource(dataSource);\n+                    conf.setTransactionManager(transactionManager);\n+                    conf.setTransactionsExternallyManaged(true);\n+                    conf.setJpaEntityManagerFactory(entityManagerFactory);\n+                    if (conf.getBeans() == null) {\n+                        conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n+                    }\n+                    if (conf.getExpressionManager() == null) {\n+                        conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n+                    }\n+                    if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n+                        conf.addEngineConfiguration(\n+                                EngineConfigurationConstants.KEY_IDM_ENGINE_CONFIG,\n+                                ctx.getBean(SpringIdmEngineConfiguration.class));\n+                    }\n \n-                        engines.put(domain, conf.buildProcessEngine());\n-                    });\n+                    engines.put(domain, conf.buildProcessEngine());\n+                }\n+            });\n \n             engine = new DomainProcessEngine(engines);\n         }"}]}