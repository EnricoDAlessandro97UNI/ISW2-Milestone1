{"sha":"c00a6285cf02f842b4d11065af67757cb8e123f2","node_id":"C_kwDOJfYA1toAKGMwMGE2Mjg1Y2YwMmY4NDJiNGQxMTA2NWFmNjc3NTdjYjhlMTIzZjI","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-12-01T13:00:11Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-12-01T13:00:11Z"},"message":"Empowering Spring Boot best-practices to Console and Enduser (#396)","tree":{"sha":"16598619b03dc5113506b77dbcf39275f8fd6b81","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/16598619b03dc5113506b77dbcf39275f8fd6b81"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c00a6285cf02f842b4d11065af67757cb8e123f2","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjiKVbCRBK7hj4Ov3rIwAA/LYIAHiLTqUnzUR84z+VVP+dshuU\nZYNp7Th6M3gUz8KVYXbpi1CaOcwU0OWPBt32jw4znu41U8h2PIRjadNAuPzxEpq2\nz2kRptBt95v5+FdCRNOcH9jOvgfQ7HeHd2xMY1G0bP89oLtrazpiGppsbgKKrEx1\nSDVvjUimmPMCmH0Fuwp64/u0TuXnLH5aPS7hCBwUXVrNc3JBMaeHo5wB/0rQ1GV3\nngeI6ibmCG9Q0QW5xLeJATBJo0bWW9OfyWvoAiqcKK+eJGrKnP3rCFqNS0bDXKGt\n10ASOCkEpmK2NlST4QO0F/S3OjZL5Lzr6Ms6OWID7AQT5odIiKzr3epvbM4BVIc=\n=j9W2\n-----END PGP SIGNATURE-----\n","payload":"tree 16598619b03dc5113506b77dbcf39275f8fd6b81\nparent 12bbc5ffb755589d2bf11ac9ffd174b56d712a3b\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1669899611 +0100\ncommitter GitHub <noreply@github.com> 1669899611 +0100\n\nEmpowering Spring Boot best-practices to Console and Enduser (#396)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c00a6285cf02f842b4d11065af67757cb8e123f2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c00a6285cf02f842b4d11065af67757cb8e123f2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c00a6285cf02f842b4d11065af67757cb8e123f2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"12bbc5ffb755589d2bf11ac9ffd174b56d712a3b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b"}],"stats":{"total":673,"additions":365,"deletions":308},"files":[{"sha":"a3334c521f0b998d82bfb5321416fd2d30deb25e","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/ApplicationContextProvider.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FApplicationContextProvider.java?ref=12bbc5ffb755589d2bf11ac9ffd174b56d712a3b","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.ui.commons;\n-\n-import java.util.Optional;\n-import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.ApplicationContextAware;\n-import org.springframework.context.ConfigurableApplicationContext;\n-\n-public class ApplicationContextProvider implements ApplicationContextAware {\n-\n-    private static ConfigurableApplicationContext CTX;\n-\n-    private static DefaultListableBeanFactory BEAN_FACTORY;\n-\n-    public static ConfigurableApplicationContext getApplicationContext() {\n-        return CTX;\n-    }\n-\n-    public static void setApplicationContext(final ConfigurableApplicationContext ctx) {\n-        CTX = ctx;\n-    }\n-\n-    public static DefaultListableBeanFactory getBeanFactory() {\n-        return Optional.ofNullable(BEAN_FACTORY).orElseGet(()\n-            -> Optional.ofNullable(CTX).map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).orElse(null));\n-    }\n-\n-    public static void setBeanFactory(final DefaultListableBeanFactory beanFactory) {\n-        BEAN_FACTORY = beanFactory;\n-    }\n-\n-    /**\n-     * Wiring the ApplicationContext into a static method.\n-     *\n-     * @param ctx Spring application context\n-     */\n-    @Override\n-    public void setApplicationContext(final ApplicationContext ctx) {\n-        CTX = (ConfigurableApplicationContext) ctx;\n-    }\n-}"},{"sha":"6c6d741876ac18c2bd00d73732e6ef0d554aa5a9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/ConsoleContext.java","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleContext.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n+import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionsProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.IdRepoExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.IdRepoRealmPolicyProvider;\n+import org.apache.syncope.client.console.commons.IdRepoStatusProvider;\n+import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.syncope.client.console.commons.PreviewUtils;\n+import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n+import org.apache.syncope.client.console.commons.StatusProvider;\n+import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationContributor;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration(proxyBeanMethods = false)\n+public class ConsoleContext {\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup(\n+            final ApplicationContext ctx, final ConsoleProperties props) {\n+\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(\n+                ctx.getBeansOfType(ClassPathScanImplementationContributor.class).values(), props);\n+        lookup.load();\n+        return lookup;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public MIMETypesLoader mimeTypesLoader() {\n+        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n+        mimeTypesLoader.load();\n+        return mimeTypesLoader;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public PreviewUtils previewUtils() {\n+        return new PreviewUtils();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ExternalResourceProvider resourceProvider() {\n+        return new IdRepoExternalResourceProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider() {\n+        return new IdRepoAnyDirectoryPanelAdditionalActionsProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider() {\n+        return new IdRepoAnyDirectoryPanelAdditionalActionLinksProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps() {\n+        return new IdRepoAnyWizardBuilderAdditionalSteps();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public StatusProvider statusProvider() {\n+        return new IdRepoStatusProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider() {\n+        return new IdRepoVirSchemaDetailsPanelProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ImplementationInfoProvider implementationInfoProvider() {\n+        return new IdRepoImplementationInfoProvider();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public RealmPolicyProvider realmPolicyProvider() {\n+        return new IdRepoRealmPolicyProvider();\n+    }\n+\n+    @Bean\n+    public PolicyTabProvider idRepoPolicyTabProvider() {\n+        return new IdRepoPolicyTabProvider();\n+    }\n+}"},{"sha":"d3ee8b5cf0bc8090084030d22a3c0f585ee75ea7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":27,"deletions":103,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -25,26 +25,10 @@\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionLinksProvider;\n-import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionsProvider;\n-import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n-import org.apache.syncope.client.console.commons.IdRepoExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.IdRepoImplementationInfoProvider;\n-import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n-import org.apache.syncope.client.console.commons.IdRepoRealmPolicyProvider;\n-import org.apache.syncope.client.console.commons.IdRepoStatusProvider;\n-import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n-import org.apache.syncope.client.console.commons.PolicyTabProvider;\n-import org.apache.syncope.client.console.commons.PreviewUtils;\n-import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationContributor;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n-import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n-import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.client.ui.commons.actuate.SyncopeCoreHealthIndicator;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n@@ -80,15 +64,38 @@ protected SpringApplicationBuilder configure(final SpringApplicationBuilder buil\n                 sources(SyncopeConsoleApplication.class);\n     }\n \n+    @ConditionalOnMissingBean\n     @Bean\n-    public ApplicationContextProvider applicationContextProvider() {\n-        return new ApplicationContextProvider();\n+    public SyncopeWebApplication syncopeWebApplication(\n+            final ConsoleProperties props,\n+            final ClassPathScanImplementationLookup lookup,\n+            final ServiceOps serviceOps,\n+            final ExternalResourceProvider resourceProvider,\n+            final AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider,\n+            final AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider,\n+            final AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps,\n+            final StatusProvider statusProvider,\n+            final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n+            final ImplementationInfoProvider implementationInfoProvider,\n+            final ApplicationContext ctx) {\n+\n+        return new SyncopeWebApplication(\n+                props,\n+                lookup,\n+                serviceOps,\n+                resourceProvider,\n+                anyDirectoryPanelAdditionalActionsProvider,\n+                anyDirectoryPanelAdditionalActionLinksProvider,\n+                anyWizardBuilderAdditionalSteps, statusProvider,\n+                virSchemaDetailsPanelProvider,\n+                implementationInfoProvider, ctx);\n     }\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator(final ServiceOps serviceOps,\n-                                                                 final ConsoleProperties props) {\n+    public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator(\n+            final ServiceOps serviceOps, final ConsoleProperties props) {\n+\n         return new SyncopeCoreHealthIndicator(\n                 serviceOps,\n                 props.getAnonymousUser(),\n@@ -102,89 +109,6 @@ public SyncopeConsoleInfoContributor syncopeConsoleInfoContributor() {\n         return new SyncopeConsoleInfoContributor();\n     }\n \n-    @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n-    @Bean\n-    public ClassPathScanImplementationLookup classPathScanImplementationLookup(final ApplicationContext ctx,\n-                                                                               final ConsoleProperties props) {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(\n-                ctx.getBeansOfType(ClassPathScanImplementationContributor.class).values(), props);\n-        lookup.load();\n-        return lookup;\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"mimeTypesLoader\")\n-    @Bean\n-    public MIMETypesLoader mimeTypesLoader() {\n-        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n-        mimeTypesLoader.load();\n-        return mimeTypesLoader;\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"previewUtils\")\n-    @Bean\n-    public PreviewUtils previewUtils() {\n-        return new PreviewUtils();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"userFormFinalizerUtils\")\n-    @Bean\n-    public UserFormFinalizerUtils userFormFinalizerUtils() {\n-        return new UserFormFinalizerUtils();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"resourceProvider\")\n-    @Bean\n-    public ExternalResourceProvider resourceProvider() {\n-        return new IdRepoExternalResourceProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"anyDirectoryPanelAdditionalActionsProvider\")\n-    @Bean\n-    public AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider() {\n-        return new IdRepoAnyDirectoryPanelAdditionalActionsProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"anyDirectoryPanelAdditionalActionLinksProvider\")\n-    @Bean\n-    public AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider() {\n-        return new IdRepoAnyDirectoryPanelAdditionalActionLinksProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"anyWizardBuilderAdditionalSteps\")\n-    @Bean\n-    public AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps() {\n-        return new IdRepoAnyWizardBuilderAdditionalSteps();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"statusProvider\")\n-    @Bean\n-    public StatusProvider statusProvider() {\n-        return new IdRepoStatusProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"virSchemaDetailsPanelProvider\")\n-    @Bean\n-    public VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider() {\n-        return new IdRepoVirSchemaDetailsPanelProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"implementationInfoProvider\")\n-    @Bean\n-    public ImplementationInfoProvider implementationInfoProvider() {\n-        return new IdRepoImplementationInfoProvider();\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"realmPolicyProvider\")\n-    @Bean\n-    public RealmPolicyProvider realmPolicyProvider() {\n-        return new IdRepoRealmPolicyProvider();\n-    }\n-\n-    @Bean\n-    public PolicyTabProvider idRepoPolicyTabProvider() {\n-        return new IdRepoPolicyTabProvider();\n-    }\n-\n     @Bean\n     public KeymasterStart keymasterStart() {\n         return new KeymasterStart(NetworkService.Type.CONSOLE);"},{"sha":"23dfe3178af7e0c4c3f7456f77ab4b6ebd0f59ff","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":58,"deletions":25,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -23,7 +23,9 @@\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n+import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.List;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n@@ -37,13 +39,15 @@\n import org.apache.syncope.client.console.pages.Dashboard;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.client.console.pages.MustChangePassword;\n+import org.apache.syncope.client.console.wizards.any.UserFormFinalizer;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.SyncopeUIRequestCycleListener;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.themes.AdminLTE;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.wicket.Page;\n@@ -65,12 +69,10 @@\n import org.apache.wicket.request.resource.ResourceReference;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.ApplicationContext;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n \n-@Component\n public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n@@ -79,38 +81,53 @@ public static SyncopeWebApplication get() {\n         return (SyncopeWebApplication) WebApplication.get();\n     }\n \n-    @Autowired\n-    protected ConsoleProperties props;\n+    protected final ConsoleProperties props;\n \n-    @Autowired\n-    protected ClassPathScanImplementationLookup lookup;\n+    protected final ClassPathScanImplementationLookup lookup;\n \n-    @Autowired\n-    protected ServiceOps serviceOps;\n+    protected final ServiceOps serviceOps;\n \n-    @Autowired\n-    protected ExternalResourceProvider resourceProvider;\n+    protected final ExternalResourceProvider resourceProvider;\n \n-    @Autowired\n-    protected AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider;\n+    protected final AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider;\n \n-    @Autowired\n-    protected AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider;\n+    protected final AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider;\n \n-    @Autowired\n-    protected AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps;\n+    protected final AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps;\n \n-    @Autowired\n-    protected StatusProvider statusProvider;\n+    protected final StatusProvider statusProvider;\n \n-    @Autowired\n-    protected VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider;\n+    protected final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider;\n \n-    @Autowired\n-    protected ImplementationInfoProvider implementationInfoProvider;\n+    protected final ImplementationInfoProvider implementationInfoProvider;\n \n-    @Autowired\n-    protected ApplicationContext ctx;\n+    protected final ApplicationContext ctx;\n+\n+    public SyncopeWebApplication(\n+            final ConsoleProperties props,\n+            final ClassPathScanImplementationLookup lookup,\n+            final ServiceOps serviceOps,\n+            final ExternalResourceProvider resourceProvider,\n+            final AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider,\n+            final AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider,\n+            final AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps,\n+            final StatusProvider statusProvider,\n+            final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n+            final ImplementationInfoProvider implementationInfoProvider,\n+            final ApplicationContext ctx) {\n+\n+        this.props = props;\n+        this.lookup = lookup;\n+        this.serviceOps = serviceOps;\n+        this.resourceProvider = resourceProvider;\n+        this.anyDirectoryPanelAdditionalActionsProvider = anyDirectoryPanelAdditionalActionsProvider;\n+        this.anyDirectoryPanelAdditionalActionLinksProvider = anyDirectoryPanelAdditionalActionLinksProvider;\n+        this.anyWizardBuilderAdditionalSteps = anyWizardBuilderAdditionalSteps;\n+        this.statusProvider = statusProvider;\n+        this.virSchemaDetailsPanelProvider = virSchemaDetailsPanelProvider;\n+        this.implementationInfoProvider = implementationInfoProvider;\n+        this.ctx = ctx;\n+    }\n \n     @Override\n     protected void init() {\n@@ -316,4 +333,20 @@ public ImplementationInfoProvider getImplementationInfoProvider() {\n     public Collection<PolicyTabProvider> getPolicyTabProviders() {\n         return ctx.getBeansOfType(PolicyTabProvider.class).values();\n     }\n+\n+    public List<UserFormFinalizer> getFormFinalizers(final AjaxWizard.Mode mode) {\n+        List<UserFormFinalizer> finalizers = new ArrayList<>();\n+\n+        lookup.getUserFormFinalizerClasses(mode).forEach(finalizer -> {\n+            if (finalizer != null) {\n+                try {\n+                    finalizers.add(ClassUtils.getConstructorIfAvailable(finalizer).newInstance());\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not instantiate {}\", finalizer, e);\n+                }\n+            }\n+        });\n+\n+        return finalizers;\n+    }\n }"},{"sha":"fe11de401df3881adaa293389c65cf2d47a2652b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserFormFinalizerUtils.java","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/12bbc5ffb755589d2bf11ac9ffd174b56d712a3b/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserFormFinalizerUtils.java?ref=12bbc5ffb755589d2bf11ac9ffd174b56d712a3b","patch":"@@ -1,52 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wizards.any;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.util.ClassUtils;\n-\n-public final class UserFormFinalizerUtils {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserFormFinalizerUtils.class);\n-\n-    @Autowired\n-    private ClassPathScanImplementationLookup lookup;\n-\n-    public List<UserFormFinalizer> getFormFinalizers(final AjaxWizard.Mode mode) {\n-        List<UserFormFinalizer> finalizers = new ArrayList<>();\n-\n-        lookup.getUserFormFinalizerClasses(mode).forEach(applier -> {\n-            if (applier != null) {\n-                try {\n-                    finalizers.add(ClassUtils.getConstructorIfAvailable(applier).newInstance());\n-                } catch (Exception e) {\n-                    LOG.error(\"Could not instantiate {}\", applier, e);\n-                }\n-            }\n-        });\n-\n-        return finalizers;\n-    }\n-}"},{"sha":"da44e19d72fdafa1a4f21393ab2b6ac95ebf3b06","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -22,9 +22,9 @@\n import java.util.List;\n import java.util.Optional;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.layout.UserForm;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n@@ -90,8 +90,7 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                 result = new ProvisioningResult<>();\n                 result.setEntity(inner);\n             } else {\n-                List<UserFormFinalizer> finalizers = ApplicationContextProvider.getApplicationContext().\n-                        getBean(UserFormFinalizerUtils.class).getFormFinalizers(this.mode);\n+                List<UserFormFinalizer> finalizers = SyncopeWebApplication.get().getFormFinalizers(mode);\n \n                 finalizers.forEach(finalizer -> finalizer.beforeUpdate(userUR.getKey()));\n "},{"sha":"6357f8ae6ce24b873b4287007314a0c6c729a718","filename":"client/idrepo/console/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.client.console.ConsoleContext"},{"sha":"861d54cabee8827dcbfcbfbb4837b95ce8758dc5","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -53,7 +53,6 @@\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n import org.apache.syncope.client.lib.AuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n@@ -78,6 +77,7 @@\n import org.apache.wicket.util.tester.WicketTester;\n import org.junit.jupiter.api.BeforeAll;\n import org.springframework.boot.autoconfigure.ImportAutoConfiguration;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n@@ -155,11 +155,6 @@ public PreviewUtils previewUtils() {\n             return new PreviewUtils();\n         }\n \n-        @Bean\n-        public UserFormFinalizerUtils userFormFinalizerUtils() {\n-            return new UserFormFinalizerUtils();\n-        }\n-\n         @Bean\n         public ExternalResourceProvider resourceProvider() {\n             return new IdRepoExternalResourceProvider();\n@@ -203,6 +198,24 @@ public PolicyTabProvider policyTabProvider() {\n \n     public static class TestSyncopeWebApplication extends SyncopeWebApplication {\n \n+        public TestSyncopeWebApplication(\n+                final ConsoleProperties props,\n+                final ClassPathScanImplementationLookup lookup,\n+                final ServiceOps serviceOps,\n+                final ExternalResourceProvider resourceProvider,\n+                final AnyDirectoryPanelAdditionalActionsProvider anyDirectoryPanelAdditionalActionsProvider,\n+                final AnyDirectoryPanelAdditionalActionLinksProvider anyDirectoryPanelAdditionalActionLinksProvider,\n+                final AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps,\n+                final StatusProvider statusProvider,\n+                final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n+                final ImplementationInfoProvider implementationInfoProvider,\n+                final ApplicationContext ctx) {\n+\n+            super(props, lookup, serviceOps, resourceProvider, anyDirectoryPanelAdditionalActionsProvider,\n+                    anyDirectoryPanelAdditionalActionLinksProvider, anyWizardBuilderAdditionalSteps, statusProvider,\n+                    virSchemaDetailsPanelProvider, implementationInfoProvider, ctx);\n+        }\n+\n         public interface SyncopeServiceClient extends SyncopeService, Client {\n         }\n "},{"sha":"6bd8a74e3e03dc8a6fc6aad8aba1146528778621","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/EnduserContext.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserContext.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import org.apache.syncope.client.enduser.commons.PreviewUtils;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration(proxyBeanMethods = false)\n+public class EnduserContext {\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public MIMETypesLoader mimeTypesLoader() {\n+        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n+        mimeTypesLoader.load();\n+        return mimeTypesLoader;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public PreviewUtils previewUtils() {\n+        return new PreviewUtils();\n+    }\n+}"},{"sha":"7036996eb26b5764b650660293b35619756e0028","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":12,"deletions":29,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -21,10 +21,7 @@\n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n import java.util.Map;\n import org.apache.syncope.client.enduser.actuate.SyncopeEnduserInfoContributor;\n-import org.apache.syncope.client.enduser.commons.PreviewUtils;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n-import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.client.ui.commons.actuate.SyncopeCoreHealthIndicator;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n@@ -38,6 +35,7 @@\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n import org.springframework.context.annotation.Bean;\n+import org.springframework.core.io.ResourceLoader;\n \n @SpringBootApplication(exclude = {\n     ErrorMvcAutoConfiguration.class,\n@@ -59,15 +57,22 @@ protected SpringApplicationBuilder configure(final SpringApplicationBuilder buil\n                 sources(SyncopeEnduserApplication.class);\n     }\n \n+    @ConditionalOnMissingBean\n     @Bean\n-    public ApplicationContextProvider applicationContextProvider() {\n-        return new ApplicationContextProvider();\n+    public SyncopeWebApplication syncopeWebApplication(\n+            final ResourceLoader resourceLoader,\n+            final EnduserProperties props,\n+            final ClassPathScanImplementationLookup lookup,\n+            final ServiceOps serviceOps) {\n+\n+        return new SyncopeWebApplication(resourceLoader, props, lookup, serviceOps);\n     }\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator(final ServiceOps serviceOps,\n-                                                                 final EnduserProperties props) {\n+    public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator(\n+            final ServiceOps serviceOps, final EnduserProperties props) {\n+\n         return new SyncopeCoreHealthIndicator(\n                 serviceOps,\n                 props.getAnonymousUser(),\n@@ -81,28 +86,6 @@ public SyncopeEnduserInfoContributor syncopeEnduserInfoContributor(final Enduser\n         return new SyncopeEnduserInfoContributor(enduserProperties);\n     }\n \n-    @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n-    @Bean\n-    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-        lookup.load();\n-        return lookup;\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"mimeTypesLoader\")\n-    @Bean\n-    public MIMETypesLoader mimeTypesLoader() {\n-        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n-        mimeTypesLoader.load();\n-        return mimeTypesLoader;\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"previewUtils\")\n-    @Bean\n-    public PreviewUtils previewUtils() {\n-        return new PreviewUtils();\n-    }\n-\n     @Bean\n     public KeymasterStart keymasterStart() {\n         return new KeymasterStart(NetworkService.Type.ENDUSER);"},{"sha":"c7dda3204c2f120504ec212232c3121a3375e0d7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -63,11 +63,8 @@\n import org.apache.wicket.request.resource.ResourceReference;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.ResourceLoader;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class SyncopeWebApplication extends WicketBootStandardWebApplication {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n@@ -81,20 +78,28 @@ public static SyncopeWebApplication get() {\n         return (SyncopeWebApplication) WebApplication.get();\n     }\n \n-    @Autowired\n-    protected ResourceLoader resourceLoader;\n+    protected final ResourceLoader resourceLoader;\n \n-    @Autowired\n-    protected EnduserProperties props;\n+    protected final EnduserProperties props;\n \n-    @Autowired\n-    protected ClassPathScanImplementationLookup lookup;\n+    protected final ClassPathScanImplementationLookup lookup;\n \n-    @Autowired\n-    protected ServiceOps serviceOps;\n+    protected final ServiceOps serviceOps;\n \n     protected UserFormLayoutInfo customFormLayout;\n \n+    public SyncopeWebApplication(\n+            final ResourceLoader resourceLoader,\n+            final EnduserProperties props,\n+            final ClassPathScanImplementationLookup lookup,\n+            final ServiceOps serviceOps) {\n+\n+        this.resourceLoader = resourceLoader;\n+        this.props = props;\n+        this.lookup = lookup;\n+        this.serviceOps = serviceOps;\n+    }\n+\n     @Override\n     protected void init() {\n         super.init();\n@@ -261,11 +266,11 @@ public String getAnonymousKey() {\n     public boolean isCaptchaEnabled() {\n         return props.isCaptcha();\n     }\n-    \n+\n     public boolean isReportPropagationErrors() {\n         return props.isReportPropagationErrors();\n     }\n-    \n+\n     public boolean isReportPropagationErrorDetails() {\n         return props.isReportPropagationErrorDetails();\n     }"},{"sha":"8165f26596f7fbed2351d1b9da4018dd2247bdbe","filename":"client/idrepo/enduser/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.client.enduser.EnduserContext"},{"sha":"a209ca59498bb4d634ba78bbdf032a2c677c52b6","filename":"client/idrepo/enduser/src/test/java/org/apache/syncope/client/enduser/AbstractTest.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -60,6 +60,7 @@\n import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.ResourceLoader;\n \n public abstract class AbstractTest {\n \n@@ -133,6 +134,15 @@ public MIMETypesLoader mimeTypesLoader() {\n \n     public static class TestSyncopeWebApplication extends SyncopeWebApplication {\n \n+        public TestSyncopeWebApplication(\n+                final ResourceLoader resourceLoader,\n+                final EnduserProperties props,\n+                final ClassPathScanImplementationLookup lookup,\n+                final ServiceOps serviceOps) {\n+\n+            super(resourceLoader, props, lookup, serviceOps);\n+        }\n+\n         public interface SyncopeServiceClient extends SyncopeService, Client {\n         }\n "},{"sha":"11b2b64758e3543f28a7455ae18697da434840dd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -40,9 +40,7 @@\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.client.console.topology.Topology;\n-import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.keymaster.client.zookeeper.ZookeeperKeymasterClientContext;\n@@ -97,11 +95,6 @@ public WicketEndpointRepository wicketEndpointRepository() {\n             return new WicketEndpointRepositoryDefault();\n         }\n \n-        @Bean\n-        public ApplicationContextProvider applicationContextProvider() {\n-            return new ApplicationContextProvider();\n-        }\n-\n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n             ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(Set.of(),\n@@ -122,11 +115,6 @@ public PreviewUtils previewUtils() {\n             return new PreviewUtils();\n         }\n \n-        @Bean\n-        public UserFormFinalizerUtils userFormFinalizerUtils() {\n-            return new UserFormFinalizerUtils();\n-        }\n-\n         @Bean\n         public PolicyTabProvider idRepoPolicyTabProvider() {\n             return new IdRepoPolicyTabProvider();"},{"sha":"46d49d1ea79e841f4b3802081b8fa95668b2e253","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AbstractEnduserITCase.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.client.enduser.pages.Login;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.keymaster.client.zookeeper.ZookeeperKeymasterClientContext;\n@@ -101,11 +100,6 @@ public WicketEndpointRepository wicketEndpointRepository() {\n             return new WicketEndpointRepositoryDefault();\n         }\n \n-        @Bean\n-        public ApplicationContextProvider applicationContextProvider() {\n-            return new ApplicationContextProvider();\n-        }\n-\n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n             ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();"},{"sha":"53493772e5e411b4fd2d97e75a7c0960324170c3","filename":"pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c00a6285cf02f842b4d11065af67757cb8e123f2/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c00a6285cf02f842b4d11065af67757cb8e123f2/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c00a6285cf02f842b4d11065af67757cb8e123f2","patch":"@@ -1683,6 +1683,7 @@ under the License.\n           <artifactId>maven-resources-plugin</artifactId>\n           <version>3.3.0</version>\n           <configuration>\n+            <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>\n             <useDefaultDelimiters>false</useDefaultDelimiters>\n             <delimiters>\n               <delimiter>${*}</delimiter>"}]}