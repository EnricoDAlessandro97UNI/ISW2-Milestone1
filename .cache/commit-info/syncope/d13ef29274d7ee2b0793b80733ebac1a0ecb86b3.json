{"sha":"d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQxM2VmMjkyNzRkN2VlMmIwNzkzYjgwNzMzZWJhYzFhMGVjYjg2YjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-31T09:22:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-31T09:22:11Z"},"message":"White noise: reflow","tree":{"sha":"06d4372ca7c05d1fa264a65a8a1214dbd1ca90d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/06d4372ca7c05d1fa264a65a8a1214dbd1ca90d9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"026df269ee32d8fadf5741ee40578c4f2bea315a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/026df269ee32d8fadf5741ee40578c4f2bea315a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/026df269ee32d8fadf5741ee40578c4f2bea315a"}],"stats":{"total":8,"additions":5,"deletions":3},"files":[{"sha":"d4a3f605098ecb0b8961072a8c48f17b642b8de6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyUtils.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java?ref=d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","patch":"@@ -386,6 +386,7 @@ public Set<ExternalResource> getAllResources(final Any<?> any) {\n     @Override\n     public void addAttr(final String key, final PlainSchema schema, final String value) {\n         Any any = dao().find(key);\n+\n         Set<AnyTypeClass> typeOwnClasses = new HashSet<>();\n         typeOwnClasses.addAll(any.getType().getClasses());\n         typeOwnClasses.addAll(any.getAuxClasses());"},{"sha":"0bcf115d15102140de6e3ab4182d4832c0fac47a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d13ef29274d7ee2b0793b80733ebac1a0ecb86b3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=d13ef29274d7ee2b0793b80733ebac1a0ecb86b3","patch":"@@ -354,9 +354,10 @@ protected String doExecuteProvisioning(\n \n                     if (provision.getUidOnCreate() != null) {\n                         AnyUtils anyUtils = anyUtilsFactory.getInstance(provision.getAnyType().getKind());\n-                        profile.getResults().stream().filter(result\n-                                -> result.getUidValue() != null && result.getOperation() == ResourceOperation.CREATE)\n-                                .forEach(result -> {\n+                        profile.getResults().stream().\n+                                filter(result -> result.getUidValue() != null\n+                                && result.getOperation() == ResourceOperation.CREATE).\n+                                forEach(result -> {\n                                     anyUtils.addAttr(result.getKey(), provision.getUidOnCreate(), result.getUidValue());\n                                 });\n                     }"}]}