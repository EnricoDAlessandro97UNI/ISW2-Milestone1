{"sha":"4cd6f5dc673497b83c56873f007f61e405f40f2a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjZDZmNWRjNjczNDk3YjgzYzU2ODczZjAwN2Y2MWU0MDVmNDBmMmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-24T17:07:20Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-24T17:07:20Z"},"message":"[SYNCOPE-671] Merge from 1_2_X","tree":{"sha":"0c584259e66970664b16e54057345bf112bfdc6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0c584259e66970664b16e54057345bf112bfdc6e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4cd6f5dc673497b83c56873f007f61e405f40f2a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cd6f5dc673497b83c56873f007f61e405f40f2a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4cd6f5dc673497b83c56873f007f61e405f40f2a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cd6f5dc673497b83c56873f007f61e405f40f2a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"22a9e12e5e001de4926deb9052ba28bd98a85d62","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22a9e12e5e001de4926deb9052ba28bd98a85d62","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/22a9e12e5e001de4926deb9052ba28bd98a85d62"},{"sha":"4c90ea872d43831e4ee593cb7b39306232b477cf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c90ea872d43831e4ee593cb7b39306232b477cf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c90ea872d43831e4ee593cb7b39306232b477cf"}],"stats":{"total":37,"additions":35,"deletions":2},"files":[{"sha":"2f959b5e3e5f9fbf4934f945a22647903a04504d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cd6f5dc673497b83c56873f007f61e405f40f2a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cd6f5dc673497b83c56873f007f61e405f40f2a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=4cd6f5dc673497b83c56873f007f61e405f40f2a","patch":"@@ -349,7 +349,14 @@ public void requestPasswordReset(final Long id) {\n     public void confirmPasswordReset(final User user, final String token, final String password) {\n         uwfAdapter.confirmPasswordReset(user.getKey(), token, password);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(user, null, null);\n+        UserMod userMod = new UserMod();\n+        userMod.setKey(user.getKey());\n+        userMod.setPassword(password);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n+                new WorkflowResult<Pair<UserMod, Boolean>>(\n+                        new ImmutablePair<UserMod, Boolean>(userMod, null), null, \"confirmPasswordReset\"),\n+                true, null);\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {"},{"sha":"f0c6851a38abbd54a6dd6ab2be2f4ea7a258cd85","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserConfirmPwdResetProcessor.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cd6f5dc673497b83c56873f007f61e405f40f2a/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cd6f5dc673497b83c56873f007f61e405f40f2a/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java?ref=4cd6f5dc673497b83c56873f007f61e405f40f2a","patch":"@@ -21,9 +21,13 @@\n import java.util.List;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n@@ -48,7 +52,14 @@ public class UserConfirmPwdResetProcessor implements Processor {\n     public void process(final Exchange exchange) {\n         User user = exchange.getProperty(\"user\", User.class);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(user, null, null);\n+        UserMod userMod = new UserMod();\n+        userMod.setKey(user.getKey());\n+        userMod.setPassword(exchange.getProperty(\"password\", String.class));\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n+                new WorkflowResult<Pair<UserMod, Boolean>>(\n+                        new ImmutablePair<UserMod, Boolean>(userMod, null), null, \"confirmPasswordReset\"),\n+                true, null);\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {"},{"sha":"14e2f9f87da513de7a565472edec6d9f7996c052","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserSelfITCase.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cd6f5dc673497b83c56873f007f61e405f40f2a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cd6f5dc673497b83c56873f007f61e405f40f2a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java?ref=4cd6f5dc673497b83c56873f007f61e405f40f2a","patch":"@@ -20,6 +20,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n@@ -54,6 +55,7 @@\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class UserSelfITCase extends AbstractITCase {\n@@ -264,8 +266,15 @@ public void passwordReset() {\n         UserTO user = UserITCase.getUniqueSampleTO(\"pwdReset@syncope.apache.org\");\n         user.setSecurityQuestion(1L);\n         user.setSecurityAnswer(\"Rossi\");\n+        user.getResources().add(RESOURCE_NAME_TESTDB);\n         createUser(user);\n \n+        // verify propagation (including password) on external db\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String pwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n+                user.getUsername());\n+        assertTrue(StringUtils.isNotBlank(pwdOnResource));\n+\n         // 2. verify that new user is able to authenticate\n         SyncopeClient authClient = clientFactory.create(user.getUsername(), \"password123\");\n         UserTO read = authClient.self().getValue();\n@@ -300,6 +309,12 @@ public void passwordReset() {\n         read = authClient.self().getValue();\n         assertNotNull(read);\n         assertNull(read.getToken());\n+\n+        // 7. verify that password was changed on external resource\n+        String newPwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n+                user.getUsername());\n+        assertTrue(StringUtils.isNotBlank(newPwdOnResource));\n+        assertNotEquals(pwdOnResource, newPwdOnResource);\n     }\n \n     @Test"}]}