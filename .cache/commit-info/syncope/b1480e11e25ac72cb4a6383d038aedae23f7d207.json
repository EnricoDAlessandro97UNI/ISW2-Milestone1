{"sha":"b1480e11e25ac72cb4a6383d038aedae23f7d207","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxNDgwZTExZTI1YWM3MmNiNGE2MzgzZDAzOGFlZGFlMjNmN2QyMDc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-12T15:24:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-12T15:24:33Z"},"message":"Some work related to issue #6 (Entitlement) + recursive deletion of roles + some correction on license's header: watch, zio Fabio...\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246085 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5e2ed3f20e20714dfcbe4359edacbc23477e4ef4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5e2ed3f20e20714dfcbe4359edacbc23477e4ef4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b1480e11e25ac72cb4a6383d038aedae23f7d207","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1480e11e25ac72cb4a6383d038aedae23f7d207","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b1480e11e25ac72cb4a6383d038aedae23f7d207","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1480e11e25ac72cb4a6383d038aedae23f7d207/comments","author":null,"committer":null,"parents":[{"sha":"05a465935cffdec9fee9fcff0d5df5f8a1c848f2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05a465935cffdec9fee9fcff0d5df5f8a1c848f2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05a465935cffdec9fee9fcff0d5df5f8a1c848f2"}],"stats":{"total":183,"additions":116,"deletions":67},"files":[{"sha":"abd08e8cbc3c93c06d69e04666156c3a285bcde6","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 fabio.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at"},{"sha":"be360e6e8549c1cfde9fc54b3d024c5c0c7f9744","filename":"core/src/main/java/org/syncope/core/persistence/beans/Entitlement.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -17,9 +17,9 @@\n package org.syncope.core.persistence.beans;\n \n import java.util.Set;\n-import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.ManyToMany;\n \n@@ -30,7 +30,7 @@ public class Entitlement extends AbstractBaseBean {\n     private String name;\n     @Column(nullable = true)\n     private String description;\n-    @ManyToMany(cascade = CascadeType.ALL)\n+    @ManyToMany(fetch=FetchType.EAGER, mappedBy=\"entitlements\")\n     private Set<SyncopeRole> roles;\n \n     public String getDescription() {"},{"sha":"9c6dc0fe5239b62f2a1e4ee4af1826dd626b4141","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeRole.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -32,8 +32,7 @@ public class SyncopeRole extends AbstractAttributableBean {\n     @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER,\n     mappedBy = \"roles\")\n     private Set<SyncopeUser> users;\n-    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER,\n-    mappedBy = \"roles\")\n+    @ManyToMany(fetch = FetchType.LAZY)\n     private Set<Entitlement> entitlements;\n \n     public SyncopeRole() {\n@@ -49,6 +48,14 @@ public void setSyncopeRolePK(SyncopeRolePK syncopeRolePK) {\n         this.syncopeRolePK = syncopeRolePK;\n     }\n \n+    public boolean addEntitlement(Entitlement entitlement) {\n+        return entitlements.add(entitlement);\n+    }\n+\n+    public boolean removeEntitlement(Entitlement entitlement) {\n+        return entitlements.remove(entitlement);\n+    }\n+\n     public Set<Entitlement> getEntitlements() {\n         return entitlements;\n     }"},{"sha":"d461e1777b3d301d0e3db17d99bb6a87df9a66dd","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeUser.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -15,8 +15,6 @@\n package org.syncope.core.persistence.beans;\n \n import java.util.HashSet;\n-import java.util.Iterator;\n-import java.util.NoSuchElementException;\n import java.util.Set;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;"},{"sha":"3e93a2e28935c288c2078fcfcab41b68b1fe83ce","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnectorInstanceDAO.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorInstanceDAO.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 fabio.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n@@ -16,16 +14,15 @@\n  */\n package org.syncope.core.persistence.dao;\n \n+import java.util.List;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n \n-/**\n- *\n- * @author fabio\n- */\n public interface ConnectorInstanceDAO extends DAO {\n \n     ConnectorInstance find(Long id);\n \n+    List<ConnectorInstance> findAll();\n+\n     ConnectorInstance save(ConnectorInstance connector);\n \n     void delete(Long id);"},{"sha":"18613097f9be9e5486411898c9bb0c810d077e53","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -38,9 +38,8 @@ public class AttributeDAOImpl extends AbstractDAOImpl\n     @Override\n     public Attribute find(long id) {\n         Attribute result = entityManager.find(Attribute.class, id);\n-        if (isDeletedOrNotManaged(result)) {\n+        if (isDeletedOrNotManaged(result))\n             result = null;\n-        }\n \n         return result;\n     }\n@@ -68,22 +67,22 @@ public void delete(long id) {\n             return;\n         }\n \n-        Query userQuery = entityManager.createQuery(\n+        Query query = entityManager.createQuery(\n                 \"SELECT u FROM SyncopeUser u WHERE \"\n                 + \":attribute MEMBER OF u.attributes\");\n-        userQuery.setParameter(\"attribute\", attribute);\n-        List<SyncopeUser> users = userQuery.getResultList();\n+        query.setParameter(\"attribute\", attribute);\n+        List<SyncopeUser> users = query.getResultList();\n         for (SyncopeUser user : users) {\n             user.removeAttribute(attribute);\n             syncopeUserDAO.save(user);\n         }\n \n         if (!isDeletedOrNotManaged(attribute)) {\n-            Query roleQuery = entityManager.createQuery(\n+            query = entityManager.createQuery(\n                     \"SELECT r FROM SyncopeRole r WHERE \"\n                     + \":attribute MEMBER OF r.attributes\");\n-            roleQuery.setParameter(\"attribute\", attribute);\n-            List<SyncopeRole> roles = roleQuery.getResultList();\n+            query.setParameter(\"attribute\", attribute);\n+            List<SyncopeRole> roles = query.getResultList();\n             for (SyncopeRole role : roles) {\n                 role.removeAttribute(attribute);\n                 syncopeRoleDAO.save(role);"},{"sha":"67d40d98ff26911a503f70374683d8585e4ea7ec","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnectorInstanceDAOImpl.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 fabio.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n@@ -16,14 +14,12 @@\n  */\n package org.syncope.core.persistence.dao.impl;\n \n+import java.util.List;\n+import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n \n-/**\n- *\n- * @author fabio\n- */\n @Repository\n public class ConnectorInstanceDAOImpl extends AbstractDAOImpl\n         implements ConnectorInstanceDAO {\n@@ -33,6 +29,13 @@ public ConnectorInstance find(Long id) {\n         return entityManager.find(ConnectorInstance.class, id);\n     }\n \n+    @Override\n+    public List<ConnectorInstance> findAll() {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM ConnectorInstance e\");\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public ConnectorInstance save(ConnectorInstance connector) {\n         ConnectorInstance result = entityManager.merge(connector);"},{"sha":"b26dc2c3fb7cbd508afb83da961144204deffb74","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -18,16 +18,26 @@\n \n import java.util.List;\n import javax.persistence.Query;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.beans.SyncopeRole;\n import org.syncope.core.persistence.dao.EntitlementDAO;\n+import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n \n @Repository\n public class EntitlementDAOImpl extends AbstractDAOImpl implements EntitlementDAO {\n \n+    @Autowired\n+    SyncopeRoleDAO syncopeRoleDAO;\n+\n     @Override\n     public Entitlement find(String name) {\n-        return entityManager.find(Entitlement.class, name);\n+        Entitlement result = entityManager.find(Entitlement.class, name);\n+        if (isDeletedOrNotManaged(result))\n+            result = null;\n+\n+        return result;\n     }\n \n     @Override\n@@ -46,6 +56,20 @@ public Entitlement save(Entitlement entitlement) {\n \n     @Override\n     public void delete(String name) {\n+        Entitlement entitlement = find(name);\n+        if (entitlement == null)\n+            return;\n+\n+        Query query = entityManager.createQuery(\n+                \"SELECT r FROM SyncopeRole r WHERE \"\n+                + \":entitlement MEMBER OF r.entitlements\");\n+        query.setParameter(\"entitlement\", entitlement);\n+        List<SyncopeRole> roles = query.getResultList();\n+        for (SyncopeRole role : roles) {\n+            role.removeEntitlement(entitlement);\n+            syncopeRoleDAO.save(role);\n+        }\n+\n         entityManager.remove(find(name));\n     }\n }"},{"sha":"4640373b2c9e3657fe954b80d9a89511151cae7c","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeRoleDAOImpl.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -58,6 +58,17 @@ public void delete(String name, String parent) {\n     @Override\n     @Transactional\n     public void delete(SyncopeRolePK syncopeRolePK) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT r FROM SyncopeRole r WHERE \"\n+                + \"parent=:role\");\n+        query.setParameter(\"role\", syncopeRolePK.getName());\n+        List<SyncopeRole> childrenRoles = query.getResultList();\n+\n+        if (!childrenRoles.isEmpty())\n+            for (SyncopeRole child : childrenRoles)\n+                delete(child.getSyncopeRolePK().getName(),\n+                       syncopeRolePK.getName());\n+\n         entityManager.remove(find(syncopeRolePK));\n     }\n }"},{"sha":"9790cd64d2d9ce07f47776994a964011a3122c9a","filename":"core/src/test/java/org/syncope/core/persistence/test/ConnectorInstanceDAOTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FConnectorInstanceDAOTest.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 fabio.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at"},{"sha":"6a9372b62a4724a8cd8f2fd08ae35da7ae5a6bee","filename":"core/src/test/java/org/syncope/core/persistence/test/EntitlementDAOTest.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -17,31 +17,35 @@\n import static org.junit.Assert.*;\n \n import java.util.List;\n+import java.util.Set;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.beans.SyncopeRole;\n import org.syncope.core.persistence.dao.EntitlementDAO;\n+import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n \n @Transactional\n public class EntitlementDAOTest extends AbstractDAOTest {\n \n     @Autowired\n     EntitlementDAO entitlementDAO;\n+    @Autowired\n+    SyncopeRoleDAO syncopeRoleDAO;\n \n     @Test\n     public final void testFindAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         assertEquals(\"did not get expected number of entitlements \",\n-                2, list.size());\n+                     2, list.size());\n     }\n \n     @Test\n     public final void testFindByName() {\n         Entitlement entitlement = entitlementDAO.find(\"base\");\n         assertNotNull(\"did not find expected entitlement\",\n-                entitlement);\n-        assertFalse(\"expected some role\", entitlement.getRoles().isEmpty());\n+                      entitlement);\n     }\n \n     @Test\n@@ -63,4 +67,18 @@ public final void testDelete() {\n         Entitlement actual = entitlementDAO.find(\"advanced\");\n         assertNull(\"delete did not work\", actual);\n     }\n+\n+    @Test\n+    public final void testRelationships() {\n+        Entitlement entitlement = entitlementDAO.find(\"base\");\n+        assertNotNull(\"did not find expected entitlement\",\n+                      entitlement);\n+\n+        Set<SyncopeRole> roles = entitlement.getRoles();\n+        assertEquals(\"expected two roles\", 2, roles.size());\n+\n+        entitlementDAO.delete(\"base\");\n+        for (SyncopeRole role : roles)\n+            assertFalse(role.getEntitlements().contains(entitlement));\n+    }\n }"},{"sha":"71febf81a8ed1c0d3edf06d495b8e8b05aec06d0","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeRoleDAOTest.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -22,7 +22,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeRole;\n-import org.syncope.core.persistence.beans.AttributeSchema;\n import org.syncope.core.persistence.beans.Attribute;\n import org.syncope.core.persistence.beans.SyncopeRolePK;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n@@ -42,7 +41,7 @@ public class SyncopeRoleDAOTest extends AbstractDAOTest {\n     @Test\n     public final void testFindAll() {\n         List<SyncopeRole> list = syncopeRoleDAO.findAll();\n-        assertEquals(\"did not get expected number of roles \", 2, list.size());\n+        assertEquals(\"did not get expected number of roles \", 7, list.size());\n     }\n \n     @Test\n@@ -67,12 +66,16 @@ public final void testSave() {\n \n     @Test\n     public final void testDelete() {\n-        SyncopeRole role = syncopeRoleDAO.find(\"child\", \"root\");\n-\n+        SyncopeRole role = syncopeRoleDAO.find(\"employee\", \"citizen\");\n         syncopeRoleDAO.delete(role.getSyncopeRolePK());\n \n-        SyncopeRole actual = syncopeRoleDAO.find(\"child\", \"root\");\n+        SyncopeRole actual = syncopeRoleDAO.find(\"employee\", \"citizen\");\n         assertNull(\"delete did not work\", actual);\n+\n+        SyncopeRole children = syncopeRoleDAO.find(\"managingDirector\",\n+                                                   \"director\");\n+        assertNull(\"delete of successors did not work\", children);\n+\n     }\n \n     @Test\n@@ -87,7 +90,7 @@ public final void testRelationships() {\n         attributeDAO.delete(attribute.getId());\n         assertNull(attributeDAO.find(attribute.getId()));\n         assertEquals(\"unexpected number of attributes\",\n-                originalAttributesSize - 1, role.getAttributes().size());\n+                     originalAttributesSize - 1, role.getAttributes().size());\n \n         // Remove an attribute association with a user: we expect not to\n         // have it on the db table as well"},{"sha":"87f6202e4b7334428c46cc7b3ab529ddce9b886e","filename":"core/src/test/java/org/syncope/core/persistence/test/util/WebServiceConfiguration.java","status":"modified","additions":12,"deletions":24,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2Futil%2FWebServiceConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2Futil%2FWebServiceConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2Futil%2FWebServiceConfiguration.java?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -1,24 +1,16 @@\n /*\n- * ====================\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n- * \n- * Copyright 2008-2009 Sun Microsystems, Inc. All rights reserved.     \n- * \n- * The contents of this file are subject to the terms of the Common Development \n- * and Distribution License(\"CDDL\") (the \"License\").  You may not use this file \n- * except in compliance with the License.\n- * \n- * You can obtain a copy of the License at \n- * http://IdentityConnectors.dev.java.net/legal/license.txt\n- * See the License for the specific language governing permissions and limitations \n- * under the License. \n- * \n- * When distributing the Covered Code, include this CDDL Header Notice in each file\n- * and include the License file at identityconnectors/legal/license.txt.\n- * If applicable, add the following below this CDDL Header, with the fields \n- * enclosed by brackets [] replaced by your own identifying information: \n- * \"Portions Copyrighted [year] [name of copyright owner]\"\n- * ====================\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n  */\n package org.syncope.core.persistence.test.util;\n \n@@ -33,10 +25,6 @@\n /**\n  * Extends the {@link AbstractConfiguration} class to provide all the necessary\n  * parameters to initialize the WebService Connector.\n- *\n- * @author fabio\n- * @version 1.0\n- * @since 1.0\n  */\n public class WebServiceConfiguration extends AbstractConfiguration {\n "},{"sha":"fc088f7318bf471c76c752df2d025ee02a4a82dd","filename":"core/src/test/resources/dbunitTestData.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1480e11e25ac72cb4a6383d038aedae23f7d207/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml?ref=b1480e11e25ac72cb4a6383d038aedae23f7d207","patch":"@@ -6,6 +6,11 @@\n \n     <SyncopeRole name=\"root\" parent=\"/\"/>\n     <SyncopeRole name=\"child\" parent=\"root\"/>\n+    <SyncopeRole name=\"citizen\" parent=\"/\"/>\n+    <SyncopeRole name=\"employee\" parent=\"citizen\"/>\n+    <SyncopeRole name=\"secretary\" parent=\"employee\"/>\n+    <SyncopeRole name=\"director\" parent=\"employee\"/>\n+    <SyncopeRole name=\"managingDirector\" parent=\"director\"/>\n \n     <SyncopeUser_SyncopeRole users_id=\"1\"\n                              roles_name=\"root\" roles_parent=\"/\"/>\n@@ -118,11 +123,11 @@\n     <Entitlement name=\"base\" description=\"NULL\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>\n \n-    <Entitlement_SyncopeRole entitlements_name=\"base\"\n+    <SyncopeRole_Entitlement entitlements_name=\"base\"\n                              roles_name=\"root\" roles_parent=\"/\"/>\n-    <Entitlement_SyncopeRole entitlements_name=\"advanced\"\n+    <SyncopeRole_Entitlement entitlements_name=\"advanced\"\n                              roles_name=\"root\" roles_parent=\"/\"/>\n-    <Entitlement_SyncopeRole entitlements_name=\"base\"\n+    <SyncopeRole_Entitlement entitlements_name=\"base\"\n                              roles_name=\"child\" roles_parent=\"root\"/>\n \n </dataset>"}]}