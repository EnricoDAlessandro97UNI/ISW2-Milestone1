{"sha":"2c04c8ee0693b5869286a3e65afefde16488262d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjMDRjOGVlMDY5M2I1ODY5Mjg2YTNlNjVhZmVmZGUxNjQ4ODI2MmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-01T12:53:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-12-01T12:53:24Z"},"message":"More rationale usage of EntitlementUtil","tree":{"sha":"2dd364415995c60797f40e37c3347f392dade374","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2dd364415995c60797f40e37c3347f392dade374"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2c04c8ee0693b5869286a3e65afefde16488262d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c04c8ee0693b5869286a3e65afefde16488262d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2c04c8ee0693b5869286a3e65afefde16488262d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c04c8ee0693b5869286a3e65afefde16488262d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"96c857d4ea25bd5818840f4163b392c48c3db4a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96c857d4ea25bd5818840f4163b392c48c3db4a0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96c857d4ea25bd5818840f4163b392c48c3db4a0"}],"stats":{"total":61,"additions":28,"deletions":33},"files":[{"sha":"22001e548aa1b5fac7c979be758d9245e1ded2d5","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -57,7 +57,6 @@\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.transaction.interceptor.TransactionInterceptor;\n@@ -128,7 +127,7 @@ public RoleTO readSelf(final Long roleId) {\n         }\n \n         Set<Long> ownedRoleIds;\n-        SyncopeUser authUser = userDAO.find(SecurityContextHolder.getContext().getAuthentication().getName());\n+        SyncopeUser authUser = userDAO.find(EntitlementUtil.getAuthenticatedUsername());\n         if (authUser == null) {\n             ownedRoleIds = Collections.<Long>emptySet();\n         } else {"},{"sha":"933d6a547d834b5e87ba6e604a8c6dbadf145418","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserWorkflowController.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -57,7 +56,7 @@ public class UserWorkflowController extends AbstractTransactionalController<Work\n     @PreAuthorize(\"hasRole('WORKFLOW_FORM_CLAIM')\")\n     @Transactional(rollbackFor = { Throwable.class })\n     public WorkflowFormTO claimForm(final String taskId) {\n-        return uwfAdapter.claimForm(taskId, SecurityContextHolder.getContext().getAuthentication().getName());\n+        return uwfAdapter.claimForm(taskId);\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -100,8 +99,7 @@ public List<WorkflowFormTO> getForms(final Long userId, final String formName) {\n     @PreAuthorize(\"hasRole('WORKFLOW_FORM_SUBMIT')\")\n     @Transactional(rollbackFor = { Throwable.class })\n     public UserTO submitForm(final WorkflowFormTO form) {\n-        WorkflowResult<? extends AbstractAttributableMod> updated =\n-                uwfAdapter.submitForm(form, SecurityContextHolder.getContext().getAuthentication().getName());\n+        WorkflowResult<? extends AbstractAttributableMod> updated = uwfAdapter.submitForm(form);\n \n         // propByRes can be made empty by the workflow definition if no propagation should occur \n         // (for example, with rejected users)"},{"sha":"a37aacbef3dcc55be8614e0e5dcacf28e203b256","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -58,7 +58,6 @@\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.Encryptor;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -154,7 +153,7 @@ public Set<String> getResourceNamesForUserId(final Long userId) {\n     public UserTO getAuthenticatedUserTO() {\n         final UserTO authUserTO;\n \n-        final String authUsername = SecurityContextHolder.getContext().getAuthentication().getName();\n+        final String authUsername = EntitlementUtil.getAuthenticatedUsername();\n         if (anonymousUser.equals(authUsername)) {\n             authUserTO = new UserTO();\n             authUserTO.setId(-2);"},{"sha":"b5cf7d1ccca69104ec28097701a18f0f148c33c0","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowAdapter.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -91,22 +91,20 @@ public interface WorkflowAdapter {\n      * Claim a form for a given user.\n      *\n      * @param taskId Workflow task to which the form is associated\n-     * @param username claiming username\n      * @return updated form\n      * @throws NotFoundException not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowFormTO claimForm(String taskId, String username) throws NotFoundException, WorkflowException;\n+    WorkflowFormTO claimForm(String taskId) throws NotFoundException, WorkflowException;\n \n     /**\n      * Submit a form.\n      *\n      * @param form to be submitted\n-     * @param username submitting username\n      * @return user updated by this form submit\n      * @throws NotFoundException not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<? extends AbstractAttributableMod> submitForm(WorkflowFormTO form, String username)\n+    WorkflowResult<? extends AbstractAttributableMod> submitForm(WorkflowFormTO form)\n             throws NotFoundException, WorkflowException;\n }"},{"sha":"fa648ba9dcb530bf463e1609a2392bbe84763a65","filename":"core/src/main/java/org/apache/syncope/core/workflow/role/NoOpRoleWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -117,14 +117,14 @@ public WorkflowFormTO getForm(final String workflowId)\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId, final String username)\n+    public WorkflowFormTO claimForm(final String taskId)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<RoleMod> submitForm(final WorkflowFormTO form, final String username)\n+    public WorkflowResult<RoleMod> submitForm(final WorkflowFormTO form)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));"},{"sha":"1ffc4c71c91e1539ae8c1a2308db0ef3d2d9c8e2","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -216,14 +216,14 @@ public WorkflowFormTO getForm(final String workflowId)\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId, final String username)\n+    public WorkflowFormTO claimForm(final String taskId)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form, final String username)\n+    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));"},{"sha":"f6cc3222df2bd9d50086b8986def7192d58a69b0","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":18,"deletions":17,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c04c8ee0693b5869286a3e65afefde16488262d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=2c04c8ee0693b5869286a3e65afefde16488262d","patch":"@@ -687,7 +687,7 @@ private WorkflowFormTO getFormTO(\n     public List<WorkflowFormTO> getForms() {\n         List<WorkflowFormTO> forms = new ArrayList<WorkflowFormTO>();\n \n-        String authUser = EntitlementUtil.getAuthenticatedUsername();\n+        final String authUser = EntitlementUtil.getAuthenticatedUsername();\n         if (adminUser.equals(authUser)) {\n             forms.addAll(getForms(taskService.createTaskQuery().\n                     taskVariableValueEquals(TASK_IS_FORM, Boolean.TRUE)));\n@@ -775,7 +775,7 @@ public WorkflowFormTO getForm(final String workflowId)\n         return result;\n     }\n \n-    private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final String username) {\n+    private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final String authUser) {\n         Task task;\n         try {\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();\n@@ -790,10 +790,10 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final Strin\n             throw new NotFoundException(\"Form for Activiti Task \" + taskId, e);\n         }\n \n-        if (!adminUser.equals(username)) {\n-            SyncopeUser user = userDAO.find(username);\n+        if (!adminUser.equals(authUser)) {\n+            SyncopeUser user = userDAO.find(authUser);\n             if (user == null) {\n-                throw new NotFoundException(\"Syncope User \" + username);\n+                throw new NotFoundException(\"Syncope User \" + authUser);\n             }\n         }\n \n@@ -802,22 +802,23 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final Strin\n \n     @Transactional\n     @Override\n-    public WorkflowFormTO claimForm(final String taskId, final String username)\n+    public WorkflowFormTO claimForm(final String taskId)\n             throws WorkflowException {\n \n-        Map.Entry<Task, TaskFormData> checked = checkTask(taskId, username);\n+        final String authUser = EntitlementUtil.getAuthenticatedUsername();\n+        Map.Entry<Task, TaskFormData> checked = checkTask(taskId, authUser);\n \n-        if (!adminUser.equals(username)) {\n-            List<Task> tasksForUser = taskService.createTaskQuery().taskId(taskId).taskCandidateUser(username).list();\n+        if (!adminUser.equals(authUser)) {\n+            List<Task> tasksForUser = taskService.createTaskQuery().taskId(taskId).taskCandidateUser(authUser).list();\n             if (tasksForUser.isEmpty()) {\n                 throw new WorkflowException(\n-                        new IllegalArgumentException(username + \" is not candidate for task \" + taskId));\n+                        new IllegalArgumentException(authUser + \" is not candidate for task \" + taskId));\n             }\n         }\n \n         Task task;\n         try {\n-            taskService.setOwner(taskId, username);\n+            taskService.setOwner(taskId, authUser);\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();\n         } catch (ActivitiException e) {\n             throw new WorkflowException(\"While reading task \" + taskId, e);\n@@ -828,14 +829,15 @@ public WorkflowFormTO claimForm(final String taskId, final String username)\n \n     @Transactional\n     @Override\n-    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form, final String username)\n+    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n             throws WorkflowException {\n \n-        Map.Entry<Task, TaskFormData> checked = checkTask(form.getTaskId(), username);\n+        final String authUser = EntitlementUtil.getAuthenticatedUsername();\n+        Map.Entry<Task, TaskFormData> checked = checkTask(form.getTaskId(), authUser);\n \n-        if (!checked.getKey().getOwner().equals(username)) {\n+        if (!checked.getKey().getOwner().equals(authUser)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Task \" + form.getTaskId() + \" assigned to \"\n-                    + checked.getKey().getOwner() + \" but submitted by \" + username));\n+                    + checked.getKey().getOwner() + \" but submitted by \" + authUser));\n         }\n \n         SyncopeUser user = userDAO.findByWorkflowId(checked.getKey().getProcessInstanceId());\n@@ -846,8 +848,7 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form, final Strin\n         Set<String> preTasks = getPerformedTasks(user);\n         try {\n             formService.submitTaskFormData(form.getTaskId(), form.getPropertiesForSubmit());\n-            runtimeService.setVariable(\n-                    user.getWorkflowId(), FORM_SUBMITTER, EntitlementUtil.getAuthenticatedUsername());\n+            runtimeService.setVariable(user.getWorkflowId(), FORM_SUBMITTER, authUser);\n         } catch (ActivitiException e) {\n             throwException(e, \"While submitting form for task \" + form.getTaskId());\n         }"}]}