{"sha":"e55959c62ac89e395c4c47ff2f24358438a4f15b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1NTk1OWM2MmFjODllMzk1YzRjNDdmZjJmMjQzNTg0MzhhNGYxNWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-30T10:27:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-30T10:27:08Z"},"message":"[SYNCOPE-71] Added OpenJPA conf params for foreign-key constraints generation: had to review some details about DAO impl as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332146 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7913e13409e8217956e925cc039ce8b77d8069bf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7913e13409e8217956e925cc039ce8b77d8069bf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e55959c62ac89e395c4c47ff2f24358438a4f15b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e55959c62ac89e395c4c47ff2f24358438a4f15b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e55959c62ac89e395c4c47ff2f24358438a4f15b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e55959c62ac89e395c4c47ff2f24358438a4f15b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d22599e4bb2f2ab8e372b9f43280bb2a94459fa8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d22599e4bb2f2ab8e372b9f43280bb2a94459fa8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d22599e4bb2f2ab8e372b9f43280bb2a94459fa8"}],"stats":{"total":87,"additions":51,"deletions":36},"files":[{"sha":"623f92006a3d2db7f4f9b2598e2cc4e0ca17eb46","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=e55959c62ac89e395c4c47ff2f24358438a4f15b","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.dao;\n \n import java.util.List;\n-import java.util.Set;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n@@ -38,9 +37,11 @@ public interface RoleDAO extends DAO {\n \n     List<SyncopeRole> findByResource(ExternalResource resource);\n \n+    List<SyncopeRole> findAncestors(SyncopeRole role);\n+\n     List<SyncopeRole> findChildren(Long roleId);\n \n-    Set<SyncopeRole> findAncestors(SyncopeRole role);\n+    List<SyncopeRole> findDescendants(SyncopeRole role);\n \n     List<SyncopeRole> findAll();\n "},{"sha":"7920588751cba6ce9878c05338552f9f30c2febd","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/MembershipDAOImpl.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java?ref=e55959c62ac89e395c4c47ff2f24358438a4f15b","patch":"@@ -35,6 +35,7 @@ public class MembershipDAOImpl extends AbstractDAOImpl implements MembershipDAO\n \n     @Autowired\n     private UserDAO userDAO;\n+\n     @Autowired\n     private RoleDAO roleDAO;\n \n@@ -83,10 +84,6 @@ public void delete(final Long id) {\n \n         membership.getSyncopeUser().removeMembership(membership);\n         userDAO.save(membership.getSyncopeUser());\n-        membership.setSyncopeUser(null);\n-\n-        roleDAO.save(membership.getSyncopeRole());\n-        membership.setSyncopeRole(null);\n \n         entityManager.remove(membership);\n     }"},{"sha":"26fd40f430a8115f405bc47d63a7cfcf55f77b57","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":42,"deletions":28,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=e55959c62ac89e395c4c47ff2f24358438a4f15b","patch":"@@ -18,25 +18,28 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import java.util.HashSet;\n+import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Repository;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Repository;\n \n @Repository\n public class RoleDAOImpl extends AbstractDAOImpl implements RoleDAO {\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n@@ -100,24 +103,41 @@ public List<SyncopeRole> findByResource(final ExternalResource resource) {\n         return query.getResultList();\n     }\n \n+    private void findAncestors(final List<SyncopeRole> result, final SyncopeRole role) {\n+        if (role.getParent() != null && !result.contains(role.getParent())) {\n+            result.add(role.getParent());\n+            findAncestors(result, role.getParent());\n+        }\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findAncestors(final SyncopeRole role) {\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n+        findAncestors(result, role);\n+        return result;\n+    }\n+\n     @Override\n     public List<SyncopeRole> findChildren(final Long roleId) {\n         Query query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \" + \"r.parent.id=:roleId\");\n         query.setParameter(\"roleId\", roleId);\n         return query.getResultList();\n     }\n \n-    private void findAncestors(final Set<SyncopeRole> result, final SyncopeRole role) {\n-        if (role.getParent() != null && !result.contains(role.getParent())) {\n-            result.add(role.getParent());\n-            findAncestors(result, role.getParent());\n+    private void findDescendants(final List<SyncopeRole> result, final SyncopeRole role) {\n+        List<SyncopeRole> children = findChildren(role.getId());\n+        if (children != null) {\n+            for (SyncopeRole child : children) {\n+                findDescendants(result, child);\n+            }\n         }\n+        result.add(role);\n     }\n \n     @Override\n-    public Set<SyncopeRole> findAncestors(final SyncopeRole role) {\n-        Set<SyncopeRole> result = new HashSet<SyncopeRole>();\n-        findAncestors(result, role);\n+    public List<SyncopeRole> findDescendants(final SyncopeRole role) {\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n+        findDescendants(result, role);\n         return result;\n     }\n \n@@ -161,26 +181,20 @@ public void delete(final Long id) {\n             return;\n         }\n \n-        Query query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE r.parent.id=:id\");\n-        query.setParameter(\"id\", id);\n-        List<SyncopeRole> childrenRoles = query.getResultList();\n-        for (SyncopeRole child : childrenRoles) {\n-            delete(child.getId());\n-        }\n-\n-        for (Membership membership : findMemberships(role)) {\n-            membership.setSyncopeRole(null);\n-            membership.getSyncopeUser().removeMembership(membership);\n-            membership.setSyncopeUser(null);\n+        for (SyncopeRole roleToBeDeleted : findDescendants(role)) {\n+            for (Membership membership : findMemberships(roleToBeDeleted)) {\n+                membership.getSyncopeUser().removeMembership(membership);\n+                userDAO.save(membership.getSyncopeUser());\n \n-            entityManager.remove(membership);\n-        }\n+                entityManager.remove(membership);\n+            }\n \n-        role.getEntitlements().clear();\n+            roleToBeDeleted.getEntitlements().clear();\n \n-        role.setParent(null);\n-        entityManager.remove(role);\n+            roleToBeDeleted.setParent(null);\n+            entityManager.remove(roleToBeDeleted);\n \n-        entitlementDAO.delete(EntitlementUtil.getEntitlementNameFromRoleId(id));\n+            entitlementDAO.delete(EntitlementUtil.getEntitlementNameFromRoleId(roleToBeDeleted.getId()));\n+        }\n     }\n }"},{"sha":"d65bc7c944f138ba2d010ad1bc8b7329aac1caee","filename":"core/src/main/resources/persistenceContextEMFactory.xml","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e55959c62ac89e395c4c47ff2f24358438a4f15b/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml?ref=e55959c62ac89e395c4c47ff2f24358438a4f15b","patch":"@@ -24,7 +24,7 @@ under the License.\n        http://www.springframework.org/schema/beans/spring-beans.xsd\">\n \n   <bean id=\"entityManagerFactory\"\n-          class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n+        class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n     <property name=\"persistenceUnitName\" value=\"syncopePersistenceUnit\"/>\n     <property name=\"dataSource\" ref=\"dataSource\"/>\n     <property name=\"jpaVendorAdapter\">\n@@ -36,10 +36,13 @@ under the License.\n     </property>\n     <property name=\"jpaPropertyMap\">\n       <map>\n-                <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>-->\n+        <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>-->\n                 \n         <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n         <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n+\n+        <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>\n+        <entry key=\"openjpa.jdbc.MappingDefaults\" value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict\"/>\n                 \n         <entry key=\"openjpa.ReadLockLevel\" value=\"none\"/>\n         <entry key=\"openjpa.WriteLockLevel\" value=\"write\"/>"}]}