{"sha":"b1d81c0125dd2aa5f1108bec636c48654db9fc10","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxZDgxYzAxMjVkZDJhYTVmMTEwOGJlYzYzNmM0ODY1NGRiOWZjMTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-06T14:56:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-06T14:56:54Z"},"message":"Ensuring values are properly encoded for FIQL","tree":{"sha":"03ec4823a4f34707cc2737fe3abfdbabe59591c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/03ec4823a4f34707cc2737fe3abfdbabe59591c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b1d81c0125dd2aa5f1108bec636c48654db9fc10","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1d81c0125dd2aa5f1108bec636c48654db9fc10","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b1d81c0125dd2aa5f1108bec636c48654db9fc10","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1d81c0125dd2aa5f1108bec636c48654db9fc10/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"05a2b35861017fa094fb1f1411f708cc786a4fd4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05a2b35861017fa094fb1f1411f708cc786a4fd4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05a2b35861017fa094fb1f1411f708cc786a4fd4"}],"stats":{"total":22,"additions":19,"deletions":3},"files":[{"sha":"d9bdcb17ba4cbb32220430a8fe84770bdbc3cde2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":19,"deletions":3,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1d81c0125dd2aa5f1108bec636c48654db9fc10/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1d81c0125dd2aa5f1108bec636c48654db9fc10/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=b1d81c0125dd2aa5f1108bec636c48654db9fc10","patch":"@@ -26,6 +26,8 @@\n import java.util.function.Function;\n import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n+import org.apache.commons.collections4.BidiMap;\n+import org.apache.commons.collections4.bidimap.DualHashBidiMap;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n@@ -49,9 +51,20 @@ public final class SearchUtils implements Serializable {\n \n     private static final long serialVersionUID = 398381905376547084L;\n \n+    public static final Function<SearchClause, CompleteCondition> NO_CUSTOM_CONDITION = clause -> null;\n+\n     private static final Logger LOG = LoggerFactory.getLogger(SearchUtils.class);\n \n-    public static final Function<SearchClause, CompleteCondition> NO_CUSTOM_CONDITION = clause -> null;\n+    private static final BidiMap<String, String> ENCODINGS = new DualHashBidiMap<String, String>() {\n+\n+        private static final long serialVersionUID = 5636572627689425575L;\n+\n+        {\n+            put(\",\", \"%252C\");\n+            put(\";\", \"%253B\");\n+            put(\"+\", \"%252B\");\n+        }\n+    };\n \n     private static Pattern getTypeConditionPattern(final String type) {\n         return Pattern.compile(String.format(\";\\\\$type==%s|\\\\$type==%s;\", type, type));\n@@ -115,7 +128,9 @@ private static SearchClause getPrimitiveSearchClause(final SearchCondition<Searc\n \n         String property = sc.getCondition().getKeySet().iterator().next();\n         clause.setProperty(property);\n-        String value = sc.getCondition().get(property).replace(\"%252C\", \",\").replace(\"%253B\", \";\");\n+\n+        String value = ENCODINGS.values().stream().\n+                reduce(sc.getCondition().get(property), (s, v) -> s.replace(v, ENCODINGS.getKey(v)));\n         clause.setValue(value);\n \n         LOG.debug(\"Condition: \" + sc.getCondition());\n@@ -224,7 +239,8 @@ public static String buildFIQL(\n             if (clause.getType() != null) {\n                 String value = clause.getValue() == null\n                         ? null\n-                        : clause.getValue().replace(\",\", \"%252C\").replace(\";\", \"%253B\");\n+                        : ENCODINGS.keySet().stream().\n+                                reduce(clause.getValue(), (s, k) -> s.replace(k, ENCODINGS.get(k)));\n \n                 switch (clause.getType()) {\n                     case GROUP_MEMBER:"}]}