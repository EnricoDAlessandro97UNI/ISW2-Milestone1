{"sha":"e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwZjllYjBhMGY4YTYxYmQ4YzY0YWY5YWE5Zjg0NGM2MGExYzE2YmM=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-05-08T11:31:13Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-05-08T11:31:13Z"},"message":"SYNCOPE-82 #comment task bean in jpa context wasn't updated since a wrong persistence mechanism was performed into the PropagationManager\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1335424 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f21f02d33b27759c4fe29ff95f165e145a458b50","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f21f02d33b27759c4fe29ff95f165e145a458b50"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"35e1e2777c24ac767566ee620aec10d8a6bcbcf8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/35e1e2777c24ac767566ee620aec10d8a6bcbcf8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/35e1e2777c24ac767566ee620aec10d8a6bcbcf8"}],"stats":{"total":34,"additions":25,"deletions":9},"files":[{"sha":"6886ad7958c8abad85903db1ad3862aeea26b69c","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":19,"deletions":9,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","patch":"@@ -780,22 +780,32 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n             execution.setEndDate(new Date());\n \n             if (hasToBeregistered(task, execution)) {\n-                PropagationTask savedTask = taskDAO.save(task);\n-                execution.setTask(savedTask);\n-\n-                if (!propagationAttempted.isEmpty()) {\n-                    execution = taskExecDAO.save(execution);\n+                if (propagationAttempted.isEmpty()) {\n+                    LOG.debug(\"No propagation attemped for {}\", execution);\n+                } else {\n+                    execution.setTask(task);\n+                    task.addExec(execution);\n \n                     LOG.debug(\"Execution finished: {}\", execution);\n-                } else {\n-                    LOG.debug(\"No propagation attemped for {}\", execution);\n                 }\n+\n+                taskDAO.save(task);\n+\n+                // Flush call is needed to value the id field of execution (used by deal test of TaskTestITCase).\n+                taskDAO.flush();\n+                \n+                // An alternative to the flush call could be the following statement but we should accept the risk to  \n+                // have a not so probable trouble coming from concurrent calls.\n+                //final TaskExec latestExec = taskExecDAO.findLatestStarted(taskDAO.save(task));\n             }\n         }\n \n         if (handler != null) {\n-            handler.handle(task.getResource().getName(), PropagationTaskExecStatus.valueOf(execution.getStatus()),\n-                    before, after);\n+            handler.handle(\n+                    task.getResource().getName(),\n+                    PropagationTaskExecStatus.valueOf(execution.getStatus()),\n+                    before,\n+                    after);\n         }\n \n         return execution;"},{"sha":"0ad39fd916ab3224ee7eb225fae62ec80e2a190b","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e0f9eb0a0f8a61bd8c64af9aa9f844c60a1c16bc","patch":"@@ -1235,6 +1235,12 @@ public void verifyTaskRegistration() {\n         //             all update executions have to be registered\n         assertTrue(newMaxId > maxId);\n \n+        final PropagationTaskTO taskTO =\n+                restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", PropagationTaskTO.class, newMaxId);\n+\n+        assertNotNull(taskTO);\n+        assertEquals(1, taskTO.getExecutions().size());\n+\n         // --------------------------------------\n         // Delete operation\n         // --------------------------------------"}]}