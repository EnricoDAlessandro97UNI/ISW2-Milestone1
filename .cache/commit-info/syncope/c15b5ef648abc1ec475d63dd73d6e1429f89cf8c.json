{"sha":"c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMxNWI1ZWY2NDhhYmMxZWM0NzVkNjNkZDczZDZlMTQyOWY4OWNmOGM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-06T15:09:43Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-06T15:09:43Z"},"message":"provides support for connector instance attribute ordering\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247239 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"126f01ffce20f5cd099a3ea0c4a51b26521d500e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/126f01ffce20f5cd099a3ea0c4a51b26521d500e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/comments","author":null,"committer":null,"parents":[{"sha":"0b24e5c1a9de1db22183a8af447deb875a14ecb2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b24e5c1a9de1db22183a8af447deb875a14ecb2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b24e5c1a9de1db22183a8af447deb875a14ecb2"}],"stats":{"total":40,"additions":34,"deletions":6},"files":[{"sha":"68ff8288c51383b0ba3e6d07588dcb955b267292","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","patch":"@@ -18,6 +18,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n@@ -123,6 +124,11 @@ protected List<ConnConfProperty> load() {\n                             result = new ArrayList<ConnConfProperty>(\n                                     connectorTO.getConfiguration());\n                         }\n+\n+                        if (result != null && !result.isEmpty()) {\n+                            Collections.sort(result);\n+                        }\n+\n                         return result;\n                     }\n                 };\n@@ -314,7 +320,6 @@ protected void populateItem(\n                                 \"ui-widget-content ui-corner-all \"\n                                 + \"long_dynamicsize\");\n \n-                        overridable.addRequiredLabel();\n                         item.add(overridable);\n                         connectorTO.getConfiguration().add(property);\n                     }"},{"sha":"f6a5b2b2d8d099a946e609c5fab484accb9b68c3","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","patch":"@@ -15,6 +15,7 @@\n package org.syncope.console.rest;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ConnBundleTO;\n@@ -100,6 +101,9 @@ public List<String> getSchemaNames(final ResourceTO resourceTO) {\n             schemaNames = Arrays.asList(restTemplate.postForObject(\n                     baseURL + \"connector/schema/list\",\n                     resourceTO, String[].class));\n+\n+            // re-order schema names list\n+            Collections.sort(schemaNames);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting resource schema names\", e);\n         }"},{"sha":"c45385dd44b4544128acff296528f4808ebee673","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":24,"deletions":5,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c15b5ef648abc1ec475d63dd73d6e1429f89cf8c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=c15b5ef648abc1ec475d63dd73d6e1429f89cf8c","patch":"@@ -804,11 +804,11 @@ public TaskExec execute(final PropagationTask task) {\n             switch (task.getResourceOperationType()) {\n                 case CREATE:\n                 case UPDATE:\n-                    if (remoteObject != null) {\n-                        // 0. prepare new set of attributes\n-                        final Set<Attribute> attributes =\n-                                new HashSet<Attribute>(task.getAttributes());\n+                    // set of attributes to be propagated\n+                    final Set<Attribute> attributes =\n+                            new HashSet<Attribute>(task.getAttributes());\n \n+                    if (remoteObject != null) {\n                         // 1. check if rename is really required\n                         final Name newName = (Name) AttributeUtil.find(\n                                 Name.NAME, attributes);\n@@ -833,10 +833,29 @@ public TaskExec execute(final PropagationTask task) {\n                                 null,\n                                 propagationAttempted);\n                     } else {\n+                        // 1. get accountId\n+                        final String accountId = task.getAccountId();\n+\n+                        // 2. check if accountId is not blank\n+                        if (StringUtils.hasText(accountId)) {\n+\n+                            // 2.a retrieve uid\n+                            final Uid uid = (Uid) AttributeUtil.find(\n+                                    Uid.NAME, attributes);\n+\n+                            // 2.b add Uid if not provided\n+                            if (uid == null) {\n+                                attributes.add(AttributeBuilder.build(\n+                                        Uid.NAME,\n+                                        Collections.singleton(accountId)));\n+                            }\n+                        }\n+\n+                        // 3. provision entry\n                         connector.create(\n                                 task.getPropagationMode(),\n                                 ObjectClass.ACCOUNT,\n-                                task.getAttributes(),\n+                                attributes,\n                                 null,\n                                 propagationAttempted);\n                     }"}]}