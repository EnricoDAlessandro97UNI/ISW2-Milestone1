{"sha":"831bfcaf3b5e6467d7a3118273815ebaf2560317","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgzMWJmY2FmM2I1ZTY0NjdkN2EzMTE4MjczODE1ZWJhZjI1NjAzMTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-21T12:22:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-21T12:22:01Z"},"message":"[SYNCOPE-44] Enabling latest role search enhancements in the admin console\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1424893 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"06ca56fc9b2bfeef58b6fce879b42169e0c94e7b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/06ca56fc9b2bfeef58b6fce879b42169e0c94e7b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/831bfcaf3b5e6467d7a3118273815ebaf2560317","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/831bfcaf3b5e6467d7a3118273815ebaf2560317","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/831bfcaf3b5e6467d7a3118273815ebaf2560317","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/831bfcaf3b5e6467d7a3118273815ebaf2560317/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"24c207a9a853e9b286f34c2b5085299e974c677e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24c207a9a853e9b286f34c2b5085299e974c677e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/24c207a9a853e9b286f34c2b5085299e974c677e"}],"stats":{"total":135,"additions":100,"deletions":35},"files":[{"sha":"6944c48e98b64d4e5cfa62dd1098d6b0dceff441","filename":"console/src/main/java/org/apache/syncope/console/commons/SearchCondWrapper.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -42,7 +42,8 @@ public enum FilterType {\n \n         ATTRIBUTE,\n         MEMBERSHIP,\n-        RESOURCE\n+        RESOURCE,\n+        ENTITLEMENT\n \n     };\n "},{"sha":"1f8ccbf4a77977981926b32a9207c32767f8662b","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -28,6 +28,8 @@\n import org.apache.http.util.EntityUtils;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.console.SyncopeSession;\n+import org.apache.syncope.console.wicket.markup.html.form.LinkPanel;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -53,8 +55,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.web.client.HttpClientErrorException;\n import org.springframework.web.client.RestTemplate;\n-import org.apache.syncope.console.SyncopeSession;\n-import org.apache.syncope.console.wicket.markup.html.form.LinkPanel;\n \n /**\n  * Syncope Login page."},{"sha":"6cb8e83fa0f4a888a201f79b1b0e6e5ded2b8650","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchPanel.java","status":"modified","additions":38,"deletions":2,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -26,6 +26,7 @@\n import org.apache.commons.lang.ArrayUtils;\n import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.AttributeCond;\n+import org.apache.syncope.client.search.EntitlementCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.search.ResourceCond;\n@@ -34,6 +35,7 @@\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.console.commons.SearchCondWrapper;\n import org.apache.syncope.console.commons.SearchCondWrapper.OperationType;\n+import org.apache.syncope.console.rest.AuthRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.types.AttributableType;\n@@ -58,14 +60,17 @@ public abstract class AbstractSearchPanel extends Panel {\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSearchPanel.class);\n \n     protected static final String[] ATTRIBUTES_NOTINCLUDED = {\"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n-        \"serialVersionUID\", \"memberships\", \"resources\", \"password\", \"propagationTOs\", \"propagationStatusMap\"};\n+        \"serialVersionUID\", \"memberships\", \"entitlements\", \"resources\", \"password\",\n+        \"propagationTOs\", \"propagationStatusMap\"};\n \n     protected IModel<List<String>> dnames;\n \n     protected IModel<List<String>> anames;\n \n     protected IModel<List<String>> resourceNames;\n \n+    protected IModel<List<String>> entitlements;\n+\n     protected IModel<List<AttributeCond.Type>> attributeTypes;\n \n     protected IModel<List<SearchCondWrapper.FilterType>> filterTypes;\n@@ -78,6 +83,9 @@ public abstract class AbstractSearchPanel extends Panel {\n     @SpringBean\n     protected ResourceRestClient resourceRestClient;\n \n+    @SpringBean\n+    protected AuthRestClient authRestClient;\n+\n     protected FeedbackPanel searchFeedback;\n \n     protected List<SearchCondWrapper> searchConditionList;\n@@ -135,7 +143,7 @@ public boolean accept(final FeedbackMessage message) {\n             searchConditionList = getSearchCondWrappers(initCond, null);\n         }\n         searchFormContainer.add(new SearchView(\"searchView\", searchConditionList, searchFormContainer, required,\n-                attributeTypes, filterTypes, anames, dnames, roleNames, resourceNames));\n+                attributeTypes, filterTypes, anames, dnames, roleNames, resourceNames, entitlements));\n \n         add(searchFormContainer);\n     }\n@@ -196,6 +204,18 @@ protected List<String> load() {\n             }\n         };\n \n+        entitlements = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                List<String> result = authRestClient.getOwnedEntitlements();\n+                Collections.sort(result);\n+                return result;\n+            }\n+        };\n+\n         attributeTypes = new LoadableDetachableModel<List<AttributeCond.Type>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n@@ -277,6 +297,10 @@ private SearchCondWrapper getSearchCondWrapper(final NodeCond searchCond) {\n             wrapper.setFilterType(SearchCondWrapper.FilterType.RESOURCE);\n             wrapper.setFilterName(searchCond.getResourceCond().getResourceName());\n         }\n+        if (searchCond.getEntitlementCond() != null) {\n+            wrapper.setFilterType(SearchCondWrapper.FilterType.ENTITLEMENT);\n+            wrapper.setFilterName(searchCond.getEntitlementCond().getExpression());\n+        }\n \n         wrapper.setNotOperator(searchCond.getType() == NodeCond.Type.NOT_LEAF);\n \n@@ -349,6 +373,18 @@ private NodeCond buildSearchCond(final List<SearchCondWrapper> conditions) {\n \n                 break;\n \n+            case ENTITLEMENT:\n+                final EntitlementCond entitlementCond = new EntitlementCond();\n+                entitlementCond.setExpression(searchConditionWrapper.getFilterName());\n+\n+                if (searchConditionWrapper.isNotOperator()) {\n+                    nodeCond = NodeCond.getNotLeafCond(entitlementCond);\n+                } else {\n+                    nodeCond = NodeCond.getLeafCond(entitlementCond);\n+                }\n+\n+                break;\n+\n             default:\n             // nothing to do\n         }"},{"sha":"fb544197296780922418b1b2cc40b901d7fd3300","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RolePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n-import org.apache.syncope.console.rest.EntitlementRestClient;\n+import org.apache.syncope.console.rest.AuthRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.Form;\n@@ -34,7 +34,7 @@ public class RolePanel extends Panel {\n     private static final long serialVersionUID = 4216376097320768369L;\n \n     @SpringBean\n-    private EntitlementRestClient entitlementRestClient;\n+    private AuthRestClient entitlementRestClient;\n \n     private final Palette<String> entitlementsPalette;\n "},{"sha":"5bb109d47af484a671947b78615951151355bc0f","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -54,6 +54,7 @@ protected void populate() {\n             protected List<SearchCondWrapper.FilterType> load() {\n                 List<SearchCondWrapper.FilterType> result = new ArrayList<SearchCondWrapper.FilterType>();\n                 result.add(SearchCondWrapper.FilterType.ATTRIBUTE);\n+                result.add(SearchCondWrapper.FilterType.ENTITLEMENT);\n                 result.add(SearchCondWrapper.FilterType.RESOURCE);\n                 return result;\n             }"},{"sha":"0c61dbfbafd111e3774095708e2468b7cc164237","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SearchView.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSearchView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSearchView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSearchView.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -60,6 +60,8 @@ public class SearchView extends ListView<SearchCondWrapper> {\n \n     private final IModel<List<String>> resourceNames;\n \n+    private final IModel<List<String>> entitlements;\n+\n     public SearchView(final String id, final List<? extends SearchCondWrapper> list,\n             final WebMarkupContainer searchFormContainer,\n             final boolean required,\n@@ -68,7 +70,8 @@ public SearchView(final String id, final List<? extends SearchCondWrapper> list,\n             final IModel<List<String>> anames,\n             final IModel<List<String>> dnames,\n             final IModel<List<String>> roleNames,\n-            final IModel<List<String>> resourceNames) {\n+            final IModel<List<String>> resourceNames,\n+            final IModel<List<String>> entitlements) {\n \n         super(id, list);\n \n@@ -80,6 +83,7 @@ public SearchView(final String id, final List<? extends SearchCondWrapper> list,\n         this.dnames = dnames;\n         this.roleNames = roleNames;\n         this.resourceNames = resourceNames;\n+        this.entitlements = entitlements;\n     }\n \n     @Override\n@@ -283,6 +287,17 @@ public String getIdValue(final String object, final int index) {\n \n                     break;\n \n+                case ENTITLEMENT:\n+                    filterNameChooser.setChoices(entitlements);\n+                    type.setEnabled(false);\n+                    type.setRequired(false);\n+                    type.setModelObject(null);\n+\n+                    filterValue.setEnabled(false);\n+                    filterValue.setModelObject(\"\");\n+\n+                    break;\n+\n                 default:\n                     filterNameChooser.setChoices(Collections.<String>emptyList());\n             }"},{"sha":"5931488617305fc581769822c30f5618d30b30e1","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.RoleTO;\n@@ -59,7 +58,11 @@ protected void populate() {\n \n             @Override\n             protected List<SearchCondWrapper.FilterType> load() {\n-                return Arrays.asList(SearchCondWrapper.FilterType.values());\n+                List<SearchCondWrapper.FilterType> result = new ArrayList<SearchCondWrapper.FilterType>();\n+                result.add(SearchCondWrapper.FilterType.ATTRIBUTE);\n+                result.add(SearchCondWrapper.FilterType.MEMBERSHIP);\n+                result.add(SearchCondWrapper.FilterType.RESOURCE);\n+                return result;\n             }\n         };\n "},{"sha":"d39719d5654447b5152b1781c6eda26521aee67f","filename":"console/src/main/java/org/apache/syncope/console/rest/AuthRestClient.java","status":"renamed","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -20,31 +20,34 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.springframework.stereotype.Component;\n-import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.SyncopeSession;\n+import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Resources services.\n  */\n @Component\n-public class EntitlementRestClient extends BaseRestClient {\n+public class AuthRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 2999780105004742914L;\n \n     /**\n      * Get all Entitlements.\n      *\n      * @return List<String>\n      */\n     public List<String> getAllEntitlements() {\n-        List<String> entitlements = null;\n-\n-        try {\n-            entitlements = Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject(\n-                    baseURL + \"auth/allentitlements.json\", String[].class));\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While reading all the entitlements\", e);\n-        }\n+        return Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject(\n+                baseURL + \"auth/allentitlements.json\", String[].class));\n+    }\n \n-        return entitlements;\n+    /**\n+     * Get owned Entitlements.\n+     *\n+     * @return List<String>\n+     */\n+    public List<String> getOwnedEntitlements() {\n+        return Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject(\n+                baseURL + \"auth/entitlements.json\", String[].class));\n     }\n }","previous_filename":"console/src/main/java/org/apache/syncope/console/rest/EntitlementRestClient.java"},{"sha":"f3d46c987e7b96c9796a9ce64ef21846e3b47456","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttributableSearchDAOImpl.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -41,8 +41,6 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n-import org.apache.syncope.core.persistence.beans.Entitlement;\n-import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n@@ -289,7 +287,7 @@ private StringBuilder getQuery(final NodeCond nodeCond, final List<Object> param\n                 }\n                 if (nodeCond.getEntitlementCond() != null) {\n                     query.append(getQuery(nodeCond.getEntitlementCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n-                            parameters, attrUtil));\n+                            parameters));\n                 }\n                 if (nodeCond.getAttributeCond() != null) {\n                     query.append(getQuery(nodeCond.getAttributeCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n@@ -370,16 +368,13 @@ private String getQuery(final ResourceCond cond, final boolean not, final List<O\n         return query.toString();\n     }\n \n-    private String getQuery(final EntitlementCond cond, final boolean not, final List<Object> parameters,\n-            final AttributableUtil attrUtil) {\n-\n-        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT role_id AS subject_id FROM \").\n-                append(SyncopeRole.class.getSimpleName()).append('_').append(Entitlement.class.getSimpleName()).\n-                append(\" WHERE entitlement_name \");\n+    private String getQuery(final EntitlementCond cond, final boolean not, final List<Object> parameters) {\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n+                append(\"role_search_entitlements WHERE entitlement_name \");\n         if (not) {\n             query.append(\" NOT \");\n         }\n-        query.append(\" LIKE '%\").append(cond.getExpression()).append(\"%'\");\n+        query.append(\" LIKE ?\").append(setParameter(parameters, cond.getExpression()));\n \n         return query.toString();\n     }"},{"sha":"4cba0437cbba51c58147b46e3b42f3df560becd4","filename":"core/src/main/resources/views.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -132,4 +132,11 @@ under the License.\n     SELECT st.role_id AS subject_id, st.resource_name AS resource_name\n     FROM SyncopeRole_ExternalResource st\n   </entry>\n+  <entry key=\"role_search_entitlements\">\n+    CREATE VIEW role_search_entitlements AS\n+\n+    SELECT st.role_id AS subject_id, st.entitlement_name AS entitlement_name\n+    FROM SyncopeRole_Entitlement st\n+  </entry>\n+\n </properties>"},{"sha":"bc8df815764ddd1ac24f0173d4df8c9d680a8f83","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/831bfcaf3b5e6467d7a3118273815ebaf2560317/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=831bfcaf3b5e6467d7a3118273815ebaf2560317","patch":"@@ -223,10 +223,14 @@ public void searchByBooleanAttributableCond() {\n \n     @Test\n     public void searchByEntitlement() {\n-        final EntitlementCond cond = new EntitlementCond();\n-        cond.setExpression(\"USER\");\n+        final EntitlementCond userListCond = new EntitlementCond();\n+        userListCond.setExpression(\"USER_LIST\");\n \n-        final NodeCond searchCondition = NodeCond.getLeafCond(cond);\n+        final EntitlementCond userReadcond = new EntitlementCond();\n+        userReadcond.setExpression(\"USER_READ\");\n+\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(userListCond),\n+                NodeCond.getLeafCond(userReadcond));\n         assertTrue(searchCondition.isValid());\n \n         final List<RoleTO> matchingRoles = Arrays.asList(restTemplate.postForObject(BASE_URL + \"role/search\","}]}