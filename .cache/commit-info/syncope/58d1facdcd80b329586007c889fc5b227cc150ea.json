{"sha":"58d1facdcd80b329586007c889fc5b227cc150ea","node_id":"C_kwDOJfYA1toAKDU4ZDFmYWNkY2Q4MGIzMjk1ODYwMDdjODg5ZmM1YjIyN2NjMTUwZWE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-30T08:58:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-30T09:08:37Z"},"message":"[SYNCOPE-1747] Better WA push controls in Console (#432)","tree":{"sha":"451741963dff7570f517e9900f123d801e4f316b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/451741963dff7570f517e9900f123d801e4f316b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/58d1facdcd80b329586007c889fc5b227cc150ea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58d1facdcd80b329586007c889fc5b227cc150ea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/58d1facdcd80b329586007c889fc5b227cc150ea","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58d1facdcd80b329586007c889fc5b227cc150ea/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1"}],"stats":{"total":615,"additions":454,"deletions":161},"files":[{"sha":"3c16b387b834dfcf572a6bbce027e5ab46dc8006","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -20,10 +20,12 @@\n \n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.json.JsonMapper;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import jakarta.ws.rs.core.MediaType;\n import jakarta.ws.rs.core.Response;\n import java.io.InputStream;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -40,10 +42,9 @@\n import org.apache.syncope.client.console.panels.OIDC;\n import org.apache.syncope.client.console.panels.SAML2;\n import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel;\n-import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.console.panels.WAPushModalPanel;\n import org.apache.syncope.client.console.rest.WASessionRestClient;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n@@ -65,6 +66,8 @@ public class WA extends BasePage {\n \n     protected static final JsonMapper MAPPER = JsonMapper.builder().findAndAddModules().build();\n \n+    protected final BaseModal<Serializable> modal;\n+\n     @SpringBean\n     protected ServiceOps serviceOps;\n \n@@ -78,20 +81,21 @@ public WA(final PageParameters parameters) {\n \n         List<NetworkService> instances = serviceOps.list(NetworkService.Type.WA);\n \n+        modal = new BaseModal<>(\"push-modal\");\n+        modal.setWindowClosedCallback(target -> modal.show(false));\n+        modal.addSubmitButton();\n+        body.add(modal.size(Modal.Size.Large));\n+\n         AjaxLink<?> push = new AjaxLink<>(\"push\") {\n \n             private static final long serialVersionUID = -817438685948164787L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                try {\n-                    WAConfigRestClient.push();\n-                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                } catch (Exception e) {\n-                    LOG.error(\"While pushing to WA\", e);\n-                    SyncopeConsoleSession.get().onException(e);\n-                }\n-                ((BaseWebPage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n+                modal.header(new ResourceModel(\"push.options\"));\n+                modal.setContent(new WAPushModalPanel(modal, instances, getPageReference()));\n+                modal.show(true);\n+                target.add(modal);\n             }\n         };\n         push.setEnabled(!instances.isEmpty() && SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_PUSH));\n@@ -106,7 +110,7 @@ public void onClick(final AjaxRequestTarget target) {\n         body.add(content);\n \n         if (!instances.isEmpty()) {\n-            String actuatorEndpoint = instances.get(0).getAddress() + \"actuator/env\";\n+            String actuatorEndpoint = StringUtils.appendIfMissing(instances.get(0).getAddress(), \"/\") + \"actuator/env\";\n             try {\n                 Response response = WebClient.create(\n                         actuatorEndpoint,"},{"sha":"4c1c4b50710c05ccb308254f49ca51dd2d1fe87a","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAConfigModalPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -66,6 +66,8 @@ public WAConfigModalPanel(\n \n         add(new ParametersWizardPanel(form, null, pageRef) {\n \n+            private static final long serialVersionUID = -1469319240177117600L;\n+\n             @Override\n             protected WizardModel buildModelSteps(final ParametersForm modelObject, final WizardModel wizardModel) {\n                 wizardModel.add(new ParametersWizardAttrStep(mode, modelObject));"},{"sha":"c90712bc844be011adc3a144ea567f1ebe159d43","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAPushModalPanel.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class WAPushModalPanel extends AbstractModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = -8589310598889871801L;\n+\n+    private final Model<WAConfigService.PushSubject> subjectModel = new Model<>(WAConfigService.PushSubject.conf);\n+\n+    private final ListModel<String> servicesModel = new ListModel<>();\n+\n+    public WAPushModalPanel(\n+            final BaseModal<Serializable> modal,\n+            final List<NetworkService> instances,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+\n+        List<String> addresses = instances.stream().\n+                map(NetworkService::getAddress).distinct().sorted().collect(Collectors.toList());\n+        servicesModel.setObject(addresses);\n+\n+        add(new AjaxPalettePanel.Builder<String>().setName(\"services\").setAllowMoveAll(true).build(\n+                \"services\",\n+                servicesModel,\n+                new ListModel<>(addresses)).addRequiredLabel());\n+\n+        add(new AjaxDropDownChoicePanel<>(\n+                \"subject\", getString(\"subject\"), subjectModel).\n+                setChoices(List.of(WAConfigService.PushSubject.values())).\n+                setChoiceRenderer(s -> getString(s.name(), Model.of(), s.name())).setNullValid(false));\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target) {\n+        try {\n+            WAConfigRestClient.push(subjectModel.getObject(), servicesModel.getObject());\n+\n+            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+            this.modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While pushing to WA\", e);\n+            SyncopeConsoleSession.get().onException(e);\n+        }\n+        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+}"},{"sha":"542e7cb044239da65cc09ebb06b57a68a5dbf997","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WAConfigRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -38,7 +38,7 @@ public static void delete(final String schema) {\n         getService(WAConfigService.class).delete(schema);\n     }\n \n-    public static void push() {\n-        getService(WAConfigService.class).pushToWA();\n+    public static void push(final WAConfigService.PushSubject subject, final List<String> services) {\n+        getService(WAConfigService.class).pushToWA(subject, services);\n     }\n }"},{"sha":"3a3a410e40f6bdcd06613c2d49d3c938161ea072","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -45,5 +45,7 @@\n         </div>\n       </div>\n     </section>\n+    \n+    <div wicket:id=\"push-modal\">[modal]</div>    \n   </wicket:extend>\n </html>"},{"sha":"cdd3184c2bf21564644ce4627d1c7d5d21d098e5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessions\n authProfiles=Profiles\n push=Push\n attrRepos=Attribute Repositories\n+push.options=WA Push Options\n+submit=Push"},{"sha":"cdd3184c2bf21564644ce4627d1c7d5d21d098e5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_fr_CA.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessions\n authProfiles=Profiles\n push=Push\n attrRepos=Attribute Repositories\n+push.options=WA Push Options\n+submit=Push"},{"sha":"672aa66750e322d1d2b9f712c6be53e6bc1a1c47","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessioni\n authProfiles=Profili\n push=Applica\n attrRepos=Depositi di Attributi\n+push.options=Applica a WA\n+submit=Applica"},{"sha":"cdd3184c2bf21564644ce4627d1c7d5d21d098e5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_ja.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessions\n authProfiles=Profiles\n push=Push\n attrRepos=Attribute Repositories\n+push.options=WA Push Options\n+submit=Push"},{"sha":"cdd3184c2bf21564644ce4627d1c7d5d21d098e5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessions\n authProfiles=Profiles\n push=Push\n attrRepos=Attribute Repositories\n+push.options=WA Push Options\n+submit=Push"},{"sha":"cdd3184c2bf21564644ce4627d1c7d5d21d098e5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_ru.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -22,3 +22,5 @@ sessions=Sessions\n authProfiles=Profiles\n push=Push\n attrRepos=Attribute Repositories\n+push.options=WA Push Options\n+submit=Push"},{"sha":"d19dcc5a65402a4d6b61d22013f942f6c618ab93","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.html?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"services\"/>\n+      <span wicket:id=\"subject\"/>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"1c6402c1a5c4587bfb423a1039b448e63ba143eb","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=WA instances\n+subject=Push Subject\n+conf=Full Configuration\n+clientApps=Client Applications"},{"sha":"1c6402c1a5c4587bfb423a1039b448e63ba143eb","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel_fr_CA.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_fr_CA.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=WA instances\n+subject=Push Subject\n+conf=Full Configuration\n+clientApps=Client Applications"},{"sha":"e35d265472bd08a617f1176178a6014adea84eab","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_it.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=Istanze di WA\n+subject=Oggetto\n+conf=Configurazione Completa\n+clientApps=Applicazioni Client"},{"sha":"1c6402c1a5c4587bfb423a1039b448e63ba143eb","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel_ja.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ja.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=WA instances\n+subject=Push Subject\n+conf=Full Configuration\n+clientApps=Client Applications"},{"sha":"1c6402c1a5c4587bfb423a1039b448e63ba143eb","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_pt_BR.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=WA instances\n+subject=Push Subject\n+conf=Full Configuration\n+clientApps=Client Applications"},{"sha":"1c6402c1a5c4587bfb423a1039b448e63ba143eb","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAPushModalPanel_ru.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAPushModalPanel_ru.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+services=WA instances\n+subject=Push Subject\n+conf=Full Configuration\n+clientApps=Client Applications"},{"sha":"4444f498522f6a9a05908043beeaf68a3d5bc8fd","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AbstractWizardMgtPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAbstractWizardMgtPanel.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -31,5 +31,4 @@\n     public AbstractWizardMgtPanel(final String id) {\n         super(id);\n     }\n-\n }"},{"sha":"f8d057cdcd3ed35de1d69ccda159a299f66983a4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -76,9 +76,6 @@ public DisplayAttributesModalPanel(\n         super(modal, pageRef);\n         this.type = type;\n \n-        final List<String> detailslList = SearchableFields.get(DisplayAttributesModalPanel.getTOClass(type))\n-                .keySet().stream().collect(Collectors.toList());\n-        Collections.sort(detailslList);\n         Collections.sort(pSchemaNames);\n         Collections.sort(dSchemaNames);\n \n@@ -88,11 +85,12 @@ public DisplayAttributesModalPanel(\n \n             @Override\n             protected List<String> load() {\n-                return detailslList;\n+                return SearchableFields.get(DisplayAttributesModalPanel.getTOClass(type))\n+                        .keySet().stream().sorted().collect(Collectors.toList());\n             }\n         };\n \n-        final IModel<List<String>> psnames = new LoadableDetachableModel<>() {\n+        IModel<List<String>> psnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -102,7 +100,7 @@ protected List<String> load() {\n             }\n         };\n \n-        final IModel<List<String>> dsnames = new LoadableDetachableModel<>() {\n+        IModel<List<String>> dsnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -120,7 +118,7 @@ protected List<String> load() {\n         selectedPlainSchemas.retainAll(pSchemaNames);\n         selectedDerSchemas.retainAll(dSchemaNames);\n \n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n \n@@ -188,10 +186,10 @@ public static final String getPrefDerivedAttributeView(final String type) {\n     public static final Class<? extends AnyTO> getTOClass(final String type) {\n         if (type.equalsIgnoreCase(AnyTypeKind.USER.name())) {\n             return UserTO.class;\n-        } else if (type.equalsIgnoreCase(AnyTypeKind.GROUP.name())) {\n+        }\n+        if (type.equalsIgnoreCase(AnyTypeKind.GROUP.name())) {\n             return GroupTO.class;\n-        } else {\n-            return AnyObjectTO.class;\n         }\n+        return AnyObjectTO.class;\n     }\n }"},{"sha":"7b914dff91ca3dd77765d03a38544688e6579f03","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -48,8 +48,6 @@ public final class AMEntitlement {\n \n     public static final String CLIENTAPP_DELETE = \"CLIENTAPP_DELETE\";\n \n-    public static final String CLIENTAPP_PUSH = \"CLIENTAPP_PUSH\";\n-\n     public static final String AUTH_MODULE_LIST = \"AUTH_MODULE_LIST\";\n \n     public static final String AUTH_MODULE_CREATE = \"AUTH_MODULE_CREATE\";"},{"sha":"ea062d56fa15fee5a164ed156418a7a7c5308c0d","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ClientAppService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -131,11 +131,4 @@ <T extends ClientAppTO> T read(\n     @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     void delete(@NotNull @PathParam(\"type\") ClientAppType type, @NotNull @PathParam(\"key\") String key);\n-\n-    @ApiResponses(\n-        @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @POST\n-    @Path(\"push\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void pushToWA();\n }"},{"sha":"40e55d05b1e853b5d4a98df49fe5519f061a2da3","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/wa/WAConfigService.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FWAConfigService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FWAConfigService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2Fwa%2FWAConfigService.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -35,6 +35,7 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n import jakarta.ws.rs.Produces;\n+import jakarta.ws.rs.QueryParam;\n import jakarta.ws.rs.core.MediaType;\n import java.util.List;\n import org.apache.syncope.common.lib.Attr;\n@@ -51,6 +52,12 @@\n @Path(\"wa/config\")\n public interface WAConfigService extends JAXRSService {\n \n+    enum PushSubject {\n+        clientApps,\n+        conf\n+\n+    }\n+\n     @GET\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n@@ -95,10 +102,16 @@ public interface WAConfigService extends JAXRSService {\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     void delete(@NotNull @PathParam(\"schema\") String schema);\n \n+    /**\n+     * Push to WA according to the provided parameters.\n+     *\n+     * @param subject what is to be triggered for refresh on WA\n+     * @param services WA instances to trigger; all if none specified\n+     */\n     @ApiResponses(\n             @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n-    @Path(\"push\")\n+    @Path(\"push/{subject}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void pushToWA();\n+    void pushToWA(@NotNull @PathParam(\"subject\") PushSubject subject, @QueryParam(\"service\") List<String> services);\n }"},{"sha":"5535b7253823eb81be36df63425e9b7381ad0864","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/AMLogicContext.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAMLogicContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAMLogicContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAMLogicContext.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -95,21 +95,19 @@ public AuthProfileLogic authProfileLogic(\n     @Bean\n     public ClientAppLogic clientAppLogic(\n             final ServiceOps serviceOps,\n+            final ClientAppUtilsFactory clientAppUtilsFactory,\n+            final ClientAppDataBinder binder,\n             final CASSPClientAppDAO casSPClientAppDAO,\n             final OIDCRPClientAppDAO oidcRPClientAppDAO,\n-            final SAML2SPClientAppDAO saml2SPClientAppDAO,\n-            final SecurityProperties securityProperties,\n-            final ClientAppUtilsFactory clientAppUtilsFactory,\n-            final ClientAppDataBinder binder) {\n+            final SAML2SPClientAppDAO saml2SPClientAppDAO) {\n \n         return new ClientAppLogic(\n                 serviceOps,\n                 clientAppUtilsFactory,\n                 binder,\n                 casSPClientAppDAO,\n                 oidcRPClientAppDAO,\n-                saml2SPClientAppDAO,\n-                securityProperties);\n+                saml2SPClientAppDAO);\n     }\n \n     @ConditionalOnMissingBean"},{"sha":"54af6cb924a5bed221231211a33d8913c51ca74a","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/ClientAppLogic.java","status":"modified","additions":1,"deletions":39,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -18,24 +18,12 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import jakarta.ws.rs.InternalServerErrorException;\n-import jakarta.ws.rs.core.HttpHeaders;\n-import jakarta.ws.rs.core.MediaType;\n-import java.io.IOException;\n import java.lang.reflect.Method;\n-import java.net.URI;\n-import java.net.http.HttpClient;\n-import java.net.http.HttpRequest;\n-import java.net.http.HttpResponse;\n import java.util.List;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier;\n-import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n-import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ClientAppTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n@@ -52,7 +40,6 @@\n import org.apache.syncope.core.persistence.api.entity.am.OIDCRPClientApp;\n import org.apache.syncope.core.persistence.api.entity.am.SAML2SPClientApp;\n import org.apache.syncope.core.provisioning.api.data.ClientAppDataBinder;\n-import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -70,24 +57,20 @@ public class ClientAppLogic extends AbstractTransactionalLogic<ClientAppTO> {\n \n     protected final SAML2SPClientAppDAO saml2SPClientAppDAO;\n \n-    protected final SecurityProperties securityProperties;\n-\n     public ClientAppLogic(\n             final ServiceOps serviceOps,\n             final ClientAppUtilsFactory clientAppUtilsFactory,\n             final ClientAppDataBinder binder,\n             final CASSPClientAppDAO casSPClientAppDAO,\n             final OIDCRPClientAppDAO oidcRPClientAppDAO,\n-            final SAML2SPClientAppDAO saml2SPClientAppDAO,\n-            final SecurityProperties securityProperties) {\n+            final SAML2SPClientAppDAO saml2SPClientAppDAO) {\n \n         this.serviceOps = serviceOps;\n         this.clientAppUtilsFactory = clientAppUtilsFactory;\n         this.binder = binder;\n         this.casSPClientAppDAO = casSPClientAppDAO;\n         this.oidcRPClientAppDAO = oidcRPClientAppDAO;\n         this.saml2SPClientAppDAO = saml2SPClientAppDAO;\n-        this.securityProperties = securityProperties;\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.CLIENTAPP_LIST + \"')\")\n@@ -258,25 +241,4 @@ protected ClientAppTO resolveReference(final Method method, final Object... args\n \n         throw new UnresolvedReferenceException();\n     }\n-\n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.CLIENTAPP_PUSH + \"')\")\n-    public void pushToWA() {\n-        try {\n-            NetworkService wa = serviceOps.get(NetworkService.Type.WA);\n-            String basicAuthHeader = DefaultBasicAuthSupplier.getBasicAuthHeader(\n-                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey());\n-            URI endpoint = URI.create(StringUtils.appendIfMissing(wa.getAddress(), \"/\")\n-                    + \"actuator/registeredServices\");\n-            HttpClient.newBuilder().build().send(\n-                    HttpRequest.newBuilder(endpoint).\n-                            header(HttpHeaders.AUTHORIZATION, basicAuthHeader).\n-                            header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON).\n-                            GET().build(),\n-                    HttpResponse.BodyHandlers.discarding());\n-        } catch (KeymasterException e) {\n-            throw new NotFoundException(\"Could not find any WA instance\", e);\n-        } catch (IOException | InterruptedException e) {\n-            throw new InternalServerErrorException(\"Errors while communicating with WA instance\", e);\n-        }\n-    }\n }"},{"sha":"0dbf3f6f88c423d0e4964822a652216caf6f0147","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/WAConfigLogic.java","status":"modified","additions":40,"deletions":10,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.apache.syncope.core.logic.AbstractTransactionalLogic;\n import org.apache.syncope.core.logic.UnresolvedReferenceException;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -44,6 +45,7 @@\n import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.CollectionUtils;\n \n public class WAConfigLogic extends AbstractTransactionalLogic<EntityTO> {\n \n@@ -91,19 +93,47 @@ public void delete(final String key) {\n         waConfigDAO.delete(key);\n     }\n \n+    protected void registeredServices(final HttpClient client, final String serviceAddress) {\n+        String target = StringUtils.appendIfMissing(serviceAddress, \"/\") + \"actuator/registeredServices\";\n+        client.sendAsync(\n+                HttpRequest.newBuilder(URI.create(target)).\n+                        header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                                securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n+                        GET().build(),\n+                HttpResponse.BodyHandlers.discarding()).\n+                thenAcceptAsync(response -> LOG.info(\n+                \"Pushed to {} with HTTP status: {}\", target, response.statusCode()));\n+    }\n+\n+    protected void refresh(final HttpClient client, final String serviceAddress) {\n+        String target = StringUtils.appendIfMissing(serviceAddress, \"/\") + \"actuator/refresh\";\n+        client.sendAsync(\n+                HttpRequest.newBuilder(URI.create(target)).\n+                        header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                                securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n+                        POST(HttpRequest.BodyPublishers.noBody()).build(),\n+                HttpResponse.BodyHandlers.discarding()).\n+                thenAcceptAsync(response -> LOG.info(\n+                \"Pushed to {} with HTTP status: {}\", target, response.statusCode()));\n+    }\n+\n     @PreAuthorize(\"hasRole('\" + AMEntitlement.WA_CONFIG_PUSH + \"')\")\n-    public void pushToWA() {\n+    public void pushToWA(final WAConfigService.PushSubject subject, final List<String> services) {\n         HttpClient client = HttpClient.newHttpClient();\n         try {\n-            serviceOps.list(NetworkService.Type.WA).forEach(wa -> client.sendAsync(\n-                    HttpRequest.newBuilder(URI.create(\n-                            StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/refresh\")).\n-                            header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n-                                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n-                            POST(HttpRequest.BodyPublishers.noBody()).build(),\n-                    HttpResponse.BodyHandlers.discarding()).\n-                    thenAcceptAsync(response -> LOG.info(\n-                    \"Pushed to WA instance {} with HTTP status: {}\", wa.getAddress(), response.statusCode())));\n+            serviceOps.list(NetworkService.Type.WA).stream().\n+                    filter(wa -> CollectionUtils.isEmpty(services) || services.contains(wa.getAddress())).\n+                    forEach(wa -> {\n+                        switch (subject) {\n+                            case clientApps:\n+                                registeredServices(client, wa.getAddress());\n+                                break;\n+\n+                            case conf:\n+                            default:\n+                                refresh(client, wa.getAddress());\n+                        }\n+                    });\n         } catch (KeymasterException e) {\n             throw new NotFoundException(\"Could not find any WA instance\", e);\n         }"},{"sha":"31bccb057ceffc2f6a184906e8a9422a63620ed4","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ClientAppServiceImpl.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -65,9 +65,4 @@ public void update(final ClientAppType type, final ClientAppTO clientAppTO) {\n     public void delete(final ClientAppType type, final String key) {\n         logic.delete(type, key);\n     }\n-\n-    @Override\n-    public void pushToWA() {\n-        logic.pushToWA();\n-    }\n }"},{"sha":"526293cbf9f0ce30dc854b7e24546f15fcce373f","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/wa/WAConfigServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FWAConfigServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FWAConfigServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2Fwa%2FWAConfigServiceImpl.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -55,7 +55,7 @@ public void set(final Attr value) {\n     }\n \n     @Override\n-    public void pushToWA() {\n-        logic.pushToWA();\n+    public void pushToWA(final PushSubject subject, final List<String> services) {\n+        logic.pushToWA(subject, services);\n     }\n }"},{"sha":"25b4dbf9256e37425b31c4caceeb0008a6a762c6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -156,7 +156,7 @@\n import org.apache.syncope.core.provisioning.java.job.SchedulerDBInit;\n import org.apache.syncope.core.provisioning.java.job.SyncopeSpringBeanJobFactory;\n import org.apache.syncope.core.provisioning.java.job.SystemLoadReporterJob;\n-import org.apache.syncope.core.provisioning.java.job.notification.DefaultNotificationJobDelegate;\n+import org.apache.syncope.core.provisioning.java.job.notification.MailNotificationJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n import org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager;\n import org.apache.syncope.core.provisioning.java.propagation.DefaultPropagationManager;\n@@ -707,18 +707,18 @@ public SystemLoadReporterJob systemLoadReporterJob(final ApplicationContext ctx)\n     public NotificationJobDelegate notificationJobDelegate(\n             final TaskUtilsFactory taskUtilsFactory,\n             final TaskDAO taskDAO,\n-            final JavaMailSender mailSender,\n             final AuditManager auditManager,\n             final NotificationManager notificationManager,\n-            final ApplicationEventPublisher publisher) {\n+            final ApplicationEventPublisher publisher,\n+            final JavaMailSender mailSender) {\n \n-        return new DefaultNotificationJobDelegate(\n+        return new MailNotificationJobDelegate(\n                 taskDAO,\n-                mailSender,\n                 taskUtilsFactory,\n                 auditManager,\n                 notificationManager,\n-                publisher);\n+                publisher,\n+                mailSender);\n     }\n \n     @ConditionalOnMissingBean"},{"sha":"8754cbf7319b927b3a18696361e6b4d33e9cece7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/AbstractNotificationJobDelegate.java","status":"renamed","additions":8,"deletions":43,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FAbstractNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FAbstractNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FAbstractNotificationJobDelegate.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.job.notification;\n \n-import jakarta.mail.internet.MimeMessage;\n import java.time.OffsetDateTime;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -40,18 +39,14 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.context.ApplicationEventPublisher;\n-import org.springframework.mail.javamail.JavaMailSender;\n-import org.springframework.mail.javamail.MimeMessageHelper;\n import org.springframework.transaction.annotation.Transactional;\n \n-public class DefaultNotificationJobDelegate implements NotificationJobDelegate {\n+public abstract class AbstractNotificationJobDelegate implements NotificationJobDelegate {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(NotificationJobDelegate.class);\n \n     protected final TaskDAO taskDAO;\n \n-    protected final JavaMailSender mailSender;\n-\n     protected final TaskUtilsFactory taskUtilsFactory;\n \n     protected final AuditManager auditManager;\n@@ -64,16 +59,14 @@ public class DefaultNotificationJobDelegate implements NotificationJobDelegate {\n \n     protected boolean interrupted;\n \n-    public DefaultNotificationJobDelegate(\n+    protected AbstractNotificationJobDelegate(\n             final TaskDAO taskDAO,\n-            final JavaMailSender mailSender,\n             final TaskUtilsFactory taskUtilsFactory,\n             final AuditManager auditManager,\n             final NotificationManager notificationManager,\n             final ApplicationEventPublisher publisher) {\n \n         this.taskDAO = taskDAO;\n-        this.mailSender = mailSender;\n         this.taskUtilsFactory = taskUtilsFactory;\n         this.auditManager = auditManager;\n         this.notificationManager = notificationManager;\n@@ -94,6 +87,9 @@ public boolean isInterrupted() {\n         return interrupted;\n     }\n \n+    protected abstract void notify(String to, NotificationTask task, TaskExec<NotificationTask> execution)\n+            throws Exception;\n+\n     @Transactional\n     @Override\n     public TaskExec<NotificationTask> executeSingle(final NotificationTask task, final String executor) {\n@@ -122,7 +118,7 @@ public TaskExec<NotificationTask> executeSingle(final NotificationTask task, fin\n             }\n         } else {\n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"About to send e-mails:\\n\"\n+                LOG.debug(\"About to send notifications:\\n\"\n                         + task.getRecipients() + '\\n'\n                         + task.getSender() + '\\n'\n                         + task.getSubject() + '\\n'\n@@ -134,38 +130,7 @@ public TaskExec<NotificationTask> executeSingle(final NotificationTask task, fin\n \n             for (String to : task.getRecipients()) {\n                 try {\n-                    MimeMessage message = mailSender.createMimeMessage();\n-                    MimeMessageHelper helper = new MimeMessageHelper(message, true);\n-                    helper.setTo(to);\n-                    helper.setFrom(task.getSender());\n-                    helper.setSubject(task.getSubject());\n-                    helper.setText(task.getTextBody(), task.getHtmlBody());\n-\n-                    mailSender.send(message);\n-\n-                    execution.setStatus(NotificationJob.Status.SENT.name());\n-\n-                    StringBuilder report = new StringBuilder();\n-                    switch (task.getTraceLevel()) {\n-                        case ALL:\n-                            report.append(\"FROM: \").append(task.getSender()).append('\\n').\n-                                    append(\"TO: \").append(to).append('\\n').\n-                                    append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n-                                    append(task.getTextBody()).append('\\n').append('\\n').\n-                                    append(task.getHtmlBody()).append('\\n');\n-                            break;\n-\n-                        case SUMMARY:\n-                            report.append(\"E-mail sent to \").append(to).append('\\n');\n-                            break;\n-\n-                        case FAILURES:\n-                        case NONE:\n-                        default:\n-                    }\n-                    if (report.length() > 0) {\n-                        execution.setMessage(report.toString());\n-                    }\n+                    notify(to, task, execution);\n \n                     notificationManager.createTasks(\n                             AuthContextUtils.getWho(),\n@@ -179,7 +144,7 @@ public TaskExec<NotificationTask> executeSingle(final NotificationTask task, fin\n                             task,\n                             \"Successfully sent notification to \" + to);\n                 } catch (Exception e) {\n-                    LOG.error(\"Could not send e-mail\", e);\n+                    LOG.error(\"Could not send out notification\", e);\n \n                     execution.setStatus(NotificationJob.Status.NOT_SENT.name());\n                     if (task.getTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal()) {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/DefaultNotificationJobDelegate.java"},{"sha":"5c23a5d5882dd084a27fbd768c75cb3491b9d968","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/MailNotificationJobDelegate.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FMailNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FMailNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FMailNotificationJobDelegate.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.job.notification;\n+\n+import jakarta.mail.internet.MimeMessage;\n+import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n+import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+import org.apache.syncope.core.persistence.api.entity.task.TaskUtilsFactory;\n+import org.apache.syncope.core.provisioning.api.AuditManager;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.springframework.context.ApplicationEventPublisher;\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.MimeMessageHelper;\n+\n+public class MailNotificationJobDelegate extends AbstractNotificationJobDelegate {\n+\n+    protected final JavaMailSender mailSender;\n+\n+    public MailNotificationJobDelegate(\n+            final TaskDAO taskDAO,\n+            final TaskUtilsFactory taskUtilsFactory,\n+            final AuditManager auditManager,\n+            final NotificationManager notificationManager,\n+            final ApplicationEventPublisher publisher,\n+            final JavaMailSender mailSender) {\n+\n+        super(taskDAO, taskUtilsFactory, auditManager, notificationManager, publisher);\n+        this.mailSender = mailSender;\n+    }\n+\n+    @Override\n+    protected void notify(\n+            final String to,\n+            final NotificationTask task,\n+            final TaskExec<NotificationTask> execution) throws Exception {\n+\n+        MimeMessage message = mailSender.createMimeMessage();\n+        MimeMessageHelper helper = new MimeMessageHelper(message, true);\n+        helper.setTo(to);\n+        helper.setFrom(task.getSender());\n+        helper.setSubject(task.getSubject());\n+        helper.setText(task.getTextBody(), task.getHtmlBody());\n+\n+        mailSender.send(message);\n+\n+        execution.setStatus(NotificationJob.Status.SENT.name());\n+\n+        StringBuilder report = new StringBuilder();\n+        switch (task.getTraceLevel()) {\n+            case ALL:\n+                report.append(\"FROM: \").append(task.getSender()).append('\\n').\n+                        append(\"TO: \").append(to).append('\\n').\n+                        append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n+                        append(task.getTextBody()).append('\\n').append('\\n').\n+                        append(task.getHtmlBody()).append('\\n');\n+                break;\n+\n+            case SUMMARY:\n+                report.append(\"E-mail sent to \").append(to).append('\\n');\n+                break;\n+\n+            case FAILURES:\n+            case NONE:\n+            default:\n+        }\n+        if (report.length() > 0) {\n+            execution.setMessage(report.toString());\n+        }\n+    }\n+}"},{"sha":"7e332773b5805ddf211e858ec60d06b3a9222cbe","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -88,14 +88,14 @@ public abstract class AbstractITCase {\n \n     protected static ClientAppService CLIENT_APP_SERVICE;\n \n+    protected static WAConfigService WA_CONFIG_SERVICE;\n+\n     protected static SRARouteService SRA_ROUTE_SERVICE;\n \n     protected static SAML2SP4UIIdPService SAML2SP4UI_IDP_SERVICE;\n \n     protected static OIDCC4UIProviderService OIDCC4UI_PROVIDER_SERVICE;\n \n-    protected static WAConfigService WA_CONFIG_SERVICE;\n-\n     @BeforeAll\n     public static void restSetup() {\n         CLIENT_FACTORY = new SyncopeClientFactoryBean().setAddress(CORE_ADDRESS);\n@@ -104,10 +104,10 @@ public static void restSetup() {\n         USER_SERVICE = ADMIN_CLIENT.getService(UserService.class);\n         POLICY_SERVICE = ADMIN_CLIENT.getService(PolicyService.class);\n         CLIENT_APP_SERVICE = ADMIN_CLIENT.getService(ClientAppService.class);\n+        WA_CONFIG_SERVICE = ADMIN_CLIENT.getService(WAConfigService.class);\n         SRA_ROUTE_SERVICE = ADMIN_CLIENT.getService(SRARouteService.class);\n         SAML2SP4UI_IDP_SERVICE = ADMIN_CLIENT.getService(SAML2SP4UIIdPService.class);\n         OIDCC4UI_PROVIDER_SERVICE = ADMIN_CLIENT.getService(OIDCC4UIProviderService.class);\n-        WA_CONFIG_SERVICE = ADMIN_CLIENT.getService(WAConfigService.class);\n     }\n \n     @BeforeAll\n@@ -122,15 +122,15 @@ public static void waitForWARefresh() {\n                                 WA_ADDRESS + \"/idp/metadata\").get().getEntity(),\n                         StandardCharsets.UTF_8);\n                 if (metadata.contains(\"localhost:8080\")) {\n-                    WA_CONFIG_SERVICE.pushToWA();\n+                    WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.conf, List.of());\n                     throw new IllegalStateException();\n                 }\n                 metadata = IOUtils.readInputStreamToString(\n                         (InputStream) WebClient.create(\n                                 WA_ADDRESS + \"/oidc/.well-known/openid-configuration\").get().getEntity(),\n                         StandardCharsets.UTF_8);\n                 if (metadata.contains(\"localhost:8080\")) {\n-                    WA_CONFIG_SERVICE.pushToWA();\n+                    WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.conf, List.of());\n                     throw new IllegalStateException();\n                 }\n "},{"sha":"a9c08445147414d1ca9de43df109858ebf4e7206","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/CASSRAITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -48,6 +48,7 @@\n import org.apache.syncope.common.lib.to.CASSPClientAppTO;\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n@@ -85,7 +86,7 @@ public static void clientAppSetup() {\n         clientApp.setAuthPolicy(getAuthPolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.CASSP, clientApp);\n-        CLIENT_APP_SERVICE.pushToWA();\n+        WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.clientApps, List.of());\n     }\n \n     @Test"},{"sha":"f51f8669d2c4ed289980922f1c2097de7c796f47","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/OIDCSRAITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.jsoup.Jsoup;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n@@ -122,7 +123,7 @@ protected static void oidcClientAppSetup(\n         clientApp.setAttrReleasePolicy(getAttrReleasePolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.OIDCRP, clientApp);\n-        CLIENT_APP_SERVICE.pushToWA();\n+        WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.clientApps, List.of());\n     }\n \n     @BeforeAll"},{"sha":"dde18edef9c43f622abf3fce29cb8027aca75ccb","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/SAML2SRAITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.SAML2SPNameId;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n@@ -91,7 +92,7 @@ public static void clientAppSetup() {\n         clientApp.setAuthPolicy(getAuthPolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.SAML2SP, clientApp);\n-        CLIENT_APP_SERVICE.pushToWA();\n+        WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.clientApps, List.of());\n     }\n \n     @Test"},{"sha":"26e81f5de2797841d558de13bab4b1e41d98abba","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/OIDC4UIITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -52,6 +52,7 @@\n import org.apache.syncope.common.lib.types.OIDCResponseType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.jsoup.Jsoup;\n import org.junit.jupiter.api.BeforeAll;\n \n@@ -93,7 +94,7 @@ private static void clientAppSetup(final String appName, final String baseAddres\n         clientApp.setAttrReleasePolicy(getAttrReleasePolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.OIDCRP, clientApp);\n-        CLIENT_APP_SERVICE.pushToWA();\n+        WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.clientApps, List.of());\n     }\n \n     private static String getAppName(final String address) {"},{"sha":"6751bd66a47fa27a2074eb7dabb06ce6a8e2e722","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -54,6 +54,7 @@\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.SAML2SPNameId;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n@@ -87,7 +88,7 @@ private static void clientAppSetup(final String appName, final String entityId,\n         clientApp.setAttrReleasePolicy(getAttrReleasePolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.SAML2SP, clientApp);\n-        CLIENT_APP_SERVICE.pushToWA();\n+        WA_CONFIG_SERVICE.pushToWA(WAConfigService.PushSubject.clientApps, List.of());\n     }\n \n     @BeforeAll"},{"sha":"b9115efa1334754ddc886d517ee77d2aa643e81b","filename":"wa/starter/src/main/resources/wa.properties","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -106,9 +106,6 @@ cas.authn.mfa.web-authn.core.application-id=https://localhost:8443\n cas.authn.mfa.web-authn.core.relying-party-name=Syncope \n cas.authn.mfa.web-authn.core.relying-party-id=syncope.apache.org\n \n-cas.authn.syncope.url=${cas.server.name}/syncope\n-cas.authn.syncope.name=DefaultSyncopeAuthModule\n-\n ##\n # Default strategy for matching request paths against\n # registered Spring MVC handler mappings"},{"sha":"5c997fc7073d278098cacfbdf4e7adee6126885b","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/SyncopeCoreTestingServer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58d1facdcd80b329586007c889fc5b227cc150ea/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeCoreTestingServer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58d1facdcd80b329586007c889fc5b227cc150ea/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeCoreTestingServer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeCoreTestingServer.java?ref=58d1facdcd80b329586007c889fc5b227cc150ea","patch":"@@ -171,7 +171,7 @@ public void delete(final String schema) {\n         }\n \n         @Override\n-        public void pushToWA() {\n+        public void pushToWA(final PushSubject subject, final List<String> services) {\n             // nothing to do\n         }\n     }"}]}