{"sha":"6d81b69ac52a5a7773f600e5168f32ffb0dde79c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkODFiNjlhYzUyYTVhNzc3M2Y2MDBlNTE2OGYzMmZmYjBkZGU3OWM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-02-27T16:47:17Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-02-27T16:47:46Z"},"message":"[SYNCOPE-1026] fix + group integration test improvement","tree":{"sha":"357ac5ce82397f3f1a880e7ea43c5f0d08e11412","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/357ac5ce82397f3f1a880e7ea43c5f0d08e11412"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d81b69ac52a5a7773f600e5168f32ffb0dde79c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d81b69ac52a5a7773f600e5168f32ffb0dde79c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d81b69ac52a5a7773f600e5168f32ffb0dde79c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d81b69ac52a5a7773f600e5168f32ffb0dde79c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2fbe7fb200aae36f5a1d1935ece0b3921018377b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2fbe7fb200aae36f5a1d1935ece0b3921018377b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2fbe7fb200aae36f5a1d1935ece0b3921018377b"}],"stats":{"total":75,"additions":64,"deletions":11},"files":[{"sha":"494ac386eb545edc9560d658091b36b0dc756de2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d81b69ac52a5a7773f600e5168f32ffb0dde79c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d81b69ac52a5a7773f600e5168f32ffb0dde79c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=6d81b69ac52a5a7773f600e5168f32ffb0dde79c","patch":"@@ -323,12 +323,11 @@ public void onEvent(final IEvent<?> event) {\n             } else if (sel instanceof UserTO) {\n                 wrapper.getInnerObject().setUserOwner(sel.getKey());\n                 wrapper.getInnerObject().setGroupOwner(null);\n-                ((UserSelectionDirectoryPanel.ItemSelection) event.getPayload()).getTarget().add(ownerContainer);\n             } else if (sel instanceof GroupTO) {\n                 wrapper.getInnerObject().setGroupOwner(sel.getKey());\n                 wrapper.getInnerObject().setUserOwner(null);\n-                ((GroupSelectionDirectoryPanel.ItemSelection) event.getPayload()).getTarget().add(ownerContainer);\n             }\n+            ((AnySelectionDirectoryPanel.ItemSelection) event.getPayload()).getTarget().add(ownerContainer);\n         } else {\n             super.onEvent(event);\n         }"},{"sha":"1f95fcb7b617fd8b0a1e829c0477ee3da459ad09","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":63,"deletions":9,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d81b69ac52a5a7773f600e5168f32ffb0dde79c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d81b69ac52a5a7773f600e5168f32ffb0dde79c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=6d81b69ac52a5a7773f600e5168f32ffb0dde79c","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -84,13 +87,12 @@ public void filteredSearch() {\n                 + \"value:textField\", TextField.class);\n     }\n \n-    @Test\n-    public void clickToCloneGroup() {\n+    private void cloneGroup(final String group) {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n-                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group);\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n@@ -100,17 +102,44 @@ public void clickToCloneGroup() {\n \n         FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n+        formTester.setValue(\"view:name:textField\", group + \"_clone\");\n+        formTester.submit(\"buttons:finish\");\n \n-        formTester.submit(\"buttons:cancel\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n+                + \"outer:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group + \"_clone\");\n+        assertNotNull(component);\n+    }\n+\n+    @Test\n+    public void clickToCloneGroup() {\n+        cloneGroup(\"director\");\n+\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n+        assertNotNull(component);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void editGroup() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        cloneGroup(\"director\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n-                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n@@ -120,9 +149,23 @@ public void editGroup() {\n \n         FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n-\n         formTester.submit(\"buttons:next\");\n \n+        // -------------------------\n+        // SYNCOPE-1026\n+        // -------------------------\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:container:content:tabbedPanel:panel:\"\n+                + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n+                + \"textField\").getDefaultModelObjectAsString(), \"[823074dc-d280-436d-a7dd-07399fae48ec] puccini\");\n+\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n+                + \"outer:form:content:form:view:ownerContainer:search:userOwnerReset\");\n+\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:container:content:tabbedPanel:panel:\"\n+                + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n+                + \"textField\").getDefaultModelObjectAsString(), StringUtils.EMPTY);\n+        // -------------------------\n+\n         formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n@@ -152,6 +195,7 @@ public void editGroup() {\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         TESTER.assertComponent(tabPanel\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n@@ -160,8 +204,18 @@ public void editGroup() {\n         TESTER.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n         component = findComponentByProp(\"name\", searchResultContainer\n-                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n+\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test"}]}