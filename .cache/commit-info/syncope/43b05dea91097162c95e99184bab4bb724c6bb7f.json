{"sha":"43b05dea91097162c95e99184bab4bb724c6bb7f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzYjA1ZGVhOTEwOTcxNjJjOTVlOTkxODRiYWI0YmI3MjRjNmJiN2Y=","commit":{"author":{"name":"dima.ayash","email":"dima.ayash@tirasa.net","date":"2020-02-26T15:27:59Z"},"committer":{"name":"Francesco ChicchiriccÃ²","email":"ilgrosso@apache.org","date":"2020-02-26T16:34:00Z"},"message":"[SYNCOPE-1537] Linked account update using put","tree":{"sha":"71b1017028d7dde7f0154d85b498d3b284cabb7b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/71b1017028d7dde7f0154d85b498d3b284cabb7b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43b05dea91097162c95e99184bab4bb724c6bb7f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43b05dea91097162c95e99184bab4bb724c6bb7f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43b05dea91097162c95e99184bab4bb724c6bb7f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43b05dea91097162c95e99184bab4bb724c6bb7f/comments","author":{"login":"DimaAy","id":19169906,"node_id":"MDQ6VXNlcjE5MTY5OTA2","avatar_url":"https://avatars.githubusercontent.com/u/19169906?v=4","gravatar_id":"","url":"https://api.github.com/users/DimaAy","html_url":"https://github.com/DimaAy","followers_url":"https://api.github.com/users/DimaAy/followers","following_url":"https://api.github.com/users/DimaAy/following{/other_user}","gists_url":"https://api.github.com/users/DimaAy/gists{/gist_id}","starred_url":"https://api.github.com/users/DimaAy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimaAy/subscriptions","organizations_url":"https://api.github.com/users/DimaAy/orgs","repos_url":"https://api.github.com/users/DimaAy/repos","events_url":"https://api.github.com/users/DimaAy/events{/privacy}","received_events_url":"https://api.github.com/users/DimaAy/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2ac89d97b64026ac656bd84e63e287c1812b7afc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ac89d97b64026ac656bd84e63e287c1812b7afc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ac89d97b64026ac656bd84e63e287c1812b7afc"}],"stats":{"total":112,"additions":108,"deletions":4},"files":[{"sha":"e30cfc4deddae3473799fdb0892c4c400e88f2bd","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43b05dea91097162c95e99184bab4bb724c6bb7f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43b05dea91097162c95e99184bab4bb724c6bb7f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java?ref=43b05dea91097162c95e99184bab4bb724c6bb7f","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.any.EntityWrapper;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.ComponentTag;\n@@ -143,5 +144,4 @@ protected void onComponentTag(final ComponentTag tag) {\n             }\n         };\n     }\n-\n }"},{"sha":"aa2024b0ab38696a33cf44489e8ca4c45da123b0","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43b05dea91097162c95e99184bab4bb724c6bb7f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43b05dea91097162c95e99184bab4bb724c6bb7f/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java?ref=43b05dea91097162c95e99184bab4bb724c6bb7f","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;"},{"sha":"b5becbfcd6e029d39428a743d82f0ab716f001d9","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43b05dea91097162c95e99184bab4bb724c6bb7f/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43b05dea91097162c95e99184bab4bb724c6bb7f/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=43b05dea91097162c95e99184bab4bb724c6bb7f","patch":"@@ -330,7 +330,6 @@ public static UserUR diff(final UserTO updated, final UserTO original, final boo\n                 EntityTOUtils.buildLinkedAccountMap(original.getLinkedAccounts());\n \n         updatedAccounts.entrySet().stream().\n-                filter(entry -> (!originalAccounts.containsKey(entry.getKey()))).\n                 forEachOrdered(entry -> {\n                     result.getLinkedAccounts().add(new LinkedAccountUR.Builder().\n                             operation(PatchOperation.ADD_REPLACE)."},{"sha":"38ca003145d9b3b6141c0a969a67b5fb239a3ab2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43b05dea91097162c95e99184bab4bb724c6bb7f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43b05dea91097162c95e99184bab4bb724c6bb7f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=43b05dea91097162c95e99184bab4bb724c6bb7f","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.fit;\n \n+import static de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesome5IconType.java;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.fail;\n@@ -53,6 +54,7 @@\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.keymaster.client.zookeper.ZookeeperKeymasterClientContext;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.request.AnyObjectUR;\n import org.apache.syncope.common.lib.request.AttrPatch;\n import org.apache.syncope.common.lib.request.GroupUR;\n@@ -484,6 +486,13 @@ protected ProvisioningResult<UserTO> updateUser(final UserUR req) {\n                 });\n     }\n \n+    protected ProvisioningResult<UserTO> updateUser(final UserTO userTO) {\n+        UserTO before = userService.read(userTO.getKey());\n+        return userService.update(AnyOperations.diff(userTO, before, false)).\n+                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                });\n+    }\n+\n     protected ProvisioningResult<UserTO> deleteUser(final String key) {\n         return userService.delete(key).\n                 readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n@@ -616,7 +625,8 @@ protected void updateLdapRemoteObject(\n             ctx = getLdapResourceDirContext(bindDn, bindPwd);\n \n             List<ModificationItem> items = new ArrayList<>();\n-            attributes.forEach((key, value) -> items.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE, new BasicAttribute(key, value))));\n+            attributes.forEach((key, value) -> items.add(new ModificationItem(DirContext.REPLACE_ATTRIBUTE,\n+                    new BasicAttribute(key, value))));\n \n             ctx.modifyAttributes(objectDn, items.toArray(new ModificationItem[] {}));\n         } catch (Exception e) {"},{"sha":"54f83259adbb291c58a2b8ca7378f0fbdeef6f0e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LinkedAccountITCase.java","status":"modified","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43b05dea91097162c95e99184bab4bb724c6bb7f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43b05dea91097162c95e99184bab4bb724c6bb7f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java?ref=43b05dea91097162c95e99184bab4bb724c6bb7f","patch":"@@ -151,6 +151,46 @@ public void createWithLinkedAccountThenUpdateThenRemove() throws NamingException\n         assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, connObjectKeyValue));\n     }\n \n+    @Test\n+    public void createWithLinkedAccountThenUpdateUsingPutThenRemove() throws NamingException {\n+        // 1. create user with linked account\n+        UserCR userCR = UserITCase.getSample(\n+                \"linkedAccount\" + RandomStringUtils.randomNumeric(5) + \"@syncope.apache.org\");\n+        String connObjectKeyValue = \"uid=\" + userCR.getUsername() + \",ou=People,o=isp\";\n+        String privilege = applicationService.read(\"mightyApp\").getPrivileges().get(0).getKey();\n+\n+        LinkedAccountTO account = new LinkedAccountTO.Builder(RESOURCE_NAME_LDAP, connObjectKeyValue).build();\n+        account.setUsername(\"LinkedUsername\");\n+        account.getPlainAttrs().add(attr(\"surname\", \"LINKED_SURNAME\"));\n+        account.getPrivileges().add(privilege);\n+        userCR.getLinkedAccounts().add(account);\n+\n+        UserTO user = createUser(userCR).getEntity();\n+        assertNotNull(user.getKey());\n+        assertEquals(1, user.getLinkedAccounts().size());\n+        assertEquals(privilege, user.getLinkedAccounts().get(0).getPrivileges().iterator().next());\n+        assertEquals(\"LinkedUsername\", user.getLinkedAccounts().get(0).getUsername());\n+        assertEquals(\"LINKED_SURNAME\", account.getPlainAttr(\"surname\").get().getValues().get(0));\n+\n+        // 2. update linked account\n+        account.getPlainAttrs().clear();\n+        account.setUsername(\"LinkedUsernameUpdated\");\n+        account.getPlainAttrs().add(attr(\"email\", \"UPDATED_EMAIL@syncope.apache.org\"));\n+        account.getPlainAttrs().add(attr(\"surname\", \"UPDATED_SURNAME\"));\n+        user.getLinkedAccounts().clear();\n+        user.getLinkedAccounts().add(account);\n+\n+        user = updateUser(user).getEntity();\n+        assertEquals(1, user.getLinkedAccounts().size());\n+        assertEquals(\"LinkedUsernameUpdated\", user.getLinkedAccounts().get(0).getUsername());\n+        assertEquals(\"UPDATED_SURNAME\", account.getPlainAttr(\"surname\").get().getValues().get(0));\n+\n+        // 3. remove linked account from user\n+        user.getLinkedAccounts().clear();\n+        user = updateUser(user).getEntity();\n+        assertTrue(user.getLinkedAccounts().isEmpty());\n+    }\n+\n     @Test\n     public void createWithoutLinkedAccountThenAdd() throws NamingException {\n         // 1. create user without linked account\n@@ -197,6 +237,62 @@ public void createWithoutLinkedAccountThenAdd() throws NamingException {\n         assertEquals(\"LINKED_SURNAME\", ldapObj.getAttr(\"sn\").get().getValues().get(0));\n     }\n \n+    @Test\n+    public void createWithoutLinkedAccountThenAddAndUpdatePassword() throws NamingException {\n+        // 1. set the return value parameter to true\n+        confParamOps.set(SyncopeConstants.MASTER_DOMAIN, \"return.password.value\", true);\n+\n+        // 2. create user without linked account\n+        UserCR userCR = UserITCase.getSample(\n+                \"linkedAccount\" + RandomStringUtils.randomNumeric(5) + \"@syncope.apache.org\");\n+        String connObjectKeyValue = \"uid=\" + userCR.getUsername() + \",ou=People,o=isp\";\n+\n+        UserTO user = createUser(userCR).getEntity();\n+        assertNotNull(user.getKey());\n+        assertTrue(user.getLinkedAccounts().isEmpty());\n+\n+        // 3. add linked account to user without password\n+        UserUR userUR = new UserUR();\n+        userUR.setKey(user.getKey());\n+\n+        LinkedAccountTO account = new LinkedAccountTO.Builder(RESOURCE_NAME_LDAP, connObjectKeyValue).build();\n+        userUR.getLinkedAccounts().add(new LinkedAccountUR.Builder().linkedAccountTO(account).build());\n+\n+        user = updateUser(userUR).getEntity();\n+        assertEquals(1, user.getLinkedAccounts().size());\n+        assertNull(user.getLinkedAccounts().get(0).getPassword());\n+\n+        // 4. update linked account with adding a password\n+        account.setPassword(\"Password123\");\n+        userUR = new UserUR();\n+        userUR.setKey(user.getKey());\n+        userUR.getLinkedAccounts().add(new LinkedAccountUR.Builder().linkedAccountTO(account).build());\n+        user = updateUser(userUR).getEntity();\n+        assertNotNull(user.getLinkedAccounts().get(0).getPassword());\n+\n+        // 5. update linked account  password\n+        String beforeUpdatePassword = user.getLinkedAccounts().get(0).getPassword();\n+        account.setPassword(\"Password123Updated\");\n+        userUR = new UserUR();\n+        userUR.setKey(user.getKey());\n+\n+        userUR.getLinkedAccounts().add(new LinkedAccountUR.Builder().linkedAccountTO(account).build());\n+        user = updateUser(userUR).getEntity();\n+        assertNotNull(user.getLinkedAccounts().get(0).getPassword());\n+        assertNotEquals(beforeUpdatePassword, user.getLinkedAccounts().get(0).getPassword());\n+\n+        // 6. set linked account password to null\n+        account.setPassword(null);\n+        userUR = new UserUR();\n+        userUR.setKey(user.getKey());\n+\n+        userUR.getLinkedAccounts().add(new LinkedAccountUR.Builder().linkedAccountTO(account).build());\n+        user = updateUser(userUR).getEntity();\n+        assertNull(user.getLinkedAccounts().get(0).getPassword());\n+\n+        confParamOps.set(SyncopeConstants.MASTER_DOMAIN, \"return.password.value\", false);\n+    }\n+\n     @Test\n     public void push() {\n         // 0a. read configured cipher algorithm in order to be able to restore it at the end of test"}]}