{"sha":"2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhODY1YmQ1YjQwYWI0ZWE0ZTM4NDU5ZDliMDIzOThmMDZlMjdiZDI=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2017-01-23T21:51:37Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2017-01-23T22:03:21Z"},"message":"[SYNCOPE-779] Replaced date field with Kendo UI DateTimePicker","tree":{"sha":"59116c3acb1ea86e279c7b2ba28615c04b430739","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/59116c3acb1ea86e279c7b2ba28615c04b430739"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"b5391ee71491f70202c92b0b6a973ef4dc8caf03","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5391ee71491f70202c92b0b6a973ef4dc8caf03","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5391ee71491f70202c92b0b6a973ef4dc8caf03"}],"stats":{"total":732,"additions":215,"deletions":517},"files":[{"sha":"bd558f5405fe1426ed00f7ed718ab1d35635b415","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/Approval.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n@@ -104,7 +104,7 @@ public void setObject(final String object) {\n \n                     case Date:\n                         final FastDateFormat formatter = FastDateFormat.getInstance(prop.getDatePattern());\n-                        field = new DateTimeFieldPanel(\"value\", label, new PropertyModel<Date>(prop, \"value\") {\n+                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<Date>(prop, \"value\") {\n \n                             private static final long serialVersionUID = -3743432456095828573L;\n "},{"sha":"ee4303f698d1a5e4f4adbdaeb915a81c317dd330","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -258,7 +258,7 @@ private FieldPanel buildSinglePanel(\n             result = new AjaxSpinnerFieldPanel.Builder<>().build(\n                     id, fieldName, (Class<Number>) ClassUtils.resolvePrimitiveIfNecessary(type), model);\n         } else if (Date.class.equals(type)) {\n-            result = new DateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);\n+            result = new AjaxDateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);\n         } else if (type.isEnum()) {\n             result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(\n                     Arrays.asList(type.getEnumConstants()));"},{"sha":"dcdaffc120c7b6940f442d4fcadb7d3dea45a698","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -98,10 +98,10 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSch\n                         : plainSchemaTO.getConversionPattern();\n \n                 if (dataPattern.contains(\"H\")) {\n-                    panel = new DateTimeFieldPanel(\n+                    panel = new AjaxDateTimeFieldPanel(\n                             id, valueHeaderName, new Model<Date>(), dataPattern);\n                 } else {\n-                    panel = new DateTextFieldPanel(\n+                    panel = new AjaxDateFieldPanel(\n                             \"panel\", valueHeaderName, new Model<Date>(), dataPattern);\n                 }\n                 break;"},{"sha":"60747e96985366a4fa42528ee244d0bec0b4e100","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -26,8 +26,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -87,9 +87,9 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO) {\n                         : schemaTO.getConversionPattern();\n \n                 if (dataPattern.contains(\"H\")) {\n-                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n                 } else {\n-                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n                 }\n                 break;\n             case Boolean:"},{"sha":"c0efd5ad629915bf2b98f05744dd5573b4446b73","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/StartAtTogglePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.client.console.rest.ExecutionRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.PageReference;\n@@ -53,7 +53,7 @@ public StartAtTogglePanel(final WebMarkupContainer container, final PageReferenc\n         form = new Form<>(\"startAtForm\");\n         addInnerObject(form);\n \n-        final DateTimeFieldPanel startAtDate = new DateTimeFieldPanel(\n+        final AjaxDateTimeFieldPanel startAtDate = new AjaxDateTimeFieldPanel(\n                 \"startAtDate\", \"startAtDate\", startAtDateModel, SyncopeConstants.DATE_PATTERNS[3]);\n \n         startAtDate.setReadOnly(true).hideLabel();"},{"sha":"191b2a88540f72077cfa3c365d9ce66d3d610762","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDatePicker;\n+import java.util.Date;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDateFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = 1919852712185883648L;\n+\n+    public AjaxDateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = new AjaxDatePicker(\"field\", model, SyncopeConsoleSession.get().getDateFormat().getLocale());\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new AjaxDateFieldPanel(getId(), name, new Model<Date>(), fmt.getPattern());\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"04c100afe4e3be3eabb4c7c13ef2edf80722b632","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateTimeFieldPanel.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDateTimePicker;\n+import java.util.Date;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDateTimeFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    public AjaxDateTimeFieldPanel(\n+            final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = new AjaxDateTimePicker(\"field\", model, SyncopeConsoleSession.get().getDateFormat().getLocale());\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel =\n+                new AjaxDateTimeFieldPanel(getId(), name, new Model<Date>(null), fmt.getPattern());\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"a9576e28df734e1337f991827345e18512c44584","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"removed","additions":0,"deletions":112,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,112 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import java.util.Date;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.datetime.markup.html.form.DateTextField;\n-import org.apache.wicket.extensions.yui.calendar.DatePicker;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.request.Response;\n-\n-public class DateTextFieldPanel extends DateFieldPanel {\n-\n-    private static final long serialVersionUID = 1919852712185883648L;\n-\n-    public DateTextFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n-        super(id, name, model, datePattern);\n-\n-        field = DateTextField.forDatePattern(\"field\", model, datePattern);\n-\n-        if (!isReadOnly()) {\n-            field.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                private static final long serialVersionUID = -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-                    // nothing to do\n-                }\n-            });\n-        }\n-\n-        field.add(getDatePicker());\n-\n-        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n-    }\n-\n-    /**\n-     * Setup a DatePicker component.\n-     */\n-    private DatePicker getDatePicker() {\n-        final DatePicker picker = new DatePicker() {\n-\n-            private static final long serialVersionUID = 4166072895162221956L;\n-\n-            @Override\n-            protected boolean enableMonthYearSelection() {\n-                return true;\n-            }\n-\n-            @Override\n-            public void afterRender(final Component component) {\n-                Response response = component.getResponse();\n-                response.write(\"\\n<span class=\\\"yui-skin-sam\\\"><span style=\\\"\");\n-\n-                if (renderOnLoad()) {\n-                    response.write(\"display:block;\");\n-                } else {\n-                    response.write(\"display:none;\");\n-                    response.write(\"position:absolute;\");\n-                }\n-\n-                response.write(\"z-index: 99999;\\\" id=\\\"\");\n-                response.write(getEscapedComponentMarkupId());\n-                response.write(\"Dp\\\"></span>\");\n-\n-                if (renderOnLoad()) {\n-                    response.write(\"<br style=\\\"clear:left;\\\"/>\");\n-                }\n-                response.write(\"</span>\");\n-            }\n-        };\n-\n-        picker.setShowOnFieldClick(true);\n-\n-        return picker;\n-    }\n-\n-    @Override\n-    public FieldPanel<Date> clone() {\n-        final FieldPanel<Date> panel = new DateTextFieldPanel(getId(), name, new Model<Date>(), fmt.getPattern());\n-        panel.setRequired(isRequired());\n-        panel.setReadOnly(isReadOnly());\n-        panel.setTitle(title);\n-\n-        if (isRequiredLabelAdded) {\n-            panel.addRequiredLabel();\n-        }\n-\n-        return panel;\n-    }\n-}"},{"sha":"b4ff84201e8094df61b5a65cc0a2395d75faecd3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"removed","additions":0,"deletions":187,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,187 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import java.util.Calendar;\n-import java.util.Date;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.FormComponent;\n-import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.validation.IValidationError;\n-import org.apache.wicket.validation.ValidationError;\n-\n-public class DateTimeFieldPanel extends DateFieldPanel {\n-\n-    private static final long serialVersionUID = -428975732068281726L;\n-\n-    private Form<?> form = null;\n-\n-    public DateTimeFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n-        super(id, name, model, datePattern);\n-\n-        field = new DateTimePickerField(\"field\", model);\n-\n-        final Calendar cal = Calendar.getInstance();\n-\n-        field.get(\"hours\").add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @SuppressWarnings(\"deprecation\")\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                final Integer hours = ((DateTimeField) field).getHours();\n-                if (hours != null) {\n-                    cal.set(hours > 12 ? Calendar.HOUR_OF_DAY : Calendar.HOUR, hours);\n-                    field.setModelObject(cal.getTime());\n-                }\n-            }\n-        });\n-\n-        field.get(\"minutes\").add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @SuppressWarnings(\"deprecation\")\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                final Integer minutes = ((DateTimeField) field).getMinutes();\n-                if (minutes != null) {\n-                    cal.set(Calendar.MINUTE, minutes);\n-                    field.setModelObject(cal.getTime());\n-                }\n-            }\n-        });\n-\n-        field.get(\"date\").add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @SuppressWarnings(\"deprecation\")\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                final Date date = ((DateTimeField) field).getDate();\n-                if (date == null) {\n-                    field.setModelObject(null);\n-                } else {\n-                    cal.setTime(date);\n-                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())\n-                            ? Calendar.PM\n-                            : Calendar.AM);\n-                    field.setModelObject(cal.getTime());\n-                }\n-            }\n-        });\n-\n-        field.get(\"amOrPmChoice\").add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @SuppressWarnings(\"deprecation\")\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n-                        : Calendar.AM);\n-                field.setModelObject(cal.getTime());\n-            }\n-        });\n-\n-        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n-    }\n-\n-    /**\n-     * Custom form validator for registering and handling DateTimeField components that are in it.\n-     */\n-    private static class DateTimeFormValidator extends AbstractFormValidator {\n-\n-        private static final long serialVersionUID = 6842264694946633582L;\n-\n-        private FormComponent<?>[] dateTimeComponents;\n-\n-        DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n-            if (dateTimeComponent == null) {\n-                throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n-            }\n-\n-            dateTimeComponents = new FormComponent<?>[] { dateTimeComponent };\n-        }\n-\n-        @Override\n-        public FormComponent<?>[] getDependentFormComponents() {\n-            return dateTimeComponents;\n-        }\n-\n-        /**\n-         * Validation rule : all 3 fields (date,hours,minutes) must be not-null.\n-         *\n-         * @param form\n-         */\n-        @SuppressWarnings(\"deprecation\")\n-        @Override\n-        public void validate(final Form<?> form) {\n-            final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n-\n-            if (!(dateTimeField.getDate() != null && dateTimeField.getHours() != null\n-                    && dateTimeField.getMinutes() != null)) {\n-\n-                ValidationError ve = new ValidationError();\n-                ve.setVariables(DateTimeFormValidator.this.variablesMap());\n-                ve.addKey(resourceKey());\n-                dateTimeComponents[0].error((IValidationError) ve);\n-            }\n-        }\n-    }\n-\n-    @SuppressWarnings(\"rawtypes\")\n-    public FieldPanel<Date> setFormValidator(final Form<?> form) {\n-        if (field == null) {\n-            LOG.error(\"Error setting form validator\");\n-        } else {\n-            form.add(new DateTimeFormValidator(((DateTimeField) field)));\n-            this.form = form;\n-        }\n-\n-        return this;\n-    }\n-\n-    @Override\n-    public FieldPanel<Date> clone() {\n-        final FieldPanel<Date> panel = new DateTimeFieldPanel(getId(), name, new Model<Date>(null), fmt.getPattern());\n-\n-        panel.setRequired(isRequired());\n-        panel.setReadOnly(isReadOnly());\n-        panel.setTitle(title);\n-\n-        if (isRequiredLabelAdded) {\n-            panel.addRequiredLabel();\n-        }\n-\n-        if (form != null && isRequired()) {\n-            ((DateTimeFieldPanel) panel).setFormValidator(form);\n-        }\n-\n-        return panel;\n-    }\n-}"},{"sha":"ea482e4dc7eb0b3375a4dd283231c750ee086be0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimePickerField.java","status":"removed","additions":0,"deletions":89,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,89 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import java.util.Date;\n-import java.util.Map;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.yui.calendar.DatePicker;\n-import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.request.Response;\n-import org.apache.wicket.util.string.Strings;\n-\n-public class DateTimePickerField extends DateTimeField {\n-\n-    private static final long serialVersionUID = 3733881705516982654L;\n-\n-    public DateTimePickerField(final String id) {\n-        this(id, null);\n-    }\n-\n-    public DateTimePickerField(final String id, final IModel<Date> model) {\n-        super(id, model);\n-    }\n-\n-    @Override\n-    protected DatePicker newDatePicker() {\n-        return new DatePicker() {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void configure(final Map<String, Object> widgetProperties,\n-                    final IHeaderResponse response, final Map<String, Object> initVariables) {\n-                super.configure(widgetProperties, response, initVariables);\n-            }\n-\n-            @Override\n-            public void afterRender(final Component component) {\n-                Response response = component.getResponse();\n-                response.write(\"\\n<span class=\\\"yui-skin-sam\\\"><span style=\\\"\");\n-\n-                if (renderOnLoad()) {\n-                    response.write(\"display:block;\");\n-                } else {\n-                    response.write(\"display:none;\");\n-                    response.write(\"position:absolute;\");\n-                }\n-\n-                response.write(\"z-index: 99999;\\\" id=\\\"\");\n-                response.write(getEscapedComponentMarkupId());\n-                response.write(\"Dp\\\"></span><i class=\\\"glyphicon glyphicon-calendar\\\" style=\\\"margin-left: 5px;\\\"\");\n-                response.write(\" id=\\\"\");\n-                response.write(getIconId());\n-                response.write(\"\\\" \");\n-                response.write(\" alt=\\\"\");\n-                CharSequence alt = getIconAltText();\n-                response.write(Strings.escapeMarkup((alt != null) ? alt.toString() : \"\"));\n-                response.write(\"\\\" title=\\\"\");\n-                CharSequence title = getIconTitle();\n-                response.write(Strings.escapeMarkup((title != null) ? title.toString() : \"\"));\n-                response.write(\"\\\"/>\");\n-\n-                if (renderOnLoad()) {\n-                    response.write(\"<br style=\\\"clear:left;\\\"/>\");\n-                }\n-                response.write(\"</span>\");\n-            }\n-\n-        };\n-    }\n-}"},{"sha":"192654e73fb9ebc11e3eef91c3f065c04803b335","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -31,8 +31,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.EncryptedFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n@@ -221,9 +221,9 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                         : schemaTO.getConversionPattern();\n \n                 if (dataPattern.contains(\"H\")) {\n-                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n                 } else {\n-                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n                 }\n \n                 if (required) {\n@@ -339,8 +339,8 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                     FieldPanel panel = getFieldPanel(availableSchemas.get(attrTO.getSchema()));\n                     if (mode == AjaxWizard.Mode.TEMPLATE\n                             || !availableSchemas.get(attrTO.getSchema()).isMultivalue()) {\n-                        item.add(panel);\n                         panel.setNewModel(attrTO.getValues());\n+                        item.add(panel);\n                     } else {\n                         item.add(new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build("},{"sha":"084c8a96cadd5905a5b0e279407c508ff5597f43","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.html","status":"renamed","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -22,12 +22,8 @@\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n       <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n-    <span class=\"clause\">\n-      <span style=\"white-space: nowrap;\">\n-        <span>\n-          <input class=\"form-control datepicker\" type=\"text\" wicket:id=\"field\" size=\"12\" style=\"float: left\"/>\n-        </span>\n-      </span>\n-    </span>\n+    <div class=\"input-group\">\n+      <input wicket:id=\"field\" type=\"text\"></input>\n+    </div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTextFieldPanel.html"},{"sha":"1b11685af357d327d13f0356a1a3d2e1bcc9599e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateTimeFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.html?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.html"},{"sha":"9a39f4cb9f27939fa2cbee863f766fc7b9f87675","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-field.DateTimeFieldPanel$DateTimeFormValidator=Field '${label0}' must be fully valued"},{"sha":"c52483466934a5d808dc2cd04457fa757dab571b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel_it.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-field.DateTimeFieldPanel$DateTimeFormValidator=Il campo '${label0}' dev'essere completamente valorizzato"},{"sha":"95be43734c0655d1cc5eee5068e8ff3cb73a3873","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel_pt_BR.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-field.DateTimeFieldPanel$DateTimeFormValidator=Campo'${label0}' precisa ser preenchido "},{"sha":"70d9e754594deeecfeb245adea63acd60f74e79e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel_ru.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_ru.properties?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-# field.DateTimeFieldPanel$DateTimeFormValidator=Поле '${label0}' должно быть заполнено полностью\n-field.DateTimeFieldPanel$DateTimeFormValidator=\\u041f\\u043e\\u043b\\u0435 '${label0}' \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0431\\u044b\\u0442\\u044c \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e \\u043f\\u043e\\u043b\\u043d\\u043e\\u0441\\u0442\\u044c\\u044e"},{"sha":"4fe2d16137b087e15d546fb780d67db491eca563","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimePickerField.html","status":"removed","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5391ee71491f70202c92b0b6a973ef4dc8caf03/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html?ref=b5391ee71491f70202c92b0b6a973ef4dc8caf03","patch":"@@ -1,33 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span class=\"clause\">\n-      <span style=\"white-space: nowrap;\">\n-        <span class=\"pull-left\" style=\"padding-right: 5px\">\n-          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"date\" size=\"12\"/>\n-        </span>\n-        <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"hours\" size=\"2\" maxlength=\"2\"/>\n-        <span wicket:id=\"hoursSeparator\" class=\"pull-left\">:</span>\n-        <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"minutes\" size=\"2\" maxlength=\"2\"/>\n-        <select class=\"form-control input-auto-width\" wicket:id=\"amOrPmChoice\"></select>\n-      </span>\n-    </span>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"9d0f8e51ea26b2d507d607a38bdf6cbc5b7a5510","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a865bd5b40ab4ea4e38459d9b02398f06e27bd2/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=2a865bd5b40ab4ea4e38459d9b02398f06e27bd2","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n+import java.util.Calendar;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -251,4 +253,90 @@ public void checkDeleteUsrLink() {\n         TESTER.assertComponent(component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n+\n+    @Test\n+    public void editDateTimeField() {\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n+        assertNotNull(component);\n+\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n+\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:datepicker\", \"1/19/17\");\n+        formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:timepicker\", \"12:00 AM\");\n+\n+        formTester.setValue(\"view:plainSchemas:tabs:0:body:\"\n+                + \"content:schemas:8:panel:multiValueContainer:innerForm:content:view:0:panel:field\", \"1/19/17\");\n+\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n+                + \"container:content:group:beans:0:fields:1:field\", Label.class);\n+\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"username\", CONTAINER\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n+        assertNotNull(component);\n+\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        Calendar cal = Calendar.getInstance();\n+        cal.set(2017, Calendar.JANUARY, 19, 0, 0, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+\n+        TESTER.assertModelValue(\"body:content:body:container:content:\"\n+                + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+                + \"0:outer:form:content:form:view:plainSchemas:tabs:0:\"\n+                + \"body:content:schemas:1:panel:field:datepicker\", cal.getTime());\n+\n+        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:\"\n+                + \"container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:plainSchemas:\"\n+                + \"tabs:0:body:content:schemas:1:panel:field:timepicker\").getDefaultModelObjectAsString(), \"12:00 AM\");\n+\n+        TESTER.assertModelValue(\"body:content:body:container:content:\"\n+                + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:0:outer:form:content:\"\n+                + \"form:view:plainSchemas:tabs:0:body:content:schemas:8:panel:\"\n+                + \"multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n+    }\n }"}]}