{"sha":"a84a4da71543b479813839a5c7520908bd8cdec4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE4NGE0ZGE3MTU0M2I0Nzk4MTM4MzlhNWM3NTIwOTA4YmQ4Y2RlYzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-26T11:01:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-26T11:01:07Z"},"message":"[SYNCOPE-511] Now reporting root cause message\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1605732 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f356364b8bc5542570849395e6a1299f4dcc0822","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f356364b8bc5542570849395e6a1299f4dcc0822"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a84a4da71543b479813839a5c7520908bd8cdec4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a84a4da71543b479813839a5c7520908bd8cdec4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a84a4da71543b479813839a5c7520908bd8cdec4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a84a4da71543b479813839a5c7520908bd8cdec4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"00f9c7b8f270104b237e8dfcf79e94930aca200e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/00f9c7b8f270104b237e8dfcf79e94930aca200e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/00f9c7b8f270104b237e8dfcf79e94930aca200e"}],"stats":{"total":22,"additions":15,"deletions":7},"files":[{"sha":"1e7550da9c66a5f6bb46af9234224fbf1e5ba0f3","filename":"console/src/main/webapp/css/style.css","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a84a4da71543b479813839a5c7520908bd8cdec4/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a84a4da71543b479813839a5c7520908bd8cdec4/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fstyle.css?ref=a84a4da71543b479813839a5c7520908bd8cdec4","patch":"@@ -483,4 +483,10 @@ div.wicket-aa ul li.selected {\n   padding: 2px;\n   margin:0;\n }\n-\n+pre {\n+  white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n+  white-space: -pre-wrap; /* Opera */\n+  white-space: -o-pre-wrap; /* Opera */\n+  white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n+  word-wrap: break-word; /* IE 5.5+ */\n+}\n\\ No newline at end of file"},{"sha":"277e15b9c81531baded490a6838d9ff034354774","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a84a4da71543b479813839a5c7520908bd8cdec4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a84a4da71543b479813839a5c7520908bd8cdec4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=a84a4da71543b479813839a5c7520908bd8cdec4","patch":"@@ -26,7 +26,8 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.mod.UserMod;\n@@ -475,7 +476,7 @@ public Long findMatchingAttributableId(final ObjectClass objectClass, final Stri\n \n         final List<ConnectorObject> found = connector.search(objectClass,\n                 new EqualsFilter(new Name(name)), connector.getOperationOptions(\n-                attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n+                        attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", objectClass, syncTask.getResource(), name);\n@@ -593,7 +594,7 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                 resultStatus = Result.FAILURE;\n             } catch (Exception e) {\n                 result.setStatus(SyncResult.Status.FAILURE);\n-                result.setMessage(e.getMessage());\n+                result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                 LOG.error(\"Could not create {} {} \", attrUtil.getType(), delta.getUid().getUidValue(), e);\n                 output = e;\n                 resultStatus = Result.FAILURE;\n@@ -650,7 +651,8 @@ protected Map.Entry<UserTO, UserTO> updateUser(final Long id, SyncDelta delta, f\n             LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", id, e);\n \n             result.setStatus(SyncResult.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + e.getMessage());\n+            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\"\n+                    + ExceptionUtils.getRootCauseMessage(e));\n \n             updated = new WorkflowResult<Map.Entry<Long, Boolean>>(\n                     new AbstractMap.SimpleEntry<Long, Boolean>(id, false), new PropagationByResource(),\n@@ -789,7 +791,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                 resultStatus = Result.FAILURE;\n             } catch (Exception e) {\n                 result.setStatus(SyncResult.Status.FAILURE);\n-                result.setMessage(e.getMessage());\n+                result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                 LOG.error(\"Could not update {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n                 output = e;\n                 resultStatus = Result.FAILURE;\n@@ -886,7 +888,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                         resultStatus = Result.SUCCESS;\n                     } catch (Exception e) {\n                         result.setStatus(SyncResult.Status.FAILURE);\n-                        result.setMessage(e.getMessage());\n+                        result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not delete {} {}\", attrUtil.getType(), id, e);\n                         output = e;\n                     }"}]}